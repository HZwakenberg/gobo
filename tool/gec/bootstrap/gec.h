#define GE_USE_THREADS

/*
	description:

		"C declarations for the Gobo Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2005-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_EIFFEL_H
#define GE_EIFFEL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Class name mapping as defined in the FreeELKS library. */
#ifndef EIF_INTEGER
#define EIF_INTEGER EIF_INTEGER_32
#endif
#ifndef EIF_CHARACTER
#define EIF_CHARACTER EIF_CHARACTER_8
#endif
#ifndef EIF_REAL
#define EIF_REAL EIF_REAL_32
#endif
#ifndef EIF_DOUBLE
#define EIF_DOUBLE EIF_REAL_64
#endif
#ifndef GE_ms
#if EIF_CHARACTER == EIF_CHARACTER_8
#define GE_ms(s,c) GE_ms8((s),(c))
#else
#define GE_ms(s,c) GE_ms32((s),(c))
#endif
#endif

#if defined(__USE_POSIX) || defined(__unix__) || defined(_POSIX_C_SOURCE)
#include <unistd.h>
#endif
#if !defined(WIN32) && \
	(defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER) || \
	defined(__MINGW32__))
#define WIN32 1
#endif
#ifdef WIN32
#define EIF_WINDOWS 1
#define GE_WINDOWS
#define WIN32_LEAN_AND_MEAN 1 /* Needed when using winsock2.h. */
#include <windows.h>
#endif

/* See https://sourceforge.net/p/predef/wiki/OperatingSystems/ */
#if (defined(macintosh) || defined(Macintosh))
#define EIF_MAC 1
#define EIF_MACOSX 1
#define GE_MACOS
#endif
#if (defined(__APPLE__) && defined(__MACH__))
/* Apparently ISE does not define EIF_MASOSX for Mac OS X >=10.4 (see EXECUTION_ENVIRONMENT.available_cpu_count) */
#define EIF_MAC 1
#define GE_MACOS
#endif

#if (defined(VMS) || defined(__VMS))
#define EIF_VMS 1
#endif

#if (defined(__VXWORKS__) || defined(__vxworks))
#define EIF_VXWORKS 1
#endif

#define BYTEORDER 0x1234

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>
#include <stddef.h>

#define EIF_OS_WINNT 	1
#define EIF_OS_LINUX 	2
#define EIF_OS_DARWIN 	4
#define EIF_OS_VXWORKS	11
#define EIF_OS_VMS	12

/* Platform definition */
/* Unix definition */
#define EIF_IS_UNIX EIF_TRUE
#define EIF_OS EIF_OS_LINUX
/* Windows definition */
#ifdef EIF_WINDOWS
#define EIF_IS_WINDOWS EIF_TRUE
#undef EIF_OS
#define EIF_OS EIF_OS_WINNT
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_WINDOWS EIF_FALSE
#endif
/* VMS definition */
#ifdef EIF_VMS
#define EIF_IS_VMS EIF_TRUE
#undef EIF_OS
#define EIF_OS EIF_OS_VMS
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VMS EIF_FALSE
#endif
/* MAC definition */
#ifdef EIF_MAC
#define EIF_IS_MAC EIF_TRUE
#undef EIF_OS
#define EIF_OS EIF_OS_DARWIN
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_MAC EIF_FALSE
#endif
/* VxWorks definition */
#ifdef EIF_VXWORKS
#define EIF_IS_VXWORKS EIF_TRUE
#undef EIF_OS
#define EIF_OS EIF_OS_VXWORKS
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VXWORKS EIF_FALSE
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _MSC_VER /* MSVC */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#include <inttypes.h>
#endif
#endif

/* Portable integer pointers */
#ifdef EIF_WINDOWS
#ifndef _INTPTR_T_DEFINED
#define _INTPTR_T_DEFINED
#ifdef _WIN64
typedef __int64 intptr_t;
#else
typedef int intptr_t;
#endif
#endif
#ifndef _UINTPTR_T_DEFINED
#define _UINTPTR_T_DEFINED
#ifdef _WIN64
typedef unsigned __int64 uintptr_t;
#else
typedef unsigned int uintptr_t;
#endif
#endif
#endif

/* C type for underlying integer type identifying object's dynamic type. */
typedef uint16_t EIF_TYPE_INDEX;

/*
 * Abstraction representing an Eiffel type.
 * It is made of a compiler type-id,
 * and of some annotations (attached/detachable/separate/variant/frozen).
 */
typedef struct eif_type {
	EIF_TYPE_INDEX id;
	EIF_TYPE_INDEX annotations;
} EIF_TYPE;

/*
 * Since EIF_TYPE and EIF_ENCODED_TYPE have the same size, the encoded version
 * is basically a memcpy version of the EIF_TYPE representation.
 * It is used to provide backward compatibility to most Eiffel and
 * C APIs manipulating types as an INTEGER.
 */
typedef int32_t EIF_ENCODED_TYPE;
typedef EIF_ENCODED_TYPE EIF_TYPE_ID;
#define EIF_NO_TYPE (EIF_TYPE_ID)(-1)

/* SCOOP */
#ifdef GE_USE_SCOOP
typedef struct GE_scoop_region_struct GE_scoop_region;
#endif

/* Basic Eiffel types */
typedef char EIF_BOOLEAN;
typedef unsigned char EIF_CHARACTER_8;
typedef uint32_t EIF_CHARACTER_32;
typedef int8_t EIF_INTEGER_8;
typedef int16_t EIF_INTEGER_16;
typedef int32_t EIF_INTEGER_32;
typedef int64_t EIF_INTEGER_64;
typedef uint8_t EIF_NATURAL_8;
typedef uint16_t EIF_NATURAL_16;
typedef uint32_t EIF_NATURAL_32;
typedef uint64_t EIF_NATURAL_64;
typedef void* EIF_POINTER;
typedef float EIF_REAL_32;
typedef double EIF_REAL_64;
#ifdef GE_USE_SCOOP
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; GE_scoop_region* region;} EIF_ANY;
typedef EIF_ANY* EIF_REFERENCE;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; GE_scoop_region* region; EIF_REFERENCE area; EIF_INTEGER count;} EIF_STRING;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; GE_scoop_region* region; uint32_t offset; EIF_INTEGER count; EIF_INTEGER capacity;} EIF_SPECIAL;
#else
typedef struct {EIF_TYPE_INDEX id; uint16_t flags;} EIF_ANY;
typedef EIF_ANY* EIF_REFERENCE;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; EIF_REFERENCE area; EIF_INTEGER count;} EIF_STRING;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; uint32_t offset; EIF_INTEGER count; EIF_INTEGER capacity;} EIF_SPECIAL;
#endif

/* SCOOP */
typedef uint16_t EIF_SCP_PID; /* Processor ID */
#ifdef GE_USE_SCOOP
#define RTS_PID(o) (EIF_SCP_PID)(intptr_t)(((EIF_REFERENCE)(o))->region)
#else
#define RTS_PID(o) (EIF_SCP_PID)0
#endif

#ifdef EIF_WINDOWS
typedef wchar_t EIF_NATIVE_CHAR;
#else
typedef char EIF_NATIVE_CHAR;
#endif
typedef EIF_NATIVE_CHAR* EIF_FILENAME;

#define EIF_VOID ((EIF_REFERENCE)0)
#define EIF_FALSE ((EIF_BOOLEAN)'\0')
#define EIF_TRUE ((EIF_BOOLEAN)'\1')
#define EIF_TEST(x) ((x) ? EIF_TRUE : EIF_FALSE)

#define EIF_IS_WORKBENCH EIF_FALSE
#define EIF_POINTER_DISPLAY "lX"

/* For INTEGER and NATURAL manifest constants */
#define GE_int8(x) x
#define GE_nat8(x) x
#define GE_int16(x) x
#define GE_nat16(x) x
#define GE_int32(x) x##L
#define GE_nat32(x) x##U
#if defined (_MSC_VER) && (_MSC_VER < 1400) /* MSC older than v8 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#elif defined(__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#else /* ISO C 99 */
#define GE_int64(x) x##LL
#define GE_nat64(x) x##ULL
#endif
#ifdef __LCC__
/* lcc-win32 reports a constant overflow for -21474836478. */
#define GE_min_int32 (-GE_int32(2147483647)-GE_int32(1))
#else
#define GE_min_int32 GE_int32(-2147483648)
#endif
#define GE_max_int32 GE_int32(2147483647)
#if defined(__LCC__) || defined(__GNUC__) || defined(__MINGW32__)
/* lcc-win32 reports a constant overflow for -9223372036854775808. */
/* gcc and mingw-win64 warn that integer constant is so large that it is unsigned. */
#define GE_min_int64 (-GE_int64(9223372036854775807)-GE_int64(1))
#else
#define GE_min_int64 GE_int64(-9223372036854775808)
#endif
#if defined(__LCC__) && !defined(_WIN64)
/* lcc-win32 does not consider 64 bit constants as constants in case statement. */
#define GE_case_int64(x) ((int32_t)(x))
#define GE_case_nat64(x) ((uint32_t)(x))
#else
#define GE_case_int64(x) (x)
#define GE_case_nat64(x) (x)
#endif

#ifdef _WIN64
#define GE_IS_64_BITS EIF_TRUE
#else
#define GE_IS_64_BITS EIF_TEST(sizeof(void*)==8)
#endif

/* Posix threads */
#if !defined(EIF_WINDOWS)
#define GE_USE_POSIX_THREADS
#endif

#ifdef _MSC_VER /* MSVC */
/* MSVC does not support ISO C 99's 'snprintf' from stdio.h */
#define snprintf(a,b,c,d) sprintf(a,c,d)
#endif

/*
 * Gobo compiler version.
 * Starts with 6080 (looks like GOBO) followed by 5 digits.
 */
#define GE_compiler_version() 608000001

/*
	Interoperability with ISE.
*/
#define RTI64C(x) GE_int64(x)
#define RTU64C(x) GE_nat64(x)
#define EIF_OBJECT EIF_REFERENCE
#define EIF_OBJ EIF_OBJECT
#define OVERHEAD sizeof(EIF_ANY)
/* Function pointer call to make sure all arguments are correctly pushed onto stack. */
/* FUNCTION_CAST is for standard C calls. */
/* FUNCTION_CAST_TYPE is for non-standard C calls. */
#define FUNCTION_CAST(r_type,arg_types) (r_type (*) arg_types)
#define FUNCTION_CAST_TYPE(r_type,call_type,arg_types) (r_type (call_type *) arg_types)
#define SIGBLOCK
#define SIGRESUME
#define rt_public				/* default C scope */
#define rt_private static		/* static outside a block means private */
#define rt_shared				/* data shared between modules, but not public */
typedef intptr_t rt_int_ptr;
typedef uintptr_t rt_uint_ptr;
#define RTMS(s) GE_str8(s)
#define RTMS_EX(s,c) GE_ms8((s),(c))

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C types used to implement class THREAD and related threading facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2017-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_THREAD_TYPES_H
#define GE_THREAD_TYPES_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef GE_USE_THREADS

#define EIF_THREADS
#ifdef GE_USE_POSIX_THREADS
#define EIF_POSIX_THREADS
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef GE_USE_POSIX_THREADS
#include <pthread.h>
#include <semaphore.h>
#elif defined EIF_WINDOWS
#include <windows.h>
#include <process.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef GE_USE_POSIX_THREADS

#define EIF_THR_TYPE            pthread_t
#define EIF_CS_TYPE				pthread_mutex_t
#define EIF_MUTEX_TYPE          pthread_mutex_t
#define EIF_COND_TYPE			pthread_cond_t
#define EIF_SEM_TYPE			sem_t
#define EIF_RWL_TYPE			pthread_rwlock_t

#elif defined EIF_WINDOWS

#define EIF_THR_TYPE            HANDLE
#define EIF_CS_TYPE				CRITICAL_SECTION
#define EIF_MUTEX_TYPE          CRITICAL_SECTION
#define EIF_SEM_TYPE            HANDLE

typedef struct {
		/* Semaphore used to queue up threads waiting for the condition to become signaled. */
	EIF_SEM_TYPE* semaphore;
		/* Serialize access to fields of Current. */
	EIF_CS_TYPE* csection;
		/* Number of waiters. */
	unsigned long num_waiting;
		/* Number of already awoken. */
	unsigned long num_wake;
		/* Number of time we signaled/broadcasted for improving fairness.
		 * This ensures one thread won't steal wakeups from other threads in queue. */
	unsigned long generation;
} EIF_COND_TYPE;

typedef struct {
	EIF_MUTEX_TYPE* m; /* Internal monitor lock. */
	int rwlock; /* >0 = # readers, <0 = writer, 0 = none */
	EIF_COND_TYPE* readers_ok; /* Start waiting readers. */
	unsigned int waiting_writers; /* Number of waiting writers. */
	EIF_COND_TYPE* writers_ok; /* Start a waiting writer. */
} EIF_RWL_TYPE;

#endif

typedef struct {
	unsigned int priority;
	unsigned int stack_size;
} EIF_THR_ATTR_TYPE;

/* Struct for thread context. */
typedef struct GE_thread_context_struct GE_thread_context;
struct GE_thread_context_struct {
	EIF_THR_TYPE thread_id; /* Thread identifier for associated thread. */
	EIF_REFERENCE current; /* Eiffel root object. */
	void (*routine)(EIF_REFERENCE, EIF_INTEGER); /* Eiffel routine. */
	void (*set_terminated)(EIF_REFERENCE, EIF_BOOLEAN); /* Eiffel routine to set {THREAD}.terminated. */
	unsigned int initial_priority; /* Initial priority. */
	EIF_THR_TYPE last_thread_id; /* Last thread created from current thread. */
	volatile int n_children; /* Number of direct thread children. */
	EIF_MUTEX_TYPE* children_mutex; /* Mutex to wait for thread children. */
	EIF_COND_TYPE* children_cond; /* Condition variable to wait for thread children. */
	GE_thread_context* parent_context;	/* Context of parent thread, NULL if main thread. */
	int thread_exiting; /* Has current thread already called GE_thread_exit? */
	volatile int is_alive; /* Is current thread still alive? */
	void* wel_per_thread_data; /* WEL private data */
#ifdef GE_USE_SCOOP
	int is_scoop_processor; /* Is current thread a SCOOP processor? */
#endif
};

#ifdef __cplusplus
}
#endif

#endif
#endif

/*
	description:

		"C functions used to implement once features"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_ONCE_H
#define GE_ONCE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Struct to keep track of the call status
 * and results of once features.
 */
typedef struct {
	EIF_BOOLEAN* boolean_value;
	EIF_REFERENCE* boolean_exception;
	unsigned char* boolean_status;
	unsigned int boolean_count;
	EIF_CHARACTER_8* character_8_value;
	EIF_REFERENCE* character_8_exception;
	unsigned char* character_8_status;
	unsigned int character_8_count;
	EIF_CHARACTER_32* character_32_value;
	EIF_REFERENCE* character_32_exception;
	unsigned char* character_32_status;
	unsigned int character_32_count;
	EIF_INTEGER_8* integer_8_value;
	EIF_REFERENCE* integer_8_exception;
	unsigned char* integer_8_status;
	unsigned int integer_8_count;
	EIF_INTEGER_16* integer_16_value;
	EIF_REFERENCE* integer_16_exception;
	unsigned char* integer_16_status;
	unsigned int integer_16_count;
	EIF_INTEGER_32* integer_32_value;
	EIF_REFERENCE* integer_32_exception;
	unsigned char* integer_32_status;
	unsigned int integer_32_count;
	EIF_INTEGER_64* integer_64_value;
	EIF_REFERENCE* integer_64_exception;
	unsigned char* integer_64_status;
	unsigned int integer_64_count;
	EIF_NATURAL_8* natural_8_value;
	EIF_REFERENCE* natural_8_exception;
	unsigned char* natural_8_status;
	unsigned int natural_8_count;
	EIF_NATURAL_16* natural_16_value;
	EIF_REFERENCE* natural_16_exception;
	unsigned char* natural_16_status;
	unsigned int natural_16_count;
	EIF_NATURAL_32* natural_32_value;
	EIF_REFERENCE* natural_32_exception;
	unsigned char* natural_32_status;
	unsigned int natural_32_count;
	EIF_NATURAL_64* natural_64_value;
	EIF_REFERENCE* natural_64_exception;
	unsigned char* natural_64_status;
	unsigned int natural_64_count;
	EIF_POINTER* pointer_value;
	EIF_REFERENCE* pointer_exception;
	unsigned char* pointer_status;
	unsigned int pointer_count;
	EIF_REAL_32* real_32_value;
	EIF_REFERENCE* real_32_exception;
	unsigned char* real_32_status;
	unsigned int real_32_count;
	EIF_REAL_64* real_64_value;
	EIF_REFERENCE* real_64_exception;
	unsigned char* real_64_status;
	unsigned int real_64_count;
	EIF_REFERENCE* reference_value;
	EIF_REFERENCE* reference_exception;
	unsigned char* reference_status;
	unsigned int reference_count;
	EIF_REFERENCE* procedure_exception;
	unsigned char* procedure_status;
	unsigned int procedure_count;
} GE_onces;

/*
 * Variable to keep track of the call status
 * and results of once-per-process features.
 */
extern GE_onces* GE_process_onces;

/*
 * Initialize `GE_process_onces'.
 */
extern void GE_init_onces(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Create a new 'GE_onces' struct which can deal with the
 * numbers of once features passed as argument.
 */
extern GE_onces* GE_new_onces(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Free memory allocated by `a_onces'.
 */
extern void GE_free_onces(GE_onces* a_onces);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class EXCEPTION"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_EXCEPTION_H
#define GE_EXCEPTION_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_ONCE_H
#include "ge_once.h"
#endif
#ifdef GE_USE_THREADS
#ifndef GE_THREAD_TYPES_H
#include "ge_thread_types.h"
#endif
#endif

#include <setjmp.h>

/*
 * On Linux glibc systems, we need to use sig* versions of jmp_buf,
 * setjmp and longjmp to preserve the signal handling context.
 * One way to detect this is if _SIGSET_H_types has
 * been defined in /usr/include/setjmp.h.
 * NOTE: ANSI only recognizes the non-sig versions.
 */
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#define GE_jmp_buf sigjmp_buf
#define GE_setjmp(x) sigsetjmp((x),1)
#define GE_longjmp(x,y) siglongjmp((x),(y))
#else
#define GE_jmp_buf jmp_buf
#define GE_setjmp(x) setjmp((x))
#define GE_longjmp(x,y) longjmp((x),(y))
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Predefined exception codes.
 */
#define GE_EX_VOID		1			/* Feature applied to void reference */
#define GE_EX_MEM		2			/* No more memory */
#define GE_EX_PRE		3			/* Pre-condition violated */
#define GE_EX_POST		4			/* Post-condition violated */
#define GE_EX_FLOAT		5			/* Floating point exception (signal SIGFPE) */
#define GE_EX_CINV		6			/* Class invariant violated */
#define GE_EX_CHECK		7			/* Check instruction violated */
#define GE_EX_FAIL		8			/* Routine failure */
#define GE_EX_WHEN		9			/* Unmatched inspect value */
#define GE_EX_VAR		10			/* Non-decreasing loop variant */
#define GE_EX_LINV		11			/* Loop invariant violated */
#define GE_EX_SIG		12			/* Operating system signal */
#define GE_EX_BYE		13			/* Eiffel run-time panic */
#define GE_EX_RESC		14			/* Exception in rescue clause */
#define GE_EX_OMEM		15			/* Out of memory (cannot be ignored) */
#define GE_EX_RES		16			/* Resumption failed (retry did not succeed) */
#define GE_EX_CDEF		17			/* Create on deferred */
#define GE_EX_EXT		18			/* External event */
#define GE_EX_VEXP		19			/* Void assigned to expanded */
#define GE_EX_HDLR		20			/* Exception in signal handler */
#define GE_EX_IO		21			/* I/O error */
#define GE_EX_SYS		22			/* Operating system error */
#define GE_EX_RETR		23			/* Retrieval error */
#define GE_EX_PROG		24			/* Developer exception */
#define GE_EX_FATAL		25			/* Eiffel run-time fatal error */
#define GE_EX_DOL		26			/* $ applied to melted feature */
#define GE_EX_ISE_IO	27			/* I/O error raised by the ISE Eiffel runtime */
#define GE_EX_COM		28			/* COM error raised by EiffelCOM runtime */
#define GE_EX_RT_CHECK	29			/* Runtime check error such as out-of-bound array access */
#define GE_EX_OLD		30			/* Old violation */
#define GE_EX_SEL		31			/* Serialization failure */
#define GE_EX_DIRTY		32			/* SCOOP processor dirty exception. */
#define GE_EX_NEX		32			/* Number of internal exceptions */

/*
 * String buffer used to build the exception trace.
 */
typedef struct GE_exception_trace_buffer_struct GE_exception_trace_buffer;
struct GE_exception_trace_buffer_struct {
	char* area;
	uint32_t count;
	uint32_t capacity;
};

/*
 * Information about the feature being executed.
 */
typedef struct GE_call_struct GE_call;
struct GE_call_struct {
#ifdef GE_USE_CURRENT_IN_EXCEPTION_TRACE
	void* object; /* Current object */
#endif
	const char* class_name;
	const char* feature_name;
	GE_call* caller; /* previous feature in the call chain */
};

/*
 * Context of features containing a rescue clause.
 */
typedef struct GE_rescue_struct GE_rescue;
struct GE_rescue_struct {
	GE_jmp_buf jb;
	GE_rescue* previous; /* previous context in the call chain */
};

/*
 * Information about the execution context.
 * One such struct per thread.
 */
typedef struct GE_context_struct GE_context;
struct GE_context_struct {
	GE_call* call; /* Call stack */
	uint32_t in_assertion; /* Is an assertion evaluated? */
	GE_rescue* last_rescue; /* Context of last feature entered containing a rescue clause */
	uint32_t in_rescue; /* Number of rescue clauses currently being executed */
	EIF_REFERENCE exception_manager; /* Exception manager */
	char raising_exception; /* Is an exception currently being raised? */
	char exception_trace_enabled; /* Should exception trace be displayed? */
	long exception_code; /* Code of the exception currently being raised, 0 otherwise */
	const char* exception_tag; /* Tag of the exception currently being raised, NULL otherwise */
	GE_exception_trace_buffer exception_trace_buffer; /* String buffer used to build the exception trace */
	GE_exception_trace_buffer last_exception_trace; /* Last non-routine-failure exception trace */
	int pre_ecma_mapping_status; /* Do we map old names to new name? (i.e. STRING to STRING_8, INTEGER to INTEGER_32, ...). */
#ifdef GE_USE_THREADS
	GE_thread_context* thread; /* Thread context */
	GE_onces* process_onces; /* Cache for status and results of onces-per-process */
	GE_onces* thread_onces; /* Status and results of onces-per-thread */
#endif
#ifdef GE_USE_SCOOP
	GE_scoop_region* region; /* SCOOP region whose processor is executing the current code */
	volatile char is_region_alive;
#endif
};
#define TC GE_context

/*
 * Default initialization for `GE_context'.
 */
extern GE_context GE_default_context;

/*
 * Execution context of main thread.
 */
extern GE_context* GE_main_context;

/*
 * Execution context of current thread.
 */
extern GE_context* GE_current_context(void);

/*
 * Initialization of exception handling.
 */
extern void GE_init_exception(GE_context* context);

/*
 * Free memory allocated in `a_context' for exception handling.
 */
extern void GE_free_exception(GE_context* a_context);

/*
 * Pointer to function to create a new exception manager object
 * (of type ISE_EXCEPTION_MANAGER).
 */
extern EIF_REFERENCE (*GE_new_exception_manager)(GE_context*, EIF_BOOLEAN);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.init_exception_manager.
 */
extern void (*GE_init_exception_manager)(GE_context*);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.last_exception.
 */
extern EIF_REFERENCE (*GE_last_exception)(GE_context*);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.once_raise.
 */
extern void (*GE_once_raise)(GE_context*, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.set_exception_data.
 */
extern void (*GE_set_exception_data)(GE_context*, EIF_INTEGER_32, EIF_BOOLEAN, EIF_INTEGER_32, EIF_INTEGER_32, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_INTEGER_32, EIF_BOOLEAN);

/*
 * Exception tag associated with `a_code'.
 */
extern char* GE_exception_tag(long a_code);

/*
 * Append `a_string' to `a_trace'.
 * Resize area if needed.
 */
extern void GE_append_to_exception_trace_buffer(GE_exception_trace_buffer* a_trace, char* a_string);

/*
 * Wipe out `a_trace'.
 */
extern void GE_wipe_out_exception_trace_buffer(GE_exception_trace_buffer* a_trace);

/*
 * Raise an exception with code `a_code'.
 */
extern void GE_raise(long a_code);

/*
 * Raise an exception with code `a_code' and message `msg'.
 */
extern void GE_raise_with_message(long a_code, const char* msg);

/*
 * Raise an exception from EXCEPTION_MANAGER.
 */
extern void GE_developer_raise(long a_code, char* a_meaning, char* a_message);

/*
 * Raise exception which was raised the first time a once routine
 * was executed when executing it again.
 */
extern void GE_raise_once_exception(GE_context* a_context, EIF_REFERENCE a_exception);

/*
 * Exception, if any, which was last raised in `a_context'.
 */
extern EIF_REFERENCE GE_last_exception_raised(GE_context* a_context);

/*
 * Jump to execute the rescue of the last routine with a rescue
 * in the call stack.
 */
extern void GE_jump_to_last_rescue(GE_context* a_context);

/*
 * Set `in_assertion' to 'not b'.
 * Return the opposite of previous value.
 */
extern EIF_BOOLEAN GE_check_assert(EIF_BOOLEAN b);

/*
 * Check whether the type id of `obj' is not in `type_ids'.
 * If it is, then raise a CAT-call exception. Don't do anything if `obj' is Void.
 * `nb' is the number of ids in `type_ids' and is expected to be >0.
 * `type_ids' is sorted in increasing order.
 * Return `obj'.
 */
#define GE_catcall(obj,type_ids,nb) GE_check_catcall((obj),(type_ids),(nb))
extern EIF_REFERENCE GE_check_catcall(EIF_REFERENCE obj, EIF_TYPE_INDEX type_ids[], int nb);

/*
 * Check whether `obj' is Void.
 * If it is, then raise a call-on-void-target exception.
 * If `i' is provided, then include it in the message displayed
 * in the console to make debugging easier when `obj' is Void.
 * Return `obj'.
 */
#define GE_void(obj) ((obj)?(obj):GE_check_void(obj))
extern EIF_REFERENCE GE_check_void(EIF_REFERENCE obj);
#ifdef GE_DEBUG
#define GE_void2(obj,i) ((obj)?(obj):GE_check_void2((obj),(i)))
extern EIF_REFERENCE GE_check_void2(EIF_REFERENCE obj, EIF_INTEGER i);
#else
#define GE_void2(obj,i) ((obj)?(obj):GE_check_void(obj))
#endif

/*
 * Check whether `ptr' is a null pointer.
 * If it is, then raise a no-more-memory exception.
 * Return `ptr'.
 */
#define GE_null(ptr) GE_check_null(ptr)
extern void* GE_check_null(void* ptr);

#ifdef EIF_WINDOWS
/*
 * Set default exception handler.
 */
extern void GE_set_windows_exception_filter(void);
#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class THREAD and related threading facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2023, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_THREAD_H
#define GE_THREAD_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef GE_USE_THREADS

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_THREAD_TYPES_H
#include "ge_thread_types.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef GE_USE_POSIX_THREADS
#include <unistd.h>
#endif

#ifdef GE_USE_POSIX_THREADS
#	define EIF_TSD_VAL_TYPE        void*
#	define EIF_TSD_TYPE            pthread_key_t
#	define EIF_TSD_CREATE(key,msg) \
		if (pthread_key_create(&(key),NULL)) \
			GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_SET(key,val,msg) \
		if (pthread_setspecific((key), (EIF_TSD_VAL_TYPE)(val))) \
			GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_GET0(val_type,key,val) (val = pthread_getspecific(key))
#	define EIF_TSD_GET(val_type,key,val,msg) \
		if (EIF_TSD_GET0(val_type,key,val) == (void*) 0) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_DESTROY(key,msg) if (pthread_key_delete(key)) GE_raise_with_message(GE_EX_EXT, msg)
#elif defined EIF_WINDOWS
#	define EIF_TSD_VAL_TYPE        LPVOID
#	define EIF_TSD_TYPE            DWORD
#	define EIF_TSD_CREATE(key,msg) \
		if ((key=TlsAlloc())==TLS_OUT_OF_INDEXES) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_SET(key,val,msg) \
		if (!TlsSetValue((key),(EIF_TSD_VAL_TYPE)(val))) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_GET0(val_type,key,val) \
		val=(val_type) TlsGetValue(key)
#	define EIF_TSD_GET(val_type,key,val,msg) \
		EIF_TSD_GET0(val_type,key,val); \
		if (GetLastError() != NO_ERROR) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_DESTROY(key,msg) \
		if (!TlsFree(key)) GE_raise_with_message(GE_EX_EXT, msg)
#endif

/* Thread priority levels. */
#define EIF_MIN_THR_PRIORITY			0L
#define EIF_BELOW_NORMAL_THR_PRIORITY	100L
#define EIF_DEFAULT_THR_PRIORITY		127L
#define EIF_ABOVE_NORMAL_THR_PRIORITY	154L
#define EIF_MAX_THR_PRIORITY			255L

/*
 * Mutexes used to protect the calls to once-per-process features.
 */
typedef struct {
	EIF_POINTER* boolean_mutex;
	EIF_POINTER* character_8_mutex;
	EIF_POINTER* character_32_mutex;
	EIF_POINTER* integer_8_mutex;
	EIF_POINTER* integer_16_mutex;
	EIF_POINTER* integer_32_mutex;
	EIF_POINTER* integer_64_mutex;
	EIF_POINTER* natural_8_mutex;
	EIF_POINTER* natural_16_mutex;
	EIF_POINTER* natural_32_mutex;
	EIF_POINTER* natural_64_mutex;
	EIF_POINTER* pointer_mutex;
	EIF_POINTER* real_32_mutex;
	EIF_POINTER* real_64_mutex;
	EIF_POINTER* reference_mutex;
	EIF_POINTER* procedure_mutex;
} GE_once_mutexes;

/*
 * Mutexes used to protect the calls to once-per-process features.
 */
extern GE_once_mutexes* GE_process_once_mutexes;

/*
 * Numbers of once-per-thread features.
 */
extern unsigned int GE_thread_onces_boolean_count;
extern unsigned int GE_thread_onces_character_8_count;
extern unsigned int GE_thread_onces_character_32_count;
extern unsigned int GE_thread_onces_integer_8_count;
extern unsigned int GE_thread_onces_integer_16_count;
extern unsigned int GE_thread_onces_integer_32_count;
extern unsigned int GE_thread_onces_integer_64_count;
extern unsigned int GE_thread_onces_natural_8_count;
extern unsigned int GE_thread_onces_natural_16_count;
extern unsigned int GE_thread_onces_natural_32_count;
extern unsigned int GE_thread_onces_natural_64_count;
extern unsigned int GE_thread_onces_pointer_count;
extern unsigned int GE_thread_onces_real_32_count;
extern unsigned int GE_thread_onces_real_64_count;
extern unsigned int GE_thread_onces_reference_count;
extern unsigned int GE_thread_onces_procedure_count;

/*
 * Create a new 'GE_once_mutexes' struct which can deal with the
 * numbers of once features passed as argument.
 */
extern GE_once_mutexes* GE_new_once_mutexes(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Keep track of the numbers of once-per-thread features.
 */
extern void GE_thread_onces_set_counts(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Initialize `process_onces' and `thread_onces' in `a_context'.
 */
extern void GE_thread_init_onces(GE_context* a_context);

/* Global mutex to protect creation of once-per-object data. */
extern EIF_POINTER GE_once_per_object_data_mutex;

/*
 * Initialize data to handle threads.
 * To be called at the beginning of the main function
 * on the main thread.
 */
extern void GE_init_thread(GE_context* a_context);

/*
 * Create a new thread with attributes `attr' and execute
 * Eiffel routine `routine' on object `current'.
 */
extern void GE_thread_create_with_attr(EIF_REFERENCE current, void (*routine)(EIF_REFERENCE, EIF_INTEGER), void (*set_terminated)(EIF_REFERENCE,EIF_BOOLEAN), EIF_THR_ATTR_TYPE* attr, int is_scoop_processor);

/*
 * Execution context of current thread.
 */
extern GE_context* GE_thread_current_context(void);

/*
 * Thead ID of current thread.
 */
extern EIF_POINTER GE_thread_id(void);

/*
 * Thread ID of last thread created from current thread.
 */
extern EIF_POINTER GE_last_thread_created(void);

#ifdef EIF_WINDOWS
/*
 * Support for Windows GUI that requires that all GUI operations are performed in the same thread.
 * Allocate new structure of the given size `a_size', assign it to `wel_per_thread_data'.
 * Return newly allocated memory block. It will be freed automatically on thread termination.
 */
extern void* GE_thread_create_wel_per_thread_data(size_t a_size);
#endif

/*
 * Waits until a child thread sets `terminated' from `obj' to True,
 * which means it is terminated. The calling thread must be the
 * direct parent of the thread, or the function might loop indefinitely.
 */
extern void GE_thread_wait(EIF_REFERENCE obj, EIF_BOOLEAN (*get_terminated)(EIF_REFERENCE));

/*
 * Waits until a child thread sets `terminated' from `obj' to True,
 * which means it is terminated, or reaching `a_timeout_ms'.
 * The calling thread must be the direct parent of the thread,
 * or the function might loop indefinitely.
 */
extern EIF_BOOLEAN GE_thread_wait_with_timeout(EIF_REFERENCE obj, EIF_BOOLEAN (*get_terminated)(EIF_REFERENCE), EIF_NATURAL_64 a_timeout_ms);

/*
 * Yields execution to other threads.
 */
extern void GE_thread_yield(void);

/*
 * The calling thread waits for all other children threads to terminate.
 */
extern void GE_thread_join_all(void);

/*
 * Function called to terminate a thread launched by Eiffel with `GE_thread_create_with_attr'.
 * This function must be called from the thread itself (not the parent).
 */
extern void GE_thread_exit(void);

/*
 * Default thread priority level.
 */
extern EIF_INTEGER GE_thread_default_priority(void);

/*
 * Minimum thread priority level.
 */
extern EIF_INTEGER GE_thread_min_priority(void);

/*
 * Maximum thread priority level.
 */
extern EIF_INTEGER GE_thread_max_priority(void);

/*
 * Create a new mutex.
 */
extern EIF_POINTER GE_mutex_create(void);

/*
 * Lock mutex.
 */
extern void GE_mutex_lock(EIF_POINTER a_mutex);

/*
 * Try to lock mutex. Return True on success.
 */
extern EIF_BOOLEAN GE_mutex_try_lock(EIF_POINTER a_mutex);

/*
 * Unlock mutex.
 */
extern void GE_mutex_unlock(EIF_POINTER a_mutex);

/*
 * Destroy and free all resources used by mutex.
 */
extern void GE_mutex_destroy(EIF_POINTER a_mutex);

/*
 * Create a new semaphore allowing `a_count' threads
 * to go into a critical section.
 */
extern EIF_POINTER GE_semaphore_create(EIF_INTEGER a_count);

/*
 * Decrement semaphore count, waiting if necessary
 * until that becomes possible.
 */
extern void GE_semaphore_wait(EIF_POINTER a_semaphore);

/*
 * Has client been successful in decrementing semaphore
 * count without waiting?
 */
extern EIF_BOOLEAN GE_semaphore_try_wait(EIF_POINTER a_semaphore);

/*
 * Increment semaphore count.
 */
extern void GE_semaphore_post(EIF_POINTER a_semaphore);

/*
 * Destroy and free all resources used by semaphore.
 */
extern void GE_semaphore_destroy(EIF_POINTER a_semaphore);

/*
 * Create a new condition variable.
 */
extern EIF_POINTER GE_condition_variable_create(void);

/*
 * Unblock all threads blocked on condition variable.
 */
extern void GE_condition_variable_broadcast(EIF_POINTER a_condition_variable);

/*
 * Unblock one thread blocked on condition variable.
 */
extern void GE_condition_variable_signal(EIF_POINTER a_condition_variable);

/*
 * Block calling thread on condition variable.
 */
extern void GE_condition_variable_wait(EIF_POINTER a_condition_variable, EIF_POINTER a_mutex);

/*
 * Block calling thread on condition variable for at most `a_timeout' milliseconds.
 * Return 1 is we got the condition variable on time, otherwise return 0.
 */
extern EIF_INTEGER GE_condition_variable_wait_with_timeout(EIF_POINTER a_condition_variable, EIF_POINTER a_mutex, EIF_INTEGER a_timeout);

/*
 * Destroy and free all resources used by condition variable.
 */
extern void GE_condition_variable_destroy(EIF_POINTER a_condition_variable);

/*
 * Create a new read-write lock.
 */
extern EIF_POINTER GE_read_write_lock_create(void);

/*
 * Acquire a read lock. Multiple readers can go if there are no writer.
 */
extern void GE_read_write_lock_read_lock(EIF_POINTER a_read_write_lock);

/*
 * Acquire a write lock. Only a single write can proceed.
 */
extern void GE_read_write_lock_write_lock(EIF_POINTER a_read_write_lock);

/*
 * Unlock a read or write lock.
 */
extern void GE_read_write_lock_unlock(EIF_POINTER a_read_write_lock);

/*
 * Destroy and free all resources used by read-write lock.
 */
extern void GE_read_write_lock_destroy(EIF_POINTER a_read_write_lock);

#ifdef __cplusplus
}
#endif

#endif
#endif

/*
	description:

		"C functions used to manipulate native strings"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2013-2018, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_NATIVE_STRING_H
#define GE_NATIVE_STRING_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <string.h>
#ifdef EIF_WINDOWS
#ifdef __LCC__
/* With lcc-win32, stat.h should be included before wchar.h. */
#include <sys/stat.h>
#endif
#include <wchar.h>
#else
#include <sys/types.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

/* Macro used to manipulate native strings, i.e: (wchar_t*) */
#define GE_nstrlen wcslen /* size of string */
#define GE_nstrncpy wcsncpy /* Copy n characters of one string to another */
#define GE_nstrcpy wcscpy /* Copy one string to another */
#define GE_nstrncat wcsncat /* Append characters of a string */
#define GE_nstrcat wcscat /* Append a string */
#define GE_nstrstr wcsstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) L##quote /* Manifest Native string declaration */
#define GE_nstr_fopen _wfopen /* Open file using native string name */
#define GE_nstrcmp wcscmp /* Compare two strings. */
#define GE_nstrdup _wcsdup /* Duplicate string. */
#define GE_nstr_cat_ascii(dest, src) {							\
		int i;													\
		size_t dest_len, src_len;								\
		dest_len = rt_nstrlen (dest);							\
		src_len = strlen (src);									\
		for (i = 0; i < src_len; i++) {							\
			dest[dest_len + i] = (EIF_NATIVE_CHAR)src[i];		\
		}														\
		dest[dest_len + src_len] = (EIF_NATIVE_CHAR)0;			\
	}

#else /* not EIF_WINDOWS */

/* Macro used to manipulate native strings, i.e: (char*) */
#define GE_nstrlen strlen /* size of string */
#define GE_nstrncpy strncpy /* Copy n characters of one string to another */
#define GE_nstrcpy strcpy /* Copy one string to another */
#define GE_nstrncat strncat /* Append characters of a string */
#define GE_nstrcat strcat /* Append a string */
#define GE_nstrstr strstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) quote /* Manifest Native string declaration */
#define GE_nstr_fopen fopen /* Open file using native string name */
#define GE_nstrcmp strcmp /* Compare two strings. */
#define GE_nstrdup strdup /* Duplicate string. */
#define GE_nstr_cat_ascii strcat

#endif


#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class ARGUMENTS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_ARGUMENTS_H
#define GE_ARGUMENTS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_argc;
extern EIF_NATIVE_CHAR** GE_argv;

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement type information"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_TYPES_H
#define GE_TYPES_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Type annotations.
 * When a type has no annotation, it means a detachable, non-separate, variant type.
 * In all other cases, there will be an annotation.
 */
#define ANNOTATION_MASK			0x007F	/* All possible annotations. */
#define ATTACHED_FLAG			0x0001
#define DETACHABLE_FLAG			0x0002	/* Only present when overriding an attached type. */
#define SEPARATE_FLAG			0x0004
#define VARIANT_FLAG			0x0008	/* Only present when overriding a frozen/poly type. */
#define UNUSABLE_FLAG			0x0010	/* Reserved for backward compatibility for storables. */
#define FROZEN_FLAG				0x0020
#define POLY_FLAG				0x0040

/*
 * Type flags.
 */
#define GE_TYPE_FLAG_SPECIAL		0x0010
#define GE_TYPE_FLAG_TUPLE			0x0020
#define GE_TYPE_FLAG_EXPANDED		0x0040
#define GE_TYPE_FLAG_DEFERRED		0x0080
#define GE_TYPE_FLAG_NONE			0x0100
#define GE_TYPE_FLAG_BASIC_MASK		0x000F /* One of "BOOLEAN", "CHARACTER_8", "CHARACTER_32", "INTEGER_8", "INTEGER_16", "INTEGER_32", "INTEGER_64", "NATURAL_8", "NATURAL_16", "NATURAL_32", "NATURAL_64", "POINTER", "REAL_32", "REAL_64" */
#define GE_TYPE_FLAG_BOOLEAN		0x0001
#define GE_TYPE_FLAG_CHARACTER_8	0x0002
#define GE_TYPE_FLAG_CHARACTER_32	0x0003
#define GE_TYPE_FLAG_INTEGER_8		0x0004
#define GE_TYPE_FLAG_INTEGER_16		0x0005
#define GE_TYPE_FLAG_INTEGER_32		0x0006
#define GE_TYPE_FLAG_INTEGER_64		0x0007
#define GE_TYPE_FLAG_NATURAL_8		0x0008
#define GE_TYPE_FLAG_NATURAL_16		0x0009
#define GE_TYPE_FLAG_NATURAL_32		0x000A
#define GE_TYPE_FLAG_NATURAL_64		0x000B
#define GE_TYPE_FLAG_POINTER		0x000C
#define GE_TYPE_FLAG_REAL_32		0x000D
#define GE_TYPE_FLAG_REAL_64		0x000E

/*
 * Convention for attribute types.
 * The values are in sync with REFLECTOR_CONSTANTS.
 */
#define GE_TYPE_KIND_INVALID		-1
#define GE_TYPE_KIND_POINTER		0
#define GE_TYPE_KIND_REFERENCE		1
#define GE_TYPE_KIND_CHARACTER_8	2
#define GE_TYPE_KIND_BOOLEAN		3
#define GE_TYPE_KIND_INTEGER_32		4
#define GE_TYPE_KIND_REAL_32		5
#define GE_TYPE_KIND_REAL_64		6
#define GE_TYPE_KIND_EXPANDED		7
#define GE_TYPE_KIND_INTEGER_8		9
#define GE_TYPE_KIND_INTEGER_16		10
#define GE_TYPE_KIND_INTEGER_64 	11
#define GE_TYPE_KIND_CHARACTER_32	12
#define GE_TYPE_KIND_NATURAL_8		13
#define GE_TYPE_KIND_NATURAL_16		14
#define GE_TYPE_KIND_NATURAL_32 	15
#define GE_TYPE_KIND_NATURAL_64 	16

/*
 * Object flags.
 */
#define GE_OBJECT_FLAG_MARKED		0x0001

/*
 * Ancestor relationship between two types X and Y.
 */
#ifdef GE_USE_ANCESTORS
typedef struct {
	EIF_TYPE_INDEX type_id; /* Type id of Y */
	EIF_BOOLEAN conforms; /* Does X conform to Y? */
	void (**qualified_calls)(); /* Function pointers, indexed by call id, when the static type of the target is Y and the dynamic type is X */
} GE_ancestor;
#endif

/*
 * Attribute.
 */
#ifdef GE_USE_ATTRIBUTES
typedef struct {
#ifdef GE_USE_ATTRIBUTE_NAME
	const char* name; /* Attribute name */
#endif
#ifdef GE_USE_ATTRIBUTE_TYPE_ID
	EIF_ENCODED_TYPE type_id; /* Static type id */
#endif
#ifdef GE_USE_ATTRIBUTE_OFFSET
	uint32_t offset; /* Address offset in object */
#endif
} GE_attribute;
#endif

/*
 * Type information.
 */
typedef struct {
	EIF_TYPE_INDEX type_id;
	uint16_t flags;
#ifdef GE_USE_TYPE_GENERATOR
	const char* generator; /* Generator class name */
#endif
#ifdef GE_USE_TYPE_NAME
	const char* name; /* Full type name */
#endif
#ifdef GE_USE_TYPE_GENERIC_PARAMETERS
	EIF_ENCODED_TYPE* generic_parameters;
	uint32_t generic_parameter_count;
#endif
#ifdef GE_USE_ANCESTORS
	GE_ancestor** ancestors;
	uint32_t ancestor_count;
#endif
#ifdef GE_USE_ATTRIBUTES
	GE_attribute** attributes;
	uint32_t attribute_count;
#endif
#ifdef GE_USE_TYPE_OBJECT_SIZE
	uint64_t object_size;
#endif
	EIF_REFERENCE (*new_instance)();
	void (*dispose)(GE_context*, EIF_REFERENCE);
} GE_type_info;

typedef struct {
	EIF_TYPE_INDEX id; /* Type id of the "TYPE [X]" object */
	EIF_INTEGER type_id; /* Type id of the type "X" */
	EIF_BOOLEAN is_special;
	void (*dispose)(GE_context*, EIF_REFERENCE);
	EIF_REFERENCE a1; /* internal_name */
	EIF_REFERENCE a2; /* internal_name_32 */
} EIF_TYPE_OBJ;

/*
 * Types indexed by type id.
 * Generated by the compiler.
 */
extern EIF_TYPE_OBJ GE_types[][2];
extern GE_type_info GE_type_infos[];

/*
 * Number of type infos in `GE_type_infos'.
 * Do not take into account the fake item at index 0.
 */
extern int GE_type_info_count;

/*
 * Encode a EIF_TYPE into a EIF_ENCODED_TYPE.
 * The lower part of EIF_ENCODED_TYPE contains the .id field,
 * and the upper part the .annotations.
 */
extern EIF_ENCODED_TYPE GE_encoded_type(EIF_TYPE a_type);

/*
 * Decode a EIF_ENCODED_TYPE into a EIF_TYPE.
 * The lower part of EIF_ENCODED_TYPE contains the .id field,
 * and the upper part the .annotations.
 */
extern EIF_TYPE GE_decoded_type(EIF_ENCODED_TYPE a_type);

/*
 * Type with `a_id' and `a_annotations'.
 */
extern EIF_TYPE GE_new_type(EIF_TYPE_INDEX a_id, EIF_TYPE_INDEX a_annotations);

/*
 * Type of object `obj'.
 */
#define GE_object_type(obj)	GE_new_type(((EIF_REFERENCE)(obj))->id, 0x0)
#define GE_object_encoded_type(obj) GE_encoded_type(GE_object_type(obj))

/*
 * Attachment status of `a_type'.
 */
#define GE_is_attached_type(a_type) EIF_TEST(((a_type).annotations & ATTACHED_FLAG) || GE_is_expanded_type_index((a_type).id))
#define GE_is_attached_encoded_type(a_type) GE_is_attached_type(GE_decoded_type(a_type))

/*
 * Associated detachable type of `a_type' if any,
 * otherwise `a_type'.
 */
extern EIF_TYPE GE_non_attached_type(EIF_TYPE a_type);
#define GE_non_attached_encoded_type(a_type) GE_encoded_type(GE_non_attached_type(GE_decoded_type(a_type)))

/*
 * Associated attached type of `a_type' if any,
 * otherwise `a_type'.
 */
extern EIF_TYPE GE_attached_type(EIF_TYPE a_type);
#define GE_attached_encoded_type(t) GE_encoded_type(GE_attached_type(GE_decoded_type(t)))

/*
 * Is `a_type' a SPECIAL type?
 */
#define GE_is_special_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_SPECIAL)
#define GE_is_special_encoded_type(a_type) GE_is_special_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_object(obj) GE_is_special_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of user-defined expanded type?
 */
extern EIF_BOOLEAN GE_is_special_of_expanded_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_expanded_encoded_type(a_type) GE_is_special_of_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_expanded_object(obj) GE_is_special_of_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of reference type?
 */
extern EIF_BOOLEAN GE_is_special_of_reference_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_reference_encoded_type(a_type) GE_is_special_of_reference_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_reference_object(obj) GE_is_special_of_reference_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of reference type or basic expanded type?
 * (Note that user-defined expanded types are excluded.)
 */
extern EIF_BOOLEAN GE_is_special_of_reference_or_basic_expanded_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_reference_or_basic_expanded_encoded_type(a_type) GE_is_special_of_reference_or_basic_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_reference_or_basic_expanded_object(obj) GE_is_special_of_reference_or_basic_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a TUPLE type?
 */
#define GE_is_tuple_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_TUPLE)
#define GE_is_tuple_encoded_type(a_type) GE_is_tuple_type_index(GE_decoded_type(a_type).id)
#define GE_is_tuple_object(obj) GE_is_tuple_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' an expanded type?
 */
#define GE_is_expanded_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_EXPANDED)
#define GE_is_expanded_encoded_type(a_type) GE_is_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_expanded_object(obj) GE_is_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a type whose base class is deferred?
 */
#define GE_is_deferred_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_DEFERRED)
#define GE_is_deferred_encoded_type(a_type) GE_is_deferred_type_index(GE_decoded_type(a_type).id)

/*
 * Does `i'-th field of `a_object + a_physical_offset' (which is expected to be reference)
 * denote a reference with copy semantics?
 */
extern EIF_BOOLEAN GE_is_copy_semantics_field(EIF_INTEGER i, EIF_POINTER a_object, EIF_INTEGER a_physical_offset);

/*
 * Does `i'-th item of special `a_object' (which is expected to be reference)
 * denote a reference with copy semantics?
 */
extern EIF_BOOLEAN GE_is_special_copy_semantics_item(EIF_INTEGER i, EIF_POINTER a_object);

/*
 * Generator class name of `a_type'.
 */
extern EIF_REFERENCE GE_generator_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generator_of_encoded_type(a_type) GE_generator_of_type_index(GE_decoded_type(a_type).id)
extern EIF_REFERENCE GE_generator_8_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generator_8_of_encoded_type(a_type) GE_generator_8_of_type_index(GE_decoded_type(a_type).id)

/*
 * Full name of `a_type'.
 */
extern EIF_REFERENCE GE_generating_type_of_encoded_type(EIF_ENCODED_TYPE a_type);
extern EIF_REFERENCE GE_generating_type_8_of_encoded_type(EIF_ENCODED_TYPE a_type);

/*
 * Encoded type whose name is `a_name'.
 * -1 if no such type.
 */
extern EIF_ENCODED_TYPE GE_encoded_type_from_name(EIF_POINTER a_name);

/*
 * Does `a_type_1' conform to `a_type_2'?
 */
extern EIF_BOOLEAN GE_encoded_type_conforms_to(EIF_ENCODED_TYPE a_type_1, EIF_ENCODED_TYPE a_type_2);

/*
 * Number of generic parameters.
 */
extern EIF_INTEGER GE_generic_parameter_count_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generic_parameter_count_of_encoded_type(a_type) GE_generic_parameter_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Type of `i'-th generic parameter of `a_type'.
 */
extern EIF_INTEGER GE_generic_parameter_of_type_index(EIF_TYPE_INDEX a_type, EIF_INTEGER i);
#define GE_generic_parameter_of_encoded_type(a_type,i) GE_generic_parameter_of_type_index(GE_decoded_type(a_type).id, (i))

/*
 * Number of fields of an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_count_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_field_count_of_encoded_type(a_type) GE_field_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Physical offset of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_offset_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_offset_of_encoded_type(i, a_type) GE_field_offset_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Name of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_POINTER GE_field_name_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_name_of_encoded_type(i, a_type) GE_field_name_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Static type of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_static_type_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_static_type_of_encoded_type(i, a_type) GE_field_static_type_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Kind of type of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_type_kind_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_type_kind_of_encoded_type(i, a_type) GE_field_type_kind_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Physical size of `a_object'.
 */
extern EIF_NATURAL_64 GE_object_size(EIF_POINTER a_object);

/*
 * Is `i'-th field of objects of type `a_type' a user-defined expanded attribute?
 */
extern EIF_BOOLEAN GE_is_field_expanded_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_is_field_expanded_of_encoded_type(i, a_type) GE_is_field_expanded_of_type_index((i), GE_decoded_type(a_type).id)

#define GE_field_address_at(a_field_offset, a_object, a_physical_offset) ((char*)(a_object) + (a_physical_offset) + (a_field_offset))
#define GE_object_at_offset(a_enclosing, a_physical_offset) (EIF_REFERENCE)(GE_field_address_at(0, (a_enclosing), (a_physical_offset)))
#define GE_raw_object_at_offset(a_enclosing, a_physical_offset) (EIF_POINTER)(GE_field_address_at(0, (a_enclosing), (a_physical_offset)))
#define GE_object_encoded_type_at_offset(a_enclosing, a_physical_offset) GE_object_encoded_type(GE_raw_object_at_offset((a_enclosing), (a_physical_offset)))
#define GE_boolean_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_BOOLEAN*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_character_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_CHARACTER_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_character_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_CHARACTER_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_16_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_16*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_16_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_16*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_pointer_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_POINTER*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_real_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REAL_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_real_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REAL_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_raw_reference_field_at(a_field_offset, a_object, a_physical_offset) (EIF_POINTER)*(EIF_REFERENCE*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_reference_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REFERENCE*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_set_boolean_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_boolean_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_character_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_character_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_character_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_character_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_16_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_16_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_16_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_16_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_pointer_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_pointer_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_real_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_real_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_real_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_real_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_reference_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_reference_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value

#if defined(GE_USE_ATTRIBUTES) && defined(GE_USE_ATTRIBUTE_OFFSET)
#define GE_field_address(i, a_object, a_physical_offset) GE_field_address_at(GE_type_infos[((EIF_REFERENCE)(a_object))->id].attributes[(i) - 1]->offset, (a_object), (a_physical_offset))
#define GE_boolean_field(i, a_object, a_physical_offset) *(EIF_BOOLEAN*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_character_8_field(i, a_object, a_physical_offset) *(EIF_CHARACTER_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_character_32_field(i, a_object, a_physical_offset) *(EIF_CHARACTER_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_8_field(i, a_object, a_physical_offset) *(EIF_INTEGER_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_16_field(i, a_object, a_physical_offset) *(EIF_INTEGER_16*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_32_field(i, a_object, a_physical_offset) *(EIF_INTEGER_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_64_field(i, a_object, a_physical_offset) *(EIF_INTEGER_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_8_field(i, a_object, a_physical_offset) *(EIF_NATURAL_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_16_field(i, a_object, a_physical_offset) *(EIF_NATURAL_16*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_32_field(i, a_object, a_physical_offset) *(EIF_NATURAL_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_64_field(i, a_object, a_physical_offset) *(EIF_NATURAL_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_pointer_field(i, a_object, a_physical_offset) *(EIF_POINTER*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_real_32_field(i, a_object, a_physical_offset) *(EIF_REAL_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_real_64_field(i, a_object, a_physical_offset) *(EIF_REAL_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_reference_field(i, a_object, a_physical_offset) *(EIF_REFERENCE*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_set_boolean_field(i, a_object, a_physical_offset, a_value) GE_boolean_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_character_8_field(i, a_object, a_physical_offset, a_value) GE_character_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_character_32_field(i, a_object, a_physical_offset, a_value) GE_character_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_8_field(i, a_object, a_physical_offset, a_value) GE_integer_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_16_field(i, a_object, a_physical_offset, a_value) GE_integer_16_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_32_field(i, a_object, a_physical_offset, a_value) GE_integer_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_64_field(i, a_object, a_physical_offset, a_value) GE_integer_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_8_field(i, a_object, a_physical_offset, a_value) GE_natural_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_16_field(i, a_object, a_physical_offset, a_value) GE_natural_16_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_32_field(i, a_object, a_physical_offset, a_value) GE_natural_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_64_field(i, a_object, a_physical_offset, a_value) GE_natural_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_pointer_field(i, a_object, a_physical_offset, a_value) GE_pointer_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_real_32_field(i, a_object, a_physical_offset, a_value) GE_real_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_real_64_field(i, a_object, a_physical_offset, a_value) GE_real_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_reference_field(i, a_object, a_physical_offset, a_value) GE_reference_field((i), (a_object), (a_physical_offset)) = (a_value)
#else
#define GE_boolean_field(i, a_object, a_physical_offset) (EIF_BOOLEAN)0
#define GE_character_8_field(i, a_object, a_physical_offset) (EIF_CHARACTER_8)0
#define GE_character_32_field(i, a_object, a_physical_offset) (EIF_CHARACTER_32)0
#define GE_integer_8_field(i, a_object, a_physical_offset) (EIF_INTEGER_8)0
#define GE_integer_16_field(i, a_object, a_physical_offset) (EIF_INTEGER_16)0
#define GE_integer_32_field(i, a_object, a_physical_offset) (EIF_INTEGER_32)0
#define GE_integer_64_field(i, a_object, a_physical_offset) (EIF_INTEGER_64)0
#define GE_natural_8_field(i, a_object, a_physical_offset) (EIF_NATURAL_8)0
#define GE_natural_16_field(i, a_object, a_physical_offset) (EIF_NATURAL_16)0
#define GE_natural_32_field(i, a_object, a_physical_offset) (EIF_NATURAL_32)0
#define GE_natural_64_field(i, a_object, a_physical_offset) (EIF_NATURAL_64)0
#define GE_pointer_field(i, a_object, a_physical_offset) (EIF_POINTER)0
#define GE_real_32_field(i, a_object, a_physical_offset) (EIF_REAL_32)0
#define GE_real_64_field(i, a_object, a_physical_offset) (EIF_REAL_64)0
#define GE_reference_field(i, a_object, a_physical_offset) (EIF_REFERENCE)0
#define GE_set_boolean_field(i, a_object, a_physical_offset, a_value)
#define GE_set_character_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_character_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_16_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_16_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_pointer_field(i, a_object, a_physical_offset, a_value)
#define GE_set_real_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_real_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_reference_field(i, a_object, a_physical_offset, a_value)
#endif

/*
 * Number of non-transient fields of an object of dynamic type `a_type'.
 * TODO: storable not implemented yet.
 */
#define GE_persistent_field_count_of_type_index(a_type) GE_field_count_of_type_index(a_type)
#define GE_persistent_field_count_of_encoded_type(a_type) GE_persistent_field_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Is `i'-th field of objects of type `a_type' a transient field?
 * TODO: storable not implemented yet.
 */
#define GE_is_field_transient_of_type_index(i, a_type) EIF_FALSE
#define GE_is_field_transient_of_encoded_type(i, a_type) GE_is_field_transient_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Storable version of objects of type `a_type'.
 * TODO: storable not implemented yet.
 */
#define GE_storable_version_of_type_index(a_type) EIF_VOID
#define GE_storable_version_of_encoded_type(a_type) GE_storable_version_of_type_index(GE_decoded_type(a_type).id)

/*
 * Get a lock on `GE_mark_object' and `GE_unmark_object' routines so that
 * 2 threads cannot `GE_mark_object' and `GE_unmark_object' at the same time.
 */
extern void GE_lock_marking(void);

/*
 * Release a lock on `GE_mark_object' and `GE_unmark_object', so that another
 * thread can use `GE_mark_object' and `GE_unmark_object'.
 */
extern void GE_unlock_marking(void);

/*
 * Is `obj' marked?
 */
extern EIF_BOOLEAN GE_is_object_marked(EIF_POINTER obj);

/*
 * Mark `obj'.
 */
extern void GE_mark_object(EIF_POINTER obj);

/*
 * Unmark `obj'.
 */
extern void GE_unmark_object(EIF_POINTER obj);

/*
 * New instance of dynamic `a_type'.
 * Note: returned object is not initialized and may
 * hence violate its invariant.
 * `a_type' cannot represent a SPECIAL type, use
 * `GE_new_special_of_reference_instance_of_type_index' instead.
 */
extern EIF_REFERENCE GE_new_instance_of_type_index(GE_context* a_context, EIF_TYPE_INDEX a_type);
#define GE_new_instance_of_encoded_type(a_context, a_type) GE_new_instance_of_type_index((a_context), GE_decoded_type(a_type).id)

/*
 * New instance of dynamic `a_type' that represents
 * a SPECIAL with can contain `a_capacity' elements of reference type.
 * To create a SPECIAL of basic type, use class SPECIAL directly.
 */
extern EIF_REFERENCE GE_new_special_of_reference_instance_of_type_index(GE_context* a_context, EIF_TYPE_INDEX a_type, EIF_INTEGER a_capacity);
#define GE_new_special_of_reference_instance_of_encoded_type(a_context, a_type, a_capacity) GE_new_special_of_reference_instance_of_type_index((a_context), GE_decoded_type(a_type).id, (a_capacity))

/*
 * New instance of tuple of type `a_type'.
 * Note: returned object is not initialized and may
 * hence violate its invariant.
 */
#define GE_new_tuple_instance_of_type_index(a_context, a_type) GE_new_instance_of_type_index((a_context), (a_type))
#define GE_new_tuple_instance_of_encoded_type(a_context, a_type) GE_new_tuple_instance_of_type_index((a_context), GE_decoded_type(a_type).id)

/*
 * New instance of TYPE for object of type `a_type'.
 */
extern EIF_REFERENCE GE_new_type_instance_of_encoded_type(GE_context* a_context, EIF_ENCODED_TYPE a_type);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to manipulate strings"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2019, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_STRING_H
#define GE_STRING_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * New Eiffel empty string of type "STRING_8" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_str8(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "IMMUTABLE_STRING_8" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_istr8(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "STRING_32" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_str32(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "IMMUTABLE_STRING_32" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_istr32(EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_8" containing the
 * first `c' characters found in ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_ms8(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_8" containing all
 * characters found in the null-terminated ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_str8(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_8" containing the
 * first `c' characters found in ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_ims8(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_32" containing the
 * first `c' characters found in ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_ms32(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_32" containing the
 * first `c' 32-bit characters built from `s' by reading
 * groups of four bytes with little-endian byte order.
 */
extern EIF_REFERENCE GE_ms32_from_utf32le(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_32" containing all
 * characters found in the null-terminated ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_str32(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing
 * the first `c' characters found in ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_ims32(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing the
 * first `c' 32-bit characters built from `s' by reading
 * groups of four bytes with little-endian byte order.
 */
extern EIF_REFERENCE GE_ms32_from_utf32le(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing all
 * characters found in the null-terminated ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_istr32(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing the
 * first `n' native characters found in native string `s'.
 * Invalid native characters are escaped.
 */
extern EIF_REFERENCE GE_ims32_from_nstr(EIF_NATIVE_CHAR* s, EIF_INTEGER n);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing all
 * characters found in the null-terminated native string `s'.
 * Invalid native characters are escaped.
 */
extern EIF_REFERENCE GE_istr32_from_nstr(EIF_NATIVE_CHAR* s);

/*
 * New Eiffel string of type "STRING" containing all
 * characters found in the null-terminated ISO 8859-1 string `s'
 */
extern EIF_REFERENCE GE_str(const char* s);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_CONSOLE_H
#define GE_CONSOLE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Initialize mutex to determine whether a new
 * console needs to be created.
 */
#ifdef EIF_WINDOWS
extern void GE_init_console(void);
#else
#define GE_init_console()
#endif

/*
 * Create a new DOS console if needed (i.e. in case of a Windows application).
 */
#ifdef EIF_WINDOWS
extern void GE_show_console(void);
#else
#define GE_show_console()
#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement the program initialization"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_MAIN_H
#define GE_MAIN_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_main(int argc, EIF_NATIVE_CHAR** argv);

/*
 * System name.
 */
extern char* GE_system_name;

/*
 * Root class name.
 */
extern char* GE_root_class_name;

#ifdef EIF_WINDOWS

#include <windows.h>

/*
 * Used in WEL.
 */
extern HINSTANCE eif_hInstance;
extern HINSTANCE eif_hPrevInstance;
extern LPWSTR eif_lpCmdLine;
extern int eif_nCmdShow;

/*
 * Main entry point when compiling a Windows application.
 * See:
 *    http://en.wikipedia.org/wiki/WinMain
 *    http://msdn2.microsoft.com/en-us/library/ms633559.aspx
 */
extern int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow);

#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to access garbage collector facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_GC_H
#define GE_GC_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef GE_USE_BOEHM_GC
/*
 *	Use the Boehm garbage collector.
 *	See:
 *		http://en.wikipedia.org/wiki/Boehm_GC
 *		http://www.hpl.hp.com/personal/Hans_Boehm/gc/
 */

/* 
 * In the case of multithreaded code, gc.h should be included after the threads header file, 
 * and after defining the appropriate GC_XXXX_THREADS macro. (For 6.2alpha4 and later, 
 * simply defining GC_THREADS should suffice.) The header file gc.h must be included in files 
 * that use either GC or threads primitives, since threads primitives will be redefined to 
 * cooperate with the GC on many platforms. 
 * See: https://hboehm.info/gc/gcinterface.html
*/
#ifdef GE_USE_POSIX_THREADS
#include <pthread.h>
#include <semaphore.h>
#elif defined EIF_WINDOWS
#include <windows.h>
#include <process.h>
#endif

#define GC_IGNORE_WARN
#define GC_NOT_DLL
#define GC_THREADS
#define PARALLEL_MARK
#define THREAD_LOCAL_ALLOC
#define GC_ENABLE_SUSPEND_THREAD
#define LARGE_CONFIG
#define ALL_INTERIOR_POINTERS
#define ENABLE_DISCLAIM
#define GC_ATOMIC_UNCOLLECTABLE
#define GC_GCJ_SUPPORT
#define JAVA_FINALIZATION
#define NO_EXECUTE_PERMISSION
#define USE_MMAP
#define USE_MUNMAP

#if defined(GE_WINDOWS)
#	undef GC_NO_THREAD_DECLS
#	undef GC_NO_THREAD_REDIRECTS
#	define EMPTY_GETENV_RESULTS
#	define DONT_USE_USER32_DLL
#else
#	if !defined(GE_MACOS)
#		define GC_PTHREAD_START_STANDALONE
#	endif
#	ifndef _REENTRANT
#		define _REENTRANT
#	endif
#	define HANDLE_FORK
#endif

#if defined(__clang__) || defined(__GNUC__) || defined(__MINGW32__) || defined(__MINGW64__)
#	define GC_BUILTIN_ATOMIC
#endif

#if defined(__clang__)
#	define HAVE_DL_ITERATE_PHDR
#	define GC_REQUIRE_WCSDUP
#	define HAVE_DLADDR
#	define HAVE_SYS_TYPES_H
#	define HAVE_UNISTD_H
#	if defined(GE_MACOS)
#		define HAVE_PTHREAD_SETNAME_NP_WITHOUT_TID
#	elif !defined(GE_WINDOWS)
#		define HAVE_PTHREAD_SETNAME_NP_WITH_TID
#		define HAVE_PTHREAD_SIGMASK
#		define NO_GETCONTEXT
#	endif
#endif

#include "gc.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * GC initialization.
 */

#if !defined(GE_USE_BOEHM_GC)
#define GE_init_gc() /* do nothing */
#elif defined(GE_WINDOWS) || defined(GE_MACOS) || !defined(__clang__)
#define GE_init_gc() \
	GC_INIT(); \
	GC_allow_register_threads(); \
	GC_enable_incremental()
#else
/*
* No incremenatal GC under Linux when compiled wtih zig/clang,
* because otherwise the programdoes not behave as expected.
*/
#define GE_init_gc() \
	GC_INIT(); \
	GC_allow_register_threads()
#endif

/*
 * Memory allocation.
 */

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc(size) GC_MALLOC(size)
#else /* No GC */
#define GE_unprotected_malloc(size) malloc(size)
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_malloc(size) GE_null(GE_unprotected_malloc(size))

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_atomic(size) GC_MALLOC_ATOMIC(size)
#else /* No GC */
#define GE_unprotected_malloc_atomic(size) GE_unprotected_malloc(size)
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_malloc_atomic(size) GE_null(GE_unprotected_malloc_atomic(size))

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_calloc(nelem, elsize) GC_MALLOC((nelem) * (elsize))
#else /* No GC */
#define GE_unprotected_calloc(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_calloc(nelem, elsize) GE_null(GE_unprotected_calloc((nelem), (elsize)))

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_calloc_atomic(nelem, elsize) memset(GE_null(GC_MALLOC_ATOMIC((nelem) * (elsize))), 0, (nelem) * (elsize))
#else /* No GC */
#define GE_calloc_atomic(nelem, elsize) GE_calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_uncollectable(size) GC_MALLOC_UNCOLLECTABLE(size)
#else /* No GC */
#define GE_unprotected_malloc_uncollectable(size) malloc(size)
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_malloc_uncollectable(size) GE_null(GE_unprotected_malloc_uncollectable(size))

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_atomic_uncollectable(size) GC_malloc_atomic_uncollectable(size)
#else /* No GC */
#define GE_unprotected_malloc_atomic_uncollectable(size) malloc(size)
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_malloc_atomic_uncollectable(size) GE_null(GE_unprotected_malloc_atomic_uncollectable(size))
/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_calloc_uncollectable(nelem, elsize) GC_MALLOC_UNCOLLECTABLE((nelem) * (elsize))
#else /* No GC */
#define GE_unprotected_calloc_uncollectable(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_calloc_uncollectable(nelem, elsize) GE_null(GE_unprotected_calloc_uncollectable((nelem), (elsize)))


/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
extern void* GE_unprotected_calloc_atomic_uncollectable(size_t nelem, size_t elsize);
#else /* No GC */
#define GE_unprotected_calloc_atomic_uncollectable(nelem, elsize) GE_unprotected_calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_calloc_atomic_uncollectable(nelem, elsize) GE_null(GE_unprotected_calloc_atomic_uncollectable((nelem), (elsize)))

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is not necessarily zeroed.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_realloc(p, size) GC_REALLOC((p), (size))
#else /* No GC */
#define GE_unprotected_realloc(p, size) realloc((p), (size))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is not necessarily zeroed.
 * Raise an exception when no-more-memory.
 */
#define GE_realloc(p, size) GE_null(GE_unprotected_realloc((p), (size)))

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * Do not raise an exception when no-more-memory.
 */
extern void* GE_unprotected_recalloc(void* p, size_t old_nelem, size_t new_nelem, size_t elsize);

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * Raise an exception when no-more-memory.
 */
#define GE_recalloc(p, old_nelem, new_nelem, elsize) GE_null(GE_unprotected_recalloc((p), (old_nelem), (new_nelem), (elsize)))

/*
 * Explicitly deallocate an object.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_free(p) GC_FREE(p)
#else /* No GC */
#define GE_free(p) free(p)
#endif

/*
 * When defined, `GE_malloc_cleared' means that `GE_malloc' and
 * `GE_malloc_uncollectable' make sure that the allocated memory
 * is zeroed.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc_cleared
#else /* No GC */
#endif

/*
 * When defined, `GE_malloc_atomic_cleared' means that `GE_malloc_atomic'
 * and `GE_malloc_atomic_uncollectable' make sure that the allocated memory
 * is zeroed.
 */
#ifdef GE_USE_BOEHM_GC
/* #define GE_malloc_atomic_cleared */
#else /* No GC */
#endif

/*
 * Dispose
 */

/*
 * Register dispose routine `disp' to be called on object `obj' when it will be collected.
 */
#ifdef GE_USE_BOEHM_GC
extern void GE_boehm_dispose(void* C, void* disp); /* Call dispose routine on object `C'. */
#define GE_register_dispose(obj, disp) GC_REGISTER_FINALIZER_NO_ORDER((void*)(obj), (void (*) (void*, void*)) &GE_boehm_dispose, (void*)(disp), NULL, NULL)
#else /* No GC */
#define GE_register_dispose(obj, disp) /* do nothing */
#endif

/*
 * Register dispose routine `disp' to be called on once-per-object `data' when it will be collected.
 */
#ifdef GE_USE_BOEHM_GC
extern void GE_boehm_dispose_once_per_object_data(void* data, void* disp); /* Call dispose routine `disp' on once-per-object data `data'. */
#define GE_register_dispose_once_per_object_data(data, disp) GC_REGISTER_FINALIZER_NO_ORDER((void*)(data), (void (*) (void*, void*)) &GE_boehm_dispose_once_per_object_data, (void*)(disp), NULL, NULL)
#else /* No GC */
#define GE_register_dispose_once_per_object_data(data, disp) /* do nothing */
#endif

/*
 * Access to objects, useful with GCs which move objects in memory.
 * This is not the case here, since the Boehm GC is not a moving GC.
 */

/* Access object through hector. */
#define eif_access(obj) (obj)
/* Freeze memory address. */
#define eif_freeze(obj) (obj)
/* The C side adopts an object. */
#define eif_adopt(obj) (obj)
/* The C side protects an object. */
#define eif_protect(obj) (obj)
/* The C side weans adopted object. */
extern EIF_REFERENCE eif_wean(EIF_OBJECT object);
/* Forget a frozen memory address. */
#define eif_unfreeze(obj)
/* Always frozen since they do not move. */
#define eif_frozen(obj) 1
/* Always frozen since they do not move. */
#define spfrozen(obj) 1

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class IDENTIFIED"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_IDENTIFIED_H
#define GE_IDENTIFIED_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Initialize data to keep track of object ids.
 */
extern void GE_init_identified(void);

/*
 * Get a new id for `object', assuming it is NOT in the stack.
 */
extern EIF_INTEGER_32 GE_object_id(EIF_OBJECT object);

/*
 * Return the object associated with `id'.
 */
extern EIF_REFERENCE GE_id_object(EIF_INTEGER_32 id);

/*
 * Remove the object associated with `id' from the stack.
 */
extern void GE_object_id_free(EIF_INTEGER_32 id);

#ifdef __cplusplus
}
#endif

#endif

#ifdef __cplusplus
extern "C" {
#endif

#define T0 EIF_ANY

/* CHARACTER */
#define EIF_CHARACTER EIF_CHARACTER_8

/* WIDE_CHARACTER */
#define EIF_WIDE_CHAR EIF_CHARACTER_32

/* INTEGER */
#define EIF_INTEGER EIF_INTEGER_32

/* NATURAL */
#define EIF_NATURAL EIF_NATURAL_32

/* REAL */
#define EIF_REAL EIF_REAL_32

/* DOUBLE */
#define EIF_DOUBLE EIF_REAL_64

/* BOOLEAN */
#define T1 EIF_BOOLEAN
extern T0* GE_boxed1(TC* ac, T1 a1);
extern T0* GE_boxed_pointer1(TC* ac, T1* a1);
typedef struct Sb1 Tb1;

/* CHARACTER_8 */
#define T2 EIF_CHARACTER_8
extern T0* GE_boxed2(TC* ac, T2 a1);
extern T0* GE_boxed_pointer2(TC* ac, T2* a1);
typedef struct Sb2 Tb2;

/* CHARACTER_32 */
#define T3 EIF_CHARACTER_32
extern T0* GE_boxed3(TC* ac, T3 a1);
extern T0* GE_boxed_pointer3(TC* ac, T3* a1);
typedef struct Sb3 Tb3;

/* INTEGER_8 */
#define T4 EIF_INTEGER_8
extern T0* GE_boxed4(TC* ac, T4 a1);
extern T0* GE_boxed_pointer4(TC* ac, T4* a1);
typedef struct Sb4 Tb4;

/* INTEGER_16 */
#define T5 EIF_INTEGER_16
extern T0* GE_boxed5(TC* ac, T5 a1);
extern T0* GE_boxed_pointer5(TC* ac, T5* a1);
typedef struct Sb5 Tb5;

/* INTEGER_32 */
#define T6 EIF_INTEGER_32
extern T0* GE_boxed6(TC* ac, T6 a1);
extern T0* GE_boxed_pointer6(TC* ac, T6* a1);
typedef struct Sb6 Tb6;

/* INTEGER_64 */
#define T7 EIF_INTEGER_64
extern T0* GE_boxed7(TC* ac, T7 a1);
extern T0* GE_boxed_pointer7(TC* ac, T7* a1);
typedef struct Sb7 Tb7;

/* NATURAL_8 */
#define T8 EIF_NATURAL_8
extern T0* GE_boxed8(TC* ac, T8 a1);
extern T0* GE_boxed_pointer8(TC* ac, T8* a1);
typedef struct Sb8 Tb8;

/* NATURAL_16 */
#define T9 EIF_NATURAL_16
extern T0* GE_boxed9(TC* ac, T9 a1);
extern T0* GE_boxed_pointer9(TC* ac, T9* a1);
typedef struct Sb9 Tb9;

/* NATURAL_32 */
#define T10 EIF_NATURAL_32
extern T0* GE_boxed10(TC* ac, T10 a1);
extern T0* GE_boxed_pointer10(TC* ac, T10* a1);
typedef struct Sb10 Tb10;

/* NATURAL_64 */
#define T11 EIF_NATURAL_64
extern T0* GE_boxed11(TC* ac, T11 a1);
extern T0* GE_boxed_pointer11(TC* ac, T11* a1);
typedef struct Sb11 Tb11;

/* REAL_32 */
#define T12 EIF_REAL_32
extern T0* GE_boxed12(TC* ac, T12 a1);
extern T0* GE_boxed_pointer12(TC* ac, T12* a1);
typedef struct Sb12 Tb12;

/* REAL_64 */
#define T13 EIF_REAL_64
extern T0* GE_boxed13(TC* ac, T13 a1);
extern T0* GE_boxed_pointer13(TC* ac, T13* a1);
typedef struct Sb13 Tb13;

/* POINTER */
#define T14 EIF_POINTER
extern T0* GE_boxed14(TC* ac, T14 a1);
extern T0* GE_boxed_pointer14(TC* ac, T14* a1);
typedef struct Sb14 Tb14;

/* SPECIAL [CHARACTER_8] */
typedef struct S15 T15;

/* SPECIAL [CHARACTER_32] */
typedef struct S16 T16;

/* STRING_8 */
typedef struct S17 T17;

/* STRING_32 */
typedef struct S18 T18;

/* IMMUTABLE_STRING_32 */
typedef struct S20 T20;

/* ISE_EXCEPTION_MANAGER */
typedef struct S21 T21;

/* GEC */
typedef struct S26 T26;

/* CELL [detachable EXCEPTION] */
typedef struct S27 T27;

/* HASH_TABLE [INTEGER_32, INTEGER_32] */
typedef struct S28 T28;

/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
typedef struct S29 T29;

/* CELL [NO_MORE_MEMORY] */
typedef struct S30 T30;

/* C_STRING */
typedef struct S31 T31;

/* TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
typedef struct S32 T32;

/* KL_ARGUMENTS */
typedef struct S33 T33;

/* ARRAY [STRING_8] */
typedef struct S34 T34;

/* SPECIAL [STRING_8] */
typedef struct S35 T35;

/* KL_EXCEPTIONS */
typedef struct S36 T36;

/* EXCEPTIONS */
typedef struct S37 T37;

/* KL_STANDARD_FILES */
typedef struct S38 T38;

/* KL_STDERR_FILE */
typedef struct S39 T39;

/* UTF_CONVERTER */
typedef struct S40 T40;
extern T0* GE_boxed40(TC* ac, T40 a1);
extern T0* GE_boxed_pointer40(TC* ac, T40* a1);
typedef struct Sb40 Tb40;

/* ET_ERROR_HANDLER */
typedef struct S42 T42;

/* KL_TEXT_INPUT_FILE */
typedef struct S43 T43;

/* UT_GOBO_VARIABLES */
typedef struct S44 T44;

/* UT_ISE_VARIABLES */
typedef struct S45 T45;

/* AP_FLAG */
typedef struct S46 T46;

/* KL_EXECUTION_ENVIRONMENT */
typedef struct S49 T49;

/* ET_SYSTEM */
typedef struct S50 T50;

/* AP_PARSER */
typedef struct S52 T52;

/* AP_ALTERNATIVE_OPTIONS_LIST */
typedef struct S53 T53;

/* AP_STRING_OPTION */
typedef struct S54 T54;

/* UT_VERSION */
typedef struct S56 T56;

/* AP_ENUMERATION_OPTION */
typedef struct S57 T57;

/* AP_BOOLEAN_OPTION */
typedef struct S58 T58;

/* AP_INTEGER_OPTION */
typedef struct S59 T59;

/* ET_NULL_ERROR_HANDLER */
typedef struct S63 T63;

/* ET_AST_FACTORY */
typedef struct S65 T65;

/* ET_SYSTEM_PROCESSOR */
typedef struct S66 T66;

/* ET_CLUSTER */
typedef struct S67 T67;

/* ET_EIFFEL_PARSER */
typedef struct S68 T68;

/* DS_ARRAYED_LIST [ET_CLASS] */
typedef struct S69 T69;

/* ET_CLASS */
typedef struct S70 T70;

/* TUPLE [ET_CLASS] */
typedef struct S74 T74;

/* PROCEDURE [TUPLE [ET_CLASS]] */
typedef struct S75 T75;

/* TUPLE */
typedef struct S76 T76;

/* TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
typedef struct S77 T77;

/* PREDICATE [TUPLE [ET_CLASS]] */
typedef struct S78 T78;

/* ET_CREATOR_LIST */
typedef struct S80 T80;

/* ET_TOKEN_CONSTANTS */
typedef struct S81 T81;

/* ET_CREATOR */
typedef struct S82 T82;

/* UT_CANNOT_READ_FILE_ERROR */
typedef struct S83 T83;

/* ET_ECF_SYSTEM_PARSER */
typedef struct S85 T85;

/* ET_ECF_ERROR_HANDLER */
typedef struct S86 T86;

/* ET_ECF_SYSTEM */
typedef struct S87 T87;

/* ET_ECF_TARGET */
typedef struct S88 T88;

/* ET_ECF_CLUSTER */
typedef struct S89 T89;

/* ET_ECF_SETTINGS */
typedef struct S90 T90;

/* ET_ECF_CAPABILITIES */
typedef struct S91 T91;

/* ET_ECF_VARIABLES */
typedef struct S92 T92;

/* ET_CLUSTERS */
typedef struct S94 T94;

/* ET_DYNAMIC_SYSTEM */
typedef struct S95 T95;

/* DT_DATE_TIME */
typedef struct S97 T97;

/* DS_HASH_SET [STRING_8] */
typedef struct S99 T99;

/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
typedef struct S100 T100;

/* ET_CLASS_TYPE */
typedef struct S102 T102;

/* UT_VERSION_NUMBER */
typedef struct S103 T103;

/* EXECUTION_ENVIRONMENT */
typedef struct S105 T105;

/* UT_MESSAGE */
typedef struct S106 T106;

/* RX_PCRE_REGULAR_EXPRESSION */
typedef struct S107 T107;

/* KL_STRING_ROUTINES */
typedef struct S108 T108;

/* ST_SPLITTER */
typedef struct S109 T109;

/* AP_ERROR */
typedef struct S113 T113;

/* ET_C_GENERATOR */
typedef struct S114 T114;

/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S116 T116;

/* KL_SHELL_COMMAND */
typedef struct S117 T117;

/* GECC */
typedef struct S118 T118;

/* KL_OPERATING_SYSTEM */
typedef struct S119 T119;

/* VOID_TARGET */
typedef struct S120 T120;

/* TYPE [VOID_TARGET] */
#define T121 EIF_TYPE_OBJ

/* ROUTINE_FAILURE */
typedef struct S122 T122;

/* TYPE [ROUTINE_FAILURE] */
#define T123 EIF_TYPE_OBJ

/* OLD_VIOLATION */
typedef struct S124 T124;

/* TYPE [OLD_VIOLATION] */
#define T125 EIF_TYPE_OBJ

/* NO_MORE_MEMORY */
typedef struct S126 T126;

/* INVARIANT_VIOLATION */
typedef struct S127 T127;

/* OPERATING_SYSTEM_SIGNAL_FAILURE */
typedef struct S128 T128;

/* IO_FAILURE */
typedef struct S129 T129;

/* OPERATING_SYSTEM_FAILURE */
typedef struct S130 T130;

/* COM_FAILURE */
typedef struct S131 T131;

/* EIFFEL_RUNTIME_PANIC */
typedef struct S132 T132;

/* PRECONDITION_VIOLATION */
typedef struct S134 T134;

/* POSTCONDITION_VIOLATION */
typedef struct S135 T135;

/* FLOATING_POINT_FAILURE */
typedef struct S136 T136;

/* CHECK_VIOLATION */
typedef struct S137 T137;

/* BAD_INSPECT_VALUE */
typedef struct S138 T138;

/* VARIANT_VIOLATION */
typedef struct S139 T139;

/* LOOP_INVARIANT_VIOLATION */
typedef struct S140 T140;

/* RESCUE_FAILURE */
typedef struct S141 T141;

/* RESUMPTION_FAILURE */
typedef struct S142 T142;

/* CREATE_ON_DEFERRED */
typedef struct S143 T143;

/* EXTERNAL_FAILURE */
typedef struct S144 T144;

/* VOID_ASSIGNED_TO_EXPANDED */
typedef struct S145 T145;

/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
typedef struct S146 T146;

/* MISMATCH_FAILURE */
typedef struct S147 T147;

/* DEVELOPER_EXCEPTION */
typedef struct S148 T148;

/* ADDRESS_APPLIED_TO_MELTED_FEATURE */
typedef struct S149 T149;

/* SERIALIZATION_FAILURE */
typedef struct S150 T150;

/* KL_WINDOWS_FILE_SYSTEM */
typedef struct S151 T151;

/* KL_UNIX_FILE_SYSTEM */
typedef struct S152 T152;

/* PRIMES */
typedef struct S153 T153;

/* SPECIAL [INTEGER_32] */
typedef struct S154 T154;

/* SPECIAL [BOOLEAN] */
typedef struct S155 T155;

/* ARGUMENTS_32 */
typedef struct S156 T156;

/* MUTEX */
typedef struct S159 T159;

/* UT_ERROR_HANDLER */
typedef struct S160 T160;

/* KL_STDOUT_FILE */
typedef struct S161 T161;

/* MANAGED_POINTER */
typedef struct S162 T162;

/* KL_LINKABLE [CHARACTER_8] */
typedef struct S164 T164;

/* FILE_INFO */
typedef struct S166 T166;

/* UC_UTF8_ROUTINES */
typedef struct S167 T167;

/* DS_ARRAYED_LIST [STRING_8] */
typedef struct S169 T169;

/* TUPLE [ET_UNIVERSE] */
typedef struct S170 T170;

/* PROCEDURE [TUPLE [ET_UNIVERSE]] */
typedef struct S171 T171;

/* TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE [ET_CLASS], BOOLEAN]] */
typedef struct S172 T172;

/* ET_ADAPTED_LIBRARIES */
typedef struct S173 T173;

/* ET_ADAPTED_DOTNET_ASSEMBLIES */
typedef struct S174 T174;

/* ET_IMPLICIT_TYPE_MARK */
typedef struct S176 T176;

/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
typedef struct S177 T177;

/* ET_CLASS_NAME_TESTER */
typedef struct S178 T178;

/* ET_PARENT */
typedef struct S180 T180;

/* ET_PARENT_LIST */
typedef struct S181 T181;

/* ET_CLIENT_LIST */
typedef struct S182 T182;

/* ET_TUPLE_TYPE */
typedef struct S183 T183;

/* ET_ACTUAL_PARAMETER_LIST */
typedef struct S185 T185;

/* ET_BUILTIN_CONVERT_FEATURE */
typedef struct S186 T186;

/* DS_HASH_SET [ET_UNIVERSE] */
typedef struct S187 T187;

/* ET_MASTER_CLASS */
typedef struct S188 T188;

/* ET_CLIENT */
typedef struct S189 T189;

/* ET_KEYWORD */
typedef struct S191 T191;

/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD */
typedef struct S192 T192;

/* ET_RENAME_LIST */
typedef struct S193 T193;

/* ET_EXPORT_LIST */
typedef struct S194 T194;

/* ET_KEYWORD_FEATURE_NAME_LIST */
typedef struct S195 T195;

/* ET_NONE_GROUP */
typedef struct S198 T198;

/* ET_LIKE_CURRENT */
typedef struct S199 T199;

/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
typedef struct S201 T201;

/* ET_LIBRARY */
typedef struct S203 T203;

/* TUPLE [ET_LIBRARY] */
typedef struct S204 T204;

/* PROCEDURE [TUPLE [ET_LIBRARY]] */
typedef struct S205 T205;

/* TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
typedef struct S206 T206;

/* ET_DOTNET_ASSEMBLY */
typedef struct S207 T207;

/* TUPLE [ET_DOTNET_ASSEMBLY] */
typedef struct S208 T208;

/* PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]] */
typedef struct S209 T209;

/* ST_WORD_WRAPPER */
typedef struct S210 T210;

/* AP_DISPLAY_HELP_FLAG */
typedef struct S212 T212;

/* DS_ARRAYED_LIST [AP_OPTION] */
typedef struct S213 T213;

/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S214 T214;

/* AP_ERROR_HANDLER */
typedef struct S215 T215;

/* DS_LINKABLE [AP_OPTION] */
typedef struct S216 T216;

/* DS_LINKED_LIST_CURSOR [AP_OPTION] */
typedef struct S217 T217;

/* DS_ARRAYED_LIST [detachable STRING_8] */
typedef struct S218 T218;

/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8] */
typedef struct S219 T219;

/* DS_LINKED_LIST [STRING_8] */
typedef struct S220 T220;

/* KL_STRING_EQUALITY_TESTER */
typedef struct S221 T221;

/* KL_EQUALITY_TESTER [STRING_8] */
typedef struct S222 T222;

/* DS_LINKED_LIST [BOOLEAN] */
typedef struct S225 T225;

/* DS_LINKED_LIST [INTEGER_32] */
typedef struct S228 T228;

/* KL_NULL_TEXT_OUTPUT_STREAM */
typedef struct S229 T229;

/* ET_EIFFEL_PREPARSER */
typedef struct S231 T231;

/* ET_MASTER_CLASS_CHECKER */
typedef struct S232 T232;

/* ET_PROVIDER_CHECKER */
typedef struct S233 T233;

/* ET_ANCESTOR_BUILDER */
typedef struct S234 T234;

/* ET_FEATURE_FLATTENER */
typedef struct S235 T235;

/* ET_INTERFACE_CHECKER */
typedef struct S236 T236;

/* ET_IMPLEMENTATION_CHECKER */
typedef struct S237 T237;

/* ET_AST_NULL_PROCESSOR */
typedef struct S238 T238;

/* DS_ARRAYED_LIST [INTEGER_32] */
typedef struct S239 T239;

/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
typedef struct S241 T241;

/* YY_UNICODE_FILE_BUFFER */
typedef struct S243 T243;

/* KL_STDIN_FILE */
typedef struct S244 T244;

/* DS_ARRAYED_STACK [INTEGER_32] */
typedef struct S245 T245;

/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S246 T246;

/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S247 T247;

/* DS_ARRAYED_STACK [detachable ET_KEYWORD] */
typedef struct S248 T248;

/* DS_ARRAYED_STACK [detachable ET_SYMBOL] */
typedef struct S249 T249;

/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
typedef struct S250 T250;

/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST] */
typedef struct S251 T251;

/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST] */
typedef struct S252 T252;

/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST] */
typedef struct S253 T253;

/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef struct S254 T254;

/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef struct S255 T255;

/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
typedef struct S256 T256;

/* DS_ARRAYED_LIST [ET_QUERY] */
typedef struct S257 T257;

/* DS_ARRAYED_LIST [ET_PROCEDURE] */
typedef struct S258 T258;

/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
typedef struct S259 T259;

/* DS_HASH_SET [ET_NAMED_CLASS] */
typedef struct S260 T260;

/* YY_BUFFER */
typedef struct S261 T261;

/* ET_UNKNOWN_GROUP */
typedef struct S262 T262;

/* KL_SPECIAL_ROUTINES [INTEGER_32] */
typedef struct S263 T263;

/* KL_UNICODE_CHARACTER_BUFFER */
typedef struct S265 T265;

/* ET_CLIENTS */
typedef struct S267 T267;

/* ET_FEATURE_CLAUSE */
typedef struct S268 T268;

/* KL_SPECIAL_ROUTINES [detachable ANY] */
typedef struct S271 T271;

/* SPECIAL [detachable ANY] */
typedef struct S272 T272;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
typedef struct S273 T273;

/* SPECIAL [detachable ET_KEYWORD] */
typedef struct S274 T274;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
typedef struct S275 T275;

/* ET_AGENT_KEYWORD */
typedef struct S276 T276;

/* SPECIAL [detachable ET_AGENT_KEYWORD] */
typedef struct S277 T277;

/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
typedef struct S278 T278;

/* ET_PRECURSOR_KEYWORD */
typedef struct S279 T279;

/* SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
typedef struct S280 T280;

/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
typedef struct S281 T281;

/* ET_SYMBOL */
typedef struct S282 T282;

/* SPECIAL [detachable ET_SYMBOL] */
typedef struct S283 T283;

/* KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
typedef struct S284 T284;

/* SPECIAL [detachable ET_POSITION] */
typedef struct S286 T286;

/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
typedef struct S287 T287;

/* SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
typedef struct S289 T289;

/* KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
typedef struct S290 T290;

/* SPECIAL [detachable ET_BREAK] */
typedef struct S292 T292;

/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
typedef struct S293 T293;

/* SPECIAL [detachable ET_CHARACTER_CONSTANT] */
typedef struct S295 T295;

/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
typedef struct S296 T296;

/* ET_CURRENT */
typedef struct S297 T297;

/* SPECIAL [detachable ET_CURRENT] */
typedef struct S298 T298;

/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
typedef struct S299 T299;

/* ET_FREE_OPERATOR */
typedef struct S300 T300;

/* SPECIAL [detachable ET_FREE_OPERATOR] */
typedef struct S301 T301;

/* KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER] */
typedef struct S302 T302;

/* ET_IDENTIFIER */
typedef struct S303 T303;

/* SPECIAL [detachable ET_IDENTIFIER] */
typedef struct S304 T304;

/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
typedef struct S305 T305;

/* SPECIAL [detachable ET_INTEGER_CONSTANT] */
typedef struct S307 T307;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
typedef struct S308 T308;

/* ET_KEYWORD_OPERATOR */
typedef struct S309 T309;

/* SPECIAL [detachable ET_KEYWORD_OPERATOR] */
typedef struct S310 T310;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
typedef struct S311 T311;

/* SPECIAL [detachable ET_MANIFEST_STRING] */
typedef struct S313 T313;

/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
typedef struct S314 T314;

/* SPECIAL [detachable ET_REAL_CONSTANT] */
typedef struct S316 T316;

/* KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
typedef struct S317 T317;

/* ET_RESULT */
typedef struct S318 T318;

/* SPECIAL [detachable ET_RESULT] */
typedef struct S319 T319;

/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
typedef struct S320 T320;

/* ET_RETRY_INSTRUCTION */
typedef struct S321 T321;

/* SPECIAL [detachable ET_RETRY_INSTRUCTION] */
typedef struct S322 T322;

/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
typedef struct S323 T323;

/* ET_SYMBOL_OPERATOR */
typedef struct S324 T324;

/* SPECIAL [detachable ET_SYMBOL_OPERATOR] */
typedef struct S325 T325;

/* KL_SPECIAL_ROUTINES [detachable ET_VOID] */
typedef struct S326 T326;

/* ET_VOID */
typedef struct S327 T327;

/* SPECIAL [detachable ET_VOID] */
typedef struct S328 T328;

/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
typedef struct S329 T329;

/* ET_SEMICOLON_SYMBOL */
typedef struct S330 T330;

/* SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
typedef struct S331 T331;

/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
typedef struct S332 T332;

/* ET_BRACKET_SYMBOL */
typedef struct S333 T333;

/* SPECIAL [detachable ET_BRACKET_SYMBOL] */
typedef struct S334 T334;

/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
typedef struct S335 T335;

/* ET_QUESTION_MARK_SYMBOL */
typedef struct S336 T336;

/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
typedef struct S337 T337;

/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
typedef struct S338 T338;

/* ET_ACROSS_EXPRESSION */
typedef struct S339 T339;

/* SPECIAL [detachable ET_ACROSS_EXPRESSION] */
typedef struct S340 T340;

/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
typedef struct S341 T341;

/* ET_ACROSS_INSTRUCTION */
typedef struct S342 T342;

/* SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
typedef struct S343 T343;

/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S344 T344;

/* ET_ACTUAL_ARGUMENT_LIST */
typedef struct S345 T345;

/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S346 T346;

/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S347 T347;

/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S348 T348;

/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef struct S349 T349;

/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef struct S350 T350;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S351 T351;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S353 T353;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S354 T354;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S356 T356;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S357 T357;

/* ET_AGENT_ARGUMENT_OPERAND_LIST */
typedef struct S358 T358;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S359 T359;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
typedef struct S360 T360;

/* SPECIAL [detachable ET_AGENT_TARGET] */
typedef struct S362 T362;

/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
typedef struct S363 T363;

/* ET_ALIAS_NAME */
typedef struct S364 T364;

/* SPECIAL [detachable ET_ALIAS_NAME] */
typedef struct S365 T365;

/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST] */
typedef struct S366 T366;

/* ET_ALIAS_NAME_LIST */
typedef struct S367 T367;

/* SPECIAL [detachable ET_ALIAS_NAME_LIST] */
typedef struct S368 T368;

/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
typedef struct S369 T369;

/* SPECIAL [detachable ET_ASSIGNER] */
typedef struct S371 T371;

/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
typedef struct S372 T372;

/* ET_BRACKET_EXPRESSION */
typedef struct S373 T373;

/* SPECIAL [detachable ET_BRACKET_EXPRESSION] */
typedef struct S374 T374;

/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
typedef struct S375 T375;

/* ET_CALL_AGENT */
typedef struct S376 T376;

/* SPECIAL [detachable ET_CALL_AGENT] */
typedef struct S377 T377;

/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S378 T378;

/* ET_QUALIFIED_CALL_EXPRESSION */
typedef struct S379 T379;

/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S380 T380;

/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
typedef struct S381 T381;

/* ET_CHECK_INSTRUCTION */
typedef struct S382 T382;

/* SPECIAL [detachable ET_CHECK_INSTRUCTION] */
typedef struct S383 T383;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
typedef struct S384 T384;

/* SPECIAL [detachable ET_CHOICE] */
typedef struct S386 T386;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
typedef struct S387 T387;

/* SPECIAL [detachable ET_CHOICE_CONSTANT] */
typedef struct S389 T389;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
typedef struct S390 T390;

/* SPECIAL [detachable ET_CHOICE_ITEM] */
typedef struct S392 T392;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
typedef struct S393 T393;

/* ET_CHOICE_LIST */
typedef struct S394 T394;

/* SPECIAL [detachable ET_CHOICE_LIST] */
typedef struct S395 T395;

/* KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
typedef struct S396 T396;

/* SPECIAL [detachable ET_CLASS] */
typedef struct S397 T397;

/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
typedef struct S398 T398;

/* SPECIAL [detachable ET_CLIENT_ITEM] */
typedef struct S399 T399;

/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
typedef struct S400 T400;

/* SPECIAL [detachable ET_CLIENTS] */
typedef struct S401 T401;

/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
typedef struct S402 T402;

/* ET_COMPOUND */
typedef struct S403 T403;

/* SPECIAL [detachable ET_COMPOUND] */
typedef struct S404 T404;

/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
typedef struct S405 T405;

/* SPECIAL [detachable ET_CONDITIONAL] */
typedef struct S407 T407;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
typedef struct S408 T408;

/* SPECIAL [detachable ET_CONSTANT] */
typedef struct S410 T410;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S411 T411;

/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S413 T413;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S414 T414;

/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
typedef struct S415 T415;

/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S416 T416;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
typedef struct S417 T417;

/* ET_CONSTRAINT_CREATOR */
typedef struct S418 T418;

/* SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
typedef struct S419 T419;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST] */
typedef struct S420 T420;

/* ET_CONSTRAINT_RENAME_LIST */
typedef struct S421 T421;

/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST] */
typedef struct S422 T422;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
typedef struct S423 T423;

/* SPECIAL [detachable ET_CONSTRAINT_TYPE] */
typedef struct S425 T425;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
typedef struct S426 T426;

/* SPECIAL [detachable ET_CONVERT_FEATURE] */
typedef struct S428 T428;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
typedef struct S429 T429;

/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
typedef struct S431 T431;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
typedef struct S432 T432;

/* ET_CONVERT_FEATURE_LIST */
typedef struct S433 T433;

/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
typedef struct S434 T434;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
typedef struct S435 T435;

/* ET_CREATE_EXPRESSION */
typedef struct S436 T436;

/* SPECIAL [detachable ET_CREATE_EXPRESSION] */
typedef struct S437 T437;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION] */
typedef struct S438 T438;

/* ET_CREATION_REGION */
typedef struct S439 T439;

/* SPECIAL [detachable ET_CREATION_REGION] */
typedef struct S440 T440;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
typedef struct S441 T441;

/* SPECIAL [detachable ET_CREATOR] */
typedef struct S442 T442;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
typedef struct S443 T443;

/* SPECIAL [detachable ET_CREATOR_LIST] */
typedef struct S444 T444;

/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
typedef struct S445 T445;

/* ET_DEBUG_INSTRUCTION */
typedef struct S446 T446;

/* SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
typedef struct S447 T447;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
typedef struct S448 T448;

/* ET_ELSEIF_EXPRESSION */
typedef struct S449 T449;

/* SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
typedef struct S450 T450;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
typedef struct S451 T451;

/* ET_ELSEIF_EXPRESSION_LIST */
typedef struct S452 T452;

/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
typedef struct S453 T453;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
typedef struct S454 T454;

/* ET_ELSEIF_PART */
typedef struct S455 T455;

/* SPECIAL [detachable ET_ELSEIF_PART] */
typedef struct S456 T456;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
typedef struct S457 T457;

/* ET_ELSEIF_PART_LIST */
typedef struct S458 T458;

/* SPECIAL [detachable ET_ELSEIF_PART_LIST] */
typedef struct S459 T459;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
typedef struct S460 T460;

/* SPECIAL [detachable ET_EXPORT] */
typedef struct S462 T462;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
typedef struct S463 T463;

/* SPECIAL [detachable ET_EXPORT_LIST] */
typedef struct S464 T464;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
typedef struct S465 T465;

/* SPECIAL [detachable ET_EXPRESSION] */
typedef struct S467 T467;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
typedef struct S468 T468;

/* SPECIAL [detachable ET_EXPRESSION_ITEM] */
typedef struct S470 T470;

/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
typedef struct S471 T471;

/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
typedef struct S473 T473;

/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
typedef struct S474 T474;

/* SPECIAL [detachable ET_EXTERNAL_ALIAS] */
typedef struct S476 T476;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
typedef struct S477 T477;

/* SPECIAL [detachable ET_FEATURE_CLAUSE] */
typedef struct S478 T478;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
typedef struct S479 T479;

/* ET_FEATURE_CLAUSE_LIST */
typedef struct S480 T480;

/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
typedef struct S481 T481;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
typedef struct S482 T482;

/* ET_FEATURE_EXPORT */
typedef struct S483 T483;

/* SPECIAL [detachable ET_FEATURE_EXPORT] */
typedef struct S484 T484;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
typedef struct S485 T485;

/* SPECIAL [detachable ET_FEATURE_NAME] */
typedef struct S486 T486;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
typedef struct S487 T487;

/* SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
typedef struct S489 T489;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
typedef struct S490 T490;

/* ET_FORMAL_ARGUMENT */
typedef struct S491 T491;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT] */
typedef struct S492 T492;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S493 T493;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S495 T495;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S496 T496;

/* ET_FORMAL_ARGUMENT_LIST */
typedef struct S497 T497;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S498 T498;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
typedef struct S499 T499;

/* ET_FORMAL_PARAMETER */
typedef struct S500 T500;

/* SPECIAL [detachable ET_FORMAL_PARAMETER] */
typedef struct S501 T501;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef struct S502 T502;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef struct S504 T504;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
typedef struct S505 T505;

/* ET_FORMAL_PARAMETER_LIST */
typedef struct S506 T506;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
typedef struct S507 T507;

/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
typedef struct S508 T508;

/* ET_IF_EXPRESSION */
typedef struct S509 T509;

/* SPECIAL [detachable ET_IF_EXPRESSION] */
typedef struct S510 T510;

/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
typedef struct S511 T511;

/* ET_IF_INSTRUCTION */
typedef struct S512 T512;

/* SPECIAL [detachable ET_IF_INSTRUCTION] */
typedef struct S513 T513;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
typedef struct S514 T514;

/* SPECIAL [detachable ET_INLINE_AGENT] */
typedef struct S516 T516;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S517 T517;

/* ET_INLINE_SEPARATE_ARGUMENT */
typedef struct S518 T518;

/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S519 T519;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
typedef struct S520 T520;

/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
typedef struct S522 T522;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
typedef struct S523 T523;

/* ET_INLINE_SEPARATE_ARGUMENTS */
typedef struct S524 T524;

/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
typedef struct S525 T525;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
typedef struct S526 T526;

/* ET_INLINE_SEPARATE_INSTRUCTION */
typedef struct S527 T527;

/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
typedef struct S528 T528;

/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION] */
typedef struct S529 T529;

/* ET_INSPECT_EXPRESSION */
typedef struct S530 T530;

/* SPECIAL [detachable ET_INSPECT_EXPRESSION] */
typedef struct S531 T531;

/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
typedef struct S532 T532;

/* ET_INSPECT_INSTRUCTION */
typedef struct S533 T533;

/* SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
typedef struct S534 T534;

/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
typedef struct S535 T535;

/* SPECIAL [detachable ET_INSTRUCTION] */
typedef struct S537 T537;

/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
typedef struct S538 T538;

/* ET_INVARIANTS */
typedef struct S539 T539;

/* SPECIAL [detachable ET_INVARIANTS] */
typedef struct S540 T540;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S541 T541;

/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S542 T542;

/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
typedef struct S543 T543;

/* SPECIAL [detachable ET_LIKE_TYPE] */
typedef struct S545 T545;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
typedef struct S546 T546;

/* ET_LOCAL_VARIABLE */
typedef struct S547 T547;

/* SPECIAL [detachable ET_LOCAL_VARIABLE] */
typedef struct S548 T548;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef struct S549 T549;

/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef struct S551 T551;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S552 T552;

/* ET_LOCAL_VARIABLE_LIST */
typedef struct S553 T553;

/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S554 T554;

/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
typedef struct S555 T555;

/* ET_LOOP_INVARIANTS */
typedef struct S556 T556;

/* SPECIAL [detachable ET_LOOP_INVARIANTS] */
typedef struct S557 T557;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
typedef struct S558 T558;

/* ET_MANIFEST_ARRAY */
typedef struct S559 T559;

/* SPECIAL [detachable ET_MANIFEST_ARRAY] */
typedef struct S560 T560;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
typedef struct S561 T561;

/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
typedef struct S563 T563;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
typedef struct S564 T564;

/* ET_MANIFEST_STRING_LIST */
typedef struct S565 T565;

/* SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
typedef struct S566 T566;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
typedef struct S567 T567;

/* ET_MANIFEST_TUPLE */
typedef struct S568 T568;

/* SPECIAL [detachable ET_MANIFEST_TUPLE] */
typedef struct S569 T569;

/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST] */
typedef struct S570 T570;

/* ET_NOTE_LIST */
typedef struct S571 T571;

/* SPECIAL [detachable ET_NOTE_LIST] */
typedef struct S572 T572;

/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM] */
typedef struct S573 T573;

/* SPECIAL [detachable ET_NOTE_ITEM] */
typedef struct S575 T575;

/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM] */
typedef struct S576 T576;

/* SPECIAL [detachable ET_NOTE_TERM] */
typedef struct S578 T578;

/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM] */
typedef struct S579 T579;

/* SPECIAL [detachable ET_NOTE_TERM_ITEM] */
typedef struct S581 T581;

/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST] */
typedef struct S582 T582;

/* ET_NOTE_TERM_LIST */
typedef struct S583 T583;

/* SPECIAL [detachable ET_NOTE_TERM_LIST] */
typedef struct S584 T584;

/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
typedef struct S585 T585;

/* SPECIAL [detachable ET_OBSOLETE] */
typedef struct S587 T587;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef struct S588 T588;

/* ET_PARENTHESIZED_EXPRESSION */
typedef struct S589 T589;

/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef struct S590 T590;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
typedef struct S591 T591;

/* SPECIAL [detachable ET_PARENT] */
typedef struct S592 T592;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
typedef struct S593 T593;

/* ET_PARENT_CLAUSE_LIST */
typedef struct S594 T594;

/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
typedef struct S595 T595;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
typedef struct S596 T596;

/* SPECIAL [detachable ET_PARENT_ITEM] */
typedef struct S597 T597;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
typedef struct S598 T598;

/* SPECIAL [detachable ET_PARENT_LIST] */
typedef struct S599 T599;

/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
typedef struct S600 T600;

/* ET_POSTCONDITIONS */
typedef struct S601 T601;

/* SPECIAL [detachable ET_POSTCONDITIONS] */
typedef struct S602 T602;

/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
typedef struct S603 T603;

/* ET_PRECONDITIONS */
typedef struct S604 T604;

/* SPECIAL [detachable ET_PRECONDITIONS] */
typedef struct S605 T605;

/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
typedef struct S606 T606;

/* SPECIAL [detachable ET_PROCEDURE] */
typedef struct S608 T608;

/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S609 T609;

/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S611 T611;

/* KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION] */
typedef struct S612 T612;

/* ET_QUANTIFIER_EXPRESSION */
typedef struct S613 T613;

/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION] */
typedef struct S614 T614;

/* KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
typedef struct S615 T615;

/* SPECIAL [detachable ET_QUERY] */
typedef struct S617 T617;

/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
typedef struct S618 T618;

/* SPECIAL [detachable ET_RENAME_ITEM] */
typedef struct S620 T620;

/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
typedef struct S621 T621;

/* SPECIAL [detachable ET_RENAME_LIST] */
typedef struct S622 T622;

/* KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION] */
typedef struct S623 T623;

/* ET_REPEAT_INSTRUCTION */
typedef struct S624 T624;

/* SPECIAL [detachable ET_REPEAT_INSTRUCTION] */
typedef struct S625 T625;

/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
typedef struct S626 T626;

/* ET_STATIC_CALL_EXPRESSION */
typedef struct S627 T627;

/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
typedef struct S628 T628;

/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
typedef struct S629 T629;

/* ET_STRIP_EXPRESSION */
typedef struct S630 T630;

/* SPECIAL [detachable ET_STRIP_EXPRESSION] */
typedef struct S631 T631;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
typedef struct S632 T632;

/* SPECIAL [detachable ET_TYPE] */
typedef struct S633 T633;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT] */
typedef struct S634 T634;

/* SPECIAL [detachable ET_TYPE_CONSTRAINT] */
typedef struct S636 T636;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM] */
typedef struct S637 T637;

/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM] */
typedef struct S639 T639;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST] */
typedef struct S640 T640;

/* ET_TYPE_CONSTRAINT_LIST */
typedef struct S641 T641;

/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST] */
typedef struct S642 T642;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
typedef struct S643 T643;

/* SPECIAL [detachable ET_TYPE_ITEM] */
typedef struct S645 T645;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
typedef struct S646 T646;

/* SPECIAL [detachable ET_TYPE_LIST] */
typedef struct S648 T648;

/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
typedef struct S649 T649;

/* ET_VARIANT */
typedef struct S650 T650;

/* SPECIAL [detachable ET_VARIANT] */
typedef struct S651 T651;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION] */
typedef struct S652 T652;

/* ET_WHEN_EXPRESSION */
typedef struct S653 T653;

/* SPECIAL [detachable ET_WHEN_EXPRESSION] */
typedef struct S654 T654;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST] */
typedef struct S655 T655;

/* ET_WHEN_EXPRESSION_LIST */
typedef struct S656 T656;

/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST] */
typedef struct S657 T657;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
typedef struct S658 T658;

/* ET_WHEN_PART */
typedef struct S659 T659;

/* SPECIAL [detachable ET_WHEN_PART] */
typedef struct S660 T660;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
typedef struct S661 T661;

/* ET_WHEN_PART_LIST */
typedef struct S662 T662;

/* SPECIAL [detachable ET_WHEN_PART_LIST] */
typedef struct S663 T663;

/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
typedef struct S664 T664;

/* SPECIAL [detachable ET_WRITABLE] */
typedef struct S666 T666;

/* ET_OBJECT_TEST_LIST */
typedef struct S668 T668;

/* ET_ITERATION_COMPONENT_LIST */
typedef struct S669 T669;

/* ET_INLINE_SEPARATE_ARGUMENT_LIST */
typedef struct S670 T670;

/* ET_C3_CHARACTER_CONSTANT */
typedef struct S671 T671;

/* ET_REGULAR_MANIFEST_STRING */
typedef struct S672 T672;

/* ET_SPECIAL_MANIFEST_STRING */
typedef struct S673 T673;

/* ET_VERBATIM_STRING */
typedef struct S674 T674;

/* ET_REGULAR_INTEGER_CONSTANT */
typedef struct S675 T675;

/* ET_UNDERSCORED_INTEGER_CONSTANT */
typedef struct S676 T676;

/* ET_HEXADECIMAL_INTEGER_CONSTANT */
typedef struct S677 T677;

/* ET_OCTAL_INTEGER_CONSTANT */
typedef struct S678 T678;

/* ET_BINARY_INTEGER_CONSTANT */
typedef struct S679 T679;

/* ET_REGULAR_REAL_CONSTANT */
typedef struct S680 T680;

/* ET_UNDERSCORED_REAL_CONSTANT */
typedef struct S681 T681;

/* ET_TRUE_CONSTANT */
typedef struct S683 T683;

/* ET_FALSE_CONSTANT */
typedef struct S684 T684;

/* ET_C1_CHARACTER_CONSTANT */
typedef struct S685 T685;

/* ET_C2_CHARACTER_CONSTANT */
typedef struct S686 T686;

/* ET_TAGGED_NOTE */
typedef struct S688 T688;

/* ET_NOTE */
typedef struct S689 T689;

/* ET_CUSTOM_ATTRIBUTE */
typedef struct S690 T690;

/* ET_CONSTRAINED_FORMAL_PARAMETER */
typedef struct S691 T691;

/* ET_TYPE_RENAME_CONSTRAINT */
typedef struct S692 T692;

/* ET_CONSTRAINT_NAMED_TYPE */
typedef struct S693 T693;

/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
typedef struct S694 T694;

/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S695 T695;

/* ET_RENAME */
typedef struct S696 T696;

/* ET_ALL_EXPORT */
typedef struct S697 T697;

/* ET_CONVERT_FUNCTION */
typedef struct S699 T699;

/* ET_CONVERT_PROCEDURE */
typedef struct S700 T700;

/* ET_ATTRIBUTE */
typedef struct S702 T702;

/* ET_EXTENDED_ATTRIBUTE */
typedef struct S703 T703;

/* ET_CONSTANT_ATTRIBUTE */
typedef struct S704 T704;

/* ET_UNIQUE_ATTRIBUTE */
typedef struct S705 T705;

/* ET_DO_FUNCTION */
typedef struct S706 T706;

/* ET_ONCE_FUNCTION */
typedef struct S707 T707;

/* ET_DEFERRED_FUNCTION */
typedef struct S708 T708;

/* ET_EXTERNAL_FUNCTION */
typedef struct S710 T710;

/* ET_DO_PROCEDURE */
typedef struct S711 T711;

/* ET_ONCE_PROCEDURE */
typedef struct S712 T712;

/* ET_DEFERRED_PROCEDURE */
typedef struct S713 T713;

/* ET_EXTERNAL_PROCEDURE */
typedef struct S714 T714;

/* ET_ALIASED_FEATURE_NAME */
typedef struct S715 T715;

/* ET_ALIAS_FREE_NAME */
typedef struct S716 T716;

/* ET_CLASS_ASSERTION */
typedef struct S719 T719;

/* ET_LABELED_ACTUAL_PARAMETER */
typedef struct S720 T720;

/* ET_LIKE_FEATURE */
typedef struct S722 T722;

/* ET_QUALIFIED_LIKE_BRACED_TYPE */
typedef struct S724 T724;

/* ET_QUALIFIED_LIKE_TYPE */
typedef struct S725 T725;

/* ET_ASSIGNER_INSTRUCTION */
typedef struct S726 T726;

/* ET_ASSIGNMENT */
typedef struct S727 T727;

/* ET_ASSIGNMENT_ATTEMPT */
typedef struct S728 T728;

/* ET_LOOP_INSTRUCTION */
typedef struct S729 T729;

/* ET_BANG_INSTRUCTION */
typedef struct S731 T731;

/* ET_QUALIFIED_CALL */
typedef struct S732 T732;

/* ET_CREATE_INSTRUCTION */
typedef struct S734 T734;

/* ET_CHOICE_RANGE */
typedef struct S735 T735;

/* ET_QUALIFIED_CALL_INSTRUCTION */
typedef struct S736 T736;

/* ET_PRECURSOR_INSTRUCTION */
typedef struct S737 T737;

/* ET_STATIC_CALL_INSTRUCTION */
typedef struct S739 T739;

/* ET_PRECURSOR_EXPRESSION */
typedef struct S740 T740;

/* ET_FEATURE_ADDRESS */
typedef struct S741 T741;

/* ET_CURRENT_ADDRESS */
typedef struct S742 T742;

/* ET_RESULT_ADDRESS */
typedef struct S743 T743;

/* ET_EXPRESSION_ADDRESS */
typedef struct S744 T744;

/* ET_INFIX_EXPRESSION */
typedef struct S745 T745;

/* ET_INFIX_AND_THEN_OPERATOR */
typedef struct S746 T746;

/* ET_INFIX_OR_ELSE_OPERATOR */
typedef struct S747 T747;

/* ET_EQUALITY_EXPRESSION */
typedef struct S748 T748;

/* ET_OBJECT_EQUALITY_EXPRESSION */
typedef struct S749 T749;

/* ET_MANIFEST_TYPE */
typedef struct S750 T750;

/* ET_PREFIX_EXPRESSION */
typedef struct S751 T751;

/* ET_OLD_EXPRESSION */
typedef struct S752 T752;

/* ET_OLD_OBJECT_TEST */
typedef struct S753 T753;

/* ET_OBJECT_TEST */
typedef struct S754 T754;

/* ET_NAMED_OBJECT_TEST */
typedef struct S755 T755;

/* ET_ONCE_MANIFEST_STRING */
typedef struct S756 T756;

/* ET_ITERATION_CURSOR */
typedef struct S757 T757;

/* ET_DO_FUNCTION_INLINE_AGENT */
typedef struct S759 T759;

/* ET_ONCE_FUNCTION_INLINE_AGENT */
typedef struct S760 T760;

/* ET_EXTERNAL_FUNCTION_INLINE_AGENT */
typedef struct S761 T761;

/* ET_DO_PROCEDURE_INLINE_AGENT */
typedef struct S762 T762;

/* ET_ONCE_PROCEDURE_INLINE_AGENT */
typedef struct S763 T763;

/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
typedef struct S764 T764;

/* ET_AGENT_OPEN_TARGET */
typedef struct S765 T765;

/* ET_AGENT_TYPED_OPEN_ARGUMENT */
typedef struct S766 T766;

/* ET_QUERY_LIST */
typedef struct S769 T769;

/* ET_PROCEDURE_LIST */
typedef struct S770 T770;

/* ET_TAGGED_ASSERTION */
typedef struct S772 T772;

/* ET_FILE_POSITION */
typedef struct S774 T774;

/* SPECIAL [ET_CLASS] */
typedef struct S775 T775;

/* KL_SPECIAL_ROUTINES [ET_CLASS] */
typedef struct S776 T776;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
typedef struct S777 T777;

/* ET_BASE_TYPE_LIST */
typedef struct S778 T778;

/* ET_CLASS_CODES */
typedef struct S779 T779;

/* ET_ECF_AST_FACTORY */
typedef struct S780 T780;

/* DS_CELL [detachable ET_ECF_SYSTEM] */
typedef struct S781 T781;

/* TUPLE [ET_ECF_TARGET] */
typedef struct S782 T782;

/* PROCEDURE [TUPLE [ET_ECF_TARGET]] */
typedef struct S783 T783;

/* TUPLE [ET_ECF_SYSTEM_PARSER] */
typedef struct S784 T784;

/* XM_ELEMENT */
typedef struct S785 T785;

/* XM_POSITION_TABLE */
typedef struct S786 T786;

/* TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8] */
typedef struct S787 T787;

/* PROCEDURE [TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8]] */
typedef struct S788 T788;

/* TUPLE [ET_ECF_SYSTEM_PARSER, detachable STRING_8, PROCEDURE [TUPLE [ET_ECF_TARGET]], DS_CELL [detachable ET_ECF_SYSTEM]] */
typedef struct S789 T789;

/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
typedef struct S791 T791;

/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
typedef struct S792 T792;

/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
typedef struct S793 T793;

/* XM_EIFFEL_PARSER */
typedef struct S795 T795;

/* XM_TREE_CALLBACKS_PIPE */
typedef struct S796 T796;

/* XM_CALLBACKS_TO_TREE_FILTER */
typedef struct S799 T799;

/* ET_ECF_STATE */
typedef struct S800 T800;

/* ET_ECF_SYSTEM_CONFIG */
typedef struct S801 T801;

/* ET_ECF_LIBRARY */
typedef struct S802 T802;

/* TUPLE [ET_ADAPTED_LIBRARY] */
typedef struct S804 T804;

/* PROCEDURE [TUPLE [ET_ADAPTED_LIBRARY]] */
typedef struct S805 T805;

/* XM_DOCUMENT */
typedef struct S806 T806;

/* ET_COMPRESSED_POSITION */
typedef struct S807 T807;

/* XM_STOP_ON_ERROR_FILTER */
typedef struct S809 T809;

/* XM_ATTRIBUTE */
typedef struct S810 T810;

/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8] */
typedef struct S811 T811;

/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8] */
typedef struct S812 T812;

/* ET_ECF_TARGET_PARENT */
typedef struct S813 T813;

/* DS_CELL [detachable ET_ECF_SYSTEM_CONFIG] */
typedef struct S814 T814;

/* TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_INTERNAL_UNIVERSE, DS_CELL [detachable ET_ECF_SYSTEM_CONFIG]] */
typedef struct S815 T815;

/* ET_ECF_TARGETS */
typedef struct S816 T816;

/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8] */
typedef struct S817 T817;

/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
typedef struct S818 T818;

/* DS_CELL [detachable ET_ECF_LIBRARY] */
typedef struct S820 T820;

/* ET_ECF_ADAPTED_LIBRARY */
typedef struct S821 T821;

/* TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_ADAPTED_LIBRARY, DS_CELL [detachable ET_ECF_LIBRARY]] */
typedef struct S822 T822;

/* ET_ECF_DOTNET_ASSEMBLY */
typedef struct S824 T824;

/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
typedef struct S826 T826;

/* DS_HASH_TABLE [STRING_8, STRING_8] */
typedef struct S827 T827;

/* ET_ECF_ERROR */
typedef struct S828 T828;

/* ET_ECF_CLUSTERS */
typedef struct S829 T829;

/* KL_AGENT_HASH_FUNCTION [STRING_8] */
typedef struct S830 T830;

/* TUPLE [STRING_8] */
typedef struct S831 T831;

/* FUNCTION [TUPLE [STRING_8], INTEGER_32] */
typedef struct S832 T832;

/* TUPLE [KL_STRING_ROUTINES] */
typedef struct S833 T833;

/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8] */
typedef struct S835 T835;

/* DS_ARRAYED_LIST [ET_CLUSTER] */
typedef struct S837 T837;

/* ET_DYNAMIC_PRIMARY_TYPE */
typedef struct S838 T838;

/* ET_DYNAMIC_FEATURE_LIST */
typedef struct S839 T839;

/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
typedef struct S840 T840;

/* TUPLE [INTEGER_32] */
typedef struct S841 T841;

/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
typedef struct S842 T842;

/* TUPLE [ET_DYNAMIC_SYSTEM] */
typedef struct S843 T843;

/* ET_DYNAMIC_FEATURE */
typedef struct S845 T845;

/* ET_NESTED_TYPE_CONTEXT */
typedef struct S847 T847;

/* ET_FORMAL_PARAMETER_TYPE */
typedef struct S848 T848;

/* ARRAY [ET_TYPE] */
typedef struct S849 T849;

/* SPECIAL [ET_TYPE] */
typedef struct S850 T850;

/* ET_SYSTEM_MULTIPROCESSOR */
typedef struct S853 T853;

/* DS_HASH_SET_CURSOR [STRING_8] */
typedef struct S854 T854;

/* KL_SPECIAL_ROUTINES [STRING_8] */
typedef struct S855 T855;

/* TYPE [STRING_8] */
#define T856 EIF_TYPE_OBJ

/* ET_FEATURE_CHECKER */
typedef struct S857 T857;

/* ET_DYNAMIC_TYPE_SET_LIST */
typedef struct S858 T858;

/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S859 T859;

/* ET_DYNAMIC_PRECURSOR */
typedef struct S860 T860;

/* ET_DYNAMIC_PRECURSOR_LIST */
typedef struct S861 T861;

/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S862 T862;

/* ET_TYPE_CHECKER */
typedef struct S864 T864;

/* DS_ARRAYED_LIST [ET_INLINE_AGENT] */
typedef struct S867 T867;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S868 T868;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S869 T869;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S870 T870;

/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
typedef struct S871 T871;

/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
typedef struct S872 T872;

/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
typedef struct S873 T873;

/* ET_OBJECT_TEST_SCOPE */
typedef struct S874 T874;

/* ET_OBJECT_TEST_SCOPE_BUILDER */
typedef struct S875 T875;

/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
typedef struct S876 T876;

/* ET_ITERATION_ITEM_SCOPE */
typedef struct S877 T877;

/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S878 T878;

/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE */
typedef struct S879 T879;

/* ET_ATTACHMENT_SCOPE */
typedef struct S880 T880;

/* ET_ATTACHMENT_SCOPE_BUILDER */
typedef struct S881 T881;

/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
typedef struct S882 T882;

/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE] */
typedef struct S883 T883;

/* DS_ARRAYED_LIST [ET_NOTE_TERM] */
typedef struct S884 T884;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
typedef struct S885 T885;

/* ET_ADAPTED_BASE_CLASS_CHECKER */
typedef struct S886 T886;

/* ET_DYNAMIC_QUALIFIED_QUERY_CALL */
typedef struct S888 T888;

/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
typedef struct S889 T889;

/* ET_DYNAMIC_TUPLE_TYPE */
typedef struct S894 T894;

/* ET_FEATURE_LIST */
typedef struct S897 T897;

/* NATIVE_STRING */
typedef struct S899 T899;

/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
typedef struct S900 T900;

/* RX_BYTE_CODE */
typedef struct S902 T902;

/* RX_CHARACTER_SET */
typedef struct S903 T903;

/* RX_CASE_MAPPING */
typedef struct S904 T904;

/* UC_UNICODE_ROUTINES */
typedef struct S906 T906;

/* ARRAY [RX_CHARACTER_SET] */
typedef struct S907 T907;

/* SPECIAL [RX_CHARACTER_SET] */
typedef struct S908 T908;

/* UC_STRING */
typedef struct S909 T909;

/* DS_LINKED_LIST_CURSOR [STRING_8] */
typedef struct S910 T910;

/* DS_HASH_SET [NATURAL_32] */
typedef struct S911 T911;

/* KL_STRING_OUTPUT_STREAM */
typedef struct S912 T912;

/* DS_ARRAYED_LIST [ET_IDENTIFIER] */
typedef struct S913 T913;

/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S914 T914;

/* DS_ARRAYED_LIST [BOOLEAN] */
typedef struct S915 T915;

/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
typedef struct S916 T916;

/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES] */
typedef struct S917 T917;

/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
typedef struct S918 T918;

/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION] */
typedef struct S919 T919;

/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S920 T920;

/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S921 T921;

/* DS_ARRAYED_LIST [ET_RESULT] */
typedef struct S922 T922;

/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST */
typedef struct S923 T923;

/* ET_DYNAMIC_STANDALONE_TYPE_SET */
typedef struct S924 T924;

/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S925 T925;

/* DS_ARRAYED_STACK [ET_EXPRESSION] */
typedef struct S926 T926;

/* DS_ARRAYED_LIST [ET_EXPRESSION] */
typedef struct S927 T927;

/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
typedef struct S928 T928;

/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
typedef struct S929 T929;

/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S930 T930;

/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S931 T931;

/* DS_ARRAYED_LIST [ET_OBJECT_TEST] */
typedef struct S932 T932;

/* DS_HASH_SET [INTEGER_32] */
typedef struct S933 T933;

/* DS_ARRAYED_LIST [ET_AGENT] */
typedef struct S934 T934;

/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION */
typedef struct S935 T935;

/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION */
typedef struct S937 T937;

/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S938 T938;

/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE] */
typedef struct S939 T939;

/* ARRAY [INTEGER_32] */
typedef struct S940 T940;

/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
typedef struct S941 T941;

/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
typedef struct S942 T942;

/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S943 T943;

/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION] */
typedef struct S944 T944;

/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT] */
typedef struct S945 T945;

/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
typedef struct S946 T946;

/* DS_HASH_SET [ET_DYNAMIC_FEATURE] */
typedef struct S947 T947;

/* DS_HASH_TABLE [BOOLEAN, STRING_8] */
typedef struct S948 T948;

/* DS_STRING_HASH_TABLE */
typedef struct S949 T949;

/* KL_TEXT_OUTPUT_FILE */
typedef struct S950 T950;

/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
typedef struct S951 T951;

/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR */
typedef struct S952 T952;

/* UT_CANNOT_WRITE_TO_FILE_ERROR */
typedef struct S953 T953;

/* KL_DIRECTORY */
typedef struct S954 T954;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]] */
typedef struct S955 T955;

/* DS_QUICK_SORTER [STRING_8] */
typedef struct S956 T956;

/* UC_STRING_COMPARATOR */
typedef struct S957 T957;

/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8] */
typedef struct S958 T958;

/* TUPLE [STRING_8, STRING_8] */
typedef struct S961 T961;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S962 T962;

/* ET_DYNAMIC_EQUALITY_TYPES */
typedef struct S963 T963;

/* ET_DYNAMIC_OBJECT_EQUALITY_TYPES */
typedef struct S965 T965;

/* ET_DYNAMIC_SPECIAL_TYPE */
typedef struct S966 T966;

/* DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S968 T968;

/* ET_DYNAMIC_SECONDARY_TYPE */
typedef struct S969 T969;

/* ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID */
typedef struct S970 T970;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S976 T976;

/* ET_DYNAMIC_INLINED_EXPRESSION */
typedef struct S980 T980;

/* ET_DYNAMIC_CALL_CONTEXT */
typedef struct S981 T981;

/* DS_QUICK_SORTER [INTEGER_32] */
typedef struct S982 T982;

/* PROCEDURE [TUPLE] */
typedef struct S984 T984;

/* TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S985 T985;

/* TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S986 T986;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S987 T987;

/* TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S988 T988;

/* UT_INTEGER_FORMATTER */
typedef struct S989 T989;

/* TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S994 T994;

/* TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S995 T995;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S999 T999;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S1004 T1004;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, INTEGER_32, INTEGER_32] */
typedef struct S1005 T1005;

/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S1006 T1006;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S1007 T1007;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S1008 T1008;

/* TUPLE [GECC, DS_ARRAYED_LIST [STRING_8], INTEGER_32, MUTEX] */
typedef struct S1011 T1011;

/* WORKER_THREAD */
typedef struct S1012 T1012;

/* PATH */
typedef struct S1014 T1014;

/* STRING_TO_INTEGER_CONVERTOR */
typedef struct S1015 T1015;

/* STRING_8_SEARCHER */
typedef struct S1017 T1017;

/* STD_FILES */
typedef struct S1019 T1019;

/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
typedef struct S1020 T1020;

/* DT_SHARED_SYSTEM_CLOCK */
typedef struct S1022 T1022;

/* DT_SYSTEM_CLOCK */
typedef struct S1023 T1023;

/* DT_DATE_TIME_DURATION */
typedef struct S1024 T1024;

/* DS_HASH_TABLE [INTEGER_32, STRING_8] */
typedef struct S1029 T1029;

/* ET_CONSTRAINT_GENERIC_NAMED_TYPE */
typedef struct S1032 T1032;

/* ET_UNQUALIFIED_CALL_EXPRESSION */
typedef struct S1033 T1033;

/* ET_UNQUALIFIED_CALL_INSTRUCTION */
typedef struct S1034 T1034;

/* KL_ARRAY_ROUTINES [INTEGER_32] */
typedef struct S1035 T1035;

/* DS_CELL [detachable ET_ECF_CONFIG] */
typedef struct S1038 T1038;

/* TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_SYSTEM, DS_CELL [detachable ET_ECF_CONFIG]] */
typedef struct S1040 T1040;

/* ET_ECF_OPTIONS */
typedef struct S1042 T1042;

/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT] */
typedef struct S1043 T1043;

/* XM_NAMESPACE */
typedef struct S1044 T1044;

/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
typedef struct S1045 T1045;

/* ET_ECF_REDIRECTION_CONFIG */
typedef struct S1047 T1047;

/* ET_DYNAMIC_PROCEDURE_TYPE */
typedef struct S1048 T1048;

/* ET_DYNAMIC_FUNCTION_TYPE */
typedef struct S1049 T1049;

/* ET_DYNAMIC_PUSH_TYPE_SET */
typedef struct S1050 T1050;

/* KL_PLATFORM */
typedef struct S1051 T1051;

/* UT_CONFIG_PARSER */
typedef struct S1052 T1052;

/* KL_COMPARABLE_COMPARATOR [INTEGER_32] */
typedef struct S1053 T1053;

/* CELL [INTEGER_32] */
typedef struct S1056 T1056;

/* KL_PATHNAME */
typedef struct S1058 T1058;

/* KL_ANY_ROUTINES */
typedef struct S1059 T1059;

/* KL_WINDOWS_INPUT_FILE */
typedef struct S1060 T1060;

/* KL_UNIX_INPUT_FILE */
typedef struct S1061 T1061;

/* ARRAY [IMMUTABLE_STRING_32] */
typedef struct S1062 T1062;

/* SPECIAL [IMMUTABLE_STRING_32] */
typedef struct S1063 T1063;

/* SPECIAL [NATURAL_8] */
typedef struct S1064 T1064;

/* TYPED_POINTER [SPECIAL [NATURAL_8]] */
typedef struct S1065 T1065;
extern T0* GE_boxed1065(TC* ac, T1065 a1);
extern T0* GE_boxed_pointer1065(TC* ac, T1065* a1);
typedef struct Sb1065 Tb1065;

/* UC_UTF8_STRING */
typedef struct S1066 T1066;

/* DS_ARRAYED_LIST_CURSOR [STRING_8] */
typedef struct S1067 T1067;

/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
typedef struct S1068 T1068;

/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1069 T1069;

/* SPECIAL [ET_MASTER_CLASS] */
typedef struct S1070 T1070;

/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
typedef struct S1073 T1073;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
typedef struct S1074 T1074;

/* SPECIAL [ET_CLASS_NAME] */
typedef struct S1075 T1075;

/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
typedef struct S1076 T1076;

/* SPECIAL [ET_PARENT_ITEM] */
typedef struct S1078 T1078;

/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
typedef struct S1079 T1079;

/* SPECIAL [ET_CLIENT_ITEM] */
typedef struct S1080 T1080;

/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM] */
typedef struct S1081 T1081;

/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S1083 T1083;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S1085 T1085;

/* ET_BRACED_TYPE_LIST */
typedef struct S1086 T1086;

/* DS_HASH_SET_CURSOR [ET_UNIVERSE] */
typedef struct S1087 T1087;

/* KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
typedef struct S1089 T1089;

/* SPECIAL [ET_UNIVERSE] */
typedef struct S1090 T1090;

/* DS_ARRAYED_LIST [ET_MASTER_CLASS] */
typedef struct S1091 T1091;

/* TUPLE [ET_MASTER_CLASS] */
typedef struct S1092 T1092;

/* PROCEDURE [TUPLE [ET_MASTER_CLASS]] */
typedef struct S1093 T1093;

/* DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
typedef struct S1094 T1094;

/* SPECIAL [AP_OPTION] */
typedef struct S1096 T1096;

/* KL_SPECIAL_ROUTINES [AP_OPTION] */
typedef struct S1097 T1097;

/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S1098 T1098;

/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S1099 T1099;

/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S1100 T1100;

/* SPECIAL [detachable STRING_8] */
typedef struct S1101 T1101;

/* KL_SPECIAL_ROUTINES [detachable STRING_8] */
typedef struct S1102 T1102;

/* DS_LINKABLE [STRING_8] */
typedef struct S1103 T1103;

/* DS_LINKABLE [BOOLEAN] */
typedef struct S1104 T1104;

/* DS_LINKED_LIST_CURSOR [BOOLEAN] */
typedef struct S1105 T1105;

/* DS_LINKABLE [INTEGER_32] */
typedef struct S1106 T1106;

/* DS_LINKED_LIST_CURSOR [INTEGER_32] */
typedef struct S1107 T1107;

/* YY_FILE_BUFFER */
typedef struct S1109 T1109;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
typedef struct S1110 T1110;

/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
typedef struct S1111 T1111;

/* ET_PARENT_CHECKER1 */
typedef struct S1112 T1112;

/* ET_FORMAL_PARAMETER_CHECKER1 */
typedef struct S1113 T1113;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1114 T1114;

/* ET_FEATURE_NAME_TESTER */
typedef struct S1115 T1115;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1117 T1117;

/* ET_ALIAS_NAME_TESTER */
typedef struct S1118 T1118;

/* DS_ARRAYED_LIST [ET_CLIENT_LIST] */
typedef struct S1120 T1120;

/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
typedef struct S1121 T1121;

/* ET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1122 T1122;

/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1123 T1123;

/* ET_IDENTIFIER_TYPE_RESOLVER */
typedef struct S1124 T1124;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
typedef struct S1125 T1125;

/* ET_ANCHORED_TYPE_CHECKER */
typedef struct S1126 T1126;

/* ET_SIGNATURE_CHECKER */
typedef struct S1127 T1127;

/* ET_PARENT_CHECKER2 */
typedef struct S1128 T1128;

/* ET_FORMAL_PARAMETER_CHECKER2 */
typedef struct S1129 T1129;

/* ET_BUILTIN_FEATURE_CHECKER */
typedef struct S1130 T1130;

/* ET_PRECURSOR_CHECKER */
typedef struct S1131 T1131;

/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
typedef struct S1132 T1132;

/* DS_HASH_SET [ET_CLASS] */
typedef struct S1133 T1133;

/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
typedef struct S1134 T1134;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
typedef struct S1135 T1135;

/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1136 T1136;

/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME] */
typedef struct S1137 T1137;

/* ET_PARENT_CHECKER3 */
typedef struct S1138 T1138;

/* DS_HASH_SET [ET_PROCEDURE] */
typedef struct S1139 T1139;

/* DS_HASH_SET [ET_QUERY] */
typedef struct S1140 T1140;

/* ET_SUPPLIER_BUILDER */
typedef struct S1141 T1141;

/* DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
typedef struct S1142 T1142;

/* YY_UNICODE_BUFFER */
typedef struct S1144 T1144;

/* SPECIAL [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1145 T1145;

/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1146 T1146;

/* SPECIAL [ET_OBJECT_TEST_LIST] */
typedef struct S1147 T1147;

/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST] */
typedef struct S1148 T1148;

/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST] */
typedef struct S1149 T1149;

/* KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST] */
typedef struct S1150 T1150;

/* SPECIAL [ET_ITERATION_COMPONENT_LIST] */
typedef struct S1151 T1151;

/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST] */
typedef struct S1152 T1152;

/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef struct S1153 T1153;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef struct S1154 T1154;

/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef struct S1155 T1155;

/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef struct S1156 T1156;

/* SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S1157 T1157;

/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
typedef struct S1158 T1158;

/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
typedef struct S1159 T1159;

/* SPECIAL [ET_QUERY] */
typedef struct S1160 T1160;

/* DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
typedef struct S1161 T1161;

/* KL_SPECIAL_ROUTINES [ET_QUERY] */
typedef struct S1162 T1162;

/* SPECIAL [ET_PROCEDURE] */
typedef struct S1163 T1163;

/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
typedef struct S1164 T1164;

/* KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
typedef struct S1165 T1165;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1166 T1166;

/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
typedef struct S1167 T1167;

/* SPECIAL [ET_NAMED_CLASS] */
typedef struct S1168 T1168;

/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
typedef struct S1169 T1169;

/* SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S1171 T1171;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
typedef struct S1173 T1173;

/* SPECIAL [ET_INSTRUCTION] */
typedef struct S1175 T1175;

/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
typedef struct S1176 T1176;

/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
typedef struct S1178 T1178;

/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
typedef struct S1179 T1179;

/* SPECIAL [ET_NAMED_OBJECT_TEST] */
typedef struct S1180 T1180;

/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
typedef struct S1181 T1181;

/* SPECIAL [ET_ITERATION_COMPONENT] */
typedef struct S1182 T1182;

/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT] */
typedef struct S1183 T1183;

/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S1184 T1184;

/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S1185 T1185;

/* SPECIAL [ET_BASE_TYPE] */
typedef struct S1186 T1186;

/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
typedef struct S1187 T1187;

/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
typedef struct S1188 T1188;

/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
typedef struct S1189 T1189;

/* SPECIAL [ET_ECF_LIBRARY] */
typedef struct S1190 T1190;

/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
typedef struct S1193 T1193;

/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
typedef struct S1194 T1194;

/* DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
typedef struct S1197 T1197;

/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
typedef struct S1198 T1198;

/* XM_EIFFEL_SCANNER */
typedef struct S1199 T1199;

/* XM_DEFAULT_POSITION */
typedef struct S1200 T1200;

/* DS_BILINKED_LIST [XM_POSITION] */
typedef struct S1202 T1202;

/* DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
typedef struct S1203 T1203;

/* XM_CALLBACKS_NULL */
typedef struct S1204 T1204;

/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S1205 T1205;

/* XM_NULL_EXTERNAL_RESOLVER */
typedef struct S1207 T1207;

/* XM_DTD_CALLBACKS_NULL */
typedef struct S1209 T1209;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
typedef struct S1210 T1210;

/* XM_EIFFEL_PARSER_NAME */
typedef struct S1211 T1211;

/* SPECIAL [XM_EIFFEL_PARSER_NAME] */
typedef struct S1212 T1212;

/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S1213 T1213;

/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
typedef struct S1214 T1214;

/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S1215 T1215;

/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
typedef struct S1216 T1216;

/* XM_DTD_EXTERNAL_ID */
typedef struct S1217 T1217;

/* SPECIAL [XM_DTD_EXTERNAL_ID] */
typedef struct S1218 T1218;

/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1219 T1219;

/* XM_DTD_ELEMENT_CONTENT */
typedef struct S1220 T1220;

/* SPECIAL [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1221 T1221;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S1222 T1222;

/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1223 T1223;

/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S1224 T1224;

/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1225 T1225;

/* XM_DTD_ATTRIBUTE_CONTENT */
typedef struct S1226 T1226;

/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1227 T1227;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
typedef struct S1228 T1228;

/* DS_BILINKED_LIST [STRING_8] */
typedef struct S1229 T1229;

/* SPECIAL [DS_BILINKED_LIST [STRING_8]] */
typedef struct S1230 T1230;

/* KL_SPECIAL_ROUTINES [BOOLEAN] */
typedef struct S1231 T1231;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
typedef struct S1232 T1232;

/* XM_EIFFEL_DECLARATION */
typedef struct S1233 T1233;

/* SPECIAL [XM_EIFFEL_DECLARATION] */
typedef struct S1234 T1234;

/* XM_EIFFEL_ENTITY_DEF */
typedef struct S1237 T1237;

/* XM_EIFFEL_SCANNER_DTD */
typedef struct S1238 T1238;

/* XM_EIFFEL_PE_ENTITY_DEF */
typedef struct S1240 T1240;

/* XM_NAMESPACE_RESOLVER */
typedef struct S1241 T1241;

/* ARRAY [XM_CALLBACKS_FILTER] */
typedef struct S1242 T1242;

/* SPECIAL [XM_CALLBACKS_FILTER] */
typedef struct S1243 T1243;

/* DS_HASH_SET [XM_NAMESPACE] */
typedef struct S1244 T1244;

/* XM_LINKED_LIST [XM_DOCUMENT_NODE] */
typedef struct S1245 T1245;

/* SPECIAL [ET_ECF_SYSTEM_CONFIG] */
typedef struct S1248 T1248;

/* KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG] */
typedef struct S1250 T1250;

/* DS_HASH_TABLE_CURSOR [ET_ECF_SYSTEM_CONFIG, STRING_8] */
typedef struct S1251 T1251;

/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8] */
typedef struct S1252 T1252;

/* SPECIAL [ET_ECF_TARGET] */
typedef struct S1253 T1253;

/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
typedef struct S1255 T1255;

/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8] */
typedef struct S1257 T1257;

/* KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION] */
typedef struct S1258 T1258;

/* SPECIAL [detachable RX_REGULAR_EXPRESSION] */
typedef struct S1259 T1259;

/* ET_DOTNET_ASSEMBLIES */
typedef struct S1260 T1260;

/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
typedef struct S1264 T1264;

/* SPECIAL [ET_IDENTIFIER] */
typedef struct S1265 T1265;

/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8] */
typedef struct S1266 T1266;

/* KL_SPECIAL_ROUTINES [ET_CLUSTER] */
typedef struct S1267 T1267;

/* SPECIAL [ET_CLUSTER] */
typedef struct S1268 T1268;

/* DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
typedef struct S1269 T1269;

/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32] */
typedef struct S1270 T1270;

/* ET_FEATURE_IDS */
typedef struct S1271 T1271;

/* SPECIAL [ET_DYNAMIC_FEATURE] */
typedef struct S1272 T1272;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
typedef struct S1273 T1273;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
typedef struct S1275 T1275;

/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
typedef struct S1276 T1276;

/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
typedef struct S1277 T1277;

/* KL_SPECIAL_ROUTINES [ET_TYPE] */
typedef struct S1279 T1279;

/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR] */
typedef struct S1280 T1280;

/* TUPLE [ET_SYSTEM_PROCESSOR, DS_ARRAYED_LIST [ET_CLASS]] */
typedef struct S1281 T1281;

/* SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef struct S1283 T1283;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
typedef struct S1284 T1284;

/* KL_EQUALITY_TESTER [INTEGER_32] */
typedef struct S1285 T1285;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S1287 T1287;

/* SPECIAL [ET_DYNAMIC_TYPE] */
typedef struct S1288 T1288;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
typedef struct S1289 T1289;

/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS] */
typedef struct S1290 T1290;

/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
typedef struct S1291 T1291;

/* SPECIAL [ET_INLINE_AGENT] */
typedef struct S1292 T1292;

/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
typedef struct S1293 T1293;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S1294 T1294;

/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S1295 T1295;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S1296 T1296;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S1297 T1297;

/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S1298 T1298;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S1299 T1299;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S1300 T1300;

/* DS_ARRAYED_LIST [ET_FEATURE] */
typedef struct S1301 T1301;

/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S1302 T1302;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S1303 T1303;

/* KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
typedef struct S1304 T1304;

/* TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT] */
typedef struct S1305 T1305;

/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
typedef struct S1306 T1306;

/* DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
typedef struct S1307 T1307;

/* SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S1308 T1308;

/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
typedef struct S1309 T1309;

/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
typedef struct S1310 T1310;

/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
typedef struct S1311 T1311;

/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
typedef struct S1314 T1314;

/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
typedef struct S1315 T1315;

/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT] */
typedef struct S1317 T1317;

/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S1319 T1319;

/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S1320 T1320;

/* SPECIAL [ET_ATTACHMENT_SCOPE] */
typedef struct S1322 T1322;

/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
typedef struct S1323 T1323;

/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
typedef struct S1324 T1324;

/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE] */
typedef struct S1325 T1325;

/* SPECIAL [ET_ASSERTIONS] */
typedef struct S1326 T1326;

/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS] */
typedef struct S1329 T1329;

/* KL_SPECIAL_ROUTINES [ET_FEATURE] */
typedef struct S1330 T1330;

/* SPECIAL [ET_FEATURE] */
typedef struct S1331 T1331;

/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM] */
typedef struct S1332 T1332;

/* SPECIAL [ET_NOTE_TERM] */
typedef struct S1333 T1333;

/* DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM] */
typedef struct S1334 T1334;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
typedef struct S1335 T1335;

/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
typedef struct S1336 T1336;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
typedef struct S1337 T1337;

/* SPECIAL [NATIVE_STRING] */
typedef struct S1338 T1338;

/* SPECIAL [NATURAL_32] */
typedef struct S1339 T1339;

/* DS_ARRAYED_LIST [RX_CHARACTER_SET] */
typedef struct S1340 T1340;

/* KL_SPECIAL_ROUTINES [NATURAL_32] */
typedef struct S1341 T1341;

/* SPECIAL [NATURAL_64] */
typedef struct S1342 T1342;

/* DS_HASH_TABLE [NATURAL_64, NATURAL_32] */
typedef struct S1343 T1343;

/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32] */
typedef struct S1344 T1344;

/* SPECIAL [ARRAY [INTEGER_32]] */
typedef struct S1345 T1345;

/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
typedef struct S1346 T1346;

/* KL_INTEGER_ROUTINES */
typedef struct S1347 T1347;

/* DS_HASH_SET_CURSOR [NATURAL_32] */
typedef struct S1350 T1350;

/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
typedef struct S1352 T1352;

/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S1353 T1353;

/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S1354 T1354;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S1355 T1355;

/* DS_ARRAYED_LIST_CURSOR [BOOLEAN] */
typedef struct S1356 T1356;

/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
typedef struct S1357 T1357;

/* SPECIAL [ET_EQUALITY_EXPRESSION] */
typedef struct S1358 T1358;

/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
typedef struct S1359 T1359;

/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES] */
typedef struct S1360 T1360;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES] */
typedef struct S1361 T1361;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES] */
typedef struct S1362 T1362;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
typedef struct S1363 T1363;

/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
typedef struct S1364 T1364;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
typedef struct S1365 T1365;

/* KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION] */
typedef struct S1366 T1366;

/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION] */
typedef struct S1367 T1367;

/* DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION] */
typedef struct S1368 T1368;

/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S1369 T1369;

/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S1370 T1370;

/* DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S1371 T1371;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S1372 T1372;

/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S1373 T1373;

/* DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S1374 T1374;

/* KL_SPECIAL_ROUTINES [ET_RESULT] */
typedef struct S1375 T1375;

/* SPECIAL [ET_RESULT] */
typedef struct S1376 T1376;

/* DS_ARRAYED_LIST_CURSOR [ET_RESULT] */
typedef struct S1377 T1377;

/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S1378 T1378;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S1379 T1379;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S1380 T1380;

/* SPECIAL [ET_EXPRESSION] */
typedef struct S1381 T1381;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
typedef struct S1382 T1382;

/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
typedef struct S1383 T1383;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
typedef struct S1384 T1384;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S1385 T1385;

/* SPECIAL [ET_OBJECT_TEST] */
typedef struct S1387 T1387;

/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
typedef struct S1388 T1388;

/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
typedef struct S1389 T1389;

/* DS_HASH_SET_CURSOR [INTEGER_32] */
typedef struct S1390 T1390;

/* TYPE [INTEGER_32] */
#define T1391 EIF_TYPE_OBJ

/* SPECIAL [ET_AGENT] */
typedef struct S1393 T1393;

/* KL_SPECIAL_ROUTINES [ET_AGENT] */
typedef struct S1394 T1394;

/* DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
typedef struct S1395 T1395;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S1396 T1396;

/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S1397 T1397;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S1398 T1398;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE] */
typedef struct S1399 T1399;

/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef struct S1400 T1400;

/* SPECIAL [ET_CONSTANT] */
typedef struct S1401 T1401;

/* KL_SPECIAL_ROUTINES [ET_CONSTANT] */
typedef struct S1403 T1403;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
typedef struct S1404 T1404;

/* SPECIAL [ET_INLINE_CONSTANT] */
typedef struct S1405 T1405;

/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
typedef struct S1407 T1407;

/* SPECIAL [detachable ET_DYNAMIC_FEATURE] */
typedef struct S1408 T1408;

/* DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S1410 T1410;

/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
typedef struct S1411 T1411;

/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION] */
typedef struct S1412 T1412;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION] */
typedef struct S1413 T1413;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION] */
typedef struct S1414 T1414;

/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT] */
typedef struct S1415 T1415;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT] */
typedef struct S1416 T1416;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT] */
typedef struct S1417 T1417;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
typedef struct S1418 T1418;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE] */
typedef struct S1419 T1419;

/* TYPE [ET_DYNAMIC_FEATURE] */
#define T1421 EIF_TYPE_OBJ

/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
typedef struct S1422 T1422;

/* TYPED_POINTER [ANY] */
typedef struct S1425 T1425;
extern T0* GE_boxed1425(TC* ac, T1425 a1);
extern T0* GE_boxed_pointer1425(TC* ac, T1425* a1);
typedef struct Sb1425 Tb1425;

/* SPECIAL [DS_ARRAYED_LIST [STRING_8]] */
typedef struct S1427 T1427;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [STRING_8]] */
typedef struct S1428 T1428;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [STRING_8]] */
typedef struct S1429 T1429;

/* SPECIAL [TUPLE [STRING_8, detachable STRING_8]] */
typedef struct S1430 T1430;

/* KL_SPECIAL_ROUTINES [TUPLE [STRING_8, detachable STRING_8]] */
typedef struct S1432 T1432;

/* DS_HASH_TABLE_CURSOR [TUPLE [STRING_8, detachable STRING_8], STRING_8] */
typedef struct S1433 T1433;

/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S1434 T1434;

/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1435 T1435;

/* ARRAY [BOOLEAN] */
typedef struct S1436 T1436;

/* THREAD_ATTRIBUTES */
typedef struct S1438 T1438;

/* CELL [BOOLEAN] */
typedef struct S1439 T1439;

/* CHARACTER_PROPERTY */
typedef struct S1441 T1441;

/* ET_SYSTEM_ERROR */
typedef struct S1442 T1442;

/* ET_INTERNAL_ERROR */
typedef struct S1443 T1443;

/* ET_SYNTAX_ERROR */
typedef struct S1444 T1444;

/* ET_VALIDITY_ERROR */
typedef struct S1445 T1445;

/* ET_FORMAL_COMMA_ARGUMENT */
typedef struct S1446 T1446;

/* ET_LOCAL_COMMA_VARIABLE */
typedef struct S1447 T1447;

/* ET_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S1448 T1448;

/* ET_KEYWORD_EXPRESSION */
typedef struct S1450 T1450;

/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1453 T1453;

/* SPECIAL [ET_CREATOR] */
typedef struct S1454 T1454;

/* KL_SPECIAL_ROUTINES [ET_CREATOR] */
typedef struct S1455 T1455;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
typedef struct S1456 T1456;

/* SPECIAL [ET_FEATURE_NAME_ITEM] */
typedef struct S1457 T1457;

/* ET_ECF_NOTE_ELEMENT */
typedef struct S1458 T1458;

/* ET_ECF_ADAPTED_LIBRARIES */
typedef struct S1459 T1459;

/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
typedef struct S1460 T1460;

/* ET_ECF_FILE_RULES */
typedef struct S1461 T1461;

/* ET_ECF_NAMESPACES */
typedef struct S1462 T1462;

/* ET_ECF_EXTERNAL_CFLAGS */
typedef struct S1463 T1463;

/* ET_ECF_EXTERNAL_INCLUDES */
typedef struct S1464 T1464;

/* ET_ECF_EXTERNAL_LIBRARIES */
typedef struct S1465 T1465;

/* ET_ECF_EXTERNAL_LINKER_FLAGS */
typedef struct S1466 T1466;

/* ET_ECF_EXTERNAL_MAKES */
typedef struct S1467 T1467;

/* ET_ECF_EXTERNAL_OBJECTS */
typedef struct S1468 T1468;

/* ET_ECF_EXTERNAL_RESOURCES */
typedef struct S1469 T1469;

/* DS_ARRAYED_LIST [ET_ECF_ACTION] */
typedef struct S1470 T1470;

/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY */
typedef struct S1471 T1471;

/* ET_ECF_VERSION */
typedef struct S1473 T1473;

/* ET_ECF_NAMESPACE */
typedef struct S1474 T1474;

/* ET_ECF_EXTERNAL_CFLAG */
typedef struct S1475 T1475;

/* ET_ECF_EXTERNAL_INCLUDE */
typedef struct S1476 T1476;

/* ET_ECF_EXTERNAL_LIBRARY */
typedef struct S1477 T1477;

/* ET_ECF_EXTERNAL_LINKER_FLAG */
typedef struct S1478 T1478;

/* ET_ECF_EXTERNAL_MAKE */
typedef struct S1479 T1479;

/* ET_ECF_EXTERNAL_OBJECT */
typedef struct S1480 T1480;

/* ET_ECF_EXTERNAL_RESOURCE */
typedef struct S1481 T1481;

/* ET_ECF_FILE_RULE */
typedef struct S1482 T1482;

/* ET_ECF_ACTION */
typedef struct S1483 T1483;

/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8] */
typedef struct S1484 T1484;

/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS] */
typedef struct S1485 T1485;

/* TUPLE [ET_ECF_OPTIONS] */
typedef struct S1486 T1486;

/* PROCEDURE [TUPLE [ET_ECF_OPTIONS]] */
typedef struct S1487 T1487;

/* ET_ECF_ROOT_CLASS */
typedef struct S1488 T1488;

/* ET_ECF_ROOT_ALL_CLASSES */
typedef struct S1489 T1489;

/* ET_ECF_ORED_CONDITIONS */
typedef struct S1490 T1490;

/* ET_ECF_ANDED_CONDITIONS */
typedef struct S1491 T1491;

/* ET_ECF_VISIBLE_CLASS */
typedef struct S1492 T1492;

/* ET_ECF_BUILD_CONDITION */
typedef struct S1494 T1494;

/* ET_ECF_CONCURRENCY_CONDITION */
typedef struct S1495 T1495;

/* ET_ECF_VOID_SAFETY_CONDITION */
typedef struct S1496 T1496;

/* ET_ECF_CUSTOM_CONDITION */
typedef struct S1497 T1497;

/* ET_ECF_DOTNET_CONDITION */
typedef struct S1498 T1498;

/* ET_ECF_DYNAMIC_RUNTIME_CONDITION */
typedef struct S1499 T1499;

/* ET_ECF_PLATFORM_CONDITION */
typedef struct S1500 T1500;

/* ET_ECF_COMPILER_VERSION_CONDITION */
typedef struct S1502 T1502;

/* ET_ECF_MSIL_CLR_VERSION_CONDITION */
typedef struct S1503 T1503;

/* UT_COUNTER */
typedef struct S1505 T1505;

/* KL_AGENT_ROUTINES [ET_CLASS] */
typedef struct S1506 T1506;

/* TUPLE [UT_COUNTER] */
typedef struct S1507 T1507;

/* TUPLE [KL_AGENT_ROUTINES [ET_CLASS], PROCEDURE [TUPLE]] */
typedef struct S1508 T1508;

/* TUPLE [PROCEDURE [TUPLE [ET_CLASS]]] */
typedef struct S1509 T1509;

/* TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
typedef struct S1510 T1510;

/* DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
typedef struct S1512 T1512;

/* PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]] */
typedef struct S1513 T1513;

/* TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
typedef struct S1514 T1514;

/* TUPLE [ET_INTERNAL_UNIVERSE] */
typedef struct S1515 T1515;

/* PROCEDURE [TUPLE [ET_INTERNAL_UNIVERSE]] */
typedef struct S1516 T1516;

/* TUPLE [PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]], PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]]] */
typedef struct S1517 T1517;

/* TUPLE [ET_DOTNET_ASSEMBLIES] */
typedef struct S1518 T1518;

/* TUPLE [ET_SYSTEM_PROCESSOR] */
typedef struct S1519 T1519;

/* TUPLE [ET_CLUSTER] */
typedef struct S1520 T1520;

/* PROCEDURE [TUPLE [ET_CLUSTER]] */
typedef struct S1521 T1521;

/* TUPLE [ET_ECF_SYSTEM] */
typedef struct S1522 T1522;

/* DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
typedef struct S1523 T1523;

/* TUPLE [ET_AST_PROCESSOR] */
typedef struct S1524 T1524;

/* TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1525 T1525;

/* PROCEDURE [TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
typedef struct S1526 T1526;

/* ET_ANCESTORS_STATUS_CHECKER */
typedef struct S1527 T1527;

/* ET_FLATTENING_STATUS_CHECKER */
typedef struct S1528 T1528;

/* ET_INTERFACE_STATUS_CHECKER */
typedef struct S1529 T1529;

/* ET_IMPLEMENTATION_STATUS_CHECKER */
typedef struct S1530 T1530;

/* TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
typedef struct S1531 T1531;

/* TUPLE [ET_FLATTENING_STATUS_CHECKER] */
typedef struct S1532 T1532;

/* TUPLE [ET_INTERFACE_STATUS_CHECKER] */
typedef struct S1533 T1533;

/* TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
typedef struct S1534 T1534;

/* TUPLE [BOOLEAN] */
typedef struct S1535 T1535;

/* TUPLE [PROCEDURE [TUPLE [ET_CLUSTER]]] */
typedef struct S1538 T1538;

/* TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
typedef struct S1542 T1542;

/* TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]]] */
typedef struct S1543 T1543;

/* ET_PARENTHESIS_EXPRESSION */
typedef struct S1544 T1544;

/* TYPED_POINTER [NATURAL_8] */
typedef struct S1545 T1545;
extern T0* GE_boxed1545(TC* ac, T1545 a1);
extern T0* GE_boxed_pointer1545(TC* ac, T1545* a1);
typedef struct Sb1545 Tb1545;

/* TYPED_POINTER [NATURAL_16] */
typedef struct S1546 T1546;
extern T0* GE_boxed1546(TC* ac, T1546 a1);
extern T0* GE_boxed_pointer1546(TC* ac, T1546* a1);
typedef struct Sb1546 Tb1546;

/* DS_HASH_SET [ET_LIBRARY] */
typedef struct S1547 T1547;

/* TUPLE [DS_HASH_SET [ET_LIBRARY]] */
typedef struct S1548 T1548;

/* SPECIAL [ET_RENAME_ITEM] */
typedef struct S1552 T1552;

/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
typedef struct S1553 T1553;

/* SPECIAL [ET_EXPORT] */
typedef struct S1555 T1555;

/* KL_SPECIAL_ROUTINES [ET_EXPORT] */
typedef struct S1556 T1556;

/* ET_CLUSTER_DEPENDENCE_CONSTRAINT */
typedef struct S1559 T1559;

/* ET_PARENT_FEATURE */
typedef struct S1561 T1561;

/* DS_QUICK_SORTER [ET_QUERY] */
typedef struct S1562 T1562;

/* DS_QUICK_SORTER [ET_PROCEDURE] */
typedef struct S1563 T1563;

/* ET_INHERITED_FEATURE */
typedef struct S1564 T1564;

/* ET_REDECLARED_FEATURE */
typedef struct S1566 T1566;

/* KL_CHARACTER_BUFFER */
typedef struct S1574 T1574;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1576 T1576;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1577 T1577;

/* SPECIAL [ET_ALIAS_NAME] */
typedef struct S1578 T1578;

/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
typedef struct S1579 T1579;

/* ET_AGENT_IMPLICIT_CURRENT_TARGET */
typedef struct S1580 T1580;

/* SPECIAL [ET_CHOICE_ITEM] */
typedef struct S1582 T1582;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
typedef struct S1583 T1583;

/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1584 T1584;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1586 T1586;

/* SPECIAL [ET_CONVERT_FEATURE_ITEM] */
typedef struct S1587 T1587;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
typedef struct S1589 T1589;

/* SPECIAL [ET_ELSEIF_EXPRESSION] */
typedef struct S1590 T1590;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION] */
typedef struct S1591 T1591;

/* SPECIAL [ET_ELSEIF_PART] */
typedef struct S1592 T1592;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
typedef struct S1593 T1593;

/* SPECIAL [ET_FEATURE_CLAUSE] */
typedef struct S1594 T1594;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
typedef struct S1595 T1595;

/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1596 T1596;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1598 T1598;

/* SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1599 T1599;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1600 T1600;

/* SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1601 T1601;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1603 T1603;

/* SPECIAL [ET_MANIFEST_STRING_ITEM] */
typedef struct S1605 T1605;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
typedef struct S1606 T1606;

/* SPECIAL [ET_NOTE_ITEM] */
typedef struct S1608 T1608;

/* KL_SPECIAL_ROUTINES [ET_NOTE_ITEM] */
typedef struct S1609 T1609;

/* SPECIAL [ET_NOTE_TERM_ITEM] */
typedef struct S1610 T1610;

/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM] */
typedef struct S1611 T1611;

/* SPECIAL [ET_PARENT_LIST] */
typedef struct S1612 T1612;

/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
typedef struct S1613 T1613;

/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM] */
typedef struct S1615 T1615;

/* KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM] */
typedef struct S1616 T1616;

/* SPECIAL [ET_WHEN_EXPRESSION] */
typedef struct S1617 T1617;

/* KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION] */
typedef struct S1618 T1618;

/* SPECIAL [ET_WHEN_PART] */
typedef struct S1619 T1619;

/* KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
typedef struct S1620 T1620;

/* XM_LINKED_LIST [XM_ELEMENT_NODE] */
typedef struct S1622 T1622;

/* UC_STRING_EQUALITY_TESTER */
typedef struct S1624 T1624;

/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S1626 T1626;

/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S1627 T1627;

/* DS_PAIR [XM_POSITION, XM_NODE] */
typedef struct S1628 T1628;

/* XM_EIFFEL_INPUT_STREAM */
typedef struct S1629 T1629;

/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
typedef struct S1630 T1630;

/* DS_ARRAYED_LIST [ET_ECF_TARGET] */
typedef struct S1631 T1631;

/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
typedef struct S1632 T1632;

/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT] */
typedef struct S1634 T1634;

/* DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
typedef struct S1635 T1635;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S1636 T1636;

/* INTEGER_OVERFLOW_CHECKER */
typedef struct S1643 T1643;

/* CONSOLE */
typedef struct S1644 T1644;

/* C_DATE */
typedef struct S1645 T1645;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
typedef struct S1647 T1647;

/* KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT] */
typedef struct S1648 T1648;

/* SPECIAL [ET_ECF_NOTE_ELEMENT] */
typedef struct S1649 T1649;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_NOTE_ELEMENT] */
typedef struct S1650 T1650;

/* ET_DYNAMIC_TARGET_LIST */
typedef struct S1652 T1652;

/* DS_ARRAYED_STACK [YY_BUFFER] */
typedef struct S1653 T1653;

/* UT_SYNTAX_ERROR */
typedef struct S1654 T1654;

/* UT_TOO_MANY_INCLUDES_ERROR */
typedef struct S1655 T1655;

/* ARRAY [detachable STRING_8] */
typedef struct S1656 T1656;

/* SPECIAL [ET_ADAPTED_LIBRARY] */
typedef struct S1658 T1658;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
typedef struct S1659 T1659;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
typedef struct S1660 T1660;

/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1661 T1661;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1662 T1662;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1663 T1663;

/* SPECIAL [ET_TYPE_ITEM] */
typedef struct S1664 T1664;

/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
typedef struct S1665 T1665;

/* DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
typedef struct S1666 T1666;

/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
typedef struct S1667 T1667;

/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT] */
typedef struct S1669 T1669;

/* DS_ARRAYED_LIST [NATURAL_32] */
typedef struct S1670 T1670;

/* ET_BASE_TYPE_CONSTRAINT_LIST */
typedef struct S1671 T1671;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1672 T1672;

/* SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S1673 T1673;

/* SPECIAL [ET_FEATURE_NAME] */
typedef struct S1676 T1676;

/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
typedef struct S1677 T1677;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
typedef struct S1678 T1678;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1680 T1680;

/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
typedef struct S1681 T1681;

/* SPECIAL [ET_CLIENT_LIST] */
typedef struct S1682 T1682;

/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
typedef struct S1683 T1683;

/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
typedef struct S1685 T1685;

/* KL_SPECIAL_ROUTINES [ET_CLIENT] */
typedef struct S1686 T1686;

/* SPECIAL [ET_CLIENT] */
typedef struct S1687 T1687;

/* DS_HASH_SET [ET_FEATURE_NAME] */
typedef struct S1688 T1688;

/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1689 T1689;

/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1690 T1690;

/* ET_REPLICATED_FEATURE */
typedef struct S1692 T1692;

/* DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
typedef struct S1693 T1693;

/* DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
typedef struct S1694 T1694;

/* ET_DOTNET_SIGNATURE_TESTER */
typedef struct S1695 T1695;

/* DS_HASH_SET [ET_DOTNET_FEATURE] */
typedef struct S1696 T1696;

/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1698 T1698;

/* DS_LINKED_LIST [ET_DOTNET_FEATURE] */
typedef struct S1700 T1700;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
typedef struct S1701 T1701;

/* DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
typedef struct S1702 T1702;

/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1703 T1703;

/* DS_LINKED_LIST [ET_PARENT_FEATURE] */
typedef struct S1704 T1704;

/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
typedef struct S1705 T1705;

/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
typedef struct S1706 T1706;

/* TYPE [ET_FEATURE] */
#define T1707 EIF_TYPE_OBJ

/* DS_HASH_SET_CURSOR [ET_CLASS] */
typedef struct S1709 T1709;

/* TYPE [ET_CLASS] */
#define T1710 EIF_TYPE_OBJ

/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1711 T1711;

/* SPECIAL [ET_RENAME] */
typedef struct S1712 T1712;

/* KL_SPECIAL_ROUTINES [ET_RENAME] */
typedef struct S1715 T1715;

/* TYPE [ET_RENAME] */
#define T1716 EIF_TYPE_OBJ

/* TYPE [ET_FEATURE_NAME] */
#define T1717 EIF_TYPE_OBJ

/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME] */
typedef struct S1719 T1719;

/* DS_HASH_SET_CURSOR [ET_PROCEDURE] */
typedef struct S1720 T1720;

/* DS_HASH_SET_CURSOR [ET_QUERY] */
typedef struct S1721 T1721;

/* KL_SPECIAL_ROUTINES [NATURAL_8] */
typedef struct S1724 T1724;

/* DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
typedef struct S1725 T1725;

/* XM_EIFFEL_CHARACTER_ENTITY */
typedef struct S1726 T1726;

/* DS_BILINKABLE [XM_POSITION] */
typedef struct S1727 T1727;

/* DS_BILINKED_LIST_CURSOR [XM_POSITION] */
typedef struct S1728 T1728;

/* DS_LINKABLE [XM_EIFFEL_SCANNER] */
typedef struct S1729 T1729;

/* SPECIAL [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1730 T1730;

/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S1733 T1733;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1734 T1734;

/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
typedef struct S1737 T1737;

/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
typedef struct S1738 T1738;

/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1739 T1739;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1740 T1740;

/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1741 T1741;

/* DS_BILINKED_LIST_CURSOR [STRING_8] */
typedef struct S1742 T1742;

/* DS_BILINKABLE [STRING_8] */
typedef struct S1743 T1743;

/* XM_NAMESPACE_RESOLVER_CONTEXT */
typedef struct S1744 T1744;

/* DS_LINKED_QUEUE [detachable STRING_8] */
typedef struct S1747 T1747;

/* DS_LINKED_QUEUE [STRING_8] */
typedef struct S1748 T1748;

/* KL_EQUALITY_TESTER [XM_NAMESPACE] */
typedef struct S1749 T1749;

/* DS_HASH_SET_CURSOR [XM_NAMESPACE] */
typedef struct S1750 T1750;

/* KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
typedef struct S1751 T1751;

/* SPECIAL [XM_NAMESPACE] */
typedef struct S1752 T1752;

/* DS_LINKABLE [XM_DOCUMENT_NODE] */
typedef struct S1753 T1753;

/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
typedef struct S1755 T1755;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, INTEGER_32] */
typedef struct S1756 T1756;

/* SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
typedef struct S1758 T1758;

/* SPECIAL [ET_CALL_NAME] */
typedef struct S1760 T1760;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
typedef struct S1762 T1762;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
typedef struct S1763 T1763;

/* KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
typedef struct S1764 T1764;

/* SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
typedef struct S1765 T1765;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
typedef struct S1767 T1767;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
typedef struct S1768 T1768;

/* SPECIAL [ET_SYSTEM_PROCESSOR] */
typedef struct S1769 T1769;

/* KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR] */
typedef struct S1770 T1770;

/* DS_ARRAYED_LIST_CURSOR [ET_SYSTEM_PROCESSOR] */
typedef struct S1771 T1771;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS] */
typedef struct S1772 T1772;

/* SPECIAL [ET_ADAPTED_CLASS] */
typedef struct S1774 T1774;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS] */
typedef struct S1775 T1775;

/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
typedef struct S1776 T1776;

/* DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT] */
typedef struct S1777 T1777;

/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S1778 T1778;

/* KL_SPECIAL_ROUTINES [RX_CHARACTER_SET] */
typedef struct S1779 T1779;

/* DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET] */
typedef struct S1780 T1780;

/* KL_SPECIAL_ROUTINES [NATURAL_64] */
typedef struct S1785 T1785;

/* TYPE [NATURAL_64] */
#define T1786 EIF_TYPE_OBJ

/* TYPE [NATURAL_32] */
#define T1787 EIF_TYPE_OBJ

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S1789 T1789;

/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1790 T1790;

/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1791 T1791;

/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1792 T1792;

/* KL_STRING_INPUT_STREAM */
typedef struct S1794 T1794;

/* UT_TRISTATE */
typedef struct S1796 T1796;

/* KL_AGENT_ROUTINES [ANY] */
typedef struct S1797 T1797;

/* TUPLE [UT_TRISTATE] */
typedef struct S1798 T1798;

/* TUPLE [KL_AGENT_ROUTINES [ANY], PROCEDURE [TUPLE]] */
typedef struct S1799 T1799;

/* PREDICATE [TUPLE [ET_MASTER_CLASS]] */
typedef struct S1800 T1800;

/* PREDICATE [TUPLE] */
typedef struct S1801 T1801;

/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
typedef struct S1803 T1803;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
typedef struct S1804 T1804;

/* TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1805 T1805;

/* KL_AGENT_ROUTINES [ET_UNIVERSE] */
typedef struct S1806 T1806;

/* PREDICATE [TUPLE [ET_UNIVERSE]] */
typedef struct S1807 T1807;

/* TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
typedef struct S1808 T1808;

/* TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], PREDICATE [TUPLE [ET_UNIVERSE]]] */
typedef struct S1809 T1809;

/* TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
typedef struct S1811 T1811;

/* TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
typedef struct S1812 T1812;

/* TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN], FUNCTION [TUPLE, BOOLEAN]] */
typedef struct S1813 T1813;

/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
typedef struct S1814 T1814;

/* TUPLE [ET_MASTER_CLASS, ET_SYSTEM_PROCESSOR] */
typedef struct S1821 T1821;

/* DS_CELL [detachable ET_CLASS] */
typedef struct S1822 T1822;

/* TUPLE [DS_CELL [detachable ET_CLASS]] */
typedef struct S1823 T1823;

/* TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
typedef struct S1825 T1825;

/* ET_SEEDED_QUERY_COMPARATOR */
typedef struct S1827 T1827;

/* ET_SEEDED_PROCEDURE_COMPARATOR */
typedef struct S1830 T1830;

/* TUPLE [ET_CLIENT_LIST] */
typedef struct S1834 T1834;

/* ET_STANDARD_ONCE_KEYS */
typedef struct S1838 T1838;

/* XM_COMMENT */
typedef struct S1840 T1840;

/* XM_PROCESSING_INSTRUCTION */
typedef struct S1841 T1841;

/* XM_CHARACTER_DATA */
typedef struct S1842 T1842;

/* ET_LIKE_N */
typedef struct S1844 T1844;

/* ET_PARENTHESIS_SYMBOL */
typedef struct S1859 T1859;

/* ET_PARENTHESIS_INSTRUCTION */
typedef struct S1862 T1862;

/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
typedef struct S1866 T1866;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
typedef struct S1867 T1867;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
typedef struct S1868 T1868;

/* ET_INFIX_CAST_EXPRESSION */
typedef struct S1870 T1870;

/* SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef struct S1873 T1873;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
typedef struct S1874 T1874;

/* TYPE [ET_NESTED_TYPE_CONTEXT] */
#define T1876 EIF_TYPE_OBJ

/* TYPE [ET_ITERATION_COMPONENT] */
#define T1877 EIF_TYPE_OBJ

/* TYPE [ET_INLINE_SEPARATE_ARGUMENT] */
#define T1879 EIF_TYPE_OBJ

/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
typedef struct S1882 T1882;

/* ET_BASE_TYPE_RENAME_CONSTRAINT */
typedef struct S1884 T1884;

/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
typedef struct S1887 T1887;

/* SPECIAL [NATURAL_16] */
typedef struct S1896 T1896;

/* ARRAY [NATURAL_16] */
typedef struct S1897 T1897;

/* ARRAY [NATURAL_32] */
typedef struct S1898 T1898;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1899 T1899;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1900 T1900;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1901 T1901;

/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1902 T1902;

/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1903 T1903;

/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
typedef struct S1904 T1904;

/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE] */
typedef struct S1905 T1905;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG] */
typedef struct S1906 T1906;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1907 T1907;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1908 T1908;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S1909 T1909;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE] */
typedef struct S1910 T1910;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1911 T1911;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S1912 T1912;

/* KL_SPECIAL_ROUTINES [ET_ECF_ACTION] */
typedef struct S1913 T1913;

/* SPECIAL [ET_ECF_ACTION] */
typedef struct S1914 T1914;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ACTION] */
typedef struct S1915 T1915;

/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1916 T1916;

/* SPECIAL [ET_ECF_OPTIONS] */
typedef struct S1917 T1917;

/* KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS] */
typedef struct S1920 T1920;

/* DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8] */
typedef struct S1921 T1921;

/* KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS] */
typedef struct S1922 T1922;

/* SPECIAL [ET_ECF_VISIBLE_CLASS] */
typedef struct S1923 T1923;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_VISIBLE_CLASS] */
typedef struct S1924 T1924;

/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS] */
typedef struct S1925 T1925;

/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM] */
typedef struct S1926 T1926;

/* DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
typedef struct S1927 T1927;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
typedef struct S1928 T1928;

/* SPECIAL [ET_DOTNET_ASSEMBLY] */
typedef struct S1929 T1929;

/* DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
typedef struct S1931 T1931;

/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
typedef struct S1933 T1933;

/* SPECIAL [ET_INTERNAL_UNIVERSE] */
typedef struct S1934 T1934;

/* ET_CLASS_TYPE_STATUS_CHECKER1 */
typedef struct S1935 T1935;

/* ET_CLASS_TYPE_STATUS_CHECKER2 */
typedef struct S1936 T1936;

/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
typedef struct S1937 T1937;

/* ET_CLASS_TYPE_STATUS_CHECKER3 */
typedef struct S1938 T1938;

/* DS_HASH_SET_CURSOR [ET_LIBRARY] */
typedef struct S1939 T1939;

/* KL_SPECIAL_ROUTINES [ET_LIBRARY] */
typedef struct S1940 T1940;

/* SPECIAL [ET_LIBRARY] */
typedef struct S1941 T1941;

/* LX_DFA_WILDCARD */
typedef struct S1942 T1942;

/* DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
typedef struct S1943 T1943;

/* DS_LINKED_QUEUE [CHARACTER_8] */
typedef struct S1946 T1946;

/* UC_UTF16_ROUTINES */
typedef struct S1947 T1947;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
typedef struct S1948 T1948;

/* SPECIAL [ET_ADAPTED_UNIVERSE] */
typedef struct S1949 T1949;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
typedef struct S1950 T1950;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
typedef struct S1951 T1951;

/* SPECIAL [ET_ECF_TARGET_PARENT] */
typedef struct S1952 T1952;

/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT] */
typedef struct S1953 T1953;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET_PARENT] */
typedef struct S1954 T1954;

/* SPECIAL [ET_ECF_CLUSTER] */
typedef struct S1955 T1955;

/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
typedef struct S1956 T1956;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
typedef struct S1957 T1957;

/* SPECIAL [ET_DYNAMIC_TARGET] */
typedef struct S1958 T1958;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
typedef struct S1959 T1959;

/* SPECIAL [YY_BUFFER] */
typedef struct S1960 T1960;

/* KL_SPECIAL_ROUTINES [YY_BUFFER] */
typedef struct S1961 T1961;

/* TYPE [detachable STRING_8] */
#define T1962 EIF_TYPE_OBJ

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
typedef struct S1963 T1963;

/* SPECIAL [ET_BASE_TYPE_CONSTRAINT] */
typedef struct S1964 T1964;

/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT] */
typedef struct S1965 T1965;

/* DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT] */
typedef struct S1966 T1966;

/* DS_ARRAYED_LIST_CURSOR [NATURAL_32] */
typedef struct S1967 T1967;

/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
typedef struct S1968 T1968;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1969 T1969;

/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1971 T1971;

/* SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1972 T1972;

/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
typedef struct S1974 T1974;

/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
typedef struct S1975 T1975;

/* DS_LINKABLE [ET_ADAPTED_FEATURE] */
typedef struct S1976 T1976;

/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
typedef struct S1977 T1977;

/* SPECIAL [ET_PARENT_FEATURE] */
typedef struct S1978 T1978;

/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1979 T1979;

/* SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1980 T1980;

/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1981 T1981;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
typedef struct S1982 T1982;

/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1983 T1983;

/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1986 T1986;

/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1987 T1987;

/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1988 T1988;

/* DS_LINKABLE [ET_DOTNET_FEATURE] */
typedef struct S1989 T1989;

/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
typedef struct S1990 T1990;

/* SPECIAL [ET_LIKE_FEATURE] */
typedef struct S1991 T1991;

/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
typedef struct S1992 T1992;

/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
typedef struct S1993 T1993;

/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
typedef struct S1995 T1995;

/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
typedef struct S1996 T1996;

/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
typedef struct S1997 T1997;

/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
typedef struct S1998 T1998;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1999 T1999;

/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
typedef struct S2000 T2000;

/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S2002 T2002;

/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S2003 T2003;

/* DS_LINKABLE [detachable STRING_8] */
typedef struct S2004 T2004;

/* DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
typedef struct S2005 T2005;

/* ET_CLUSTER_ERROR */
typedef struct S2006 T2006;

/* TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S2007 T2007;

/* TUPLE [ET_ECF_CLUSTER] */
typedef struct S2008 T2008;

/* PROCEDURE [TUPLE [ET_ECF_CLUSTER]] */
typedef struct S2009 T2009;

/* TUPLE [ET_ECF_TARGET, STRING_8] */
typedef struct S2010 T2010;

/* TUPLE [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S2012 T2012;

/* PROCEDURE [TUPLE [ET_ECF_ADAPTED_LIBRARY]] */
typedef struct S2013 T2013;

/* TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S2014 T2014;

/* PROCEDURE [TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY]] */
typedef struct S2015 T2015;

/* PROCEDURE [TUPLE [STRING_8]] */
typedef struct S2018 T2018;

/* TUPLE [ET_ECF_OPTIONS, STRING_8] */
typedef struct S2019 T2019;

/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
typedef struct S2020 T2020;

/* ET_DYNAMIC_EQUALITY_EXPRESSION */
typedef struct S2023 T2023;

/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
typedef struct S2024 T2024;

/* KL_CHARACTER_ROUTINES */
typedef struct S2028 T2028;

/* TUPLE [ET_C_GENERATOR, ET_SEPARATE_CALL, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S2029 T2029;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S2030 T2030;

/* TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
typedef struct S2031 T2031;

/* TYPE [detachable DEVELOPER_EXCEPTION] */
#define T2032 EIF_TYPE_OBJ

/* TUPLE [ET_GROUP] */
typedef struct S2036 T2036;

/* TUPLE [PROCEDURE [TUPLE [ET_CLASS]], PREDICATE [TUPLE [ET_CLASS]]] */
typedef struct S2037 T2037;

/* TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S2038 T2038;

/* ET_CONVERT_BUILTIN_EXPRESSION */
typedef struct S2039 T2039;

/* ET_CONVERT_FROM_EXPRESSION */
typedef struct S2040 T2040;

/* ET_CONVERT_TO_EXPRESSION */
typedef struct S2041 T2041;

/* DS_LINKABLE [XM_ELEMENT_NODE] */
typedef struct S2051 T2051;

/* TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8] */
typedef struct S2052 T2052;

/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
typedef struct S2055 T2055;

/* TUPLE [ET_ECF_EXTERNAL_CFLAG] */
typedef struct S2061 T2061;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_CFLAG]] */
typedef struct S2062 T2062;

/* TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
typedef struct S2063 T2063;

/* TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S2064 T2064;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
typedef struct S2065 T2065;

/* TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S2066 T2066;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
typedef struct S2067 T2067;

/* TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S2068 T2068;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG]] */
typedef struct S2069 T2069;

/* TUPLE [ET_ECF_EXTERNAL_MAKE] */
typedef struct S2070 T2070;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_MAKE]] */
typedef struct S2071 T2071;

/* TUPLE [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S2072 T2072;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
typedef struct S2073 T2073;

/* TUPLE [ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S2074 T2074;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_RESOURCE]] */
typedef struct S2075 T2075;

/* TUPLE [LX_WILDCARD] */
typedef struct S2078 T2078;

/* PREDICATE [TUPLE [LX_WILDCARD]] */
typedef struct S2079 T2079;

/* TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
typedef struct S2080 T2080;

/* PREDICATE [TUPLE [STRING_8]] */
typedef struct S2082 T2082;

/* TUPLE [KL_STRING_ROUTINES, STRING_8] */
typedef struct S2083 T2083;

/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S2085 T2085;

/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S2087 T2087;

/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S2088 T2088;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
typedef struct S2089 T2089;

/* SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S2091 T2091;

/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S2092 T2092;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S2093 T2093;

/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S2094 T2094;

/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S2095 T2095;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S2096 T2096;

/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
typedef struct S2097 T2097;

/* SPECIAL [ET_ECF_FILE_RULE] */
typedef struct S2098 T2098;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
typedef struct S2099 T2099;

/* KL_SPECIAL_ROUTINES [ET_ECF_NAMESPACE] */
typedef struct S2100 T2100;

/* SPECIAL [ET_ECF_NAMESPACE] */
typedef struct S2101 T2101;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_NAMESPACE] */
typedef struct S2102 T2102;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG] */
typedef struct S2103 T2103;

/* SPECIAL [ET_ECF_EXTERNAL_CFLAG] */
typedef struct S2104 T2104;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_CFLAG] */
typedef struct S2105 T2105;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S2106 T2106;

/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S2107 T2107;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S2108 T2108;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S2109 T2109;

/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S2110 T2110;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S2111 T2111;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S2112 T2112;

/* SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S2113 T2113;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S2114 T2114;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE] */
typedef struct S2115 T2115;

/* SPECIAL [ET_ECF_EXTERNAL_MAKE] */
typedef struct S2116 T2116;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_MAKE] */
typedef struct S2117 T2117;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S2118 T2118;

/* SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S2119 T2119;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S2120 T2120;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S2121 T2121;

/* SPECIAL [ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S2122 T2122;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S2123 T2123;

/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S2124 T2124;

/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S2125 T2125;

/* DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S2126 T2126;

/* KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS] */
typedef struct S2127 T2127;

/* SPECIAL [ET_ECF_ANDED_CONDITIONS] */
typedef struct S2128 T2128;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ANDED_CONDITIONS] */
typedef struct S2129 T2129;

/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM] */
typedef struct S2130 T2130;

/* SPECIAL [ET_ECF_CONDITION_ITEM] */
typedef struct S2131 T2131;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION_ITEM] */
typedef struct S2132 T2132;

/* LX_WILDCARD_PARSER */
typedef struct S2134 T2134;

/* LX_DESCRIPTION */
typedef struct S2135 T2135;

/* LX_FULL_DFA */
typedef struct S2136 T2136;

/* SPECIAL [LX_WILDCARD] */
typedef struct S2138 T2138;

/* KL_SPECIAL_ROUTINES [LX_WILDCARD] */
typedef struct S2141 T2141;

/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
typedef struct S2142 T2142;

/* DS_LINKABLE [CHARACTER_8] */
typedef struct S2143 T2143;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
typedef struct S2145 T2145;

/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
typedef struct S2146 T2146;

/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
typedef struct S2149 T2149;

/* DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
typedef struct S2150 T2150;

/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S2151 T2151;

/* ET_UNIVERSE_ERROR */
typedef struct S2152 T2152;

/* ET_DOTNET_ASSEMBLY_ERROR */
typedef struct S2153 T2153;

/* AP_OPTION_COMPARATOR */
typedef struct S2154 T2154;

/* DS_QUICK_SORTER [AP_OPTION] */
typedef struct S2155 T2155;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
typedef struct S2158 T2158;

/* ET_ACTUAL_PARAMETER_SUBLIST */
typedef struct S2159 T2159;

/* TUPLE [ET_ECF_FILE_RULE] */
typedef struct S2162 T2162;

/* PREDICATE [TUPLE [ET_ECF_FILE_RULE]] */
typedef struct S2163 T2163;

/* PROCEDURE [TUPLE [ET_ECF_FILE_RULE]] */
typedef struct S2165 T2165;

/* TUPLE [ET_ECF_FILE_RULES] */
typedef struct S2166 T2166;

/* TUPLE [ET_ECF_STATE] */
typedef struct S2167 T2167;

/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
typedef struct S2170 T2170;

/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
typedef struct S2173 T2173;

/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
typedef struct S2174 T2174;

/* DS_ARRAYED_LIST [LX_RULE] */
typedef struct S2175 T2175;

/* LX_START_CONDITIONS */
typedef struct S2176 T2176;

/* LX_ACTION_FACTORY */
typedef struct S2177 T2177;

/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
typedef struct S2178 T2178;

/* LX_SYMBOL_CLASS */
typedef struct S2179 T2179;

/* DS_HASH_TABLE [STRING_32, STRING_8] */
typedef struct S2180 T2180;

/* DS_HASH_SET [LX_SYMBOL_CLASS] */
typedef struct S2181 T2181;

/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32] */
typedef struct S2182 T2182;

/* KL_EQUALITY_TESTER [STRING_32] */
typedef struct S2183 T2183;

/* DS_ARRAYED_STACK [BOOLEAN] */
typedef struct S2184 T2184;

/* KL_SPECIAL_ROUTINES [STRING_32] */
typedef struct S2185 T2185;

/* SPECIAL [STRING_32] */
typedef struct S2186 T2186;

/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
typedef struct S2187 T2187;

/* SPECIAL [LX_SYMBOL_CLASS] */
typedef struct S2188 T2188;

/* KL_SPECIAL_ROUTINES [LX_NFA] */
typedef struct S2189 T2189;

/* LX_NFA */
typedef struct S2190 T2190;

/* SPECIAL [LX_NFA] */
typedef struct S2191 T2191;

/* LX_RULE */
typedef struct S2192 T2192;

/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS] */
typedef struct S2193 T2193;

/* LX_EQUIVALENCE_CLASSES */
typedef struct S2194 T2194;

/* LX_UNRECOGNIZED_RULE_ERROR */
typedef struct S2195 T2195;

/* LX_INVALID_UNICODE_CHARACTER_ERROR */
typedef struct S2196 T2196;

/* LX_MISSING_QUOTE_ERROR */
typedef struct S2197 T2197;

/* LX_BAD_CHARACTER_CLASS_ERROR */
typedef struct S2198 T2198;

/* LX_BAD_CHARACTER_ERROR */
typedef struct S2199 T2199;

/* LX_FULL_AND_META_ERROR */
typedef struct S2200 T2200;

/* LX_FULL_AND_REJECT_ERROR */
typedef struct S2201 T2201;

/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
typedef struct S2202 T2202;

/* LX_CHARACTER_OUT_OF_RANGE_ERROR */
typedef struct S2203 T2203;

/* ARRAY [LX_RULE] */
typedef struct S2204 T2204;

/* SPECIAL [LX_RULE] */
typedef struct S2205 T2205;

/* LX_DFA_STATE */
typedef struct S2206 T2206;

/* DS_ARRAYED_LIST [LX_NFA_STATE] */
typedef struct S2207 T2207;

/* DS_ARRAYED_LIST [LX_DFA_STATE] */
typedef struct S2208 T2208;

/* LX_SYMBOL_PARTITIONS */
typedef struct S2209 T2209;

/* KL_ARRAY_ROUTINES [LX_RULE] */
typedef struct S2210 T2210;

/* ARRAY [detachable LX_RULE] */
typedef struct S2211 T2211;

/* SPECIAL [detachable LX_RULE] */
typedef struct S2212 T2212;

/* LX_START_CONDITION */
typedef struct S2213 T2213;

/* LX_TRANSITION_TABLE [LX_DFA_STATE] */
typedef struct S2214 T2214;

/* DS_ARRAYED_LIST [LX_NFA] */
typedef struct S2215 T2215;

/* DS_HASH_TABLE [LX_NFA, INTEGER_32] */
typedef struct S2216 T2216;

/* LX_NFA_STATE */
typedef struct S2217 T2217;

/* TYPE [detachable RX_REGULAR_EXPRESSION] */
#define T2221 EIF_TYPE_OBJ

/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
typedef struct S2223 T2223;

/* TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S2224 T2224;

/* PREDICATE [TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
typedef struct S2225 T2225;

/* TUPLE [DS_HASH_SET [STRING_8]] */
typedef struct S2228 T2228;

/* DS_LINKABLE [ET_PARENT_FEATURE] */
typedef struct S2230 T2230;

/* ARRAY [detachable LX_SYMBOL_CLASS] */
typedef struct S2231 T2231;

/* SPECIAL [detachable LX_SYMBOL_CLASS] */
typedef struct S2232 T2232;

/* ARRAY [detachable DS_HASH_SET [INTEGER_32]] */
typedef struct S2233 T2233;

/* SPECIAL [detachable DS_HASH_SET [INTEGER_32]] */
typedef struct S2234 T2234;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
typedef struct S2235 T2235;

/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS] */
typedef struct S2236 T2236;

/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
typedef struct S2237 T2237;

/* ET_AST_NULL_LEAF */
typedef struct S2238 T2238;

/* KL_SPECIAL_ROUTINES [LX_RULE] */
typedef struct S2239 T2239;

/* DS_ARRAYED_LIST_CURSOR [LX_RULE] */
typedef struct S2240 T2240;

/* KL_ARRAY_ROUTINES [STRING_8] */
typedef struct S2241 T2241;

/* SPECIAL [LX_START_CONDITION] */
typedef struct S2242 T2242;

/* KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
typedef struct S2243 T2243;

/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
typedef struct S2244 T2244;

/* SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
typedef struct S2245 T2245;

/* KL_EQUALITY_TESTER [LX_SYMBOL_CLASS] */
typedef struct S2246 T2246;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
typedef struct S2248 T2248;

/* DS_HASH_TABLE_CURSOR [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
typedef struct S2249 T2249;

/* SPECIAL [detachable SPECIAL [NATURAL_64]] */
typedef struct S2250 T2250;

/* DS_HASH_TABLE_CURSOR [STRING_32, STRING_8] */
typedef struct S2252 T2252;

/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_32] */
typedef struct S2254 T2254;

/* LX_EPSILON_TRANSITION [LX_NFA_STATE] */
typedef struct S2255 T2255;

/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
typedef struct S2258 T2258;

/* LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
typedef struct S2259 T2259;

/* LX_ACTION */
typedef struct S2261 T2261;

/* ARRAY [DS_BILINKABLE [INTEGER_32]] */
typedef struct S2262 T2262;

/* DS_BILINKABLE [INTEGER_32] */
typedef struct S2263 T2263;

/* SPECIAL [DS_BILINKABLE [INTEGER_32]] */
typedef struct S2264 T2264;

/* DS_BUBBLE_SORTER [LX_NFA_STATE] */
typedef struct S2265 T2265;

/* DS_BUBBLE_SORTER [LX_RULE] */
typedef struct S2267 T2267;

/* SPECIAL [LX_NFA_STATE] */
typedef struct S2269 T2269;

/* KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
typedef struct S2271 T2271;

/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
typedef struct S2272 T2272;

/* SPECIAL [LX_DFA_STATE] */
typedef struct S2274 T2274;

/* KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
typedef struct S2275 T2275;

/* DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
typedef struct S2276 T2276;

/* KL_ARRAY [LX_RULE] */
typedef struct S2277 T2277;

/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32] */
typedef struct S2278 T2278;

/* DS_ARRAYED_LIST_CURSOR [LX_NFA] */
typedef struct S2279 T2279;

/* DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
typedef struct S2281 T2281;

/* TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S2282 T2282;

/* TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S2283 T2283;

/* TUPLE [ET_ECF_LIBRARY] */
typedef struct S2284 T2284;

/* TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S2286 T2286;

/* KL_COMPARABLE_COMPARATOR [LX_RULE] */
typedef struct S2291 T2291;

/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
typedef struct S2294 T2294;

/* SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
typedef struct S2297 T2297;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
typedef struct S2298 T2298;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
typedef struct S2299 T2299;

/* DS_ARRAYED_LIST_CURSOR [LX_SYMBOL_CLASS] */
typedef struct S2300 T2300;

/* KL_ARRAY [STRING_8] */
typedef struct S2301 T2301;

/* DS_HASH_TABLE_CURSOR [LX_DFA_STATE, INTEGER_32] */
typedef struct S2303 T2303;

/* Struct for boxed version of type BOOLEAN */
struct Sb1 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1* p1; /* pointer */
	T1 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_8 */
struct Sb2 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2* p1; /* pointer */
	T2 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_32 */
struct Sb3 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T3* p1; /* pointer */
	T3 z1; /* item */
};

/* Struct for boxed version of type INTEGER_8 */
struct Sb4 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T4* p1; /* pointer */
	T4 z1; /* item */
};

/* Struct for boxed version of type INTEGER_16 */
struct Sb5 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T5* p1; /* pointer */
	T5 z1; /* item */
};

/* Struct for boxed version of type INTEGER_32 */
struct Sb6 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6* p1; /* pointer */
	T6 z1; /* item */
};

/* Struct for boxed version of type INTEGER_64 */
struct Sb7 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T7* p1; /* pointer */
	T7 z1; /* item */
};

/* Struct for boxed version of type NATURAL_8 */
struct Sb8 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T8* p1; /* pointer */
	T8 z1; /* item */
};

/* Struct for boxed version of type NATURAL_16 */
struct Sb9 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T9* p1; /* pointer */
	T9 z1; /* item */
};

/* Struct for boxed version of type NATURAL_32 */
struct Sb10 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T10* p1; /* pointer */
	T10 z1; /* item */
};

/* Struct for boxed version of type NATURAL_64 */
struct Sb11 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T11* p1; /* pointer */
	T11 z1; /* item */
};

/* Struct for boxed version of type REAL_32 */
struct Sb12 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T12* p1; /* pointer */
	T12 z1; /* item */
};

/* Struct for boxed version of type REAL_64 */
struct Sb13 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T13* p1; /* pointer */
	T13 z1; /* item */
};

/* Struct for boxed version of type POINTER */
struct Sb14 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14* p1; /* pointer */
	T14 z1; /* item */
};

/* Struct for type UTF_CONVERTER */
struct S40 {
	char dummy;
};

/* Struct for boxed version of type UTF_CONVERTER */
struct Sb40 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T40* p1; /* pointer */
	T40 z1; /* item */
};

/* Struct for type TYPED_POINTER [NATURAL_16] */
struct S1546 {
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [NATURAL_16] */
struct Sb1546 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1546* p1; /* pointer */
	T1546 z1; /* item */
};

/* Struct for type TYPED_POINTER [NATURAL_8] */
struct S1545 {
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [NATURAL_8] */
struct Sb1545 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1545* p1; /* pointer */
	T1545 z1; /* item */
};

/* Struct for type TYPED_POINTER [ANY] */
struct S1425 {
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [ANY] */
struct Sb1425 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1425* p1; /* pointer */
	T1425 z1; /* item */
};

/* Struct for type TYPED_POINTER [SPECIAL [NATURAL_8]] */
struct S1065 {
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [SPECIAL [NATURAL_8]] */
struct Sb1065 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1065* p1; /* pointer */
	T1065 z1; /* item */
};

/* Struct for type SPECIAL [CHARACTER_8] */
struct S15 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T2 z2[1]; /* item */
};

/* Struct for type SPECIAL [CHARACTER_32] */
struct S16 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T3 z2[1]; /* item */
};

/* Struct for type STRING_8 */
struct S17 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* internal_case_insensitive_hash_code */
};

/* Struct for type STRING_32 */
struct S18 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* internal_case_insensitive_hash_code */
};

/* Struct for type IMMUTABLE_STRING_32 */
struct S20 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* area_lower */
	T6 a4; /* internal_hash_code */
};

/* Struct for type ISE_EXCEPTION_MANAGER */
struct S21 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type GEC */
struct S26 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* exit_code */
	T0* a2; /* error_handler */
	T0* a3; /* version_flag */
	T0* a4; /* input_filename */
	T0* a5; /* override_root_type */
	T0* a6; /* last_system */
	T0* a7; /* target_option */
	T0* a8; /* setting_option */
	T0* a9; /* capability_option */
	T0* a10; /* variable_option */
	T0* a11; /* finalize_flag */
	T0* a12; /* gelint_flag */
	T0* a13; /* ise_option */
	T0* a14; /* catcall_option */
	T0* a15; /* c_compile_option */
	T0* a16; /* split_option */
	T0* a17; /* split_size_option */
	T0* a18; /* new_instance_types_option */
	T0* a19; /* gc_option */
	T0* a20; /* thread_option */
	T0* a21; /* silent_flag */
	T0* a22; /* no_benchmark_flag */
	T0* a23; /* nested_benchmark_flag */
	T0* a24; /* metrics_flag */
	T0* a25; /* verbose_flag */
	T0* a26; /* ise_version */
	T0* a27; /* override_root_cluster_pathname */
	T0* a28; /* override_root_creation */
	T0* a29; /* override_settings */
	T0* a30; /* override_capabilities */
	T0* a31; /* override_variables */
	T1 a32; /* ecf_gelint_option */
	T0* a33; /* ecf_scoop_exceptions_option */
	T0* a34; /* new_instance_types */
	T6 a35; /* split_size */
};

/* Struct for type CELL [detachable EXCEPTION] */
struct S27 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type HASH_TABLE [INTEGER_32, INTEGER_32] */
struct S28 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* content */
	T0* a3; /* keys */
	T0* a4; /* deleted_marks */
	T0* a5; /* indexes_map */
	T6 a6; /* iteration_position */
	T6 a7; /* count */
	T6 a8; /* deleted_item_position */
	T6 a9; /* control */
	T6 a10; /* found_item */
	T1 a11; /* has_default */
	T6 a12; /* item_position */
	T6 a13; /* ht_lowest_deleted_position */
	T6 a14; /* ht_deleted_item */
	T6 a15; /* ht_deleted_key */
	T1 a16; /* object_comparison */
};

/* Struct for type CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
struct S29 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type CELL [NO_MORE_MEMORY] */
struct S30 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type C_STRING */
struct S31 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* managed_data */
	T6 a2; /* count */
};

/* Struct for type TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
struct S32 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 z1;
	T6 z2;
	T6 z3;
	T0* z4;
	T0* z5;
	T0* z6;
	T0* z7;
	T0* z8;
	T0* z9;
	T6 z10;
	T1 z11;
};

/* Struct for type KL_ARGUMENTS */
struct S33 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* program_name */
};

/* Struct for type ARRAY [STRING_8] */
struct S34 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [STRING_8] */
struct S35 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_EXCEPTIONS */
struct S36 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type EXCEPTIONS */
struct S37 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_STANDARD_FILES */
struct S38 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_STDERR_FILE */
struct S39 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ERROR_HANDLER */
struct S42 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* info_file */
	T0* a3; /* mutex */
	T0* a4; /* error_file */
	T0* a5; /* warning_file */
	T1 a6; /* is_ise */
	T1 a7; /* is_verbose */
	T1 a8; /* has_eiffel_error */
	T1 a9; /* has_internal_error */
	T1 a10; /* is_ge */
};

/* Struct for type KL_TEXT_INPUT_FILE */
struct S43 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T1 a2; /* end_of_file */
	T0* a3; /* last_string */
	T6 a4; /* mode */
	T0* a5; /* internal_name */
	T0* a6; /* internal_detachable_name_pointer */
	T0* a7; /* character_buffer */
	T2 a8; /* last_character */
	T14 a9; /* file_pointer */
	T1 a10; /* descriptor_available */
	T0* a11; /* last_string_32 */
};

/* Struct for type UT_GOBO_VARIABLES */
struct S44 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type UT_ISE_VARIABLES */
struct S45 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type AP_FLAG */
struct S46 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* occurrences */
	T0* a2; /* description */
	T0* a3; /* long_form */
	T2 a4; /* short_form */
	T1 a5; /* has_short_form */
	T1 a6; /* is_hidden */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
};

/* Struct for type KL_EXECUTION_ENVIRONMENT */
struct S49 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SYSTEM */
struct S50 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* register_class_mutex */
	T0* a2; /* external_include_pathnames */
	T0* a3; /* external_object_pathnames */
	T0* a4; /* external_library_pathnames */
	T0* a5; /* external_make_pathnames */
	T0* a6; /* external_resource_pathnames */
	T0* a7; /* external_cflags */
	T0* a8; /* external_linker_flags */
	T1 a9; /* console_application_mode */
	T1 a10; /* total_order_on_reals_mode */
	T0* a11; /* current_system */
	T0* a12; /* universe */
	T0* a13; /* name */
	T0* a14; /* libraries */
	T0* a15; /* clusters */
	T0* a16; /* dotnet_assemblies */
	T0* a17; /* implicit_attachment_type_mark */
	T0* a18; /* master_classes */
	T0* a19; /* master_class_mutex */
	T0* a20; /* system_name */
	T0* a21; /* any_type */
	T0* a22; /* detachable_any_type */
	T0* a23; /* detachable_separate_any_type */
	T0* a24; /* any_parent */
	T0* a25; /* any_parents */
	T0* a26; /* any_clients */
	T0* a27; /* tuple_type */
	T0* a28; /* detachable_tuple_type */
	T0* a29; /* tuple_identity_type */
	T0* a30; /* unfolded_empty_tuple_actual_parameters */
	T0* a31; /* array_any_type */
	T0* a32; /* array_detachable_any_type */
	T0* a33; /* array_none_type */
	T0* a34; /* array_identity_type */
	T0* a35; /* boolean_type */
	T0* a36; /* character_type */
	T0* a37; /* character_8_type */
	T0* a38; /* character_8_convert_feature */
	T0* a39; /* character_32_type */
	T0* a40; /* character_32_convert_feature */
	T0* a41; /* double_type */
	T0* a42; /* exception_type */
	T0* a43; /* detachable_exception_type */
	T0* a44; /* exception_manager_type */
	T0* a45; /* function_identity_any_type */
	T0* a46; /* immutable_string_8_type */
	T0* a47; /* immutable_string_32_type */
	T0* a48; /* integer_type */
	T0* a49; /* integer_8_type */
	T0* a50; /* integer_8_convert_feature */
	T0* a51; /* integer_16_type */
	T0* a52; /* integer_16_convert_feature */
	T0* a53; /* integer_32_type */
	T0* a54; /* integer_32_convert_feature */
	T0* a55; /* integer_64_type */
	T0* a56; /* integer_64_convert_feature */
	T0* a57; /* ise_exception_manager_type */
	T0* a58; /* iterable_detachable_separate_any_type */
	T0* a59; /* natural_type */
	T0* a60; /* natural_8_type */
	T0* a61; /* natural_8_convert_feature */
	T0* a62; /* natural_16_type */
	T0* a63; /* natural_16_convert_feature */
	T0* a64; /* natural_32_type */
	T0* a65; /* natural_32_convert_feature */
	T0* a66; /* natural_64_type */
	T0* a67; /* natural_64_convert_feature */
	T0* a68; /* none_type */
	T0* a69; /* detachable_none_type */
	T0* a70; /* pointer_type */
	T0* a71; /* predicate_identity_type */
	T0* a72; /* procedure_identity_type */
	T0* a73; /* real_type */
	T0* a74; /* real_32_type */
	T0* a75; /* real_32_convert_feature */
	T0* a76; /* real_64_type */
	T0* a77; /* real_64_convert_feature */
	T0* a78; /* routine_identity_type */
	T0* a79; /* special_any_type */
	T0* a80; /* special_detachable_any_type */
	T0* a81; /* special_identity_type */
	T0* a82; /* string_type */
	T0* a83; /* detachable_string_type */
	T0* a84; /* string_8_type */
	T0* a85; /* detachable_string_8_type */
	T0* a86; /* string_8_convert_feature */
	T0* a87; /* string_32_type */
	T0* a88; /* string_32_convert_feature */
	T0* a89; /* system_object_type */
	T0* a90; /* system_object_parents */
	T0* a91; /* system_string_type */
	T0* a92; /* type_detachable_any_type */
	T0* a93; /* detachable_type_exception_type */
	T0* a94; /* type_detachable_exception_type */
	T0* a95; /* type_detachable_like_current_type */
	T0* a96; /* type_identity_type */
	T0* a97; /* typed_pointer_identity_type */
	T0* a98; /* wide_character_type */
	T1 a99; /* is_read_only */
	T6 a100; /* registered_class_count */
	T1 a101; /* use_obsolete_syntax_mode */
	T1 a102; /* obsolete_iteration_mode */
	T1 a103; /* attachment_type_conformance_mode */
	T1 a104; /* scoop_mode */
	T6 a105; /* is_equal_seed */
	T1 a106; /* target_type_attachment_mode */
	T6 a107; /* default_create_seed */
	T6 a108; /* iterable_new_cursor_seed */
	T6 a109; /* iteration_cursor_after_seed */
	T6 a110; /* iteration_cursor_forth_seed */
	T6 a111; /* iteration_cursor_item_seed */
	T1 a112; /* is_dotnet */
	T6 a113; /* copy_seed */
	T6 a114; /* twin_seed */
	T6 a115; /* routine_call_seed */
	T6 a116; /* function_item_seed */
	T6 a117; /* dispose_seed */
	T6 a118; /* special_item_seed */
	T1 a119; /* obsolete_routine_type_mode */
};

/* Struct for type AP_PARSER */
struct S52 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* options */
	T0* a2; /* alternative_options_lists */
	T0* a3; /* parameters */
	T0* a4; /* parameters_description */
	T0* a5; /* help_option */
	T0* a6; /* error_handler */
	T0* a7; /* application_description */
	T0* a8; /* current_options */
	T1 a9; /* is_first_option */
	T0* a10; /* last_option_parameter */
};

/* Struct for type AP_ALTERNATIVE_OPTIONS_LIST */
struct S53 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* introduction_option */
	T0* a5; /* parameters_description */
	T0* a6; /* internal_cursor */
};

/* Struct for type AP_STRING_OPTION */
struct S54 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* has_default_parameter */
	T1 a6; /* needs_parameter */
	T0* a7; /* long_form */
	T1 a8; /* is_hidden */
	T1 a9; /* is_mandatory */
	T6 a10; /* maximum_occurrences */
	T1 a11; /* has_short_form */
	T2 a12; /* short_form */
};

/* Struct for type UT_VERSION */
struct S56 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_revision */
	T6 a4; /* internal_build */
};

/* Struct for type AP_ENUMERATION_OPTION */
struct S57 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* possible_values */
	T0* a5; /* parameter_description */
	T1 a6; /* needs_parameter */
	T0* a7; /* long_form */
	T1 a8; /* is_hidden */
	T1 a9; /* is_mandatory */
	T6 a10; /* maximum_occurrences */
	T1 a11; /* has_short_form */
	T2 a12; /* short_form */
};

/* Struct for type AP_BOOLEAN_OPTION */
struct S58 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T1 a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T1 a7; /* is_hidden */
	T1 a8; /* is_mandatory */
	T6 a9; /* maximum_occurrences */
	T1 a10; /* has_short_form */
	T2 a11; /* short_form */
};

/* Struct for type AP_INTEGER_OPTION */
struct S59 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T6 a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T2 a7; /* short_form */
	T1 a8; /* is_hidden */
	T1 a9; /* is_mandatory */
	T6 a10; /* maximum_occurrences */
	T1 a11; /* has_short_form */
};

/* Struct for type ET_NULL_ERROR_HANDLER */
struct S63 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* info_file */
	T0* a3; /* mutex */
	T0* a4; /* error_file */
	T0* a5; /* warning_file */
	T1 a6; /* is_ise */
	T1 a7; /* is_verbose */
	T1 a8; /* has_eiffel_error */
	T1 a9; /* has_internal_error */
	T1 a10; /* is_ge */
};

/* Struct for type ET_AST_FACTORY */
struct S65 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SYSTEM_PROCESSOR */
struct S66 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* eiffel_preparser */
	T0* a2; /* master_class_checker */
	T0* a3; /* eiffel_parser */
	T0* a4; /* provider_checker */
	T0* a5; /* ancestor_builder */
	T0* a6; /* feature_flattener */
	T0* a7; /* interface_checker */
	T0* a8; /* implementation_checker */
	T0* a9; /* error_handler */
	T0* a10; /* processed_class_count_stack */
	T0* a11; /* ast_factory */
	T0* a12; /* dotnet_assembly_consumer */
	T0* a13; /* ise_version */
	T0* a14; /* ecma_version */
	T1 a15; /* preparse_shallow_mode */
	T1 a16; /* preparse_single_mode */
	T1 a17; /* preparse_multiple_mode */
	T1 a18; /* unknown_builtin_reported */
	T1 a19; /* qualified_anchored_types_cycle_detection_enabled */
	T1 a20; /* use_attribute_keyword */
	T1 a21; /* use_note_keyword */
	T1 a22; /* use_reference_keyword */
	T1 a23; /* use_attached_keyword */
	T1 a24; /* use_detachable_keyword */
	T1 a25; /* benchmark_shown */
	T1 a26; /* nested_benchmark_shown */
	T0* a27; /* stop_request */
	T1 a28; /* metrics_shown */
	T1 a29; /* flat_mode */
	T1 a30; /* flat_dbc_mode */
	T1 a31; /* cluster_dependence_enabled */
	T6 a32; /* postponed_class_count */
	T6 a33; /* processed_class_count */
	T1 a34; /* providers_enabled */
	T1 a35; /* preparse_override_mode */
	T1 a36; /* preparse_readonly_mode */
	T1 a37; /* use_cluster_dependence_pathnames */
	T1 a38; /* suppliers_enabled */
};

/* Struct for type ET_CLUSTER */
struct S67 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T1 a5; /* overridden_constraint_enabled */
	T1 a6; /* scm_mapping_constraint_enabled */
	T0* a7; /* subclusters */
	T1 a8; /* use_obsolete_syntax */
	T1 a9; /* is_override */
	T0* a10; /* provider_constraint */
	T0* a11; /* dependant_constraint */
	T0* a12; /* scm_write_mapping */
	T0* a13; /* parent */
	T1 a14; /* is_read_only */
	T1 a15; /* is_abstract */
	T0* a16; /* cached_absolute_pathname */
};

/* Struct for type ET_EIFFEL_PARSER */
struct S68 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* yy_parsing_status */
	T0* a2; /* eiffel_buffer */
	T0* a3; /* counters */
	T0* a4; /* last_formal_arguments_stack */
	T0* a5; /* last_local_variables_stack */
	T0* a6; /* last_keywords */
	T0* a7; /* last_symbols */
	T0* a8; /* last_object_tests_stack */
	T0* a9; /* last_object_tests_pool */
	T0* a10; /* last_iteration_components_stack */
	T0* a11; /* last_iteration_components_pool */
	T0* a12; /* last_inline_separate_arguments_stack */
	T0* a13; /* last_inline_separate_arguments_pool */
	T0* a14; /* assertions */
	T0* a15; /* assertion_counters */
	T0* a16; /* assertion_kinds */
	T6 a17; /* assertion_kind */
	T0* a18; /* queries */
	T0* a19; /* procedures */
	T0* a20; /* constraints */
	T0* a21; /* providers */
	T0* a22; /* current_class */
	T0* a23; /* system_processor */
	T0* a24; /* group */
	T0* a25; /* filename */
	T6 a26; /* time_stamp */
	T0* a27; /* input_buffer */
	T0* a28; /* last_class */
	T6 a29; /* last_text_count */
	T6 a30; /* last_literal_start */
	T0* a31; /* verbatim_marker */
	T6 a32; /* verbatim_marker_count */
	T0* a33; /* verbatim_open_white_characters */
	T0* a34; /* verbatim_close_white_characters */
	T0* a35; /* yyss */
	T6 a36; /* yy_end */
	T6 a37; /* yy_start */
	T6 a38; /* yy_line */
	T6 a39; /* yy_column */
	T6 a40; /* yy_position */
	T6 a41; /* yy_suspended_yystacksize */
	T6 a42; /* yy_suspended_yystate */
	T6 a43; /* yy_suspended_yyn */
	T6 a44; /* yy_suspended_yychar1 */
	T6 a45; /* yy_suspended_index */
	T6 a46; /* yy_suspended_yyss_top */
	T6 a47; /* yy_suspended_yy_goto */
	T0* a48; /* yyr1 */
	T6 a49; /* yyssp */
	T0* a50; /* yypgoto */
	T0* a51; /* yycheck */
	T0* a52; /* yytable */
	T0* a53; /* yydefgoto */
	T6 a54; /* error_count */
	T1 a55; /* yy_lookahead_needed */
	T6 a56; /* yyerrstatus */
	T0* a57; /* yypact */
	T6 a58; /* last_token */
	T0* a59; /* yytranslate */
	T0* a60; /* yydefact */
	T0* a61; /* last_clients */
	T0* a62; /* last_export_clients */
	T0* a63; /* last_feature_clause */
	T6 a64; /* last_literal_end */
	T1 a65; /* yy_rejected */
	T6 a66; /* yy_state_count */
	T6 a67; /* yy_full_match */
	T6 a68; /* yy_lp */
	T6 a69; /* yy_looking_for_trail_begin */
	T6 a70; /* yy_full_lp */
	T6 a71; /* yy_full_state */
	T6 a72; /* pushed_start_condition_count */
	T6 a73; /* yy_start_state */
	T6 a74; /* line */
	T6 a75; /* column */
	T6 a76; /* position */
	T1 a77; /* yy_more_flag */
	T6 a78; /* yy_more_len */
	T6 a79; /* yy_last_accepting_state */
	T6 a80; /* yy_last_accepting_cpos */
	T0* a81; /* yy_pushed_start_conditions */
	T0* a82; /* yyspecial_routines1 */
	T6 a83; /* yyvsc1 */
	T0* a84; /* yyvs1 */
	T0* a85; /* yyspecial_routines2 */
	T6 a86; /* yyvsc2 */
	T0* a87; /* yyvs2 */
	T0* a88; /* yyspecial_routines3 */
	T6 a89; /* yyvsc3 */
	T0* a90; /* yyvs3 */
	T0* a91; /* yyspecial_routines4 */
	T6 a92; /* yyvsc4 */
	T0* a93; /* yyvs4 */
	T0* a94; /* yyspecial_routines5 */
	T6 a95; /* yyvsc5 */
	T0* a96; /* yyvs5 */
	T0* a97; /* yyspecial_routines6 */
	T6 a98; /* yyvsc6 */
	T0* a99; /* yyvs6 */
	T0* a100; /* yyspecial_routines7 */
	T6 a101; /* yyvsc7 */
	T0* a102; /* yyvs7 */
	T0* a103; /* yyspecial_routines8 */
	T6 a104; /* yyvsc8 */
	T0* a105; /* yyvs8 */
	T0* a106; /* yyspecial_routines9 */
	T6 a107; /* yyvsc9 */
	T0* a108; /* yyvs9 */
	T0* a109; /* yyspecial_routines10 */
	T6 a110; /* yyvsc10 */
	T0* a111; /* yyvs10 */
	T0* a112; /* yyspecial_routines11 */
	T6 a113; /* yyvsc11 */
	T0* a114; /* yyvs11 */
	T0* a115; /* yyspecial_routines12 */
	T6 a116; /* yyvsc12 */
	T0* a117; /* yyvs12 */
	T0* a118; /* yyspecial_routines13 */
	T6 a119; /* yyvsc13 */
	T0* a120; /* yyvs13 */
	T0* a121; /* yyspecial_routines14 */
	T6 a122; /* yyvsc14 */
	T0* a123; /* yyvs14 */
	T0* a124; /* yyspecial_routines15 */
	T6 a125; /* yyvsc15 */
	T0* a126; /* yyvs15 */
	T0* a127; /* yyspecial_routines16 */
	T6 a128; /* yyvsc16 */
	T0* a129; /* yyvs16 */
	T0* a130; /* yyspecial_routines17 */
	T6 a131; /* yyvsc17 */
	T0* a132; /* yyvs17 */
	T0* a133; /* yyspecial_routines18 */
	T6 a134; /* yyvsc18 */
	T0* a135; /* yyvs18 */
	T0* a136; /* yyspecial_routines19 */
	T6 a137; /* yyvsc19 */
	T0* a138; /* yyvs19 */
	T0* a139; /* yyspecial_routines20 */
	T6 a140; /* yyvsc20 */
	T0* a141; /* yyvs20 */
	T0* a142; /* yyspecial_routines21 */
	T6 a143; /* yyvsc21 */
	T0* a144; /* yyvs21 */
	T0* a145; /* yyspecial_routines22 */
	T6 a146; /* yyvsc22 */
	T0* a147; /* yyvs22 */
	T0* a148; /* yyspecial_routines23 */
	T6 a149; /* yyvsc23 */
	T0* a150; /* yyvs23 */
	T0* a151; /* yyspecial_routines24 */
	T6 a152; /* yyvsc24 */
	T0* a153; /* yyvs24 */
	T0* a154; /* yyspecial_routines25 */
	T6 a155; /* yyvsc25 */
	T0* a156; /* yyvs25 */
	T0* a157; /* yyspecial_routines26 */
	T6 a158; /* yyvsc26 */
	T0* a159; /* yyvs26 */
	T0* a160; /* yyspecial_routines27 */
	T6 a161; /* yyvsc27 */
	T0* a162; /* yyvs27 */
	T0* a163; /* yyspecial_routines28 */
	T6 a164; /* yyvsc28 */
	T0* a165; /* yyvs28 */
	T0* a166; /* yyspecial_routines29 */
	T6 a167; /* yyvsc29 */
	T0* a168; /* yyvs29 */
	T0* a169; /* yyspecial_routines30 */
	T6 a170; /* yyvsc30 */
	T0* a171; /* yyvs30 */
	T0* a172; /* yyspecial_routines31 */
	T6 a173; /* yyvsc31 */
	T0* a174; /* yyvs31 */
	T0* a175; /* yyspecial_routines32 */
	T6 a176; /* yyvsc32 */
	T0* a177; /* yyvs32 */
	T0* a178; /* yyspecial_routines33 */
	T6 a179; /* yyvsc33 */
	T0* a180; /* yyvs33 */
	T0* a181; /* yyspecial_routines34 */
	T6 a182; /* yyvsc34 */
	T0* a183; /* yyvs34 */
	T0* a184; /* yyspecial_routines35 */
	T6 a185; /* yyvsc35 */
	T0* a186; /* yyvs35 */
	T0* a187; /* yyspecial_routines36 */
	T6 a188; /* yyvsc36 */
	T0* a189; /* yyvs36 */
	T0* a190; /* yyspecial_routines37 */
	T6 a191; /* yyvsc37 */
	T0* a192; /* yyvs37 */
	T0* a193; /* yyspecial_routines38 */
	T6 a194; /* yyvsc38 */
	T0* a195; /* yyvs38 */
	T0* a196; /* yyspecial_routines39 */
	T6 a197; /* yyvsc39 */
	T0* a198; /* yyvs39 */
	T0* a199; /* yyspecial_routines40 */
	T6 a200; /* yyvsc40 */
	T0* a201; /* yyvs40 */
	T0* a202; /* yyspecial_routines41 */
	T6 a203; /* yyvsc41 */
	T0* a204; /* yyvs41 */
	T0* a205; /* yyspecial_routines42 */
	T6 a206; /* yyvsc42 */
	T0* a207; /* yyvs42 */
	T0* a208; /* yyspecial_routines43 */
	T6 a209; /* yyvsc43 */
	T0* a210; /* yyvs43 */
	T0* a211; /* yyspecial_routines44 */
	T6 a212; /* yyvsc44 */
	T0* a213; /* yyvs44 */
	T0* a214; /* yyspecial_routines45 */
	T6 a215; /* yyvsc45 */
	T0* a216; /* yyvs45 */
	T0* a217; /* yyspecial_routines46 */
	T6 a218; /* yyvsc46 */
	T0* a219; /* yyvs46 */
	T0* a220; /* yyspecial_routines47 */
	T6 a221; /* yyvsc47 */
	T0* a222; /* yyvs47 */
	T0* a223; /* yyspecial_routines48 */
	T6 a224; /* yyvsc48 */
	T0* a225; /* yyvs48 */
	T0* a226; /* yyspecial_routines49 */
	T6 a227; /* yyvsc49 */
	T0* a228; /* yyvs49 */
	T0* a229; /* yyspecial_routines50 */
	T6 a230; /* yyvsc50 */
	T0* a231; /* yyvs50 */
	T0* a232; /* yyspecial_routines51 */
	T6 a233; /* yyvsc51 */
	T0* a234; /* yyvs51 */
	T0* a235; /* yyspecial_routines52 */
	T6 a236; /* yyvsc52 */
	T0* a237; /* yyvs52 */
	T0* a238; /* yyspecial_routines53 */
	T6 a239; /* yyvsc53 */
	T0* a240; /* yyvs53 */
	T0* a241; /* yyspecial_routines54 */
	T6 a242; /* yyvsc54 */
	T0* a243; /* yyvs54 */
	T0* a244; /* yyspecial_routines55 */
	T6 a245; /* yyvsc55 */
	T0* a246; /* yyvs55 */
	T0* a247; /* yyspecial_routines56 */
	T6 a248; /* yyvsc56 */
	T0* a249; /* yyvs56 */
	T0* a250; /* yyspecial_routines57 */
	T6 a251; /* yyvsc57 */
	T0* a252; /* yyvs57 */
	T0* a253; /* yyspecial_routines58 */
	T6 a254; /* yyvsc58 */
	T0* a255; /* yyvs58 */
	T0* a256; /* yyspecial_routines59 */
	T6 a257; /* yyvsc59 */
	T0* a258; /* yyvs59 */
	T0* a259; /* yyspecial_routines60 */
	T6 a260; /* yyvsc60 */
	T0* a261; /* yyvs60 */
	T0* a262; /* yyspecial_routines61 */
	T6 a263; /* yyvsc61 */
	T0* a264; /* yyvs61 */
	T0* a265; /* yyspecial_routines62 */
	T6 a266; /* yyvsc62 */
	T0* a267; /* yyvs62 */
	T0* a268; /* yyspecial_routines63 */
	T6 a269; /* yyvsc63 */
	T0* a270; /* yyvs63 */
	T0* a271; /* yyspecial_routines64 */
	T6 a272; /* yyvsc64 */
	T0* a273; /* yyvs64 */
	T0* a274; /* yyspecial_routines65 */
	T6 a275; /* yyvsc65 */
	T0* a276; /* yyvs65 */
	T0* a277; /* yyspecial_routines66 */
	T6 a278; /* yyvsc66 */
	T0* a279; /* yyvs66 */
	T0* a280; /* yyspecial_routines67 */
	T6 a281; /* yyvsc67 */
	T0* a282; /* yyvs67 */
	T0* a283; /* yyspecial_routines68 */
	T6 a284; /* yyvsc68 */
	T0* a285; /* yyvs68 */
	T0* a286; /* yyspecial_routines69 */
	T6 a287; /* yyvsc69 */
	T0* a288; /* yyvs69 */
	T0* a289; /* yyspecial_routines70 */
	T6 a290; /* yyvsc70 */
	T0* a291; /* yyvs70 */
	T0* a292; /* yyspecial_routines71 */
	T6 a293; /* yyvsc71 */
	T0* a294; /* yyvs71 */
	T0* a295; /* yyspecial_routines72 */
	T6 a296; /* yyvsc72 */
	T0* a297; /* yyvs72 */
	T0* a298; /* yyspecial_routines73 */
	T6 a299; /* yyvsc73 */
	T0* a300; /* yyvs73 */
	T0* a301; /* yyspecial_routines74 */
	T6 a302; /* yyvsc74 */
	T0* a303; /* yyvs74 */
	T0* a304; /* yyspecial_routines75 */
	T6 a305; /* yyvsc75 */
	T0* a306; /* yyvs75 */
	T0* a307; /* yyspecial_routines76 */
	T6 a308; /* yyvsc76 */
	T0* a309; /* yyvs76 */
	T0* a310; /* yyspecial_routines77 */
	T6 a311; /* yyvsc77 */
	T0* a312; /* yyvs77 */
	T0* a313; /* yyspecial_routines78 */
	T6 a314; /* yyvsc78 */
	T0* a315; /* yyvs78 */
	T0* a316; /* yyspecial_routines79 */
	T6 a317; /* yyvsc79 */
	T0* a318; /* yyvs79 */
	T0* a319; /* yyspecial_routines80 */
	T6 a320; /* yyvsc80 */
	T0* a321; /* yyvs80 */
	T0* a322; /* yyspecial_routines81 */
	T6 a323; /* yyvsc81 */
	T0* a324; /* yyvs81 */
	T0* a325; /* yyspecial_routines82 */
	T6 a326; /* yyvsc82 */
	T0* a327; /* yyvs82 */
	T0* a328; /* yyspecial_routines83 */
	T6 a329; /* yyvsc83 */
	T0* a330; /* yyvs83 */
	T0* a331; /* yyspecial_routines84 */
	T6 a332; /* yyvsc84 */
	T0* a333; /* yyvs84 */
	T0* a334; /* yyspecial_routines85 */
	T6 a335; /* yyvsc85 */
	T0* a336; /* yyvs85 */
	T0* a337; /* yyspecial_routines86 */
	T6 a338; /* yyvsc86 */
	T0* a339; /* yyvs86 */
	T0* a340; /* yyspecial_routines87 */
	T6 a341; /* yyvsc87 */
	T0* a342; /* yyvs87 */
	T0* a343; /* yyspecial_routines88 */
	T6 a344; /* yyvsc88 */
	T0* a345; /* yyvs88 */
	T0* a346; /* yyspecial_routines89 */
	T6 a347; /* yyvsc89 */
	T0* a348; /* yyvs89 */
	T0* a349; /* yyspecial_routines90 */
	T6 a350; /* yyvsc90 */
	T0* a351; /* yyvs90 */
	T0* a352; /* yyspecial_routines91 */
	T6 a353; /* yyvsc91 */
	T0* a354; /* yyvs91 */
	T0* a355; /* yyspecial_routines92 */
	T6 a356; /* yyvsc92 */
	T0* a357; /* yyvs92 */
	T0* a358; /* yyspecial_routines93 */
	T6 a359; /* yyvsc93 */
	T0* a360; /* yyvs93 */
	T0* a361; /* yyspecial_routines94 */
	T6 a362; /* yyvsc94 */
	T0* a363; /* yyvs94 */
	T0* a364; /* yyspecial_routines95 */
	T6 a365; /* yyvsc95 */
	T0* a366; /* yyvs95 */
	T0* a367; /* yyspecial_routines96 */
	T6 a368; /* yyvsc96 */
	T0* a369; /* yyvs96 */
	T0* a370; /* yyspecial_routines97 */
	T6 a371; /* yyvsc97 */
	T0* a372; /* yyvs97 */
	T0* a373; /* yyspecial_routines98 */
	T6 a374; /* yyvsc98 */
	T0* a375; /* yyvs98 */
	T0* a376; /* yyspecial_routines99 */
	T6 a377; /* yyvsc99 */
	T0* a378; /* yyvs99 */
	T0* a379; /* yyspecial_routines100 */
	T6 a380; /* yyvsc100 */
	T0* a381; /* yyvs100 */
	T0* a382; /* yyspecial_routines101 */
	T6 a383; /* yyvsc101 */
	T0* a384; /* yyvs101 */
	T0* a385; /* yyspecial_routines102 */
	T6 a386; /* yyvsc102 */
	T0* a387; /* yyvs102 */
	T0* a388; /* yyspecial_routines103 */
	T6 a389; /* yyvsc103 */
	T0* a390; /* yyvs103 */
	T0* a391; /* yyspecial_routines104 */
	T6 a392; /* yyvsc104 */
	T0* a393; /* yyvs104 */
	T0* a394; /* yyspecial_routines105 */
	T6 a395; /* yyvsc105 */
	T0* a396; /* yyvs105 */
	T0* a397; /* yyspecial_routines106 */
	T6 a398; /* yyvsc106 */
	T0* a399; /* yyvs106 */
	T0* a400; /* yyspecial_routines107 */
	T6 a401; /* yyvsc107 */
	T0* a402; /* yyvs107 */
	T0* a403; /* yyspecial_routines108 */
	T6 a404; /* yyvsc108 */
	T0* a405; /* yyvs108 */
	T0* a406; /* yyspecial_routines109 */
	T6 a407; /* yyvsc109 */
	T0* a408; /* yyvs109 */
	T0* a409; /* yyspecial_routines110 */
	T6 a410; /* yyvsc110 */
	T0* a411; /* yyvs110 */
	T0* a412; /* yyspecial_routines111 */
	T6 a413; /* yyvsc111 */
	T0* a414; /* yyvs111 */
	T0* a415; /* yyspecial_routines112 */
	T6 a416; /* yyvsc112 */
	T0* a417; /* yyvs112 */
	T0* a418; /* yyspecial_routines113 */
	T6 a419; /* yyvsc113 */
	T0* a420; /* yyvs113 */
	T0* a421; /* yyspecial_routines114 */
	T6 a422; /* yyvsc114 */
	T0* a423; /* yyvs114 */
	T0* a424; /* yyspecial_routines115 */
	T6 a425; /* yyvsc115 */
	T0* a426; /* yyvs115 */
	T0* a427; /* yyspecial_routines116 */
	T6 a428; /* yyvsc116 */
	T0* a429; /* yyvs116 */
	T0* a430; /* yyspecial_routines117 */
	T6 a431; /* yyvsc117 */
	T0* a432; /* yyvs117 */
	T0* a433; /* yyspecial_routines118 */
	T6 a434; /* yyvsc118 */
	T0* a435; /* yyvs118 */
	T0* a436; /* yyspecial_routines119 */
	T6 a437; /* yyvsc119 */
	T0* a438; /* yyvs119 */
	T0* a439; /* yyspecial_routines120 */
	T6 a440; /* yyvsc120 */
	T0* a441; /* yyvs120 */
	T0* a442; /* yyspecial_routines121 */
	T6 a443; /* yyvsc121 */
	T0* a444; /* yyvs121 */
	T0* a445; /* yyspecial_routines122 */
	T6 a446; /* yyvsc122 */
	T0* a447; /* yyvs122 */
	T0* a448; /* yyspecial_routines123 */
	T6 a449; /* yyvsc123 */
	T0* a450; /* yyvs123 */
	T0* a451; /* yyspecial_routines124 */
	T6 a452; /* yyvsc124 */
	T0* a453; /* yyvs124 */
	T0* a454; /* yyspecial_routines125 */
	T6 a455; /* yyvsc125 */
	T0* a456; /* yyvs125 */
	T0* a457; /* yyspecial_routines126 */
	T6 a458; /* yyvsc126 */
	T0* a459; /* yyvs126 */
	T0* a460; /* yyspecial_routines127 */
	T6 a461; /* yyvsc127 */
	T0* a462; /* yyvs127 */
	T0* a463; /* yyspecial_routines128 */
	T6 a464; /* yyvsc128 */
	T0* a465; /* yyvs128 */
	T0* a466; /* yyspecial_routines129 */
	T6 a467; /* yyvsc129 */
	T0* a468; /* yyvs129 */
	T0* a469; /* yyspecial_routines130 */
	T6 a470; /* yyvsc130 */
	T0* a471; /* yyvs130 */
	T0* a472; /* yyspecial_routines131 */
	T6 a473; /* yyvsc131 */
	T0* a474; /* yyvs131 */
	T0* a475; /* yyspecial_routines132 */
	T6 a476; /* yyvsc132 */
	T0* a477; /* yyvs132 */
	T0* a478; /* yyspecial_routines133 */
	T6 a479; /* yyvsc133 */
	T0* a480; /* yyvs133 */
	T0* a481; /* yyspecial_routines134 */
	T6 a482; /* yyvsc134 */
	T0* a483; /* yyvs134 */
	T0* a484; /* yyspecial_routines135 */
	T6 a485; /* yyvsc135 */
	T0* a486; /* yyvs135 */
	T0* a487; /* yyspecial_routines136 */
	T6 a488; /* yyvsc136 */
	T0* a489; /* yyvs136 */
	T0* a490; /* yyspecial_routines137 */
	T6 a491; /* yyvsc137 */
	T0* a492; /* yyvs137 */
	T0* a493; /* yyspecial_routines138 */
	T6 a494; /* yyvsc138 */
	T0* a495; /* yyvs138 */
	T0* a496; /* yytypes1 */
	T0* a497; /* yytypes2 */
	T0* a498; /* yy_content */
	T0* a499; /* yy_content_area */
	T0* a500; /* yy_unicode_content_area */
	T0* a501; /* yy_state_stack */
	T6 a502; /* yyvsp1 */
	T6 a503; /* yyvsp2 */
	T6 a504; /* yyvsp3 */
	T6 a505; /* yyvsp4 */
	T6 a506; /* yyvsp5 */
	T6 a507; /* yyvsp6 */
	T6 a508; /* yyvsp7 */
	T6 a509; /* yyvsp8 */
	T6 a510; /* yyvsp9 */
	T6 a511; /* yyvsp10 */
	T6 a512; /* yyvsp11 */
	T6 a513; /* yyvsp12 */
	T6 a514; /* yyvsp13 */
	T6 a515; /* yyvsp14 */
	T6 a516; /* yyvsp15 */
	T6 a517; /* yyvsp16 */
	T6 a518; /* yyvsp17 */
	T6 a519; /* yyvsp18 */
	T6 a520; /* yyvsp19 */
	T6 a521; /* yyvsp20 */
	T6 a522; /* yyvsp21 */
	T6 a523; /* yyvsp22 */
	T6 a524; /* yyvsp23 */
	T6 a525; /* yyvsp24 */
	T6 a526; /* yyvsp25 */
	T6 a527; /* yyvsp26 */
	T6 a528; /* yyvsp27 */
	T6 a529; /* yyvsp28 */
	T6 a530; /* yyvsp29 */
	T6 a531; /* yyvsp30 */
	T6 a532; /* yyvsp31 */
	T6 a533; /* yyvsp32 */
	T6 a534; /* yyvsp33 */
	T6 a535; /* yyvsp34 */
	T6 a536; /* yyvsp35 */
	T6 a537; /* yyvsp36 */
	T6 a538; /* yyvsp37 */
	T6 a539; /* yyvsp38 */
	T6 a540; /* yyvsp39 */
	T6 a541; /* yyvsp40 */
	T6 a542; /* yyvsp41 */
	T6 a543; /* yyvsp42 */
	T6 a544; /* yyvsp43 */
	T6 a545; /* yyvsp44 */
	T6 a546; /* yyvsp45 */
	T6 a547; /* yyvsp46 */
	T6 a548; /* yyvsp47 */
	T6 a549; /* yyvsp48 */
	T6 a550; /* yyvsp49 */
	T6 a551; /* yyvsp50 */
	T6 a552; /* yyvsp51 */
	T6 a553; /* yyvsp52 */
	T6 a554; /* yyvsp53 */
	T6 a555; /* yyvsp54 */
	T6 a556; /* yyvsp55 */
	T6 a557; /* yyvsp56 */
	T6 a558; /* yyvsp57 */
	T6 a559; /* yyvsp58 */
	T6 a560; /* yyvsp59 */
	T6 a561; /* yyvsp60 */
	T6 a562; /* yyvsp61 */
	T6 a563; /* yyvsp62 */
	T6 a564; /* yyvsp63 */
	T6 a565; /* yyvsp64 */
	T6 a566; /* yyvsp65 */
	T6 a567; /* yyvsp66 */
	T6 a568; /* yyvsp67 */
	T6 a569; /* yyvsp68 */
	T6 a570; /* yyvsp69 */
	T6 a571; /* yyvsp70 */
	T6 a572; /* yyvsp71 */
	T6 a573; /* yyvsp72 */
	T6 a574; /* yyvsp73 */
	T6 a575; /* yyvsp74 */
	T6 a576; /* yyvsp75 */
	T6 a577; /* yyvsp76 */
	T6 a578; /* yyvsp77 */
	T6 a579; /* yyvsp78 */
	T6 a580; /* yyvsp79 */
	T6 a581; /* yyvsp80 */
	T6 a582; /* yyvsp81 */
	T6 a583; /* yyvsp82 */
	T6 a584; /* yyvsp83 */
	T6 a585; /* yyvsp84 */
	T6 a586; /* yyvsp85 */
	T6 a587; /* yyvsp86 */
	T6 a588; /* yyvsp87 */
	T6 a589; /* yyvsp88 */
	T6 a590; /* yyvsp89 */
	T6 a591; /* yyvsp90 */
	T6 a592; /* yyvsp91 */
	T6 a593; /* yyvsp92 */
	T6 a594; /* yyvsp93 */
	T6 a595; /* yyvsp94 */
	T6 a596; /* yyvsp95 */
	T6 a597; /* yyvsp96 */
	T6 a598; /* yyvsp97 */
	T6 a599; /* yyvsp98 */
	T6 a600; /* yyvsp99 */
	T6 a601; /* yyvsp100 */
	T6 a602; /* yyvsp101 */
	T6 a603; /* yyvsp102 */
	T6 a604; /* yyvsp103 */
	T6 a605; /* yyvsp104 */
	T6 a606; /* yyvsp105 */
	T6 a607; /* yyvsp106 */
	T6 a608; /* yyvsp107 */
	T6 a609; /* yyvsp108 */
	T6 a610; /* yyvsp109 */
	T6 a611; /* yyvsp110 */
	T6 a612; /* yyvsp111 */
	T6 a613; /* yyvsp112 */
	T6 a614; /* yyvsp113 */
	T6 a615; /* yyvsp114 */
	T6 a616; /* yyvsp115 */
	T6 a617; /* yyvsp116 */
	T6 a618; /* yyvsp117 */
	T6 a619; /* yyvsp118 */
	T6 a620; /* yyvsp119 */
	T6 a621; /* yyvsp120 */
	T6 a622; /* yyvsp121 */
	T6 a623; /* yyvsp122 */
	T6 a624; /* yyvsp123 */
	T6 a625; /* yyvsp124 */
	T6 a626; /* yyvsp125 */
	T6 a627; /* yyvsp126 */
	T6 a628; /* yyvsp127 */
	T6 a629; /* yyvsp128 */
	T6 a630; /* yyvsp129 */
	T6 a631; /* yyvsp130 */
	T6 a632; /* yyvsp131 */
	T6 a633; /* yyvsp132 */
	T6 a634; /* yyvsp133 */
	T6 a635; /* yyvsp134 */
	T6 a636; /* yyvsp135 */
	T6 a637; /* yyvsp136 */
	T6 a638; /* yyvsp137 */
	T6 a639; /* yyvsp138 */
	T0* a640; /* yy_accept */
	T0* a641; /* yy_ec */
	T0* a642; /* yy_chk */
	T0* a643; /* yy_base */
	T0* a644; /* yy_def */
	T0* a645; /* yy_meta */
	T0* a646; /* yy_nxt */
	T0* a647; /* yy_acclist */
	T0* a648; /* last_detachable_any_value */
	T0* a649; /* last_detachable_et_keyword_value */
	T0* a650; /* last_detachable_et_agent_keyword_value */
	T0* a651; /* last_detachable_et_precursor_keyword_value */
	T0* a652; /* last_detachable_et_symbol_value */
	T0* a653; /* last_detachable_et_position_value */
	T0* a654; /* last_detachable_et_boolean_constant_value */
	T0* a655; /* last_detachable_et_break_value */
	T0* a656; /* last_detachable_et_character_constant_value */
	T0* a657; /* last_detachable_et_current_value */
	T0* a658; /* last_detachable_et_free_operator_value */
	T0* a659; /* last_detachable_et_identifier_value */
	T0* a660; /* last_detachable_et_integer_constant_value */
	T0* a661; /* last_detachable_et_keyword_operator_value */
	T0* a662; /* last_detachable_et_manifest_string_value */
	T0* a663; /* last_detachable_et_real_constant_value */
	T0* a664; /* last_detachable_et_result_value */
	T0* a665; /* last_detachable_et_retry_instruction_value */
	T0* a666; /* last_detachable_et_symbol_operator_value */
	T0* a667; /* last_detachable_et_void_value */
	T0* a668; /* last_detachable_et_semicolon_symbol_value */
	T0* a669; /* last_detachable_et_bracket_symbol_value */
	T0* a670; /* last_detachable_et_question_mark_symbol_value */
	T0* a671; /* last_formal_arguments */
	T0* a672; /* last_local_variables */
	T0* a673; /* last_object_tests */
	T0* a674; /* last_iteration_components */
	T0* a675; /* last_inline_separate_arguments */
	T6 a676; /* last_break_end */
	T6 a677; /* last_comment_end */
	T6 a678; /* ms_column */
	T6 a679; /* ms_line */
	T6 a680; /* break_kind */
	T3 a681; /* verbatim_opening_character */
	T1 a682; /* has_natural_64_overflow */
	T11 a683; /* last_natural_64 */
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS] */
struct S69 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
	T0* a6; /* equality_tester */
};

/* Struct for type ET_CLASS */
struct S70 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* id */
	T0* a3; /* ancestors */
	T0* a4; /* conforming_ancestors */
	T0* a5; /* queries */
	T0* a6; /* procedures */
	T0* a7; /* class_keyword */
	T0* a8; /* end_keyword */
	T0* a9; /* group */
	T0* a10; /* status_mutex */
	T0* a11; /* processing_mutex */
	T0* a12; /* formal_parameter_types_mutex */
	T0* a13; /* named_base_class */
	T6 a14; /* time_stamp */
	T8 a15; /* class_code */
	T1 a16; /* tuple_actual_parameters_unfolded_1 */
	T1 a17; /* tuple_actual_parameters_unfolded_2 */
	T0* a18; /* filename */
	T1 a19; /* unprotected_is_parsed */
	T0* a20; /* formal_parameters */
	T1 a21; /* unprotected_has_syntax_error */
	T1 a22; /* unprotected_ancestors_built */
	T1 a23; /* unprotected_has_ancestors_error */
	T1 a24; /* unprotected_features_flattened */
	T1 a25; /* unprotected_has_flattening_error */
	T1 a26; /* unprotected_interface_checked */
	T1 a27; /* unprotected_has_interface_error */
	T1 a28; /* unprotected_implementation_checked */
	T1 a29; /* unprotected_has_implementation_error */
	T0* a30; /* frozen_keyword */
	T0* a31; /* external_keyword */
	T1 a32; /* has_utf8_bom */
	T0* a33; /* providers */
	T6 a34; /* tuple_constraint_position */
	T6 a35; /* registered_feature_count */
	T0* a36; /* class_mark */
	T6 a37; /* index */
	T1 a38; /* unprotected_is_marked */
	T6 a39; /* registered_inline_constant_count */
	T0* a40; /* suppliers */
	T1 a41; /* has_deferred_features */
	T1 a42; /* redeclared_signatures_checked */
	T0* a43; /* creators */
	T0* a44; /* convert_features */
	T0* a45; /* feature_clauses */
	T0* a46; /* first_note_clause */
	T0* a47; /* second_note_clause */
	T0* a48; /* invariants */
	T0* a49; /* obsolete_message */
	T0* a50; /* parent_clauses */
	T0* a51; /* leading_break */
	T1 a52; /* is_interface */
	T1 a53; /* is_checking_implementation */
	T1 a54; /* is_ignored */
	T0* a55; /* formal_parameter_types */
};

/* Struct for type TUPLE [ET_CLASS] */
struct S74 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_CLASS]] */
struct S75 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE */
struct S76 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
struct S77 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PREDICATE [TUPLE [ET_CLASS]] */
struct S78 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type ET_CREATOR_LIST */
struct S80 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_TOKEN_CONSTANTS */
struct S81 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CREATOR */
struct S82 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* create_keyword */
	T0* a2; /* clients */
	T0* a3; /* storage */
	T6 a4; /* count */
};

/* Struct for type UT_CANNOT_READ_FILE_ERROR */
struct S83 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_ECF_SYSTEM_PARSER */
struct S85 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_system */
	T0* a2; /* ast_factory */
	T0* a3; /* override_settings */
	T0* a4; /* override_capabilities */
	T0* a5; /* override_variables */
	T0* a6; /* parsed_libraries */
	T0* a7; /* parsed_dotnet_assemblies */
	T0* a8; /* redirected_locations */
	T0* a9; /* xml_parser */
	T0* a10; /* tree_pipe */
	T0* a11; /* error_handler */
	T0* a12; /* ise_version */
	T0* a13; /* ise_eiffel_to_gobo_uuid_mappings */
};

/* Struct for type ET_ECF_ERROR_HANDLER */
struct S86 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* error_count */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type ET_ECF_SYSTEM */
struct S87 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* filename */
	T0* a3; /* register_class_mutex */
	T0* a4; /* external_include_pathnames */
	T0* a5; /* external_object_pathnames */
	T0* a6; /* external_library_pathnames */
	T0* a7; /* external_make_pathnames */
	T0* a8; /* external_resource_pathnames */
	T0* a9; /* external_cflags */
	T0* a10; /* external_linker_flags */
	T1 a11; /* console_application_mode */
	T1 a12; /* total_order_on_reals_mode */
	T0* a13; /* current_system */
	T0* a14; /* universe */
	T0* a15; /* libraries */
	T0* a16; /* clusters */
	T0* a17; /* dotnet_assemblies */
	T0* a18; /* implicit_attachment_type_mark */
	T0* a19; /* master_classes */
	T0* a20; /* master_class_mutex */
	T0* a21; /* system_name */
	T0* a22; /* any_type */
	T0* a23; /* detachable_any_type */
	T0* a24; /* detachable_separate_any_type */
	T0* a25; /* any_parent */
	T0* a26; /* any_parents */
	T0* a27; /* any_clients */
	T0* a28; /* tuple_type */
	T0* a29; /* detachable_tuple_type */
	T0* a30; /* tuple_identity_type */
	T0* a31; /* unfolded_empty_tuple_actual_parameters */
	T0* a32; /* array_any_type */
	T0* a33; /* array_detachable_any_type */
	T0* a34; /* array_none_type */
	T0* a35; /* array_identity_type */
	T0* a36; /* boolean_type */
	T0* a37; /* character_type */
	T0* a38; /* character_8_type */
	T0* a39; /* character_8_convert_feature */
	T0* a40; /* character_32_type */
	T0* a41; /* character_32_convert_feature */
	T0* a42; /* double_type */
	T0* a43; /* exception_type */
	T0* a44; /* detachable_exception_type */
	T0* a45; /* exception_manager_type */
	T0* a46; /* function_identity_any_type */
	T0* a47; /* immutable_string_8_type */
	T0* a48; /* immutable_string_32_type */
	T0* a49; /* integer_type */
	T0* a50; /* integer_8_type */
	T0* a51; /* integer_8_convert_feature */
	T0* a52; /* integer_16_type */
	T0* a53; /* integer_16_convert_feature */
	T0* a54; /* integer_32_type */
	T0* a55; /* integer_32_convert_feature */
	T0* a56; /* integer_64_type */
	T0* a57; /* integer_64_convert_feature */
	T0* a58; /* ise_exception_manager_type */
	T0* a59; /* iterable_detachable_separate_any_type */
	T0* a60; /* natural_type */
	T0* a61; /* natural_8_type */
	T0* a62; /* natural_8_convert_feature */
	T0* a63; /* natural_16_type */
	T0* a64; /* natural_16_convert_feature */
	T0* a65; /* natural_32_type */
	T0* a66; /* natural_32_convert_feature */
	T0* a67; /* natural_64_type */
	T0* a68; /* natural_64_convert_feature */
	T0* a69; /* none_type */
	T0* a70; /* detachable_none_type */
	T0* a71; /* pointer_type */
	T0* a72; /* predicate_identity_type */
	T0* a73; /* procedure_identity_type */
	T0* a74; /* real_type */
	T0* a75; /* real_32_type */
	T0* a76; /* real_32_convert_feature */
	T0* a77; /* real_64_type */
	T0* a78; /* real_64_convert_feature */
	T0* a79; /* routine_identity_type */
	T0* a80; /* special_any_type */
	T0* a81; /* special_detachable_any_type */
	T0* a82; /* special_identity_type */
	T0* a83; /* string_type */
	T0* a84; /* detachable_string_type */
	T0* a85; /* string_8_type */
	T0* a86; /* detachable_string_8_type */
	T0* a87; /* string_8_convert_feature */
	T0* a88; /* string_32_type */
	T0* a89; /* string_32_convert_feature */
	T0* a90; /* system_object_type */
	T0* a91; /* system_object_parents */
	T0* a92; /* system_string_type */
	T0* a93; /* type_detachable_any_type */
	T0* a94; /* detachable_type_exception_type */
	T0* a95; /* type_detachable_exception_type */
	T0* a96; /* type_detachable_like_current_type */
	T0* a97; /* type_identity_type */
	T0* a98; /* typed_pointer_identity_type */
	T0* a99; /* wide_character_type */
	T1 a100; /* is_read_only */
	T6 a101; /* registered_class_count */
	T0* a102; /* targets */
	T0* a103; /* library_target */
	T0* a104; /* selected_target */
	T0* a105; /* ecf_version */
	T0* a106; /* executable_name */
	T0* a107; /* root_type */
	T0* a108; /* root_creation */
	T6 a109; /* default_create_seed */
	T1 a110; /* inlining_mode */
	T6 a111; /* inlining_size */
	T1 a112; /* scoop_mode */
	T1 a113; /* attachment_type_conformance_mode */
	T6 a114; /* twin_seed */
	T6 a115; /* is_equal_seed */
	T6 a116; /* dispose_seed */
	T1 a117; /* use_boehm_gc */
	T6 a118; /* routine_call_seed */
	T6 a119; /* function_item_seed */
	T1 a120; /* trace_mode */
	T1 a121; /* exception_trace_mode */
	T1 a122; /* check_for_void_target_mode */
	T1 a123; /* line_generation_mode */
	T1 a124; /* multithreaded_mode */
	T6 a125; /* copy_seed */
	T0* a126; /* ecf_namespace */
	T0* a127; /* description */
	T0* a128; /* notes */
	T0* a129; /* uuid */
	T1 a130; /* is_preparsed */
	T0* a131; /* scm_read_mapping_builder */
	T0* a132; /* scm_write_mapping_builder */
	T1 a133; /* use_obsolete_syntax_mode */
	T1 a134; /* obsolete_iteration_mode */
	T1 a135; /* target_type_attachment_mode */
	T6 a136; /* iterable_new_cursor_seed */
	T6 a137; /* iteration_cursor_after_seed */
	T6 a138; /* iteration_cursor_forth_seed */
	T6 a139; /* iteration_cursor_item_seed */
	T1 a140; /* is_dotnet */
	T6 a141; /* special_item_seed */
	T1 a142; /* obsolete_routine_type_mode */
};

/* Struct for type ET_ECF_TARGET */
struct S88 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* settings */
	T0* a2; /* capabilities */
	T0* a3; /* options */
	T0* a4; /* system_config */
	T0* a5; /* root */
	T0* a6; /* variables */
	T0* a7; /* name */
	T0* a8; /* parent */
	T0* a9; /* description */
	T0* a10; /* precompiled_library */
	T0* a11; /* version */
	T1 a12; /* is_abstract */
	T0* a13; /* clusters */
	T0* a14; /* libraries */
	T0* a15; /* dotnet_assemblies */
	T0* a16; /* file_rules */
	T0* a17; /* class_mappings */
	T0* a18; /* namespaces */
	T0* a19; /* external_cflags */
	T0* a20; /* external_includes */
	T0* a21; /* external_libraries */
	T0* a22; /* external_linker_flags */
	T0* a23; /* external_makes */
	T0* a24; /* external_objects */
	T0* a25; /* external_resources */
	T0* a26; /* pre_compile_actions */
	T0* a27; /* post_compile_actions */
	T0* a28; /* notes */
};

/* Struct for type ET_ECF_CLUSTER */
struct S89 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T0* a5; /* target */
	T1 a6; /* overridden_constraint_enabled */
	T1 a7; /* scm_mapping_constraint_enabled */
	T0* a8; /* subclusters */
	T1 a9; /* use_obsolete_syntax */
	T0* a10; /* scm_read_mapping */
	T0* a11; /* scm_write_mapping */
	T0* a12; /* description */
	T1 a13; /* is_hidden */
	T0* a14; /* classname_prefix */
	T1 a15; /* is_read_only */
	T1 a16; /* is_recursive */
	T0* a17; /* conditioned_subclusters */
	T0* a18; /* conditioned_file_rules */
	T0* a19; /* options */
	T0* a20; /* class_options */
	T0* a21; /* class_renamings */
	T0* a22; /* class_mappings */
	T0* a23; /* visible_classes */
	T0* a24; /* provider_groups */
	T0* a25; /* conditions */
	T0* a26; /* notes */
	T1 a27; /* is_override */
	T0* a28; /* overridden_group */
	T1 a29; /* is_preparsed */
	T1 a30; /* is_abstract */
	T0* a31; /* parent */
	T0* a32; /* file_rules */
	T1 a33; /* is_implicit */
	T0* a34; /* provider_constraint */
	T0* a35; /* dependant_constraint */
	T0* a36; /* cached_absolute_pathname */
};

/* Struct for type ET_ECF_SETTINGS */
struct S90 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_settings */
	T0* a2; /* secondary_settings */
};

/* Struct for type ET_ECF_CAPABILITIES */
struct S91 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_use_capabilities */
	T0* a2; /* primary_support_capabilities */
	T0* a3; /* secondary_capabilities */
};

/* Struct for type ET_ECF_VARIABLES */
struct S92 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* secondary_variables */
	T0* a2; /* primary_variables */
};

/* Struct for type ET_CLUSTERS */
struct S94 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type ET_DYNAMIC_SYSTEM */
struct S95 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_system */
	T0* a3; /* dynamic_types */
	T0* a4; /* dynamic_type_set_builder */
	T1 a5; /* catcall_error_mode */
	T0* a6; /* system_processor */
	T0* a7; /* dynamic_generic_types_by_name */
	T0* a8; /* null_dynamic_type_set_builder */
	T1 a9; /* full_class_checking */
	T1 a10; /* catcall_warning_mode */
	T0* a11; /* new_instance_types */
	T0* a12; /* unknown_type */
	T0* a13; /* boolean_type */
	T0* a14; /* character_8_type */
	T0* a15; /* character_32_type */
	T0* a16; /* immutable_string_8_type */
	T0* a17; /* immutable_string_32_type */
	T0* a18; /* integer_8_type */
	T0* a19; /* integer_16_type */
	T0* a20; /* integer_32_type */
	T0* a21; /* integer_64_type */
	T0* a22; /* natural_8_type */
	T0* a23; /* natural_16_type */
	T0* a24; /* natural_32_type */
	T0* a25; /* natural_64_type */
	T0* a26; /* real_32_type */
	T0* a27; /* real_64_type */
	T0* a28; /* pointer_type */
	T0* a29; /* string_8_type */
	T0* a30; /* string_32_type */
	T0* a31; /* special_character_8_type */
	T0* a32; /* special_character_32_type */
	T0* a33; /* type_none_type */
	T0* a34; /* ise_exception_manager_type */
	T0* a35; /* any_type */
	T0* a36; /* none_type */
	T0* a37; /* root_type */
	T0* a38; /* root_creation_procedure */
	T0* a39; /* special_count_feature */
	T0* a40; /* special_capacity_feature */
	T0* a41; /* special_item_feature */
	T0* a42; /* array_area_feature */
	T0* a43; /* array_lower_feature */
	T0* a44; /* array_upper_feature */
	T0* a45; /* typed_pointer_to_pointer_feature */
	T0* a46; /* routine_closed_operands_feature */
	T0* a47; /* routine_rout_disp_feature */
	T0* a48; /* routine_set_rout_disp_final_feature */
	T0* a49; /* ise_exception_manager_init_exception_manager_feature */
	T0* a50; /* ise_exception_manager_last_exception_feature */
	T0* a51; /* ise_exception_manager_once_raise_feature */
	T0* a52; /* ise_exception_manager_set_exception_data_feature */
	T0* a53; /* ise_runtime_type_conforms_to_feature */
	T1 a54; /* in_dynamic_primary_type */
	T0* a55; /* ise_runtime_new_type_instance_of_feature */
	T1 a56; /* in_create_meta_type */
	T1 a57; /* all_attributes_used */
	T1 a58; /* has_separate_creation */
	T0* a59; /* ise_runtime_reference_field_feature */
	T0* a60; /* ise_runtime_set_reference_field_feature */
};

/* Struct for type DT_DATE_TIME */
struct S97 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* time_storage */
	T6 a2; /* date_storage */
};

/* Struct for type DS_HASH_SET [STRING_8] */
struct S99 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T0* a4; /* equality_tester */
	T6 a5; /* count */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* free_slot */
	T6 a9; /* last_position */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* hash_function */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
struct S100 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* dynamic_type_set_count */
	T1 a2; /* has_fatal_error */
	T0* a3; /* current_dynamic_system */
	T0* a4; /* feature_checker */
	T0* a5; /* current_dynamic_type */
	T0* a6; /* current_dynamic_feature */
	T0* a7; /* dynamic_type_sets */
	T0* a8; /* object_id_dynamic_type_set */
	T0* a9; /* constant_indexes */
	T1 a10; /* catcall_error_mode */
	T1 a11; /* catcall_warning_mode */
	T1 a12; /* no_debug */
	T1 a13; /* no_assertion */
	T1 a14; /* is_built */
	T0* a15; /* alive_conforming_descendants_per_type */
	T0* a16; /* type_checker */
	T0* a17; /* current_type */
	T0* a18; /* current_class */
	T0* a19; /* current_feature */
	T0* a20; /* current_feature_impl */
	T0* a21; /* current_class_impl */
	T0* a22; /* enclosing_inline_agents */
	T0* a23; /* unused_overloaded_procedures_list */
	T0* a24; /* unused_overloaded_queries_list */
	T0* a25; /* unused_overloaded_features_list */
	T0* a26; /* unused_call_infos */
	T0* a27; /* unused_contexts */
	T0* a28; /* current_context */
	T0* a29; /* current_target_type */
	T0* a30; /* current_object_test_types */
	T0* a31; /* current_object_test_scope */
	T0* a32; /* object_test_scope_builder */
	T0* a33; /* current_iteration_cursor_types */
	T0* a34; /* current_iteration_item_types */
	T0* a35; /* current_iteration_item_scope */
	T0* a36; /* current_inline_separate_argument_types */
	T0* a37; /* current_inline_separate_argument_scope */
	T0* a38; /* current_initialization_scope */
	T0* a39; /* current_attachment_scope */
	T0* a40; /* attachment_scope_builder */
	T0* a41; /* unused_attachment_scopes */
	T0* a42; /* assertions_by_feature */
	T0* a43; /* common_ancestor_type_list */
	T0* a44; /* note_term_list */
	T0* a45; /* vape_non_descendant_clients */
	T0* a46; /* vape_creation_clients */
	T0* a47; /* vape_client */
	T0* a48; /* unused_adapted_base_classes */
	T0* a49; /* adapted_base_class_checker */
	T0* a50; /* system_processor */
	T6 a51; /* current_index */
	T6 a52; /* result_index */
	T6 a53; /* attached_result_index */
	T6 a54; /* void_index */
	T1 a55; /* in_precursor */
	T1 a56; /* in_static_feature */
	T0* a57; /* supplier_handler */
	T1 a58; /* in_rescue */
	T0* a59; /* current_inline_agent */
	T0* a60; /* precursor_procedures */
	T0* a61; /* precursor_queries */
	T1 a62; /* in_precondition */
	T1 a63; /* in_invariant */
	T1 a64; /* in_postcondition */
	T1 a65; /* in_check_instruction */
};

/* Struct for type ET_CLASS_TYPE */
struct S102 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* named_base_class */
	T0* a4; /* actual_parameters */
	T1 a5; /* tuple_actual_parameters_unfolded_2 */
	T1 a6; /* tuple_actual_parameters_unfolded_1 */
};

/* Struct for type UT_VERSION_NUMBER */
struct S103 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type EXECUTION_ENVIRONMENT */
struct S105 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* return_code */
};

/* Struct for type UT_MESSAGE */
struct S106 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type RX_PCRE_REGULAR_EXPRESSION */
struct S107 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* match_count */
	T0* a2; /* subject */
	T0* a3; /* offset_vector */
	T6 a4; /* offset_vector_count */
	T6 a5; /* brastart_capacity */
	T0* a6; /* brastart_vector */
	T6 a7; /* brastart_lower */
	T6 a8; /* brastart_count */
	T6 a9; /* eptr_capacity */
	T0* a10; /* eptr_vector */
	T6 a11; /* eptr_lower */
	T6 a12; /* eptr_upper */
	T0* a13; /* byte_code */
	T0* a14; /* internal_start_bits */
	T0* a15; /* pattern_buffer */
	T6 a16; /* subexpression_count */
	T0* a17; /* pattern */
	T6 a18; /* pattern_count */
	T6 a19; /* pattern_position */
	T6 a20; /* code_index */
	T6 a21; /* maxbackrefs */
	T10 a22; /* optchanged */
	T7 a23; /* first_character */
	T7 a24; /* required_character */
	T6 a25; /* regexp_countlits */
	T0* a26; /* start_bits */
	T0* a27; /* error_message */
	T1 a28; /* is_anchored */
	T0* a29; /* character_case_mapping */
	T0* a30; /* word_set */
	T6 a31; /* subject_next_start */
	T6 a32; /* subject_start */
	T6 a33; /* subject_end */
	T6 a34; /* error_code */
	T6 a35; /* error_position */
	T1 a36; /* is_startline */
	T1 a37; /* is_caseless */
	T1 a38; /* is_multiline */
	T1 a39; /* is_dotall */
	T1 a40; /* is_extended */
	T1 a41; /* is_empty_allowed */
	T1 a42; /* is_dollar_endonly */
	T1 a43; /* is_bol */
	T1 a44; /* is_eol */
	T1 a45; /* is_greedy */
	T1 a46; /* is_strict */
	T1 a47; /* is_ichanged */
	T6 a48; /* first_matched_index */
	T6 a49; /* eptr */
	T6 a50; /* offset_top */
	T1 a51; /* is_matching_caseless */
	T1 a52; /* is_matching_multiline */
	T1 a53; /* is_matching_dotall */
};

/* Struct for type KL_STRING_ROUTINES */
struct S108 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ST_SPLITTER */
struct S109 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_escape_character */
	T2 a2; /* escape_character */
	T0* a3; /* separator_codes */
	T0* a4; /* separators */
};

/* Struct for type AP_ERROR */
struct S113 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_template */
	T0* a3; /* code */
};

/* Struct for type ET_C_GENERATOR */
struct S114 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* never_void_target_count */
	T6 a2; /* can_be_void_target_count */
	T1 a3; /* has_fatal_error */
	T0* a4; /* system_processor */
	T0* a5; /* current_dynamic_system */
	T0* a6; /* dynamic_types */
	T1 a7; /* short_names */
	T1 a8; /* split_mode */
	T6 a9; /* split_threshold */
	T1 a10; /* use_boehm_gc */
	T0* a11; /* system_name */
	T0* a12; /* current_file */
	T0* a13; /* header_file */
	T0* a14; /* current_type */
	T0* a15; /* current_feature */
	T0* a16; /* current_non_inlined_feature */
	T0* a17; /* extra_dynamic_type_sets */
	T0* a18; /* current_dynamic_type_sets */
	T0* a19; /* current_function_header_buffer */
	T0* a20; /* current_function_body_buffer */
	T0* a21; /* current_separate_function_header_buffer */
	T0* a22; /* current_separate_function_body_buffer */
	T0* a23; /* temp_variables */
	T0* a24; /* used_temp_variables */
	T0* a25; /* free_temp_variables */
	T0* a26; /* frozen_temp_variables */
	T0* a27; /* volatile_temp_variables */
	T0* a28; /* separate_temp_variables */
	T0* a29; /* used_separate_temp_variables */
	T0* a30; /* free_separate_temp_variables */
	T0* a31; /* frozen_separate_temp_variables */
	T0* a32; /* volatile_separate_temp_variables */
	T0* a33; /* unused_equality_expressions */
	T0* a34; /* unused_equality_types */
	T0* a35; /* unused_object_equality_types */
	T0* a36; /* unused_unqualified_call_expressions */
	T0* a37; /* unused_qualified_call_expressions */
	T0* a38; /* unused_actual_argument_lists */
	T0* a39; /* unused_result_expressions */
	T0* a40; /* unused_identifiers */
	T0* a41; /* conforming_types */
	T0* a42; /* non_conforming_types */
	T0* a43; /* equality_type_set */
	T0* a44; /* equality_common_types */
	T0* a45; /* equality_common_reference_types */
	T0* a46; /* unused_standalone_type_sets */
	T0* a47; /* operand_stack */
	T0* a48; /* call_operands */
	T0* a49; /* attachment_dynamic_type_ids */
	T0* a50; /* target_dynamic_type_ids */
	T0* a51; /* target_dynamic_types */
	T0* a52; /* standalone_type_sets */
	T0* a53; /* deep_twin_types */
	T0* a54; /* deep_equal_types */
	T0* a55; /* deep_feature_target_type_sets */
	T0* a56; /* current_object_tests */
	T0* a57; /* current_object_test_locals */
	T0* a58; /* current_iteration_cursors */
	T0* a59; /* current_inline_separate_arguments */
	T0* a60; /* current_equalities */
	T0* a61; /* current_agents */
	T0* a62; /* agent_open_operands */
	T0* a63; /* agent_closed_operands */
	T0* a64; /* agent_target */
	T0* a65; /* agent_arguments */
	T0* a66; /* agent_instruction */
	T0* a67; /* agent_expression */
	T0* a68; /* agent_inline_separate_argument */
	T0* a69; /* agent_controlled_target_instruction */
	T0* a70; /* agent_expression_assignment */
	T0* a71; /* agent_controlled_target_expression */
	T0* a72; /* agent_closed_operands_type */
	T0* a73; /* agent_manifest_tuple */
	T0* a74; /* separate_call_arguments */
	T0* a75; /* separate_call_instruction */
	T0* a76; /* separate_call_expression */
	T0* a77; /* separate_arguments */
	T0* a78; /* formal_arguments */
	T0* a79; /* manifest_array_types */
	T0* a80; /* big_manifest_array_types */
	T0* a81; /* manifest_tuple_types */
	T0* a82; /* once_features */
	T0* a83; /* once_per_process_counts */
	T0* a84; /* once_per_thread_counts */
	T0* a85; /* constant_features */
	T0* a86; /* inline_constants */
	T0* a87; /* dispose_procedures */
	T0* a88; /* dynamic_type_id_set_names */
	T0* a89; /* used_inlined_operands */
	T0* a90; /* unused_inlined_operands */
	T0* a91; /* used_call_contexts */
	T0* a92; /* unused_call_contexts */
	T6 a93; /* max_nested_inlining_count */
	T0* a94; /* inlined_void */
	T0* a95; /* inlined_integer */
	T0* a96; /* inlined_real */
	T0* a97; /* inlined_character */
	T0* a98; /* inlined_boolean */
	T0* a99; /* called_features */
	T0* a100; /* inlined_features */
	T0* a101; /* included_header_filenames */
	T0* a102; /* included_cpp_header_filenames */
	T0* a103; /* included_runtime_header_files */
	T0* a104; /* included_runtime_c_files */
	T0* a105; /* c_filenames */
	T1 a106; /* scoop_exceptions_stop_when_dirty */
	T1 a107; /* finalize_mode */
	T7 a108; /* c_filenames_counter_offset */
	T0* a109; /* locals_written_in_body */
	T0* a110; /* locals_written_in_rescue */
	T0* a111; /* locals_written */
	T0* a112; /* locals_read_in_body */
	T0* a113; /* locals_read_in_rescue */
	T0* a114; /* locals_read */
	T0* a115; /* volatile_locals */
	T0* a116; /* volatile_object_test_locals */
	T0* a117; /* volatile_iteration_cursors */
	T0* a118; /* volatile_inline_separate_arguments */
	T0* a119; /* external_c_regexp */
	T0* a120; /* external_c_macro_regexp */
	T0* a121; /* external_c_struct_regexp */
	T0* a122; /* external_c_inline_regexp */
	T0* a123; /* old_external_c_regexp */
	T0* a124; /* old_external_c_macro_regexp */
	T0* a125; /* old_external_c_struct_regexp */
	T0* a126; /* external_cpp_regexp */
	T0* a127; /* external_cpp_macro_regexp */
	T0* a128; /* external_cpp_struct_regexp */
	T0* a129; /* external_cpp_inline_regexp */
	T0* a130; /* external_dllwin_regexp */
	T0* a131; /* old_external_dllwin32_regexp */
	T1 a132; /* type_info_ancestors_used */
	T1 a133; /* type_info_attributes_used */
	T1 a134; /* type_info_attribute_name_used */
	T1 a135; /* type_info_attribute_type_id_used */
	T1 a136; /* type_info_attribute_offset_used */
	T1 a137; /* type_info_generator_used */
	T1 a138; /* type_info_name_used */
	T1 a139; /* type_info_generic_parameters_used */
	T1 a140; /* type_info_object_size_used */
	T0* a141; /* c_file */
	T6 a142; /* c_file_size */
	T6 a143; /* current_separate_call_count */
	T0* a144; /* cpp_file */
	T6 a145; /* cpp_file_size */
	T6 a146; /* indentation */
	T0* a147; /* call_target_type */
	T0* a148; /* assignment_target */
	T1 a149; /* in_operand */
	T1 a150; /* in_procedure_call_target */
	T0* a151; /* inlining_context */
	T1 a152; /* has_rescue */
	T1 a153; /* result_written */
	T1 a154; /* result_read */
	T0* a155; /* current_agent */
	T1 a156; /* call_target_check_void */
	T6 a157; /* nested_inlining_count */
	T1 a158; /* volatile_result */
	T1 a159; /* has_retry */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE] */
struct S116 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type KL_SHELL_COMMAND */
struct S117 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* exit_code */
	T0* a2; /* command */
	T6 a3; /* return_code */
	T1 a4; /* is_system_code */
};

/* Struct for type GECC */
struct S118 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* exit_code */
	T0* a2; /* error_handler */
	T0* a3; /* version_flag */
	T0* a4; /* script_filename */
	T0* a5; /* thread_option */
};

/* Struct for type KL_OPERATING_SYSTEM */
struct S119 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type VOID_TARGET */
struct S120 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type ROUTINE_FAILURE */
struct S122 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* routine_name */
	T0* a4; /* class_name */
	T0* a5; /* c_description */
	T0* a6; /* recipient_name */
	T0* a7; /* type_name */
};

/* Struct for type OLD_VIOLATION */
struct S124 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type NO_MORE_MEMORY */
struct S126 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T6 a3; /* internal_code */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type INVARIANT_VIOLATION */
struct S127 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T1 a3; /* is_entry */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type OPERATING_SYSTEM_SIGNAL_FAILURE */
struct S128 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T6 a3; /* signal_code */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type IO_FAILURE */
struct S129 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T6 a3; /* internal_code */
	T6 a4; /* error_code */
	T0* a5; /* c_description */
	T0* a6; /* recipient_name */
	T0* a7; /* type_name */
};

/* Struct for type OPERATING_SYSTEM_FAILURE */
struct S130 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T6 a3; /* error_code */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type COM_FAILURE */
struct S131 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T6 a3; /* hresult_code */
	T0* a4; /* exception_information */
	T6 a5; /* hresult */
	T0* a6; /* c_description */
	T0* a7; /* recipient_name */
	T0* a8; /* type_name */
};

/* Struct for type EIFFEL_RUNTIME_PANIC */
struct S132 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T6 a3; /* internal_code */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type PRECONDITION_VIOLATION */
struct S134 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type POSTCONDITION_VIOLATION */
struct S135 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type FLOATING_POINT_FAILURE */
struct S136 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type CHECK_VIOLATION */
struct S137 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type BAD_INSPECT_VALUE */
struct S138 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type VARIANT_VIOLATION */
struct S139 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type LOOP_INVARIANT_VIOLATION */
struct S140 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type RESCUE_FAILURE */
struct S141 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type RESUMPTION_FAILURE */
struct S142 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type CREATE_ON_DEFERRED */
struct S143 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type EXTERNAL_FAILURE */
struct S144 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type VOID_ASSIGNED_TO_EXPANDED */
struct S145 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
struct S146 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type MISMATCH_FAILURE */
struct S147 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type DEVELOPER_EXCEPTION */
struct S148 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type ADDRESS_APPLIED_TO_MELTED_FEATURE */
struct S149 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type SERIALIZATION_FAILURE */
struct S150 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type KL_WINDOWS_FILE_SYSTEM */
struct S151 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_UNIX_FILE_SYSTEM */
struct S152 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type PRIMES */
struct S153 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [INTEGER_32] */
struct S154 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 z2[1]; /* item */
};

/* Struct for type SPECIAL [BOOLEAN] */
struct S155 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T1 z2[1]; /* item */
};

/* Struct for type ARGUMENTS_32 */
struct S156 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type MUTEX */
struct S159 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* mutex_pointer */
	T14 a2; /* owner_thread_id */
};

/* Struct for type UT_ERROR_HANDLER */
struct S160 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
};

/* Struct for type KL_STDOUT_FILE */
struct S161 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type MANAGED_POINTER */
struct S162 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* item */
	T1 a2; /* is_shared */
	T6 a3; /* count */
};

/* Struct for type KL_LINKABLE [CHARACTER_8] */
struct S164 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type FILE_INFO */
struct S166 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* buffered_file_info */
	T1 a2; /* is_following_symlinks */
	T1 a3; /* exists */
	T0* a4; /* internal_file_name */
	T0* a5; /* internal_name_pointer */
};

/* Struct for type UC_UTF8_ROUTINES */
struct S167 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [STRING_8] */
struct S169 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* equality_tester */
};

/* Struct for type TUPLE [ET_UNIVERSE] */
struct S170 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_UNIVERSE]] */
struct S171 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE [ET_CLASS], BOOLEAN]] */
struct S172 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type ET_ADAPTED_LIBRARIES */
struct S173 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* libraries */
};

/* Struct for type ET_ADAPTED_DOTNET_ASSEMBLIES */
struct S174 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_IMPLICIT_TYPE_MARK */
struct S176 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* is_expanded_mark */
	T1 a2; /* is_separate_mark */
	T1 a3; /* is_attached_mark */
	T1 a4; /* is_reference_mark */
	T1 a5; /* is_detachable_mark */
	T1 a6; /* is_non_separate_mark */
};

/* Struct for type DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
struct S177 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* position */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* modulus */
	T6 a11; /* slots_position */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type ET_CLASS_NAME_TESTER */
struct S178 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENT */
struct S180 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* renames */
	T0* a3; /* exports */
	T0* a4; /* undefines */
	T0* a5; /* redefines */
	T0* a6; /* selects */
	T0* a7; /* end_keyword */
};

/* Struct for type ET_PARENT_LIST */
struct S181 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* inherit_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* clients_clause */
};

/* Struct for type ET_CLIENT_LIST */
struct S182 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_TUPLE_TYPE */
struct S183 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* actual_parameters */
	T0* a2; /* type_mark */
	T0* a3; /* named_base_class */
	T0* a4; /* tuple_keyword */
};

/* Struct for type ET_ACTUAL_PARAMETER_LIST */
struct S185 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type ET_BUILTIN_CONVERT_FEATURE */
struct S186 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* type */
};

/* Struct for type DS_HASH_SET [ET_UNIVERSE] */
struct S187 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type ET_MASTER_CLASS */
struct S188 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* processing_mutex */
	T0* a2; /* first_local_override_class */
	T0* a3; /* first_local_non_override_class */
	T0* a4; /* first_local_ignored_class */
	T0* a5; /* other_local_override_classes */
	T0* a6; /* other_local_non_override_classes */
	T0* a7; /* other_local_ignored_classes */
	T0* a8; /* first_local_hidden_class */
	T0* a9; /* other_local_hidden_classes */
	T0* a10; /* mapped_class */
	T0* a11; /* first_overriding_class */
	T0* a12; /* intrinsic_class */
	T0* a13; /* name */
	T0* a14; /* universe */
	T0* a15; /* status_mutex */
	T1 a16; /* unprotected_is_marked */
	T1 a17; /* is_modified */
	T0* a18; /* first_imported_class */
	T0* a19; /* other_imported_classes */
	T0* a20; /* other_overriding_classes */
};

/* Struct for type ET_CLIENT */
struct S189 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* named_base_class */
};

/* Struct for type ET_KEYWORD */
struct S191 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T0* a2; /* text */
	T6 a3; /* compressed_position */
};

/* Struct for type ET_ATTACHMENT_MARK_SEPARATE_KEYWORD */
struct S192 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* separateness_keyword */
	T0* a2; /* attachment_mark */
};

/* Struct for type ET_RENAME_LIST */
struct S193 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* rename_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_EXPORT_LIST */
struct S194 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* export_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_KEYWORD_FEATURE_NAME_LIST */
struct S195 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_NONE_GROUP */
struct S198 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* universe */
	T1 a3; /* use_obsolete_syntax */
	T0* a4; /* cached_absolute_pathname */
};

/* Struct for type ET_LIKE_CURRENT */
struct S199 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* like_keyword */
	T0* a3; /* current_keyword */
	T1 a4; /* is_controlled */
};

/* Struct for type ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
struct S201 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tuple_type */
};

/* Struct for type ET_LIBRARY */
struct S203 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_system */
	T0* a2; /* library */
	T0* a3; /* name */
	T0* a4; /* libraries */
	T0* a5; /* clusters */
	T0* a6; /* dotnet_assemblies */
	T0* a7; /* implicit_attachment_type_mark */
	T0* a8; /* master_classes */
	T0* a9; /* master_class_mutex */
	T0* a10; /* any_type */
	T0* a11; /* detachable_any_type */
	T0* a12; /* detachable_separate_any_type */
	T0* a13; /* any_parent */
	T0* a14; /* any_parents */
	T0* a15; /* any_clients */
	T0* a16; /* tuple_type */
	T0* a17; /* detachable_tuple_type */
	T0* a18; /* tuple_identity_type */
	T0* a19; /* unfolded_empty_tuple_actual_parameters */
	T0* a20; /* array_any_type */
	T0* a21; /* array_detachable_any_type */
	T0* a22; /* array_none_type */
	T0* a23; /* array_identity_type */
	T0* a24; /* boolean_type */
	T0* a25; /* character_type */
	T0* a26; /* character_8_type */
	T0* a27; /* character_8_convert_feature */
	T0* a28; /* character_32_type */
	T0* a29; /* character_32_convert_feature */
	T0* a30; /* double_type */
	T0* a31; /* exception_type */
	T0* a32; /* detachable_exception_type */
	T0* a33; /* exception_manager_type */
	T0* a34; /* function_identity_any_type */
	T0* a35; /* immutable_string_8_type */
	T0* a36; /* immutable_string_32_type */
	T0* a37; /* integer_type */
	T0* a38; /* integer_8_type */
	T0* a39; /* integer_8_convert_feature */
	T0* a40; /* integer_16_type */
	T0* a41; /* integer_16_convert_feature */
	T0* a42; /* integer_32_type */
	T0* a43; /* integer_32_convert_feature */
	T0* a44; /* integer_64_type */
	T0* a45; /* integer_64_convert_feature */
	T0* a46; /* ise_exception_manager_type */
	T0* a47; /* iterable_detachable_separate_any_type */
	T0* a48; /* natural_type */
	T0* a49; /* natural_8_type */
	T0* a50; /* natural_8_convert_feature */
	T0* a51; /* natural_16_type */
	T0* a52; /* natural_16_convert_feature */
	T0* a53; /* natural_32_type */
	T0* a54; /* natural_32_convert_feature */
	T0* a55; /* natural_64_type */
	T0* a56; /* natural_64_convert_feature */
	T0* a57; /* none_type */
	T0* a58; /* detachable_none_type */
	T0* a59; /* pointer_type */
	T0* a60; /* predicate_identity_type */
	T0* a61; /* procedure_identity_type */
	T0* a62; /* real_type */
	T0* a63; /* real_32_type */
	T0* a64; /* real_32_convert_feature */
	T0* a65; /* real_64_type */
	T0* a66; /* real_64_convert_feature */
	T0* a67; /* routine_identity_type */
	T0* a68; /* special_any_type */
	T0* a69; /* special_detachable_any_type */
	T0* a70; /* special_identity_type */
	T0* a71; /* string_type */
	T0* a72; /* detachable_string_type */
	T0* a73; /* string_8_type */
	T0* a74; /* detachable_string_8_type */
	T0* a75; /* string_8_convert_feature */
	T0* a76; /* string_32_type */
	T0* a77; /* string_32_convert_feature */
	T0* a78; /* system_object_type */
	T0* a79; /* system_object_parents */
	T0* a80; /* system_string_type */
	T0* a81; /* type_detachable_any_type */
	T0* a82; /* detachable_type_exception_type */
	T0* a83; /* type_detachable_exception_type */
	T0* a84; /* type_detachable_like_current_type */
	T0* a85; /* type_identity_type */
	T0* a86; /* typed_pointer_identity_type */
	T0* a87; /* wide_character_type */
	T1 a88; /* is_read_only */
	T1 a89; /* is_preparsed */
};

/* Struct for type TUPLE [ET_LIBRARY] */
struct S204 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_LIBRARY]] */
struct S205 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
struct S206 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_DOTNET_ASSEMBLY */
struct S207 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* referenced_assemblies */
	T0* a3; /* current_system */
	T0* a4; /* dotnet_assembly */
	T0* a5; /* name */
	T0* a6; /* implicit_attachment_type_mark */
	T0* a7; /* master_classes */
	T0* a8; /* master_class_mutex */
	T0* a9; /* any_type */
	T0* a10; /* detachable_any_type */
	T0* a11; /* detachable_separate_any_type */
	T0* a12; /* any_parent */
	T0* a13; /* any_parents */
	T0* a14; /* any_clients */
	T0* a15; /* tuple_type */
	T0* a16; /* detachable_tuple_type */
	T0* a17; /* tuple_identity_type */
	T0* a18; /* unfolded_empty_tuple_actual_parameters */
	T0* a19; /* array_any_type */
	T0* a20; /* array_detachable_any_type */
	T0* a21; /* array_none_type */
	T0* a22; /* array_identity_type */
	T0* a23; /* boolean_type */
	T0* a24; /* character_type */
	T0* a25; /* character_8_type */
	T0* a26; /* character_8_convert_feature */
	T0* a27; /* character_32_type */
	T0* a28; /* character_32_convert_feature */
	T0* a29; /* double_type */
	T0* a30; /* exception_type */
	T0* a31; /* detachable_exception_type */
	T0* a32; /* exception_manager_type */
	T0* a33; /* function_identity_any_type */
	T0* a34; /* immutable_string_8_type */
	T0* a35; /* immutable_string_32_type */
	T0* a36; /* integer_type */
	T0* a37; /* integer_8_type */
	T0* a38; /* integer_8_convert_feature */
	T0* a39; /* integer_16_type */
	T0* a40; /* integer_16_convert_feature */
	T0* a41; /* integer_32_type */
	T0* a42; /* integer_32_convert_feature */
	T0* a43; /* integer_64_type */
	T0* a44; /* integer_64_convert_feature */
	T0* a45; /* ise_exception_manager_type */
	T0* a46; /* iterable_detachable_separate_any_type */
	T0* a47; /* natural_type */
	T0* a48; /* natural_8_type */
	T0* a49; /* natural_8_convert_feature */
	T0* a50; /* natural_16_type */
	T0* a51; /* natural_16_convert_feature */
	T0* a52; /* natural_32_type */
	T0* a53; /* natural_32_convert_feature */
	T0* a54; /* natural_64_type */
	T0* a55; /* natural_64_convert_feature */
	T0* a56; /* none_type */
	T0* a57; /* detachable_none_type */
	T0* a58; /* pointer_type */
	T0* a59; /* predicate_identity_type */
	T0* a60; /* procedure_identity_type */
	T0* a61; /* real_type */
	T0* a62; /* real_32_type */
	T0* a63; /* real_32_convert_feature */
	T0* a64; /* real_64_type */
	T0* a65; /* real_64_convert_feature */
	T0* a66; /* routine_identity_type */
	T0* a67; /* special_any_type */
	T0* a68; /* special_detachable_any_type */
	T0* a69; /* special_identity_type */
	T0* a70; /* string_type */
	T0* a71; /* detachable_string_type */
	T0* a72; /* string_8_type */
	T0* a73; /* detachable_string_8_type */
	T0* a74; /* string_8_convert_feature */
	T0* a75; /* string_32_type */
	T0* a76; /* string_32_convert_feature */
	T0* a77; /* system_object_type */
	T0* a78; /* system_object_parents */
	T0* a79; /* system_string_type */
	T0* a80; /* type_detachable_any_type */
	T0* a81; /* detachable_type_exception_type */
	T0* a82; /* type_detachable_exception_type */
	T0* a83; /* type_detachable_like_current_type */
	T0* a84; /* type_identity_type */
	T0* a85; /* typed_pointer_identity_type */
	T0* a86; /* wide_character_type */
	T1 a87; /* is_read_only */
	T1 a88; /* is_preparsed */
};

/* Struct for type TUPLE [ET_DOTNET_ASSEMBLY] */
struct S208 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]] */
struct S209 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type ST_WORD_WRAPPER */
struct S210 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* new_line_indentation */
	T6 a2; /* broken_words */
	T6 a3; /* maximum_text_width */
};

/* Struct for type AP_DISPLAY_HELP_FLAG */
struct S212 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* description */
	T2 a2; /* short_form */
	T1 a3; /* has_short_form */
	T0* a4; /* long_form */
	T6 a5; /* occurrences */
	T1 a6; /* is_hidden */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
};

/* Struct for type DS_ARRAYED_LIST [AP_OPTION] */
struct S213 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T0* a3; /* equality_tester */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S214 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T6 a5; /* count */
};

/* Struct for type AP_ERROR_HANDLER */
struct S215 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type DS_LINKABLE [AP_OPTION] */
struct S216 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [AP_OPTION] */
struct S217 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST [detachable STRING_8] */
struct S218 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable STRING_8] */
struct S219 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [STRING_8] */
struct S220 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
	T0* a5; /* equality_tester */
};

/* Struct for type KL_STRING_EQUALITY_TESTER */
struct S221 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_EQUALITY_TESTER [STRING_8] */
struct S222 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST [BOOLEAN] */
struct S225 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type DS_LINKED_LIST [INTEGER_32] */
struct S228 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type KL_NULL_TEXT_OUTPUT_STREAM */
struct S229 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
};

/* Struct for type ET_EIFFEL_PREPARSER */
struct S231 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* eiffel_buffer */
	T0* a2; /* system_processor */
	T6 a3; /* last_text_count */
	T6 a4; /* last_literal_start */
	T0* a5; /* filename */
	T0* a6; /* group */
	T0* a7; /* verbatim_marker */
	T6 a8; /* verbatim_marker_count */
	T0* a9; /* verbatim_open_white_characters */
	T0* a10; /* verbatim_close_white_characters */
	T0* a11; /* yy_pushed_start_conditions */
	T0* a12; /* input_buffer */
	T0* a13; /* yy_state_stack */
	T6 a14; /* yy_start_state */
	T6 a15; /* yy_line */
	T6 a16; /* yy_column */
	T6 a17; /* yy_position */
	T6 a18; /* yy_start */
	T6 a19; /* yy_end */
	T6 a20; /* line */
	T6 a21; /* column */
	T6 a22; /* position */
	T0* a23; /* yy_nxt */
	T0* a24; /* yy_chk */
	T0* a25; /* yy_base */
	T0* a26; /* yy_def */
	T0* a27; /* yy_ec */
	T0* a28; /* yy_meta */
	T0* a29; /* yy_accept */
	T0* a30; /* yy_acclist */
	T0* a31; /* yy_content */
	T0* a32; /* yy_content_area */
	T0* a33; /* yy_unicode_content_area */
	T0* a34; /* last_classname */
	T1 a35; /* class_keyword_found */
	T6 a36; /* last_token */
	T1 a37; /* yy_more_flag */
	T6 a38; /* yy_more_len */
	T6 a39; /* yy_state_count */
	T6 a40; /* yy_last_accepting_state */
	T6 a41; /* yy_last_accepting_cpos */
	T6 a42; /* yy_lp */
	T6 a43; /* yy_looking_for_trail_begin */
	T6 a44; /* yy_full_match */
	T6 a45; /* yy_full_state */
	T6 a46; /* yy_full_lp */
	T1 a47; /* yy_rejected */
	T6 a48; /* last_literal_end */
	T6 a49; /* pushed_start_condition_count */
	T6 a50; /* ms_column */
	T6 a51; /* ms_line */
	T6 a52; /* last_break_end */
	T6 a53; /* last_comment_end */
	T3 a54; /* verbatim_opening_character */
};

/* Struct for type ET_MASTER_CLASS_CHECKER */
struct S232 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_PROVIDER_CHECKER */
struct S233 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
};

/* Struct for type ET_ANCESTOR_BUILDER */
struct S234 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_sorter */
	T0* a2; /* ancestors */
	T0* a3; /* conforming_ancestors */
	T0* a4; /* parent_checker */
	T0* a5; /* formal_parameter_checker */
	T0* a6; /* parent_context */
	T0* a7; /* current_class */
	T0* a8; /* system_processor */
};

/* Struct for type ET_FEATURE_FLATTENER */
struct S235 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* named_features */
	T0* a2; /* queries */
	T0* a3; /* procedures */
	T0* a4; /* aliased_features */
	T0* a5; /* clients_list */
	T0* a6; /* client_classes */
	T0* a7; /* feature_adaptation_resolver */
	T0* a8; /* dotnet_feature_adaptation_resolver */
	T0* a9; /* identifier_type_resolver */
	T0* a10; /* unfolded_tuple_actual_parameters_resolver */
	T0* a11; /* anchored_type_checker */
	T0* a12; /* signature_checker */
	T0* a13; /* parent_checker */
	T0* a14; /* formal_parameter_checker */
	T0* a15; /* builtin_feature_checker */
	T0* a16; /* precursor_checker */
	T0* a17; /* precursors */
	T0* a18; /* current_class */
	T0* a19; /* system_processor */
	T1 a20; /* has_signature_error */
};

/* Struct for type ET_INTERFACE_CHECKER */
struct S236 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* classes_to_be_processed */
	T0* a2; /* qualified_anchored_type_checker */
	T0* a3; /* unfolded_tuple_actual_parameters_resolver */
	T0* a4; /* old_name_rename_table */
	T0* a5; /* new_name_rename_table */
	T0* a6; /* new_alias_name_rename_table */
	T0* a7; /* current_class */
	T0* a8; /* system_processor */
};

/* Struct for type ET_IMPLEMENTATION_CHECKER */
struct S237 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_checker */
	T0* a2; /* named_features */
	T0* a3; /* feature_adaptation_resolver */
	T0* a4; /* system_processor */
	T0* a5; /* dotnet_feature_adaptation_resolver */
	T0* a6; /* signature_checker */
	T0* a7; /* parent_checker3 */
	T0* a8; /* precursor_procedures */
	T0* a9; /* precursor_queries */
	T0* a10; /* supplier_builder */
	T0* a11; /* current_class */
	T0* a12; /* no_suppliers */
};

/* Struct for type ET_AST_NULL_PROCESSOR */
struct S238 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [INTEGER_32] */
struct S239 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
struct S241 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* system_processor */
};

/* Struct for type YY_UNICODE_FILE_BUFFER */
struct S243 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_utf8_bom */
	T0* a2; /* content */
	T6 a3; /* index */
	T6 a4; /* line */
	T6 a5; /* column */
	T6 a6; /* position */
	T6 a7; /* count */
	T1 a8; /* filled */
	T1 a9; /* beginning_of_line */
	T6 a10; /* capacity */
	T1 a11; /* end_of_file */
	T1 a12; /* interactive */
	T6 a13; /* encoding */
	T0* a14; /* file */
	T6 a15; /* default_encoding */
};

/* Struct for type KL_STDIN_FILE */
struct S244 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_file */
	T0* a2; /* last_string */
	T0* a3; /* character_buffer */
	T2 a4; /* last_character */
};

/* Struct for type DS_ARRAYED_STACK [INTEGER_32] */
struct S245 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S246 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
struct S247 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_KEYWORD] */
struct S248 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_SYMBOL] */
struct S249 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
struct S250 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST] */
struct S251 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST] */
struct S252 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST] */
struct S253 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S254 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S255 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
struct S256 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_QUERY] */
struct S257 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_PROCEDURE] */
struct S258 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
struct S259 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [ET_NAMED_CLASS] */
struct S260 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type YY_BUFFER */
struct S261 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T6 a6; /* count */
	T1 a7; /* filled */
	T1 a8; /* beginning_of_line */
	T6 a9; /* capacity */
};

/* Struct for type ET_UNKNOWN_GROUP */
struct S262 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* use_obsolete_syntax */
	T0* a2; /* name */
	T0* a3; /* cached_absolute_pathname */
};

/* Struct for type KL_SPECIAL_ROUTINES [INTEGER_32] */
struct S263 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_UNICODE_CHARACTER_BUFFER */
struct S265 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* as_unicode_special */
	T2 a2; /* invalid_character */
	T0* a3; /* unicode_area */
	T0* a4; /* area */
	T3 a5; /* invalid_unicode_character */
};

/* Struct for type ET_CLIENTS */
struct S267 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_FEATURE_CLAUSE */
struct S268 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_keyword */
	T0* a2; /* clients */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ANY] */
struct S271 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ANY] */
struct S272 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
struct S273 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_KEYWORD] */
struct S274 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
struct S275 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_AGENT_KEYWORD */
struct S276 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
};

/* Struct for type SPECIAL [detachable ET_AGENT_KEYWORD] */
struct S277 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
struct S278 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PRECURSOR_KEYWORD */
struct S279 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
struct S280 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
struct S281 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SYMBOL */
struct S282 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* break */
	T2 a2; /* code */
	T6 a3; /* compressed_position */
};

/* Struct for type SPECIAL [detachable ET_SYMBOL] */
struct S283 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
struct S284 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_POSITION] */
struct S286 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
struct S287 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
struct S289 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
struct S290 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_BREAK] */
struct S292 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
struct S293 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CHARACTER_CONSTANT] */
struct S295 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
struct S296 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CURRENT */
struct S297 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* text */
	T6 a3; /* compressed_position */
	T2 a4; /* code */
};

/* Struct for type SPECIAL [detachable ET_CURRENT] */
struct S298 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
struct S299 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FREE_OPERATOR */
struct S300 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* hash_code */
	T6 a3; /* compressed_position */
	T0* a4; /* break */
	T0* a5; /* operator_name */
	T6 a6; /* seed */
};

/* Struct for type SPECIAL [detachable ET_FREE_OPERATOR] */
struct S301 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER] */
struct S302 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_IDENTIFIER */
struct S303 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* seed */
	T6 a3; /* index */
	T6 a4; /* hash_code */
	T2 a5; /* status_code */
	T6 a6; /* compressed_position */
};

/* Struct for type SPECIAL [detachable ET_IDENTIFIER] */
struct S304 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
struct S305 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INTEGER_CONSTANT] */
struct S307 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
struct S308 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_KEYWORD_OPERATOR */
struct S309 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [detachable ET_KEYWORD_OPERATOR] */
struct S310 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
struct S311 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING] */
struct S313 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
struct S314 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_REAL_CONSTANT] */
struct S316 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
struct S317 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_RESULT */
struct S318 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T0* a2; /* text */
	T6 a3; /* compressed_position */
	T6 a4; /* index */
};

/* Struct for type SPECIAL [detachable ET_RESULT] */
struct S319 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
struct S320 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_RETRY_INSTRUCTION */
struct S321 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
};

/* Struct for type SPECIAL [detachable ET_RETRY_INSTRUCTION] */
struct S322 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
struct S323 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SYMBOL_OPERATOR */
struct S324 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* break */
	T2 a2; /* code */
	T6 a3; /* compressed_position */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [detachable ET_SYMBOL_OPERATOR] */
struct S325 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_VOID] */
struct S326 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_VOID */
struct S327 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type SPECIAL [detachable ET_VOID] */
struct S328 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
struct S329 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SEMICOLON_SYMBOL */
struct S330 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
struct S331 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
struct S332 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_BRACKET_SYMBOL */
struct S333 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* break */
	T2 a2; /* code */
	T6 a3; /* compressed_position */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [detachable ET_BRACKET_SYMBOL] */
struct S334 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
struct S335 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_QUESTION_MARK_SYMBOL */
struct S336 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
};

/* Struct for type SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
struct S337 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
struct S338 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ACROSS_EXPRESSION */
struct S339 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item_name */
	T0* a2; /* as_keyword */
	T0* a3; /* unfolded_cursor_name */
	T6 a4; /* index */
	T0* a5; /* across_keyword */
	T0* a6; /* iterable_expression */
	T0* a7; /* until_conditional */
	T0* a8; /* iteration_conditional */
	T0* a9; /* end_keyword */
	T1 a10; /* is_all */
	T1 a11; /* has_cursor_name */
	T0* a12; /* invariant_part */
	T0* a13; /* variant_part */
	T0* a14; /* new_cursor_expression */
	T0* a15; /* cursor_item_expression */
	T0* a16; /* cursor_after_expression */
	T0* a17; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_ACROSS_EXPRESSION] */
struct S340 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
struct S341 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ACROSS_INSTRUCTION */
struct S342 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item_name */
	T0* a2; /* as_keyword */
	T0* a3; /* unfolded_cursor_name */
	T0* a4; /* across_keyword */
	T0* a5; /* iterable_expression */
	T0* a6; /* from_compound */
	T0* a7; /* until_conditional */
	T0* a8; /* loop_compound */
	T0* a9; /* end_keyword */
	T1 a10; /* has_cursor_name */
	T0* a11; /* invariant_part */
	T0* a12; /* variant_part */
	T0* a13; /* new_cursor_expression */
	T0* a14; /* cursor_item_expression */
	T0* a15; /* cursor_after_expression */
	T0* a16; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
struct S343 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S344 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ACTUAL_ARGUMENT_LIST */
struct S345 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_symbol */
	T0* a4; /* right_symbol */
};

/* Struct for type SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S346 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM] */
struct S347 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM] */
struct S348 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S349 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S350 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S351 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S353 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S354 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S356 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S357 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_AGENT_ARGUMENT_OPERAND_LIST */
struct S358 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S359 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
struct S360 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_AGENT_TARGET] */
struct S362 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
struct S363 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ALIAS_NAME */
struct S364 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* alias_keyword */
	T0* a2; /* alias_string */
	T2 a3; /* code */
	T0* a4; /* convert_keyword */
	T6 a5; /* seed */
};

/* Struct for type SPECIAL [detachable ET_ALIAS_NAME] */
struct S365 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST] */
struct S366 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ALIAS_NAME_LIST */
struct S367 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_ALIAS_NAME_LIST] */
struct S368 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
struct S369 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ASSIGNER] */
struct S371 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
struct S372 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_BRACKET_EXPRESSION */
struct S373 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* target */
	T0* a3; /* name */
	T0* a4; /* arguments */
};

/* Struct for type SPECIAL [detachable ET_BRACKET_EXPRESSION] */
struct S374 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
struct S375 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CALL_AGENT */
struct S376 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* target */
	T0* a6; /* implicit_result */
};

/* Struct for type SPECIAL [detachable ET_CALL_AGENT] */
struct S377 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S378 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_QUALIFIED_CALL_EXPRESSION */
struct S379 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T6 a2; /* index */
	T0* a3; /* arguments */
	T0* a4; /* qualified_name */
	T0* a5; /* parenthesis_call */
};

/* Struct for type SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S380 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
struct S381 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CHECK_INSTRUCTION */
struct S382 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* check_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_CHECK_INSTRUCTION] */
struct S383 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
struct S384 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CHOICE] */
struct S386 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
struct S387 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CHOICE_CONSTANT] */
struct S389 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
struct S390 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CHOICE_ITEM] */
struct S392 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
struct S393 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CHOICE_LIST */
struct S394 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* when_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CHOICE_LIST] */
struct S395 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
struct S396 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CLASS] */
struct S397 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
struct S398 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CLIENT_ITEM] */
struct S399 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
struct S400 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CLIENTS] */
struct S401 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
struct S402 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_COMPOUND */
struct S403 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_COMPOUND] */
struct S404 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
struct S405 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONDITIONAL] */
struct S407 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
struct S408 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONSTANT] */
struct S410 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S411 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S413 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S414 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
struct S415 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S416 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
struct S417 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CONSTRAINT_CREATOR */
struct S418 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* create_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
struct S419 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST] */
struct S420 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CONSTRAINT_RENAME_LIST */
struct S421 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* end_keyword */
	T0* a2; /* rename_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST] */
struct S422 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
struct S423 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_TYPE] */
struct S425 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
struct S426 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE] */
struct S428 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
struct S429 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
struct S431 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
struct S432 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CONVERT_FEATURE_LIST */
struct S433 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* convert_keyword */
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
struct S434 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
struct S435 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CREATE_EXPRESSION */
struct S436 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* creation_call */
	T0* a3; /* creation_region */
	T0* a4; /* internal_separate_target */
	T0* a5; /* default_create_name */
	T0* a6; /* creation_type */
	T0* a7; /* create_keyword */
};

/* Struct for type SPECIAL [detachable ET_CREATE_EXPRESSION] */
struct S437 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION] */
struct S438 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CREATION_REGION */
struct S439 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_name */
	T0* a2; /* left_symbol */
	T0* a3; /* right_symbol */
};

/* Struct for type SPECIAL [detachable ET_CREATION_REGION] */
struct S440 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
struct S441 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CREATOR] */
struct S442 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
struct S443 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CREATOR_LIST] */
struct S444 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
struct S445 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_DEBUG_INSTRUCTION */
struct S446 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* keys */
	T0* a2; /* compound */
	T0* a3; /* end_keyword */
};

/* Struct for type SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
struct S447 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
struct S448 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_EXPRESSION */
struct S449 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_keyword */
	T0* a3; /* then_expression */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
struct S450 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
struct S451 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_EXPRESSION_LIST */
struct S452 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
struct S453 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
struct S454 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_PART */
struct S455 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_PART] */
struct S456 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
struct S457 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_PART_LIST */
struct S458 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_PART_LIST] */
struct S459 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
struct S460 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXPORT] */
struct S462 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
struct S463 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXPORT_LIST] */
struct S464 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
struct S465 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXPRESSION] */
struct S467 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
struct S468 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXPRESSION_ITEM] */
struct S470 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
struct S471 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
struct S473 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
struct S474 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXTERNAL_ALIAS] */
struct S476 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
struct S477 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FEATURE_CLAUSE] */
struct S478 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
struct S479 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FEATURE_CLAUSE_LIST */
struct S480 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
struct S481 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
struct S482 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FEATURE_EXPORT */
struct S483 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clients_clause */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_EXPORT] */
struct S484 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
struct S485 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FEATURE_NAME] */
struct S486 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
struct S487 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
struct S489 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
struct S490 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FORMAL_ARGUMENT */
struct S491 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T6 a3; /* index */
	T6 a4; /* attached_index */
	T1 a5; /* is_used */
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT] */
struct S492 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S493 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S495 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S496 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FORMAL_ARGUMENT_LIST */
struct S497 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S498 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
struct S499 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FORMAL_PARAMETER */
struct S500 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* implementation_class */
	T0* a4; /* type_mark */
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER] */
struct S501 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S502 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S504 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
struct S505 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FORMAL_PARAMETER_LIST */
struct S506 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* right_bracket */
	T0* a4; /* left_bracket */
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
struct S507 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
struct S508 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_IF_EXPRESSION */
struct S509 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* conditional */
	T0* a3; /* then_keyword */
	T0* a4; /* then_expression */
	T0* a5; /* else_keyword */
	T0* a6; /* else_expression */
	T0* a7; /* end_keyword */
	T0* a8; /* elseif_parts */
};

/* Struct for type SPECIAL [detachable ET_IF_EXPRESSION] */
struct S510 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
struct S511 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_IF_INSTRUCTION */
struct S512 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
	T0* a3; /* end_keyword */
	T0* a4; /* elseif_parts */
	T0* a5; /* else_compound */
};

/* Struct for type SPECIAL [detachable ET_IF_INSTRUCTION] */
struct S513 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
struct S514 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INLINE_AGENT] */
struct S516 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT] */
struct S517 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INLINE_SEPARATE_ARGUMENT */
struct S518 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* expression */
	T0* a2; /* as_keyword */
	T0* a3; /* name */
};

/* Struct for type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT] */
struct S519 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
struct S520 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
struct S522 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
struct S523 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INLINE_SEPARATE_ARGUMENTS */
struct S524 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* separate_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
struct S525 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
struct S526 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INLINE_SEPARATE_INSTRUCTION */
struct S527 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T0* a2; /* compound */
	T0* a3; /* end_keyword */
};

/* Struct for type SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
struct S528 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION] */
struct S529 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INSPECT_EXPRESSION */
struct S530 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* conditional */
	T0* a3; /* when_parts */
	T0* a4; /* end_keyword */
	T0* a5; /* else_part */
};

/* Struct for type SPECIAL [detachable ET_INSPECT_EXPRESSION] */
struct S531 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
struct S532 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INSPECT_INSTRUCTION */
struct S533 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* when_parts */
	T0* a3; /* end_keyword */
	T0* a4; /* else_compound */
};

/* Struct for type SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
struct S534 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
struct S535 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INSTRUCTION] */
struct S537 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
struct S538 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INVARIANTS */
struct S539 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_class */
	T0* a2; /* invariant_keyword */
	T0* a3; /* storage */
	T6 a4; /* count */
	T0* a5; /* object_tests */
	T0* a6; /* iteration_components */
	T0* a7; /* inline_separate_arguments */
	T1 a8; /* has_validity_error */
	T1 a9; /* validity_checked */
};

/* Struct for type SPECIAL [detachable ET_INVARIANTS] */
struct S540 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S541 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S542 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
struct S543 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_LIKE_TYPE] */
struct S545 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
struct S546 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LOCAL_VARIABLE */
struct S547 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T6 a3; /* index */
	T6 a4; /* attached_index */
	T1 a5; /* is_used */
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE] */
struct S548 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S549 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S551 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
struct S552 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LOCAL_VARIABLE_LIST */
struct S553 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* local_keyword */
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
struct S554 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
struct S555 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LOOP_INVARIANTS */
struct S556 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* invariant_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_LOOP_INVARIANTS] */
struct S557 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
struct S558 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_MANIFEST_ARRAY */
struct S559 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left_symbol */
	T0* a3; /* right_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
	T0* a6; /* cast_type */
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_ARRAY] */
struct S560 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
struct S561 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
struct S563 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
struct S564 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_MANIFEST_STRING_LIST */
struct S565 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
struct S566 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
struct S567 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_MANIFEST_TUPLE */
struct S568 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_symbol */
	T0* a4; /* right_symbol */
	T6 a5; /* index */
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_TUPLE] */
struct S569 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST] */
struct S570 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_NOTE_LIST */
struct S571 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* note_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_NOTE_LIST] */
struct S572 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM] */
struct S573 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_NOTE_ITEM] */
struct S575 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM] */
struct S576 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_NOTE_TERM] */
struct S578 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM] */
struct S579 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_NOTE_TERM_ITEM] */
struct S581 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST] */
struct S582 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_NOTE_TERM_LIST */
struct S583 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_NOTE_TERM_LIST] */
struct S584 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
struct S585 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_OBSOLETE] */
struct S587 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S588 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENTHESIZED_EXPRESSION */
struct S589 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S590 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
struct S591 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PARENT] */
struct S592 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
struct S593 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENT_CLAUSE_LIST */
struct S594 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
struct S595 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
struct S596 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PARENT_ITEM] */
struct S597 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
struct S598 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PARENT_LIST] */
struct S599 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
struct S600 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_POSTCONDITIONS */
struct S601 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* ensure_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* then_keyword */
	T1 a5; /* validity_checked */
	T1 a6; /* has_validity_error */
};

/* Struct for type SPECIAL [detachable ET_POSTCONDITIONS] */
struct S602 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
struct S603 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PRECONDITIONS */
struct S604 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* require_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* else_keyword */
	T1 a5; /* validity_checked */
	T1 a6; /* has_validity_error */
};

/* Struct for type SPECIAL [detachable ET_PRECONDITIONS] */
struct S605 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
struct S606 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PROCEDURE] */
struct S608 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S609 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S611 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION] */
struct S612 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_QUANTIFIER_EXPRESSION */
struct S613 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item_name */
	T0* a2; /* unfolded_cursor_name */
	T6 a3; /* index */
	T0* a4; /* quantifier_symbol */
	T0* a5; /* colon_symbol */
	T0* a6; /* iterable_expression */
	T0* a7; /* bar_symbol */
	T0* a8; /* iteration_expression */
	T1 a9; /* is_all */
	T0* a10; /* new_cursor_expression */
	T0* a11; /* cursor_item_expression */
	T0* a12; /* cursor_after_expression */
	T0* a13; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_QUANTIFIER_EXPRESSION] */
struct S614 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
struct S615 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_QUERY] */
struct S617 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
struct S618 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_RENAME_ITEM] */
struct S620 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
struct S621 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_RENAME_LIST] */
struct S622 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION] */
struct S623 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_REPEAT_INSTRUCTION */
struct S624 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item_name */
	T0* a2; /* unfolded_cursor_name */
	T0* a3; /* open_repeat_symbol */
	T0* a4; /* colon_symbol */
	T0* a5; /* iterable_expression */
	T0* a6; /* bar_symbol */
	T0* a7; /* loop_compound */
	T0* a8; /* close_repeat_symbol */
	T0* a9; /* new_cursor_expression */
	T0* a10; /* cursor_item_expression */
	T0* a11; /* cursor_after_expression */
	T0* a12; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_REPEAT_INSTRUCTION] */
struct S625 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
struct S626 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_STATIC_CALL_EXPRESSION */
struct S627 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* static_type */
	T0* a3; /* feature_keyword */
	T0* a4; /* qualified_name */
	T0* a5; /* arguments */
	T0* a6; /* parenthesis_call */
};

/* Struct for type SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
struct S628 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
struct S629 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_STRIP_EXPRESSION */
struct S630 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* strip_keyword */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
	T6 a5; /* count */
	T0* a6; /* storage */
};

/* Struct for type SPECIAL [detachable ET_STRIP_EXPRESSION] */
struct S631 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
struct S632 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE] */
struct S633 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT] */
struct S634 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE_CONSTRAINT] */
struct S636 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM] */
struct S637 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM] */
struct S639 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST] */
struct S640 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_TYPE_CONSTRAINT_LIST */
struct S641 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST] */
struct S642 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
struct S643 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE_ITEM] */
struct S645 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
struct S646 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE_LIST] */
struct S648 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
struct S649 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_VARIANT */
struct S650 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* variant_keyword */
	T0* a2; /* tag */
	T0* a3; /* expression */
};

/* Struct for type SPECIAL [detachable ET_VARIANT] */
struct S651 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION] */
struct S652 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_WHEN_EXPRESSION */
struct S653 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* choices */
	T0* a2; /* then_keyword */
	T0* a3; /* then_expression */
};

/* Struct for type SPECIAL [detachable ET_WHEN_EXPRESSION] */
struct S654 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST] */
struct S655 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_WHEN_EXPRESSION_LIST */
struct S656 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_WHEN_EXPRESSION_LIST] */
struct S657 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
struct S658 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_WHEN_PART */
struct S659 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* choices */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_WHEN_PART] */
struct S660 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
struct S661 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_WHEN_PART_LIST */
struct S662 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_WHEN_PART_LIST] */
struct S663 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
struct S664 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_WRITABLE] */
struct S666 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_OBJECT_TEST_LIST */
struct S668 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_ITERATION_COMPONENT_LIST */
struct S669 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_INLINE_SEPARATE_ARGUMENT_LIST */
struct S670 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_C3_CHARACTER_CONSTANT */
struct S671 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* literal */
	T3 a3; /* value */
	T1 a4; /* has_invalid_code */
	T0* a5; /* cast_type */
	T6 a6; /* compressed_position */
	T0* a7; /* type */
};

/* Struct for type ET_REGULAR_MANIFEST_STRING */
struct S672 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T6 a3; /* compressed_position */
	T0* a4; /* cast_type */
	T0* a5; /* type */
};

/* Struct for type ET_SPECIAL_MANIFEST_STRING */
struct S673 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T1 a6; /* has_invalid_code */
	T0* a7; /* type */
};

/* Struct for type ET_VERBATIM_STRING */
struct S674 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* marker */
	T0* a7; /* open_white_characters */
	T0* a8; /* close_white_characters */
	T1 a9; /* is_left_aligned */
	T0* a10; /* type */
};

/* Struct for type ET_REGULAR_INTEGER_CONSTANT */
struct S675 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* literal */
	T11 a3; /* value */
	T1 a4; /* has_overflow */
	T6 a5; /* compressed_position */
	T0* a6; /* sign */
	T0* a7; /* cast_type */
	T0* a8; /* type */
};

/* Struct for type ET_UNDERSCORED_INTEGER_CONSTANT */
struct S676 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* literal */
	T11 a4; /* value */
	T1 a5; /* has_overflow */
	T0* a6; /* cast_type */
	T6 a7; /* compressed_position */
	T0* a8; /* type */
};

/* Struct for type ET_HEXADECIMAL_INTEGER_CONSTANT */
struct S677 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* literal */
	T11 a4; /* value */
	T1 a5; /* has_overflow */
	T0* a6; /* cast_type */
	T6 a7; /* compressed_position */
	T0* a8; /* type */
};

/* Struct for type ET_OCTAL_INTEGER_CONSTANT */
struct S678 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* literal */
	T11 a4; /* value */
	T1 a5; /* has_overflow */
	T0* a6; /* cast_type */
	T6 a7; /* compressed_position */
	T0* a8; /* type */
};

/* Struct for type ET_BINARY_INTEGER_CONSTANT */
struct S679 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* literal */
	T11 a4; /* value */
	T1 a5; /* has_overflow */
	T0* a6; /* cast_type */
	T6 a7; /* compressed_position */
	T0* a8; /* type */
};

/* Struct for type ET_REGULAR_REAL_CONSTANT */
struct S680 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* literal */
	T6 a3; /* compressed_position */
	T0* a4; /* sign */
	T0* a5; /* cast_type */
	T0* a6; /* type */
};

/* Struct for type ET_UNDERSCORED_REAL_CONSTANT */
struct S681 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* literal */
	T0* a4; /* cast_type */
	T6 a5; /* compressed_position */
	T0* a6; /* type */
};

/* Struct for type ET_TRUE_CONSTANT */
struct S683 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T0* a2; /* text */
	T6 a3; /* compressed_position */
	T6 a4; /* index */
};

/* Struct for type ET_FALSE_CONSTANT */
struct S684 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_C1_CHARACTER_CONSTANT */
struct S685 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T3 a2; /* value */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* type */
};

/* Struct for type ET_C2_CHARACTER_CONSTANT */
struct S686 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T3 a2; /* value */
	T6 a3; /* compressed_position */
	T0* a4; /* cast_type */
	T0* a5; /* type */
};

/* Struct for type ET_TAGGED_NOTE */
struct S688 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tag */
	T0* a2; /* terms */
};

/* Struct for type ET_NOTE */
struct S689 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* terms */
};

/* Struct for type ET_CUSTOM_ATTRIBUTE */
struct S690 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* creation_expression */
	T0* a2; /* settings */
	T0* a3; /* end_keyword */
};

/* Struct for type ET_CONSTRAINED_FORMAL_PARAMETER */
struct S691 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arrow_symbol */
	T0* a2; /* constraint */
	T0* a3; /* creation_procedures */
	T0* a4; /* constraint_base_types */
	T0* a5; /* implementation_class */
	T0* a6; /* type_mark */
	T6 a7; /* index */
	T0* a8; /* name */
	T0* a9; /* recursive_formal_constraints */
};

/* Struct for type ET_TYPE_RENAME_CONSTRAINT */
struct S692 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* renames */
};

/* Struct for type ET_CONSTRAINT_NAMED_TYPE */
struct S693 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
};

/* Struct for type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
struct S694 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* colon */
	T0* a3; /* type */
};

/* Struct for type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
struct S695 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* comma */
	T0* a3; /* type */
};

/* Struct for type ET_RENAME */
struct S696 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* old_name */
	T0* a2; /* as_keyword */
	T0* a3; /* new_name */
};

/* Struct for type ET_ALL_EXPORT */
struct S697 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clients_clause */
	T0* a2; /* all_keyword */
};

/* Struct for type ET_CONVERT_FUNCTION */
struct S699 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* colon */
};

/* Struct for type ET_CONVERT_PROCEDURE */
struct S700 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type ET_ATTRIBUTE */
struct S702 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* implementation_class */
	T0* a3; /* assigner */
	T0* a4; /* clients */
	T0* a5; /* semicolon */
	T0* a6; /* feature_clause */
	T0* a7; /* first_note */
	T0* a8; /* object_tests */
	T0* a9; /* iteration_components */
	T0* a10; /* inline_separate_arguments */
	T0* a11; /* extended_name */
	T6 a12; /* hash_code */
	T0* a13; /* implementation_feature */
	T0* a14; /* frozen_keyword */
	T0* a15; /* synonym */
	T6 a16; /* first_seed */
	T0* a17; /* other_seeds */
	T0* a18; /* first_precursor */
	T0* a19; /* other_precursors */
	T1 a20; /* validity_checked */
	T1 a21; /* has_validity_error */
	T6 a22; /* id */
	T6 a23; /* version */
};

/* Struct for type ET_EXTENDED_ATTRIBUTE */
struct S703 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* implementation_class */
	T0* a3; /* assigner */
	T0* a4; /* obsolete_message */
	T0* a5; /* preconditions */
	T0* a6; /* locals */
	T0* a7; /* compound */
	T0* a8; /* postconditions */
	T0* a9; /* rescue_clause */
	T0* a10; /* clients */
	T0* a11; /* end_keyword */
	T0* a12; /* semicolon */
	T0* a13; /* feature_clause */
	T0* a14; /* first_note */
	T0* a15; /* object_tests */
	T0* a16; /* iteration_components */
	T0* a17; /* inline_separate_arguments */
	T0* a18; /* extended_name */
	T6 a19; /* hash_code */
	T0* a20; /* implementation_feature */
	T0* a21; /* frozen_keyword */
	T0* a22; /* synonym */
	T6 a23; /* first_seed */
	T0* a24; /* other_seeds */
	T0* a25; /* first_precursor */
	T0* a26; /* other_precursors */
	T1 a27; /* validity_checked */
	T1 a28; /* has_validity_error */
	T6 a29; /* id */
	T6 a30; /* version */
};

/* Struct for type ET_CONSTANT_ATTRIBUTE */
struct S704 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* constant */
	T0* a3; /* implementation_class */
	T0* a4; /* assigner */
	T0* a5; /* clients */
	T0* a6; /* is_keyword */
	T0* a7; /* semicolon */
	T0* a8; /* feature_clause */
	T0* a9; /* first_note */
	T0* a10; /* object_tests */
	T0* a11; /* iteration_components */
	T0* a12; /* inline_separate_arguments */
	T0* a13; /* extended_name */
	T6 a14; /* hash_code */
	T0* a15; /* implementation_feature */
	T0* a16; /* frozen_keyword */
	T0* a17; /* synonym */
	T6 a18; /* first_seed */
	T0* a19; /* other_seeds */
	T0* a20; /* first_precursor */
	T0* a21; /* other_precursors */
	T1 a22; /* validity_checked */
	T1 a23; /* has_validity_error */
	T6 a24; /* id */
	T6 a25; /* version */
};

/* Struct for type ET_UNIQUE_ATTRIBUTE */
struct S705 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* implementation_class */
	T0* a3; /* assigner */
	T0* a4; /* clients */
	T0* a5; /* is_keyword */
	T0* a6; /* unique_keyword */
	T0* a7; /* semicolon */
	T0* a8; /* feature_clause */
	T0* a9; /* first_note */
	T0* a10; /* object_tests */
	T0* a11; /* iteration_components */
	T0* a12; /* inline_separate_arguments */
	T0* a13; /* constant */
	T0* a14; /* extended_name */
	T6 a15; /* hash_code */
	T0* a16; /* implementation_feature */
	T0* a17; /* frozen_keyword */
	T0* a18; /* synonym */
	T6 a19; /* id */
	T6 a20; /* first_seed */
	T0* a21; /* other_seeds */
	T0* a22; /* first_precursor */
	T0* a23; /* other_precursors */
	T1 a24; /* validity_checked */
	T1 a25; /* has_validity_error */
	T6 a26; /* version */
};

/* Struct for type ET_DO_FUNCTION */
struct S706 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T0* a2; /* declared_type */
	T0* a3; /* implementation_class */
	T0* a4; /* assigner */
	T0* a5; /* obsolete_message */
	T0* a6; /* preconditions */
	T0* a7; /* locals */
	T0* a8; /* compound */
	T0* a9; /* postconditions */
	T0* a10; /* rescue_clause */
	T0* a11; /* clients */
	T0* a12; /* is_keyword */
	T0* a13; /* end_keyword */
	T0* a14; /* semicolon */
	T0* a15; /* feature_clause */
	T0* a16; /* first_note */
	T0* a17; /* object_tests */
	T0* a18; /* iteration_components */
	T0* a19; /* inline_separate_arguments */
	T0* a20; /* extended_name */
	T6 a21; /* hash_code */
	T0* a22; /* implementation_feature */
	T0* a23; /* frozen_keyword */
	T0* a24; /* synonym */
	T6 a25; /* first_seed */
	T0* a26; /* other_seeds */
	T0* a27; /* first_precursor */
	T0* a28; /* other_precursors */
	T1 a29; /* validity_checked */
	T1 a30; /* has_validity_error */
	T6 a31; /* id */
	T6 a32; /* version */
};

/* Struct for type ET_ONCE_FUNCTION */
struct S707 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T0* a2; /* declared_type */
	T0* a3; /* implementation_class */
	T0* a4; /* assigner */
	T0* a5; /* obsolete_message */
	T0* a6; /* preconditions */
	T0* a7; /* locals */
	T0* a8; /* compound */
	T0* a9; /* postconditions */
	T0* a10; /* rescue_clause */
	T0* a11; /* clients */
	T0* a12; /* is_keyword */
	T0* a13; /* end_keyword */
	T0* a14; /* semicolon */
	T0* a15; /* feature_clause */
	T0* a16; /* first_note */
	T0* a17; /* object_tests */
	T0* a18; /* iteration_components */
	T0* a19; /* inline_separate_arguments */
	T0* a20; /* extended_name */
	T6 a21; /* hash_code */
	T0* a22; /* implementation_feature */
	T0* a23; /* frozen_keyword */
	T0* a24; /* keys */
	T0* a25; /* synonym */
	T6 a26; /* first_seed */
	T0* a27; /* other_seeds */
	T0* a28; /* first_precursor */
	T0* a29; /* other_precursors */
	T1 a30; /* validity_checked */
	T1 a31; /* has_validity_error */
	T6 a32; /* id */
	T6 a33; /* version */
};

/* Struct for type ET_DEFERRED_FUNCTION */
struct S708 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T0* a2; /* declared_type */
	T0* a3; /* implementation_class */
	T0* a4; /* assigner */
	T0* a5; /* obsolete_message */
	T0* a6; /* preconditions */
	T0* a7; /* postconditions */
	T0* a8; /* clients */
	T0* a9; /* is_keyword */
	T0* a10; /* deferred_keyword */
	T0* a11; /* end_keyword */
	T0* a12; /* semicolon */
	T0* a13; /* feature_clause */
	T0* a14; /* first_note */
	T0* a15; /* object_tests */
	T0* a16; /* iteration_components */
	T0* a17; /* inline_separate_arguments */
	T0* a18; /* extended_name */
	T6 a19; /* hash_code */
	T0* a20; /* implementation_feature */
	T0* a21; /* frozen_keyword */
	T0* a22; /* synonym */
	T6 a23; /* first_seed */
	T0* a24; /* other_seeds */
	T0* a25; /* first_precursor */
	T0* a26; /* other_precursors */
	T1 a27; /* validity_checked */
	T1 a28; /* has_validity_error */
	T6 a29; /* id */
	T6 a30; /* version */
};

/* Struct for type ET_EXTERNAL_FUNCTION */
struct S710 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T0* a2; /* declared_type */
	T0* a3; /* language */
	T0* a4; /* implementation_class */
	T0* a5; /* assigner */
	T0* a6; /* obsolete_message */
	T0* a7; /* preconditions */
	T0* a8; /* postconditions */
	T0* a9; /* alias_clause */
	T0* a10; /* clients */
	T0* a11; /* is_keyword */
	T0* a12; /* end_keyword */
	T0* a13; /* semicolon */
	T0* a14; /* feature_clause */
	T0* a15; /* first_note */
	T0* a16; /* object_tests */
	T0* a17; /* iteration_components */
	T0* a18; /* inline_separate_arguments */
	T8 a19; /* builtin_class_code */
	T0* a20; /* extended_name */
	T6 a21; /* hash_code */
	T0* a22; /* implementation_feature */
	T8 a23; /* builtin_feature_code */
	T0* a24; /* frozen_keyword */
	T0* a25; /* synonym */
	T6 a26; /* first_seed */
	T0* a27; /* other_seeds */
	T0* a28; /* first_precursor */
	T0* a29; /* other_precursors */
	T1 a30; /* validity_checked */
	T1 a31; /* has_validity_error */
	T6 a32; /* id */
	T6 a33; /* version */
};

/* Struct for type ET_DO_PROCEDURE */
struct S711 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a3; /* arguments */
	T0* a4; /* end_keyword */
	T0* a5; /* clients */
	T0* a6; /* implementation_class */
	T0* a7; /* implementation_feature */
	T0* a8; /* iteration_components */
	T0* a9; /* rescue_clause */
	T0* a10; /* locals */
	T0* a11; /* object_tests */
	T0* a12; /* compound */
	T6 a13; /* first_seed */
	T0* a14; /* other_seeds */
	T0* a15; /* obsolete_message */
	T0* a16; /* preconditions */
	T0* a17; /* postconditions */
	T0* a18; /* is_keyword */
	T0* a19; /* semicolon */
	T0* a20; /* feature_clause */
	T0* a21; /* first_note */
	T0* a22; /* inline_separate_arguments */
	T0* a23; /* first_precursor */
	T0* a24; /* other_precursors */
	T0* a25; /* frozen_keyword */
	T0* a26; /* synonym */
	T1 a27; /* validity_checked */
	T1 a28; /* has_validity_error */
	T6 a29; /* id */
	T6 a30; /* version */
};

/* Struct for type ET_ONCE_PROCEDURE */
struct S712 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T0* a2; /* implementation_class */
	T0* a3; /* obsolete_message */
	T0* a4; /* preconditions */
	T0* a5; /* locals */
	T0* a6; /* compound */
	T0* a7; /* postconditions */
	T0* a8; /* rescue_clause */
	T0* a9; /* clients */
	T0* a10; /* is_keyword */
	T0* a11; /* end_keyword */
	T0* a12; /* semicolon */
	T0* a13; /* feature_clause */
	T0* a14; /* first_note */
	T0* a15; /* object_tests */
	T0* a16; /* iteration_components */
	T0* a17; /* inline_separate_arguments */
	T0* a18; /* extended_name */
	T6 a19; /* hash_code */
	T0* a20; /* implementation_feature */
	T0* a21; /* frozen_keyword */
	T0* a22; /* keys */
	T0* a23; /* synonym */
	T6 a24; /* first_seed */
	T0* a25; /* other_seeds */
	T0* a26; /* first_precursor */
	T0* a27; /* other_precursors */
	T1 a28; /* validity_checked */
	T1 a29; /* has_validity_error */
	T6 a30; /* id */
	T6 a31; /* version */
};

/* Struct for type ET_DEFERRED_PROCEDURE */
struct S713 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* deferred_keyword */
	T0* a3; /* extended_name */
	T6 a4; /* hash_code */
	T0* a5; /* arguments */
	T0* a6; /* end_keyword */
	T0* a7; /* clients */
	T0* a8; /* implementation_class */
	T0* a9; /* iteration_components */
	T6 a10; /* first_seed */
	T0* a11; /* other_seeds */
	T0* a12; /* object_tests */
	T0* a13; /* obsolete_message */
	T0* a14; /* preconditions */
	T0* a15; /* postconditions */
	T0* a16; /* is_keyword */
	T0* a17; /* semicolon */
	T0* a18; /* feature_clause */
	T0* a19; /* first_note */
	T0* a20; /* inline_separate_arguments */
	T0* a21; /* first_precursor */
	T0* a22; /* other_precursors */
	T0* a23; /* frozen_keyword */
	T0* a24; /* synonym */
	T1 a25; /* validity_checked */
	T1 a26; /* has_validity_error */
	T6 a27; /* id */
	T6 a28; /* version */
};

/* Struct for type ET_EXTERNAL_PROCEDURE */
struct S714 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T0* a2; /* language */
	T0* a3; /* implementation_class */
	T0* a4; /* obsolete_message */
	T0* a5; /* preconditions */
	T0* a6; /* postconditions */
	T0* a7; /* alias_clause */
	T0* a8; /* clients */
	T0* a9; /* is_keyword */
	T0* a10; /* end_keyword */
	T0* a11; /* semicolon */
	T0* a12; /* feature_clause */
	T0* a13; /* first_note */
	T0* a14; /* object_tests */
	T0* a15; /* iteration_components */
	T0* a16; /* inline_separate_arguments */
	T8 a17; /* builtin_class_code */
	T0* a18; /* extended_name */
	T6 a19; /* hash_code */
	T0* a20; /* implementation_feature */
	T8 a21; /* builtin_feature_code */
	T0* a22; /* frozen_keyword */
	T0* a23; /* synonym */
	T6 a24; /* first_seed */
	T0* a25; /* other_seeds */
	T0* a26; /* first_precursor */
	T0* a27; /* other_precursors */
	T1 a28; /* validity_checked */
	T1 a29; /* has_validity_error */
	T6 a30; /* id */
	T6 a31; /* version */
};

/* Struct for type ET_ALIASED_FEATURE_NAME */
struct S715 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_name */
	T0* a2; /* alias_names */
};

/* Struct for type ET_ALIAS_FREE_NAME */
struct S716 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* alias_keyword */
	T0* a2; /* alias_string */
	T2 a3; /* code */
	T6 a4; /* hash_code */
	T0* a5; /* convert_keyword */
	T6 a6; /* seed */
};

/* Struct for type ET_CLASS_ASSERTION */
struct S719 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_keyword */
};

/* Struct for type ET_LABELED_ACTUAL_PARAMETER */
struct S720 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label_item */
	T0* a2; /* declared_type */
};

/* Struct for type ET_LIKE_FEATURE */
struct S722 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* type_mark */
	T0* a3; /* like_keyword */
	T6 a4; /* seed */
	T1 a5; /* is_procedure */
};

/* Struct for type ET_QUALIFIED_LIKE_BRACED_TYPE */
struct S724 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* qualified_name */
	T0* a2; /* type_mark */
	T0* a3; /* like_keyword */
	T0* a4; /* target_type */
	T0* a5; /* implementation_class */
	T0* a6; /* left_brace */
	T0* a7; /* right_brace */
};

/* Struct for type ET_QUALIFIED_LIKE_TYPE */
struct S725 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* qualified_name */
	T0* a2; /* type_mark */
	T0* a3; /* target_type */
	T0* a4; /* implementation_class */
};

/* Struct for type ET_ASSIGNER_INSTRUCTION */
struct S726 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* call */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
	T0* a4; /* name */
};

/* Struct for type ET_ASSIGNMENT */
struct S727 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
	T1 a4; /* no_target_twin */
};

/* Struct for type ET_ASSIGNMENT_ATTEMPT */
struct S728 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_attempt_symbol */
};

/* Struct for type ET_LOOP_INSTRUCTION */
struct S729 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* from_compound */
	T0* a2; /* until_conditional */
	T0* a3; /* loop_compound */
	T0* a4; /* end_keyword */
	T0* a5; /* invariant_part */
	T0* a6; /* variant_part */
	T1 a7; /* has_old_variant_syntax */
};

/* Struct for type ET_BANG_INSTRUCTION */
struct S731 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* left_bang */
	T0* a5; /* right_bang */
	T0* a6; /* default_create_name */
	T0* a7; /* internal_separate_target */
};

/* Struct for type ET_QUALIFIED_CALL */
struct S732 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T0* a2; /* qualified_name */
};

/* Struct for type ET_CREATE_INSTRUCTION */
struct S734 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* creation_type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* create_keyword */
	T0* a5; /* creation_region */
	T0* a6; /* default_create_name */
	T0* a7; /* internal_separate_target */
};

/* Struct for type ET_CHOICE_RANGE */
struct S735 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* lower */
	T0* a2; /* upper */
	T0* a3; /* dotdot */
};

/* Struct for type ET_QUALIFIED_CALL_INSTRUCTION */
struct S736 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
	T0* a4; /* parenthesis_call */
};

/* Struct for type ET_PRECURSOR_INSTRUCTION */
struct S737 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a4; /* is_parent_prefixed */
	T0* a5; /* parenthesis_call */
	T0* a6; /* parent_type */
};

/* Struct for type ET_STATIC_CALL_INSTRUCTION */
struct S739 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* parenthesis_call */
};

/* Struct for type ET_PRECURSOR_EXPRESSION */
struct S740 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* parent_name */
	T0* a3; /* arguments */
	T0* a4; /* precursor_keyword */
	T1 a5; /* is_parent_prefixed */
	T0* a6; /* parenthesis_call */
	T0* a7; /* parent_type */
};

/* Struct for type ET_FEATURE_ADDRESS */
struct S741 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* name */
};

/* Struct for type ET_CURRENT_ADDRESS */
struct S742 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* current_keyword */
};

/* Struct for type ET_RESULT_ADDRESS */
struct S743 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* result_keyword */
};

/* Struct for type ET_EXPRESSION_ADDRESS */
struct S744 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* expression */
};

/* Struct for type ET_INFIX_EXPRESSION */
struct S745 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* name */
	T0* a4; /* right */
	T1 a5; /* is_boolean_operator */
};

/* Struct for type ET_INFIX_AND_THEN_OPERATOR */
struct S746 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* and_keyword */
	T0* a2; /* then_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_INFIX_OR_ELSE_OPERATOR */
struct S747 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* or_keyword */
	T0* a2; /* else_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_EQUALITY_EXPRESSION */
struct S748 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* operator */
	T0* a4; /* right */
};

/* Struct for type ET_OBJECT_EQUALITY_EXPRESSION */
struct S749 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* operator */
	T0* a4; /* right */
};

/* Struct for type ET_MANIFEST_TYPE */
struct S750 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* type */
	T0* a3; /* left_brace */
	T0* a4; /* right_brace */
};

/* Struct for type ET_PREFIX_EXPRESSION */
struct S751 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* expression */
	T1 a4; /* is_boolean_operator */
};

/* Struct for type ET_OLD_EXPRESSION */
struct S752 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* old_keyword */
	T0* a3; /* expression */
};

/* Struct for type ET_OLD_OBJECT_TEST */
struct S753 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* attached_keyword */
	T0* a4; /* as_keyword */
	T0* a5; /* left_brace */
	T0* a6; /* colon */
	T0* a7; /* declared_type */
	T0* a8; /* right_brace */
	T0* a9; /* expression */
};

/* Struct for type ET_OBJECT_TEST */
struct S754 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* attached_keyword */
	T0* a3; /* declared_type */
	T0* a4; /* expression */
};

/* Struct for type ET_NAMED_OBJECT_TEST */
struct S755 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* as_keyword */
	T0* a4; /* expression */
	T0* a5; /* attached_keyword */
	T0* a6; /* declared_type */
};

/* Struct for type ET_ONCE_MANIFEST_STRING */
struct S756 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* once_keyword */
	T0* a3; /* manifest_string */
	T6 a4; /* id */
};

/* Struct for type ET_ITERATION_CURSOR */
struct S757 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* at_symbol */
	T0* a3; /* item_name */
};

/* Struct for type ET_DO_FUNCTION_INLINE_AGENT */
struct S759 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* formal_arguments */
	T0* a3; /* declared_type */
	T0* a4; /* end_keyword */
	T0* a5; /* implicit_result */
	T0* a6; /* object_tests */
	T0* a7; /* iteration_components */
	T0* a8; /* inline_separate_arguments */
	T0* a9; /* actual_arguments */
	T0* a10; /* agent_keyword */
	T0* a11; /* preconditions */
	T0* a12; /* locals */
	T0* a13; /* compound */
	T0* a14; /* postconditions */
	T0* a15; /* rescue_clause */
	T0* a16; /* target */
	T6 a17; /* attached_result_index */
	T6 a18; /* result_index */
};

/* Struct for type ET_ONCE_FUNCTION_INLINE_AGENT */
struct S760 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* formal_arguments */
	T0* a3; /* declared_type */
	T0* a4; /* end_keyword */
	T0* a5; /* implicit_result */
	T0* a6; /* object_tests */
	T0* a7; /* iteration_components */
	T0* a8; /* inline_separate_arguments */
	T0* a9; /* actual_arguments */
	T0* a10; /* agent_keyword */
	T0* a11; /* preconditions */
	T0* a12; /* locals */
	T0* a13; /* keys */
	T0* a14; /* compound */
	T0* a15; /* postconditions */
	T0* a16; /* rescue_clause */
	T0* a17; /* target */
	T6 a18; /* attached_result_index */
	T6 a19; /* result_index */
};

/* Struct for type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
struct S761 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* language */
	T0* a3; /* object_tests */
	T0* a4; /* iteration_components */
	T0* a5; /* inline_separate_arguments */
	T0* a6; /* actual_arguments */
	T0* a7; /* agent_keyword */
	T0* a8; /* preconditions */
	T0* a9; /* alias_clause */
	T0* a10; /* postconditions */
	T0* a11; /* formal_arguments */
	T0* a12; /* declared_type */
	T0* a13; /* end_keyword */
	T0* a14; /* implicit_result */
	T0* a15; /* target */
	T6 a16; /* attached_result_index */
	T6 a17; /* result_index */
};

/* Struct for type ET_DO_PROCEDURE_INLINE_AGENT */
struct S762 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* formal_arguments */
	T0* a3; /* end_keyword */
	T0* a4; /* object_tests */
	T0* a5; /* iteration_components */
	T0* a6; /* inline_separate_arguments */
	T0* a7; /* actual_arguments */
	T0* a8; /* agent_keyword */
	T0* a9; /* preconditions */
	T0* a10; /* locals */
	T0* a11; /* compound */
	T0* a12; /* postconditions */
	T0* a13; /* rescue_clause */
	T0* a14; /* target */
	T6 a15; /* attached_result_index */
	T6 a16; /* result_index */
};

/* Struct for type ET_ONCE_PROCEDURE_INLINE_AGENT */
struct S763 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* formal_arguments */
	T0* a3; /* end_keyword */
	T0* a4; /* object_tests */
	T0* a5; /* iteration_components */
	T0* a6; /* inline_separate_arguments */
	T0* a7; /* actual_arguments */
	T0* a8; /* agent_keyword */
	T0* a9; /* preconditions */
	T0* a10; /* locals */
	T0* a11; /* keys */
	T0* a12; /* compound */
	T0* a13; /* postconditions */
	T0* a14; /* rescue_clause */
	T0* a15; /* target */
	T6 a16; /* attached_result_index */
	T6 a17; /* result_index */
};

/* Struct for type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
struct S764 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* language */
	T0* a3; /* object_tests */
	T0* a4; /* iteration_components */
	T0* a5; /* inline_separate_arguments */
	T0* a6; /* actual_arguments */
	T0* a7; /* agent_keyword */
	T0* a8; /* preconditions */
	T0* a9; /* alias_clause */
	T0* a10; /* postconditions */
	T0* a11; /* formal_arguments */
	T0* a12; /* end_keyword */
	T0* a13; /* target */
	T6 a14; /* attached_result_index */
	T6 a15; /* result_index */
};

/* Struct for type ET_AGENT_OPEN_TARGET */
struct S765 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a3; /* right_brace */
	T6 a4; /* index */
};

/* Struct for type ET_AGENT_TYPED_OPEN_ARGUMENT */
struct S766 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a3; /* right_brace */
	T0* a4; /* question_mark */
	T6 a5; /* index */
};

/* Struct for type ET_QUERY_LIST */
struct S769 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* declared_count */
	T6 a2; /* count */
	T0* a3; /* storage */
	T6 a4; /* attribute_count */
	T6 a5; /* declared_attribute_count */
};

/* Struct for type ET_PROCEDURE_LIST */
struct S770 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* declared_count */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_TAGGED_ASSERTION */
struct S772 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tag */
	T0* a2; /* untagged_assertion */
};

/* Struct for type ET_FILE_POSITION */
struct S774 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
	T0* a2; /* filename */
};

/* Struct for type SPECIAL [ET_CLASS] */
struct S775 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS] */
struct S776 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
struct S777 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_BASE_TYPE_LIST */
struct S778 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_CLASS_CODES */
struct S779 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ECF_AST_FACTORY */
struct S780 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_CELL [detachable ET_ECF_SYSTEM] */
struct S781 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type TUPLE [ET_ECF_TARGET] */
struct S782 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_TARGET]] */
struct S783 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM_PARSER] */
struct S784 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type XM_ELEMENT */
struct S785 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* parent */
	T0* a4; /* children */
};

/* Struct for type XM_POSITION_TABLE */
struct S786 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table */
};

/* Struct for type TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8] */
struct S787 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type PROCEDURE [TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8]] */
struct S788 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM_PARSER, detachable STRING_8, PROCEDURE [TUPLE [ET_ECF_TARGET]], DS_CELL [detachable ET_ECF_SYSTEM]] */
struct S789 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
};

/* Struct for type DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
struct S791 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* position */
	T6 a10; /* capacity */
	T0* a11; /* equality_tester */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
struct S792 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
struct S793 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type XM_EIFFEL_PARSER */
struct S795 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_last_error_description */
	T0* a2; /* scanner */
	T0* a3; /* error_positions */
	T0* a4; /* scanners */
	T1 a5; /* in_external_dtd */
	T0* a6; /* callbacks */
	T0* a7; /* entities */
	T0* a8; /* pe_entities */
	T0* a9; /* dtd_resolver */
	T0* a10; /* entity_resolver */
	T1 a11; /* use_namespaces */
	T6 a12; /* string_mode */
	T0* a13; /* dtd_callbacks */
	T0* a14; /* last_string_value */
	T0* a15; /* yyss */
	T0* a16; /* yyspecial_routines1 */
	T6 a17; /* yyvsc1 */
	T0* a18; /* yyvs1 */
	T0* a19; /* yyspecial_routines2 */
	T6 a20; /* yyvsc2 */
	T0* a21; /* yyvs2 */
	T0* a22; /* yyspecial_routines3 */
	T6 a23; /* yyvsc3 */
	T0* a24; /* yyvs3 */
	T0* a25; /* yyspecial_routines4 */
	T6 a26; /* yyvsc4 */
	T0* a27; /* yyvs4 */
	T0* a28; /* yyspecial_routines5 */
	T6 a29; /* yyvsc5 */
	T0* a30; /* yyvs5 */
	T0* a31; /* yyspecial_routines6 */
	T6 a32; /* yyvsc6 */
	T0* a33; /* yyvs6 */
	T0* a34; /* yyspecial_routines7 */
	T6 a35; /* yyvsc7 */
	T0* a36; /* yyvs7 */
	T0* a37; /* yyspecial_routines8 */
	T6 a38; /* yyvsc8 */
	T0* a39; /* yyvs8 */
	T0* a40; /* yyspecial_routines9 */
	T6 a41; /* yyvsc9 */
	T0* a42; /* yyvs9 */
	T0* a43; /* yyspecial_routines10 */
	T6 a44; /* yyvsc10 */
	T0* a45; /* yyvs10 */
	T0* a46; /* yyspecial_routines11 */
	T6 a47; /* yyvsc11 */
	T0* a48; /* yyvs11 */
	T0* a49; /* yytranslate */
	T0* a50; /* yyr1 */
	T0* a51; /* yytypes1 */
	T0* a52; /* yytypes2 */
	T0* a53; /* yydefact */
	T0* a54; /* yydefgoto */
	T0* a55; /* yypact */
	T0* a56; /* yypgoto */
	T0* a57; /* yytable */
	T0* a58; /* yycheck */
	T6 a59; /* yy_parsing_status */
	T6 a60; /* yy_suspended_yystacksize */
	T6 a61; /* yy_suspended_yystate */
	T6 a62; /* yy_suspended_yyn */
	T6 a63; /* yy_suspended_yychar1 */
	T6 a64; /* yy_suspended_index */
	T6 a65; /* yy_suspended_yyss_top */
	T6 a66; /* yy_suspended_yy_goto */
	T6 a67; /* yyssp */
	T6 a68; /* error_count */
	T1 a69; /* yy_lookahead_needed */
	T6 a70; /* yyerrstatus */
	T6 a71; /* last_token */
	T6 a72; /* yyvsp1 */
	T6 a73; /* yyvsp2 */
	T6 a74; /* yyvsp3 */
	T6 a75; /* yyvsp4 */
	T6 a76; /* yyvsp5 */
	T6 a77; /* yyvsp6 */
	T6 a78; /* yyvsp7 */
	T6 a79; /* yyvsp8 */
	T6 a80; /* yyvsp9 */
	T6 a81; /* yyvsp10 */
	T6 a82; /* yyvsp11 */
	T0* a83; /* last_detachable_any_value */
};

/* Struct for type XM_TREE_CALLBACKS_PIPE */
struct S796 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* start */
	T0* a2; /* tree */
	T0* a3; /* error */
	T0* a4; /* last */
};

/* Struct for type XM_CALLBACKS_TO_TREE_FILTER */
struct S799 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_position_table */
	T0* a2; /* document */
	T0* a3; /* source_parser */
	T0* a4; /* current_element */
	T0* a5; /* namespace_cache */
	T0* a6; /* next */
};

/* Struct for type ET_ECF_STATE */
struct S800 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* ise_version */
};

/* Struct for type ET_ECF_SYSTEM_CONFIG */
struct S801 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* filename */
	T0* a3; /* universe */
	T0* a4; /* ecf_namespace */
	T0* a5; /* ecf_version */
	T0* a6; /* description */
	T0* a7; /* notes */
	T0* a8; /* targets */
	T1 a9; /* is_read_only */
	T0* a10; /* uuid */
	T0* a11; /* library_target */
};

/* Struct for type ET_ECF_LIBRARY */
struct S802 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* filename */
	T0* a3; /* ecf_namespace */
	T0* a4; /* ecf_version */
	T0* a5; /* description */
	T0* a6; /* notes */
	T0* a7; /* targets */
	T1 a8; /* is_read_only */
	T0* a9; /* uuid */
	T0* a10; /* library_target */
	T0* a11; /* current_system */
	T0* a12; /* library */
	T0* a13; /* libraries */
	T0* a14; /* clusters */
	T0* a15; /* dotnet_assemblies */
	T0* a16; /* implicit_attachment_type_mark */
	T0* a17; /* master_classes */
	T0* a18; /* master_class_mutex */
	T0* a19; /* any_type */
	T0* a20; /* detachable_any_type */
	T0* a21; /* detachable_separate_any_type */
	T0* a22; /* any_parent */
	T0* a23; /* any_parents */
	T0* a24; /* any_clients */
	T0* a25; /* tuple_type */
	T0* a26; /* detachable_tuple_type */
	T0* a27; /* tuple_identity_type */
	T0* a28; /* unfolded_empty_tuple_actual_parameters */
	T0* a29; /* array_any_type */
	T0* a30; /* array_detachable_any_type */
	T0* a31; /* array_none_type */
	T0* a32; /* array_identity_type */
	T0* a33; /* boolean_type */
	T0* a34; /* character_type */
	T0* a35; /* character_8_type */
	T0* a36; /* character_8_convert_feature */
	T0* a37; /* character_32_type */
	T0* a38; /* character_32_convert_feature */
	T0* a39; /* double_type */
	T0* a40; /* exception_type */
	T0* a41; /* detachable_exception_type */
	T0* a42; /* exception_manager_type */
	T0* a43; /* function_identity_any_type */
	T0* a44; /* immutable_string_8_type */
	T0* a45; /* immutable_string_32_type */
	T0* a46; /* integer_type */
	T0* a47; /* integer_8_type */
	T0* a48; /* integer_8_convert_feature */
	T0* a49; /* integer_16_type */
	T0* a50; /* integer_16_convert_feature */
	T0* a51; /* integer_32_type */
	T0* a52; /* integer_32_convert_feature */
	T0* a53; /* integer_64_type */
	T0* a54; /* integer_64_convert_feature */
	T0* a55; /* ise_exception_manager_type */
	T0* a56; /* iterable_detachable_separate_any_type */
	T0* a57; /* natural_type */
	T0* a58; /* natural_8_type */
	T0* a59; /* natural_8_convert_feature */
	T0* a60; /* natural_16_type */
	T0* a61; /* natural_16_convert_feature */
	T0* a62; /* natural_32_type */
	T0* a63; /* natural_32_convert_feature */
	T0* a64; /* natural_64_type */
	T0* a65; /* natural_64_convert_feature */
	T0* a66; /* none_type */
	T0* a67; /* detachable_none_type */
	T0* a68; /* pointer_type */
	T0* a69; /* predicate_identity_type */
	T0* a70; /* procedure_identity_type */
	T0* a71; /* real_type */
	T0* a72; /* real_32_type */
	T0* a73; /* real_32_convert_feature */
	T0* a74; /* real_64_type */
	T0* a75; /* real_64_convert_feature */
	T0* a76; /* routine_identity_type */
	T0* a77; /* special_any_type */
	T0* a78; /* special_detachable_any_type */
	T0* a79; /* special_identity_type */
	T0* a80; /* string_type */
	T0* a81; /* detachable_string_type */
	T0* a82; /* string_8_type */
	T0* a83; /* detachable_string_8_type */
	T0* a84; /* string_8_convert_feature */
	T0* a85; /* string_32_type */
	T0* a86; /* string_32_convert_feature */
	T0* a87; /* system_object_type */
	T0* a88; /* system_object_parents */
	T0* a89; /* system_string_type */
	T0* a90; /* type_detachable_any_type */
	T0* a91; /* detachable_type_exception_type */
	T0* a92; /* type_detachable_exception_type */
	T0* a93; /* type_detachable_like_current_type */
	T0* a94; /* type_identity_type */
	T0* a95; /* typed_pointer_identity_type */
	T0* a96; /* wide_character_type */
	T0* a97; /* selected_target */
	T1 a98; /* use_obsolete_syntax_mode */
	T1 a99; /* obsolete_iteration_mode */
	T1 a100; /* obsolete_routine_type_mode */
	T1 a101; /* is_preparsed */
};

/* Struct for type TUPLE [ET_ADAPTED_LIBRARY] */
struct S804 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ADAPTED_LIBRARY]] */
struct S805 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type XM_DOCUMENT */
struct S806 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* root_element */
	T0* a2; /* children */
};

/* Struct for type ET_COMPRESSED_POSITION */
struct S807 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
};

/* Struct for type XM_STOP_ON_ERROR_FILTER */
struct S809 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* last_error */
	T0* a3; /* next */
};

/* Struct for type XM_ATTRIBUTE */
struct S810 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* value */
	T0* a4; /* parent */
};

/* Struct for type DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8] */
struct S811 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T6 a4; /* last_position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* key_equality_tester */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* special_key_routines */
	T0* a15; /* key_storage */
	T0* a16; /* equality_tester */
	T6 a17; /* free_slot */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_ECF_TARGET, STRING_8] */
struct S812 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* position */
	T0* a3; /* internal_cursor */
	T0* a4; /* key_storage */
	T0* a5; /* item_storage */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* equality_tester */
	T6 a18; /* free_slot */
	T0* a19; /* hash_function */
};

/* Struct for type ET_ECF_TARGET_PARENT */
struct S813 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* location_id */
	T0* a3; /* target */
};

/* Struct for type DS_CELL [detachable ET_ECF_SYSTEM_CONFIG] */
struct S814 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_INTERNAL_UNIVERSE, DS_CELL [detachable ET_ECF_SYSTEM_CONFIG]] */
struct S815 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_ECF_TARGETS */
struct S816 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* targets */
};

/* Struct for type DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8] */
struct S817 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* hash_function */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T6 a19; /* free_slot */
	T0* a20; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
struct S818 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_CELL [detachable ET_ECF_LIBRARY] */
struct S820 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type ET_ECF_ADAPTED_LIBRARY */
struct S821 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* filename_id */
	T0* a3; /* universe */
	T0* a4; /* target */
	T0* a5; /* description */
	T0* a6; /* classname_prefix */
	T1 a7; /* is_read_only */
	T1 a8; /* use_application_options */
	T0* a9; /* options */
	T0* a10; /* class_options */
	T0* a11; /* class_renamings */
	T0* a12; /* visible_classes */
	T0* a13; /* conditions */
	T0* a14; /* notes */
	T0* a15; /* name */
	T0* a16; /* library */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_ADAPTED_LIBRARY, DS_CELL [detachable ET_ECF_LIBRARY]] */
struct S822 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_ECF_DOTNET_ASSEMBLY */
struct S824 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* referenced_assemblies */
	T0* a3; /* current_system */
	T0* a4; /* dotnet_assembly */
	T0* a5; /* name */
	T0* a6; /* implicit_attachment_type_mark */
	T0* a7; /* master_classes */
	T0* a8; /* master_class_mutex */
	T0* a9; /* any_type */
	T0* a10; /* detachable_any_type */
	T0* a11; /* detachable_separate_any_type */
	T0* a12; /* any_parent */
	T0* a13; /* any_parents */
	T0* a14; /* any_clients */
	T0* a15; /* tuple_type */
	T0* a16; /* detachable_tuple_type */
	T0* a17; /* tuple_identity_type */
	T0* a18; /* unfolded_empty_tuple_actual_parameters */
	T0* a19; /* array_any_type */
	T0* a20; /* array_detachable_any_type */
	T0* a21; /* array_none_type */
	T0* a22; /* array_identity_type */
	T0* a23; /* boolean_type */
	T0* a24; /* character_type */
	T0* a25; /* character_8_type */
	T0* a26; /* character_8_convert_feature */
	T0* a27; /* character_32_type */
	T0* a28; /* character_32_convert_feature */
	T0* a29; /* double_type */
	T0* a30; /* exception_type */
	T0* a31; /* detachable_exception_type */
	T0* a32; /* exception_manager_type */
	T0* a33; /* function_identity_any_type */
	T0* a34; /* immutable_string_8_type */
	T0* a35; /* immutable_string_32_type */
	T0* a36; /* integer_type */
	T0* a37; /* integer_8_type */
	T0* a38; /* integer_8_convert_feature */
	T0* a39; /* integer_16_type */
	T0* a40; /* integer_16_convert_feature */
	T0* a41; /* integer_32_type */
	T0* a42; /* integer_32_convert_feature */
	T0* a43; /* integer_64_type */
	T0* a44; /* integer_64_convert_feature */
	T0* a45; /* ise_exception_manager_type */
	T0* a46; /* iterable_detachable_separate_any_type */
	T0* a47; /* natural_type */
	T0* a48; /* natural_8_type */
	T0* a49; /* natural_8_convert_feature */
	T0* a50; /* natural_16_type */
	T0* a51; /* natural_16_convert_feature */
	T0* a52; /* natural_32_type */
	T0* a53; /* natural_32_convert_feature */
	T0* a54; /* natural_64_type */
	T0* a55; /* natural_64_convert_feature */
	T0* a56; /* none_type */
	T0* a57; /* detachable_none_type */
	T0* a58; /* pointer_type */
	T0* a59; /* predicate_identity_type */
	T0* a60; /* procedure_identity_type */
	T0* a61; /* real_type */
	T0* a62; /* real_32_type */
	T0* a63; /* real_32_convert_feature */
	T0* a64; /* real_64_type */
	T0* a65; /* real_64_convert_feature */
	T0* a66; /* routine_identity_type */
	T0* a67; /* special_any_type */
	T0* a68; /* special_detachable_any_type */
	T0* a69; /* special_identity_type */
	T0* a70; /* string_type */
	T0* a71; /* detachable_string_type */
	T0* a72; /* string_8_type */
	T0* a73; /* detachable_string_8_type */
	T0* a74; /* string_8_convert_feature */
	T0* a75; /* string_32_type */
	T0* a76; /* string_32_convert_feature */
	T0* a77; /* system_object_type */
	T0* a78; /* system_object_parents */
	T0* a79; /* system_string_type */
	T0* a80; /* type_detachable_any_type */
	T0* a81; /* detachable_type_exception_type */
	T0* a82; /* type_detachable_exception_type */
	T0* a83; /* type_detachable_like_current_type */
	T0* a84; /* type_identity_type */
	T0* a85; /* typed_pointer_identity_type */
	T0* a86; /* wide_character_type */
	T1 a87; /* is_read_only */
	T1 a88; /* is_preparsed */
};

/* Struct for type ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
struct S826 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* filename_id */
	T0* a3; /* universe */
	T0* a4; /* target */
	T0* a5; /* description */
	T0* a6; /* assembly_culture */
	T0* a7; /* assembly_key */
	T0* a8; /* assembly_name */
	T0* a9; /* assembly_version */
	T0* a10; /* classname_prefix */
	T1 a11; /* is_read_only */
	T0* a12; /* options */
	T0* a13; /* class_options */
	T0* a14; /* class_renamings */
	T0* a15; /* conditions */
	T0* a16; /* notes */
	T0* a17; /* name */
	T0* a18; /* dotnet_assembly */
};

/* Struct for type DS_HASH_TABLE [STRING_8, STRING_8] */
struct S827 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T0* a5; /* key_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* position */
	T6 a9; /* free_slot */
	T6 a10; /* last_position */
	T6 a11; /* slots_position */
	T0* a12; /* hash_function */
	T6 a13; /* capacity */
	T0* a14; /* equality_tester */
	T6 a15; /* modulus */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* clashes */
	T0* a19; /* slots */
	T0* a20; /* special_key_routines */
};

/* Struct for type ET_ECF_ERROR */
struct S828 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* system_config */
	T0* a4; /* position */
	T0* a5; /* code */
};

/* Struct for type ET_ECF_CLUSTERS */
struct S829 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type KL_AGENT_HASH_FUNCTION [STRING_8] */
struct S830 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* hash_agent */
};

/* Struct for type TUPLE [STRING_8] */
struct S831 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type FUNCTION [TUPLE [STRING_8], INTEGER_32] */
struct S832 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [KL_STRING_ROUTINES] */
struct S833 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type DS_HASH_TABLE [ET_IDENTIFIER, STRING_8] */
struct S835 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* hash_function */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T6 a19; /* free_slot */
	T0* a20; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_CLUSTER] */
struct S837 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type ET_DYNAMIC_PRIMARY_TYPE */
struct S838 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* is_alive */
	T6 a2; /* attribute_count */
	T0* a3; /* queries */
	T6 a4; /* id */
	T0* a5; /* base_type */
	T0* a6; /* meta_type */
	T0* a7; /* base_class */
	T0* a8; /* separate_type */
	T0* a9; /* attached_separate_type */
	T0* a10; /* attached_type */
	T0* a11; /* conforming_ancestors */
	T0* a12; /* procedures_by_seed */
	T0* a13; /* procedures */
	T0* a14; /* queries_by_seed */
	T1 a15; /* has_redefined_copy_routine */
	T1 a16; /* has_redefined_is_equal_routine */
	T1 a17; /* has_once_per_object_routines */
	T6 a18; /* hash_code */
	T0* a19; /* next_type */
	T1 a20; /* has_reference_attributes */
	T0* a21; /* query_calls */
	T0* a22; /* procedure_calls */
	T1 a23; /* has_static */
	T0* a24; /* equality_expressions */
	T0* a25; /* object_equality_expressions */
};

/* Struct for type ET_DYNAMIC_FEATURE_LIST */
struct S839 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
struct S840 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* special_item_routines */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T6 a17; /* free_slot */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type TUPLE [INTEGER_32] */
struct S841 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 z1;
};

/* Struct for type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
struct S842 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* dynamic_type_set_count */
	T1 a2; /* has_fatal_error */
	T0* a3; /* current_dynamic_system */
	T1 a4; /* catcall_error_mode */
	T1 a5; /* catcall_warning_mode */
	T1 a6; /* no_debug */
	T1 a7; /* no_assertion */
	T0* a8; /* alive_conforming_descendants_per_type */
};

/* Struct for type TUPLE [ET_DYNAMIC_SYSTEM] */
struct S843 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_DYNAMIC_FEATURE */
struct S845 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_feature */
	T0* a2; /* dynamic_type_sets */
	T1 a3; /* is_static */
	T6 a4; /* id */
	T0* a5; /* target_type */
	T1 a6; /* is_generated */
	T1 a7; /* is_inlined */
	T8 a8; /* builtin_class_code */
	T8 a9; /* builtin_feature_code */
	T0* a10; /* result_type_set */
	T1 a11; /* is_copy_routine */
	T1 a12; /* is_is_equal_routine */
	T0* a13; /* procedure_calls */
	T0* a14; /* query_calls */
	T1 a15; /* is_regular */
	T0* a16; /* first_precursor */
	T1 a17; /* is_creation */
	T0* a18; /* other_precursors */
	T1 a19; /* is_built */
	T1 a20; /* is_separate_creation */
	T1 a21; /* is_address */
};

/* Struct for type ET_NESTED_TYPE_CONTEXT */
struct S847 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* root_context */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_FORMAL_PARAMETER_TYPE */
struct S848 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* type_mark */
	T6 a3; /* index */
	T0* a4; /* implementation_class */
};

/* Struct for type ARRAY [ET_TYPE] */
struct S849 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [ET_TYPE] */
struct S850 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_SYSTEM_MULTIPROCESSOR */
struct S853 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* benchmark_shown */
	T1 a2; /* nested_benchmark_shown */
	T0* a3; /* interface_checker */
	T0* a4; /* stop_request */
	T0* a5; /* eiffel_parser */
	T0* a6; /* error_handler */
	T0* a7; /* implementation_checker */
	T0* a8; /* ise_version */
	T0* a9; /* other_processors */
	T0* a10; /* eiffel_preparser */
	T0* a11; /* master_class_checker */
	T1 a12; /* preparse_multiple_mode */
	T0* a13; /* ast_factory */
	T1 a14; /* use_note_keyword */
	T1 a15; /* use_attached_keyword */
	T1 a16; /* use_attribute_keyword */
	T1 a17; /* use_reference_keyword */
	T1 a18; /* use_detachable_keyword */
	T1 a19; /* preparse_shallow_mode */
	T1 a20; /* providers_enabled */
	T0* a21; /* provider_checker */
	T0* a22; /* ancestor_builder */
	T0* a23; /* feature_flattener */
	T0* a24; /* ecma_version */
	T1 a25; /* metrics_shown */
	T1 a26; /* flat_mode */
	T1 a27; /* flat_dbc_mode */
	T0* a28; /* processed_class_count_stack */
	T0* a29; /* dotnet_assembly_consumer */
	T6 a30; /* processed_class_count */
	T1 a31; /* preparse_single_mode */
	T1 a32; /* unknown_builtin_reported */
	T1 a33; /* qualified_anchored_types_cycle_detection_enabled */
	T1 a34; /* cluster_dependence_enabled */
	T6 a35; /* postponed_class_count */
	T1 a36; /* preparse_override_mode */
	T1 a37; /* preparse_readonly_mode */
	T1 a38; /* use_cluster_dependence_pathnames */
	T1 a39; /* suppliers_enabled */
};

/* Struct for type DS_HASH_SET_CURSOR [STRING_8] */
struct S854 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [STRING_8] */
struct S855 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FEATURE_CHECKER */
struct S857 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* system_processor */
	T0* a2; /* type_checker */
	T0* a3; /* current_type */
	T0* a4; /* current_class */
	T0* a5; /* current_feature */
	T0* a6; /* current_feature_impl */
	T0* a7; /* current_class_impl */
	T0* a8; /* enclosing_inline_agents */
	T0* a9; /* unused_overloaded_procedures_list */
	T0* a10; /* unused_overloaded_queries_list */
	T0* a11; /* unused_overloaded_features_list */
	T0* a12; /* unused_call_infos */
	T0* a13; /* unused_contexts */
	T0* a14; /* current_context */
	T0* a15; /* current_target_type */
	T0* a16; /* current_object_test_types */
	T0* a17; /* current_object_test_scope */
	T0* a18; /* object_test_scope_builder */
	T0* a19; /* current_iteration_cursor_types */
	T0* a20; /* current_iteration_item_types */
	T0* a21; /* current_iteration_item_scope */
	T0* a22; /* current_inline_separate_argument_types */
	T0* a23; /* current_inline_separate_argument_scope */
	T0* a24; /* current_initialization_scope */
	T0* a25; /* current_attachment_scope */
	T0* a26; /* attachment_scope_builder */
	T0* a27; /* unused_attachment_scopes */
	T0* a28; /* assertions_by_feature */
	T0* a29; /* common_ancestor_type_list */
	T0* a30; /* note_term_list */
	T0* a31; /* vape_non_descendant_clients */
	T0* a32; /* vape_creation_clients */
	T0* a33; /* vape_client */
	T0* a34; /* unused_adapted_base_classes */
	T0* a35; /* adapted_base_class_checker */
	T1 a36; /* has_fatal_error */
	T1 a37; /* in_static_feature */
	T1 a38; /* in_precondition */
	T0* a39; /* supplier_handler */
	T1 a40; /* in_invariant */
	T0* a41; /* precursor_queries */
	T0* a42; /* precursor_procedures */
	T1 a43; /* in_postcondition */
	T1 a44; /* in_precursor */
	T0* a45; /* current_inline_agent */
	T1 a46; /* in_check_instruction */
	T1 a47; /* in_rescue */
};

/* Struct for type ET_DYNAMIC_TYPE_SET_LIST */
struct S858 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S859 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T0* a5; /* equality_tester */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_cursor */
	T6 a8; /* found_position */
	T0* a9; /* item_storage */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type ET_DYNAMIC_PRECURSOR */
struct S860 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type */
	T0* a2; /* static_feature */
	T0* a3; /* result_type_set */
	T1 a4; /* is_static */
	T0* a5; /* current_feature */
	T6 a6; /* id */
	T0* a7; /* dynamic_type_sets */
	T1 a8; /* is_generated */
	T1 a9; /* is_inlined */
	T8 a10; /* builtin_class_code */
	T8 a11; /* builtin_feature_code */
	T1 a12; /* is_built */
	T0* a13; /* first_precursor */
	T0* a14; /* other_precursors */
	T1 a15; /* is_copy_routine */
	T1 a16; /* is_is_equal_routine */
	T0* a17; /* parent_type */
	T0* a18; /* query_calls */
	T0* a19; /* procedure_calls */
	T1 a20; /* is_regular */
	T1 a21; /* is_creation */
	T1 a22; /* is_address */
	T1 a23; /* is_separate_creation */
};

/* Struct for type ET_DYNAMIC_PRECURSOR_LIST */
struct S861 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S862 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* count */
	T6 a8; /* modulus */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* special_item_routines */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T0* a17; /* equality_tester */
	T6 a18; /* free_slot */
	T0* a19; /* hash_function */
};

/* Struct for type ET_TYPE_CHECKER */
struct S864 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_context */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_feature_impl */
	T0* a4; /* constraint_context */
	T0* a5; /* current_class */
	T0* a6; /* target_context */
	T0* a7; /* other_context */
	T0* a8; /* adapted_base_class_checker */
	T0* a9; /* adapted_base_classes */
	T0* a10; /* system_processor */
	T0* a11; /* supplier_handler */
	T1 a12; /* has_fatal_error */
	T1 a13; /* class_interface_error_only */
	T1 a14; /* in_qualified_anchored_type */
};

/* Struct for type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
struct S867 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S868 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
struct S869 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S870 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
struct S871 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
struct S872 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
struct S873 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T6 a9; /* found_position */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type ET_OBJECT_TEST_SCOPE */
struct S874 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* object_tests */
	T6 a2; /* hidden_count */
};

/* Struct for type ET_OBJECT_TEST_SCOPE_BUILDER */
struct S875 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T0* a4; /* scope */
	T1 a5; /* is_negated */
};

/* Struct for type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
struct S876 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T0* a3; /* key_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ITERATION_ITEM_SCOPE */
struct S877 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hidden_count */
	T0* a2; /* iteration_components */
};

/* Struct for type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
struct S878 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* slots_position */
	T6 a17; /* count */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type ET_INLINE_SEPARATE_ARGUMENT_SCOPE */
struct S879 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hidden_count */
	T0* a2; /* inline_separate_arguments */
};

/* Struct for type ET_ATTACHMENT_SCOPE */
struct S880 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* locals_attached */
	T0* a2; /* arguments_attached */
	T0* a3; /* attributes_attached */
	T1 a4; /* result_attached */
	T1 a5; /* is_code_unreachable */
};

/* Struct for type ET_ATTACHMENT_SCOPE_BUILDER */
struct S881 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* scope */
	T1 a2; /* is_negated */
};

/* Struct for type DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
struct S882 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE] */
struct S883 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* free_slot */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T6 a12; /* found_position */
	T6 a13; /* modulus */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* special_item_routines */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_NOTE_TERM] */
struct S884 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
struct S885 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type ET_ADAPTED_BASE_CLASS_CHECKER */
struct S886 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class_impl */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T1 a4; /* has_fatal_error */
	T1 a5; /* feature_flattening_error_only */
	T1 a6; /* class_interface_error_only */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
struct S888 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_feature */
	T0* a2; /* static_call */
	T0* a3; /* target_type_set */
	T0* a4; /* result_type_set */
	T0* a5; /* current_type */
	T0* a6; /* next */
	T1 a7; /* is_generated */
	T1 a8; /* force_result_boxing */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
struct S889 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* static_call */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
	T1 a6; /* is_generated */
};

/* Struct for type ET_DYNAMIC_TUPLE_TYPE */
struct S894 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T0* a8; /* separate_type */
	T0* a9; /* attached_separate_type */
	T0* a10; /* attached_type */
	T0* a11; /* conforming_ancestors */
	T0* a12; /* queries_by_seed */
	T0* a13; /* procedures_by_seed */
	T0* a14; /* procedures */
	T1 a15; /* has_redefined_copy_routine */
	T0* a16; /* item_type_sets */
	T1 a17; /* has_redefined_is_equal_routine */
	T1 a18; /* has_once_per_object_routines */
	T1 a19; /* has_reference_attributes */
	T6 a20; /* hash_code */
	T0* a21; /* next_type */
	T0* a22; /* query_calls */
	T0* a23; /* procedure_calls */
	T1 a24; /* has_static */
	T0* a25; /* equality_expressions */
	T0* a26; /* object_equality_expressions */
};

/* Struct for type ET_FEATURE_LIST */
struct S897 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
};

/* Struct for type NATIVE_STRING */
struct S899 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* managed_data */
	T6 a2; /* unit_count */
};

/* Struct for type HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
struct S900 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* content */
	T0* a3; /* keys */
	T0* a4; /* deleted_marks */
	T0* a5; /* indexes_map */
	T6 a6; /* iteration_position */
	T6 a7; /* count */
	T6 a8; /* deleted_item_position */
	T6 a9; /* control */
	T0* a10; /* found_item */
	T1 a11; /* has_default */
	T6 a12; /* item_position */
	T6 a13; /* ht_lowest_deleted_position */
	T0* a14; /* ht_deleted_item */
	T0* a15; /* ht_deleted_key */
	T1 a16; /* object_comparison */
};

/* Struct for type RX_BYTE_CODE */
struct S902 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* byte_code */
	T0* a3; /* character_sets */
	T6 a4; /* capacity */
};

/* Struct for type RX_CHARACTER_SET */
struct S903 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* is_empty */
	T1 a2; /* is_negated */
	T11 a3; /* first_set */
	T11 a4; /* second_set */
	T11 a5; /* third_set */
	T11 a6; /* fourth_set */
	T0* a7; /* other_sets */
	T1 a8; /* is_reverted */
};

/* Struct for type RX_CASE_MAPPING */
struct S904 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* lower_table */
	T0* a2; /* flip_table */
};

/* Struct for type UC_UNICODE_ROUTINES */
struct S906 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ARRAY [RX_CHARACTER_SET] */
struct S907 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [RX_CHARACTER_SET] */
struct S908 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type UC_STRING */
struct S909 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* area */
	T6 a3; /* byte_count */
	T6 a4; /* internal_hash_code */
	T6 a5; /* last_byte_index_input */
	T6 a6; /* last_byte_index_result */
	T6 a7; /* internal_case_insensitive_hash_code */
};

/* Struct for type DS_LINKED_LIST_CURSOR [STRING_8] */
struct S910 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* before */
};

/* Struct for type DS_HASH_SET [NATURAL_32] */
struct S911 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type KL_STRING_OUTPUT_STREAM */
struct S912 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* string */
};

/* Struct for type DS_ARRAYED_LIST [ET_IDENTIFIER] */
struct S913 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE] */
struct S914 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [BOOLEAN] */
struct S915 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
struct S916 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES] */
struct S917 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
struct S918 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION] */
struct S919 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION] */
struct S920 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST] */
struct S921 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_RESULT] */
struct S922 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST */
struct S923 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* clashes */
	T0* a4; /* slots */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET */
struct S924 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T0* a3; /* dynamic_types */
	T1 a4; /* is_never_void */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S925 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_STACK [ET_EXPRESSION] */
struct S926 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_EXPRESSION] */
struct S927 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
struct S928 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* last_position */
	T6 a4; /* capacity */
	T6 a5; /* count */
	T6 a6; /* free_slot */
	T6 a7; /* slots_position */
	T6 a8; /* modulus */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* key_equality_tester */
	T0* a11; /* equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
struct S929 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE] */
struct S930 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T6 a3; /* position */
	T0* a4; /* item_storage */
	T6 a5; /* capacity */
	T6 a6; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
struct S931 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_OBJECT_TEST] */
struct S932 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [INTEGER_32] */
struct S933 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_AGENT] */
struct S934 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION */
struct S935 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
};

/* Struct for type ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION */
struct S937 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
struct S938 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_FEATURE] */
struct S939 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* internal_cursor */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ARRAY [INTEGER_32] */
struct S940 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
struct S941 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
struct S942 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
struct S943 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T0* a10; /* internal_cursor */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION] */
struct S944 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT] */
struct S945 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
struct S946 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_FEATURE] */
struct S947 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, STRING_8] */
struct S948 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* count */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* capacity */
	T6 a11; /* slots_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* equality_tester */
	T6 a15; /* found_position */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_STRING_HASH_TABLE */
struct S949 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T0* a5; /* key_equality_tester */
	T0* a6; /* slots */
	T0* a7; /* hash_function */
	T0* a8; /* key_storage */
	T0* a9; /* clashes */
	T6 a10; /* count */
	T6 a11; /* capacity */
	T6 a12; /* slots_position */
	T6 a13; /* free_slot */
	T6 a14; /* last_position */
	T0* a15; /* internal_keys */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* equality_tester */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* internal_cursor */
};

/* Struct for type KL_TEXT_OUTPUT_FILE */
struct S950 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* mode */
	T14 a3; /* file_pointer */
	T1 a4; /* descriptor_available */
	T0* a5; /* last_string_32 */
	T0* a6; /* last_string */
	T0* a7; /* internal_name */
	T0* a8; /* internal_detachable_name_pointer */
};

/* Struct for type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
struct S951 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR */
struct S952 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_CANNOT_WRITE_TO_FILE_ERROR */
struct S953 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type KL_DIRECTORY */
struct S954 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_input */
	T0* a2; /* last_entry */
	T0* a3; /* name */
	T6 a4; /* mode */
	T0* a5; /* internal_detachable_name_pointer */
	T0* a6; /* string_name */
	T0* a7; /* entry_buffer */
	T1 a8; /* old_end_of_input */
	T14 a9; /* directory_pointer */
	T14 a10; /* last_entry_pointer */
	T0* a11; /* lastentry */
	T0* a12; /* internal_name */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]] */
struct S955 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_QUICK_SORTER [STRING_8] */
struct S956 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type UC_STRING_COMPARATOR */
struct S957 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8] */
struct S958 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* last_position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* modulus */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* equality_tester */
	T6 a11; /* found_position */
	T0* a12; /* special_item_routines */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T6 a17; /* free_slot */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type TUPLE [STRING_8, STRING_8] */
struct S961 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
struct S962 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* items */
	T0* a5; /* counts */
	T0* a6; /* successors */
};

/* Struct for type ET_DYNAMIC_EQUALITY_TYPES */
struct S963 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left */
	T0* a2; /* right */
};

/* Struct for type ET_DYNAMIC_OBJECT_EQUALITY_TYPES */
struct S965 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left */
	T0* a2; /* right */
};

/* Struct for type ET_DYNAMIC_SPECIAL_TYPE */
struct S966 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T0* a8; /* separate_type */
	T0* a9; /* attached_separate_type */
	T0* a10; /* attached_type */
	T0* a11; /* conforming_ancestors */
	T0* a12; /* queries_by_seed */
	T0* a13; /* procedures_by_seed */
	T0* a14; /* procedures */
	T0* a15; /* item_type_set */
	T1 a16; /* has_redefined_copy_routine */
	T1 a17; /* has_redefined_is_equal_routine */
	T1 a18; /* has_once_per_object_routines */
	T1 a19; /* has_reference_attributes */
	T6 a20; /* hash_code */
	T0* a21; /* next_type */
	T0* a22; /* query_calls */
	T0* a23; /* procedure_calls */
	T1 a24; /* has_static */
	T0* a25; /* equality_expressions */
	T0* a26; /* object_equality_expressions */
};

/* Struct for type DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
struct S968 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_DYNAMIC_SECONDARY_TYPE */
struct S969 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_type */
	T0* a2; /* meta_type */
	T0* a3; /* type_mark */
	T0* a4; /* internal_base_type */
};

/* Struct for type ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID */
struct S970 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
struct S976 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_DYNAMIC_INLINED_EXPRESSION */
struct S980 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dynamic_type_set */
	T6 a2; /* index */
	T0* a3; /* expression */
	T0* a4; /* context */
};

/* Struct for type ET_DYNAMIC_CALL_CONTEXT */
struct S981 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_feature */
	T0* a2; /* arguments */
	T0* a3; /* target */
};

/* Struct for type DS_QUICK_SORTER [INTEGER_32] */
struct S982 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type PROCEDURE [TUPLE] */
struct S984 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S985 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S986 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S987 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S988 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type UT_INTEGER_FORMATTER */
struct S989 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S994 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE] */
struct S995 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S999 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T1 z4;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S1004 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, INTEGER_32, INTEGER_32] */
struct S1005 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
	T6 z4;
};

/* Struct for type SPECIAL [ET_DYNAMIC_PRIMARY_TYPE] */
struct S1006 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE] */
struct S1007 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
struct S1008 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type TUPLE [GECC, DS_ARRAYED_LIST [STRING_8], INTEGER_32, MUTEX] */
struct S1011 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
	T0* z4;
};

/* Struct for type WORKER_THREAD */
struct S1012 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* thread_procedure */
	T0* a2; /* launch_mutex */
	T14 a3; /* thread_id */
	T1 a4; /* terminated */
};

/* Struct for type PATH */
struct S1014 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_name */
	T0* a2; /* storage */
	T1 a3; /* is_normalized */
};

/* Struct for type STRING_TO_INTEGER_CONVERTOR */
struct S1015 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* sign */
	T11 a2; /* part1 */
	T11 a3; /* part2 */
	T6 a4; /* last_state */
	T1 a5; /* internal_overflowed */
	T0* a6; /* leading_separators */
	T0* a7; /* trailing_separators */
	T1 a8; /* leading_separators_acceptable */
	T1 a9; /* trailing_separators_acceptable */
	T6 a10; /* conversion_type */
};

/* Struct for type STRING_8_SEARCHER */
struct S1017 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* deltas */
};

/* Struct for type STD_FILES */
struct S1019 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_output */
};

/* Struct for type HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
struct S1020 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_state */
	T1 a2; /* internal_overflowed */
	T11 a3; /* part1 */
	T11 a4; /* part2 */
	T0* a5; /* leading_separators */
	T0* a6; /* trailing_separators */
	T6 a7; /* sign */
	T6 a8; /* conversion_type */
	T2 a9; /* internal_lookahead */
	T1 a10; /* leading_separators_acceptable */
	T1 a11; /* trailing_separators_acceptable */
};

/* Struct for type DT_SHARED_SYSTEM_CLOCK */
struct S1022 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DT_SYSTEM_CLOCK */
struct S1023 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* second */
	T6 a2; /* year */
	T6 a3; /* month */
	T6 a4; /* day */
	T6 a5; /* hour */
	T6 a6; /* minute */
	T6 a7; /* millisecond */
	T0* a8; /* local_clock */
};

/* Struct for type DT_DATE_TIME_DURATION */
struct S1024 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* year */
	T6 a2; /* month */
	T6 a3; /* day */
	T6 a4; /* hour */
	T6 a5; /* minute */
	T6 a6; /* second */
	T6 a7; /* millisecond */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, STRING_8] */
struct S1029 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* position */
	T6 a5; /* count */
	T6 a6; /* capacity */
	T6 a7; /* free_slot */
	T6 a8; /* last_position */
	T0* a9; /* key_equality_tester */
	T0* a10; /* internal_keys */
	T0* a11; /* equality_tester */
	T6 a12; /* modulus */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
struct S1032 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_UNQUALIFIED_CALL_EXPRESSION */
struct S1033 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* arguments */
	T0* a4; /* parenthesis_call */
};

/* Struct for type ET_UNQUALIFIED_CALL_INSTRUCTION */
struct S1034 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* arguments */
	T0* a3; /* parenthesis_call */
};

/* Struct for type KL_ARRAY_ROUTINES [INTEGER_32] */
struct S1035 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_CELL [detachable ET_ECF_CONFIG] */
struct S1038 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_SYSTEM, DS_CELL [detachable ET_ECF_CONFIG]] */
struct S1040 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_ECF_OPTIONS */
struct S1042 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_assertions */
	T0* a2; /* primary_debugs */
	T0* a3; /* primary_warnings */
	T0* a4; /* primary_options */
	T0* a5; /* description */
	T0* a6; /* secondary_options */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT] */
struct S1043 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type XM_NAMESPACE */
struct S1044 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* uri */
	T0* a2; /* ns_prefix */
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
struct S1045 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type ET_ECF_REDIRECTION_CONFIG */
struct S1047 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* uuid */
	T0* a2; /* location */
	T0* a3; /* filename */
	T0* a4; /* universe */
	T0* a5; /* message */
	T0* a6; /* ecf_namespace */
	T0* a7; /* ecf_version */
};

/* Struct for type ET_DYNAMIC_PROCEDURE_TYPE */
struct S1048 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T0* a8; /* separate_type */
	T0* a9; /* attached_separate_type */
	T0* a10; /* attached_type */
	T0* a11; /* conforming_ancestors */
	T1 a12; /* has_redefined_is_equal_routine */
	T1 a13; /* has_redefined_copy_routine */
	T0* a14; /* open_operand_tuple_type_set */
	T0* a15; /* set_rout_disp_final_feature */
	T0* a16; /* next_type */
	T1 a17; /* has_once_per_object_routines */
	T0* a18; /* procedures */
	T0* a19; /* query_calls */
	T0* a20; /* procedure_calls */
	T1 a21; /* has_static */
	T0* a22; /* open_operand_type_sets */
	T6 a23; /* hash_code */
	T0* a24; /* queries_by_seed */
	T0* a25; /* procedures_by_seed */
	T1 a26; /* has_reference_attributes */
	T0* a27; /* equality_expressions */
	T0* a28; /* object_equality_expressions */
};

/* Struct for type ET_DYNAMIC_FUNCTION_TYPE */
struct S1049 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T0* a8; /* separate_type */
	T0* a9; /* attached_separate_type */
	T0* a10; /* attached_type */
	T0* a11; /* conforming_ancestors */
	T1 a12; /* has_redefined_is_equal_routine */
	T1 a13; /* has_redefined_copy_routine */
	T0* a14; /* open_operand_tuple_type_set */
	T0* a15; /* set_rout_disp_final_feature */
	T0* a16; /* next_type */
	T1 a17; /* has_once_per_object_routines */
	T0* a18; /* procedures */
	T0* a19; /* query_calls */
	T0* a20; /* procedure_calls */
	T1 a21; /* has_static */
	T0* a22; /* open_operand_type_sets */
	T0* a23; /* result_type_set */
	T6 a24; /* hash_code */
	T0* a25; /* queries_by_seed */
	T0* a26; /* procedures_by_seed */
	T1 a27; /* has_reference_attributes */
	T0* a28; /* equality_expressions */
	T0* a29; /* object_equality_expressions */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET */
struct S1050 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
	T0* a5; /* targets */
	T1 a6; /* is_dynamic_types_readonly */
};

/* Struct for type KL_PLATFORM */
struct S1051 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type UT_CONFIG_PARSER */
struct S1052 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* config_values */
	T0* a3; /* error_handler */
	T0* a4; /* defined_values */
	T0* a5; /* include_stack */
	T0* a6; /* line_nb_stack */
	T0* a7; /* last_string_value */
	T6 a8; /* line_nb */
	T0* a9; /* yyss */
	T0* a10; /* input_buffer */
	T6 a11; /* yy_end */
	T6 a12; /* yy_position */
	T6 a13; /* yy_line */
	T6 a14; /* yy_column */
	T6 a15; /* yy_parsing_status */
	T6 a16; /* yy_suspended_yystacksize */
	T6 a17; /* yy_suspended_yystate */
	T6 a18; /* yy_suspended_yyn */
	T6 a19; /* yy_suspended_yychar1 */
	T6 a20; /* yy_suspended_index */
	T6 a21; /* yy_suspended_yyss_top */
	T6 a22; /* yy_suspended_yy_goto */
	T0* a23; /* yyr1 */
	T6 a24; /* yyssp */
	T0* a25; /* yypgoto */
	T0* a26; /* yycheck */
	T0* a27; /* yytable */
	T0* a28; /* yydefgoto */
	T6 a29; /* error_count */
	T1 a30; /* yy_lookahead_needed */
	T6 a31; /* yyerrstatus */
	T0* a32; /* yypact */
	T6 a33; /* last_token */
	T0* a34; /* yytranslate */
	T0* a35; /* yydefact */
	T0* a36; /* yy_pushed_start_conditions */
	T0* a37; /* yyspecial_routines1 */
	T6 a38; /* yyvsc1 */
	T0* a39; /* yyvs1 */
	T0* a40; /* yyspecial_routines2 */
	T6 a41; /* yyvsc2 */
	T0* a42; /* yyvs2 */
	T0* a43; /* yyspecial_routines3 */
	T6 a44; /* yyvsc3 */
	T0* a45; /* yyvs3 */
	T0* a46; /* yytypes1 */
	T0* a47; /* yytypes2 */
	T6 a48; /* yy_start */
	T6 a49; /* yyvsp1 */
	T6 a50; /* yyvsp2 */
	T6 a51; /* yyvsp3 */
	T1 a52; /* yy_more_flag */
	T6 a53; /* yy_more_len */
	T6 a54; /* line */
	T6 a55; /* column */
	T6 a56; /* position */
	T6 a57; /* yy_start_state */
	T0* a58; /* yy_state_stack */
	T6 a59; /* yy_state_count */
	T0* a60; /* yy_content_area */
	T0* a61; /* yy_unicode_content_area */
	T0* a62; /* yy_accept */
	T6 a63; /* yy_last_accepting_state */
	T6 a64; /* yy_last_accepting_cpos */
	T0* a65; /* yy_content */
	T0* a66; /* yy_ec */
	T0* a67; /* yy_chk */
	T0* a68; /* yy_base */
	T0* a69; /* yy_def */
	T0* a70; /* yy_meta */
	T0* a71; /* yy_nxt */
	T6 a72; /* yy_lp */
	T0* a73; /* yy_acclist */
	T6 a74; /* yy_looking_for_trail_begin */
	T6 a75; /* yy_full_match */
	T6 a76; /* yy_full_state */
	T6 a77; /* yy_full_lp */
	T1 a78; /* yy_rejected */
	T0* a79; /* last_detachable_any_value */
	T6 a80; /* if_level */
	T6 a81; /* ignored_level */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
struct S1053 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type CELL [INTEGER_32] */
struct S1056 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
};

/* Struct for type KL_PATHNAME */
struct S1058 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* drive */
	T0* a3; /* hostname */
	T0* a4; /* sharename */
	T1 a5; /* is_relative */
	T0* a6; /* components */
};

/* Struct for type KL_ANY_ROUTINES */
struct S1059 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_WINDOWS_INPUT_FILE */
struct S1060 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_string */
	T6 a2; /* mode */
	T0* a3; /* name */
	T0* a4; /* character_buffer */
	T1 a5; /* end_of_file */
	T2 a6; /* last_character */
	T14 a7; /* file_pointer */
	T1 a8; /* descriptor_available */
	T0* a9; /* internal_name */
	T0* a10; /* internal_detachable_name_pointer */
};

/* Struct for type KL_UNIX_INPUT_FILE */
struct S1061 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_string */
	T6 a2; /* mode */
	T0* a3; /* name */
	T0* a4; /* character_buffer */
	T1 a5; /* end_of_file */
	T2 a6; /* last_character */
	T14 a7; /* file_pointer */
	T1 a8; /* descriptor_available */
	T0* a9; /* internal_name */
	T0* a10; /* internal_detachable_name_pointer */
};

/* Struct for type ARRAY [IMMUTABLE_STRING_32] */
struct S1062 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
	T1 a4; /* object_comparison */
};

/* Struct for type SPECIAL [IMMUTABLE_STRING_32] */
struct S1063 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [NATURAL_8] */
struct S1064 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T8 z2[1]; /* item */
};

/* Struct for type UC_UTF8_STRING */
struct S1066 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* area */
	T6 a3; /* byte_count */
	T6 a4; /* internal_hash_code */
	T6 a5; /* last_byte_index_input */
	T6 a6; /* last_byte_index_result */
	T6 a7; /* internal_case_insensitive_hash_code */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [STRING_8] */
struct S1067 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
struct S1068 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1069 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_MASTER_CLASS] */
struct S1070 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
struct S1073 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
struct S1074 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CLASS_NAME] */
struct S1075 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
struct S1076 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_PARENT_ITEM] */
struct S1078 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
struct S1079 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CLIENT_ITEM] */
struct S1080 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM] */
struct S1081 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S1083 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
struct S1085 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_BRACED_TYPE_LIST */
struct S1086 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_UNIVERSE] */
struct S1087 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
struct S1089 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_UNIVERSE] */
struct S1090 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST [ET_MASTER_CLASS] */
struct S1091 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* equality_tester */
	T0* a6; /* internal_cursor */
};

/* Struct for type TUPLE [ET_MASTER_CLASS] */
struct S1092 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_MASTER_CLASS]] */
struct S1093 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
struct S1094 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [AP_OPTION] */
struct S1096 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_OPTION] */
struct S1097 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S1098 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S1099 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S1100 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable STRING_8] */
struct S1101 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable STRING_8] */
struct S1102 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKABLE [STRING_8] */
struct S1103 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKABLE [BOOLEAN] */
struct S1104 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [BOOLEAN] */
struct S1105 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [INTEGER_32] */
struct S1106 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [INTEGER_32] */
struct S1107 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type YY_FILE_BUFFER */
struct S1109 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* content */
	T1 a3; /* end_of_file */
	T0* a4; /* file */
	T6 a5; /* count */
	T6 a6; /* index */
	T6 a7; /* line */
	T6 a8; /* column */
	T6 a9; /* position */
	T1 a10; /* beginning_of_line */
	T1 a11; /* filled */
	T1 a12; /* interactive */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
struct S1110 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* items */
};

/* Struct for type DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
struct S1111 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ET_PARENT_CHECKER1 */
struct S1112 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T0* a4; /* current_parent */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER1 */
struct S1113 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* all_base_types */
	T0* a3; /* base_types */
	T0* a4; /* formal_dependencies */
	T0* a5; /* base_type_dependencies */
	T0* a6; /* recursive_formal_constraints */
	T0* a7; /* recursive_formal_constraints_to_be_processed */
	T0* a8; /* current_class */
	T0* a9; /* system_processor */
	T0* a10; /* current_formal */
	T0* a11; /* current_type_constraint */
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1114 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* position */
	T6 a4; /* found_position */
	T0* a5; /* item_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* modulus */
	T6 a11; /* slots_position */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T6 a17; /* capacity */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FEATURE_NAME_TESTER */
struct S1115 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1117 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* position */
	T6 a7; /* last_position */
	T6 a8; /* capacity */
	T6 a9; /* count */
	T6 a10; /* free_slot */
	T0* a11; /* equality_tester */
	T6 a12; /* modulus */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ALIAS_NAME_TESTER */
struct S1118 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_CLIENT_LIST] */
struct S1120 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
struct S1121 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* count */
	T0* a17; /* internal_keys */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FEATURE_ADAPTATION_RESOLVER */
struct S1122 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* rename_table */
	T0* a3; /* export_table */
	T0* a4; /* undefine_table */
	T0* a5; /* redefine_table */
	T0* a6; /* select_table */
	T0* a7; /* replicable_features */
	T0* a8; /* current_class */
	T0* a9; /* system_processor */
	T0* a10; /* free_parent_feature */
	T0* a11; /* parent_feature_list */
	T0* a12; /* free_inherited_feature */
	T0* a13; /* inherited_feature_list */
	T0* a14; /* free_redeclared_feature */
	T0* a15; /* redeclared_feature_list */
};

/* Struct for type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
struct S1123 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* dotnet_features */
	T0* a3; /* other_dotnet_features */
	T0* a4; /* current_class */
	T0* a5; /* system_processor */
	T0* a6; /* free_parent_feature */
	T0* a7; /* parent_feature_list */
	T0* a8; /* free_inherited_feature */
	T0* a9; /* inherited_feature_list */
	T0* a10; /* free_redeclared_feature */
	T0* a11; /* redeclared_feature_list */
};

/* Struct for type ET_IDENTIFIER_TYPE_RESOLVER */
struct S1124 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T0* a4; /* current_feature */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
struct S1125 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_ANCHORED_TYPE_CHECKER */
struct S1126 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* anchored_type_sorter */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
	T0* a5; /* current_anchored_type */
};

/* Struct for type ET_SIGNATURE_CHECKER */
struct S1127 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* parent_context */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
	T6 a5; /* processing_mode */
};

/* Struct for type ET_PARENT_CHECKER2 */
struct S1128 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* constraint_context */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER2 */
struct S1129 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* constraint_context */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_BUILTIN_FEATURE_CHECKER */
struct S1130 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* builtin_features */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_PRECURSOR_CHECKER */
struct S1131 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_feature */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
struct S1132 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* free_slot */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_SET [ET_CLASS] */
struct S1133 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T6 a5; /* capacity */
	T6 a6; /* modulus */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
struct S1134 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_class */
	T0* a4; /* adapted_base_class_checker */
	T0* a5; /* adapted_base_classes */
	T0* a6; /* target_context */
	T0* a7; /* other_context */
	T0* a8; /* classes_to_be_processed */
	T0* a9; /* system_processor */
	T1 a10; /* in_qualified_anchored_type */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
struct S1135 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
struct S1136 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T6 a3; /* position */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* modulus */
	T6 a12; /* slots_position */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* equality_tester */
	T0* a15; /* key_storage */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME] */
struct S1137 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* position */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T0* a5; /* key_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* count */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* modulus */
	T6 a12; /* slots_position */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* equality_tester */
	T0* a15; /* internal_cursor */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_PARENT_CHECKER3 */
struct S1138 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type DS_HASH_SET [ET_PROCEDURE] */
struct S1139 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_QUERY] */
struct S1140 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type ET_SUPPLIER_BUILDER */
struct S1141 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* supplier_classes */
	T0* a2; /* current_class */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
struct S1142 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type YY_UNICODE_BUFFER */
struct S1144 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T6 a6; /* count */
	T1 a7; /* filled */
	T1 a8; /* beginning_of_line */
	T6 a9; /* capacity */
};

/* Struct for type SPECIAL [detachable ET_OBJECT_TEST_LIST] */
struct S1145 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
struct S1146 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_OBJECT_TEST_LIST] */
struct S1147 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST] */
struct S1148 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ITERATION_COMPONENT_LIST] */
struct S1149 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST] */
struct S1150 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ITERATION_COMPONENT_LIST] */
struct S1151 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST] */
struct S1152 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S1153 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S1154 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S1155 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S1156 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ASSERTION_ITEM] */
struct S1157 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
struct S1158 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
struct S1159 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_QUERY] */
struct S1160 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
struct S1161 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUERY] */
struct S1162 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_PROCEDURE] */
struct S1163 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
struct S1164 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
struct S1165 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
struct S1166 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
struct S1167 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_NAMED_CLASS] */
struct S1168 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
struct S1169 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_EXPRESSION_ITEM] */
struct S1171 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
struct S1173 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_INSTRUCTION] */
struct S1175 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
struct S1176 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
struct S1178 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
struct S1179 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_NAMED_OBJECT_TEST] */
struct S1180 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
struct S1181 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ITERATION_COMPONENT] */
struct S1182 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT] */
struct S1183 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT] */
struct S1184 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT] */
struct S1185 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_BASE_TYPE] */
struct S1186 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
struct S1187 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
struct S1188 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
struct S1189 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ECF_LIBRARY] */
struct S1190 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
struct S1193 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
struct S1194 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
struct S1197 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
struct S1198 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_SCANNER */
struct S1199 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* yy_more_flag */
	T6 a13; /* yy_more_len */
	T6 a14; /* yy_end */
	T6 a15; /* yy_start */
	T6 a16; /* yy_line */
	T6 a17; /* yy_column */
	T6 a18; /* yy_position */
	T0* a19; /* yy_state_stack */
	T6 a20; /* yy_state_count */
	T0* a21; /* yy_content_area */
	T0* a22; /* yy_unicode_content_area */
	T0* a23; /* yy_accept */
	T6 a24; /* yy_last_accepting_state */
	T6 a25; /* yy_last_accepting_cpos */
	T0* a26; /* yy_content */
	T0* a27; /* yy_ec */
	T0* a28; /* yy_chk */
	T0* a29; /* yy_base */
	T0* a30; /* yy_def */
	T0* a31; /* yy_meta */
	T0* a32; /* yy_nxt */
	T6 a33; /* yy_lp */
	T0* a34; /* yy_acclist */
	T6 a35; /* yy_looking_for_trail_begin */
	T6 a36; /* yy_full_match */
	T6 a37; /* yy_full_state */
	T6 a38; /* yy_full_lp */
	T0* a39; /* input_buffer */
	T1 a40; /* yy_rejected */
	T0* a41; /* yy_pushed_start_conditions */
	T0* a42; /* last_string_value */
	T0* a43; /* last_error */
	T6 a44; /* pushed_start_condition_count */
};

/* Struct for type XM_DEFAULT_POSITION */
struct S1200 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* row */
	T6 a2; /* column */
	T0* a3; /* source_name */
	T6 a4; /* byte_index */
};

/* Struct for type DS_BILINKED_LIST [XM_POSITION] */
struct S1202 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
struct S1203 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* first_cell */
};

/* Struct for type XM_CALLBACKS_NULL */
struct S1204 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S1205 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* capacity */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* modulus */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* found_position */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* equality_tester */
	T0* a20; /* hash_function */
};

/* Struct for type XM_NULL_EXTERNAL_RESOLVER */
struct S1207 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_CALLBACKS_NULL */
struct S1209 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
struct S1210 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_PARSER_NAME */
struct S1211 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* use_namespaces */
	T6 a2; /* count */
	T0* a3; /* first */
	T0* a4; /* second */
	T0* a5; /* tail */
};

/* Struct for type SPECIAL [XM_EIFFEL_PARSER_NAME] */
struct S1212 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S1213 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
struct S1214 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* equality_tester */
	T6 a3; /* count */
	T6 a4; /* capacity */
	T6 a5; /* free_slot */
	T6 a6; /* last_position */
	T6 a7; /* modulus */
	T6 a8; /* slots_position */
	T6 a9; /* clashes_previous_position */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* internal_cursor */
	T0* a16; /* hash_function */
};

/* Struct for type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S1215 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
struct S1216 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_EXTERNAL_ID */
struct S1217 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* system_id */
	T0* a2; /* public_id */
};

/* Struct for type SPECIAL [XM_DTD_EXTERNAL_ID] */
struct S1218 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
struct S1219 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_ELEMENT_CONTENT */
struct S1220 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* items */
	T2 a2; /* repetition */
	T0* a3; /* name */
	T2 a4; /* type */
	T1 a5; /* is_character_data_allowed */
};

/* Struct for type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
struct S1221 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S1222 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1223 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S1224 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1225 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_ATTRIBUTE_CONTENT */
struct S1226 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* default_value */
	T2 a3; /* type */
	T1 a4; /* is_list_type */
	T0* a5; /* enumeration_list */
	T2 a6; /* value */
};

/* Struct for type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1227 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
struct S1228 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_BILINKED_LIST [STRING_8] */
struct S1229 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* equality_tester */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [STRING_8]] */
struct S1230 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [BOOLEAN] */
struct S1231 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
struct S1232 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_DECLARATION */
struct S1233 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* encoding */
	T0* a2; /* version */
	T1 a3; /* stand_alone */
};

/* Struct for type SPECIAL [XM_EIFFEL_DECLARATION] */
struct S1234 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type XM_EIFFEL_ENTITY_DEF */
struct S1237 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* literal_name */
	T0* a2; /* value */
	T0* a3; /* resolver */
	T0* a4; /* external_id */
	T0* a5; /* character_entity */
	T0* a6; /* yy_pushed_start_conditions */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_value */
	T0* a11; /* last_string_value */
	T0* a12; /* last_error */
	T1 a13; /* yy_rejected */
	T6 a14; /* yy_state_count */
	T6 a15; /* yy_full_match */
	T6 a16; /* yy_lp */
	T6 a17; /* yy_looking_for_trail_begin */
	T6 a18; /* yy_full_lp */
	T6 a19; /* yy_full_state */
	T6 a20; /* pushed_start_condition_count */
	T6 a21; /* yy_start_state */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_position */
	T6 a25; /* yy_start */
	T6 a26; /* yy_end */
	T6 a27; /* line */
	T6 a28; /* column */
	T6 a29; /* position */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_last_accepting_state */
	T6 a33; /* yy_last_accepting_cpos */
	T0* a34; /* yy_state_stack */
	T0* a35; /* yy_nxt */
	T0* a36; /* yy_chk */
	T0* a37; /* yy_base */
	T0* a38; /* yy_def */
	T0* a39; /* yy_ec */
	T0* a40; /* yy_meta */
	T0* a41; /* yy_accept */
	T0* a42; /* yy_content */
	T0* a43; /* yy_content_area */
	T0* a44; /* yy_unicode_content_area */
	T6 a45; /* last_token */
	T0* a46; /* input_filter */
	T0* a47; /* input_stream */
	T0* a48; /* input_resolver */
	T0* a49; /* yy_acclist */
};

/* Struct for type XM_EIFFEL_SCANNER_DTD */
struct S1238 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* decl_start_sent */
	T1 a13; /* decl_end_sent */
	T1 a14; /* yy_more_flag */
	T6 a15; /* yy_more_len */
	T6 a16; /* yy_end */
	T6 a17; /* yy_start */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_position */
	T0* a21; /* yy_state_stack */
	T6 a22; /* yy_state_count */
	T0* a23; /* yy_content_area */
	T0* a24; /* yy_unicode_content_area */
	T0* a25; /* yy_accept */
	T6 a26; /* yy_last_accepting_state */
	T6 a27; /* yy_last_accepting_cpos */
	T0* a28; /* yy_content */
	T0* a29; /* yy_ec */
	T0* a30; /* yy_chk */
	T0* a31; /* yy_base */
	T0* a32; /* yy_def */
	T0* a33; /* yy_meta */
	T0* a34; /* yy_nxt */
	T6 a35; /* yy_lp */
	T0* a36; /* yy_acclist */
	T6 a37; /* yy_looking_for_trail_begin */
	T6 a38; /* yy_full_match */
	T6 a39; /* yy_full_state */
	T6 a40; /* yy_full_lp */
	T0* a41; /* input_buffer */
	T1 a42; /* yy_rejected */
	T0* a43; /* yy_pushed_start_conditions */
	T0* a44; /* last_string_value */
	T0* a45; /* last_error */
	T6 a46; /* pushed_start_condition_count */
};

/* Struct for type XM_EIFFEL_PE_ENTITY_DEF */
struct S1240 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* resolver */
	T0* a2; /* external_id */
	T0* a3; /* literal_name */
	T0* a4; /* value */
	T0* a5; /* character_entity */
	T0* a6; /* yy_pushed_start_conditions */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_value */
	T0* a11; /* last_string_value */
	T0* a12; /* last_error */
	T1 a13; /* yy_rejected */
	T6 a14; /* yy_state_count */
	T6 a15; /* yy_full_match */
	T6 a16; /* yy_lp */
	T6 a17; /* yy_looking_for_trail_begin */
	T6 a18; /* yy_full_lp */
	T6 a19; /* yy_full_state */
	T6 a20; /* pushed_start_condition_count */
	T6 a21; /* yy_start_state */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_position */
	T6 a25; /* yy_start */
	T6 a26; /* yy_end */
	T6 a27; /* line */
	T6 a28; /* column */
	T6 a29; /* position */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_last_accepting_state */
	T6 a33; /* yy_last_accepting_cpos */
	T0* a34; /* yy_state_stack */
	T1 a35; /* pre_sent */
	T1 a36; /* post_sent */
	T0* a37; /* yy_nxt */
	T0* a38; /* yy_chk */
	T0* a39; /* yy_base */
	T0* a40; /* yy_def */
	T0* a41; /* yy_ec */
	T0* a42; /* yy_meta */
	T0* a43; /* yy_accept */
	T0* a44; /* yy_content */
	T0* a45; /* yy_content_area */
	T0* a46; /* yy_unicode_content_area */
	T6 a47; /* last_token */
	T0* a48; /* input_filter */
	T0* a49; /* input_stream */
	T0* a50; /* input_resolver */
	T0* a51; /* yy_acclist */
};

/* Struct for type XM_NAMESPACE_RESOLVER */
struct S1241 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* element_local_part */
	T0* a3; /* element_prefix */
	T0* a4; /* context */
	T1 a5; /* forward_xmlns */
	T0* a6; /* attributes_prefix */
	T0* a7; /* attributes_local_part */
	T0* a8; /* attributes_value */
};

/* Struct for type ARRAY [XM_CALLBACKS_FILTER] */
struct S1242 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [XM_CALLBACKS_FILTER] */
struct S1243 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET [XM_NAMESPACE] */
struct S1244 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* special_item_routines */
	T0* a8; /* item_storage */
	T0* a9; /* clashes */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a14; /* count */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type XM_LINKED_LIST [XM_DOCUMENT_NODE] */
struct S1245 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_ECF_SYSTEM_CONFIG] */
struct S1248 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG] */
struct S1250 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_SYSTEM_CONFIG, STRING_8] */
struct S1251 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8] */
struct S1252 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ECF_TARGET] */
struct S1253 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
struct S1255 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8] */
struct S1257 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION] */
struct S1258 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable RX_REGULAR_EXPRESSION] */
struct S1259 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_DOTNET_ASSEMBLIES */
struct S1260 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
struct S1264 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_IDENTIFIER] */
struct S1265 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8] */
struct S1266 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLUSTER] */
struct S1267 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CLUSTER] */
struct S1268 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
struct S1269 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32] */
struct S1270 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* modulus */
	T0* a2; /* key_equality_tester */
	T0* a3; /* item_storage */
	T0* a4; /* slots */
	T0* a5; /* hash_function */
	T0* a6; /* key_storage */
	T0* a7; /* clashes */
	T6 a8; /* position */
	T6 a9; /* last_position */
	T6 a10; /* capacity */
	T6 a11; /* slots_position */
	T6 a12; /* count */
	T0* a13; /* equality_tester */
	T6 a14; /* found_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* special_item_routines */
	T0* a17; /* special_key_routines */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
};

/* Struct for type ET_FEATURE_IDS */
struct S1271 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* feature_ids */
};

/* Struct for type SPECIAL [ET_DYNAMIC_FEATURE] */
struct S1272 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
struct S1273 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
struct S1275 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
struct S1276 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* modulus */
	T0* a2; /* key_equality_tester */
	T0* a3; /* item_storage */
	T0* a4; /* slots */
	T0* a5; /* hash_function */
	T0* a6; /* key_storage */
	T0* a7; /* clashes */
	T0* a8; /* equality_tester */
	T6 a9; /* capacity */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* position */
	T0* a13; /* special_item_routines */
	T0* a14; /* special_key_routines */
	T6 a15; /* found_position */
	T0* a16; /* internal_cursor */
	T6 a17; /* count */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
struct S1277 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* modulus */
	T0* a2; /* key_equality_tester */
	T0* a3; /* item_storage */
	T0* a4; /* slots */
	T0* a5; /* hash_function */
	T0* a6; /* key_storage */
	T0* a7; /* clashes */
	T6 a8; /* position */
	T6 a9; /* count */
	T6 a10; /* capacity */
	T6 a11; /* slots_position */
	T6 a12; /* free_slot */
	T6 a13; /* last_position */
	T0* a14; /* equality_tester */
	T6 a15; /* found_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE] */
struct S1279 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR] */
struct S1280 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type TUPLE [ET_SYSTEM_PROCESSOR, DS_ARRAYED_LIST [ET_CLASS]] */
struct S1281 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S1283 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
struct S1284 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_EQUALITY_TESTER [INTEGER_32] */
struct S1285 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S1287 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE] */
struct S1288 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
struct S1289 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_CLASS] */
struct S1290 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
struct S1291 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_INLINE_AGENT] */
struct S1292 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
struct S1293 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S1294 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S1295 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S1296 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
struct S1297 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
struct S1298 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
struct S1299 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S1300 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_FEATURE] */
struct S1301 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* equality_tester */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S1302 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S1303 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
struct S1304 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT] */
struct S1305 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
struct S1306 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
struct S1307 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S1308 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
struct S1309 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
struct S1310 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
struct S1311 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
struct S1314 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* special_routines */
	T0* a3; /* storage */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
struct S1315 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST [ET_ITERATION_COMPONENT] */
struct S1317 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
struct S1319 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT] */
struct S1320 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_ATTACHMENT_SCOPE] */
struct S1322 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
struct S1323 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
struct S1324 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE] */
struct S1325 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ASSERTIONS] */
struct S1326 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTIONS] */
struct S1329 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE] */
struct S1330 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_FEATURE] */
struct S1331 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NOTE_TERM] */
struct S1332 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_NOTE_TERM] */
struct S1333 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM] */
struct S1334 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
struct S1335 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
struct S1336 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
struct S1337 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [NATIVE_STRING] */
struct S1338 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [NATURAL_32] */
struct S1339 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T10 z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST [RX_CHARACTER_SET] */
struct S1340 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [NATURAL_32] */
struct S1341 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [NATURAL_64] */
struct S1342 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T11 z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE [NATURAL_64, NATURAL_32] */
struct S1343 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* position */
	T0* a3; /* internal_cursor */
	T6 a4; /* found_position */
	T0* a5; /* item_storage */
	T6 a6; /* modulus */
	T0* a7; /* key_equality_tester */
	T0* a8; /* key_storage */
	T0* a9; /* slots */
	T0* a10; /* hash_function */
	T0* a11; /* clashes */
	T0* a12; /* internal_keys */
	T6 a13; /* capacity */
	T6 a14; /* free_slot */
	T6 a15; /* last_position */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* equality_tester */
	T0* a19; /* special_item_routines */
	T0* a20; /* special_key_routines */
};

/* Struct for type DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32] */
struct S1344 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ARRAY [INTEGER_32]] */
struct S1345 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
struct S1346 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_INTEGER_ROUTINES */
struct S1347 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [NATURAL_32] */
struct S1350 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
struct S1352 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE] */
struct S1353 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE] */
struct S1354 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE] */
struct S1355 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [BOOLEAN] */
struct S1356 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
struct S1357 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_EQUALITY_EXPRESSION] */
struct S1358 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
struct S1359 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_DYNAMIC_EQUALITY_TYPES] */
struct S1360 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES] */
struct S1361 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES] */
struct S1362 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
struct S1363 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
struct S1364 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
struct S1365 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION] */
struct S1366 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION] */
struct S1367 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION] */
struct S1368 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_QUALIFIED_CALL_EXPRESSION] */
struct S1369 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION] */
struct S1370 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION] */
struct S1371 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
struct S1372 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
struct S1373 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST] */
struct S1374 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RESULT] */
struct S1375 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_RESULT] */
struct S1376 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_RESULT] */
struct S1377 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S1378 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S1379 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S1380 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_EXPRESSION] */
struct S1381 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
struct S1382 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
struct S1383 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
struct S1384 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
struct S1385 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_OBJECT_TEST] */
struct S1387 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
struct S1388 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
struct S1389 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [INTEGER_32] */
struct S1390 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_AGENT] */
struct S1393 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT] */
struct S1394 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
struct S1395 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
struct S1396 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S1397 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
struct S1398 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE] */
struct S1399 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S1400 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_CONSTANT] */
struct S1401 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
struct S1403 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
struct S1404 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_INLINE_CONSTANT] */
struct S1405 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
struct S1407 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_DYNAMIC_FEATURE] */
struct S1408 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
struct S1410 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
struct S1411 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION] */
struct S1412 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION] */
struct S1413 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION] */
struct S1414 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_CALL_CONTEXT] */
struct S1415 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT] */
struct S1416 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT] */
struct S1417 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
struct S1418 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE] */
struct S1419 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
struct S1422 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [STRING_8]] */
struct S1427 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [STRING_8]] */
struct S1428 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [STRING_8]] */
struct S1429 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [TUPLE [STRING_8, detachable STRING_8]] */
struct S1430 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [TUPLE [STRING_8, detachable STRING_8]] */
struct S1432 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [TUPLE [STRING_8, detachable STRING_8], STRING_8] */
struct S1433 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
struct S1434 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* free_slot */
	T6 a8; /* count */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* slots */
	T0* a14; /* clashes */
	T0* a15; /* special_item_routines */
	T0* a16; /* key_storage */
	T0* a17; /* special_key_routines */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
struct S1435 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ARRAY [BOOLEAN] */
struct S1436 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type THREAD_ATTRIBUTES */
struct S1438 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* shared */
	T14 a2; /* internal_item */
	T0* a3; /* managed_pointer */
};

/* Struct for type CELL [BOOLEAN] */
struct S1439 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* item */
};

/* Struct for type CHARACTER_PROPERTY */
struct S1441 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SYSTEM_ERROR */
struct S1442 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ET_INTERNAL_ERROR */
struct S1443 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ET_SYNTAX_ERROR */
struct S1444 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* filename */
	T0* a6; /* position */
	T1 a7; /* ise_reported */
	T1 a8; /* ise_fatal */
	T1 a9; /* ge_reported */
	T1 a10; /* ge_fatal */
};

/* Struct for type ET_VALIDITY_ERROR */
struct S1445 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* ise_reported */
	T1 a2; /* ge_reported */
	T0* a3; /* default_template */
	T0* a4; /* parameters */
	T0* a5; /* current_class */
	T0* a6; /* class_impl */
	T0* a7; /* position */
	T0* a8; /* code */
	T0* a9; /* etl_code */
	T1 a10; /* ise_fatal */
	T1 a11; /* ge_fatal */
};

/* Struct for type ET_FORMAL_COMMA_ARGUMENT */
struct S1446 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T6 a3; /* index */
	T6 a4; /* attached_index */
	T1 a5; /* is_used */
};

/* Struct for type ET_LOCAL_COMMA_VARIABLE */
struct S1447 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T6 a3; /* index */
	T6 a4; /* attached_index */
	T1 a5; /* is_used */
};

/* Struct for type ET_LABELED_COMMA_ACTUAL_PARAMETER */
struct S1448 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type ET_KEYWORD_EXPRESSION */
struct S1450 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* expression */
	T0* a2; /* keyword */
};

/* Struct for type DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1453 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_CREATOR] */
struct S1454 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATOR] */
struct S1455 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
struct S1456 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_FEATURE_NAME_ITEM] */
struct S1457 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ECF_NOTE_ELEMENT */
struct S1458 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* attributes */
	T0* a3; /* elements */
	T0* a4; /* content */
};

/* Struct for type ET_ECF_ADAPTED_LIBRARIES */
struct S1459 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* libraries */
};

/* Struct for type ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
struct S1460 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_ECF_FILE_RULES */
struct S1461 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* file_rules */
};

/* Struct for type ET_ECF_NAMESPACES */
struct S1462 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* namespaces */
};

/* Struct for type ET_ECF_EXTERNAL_CFLAGS */
struct S1463 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_INCLUDES */
struct S1464 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_LIBRARIES */
struct S1465 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_LINKER_FLAGS */
struct S1466 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_MAKES */
struct S1467 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_OBJECTS */
struct S1468 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_RESOURCES */
struct S1469 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ACTION] */
struct S1470 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_ECF_ADAPTED_PRECOMPILED_LIBRARY */
struct S1471 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* filename_id */
	T0* a3; /* universe */
	T0* a4; /* target */
	T0* a5; /* description */
	T0* a6; /* eifgens_location */
	T0* a7; /* classname_prefix */
	T1 a8; /* is_read_only */
	T1 a9; /* use_application_options */
	T0* a10; /* options */
	T0* a11; /* class_options */
	T0* a12; /* class_renamings */
	T0* a13; /* visible_classes */
	T0* a14; /* conditions */
	T0* a15; /* name */
	T0* a16; /* library */
};

/* Struct for type ET_ECF_VERSION */
struct S1473 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_release */
	T6 a4; /* internal_build */
	T0* a5; /* product */
	T0* a6; /* company */
	T0* a7; /* copyright */
};

/* Struct for type ET_ECF_NAMESPACE */
struct S1474 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* description */
	T0* a3; /* classname_prefix */
	T0* a4; /* class_renamings */
	T0* a5; /* notes */
};

/* Struct for type ET_ECF_EXTERNAL_CFLAG */
struct S1475 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* flag */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_INCLUDE */
struct S1476 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_LIBRARY */
struct S1477 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_LINKER_FLAG */
struct S1478 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* flag */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_MAKE */
struct S1479 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_OBJECT */
struct S1480 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_RESOURCE */
struct S1481 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_FILE_RULE */
struct S1482 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* exclude */
	T0* a2; /* include */
	T0* a3; /* exclude_regexp */
	T0* a4; /* include_regexp */
	T0* a5; /* conditions */
	T0* a6; /* description */
};

/* Struct for type ET_ECF_ACTION */
struct S1483 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* command_name */
	T0* a2; /* description */
	T1 a3; /* must_succeed */
	T0* a4; /* working_directory */
	T0* a5; /* conditions */
};

/* Struct for type DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8] */
struct S1484 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* last_position */
	T6 a4; /* position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* key_equality_tester */
	T0* a9; /* internal_keys */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS] */
struct S1485 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type TUPLE [ET_ECF_OPTIONS] */
struct S1486 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_OPTIONS]] */
struct S1487 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type ET_ECF_ROOT_CLASS */
struct S1488 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_name */
	T0* a2; /* creation_procedure_name */
	T0* a3; /* cluster_name */
};

/* Struct for type ET_ECF_ROOT_ALL_CLASSES */
struct S1489 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ECF_ORED_CONDITIONS */
struct S1490 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditions */
};

/* Struct for type ET_ECF_ANDED_CONDITIONS */
struct S1491 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditions */
};

/* Struct for type ET_ECF_VISIBLE_CLASS */
struct S1492 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_name */
	T0* a2; /* feature_name */
	T0* a3; /* new_class_name */
	T0* a4; /* new_feature_name */
};

/* Struct for type ET_ECF_BUILD_CONDITION */
struct S1494 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_CONCURRENCY_CONDITION */
struct S1495 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_VOID_SAFETY_CONDITION */
struct S1496 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_CUSTOM_CONDITION */
struct S1497 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* value */
	T0* a3; /* match */
	T1 a4; /* is_excluded */
};

/* Struct for type ET_ECF_DOTNET_CONDITION */
struct S1498 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_DYNAMIC_RUNTIME_CONDITION */
struct S1499 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_PLATFORM_CONDITION */
struct S1500 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_COMPILER_VERSION_CONDITION */
struct S1502 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* min_value */
	T0* a2; /* max_value */
};

/* Struct for type ET_ECF_MSIL_CLR_VERSION_CONDITION */
struct S1503 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* min_value */
	T0* a2; /* max_value */
};

/* Struct for type UT_COUNTER */
struct S1505 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
};

/* Struct for type KL_AGENT_ROUTINES [ET_CLASS] */
struct S1506 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [UT_COUNTER] */
struct S1507 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [KL_AGENT_ROUTINES [ET_CLASS], PROCEDURE [TUPLE]] */
struct S1508 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_CLASS]]] */
struct S1509 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
struct S1510 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
struct S1512 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T0* a13; /* internal_cursor */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]] */
struct S1513 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
struct S1514 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_INTERNAL_UNIVERSE] */
struct S1515 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_INTERNAL_UNIVERSE]] */
struct S1516 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]], PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]]] */
struct S1517 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [ET_DOTNET_ASSEMBLIES] */
struct S1518 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_SYSTEM_PROCESSOR] */
struct S1519 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_CLUSTER] */
struct S1520 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_CLUSTER]] */
struct S1521 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM] */
struct S1522 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
struct S1523 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type TUPLE [ET_AST_PROCESSOR] */
struct S1524 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1525 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
struct S1526 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type ET_ANCESTORS_STATUS_CHECKER */
struct S1527 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_FLATTENING_STATUS_CHECKER */
struct S1528 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_INTERFACE_STATUS_CHECKER */
struct S1529 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* qualified_anchored_type_checker */
	T0* a2; /* class_type_checker */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_IMPLEMENTATION_STATUS_CHECKER */
struct S1530 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
};

/* Struct for type TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
struct S1531 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_FLATTENING_STATUS_CHECKER] */
struct S1532 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_INTERFACE_STATUS_CHECKER] */
struct S1533 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
struct S1534 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [BOOLEAN] */
struct S1535 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 z1;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_CLUSTER]]] */
struct S1538 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
struct S1542 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]]] */
struct S1543 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_PARENTHESIS_EXPRESSION */
struct S1544 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type DS_HASH_SET [ET_LIBRARY] */
struct S1547 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* special_item_routines */
	T0* a7; /* item_storage */
	T0* a8; /* clashes */
	T0* a9; /* slots */
	T6 a10; /* found_position */
	T0* a11; /* internal_cursor */
	T6 a12; /* slots_position */
	T6 a13; /* count */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type TUPLE [DS_HASH_SET [ET_LIBRARY]] */
struct S1548 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type SPECIAL [ET_RENAME_ITEM] */
struct S1552 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
struct S1553 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_EXPORT] */
struct S1555 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPORT] */
struct S1556 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
struct S1559 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_cluster */
	T0* a2; /* pathname_buffer */
	T0* a3; /* group_names */
	T0* a4; /* group_pathnames */
};

/* Struct for type ET_PARENT_FEATURE */
struct S1561 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* parent */
	T0* a3; /* precursor_feature */
	T0* a4; /* new_name */
	T0* a5; /* undefine_name */
	T0* a6; /* redefine_name */
	T0* a7; /* select_name */
	T0* a8; /* merged_feature */
	T1 a9; /* has_other_deferred */
	T1 a10; /* has_other_effective */
};

/* Struct for type DS_QUICK_SORTER [ET_QUERY] */
struct S1562 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type DS_QUICK_SORTER [ET_PROCEDURE] */
struct S1563 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_INHERITED_FEATURE */
struct S1564 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* parent_feature */
	T0* a3; /* flattened_feature */
	T0* a4; /* flattened_parent */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T1 a7; /* is_selected */
	T0* a8; /* replicated_features */
	T0* a9; /* replicated_seeds */
};

/* Struct for type ET_REDECLARED_FEATURE */
struct S1566 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* flattened_feature */
	T0* a3; /* parent_feature */
	T6 a4; /* first_seed */
	T0* a5; /* other_seeds */
	T1 a6; /* is_selected */
	T0* a7; /* replicated_features */
	T0* a8; /* replicated_seeds */
};

/* Struct for type KL_CHARACTER_BUFFER */
struct S1574 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* as_special */
	T0* a2; /* area */
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1576 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1577 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ALIAS_NAME] */
struct S1578 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
struct S1579 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_AGENT_IMPLICIT_CURRENT_TARGET */
struct S1580 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_expression */
};

/* Struct for type SPECIAL [ET_CHOICE_ITEM] */
struct S1582 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
struct S1583 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1584 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1586 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE_ITEM] */
struct S1587 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
struct S1589 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ELSEIF_EXPRESSION] */
struct S1590 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION] */
struct S1591 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ELSEIF_PART] */
struct S1592 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
struct S1593 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_FEATURE_CLAUSE] */
struct S1594 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
struct S1595 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
struct S1596 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
struct S1598 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
struct S1599 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
struct S1600 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
struct S1601 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
struct S1603 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING_ITEM] */
struct S1605 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
struct S1606 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_NOTE_ITEM] */
struct S1608 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NOTE_ITEM] */
struct S1609 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_NOTE_TERM_ITEM] */
struct S1610 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM] */
struct S1611 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_PARENT_LIST] */
struct S1612 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
struct S1613 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_TYPE_CONSTRAINT_ITEM] */
struct S1615 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM] */
struct S1616 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_WHEN_EXPRESSION] */
struct S1617 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION] */
struct S1618 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_WHEN_PART] */
struct S1619 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
struct S1620 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_LINKED_LIST [XM_ELEMENT_NODE] */
struct S1622 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type UC_STRING_EQUALITY_TESTER */
struct S1624 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S1626 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S1627 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type DS_PAIR [XM_POSITION, XM_NODE] */
struct S1628 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first */
	T0* a2; /* second */
};

/* Struct for type XM_EIFFEL_INPUT_STREAM */
struct S1629 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_string */
	T6 a2; /* encoding */
	T0* a3; /* utf_queue */
	T0* a4; /* impl */
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
struct S1630 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_TARGET] */
struct S1631 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
struct S1632 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT] */
struct S1634 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
struct S1635 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S1636 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type INTEGER_OVERFLOW_CHECKER */
struct S1643 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* integer_overflow_state1 */
	T0* a2; /* integer_overflow_state2 */
	T0* a3; /* natural_overflow_state1 */
	T0* a4; /* natural_overflow_state2 */
};

/* Struct for type CONSOLE */
struct S1644 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_string */
	T14 a2; /* file_pointer */
	T0* a3; /* last_string_32 */
	T6 a4; /* mode */
	T0* a5; /* internal_name */
	T0* a6; /* internal_detachable_name_pointer */
	T2 a7; /* last_character */
};

/* Struct for type C_DATE */
struct S1645 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* millisecond_now */
	T0* a2; /* internal_item */
	T1 a3; /* is_utc */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
struct S1647 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT] */
struct S1648 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_NOTE_ELEMENT] */
struct S1649 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_NOTE_ELEMENT] */
struct S1650 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type ET_DYNAMIC_TARGET_LIST */
struct S1652 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_ARRAYED_STACK [YY_BUFFER] */
struct S1653 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
};

/* Struct for type UT_SYNTAX_ERROR */
struct S1654 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_TOO_MANY_INCLUDES_ERROR */
struct S1655 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ARRAY [detachable STRING_8] */
struct S1656 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [ET_ADAPTED_LIBRARY] */
struct S1658 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
struct S1659 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
struct S1660 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1661 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1662 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1663 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_TYPE_ITEM] */
struct S1664 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
struct S1665 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
struct S1666 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* modulus */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* internal_cursor */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
struct S1667 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT] */
struct S1669 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [NATURAL_32] */
struct S1670 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_BASE_TYPE_CONSTRAINT_LIST */
struct S1671 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T0* a3; /* storage */
	T6 a4; /* count */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1672 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_FLATTENED_FEATURE] */
struct S1673 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FEATURE_NAME] */
struct S1676 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
struct S1677 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
struct S1678 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1680 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
struct S1681 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CLIENT_LIST] */
struct S1682 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
struct S1683 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
struct S1685 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT] */
struct S1686 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CLIENT] */
struct S1687 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET [ET_FEATURE_NAME] */
struct S1688 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* internal_cursor */
	T6 a4; /* count */
	T0* a5; /* item_storage */
	T6 a6; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* position */
	T0* a10; /* equality_tester */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
struct S1689 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 a3; /* found_position */
	T0* a4; /* internal_cursor */
	T0* a5; /* key_storage */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* position */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* modulus */
	T0* a13; /* equality_tester */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* special_item_routines */
	T0* a17; /* clashes */
	T0* a18; /* slots */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1690 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ET_REPLICATED_FEATURE */
struct S1692 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* features */
	T6 a2; /* selected_count */
};

/* Struct for type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
struct S1693 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
struct S1694 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_DOTNET_SIGNATURE_TESTER */
struct S1695 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET [ET_DOTNET_FEATURE] */
struct S1696 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T6 a9; /* count */
	T6 a10; /* slots_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* internal_cursor */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1698 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
struct S1700 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
struct S1701 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* cycle */
	T0* a2; /* counts */
	T0* a3; /* successors */
	T0* a4; /* items */
	T0* a5; /* sorted_items */
	T0* a6; /* indexes */
};

/* Struct for type DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
struct S1702 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1703 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [ET_PARENT_FEATURE] */
struct S1704 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
struct S1705 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* slots_position */
	T6 a17; /* count */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
struct S1706 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS] */
struct S1709 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
struct S1711 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_RENAME] */
struct S1712 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME] */
struct S1715 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME] */
struct S1719 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_PROCEDURE] */
struct S1720 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_QUERY] */
struct S1721 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [NATURAL_8] */
struct S1724 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
struct S1725 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type XM_EIFFEL_CHARACTER_ENTITY */
struct S1726 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* code */
};

/* Struct for type DS_BILINKABLE [XM_POSITION] */
struct S1727 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
struct S1728 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [XM_EIFFEL_SCANNER] */
struct S1729 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
struct S1730 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S1733 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
struct S1734 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
struct S1737 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
struct S1738 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
struct S1739 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1740 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1741 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [STRING_8] */
struct S1742 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_BILINKABLE [STRING_8] */
struct S1743 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type XM_NAMESPACE_RESOLVER_CONTEXT */
struct S1744 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* context */
};

/* Struct for type DS_LINKED_QUEUE [detachable STRING_8] */
struct S1747 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
};

/* Struct for type DS_LINKED_QUEUE [STRING_8] */
struct S1748 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T0* a2; /* last_cell */
	T6 a3; /* count */
};

/* Struct for type KL_EQUALITY_TESTER [XM_NAMESPACE] */
struct S1749 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
struct S1750 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
struct S1751 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [XM_NAMESPACE] */
struct S1752 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_LINKABLE [XM_DOCUMENT_NODE] */
struct S1753 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
struct S1755 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
	T0* a6; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, INTEGER_32] */
struct S1756 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
struct S1758 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CALL_NAME] */
struct S1760 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
struct S1762 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
struct S1763 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
struct S1764 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
struct S1765 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
struct S1767 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
struct S1768 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_SYSTEM_PROCESSOR] */
struct S1769 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR] */
struct S1770 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_SYSTEM_PROCESSOR] */
struct S1771 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS] */
struct S1772 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ADAPTED_CLASS] */
struct S1774 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS] */
struct S1775 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
struct S1776 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT] */
struct S1777 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT] */
struct S1778 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [RX_CHARACTER_SET] */
struct S1779 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET] */
struct S1780 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [NATURAL_64] */
struct S1785 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
struct S1789 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
struct S1790 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
struct S1791 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
struct S1792 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_STRING_INPUT_STREAM */
struct S1794 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_input */
	T2 a2; /* last_character */
	T0* a3; /* last_string */
	T0* a4; /* string */
	T6 a5; /* location */
};

/* Struct for type UT_TRISTATE */
struct S1796 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* value */
};

/* Struct for type KL_AGENT_ROUTINES [ANY] */
struct S1797 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [UT_TRISTATE] */
struct S1798 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [KL_AGENT_ROUTINES [ANY], PROCEDURE [TUPLE]] */
struct S1799 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type PREDICATE [TUPLE [ET_MASTER_CLASS]] */
struct S1800 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type PREDICATE [TUPLE] */
struct S1801 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
struct S1803 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* last_position */
	T6 a3; /* capacity */
	T6 a4; /* slots_position */
	T6 a5; /* count */
	T6 a6; /* modulus */
	T6 a7; /* clashes_previous_position */
	T0* a8; /* key_equality_tester */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* item_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T6 a17; /* free_slot */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
struct S1804 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1805 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type KL_AGENT_ROUTINES [ET_UNIVERSE] */
struct S1806 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type PREDICATE [TUPLE [ET_UNIVERSE]] */
struct S1807 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
struct S1808 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], PREDICATE [TUPLE [ET_UNIVERSE]]] */
struct S1809 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
struct S1811 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
struct S1812 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN], FUNCTION [TUPLE, BOOLEAN]] */
struct S1813 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
struct S1814 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
	T0* a5; /* agent_type */
	T1 a6; /* is_dynamic_types_readonly */
};

/* Struct for type TUPLE [ET_MASTER_CLASS, ET_SYSTEM_PROCESSOR] */
struct S1821 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type DS_CELL [detachable ET_CLASS] */
struct S1822 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type TUPLE [DS_CELL [detachable ET_CLASS]] */
struct S1823 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
struct S1825 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type ET_SEEDED_QUERY_COMPARATOR */
struct S1827 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SEEDED_PROCEDURE_COMPARATOR */
struct S1830 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [ET_CLIENT_LIST] */
struct S1834 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_STANDARD_ONCE_KEYS */
struct S1838 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_COMMENT */
struct S1840 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* data */
	T0* a2; /* parent */
};

/* Struct for type XM_PROCESSING_INSTRUCTION */
struct S1841 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* data */
	T0* a3; /* parent */
};

/* Struct for type XM_CHARACTER_DATA */
struct S1842 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T0* a2; /* parent */
};

/* Struct for type ET_LIKE_N */
struct S1844 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* previous */
	T0* a3; /* type_mark */
	T0* a4; /* like_keyword */
};

/* Struct for type ET_PARENTHESIS_SYMBOL */
struct S1859 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
};

/* Struct for type ET_PARENTHESIS_INSTRUCTION */
struct S1862 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
struct S1866 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* left_symbol */
	T0* a3; /* actual_arguments */
	T0* a4; /* storage */
	T0* a5; /* right_symbol */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
struct S1867 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
struct S1868 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* agent_expression */
	T6 a2; /* argument_index */
	T6 a3; /* index */
};

/* Struct for type ET_INFIX_CAST_EXPRESSION */
struct S1870 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* type */
};

/* Struct for type SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S1873 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
struct S1874 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
struct S1882 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type ET_BASE_TYPE_RENAME_CONSTRAINT */
struct S1884 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* renames */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
struct S1887 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [NATURAL_16] */
struct S1896 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T9 z2[1]; /* item */
};

/* Struct for type ARRAY [NATURAL_16] */
struct S1897 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ARRAY [NATURAL_32] */
struct S1898 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1899 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1900 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1901 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
struct S1902 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1903 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
struct S1904 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_NAMESPACE] */
struct S1905 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG] */
struct S1906 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
struct S1907 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
struct S1908 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1909 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE] */
struct S1910 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
struct S1911 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE] */
struct S1912 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ACTION] */
struct S1913 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_ACTION] */
struct S1914 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ACTION] */
struct S1915 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
struct S1916 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_ECF_OPTIONS] */
struct S1917 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS] */
struct S1920 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8] */
struct S1921 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS] */
struct S1922 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_VISIBLE_CLASS] */
struct S1923 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_VISIBLE_CLASS] */
struct S1924 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS] */
struct S1925 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM] */
struct S1926 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
struct S1927 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
struct S1928 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_DOTNET_ASSEMBLY] */
struct S1929 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
struct S1931 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
struct S1933 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_INTERNAL_UNIVERSE] */
struct S1934 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER1 */
struct S1935 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER2 */
struct S1936 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
struct S1937 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER3 */
struct S1938 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_LIBRARY] */
struct S1939 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIBRARY] */
struct S1940 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_LIBRARY] */
struct S1941 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_DFA_WILDCARD */
struct S1942 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pattern */
	T1 a2; /* is_case_insensitive */
	T0* a3; /* yy_nxt */
	T0* a4; /* yy_accept */
	T0* a5; /* yy_ec */
	T6 a6; /* yyNb_rows */
	T6 a7; /* yyNull_equiv_class */
	T6 a8; /* yyMax_symbol_equiv_class */
	T6 a9; /* match_count */
	T6 a10; /* subject_start */
	T6 a11; /* subject_end */
	T0* a12; /* subject */
	T6 a13; /* matched_start */
	T6 a14; /* matched_end */
};

/* Struct for type DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
struct S1943 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type DS_LINKED_QUEUE [CHARACTER_8] */
struct S1946 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
};

/* Struct for type UC_UTF16_ROUTINES */
struct S1947 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
struct S1948 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_ADAPTED_UNIVERSE] */
struct S1949 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
struct S1950 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
struct S1951 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ECF_TARGET_PARENT] */
struct S1952 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT] */
struct S1953 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET_PARENT] */
struct S1954 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_ECF_CLUSTER] */
struct S1955 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
struct S1956 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
struct S1957 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TARGET] */
struct S1958 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
struct S1959 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [YY_BUFFER] */
struct S1960 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [YY_BUFFER] */
struct S1961 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
struct S1963 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_BASE_TYPE_CONSTRAINT] */
struct S1964 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT] */
struct S1965 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT] */
struct S1966 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [NATURAL_32] */
struct S1967 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
struct S1968 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
struct S1969 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1971 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1972 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
struct S1974 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
struct S1975 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_ADAPTED_FEATURE] */
struct S1976 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
struct S1977 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_PARENT_FEATURE] */
struct S1978 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1979 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_DOTNET_FEATURE] */
struct S1980 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
struct S1981 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
struct S1982 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1983 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1986 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1987 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
struct S1988 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_DOTNET_FEATURE] */
struct S1989 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
struct S1990 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T6 a7; /* modulus */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type SPECIAL [ET_LIKE_FEATURE] */
struct S1991 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
struct S1992 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
struct S1993 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
struct S1995 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
struct S1996 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
struct S1997 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* position */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
struct S1998 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
struct S1999 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
struct S2000 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S2002 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S2003 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* before */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* after */
};

/* Struct for type DS_LINKABLE [detachable STRING_8] */
struct S2004 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
struct S2005 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type ET_CLUSTER_ERROR */
struct S2006 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* cluster */
};

/* Struct for type TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S2007 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type TUPLE [ET_ECF_CLUSTER] */
struct S2008 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_CLUSTER]] */
struct S2009 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_TARGET, STRING_8] */
struct S2010 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [ET_ECF_ADAPTED_LIBRARY] */
struct S2012 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_ADAPTED_LIBRARY]] */
struct S2013 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S2014 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY]] */
struct S2015 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type PROCEDURE [TUPLE [STRING_8]] */
struct S2018 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_OPTIONS, STRING_8] */
struct S2019 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
struct S2020 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T0* a6; /* hash_function */
	T6 a7; /* last_position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T6 a10; /* count */
	T0* a11; /* equality_tester */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T6 a19; /* free_slot */
	T0* a20; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_EQUALITY_EXPRESSION */
struct S2023 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* static_equality */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
};

/* Struct for type ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
struct S2024 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* static_equality */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
};

/* Struct for type KL_CHARACTER_ROUTINES */
struct S2028 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_SEPARATE_CALL, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
struct S2029 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
struct S2030 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
struct S2031 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_GROUP] */
struct S2036 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], PREDICATE [TUPLE [ET_CLASS]]] */
struct S2037 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S2038 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type ET_CONVERT_BUILTIN_EXPRESSION */
struct S2039 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* convert_feature */
	T0* a4; /* type */
};

/* Struct for type ET_CONVERT_FROM_EXPRESSION */
struct S2040 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* type */
	T6 a3; /* index */
	T0* a4; /* expression */
	T0* a5; /* convert_feature */
	T0* a6; /* internal_separate_target */
};

/* Struct for type ET_CONVERT_TO_EXPRESSION */
struct S2041 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* expression */
	T0* a4; /* convert_feature */
};

/* Struct for type DS_LINKABLE [XM_ELEMENT_NODE] */
struct S2051 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* right */
	T0* a2; /* item */
};

/* Struct for type TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8] */
struct S2052 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T8 z3;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
struct S2055 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_CFLAG] */
struct S2061 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_CFLAG]] */
struct S2062 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
struct S2063 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
struct S2064 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
struct S2065 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
struct S2066 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
struct S2067 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S2068 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG]] */
struct S2069 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_MAKE] */
struct S2070 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_MAKE]] */
struct S2071 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_OBJECT] */
struct S2072 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
struct S2073 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_RESOURCE] */
struct S2074 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_RESOURCE]] */
struct S2075 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [LX_WILDCARD] */
struct S2078 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PREDICATE [TUPLE [LX_WILDCARD]] */
struct S2079 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
struct S2080 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type PREDICATE [TUPLE [STRING_8]] */
struct S2082 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [KL_STRING_ROUTINES, STRING_8] */
struct S2083 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S2085 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S2087 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S2088 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
struct S2089 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table_cursor */
	T0* a2; /* container */
};

/* Struct for type SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
struct S2091 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
struct S2092 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
struct S2093 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S2094 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S2095 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S2096 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
struct S2097 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_FILE_RULE] */
struct S2098 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
struct S2099 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_NAMESPACE] */
struct S2100 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_NAMESPACE] */
struct S2101 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_NAMESPACE] */
struct S2102 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG] */
struct S2103 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_CFLAG] */
struct S2104 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_CFLAG] */
struct S2105 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
struct S2106 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
struct S2107 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
struct S2108 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
struct S2109 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
struct S2110 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
struct S2111 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S2112 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S2113 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S2114 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE] */
struct S2115 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_MAKE] */
struct S2116 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_MAKE] */
struct S2117 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
struct S2118 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
struct S2119 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
struct S2120 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE] */
struct S2121 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_RESOURCE] */
struct S2122 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_RESOURCE] */
struct S2123 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
struct S2124 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
struct S2125 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
struct S2126 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS] */
struct S2127 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_ANDED_CONDITIONS] */
struct S2128 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ANDED_CONDITIONS] */
struct S2129 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM] */
struct S2130 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_CONDITION_ITEM] */
struct S2131 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION_ITEM] */
struct S2132 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type LX_WILDCARD_PARSER */
struct S2134 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* successful */
	T0* a2; /* pending_rules */
	T0* a3; /* start_condition_stack */
	T0* a4; /* action_factory */
	T0* a5; /* old_singleton_lines */
	T0* a6; /* old_singleton_columns */
	T0* a7; /* old_singleton_counts */
	T0* a8; /* old_regexp_lines */
	T0* a9; /* old_regexp_columns */
	T0* a10; /* old_regexp_counts */
	T0* a11; /* unions_of_concatenations_of_symbol_classes_by_utf8_character_class */
	T0* a12; /* buffer */
	T6 a13; /* maximum_used_symbol */
	T0* a14; /* description */
	T0* a15; /* last_string_value */
	T0* a16; /* last_string_32_value */
	T0* a17; /* last_lx_symbol_class_value */
	T0* a18; /* error_handler */
	T0* a19; /* name_definitions */
	T0* a20; /* character_classes */
	T0* a21; /* character_classes_by_name */
	T0* a22; /* equiv_character_classes */
	T0* a23; /* utf8_character_classes_by_name */
	T0* a24; /* utf8_mode */
	T6 a25; /* line_nb */
	T0* a26; /* eiffel_verbatim_marker */
	T0* a27; /* yyss */
	T0* a28; /* input_buffer */
	T6 a29; /* yy_end */
	T6 a30; /* yy_position */
	T6 a31; /* yy_line */
	T6 a32; /* yy_column */
	T6 a33; /* yy_parsing_status */
	T6 a34; /* yy_suspended_yystacksize */
	T6 a35; /* yy_suspended_yystate */
	T6 a36; /* yy_suspended_yyn */
	T6 a37; /* yy_suspended_yychar1 */
	T6 a38; /* yy_suspended_index */
	T6 a39; /* yy_suspended_yyss_top */
	T6 a40; /* yy_suspended_yy_goto */
	T0* a41; /* yyr1 */
	T6 a42; /* yyssp */
	T0* a43; /* yypgoto */
	T0* a44; /* yycheck */
	T0* a45; /* yytable */
	T0* a46; /* yydefgoto */
	T6 a47; /* error_count */
	T1 a48; /* yy_lookahead_needed */
	T6 a49; /* yyerrstatus */
	T0* a50; /* yypact */
	T6 a51; /* last_token */
	T0* a52; /* yytranslate */
	T0* a53; /* yydefact */
	T0* a54; /* yy_pushed_start_conditions */
	T0* a55; /* yyspecial_routines1 */
	T6 a56; /* yyvsc1 */
	T0* a57; /* yyvs1 */
	T0* a58; /* yyspecial_routines2 */
	T6 a59; /* yyvsc2 */
	T0* a60; /* yyvs2 */
	T0* a61; /* yyspecial_routines3 */
	T6 a62; /* yyvsc3 */
	T0* a63; /* yyvs3 */
	T0* a64; /* yyspecial_routines4 */
	T6 a65; /* yyvsc4 */
	T0* a66; /* yyvs4 */
	T0* a67; /* yyspecial_routines5 */
	T6 a68; /* yyvsc5 */
	T0* a69; /* yyvs5 */
	T0* a70; /* yytypes1 */
	T0* a71; /* yytypes2 */
	T6 a72; /* yy_start */
	T6 a73; /* yyvsp1 */
	T6 a74; /* yyvsp2 */
	T6 a75; /* yyvsp3 */
	T6 a76; /* yyvsp4 */
	T6 a77; /* yyvsp5 */
	T1 a78; /* yy_more_flag */
	T6 a79; /* yy_more_len */
	T6 a80; /* line */
	T6 a81; /* column */
	T6 a82; /* position */
	T6 a83; /* yy_start_state */
	T0* a84; /* yy_state_stack */
	T6 a85; /* yy_state_count */
	T0* a86; /* yy_content_area */
	T0* a87; /* yy_unicode_content_area */
	T0* a88; /* yy_accept */
	T6 a89; /* yy_last_accepting_state */
	T6 a90; /* yy_last_accepting_cpos */
	T0* a91; /* yy_content */
	T0* a92; /* yy_ec */
	T0* a93; /* yy_chk */
	T0* a94; /* yy_base */
	T0* a95; /* yy_def */
	T0* a96; /* yy_meta */
	T0* a97; /* yy_nxt */
	T6 a98; /* yy_lp */
	T0* a99; /* yy_acclist */
	T6 a100; /* yy_looking_for_trail_begin */
	T6 a101; /* yy_full_match */
	T6 a102; /* yy_full_state */
	T6 a103; /* yy_full_lp */
	T1 a104; /* yy_rejected */
	T0* a105; /* last_detachable_any_value */
	T6 a106; /* last_integer_value */
	T1 a107; /* in_trail_context */
	T0* a108; /* rule */
	T1 a109; /* has_trail_context */
	T6 a110; /* head_count */
	T6 a111; /* head_line */
	T6 a112; /* head_column */
	T6 a113; /* trail_count */
	T6 a114; /* i_ */
	T6 a115; /* rule_line_nb */
	T1 a116; /* has_bol_context */
};

/* Struct for type LX_DESCRIPTION */
struct S2135 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* maximum_symbol */
	T1 a2; /* utf8_mode */
	T1 a3; /* equiv_classes_used */
	T1 a4; /* full_table */
	T1 a5; /* meta_equiv_classes_used */
	T1 a6; /* reject_used */
	T1 a7; /* variable_trail_context */
	T0* a8; /* rules */
	T0* a9; /* start_conditions */
	T6 a10; /* array_size */
	T1 a11; /* line_pragma */
	T1 a12; /* inspect_used */
	T0* a13; /* eof_rules */
	T0* a14; /* eiffel_header */
	T1 a15; /* case_insensitive */
	T0* a16; /* equiv_classes */
	T1 a17; /* bol_needed */
	T0* a18; /* input_filename */
	T1 a19; /* has_utf8_enconding */
	T1 a20; /* actions_separated */
	T0* a21; /* eiffel_code */
	T1 a22; /* pre_action_used */
	T1 a23; /* post_action_used */
	T1 a24; /* pre_eof_action_used */
	T1 a25; /* post_eof_action_used */
	T1 a26; /* line_used */
	T1 a27; /* position_used */
};

/* Struct for type LX_FULL_DFA */
struct S2136 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* yy_nxt */
	T0* a2; /* yy_accept */
	T0* a3; /* yy_ec */
	T6 a4; /* yyNb_rows */
	T6 a5; /* yyNull_equiv_class */
	T6 a6; /* yyMax_symbol_equiv_class */
	T0* a7; /* input_filename */
	T1 a8; /* has_utf8_enconding */
	T6 a9; /* array_size */
	T1 a10; /* inspect_used */
	T1 a11; /* actions_separated */
	T0* a12; /* eiffel_code */
	T0* a13; /* eiffel_header */
	T1 a14; /* bol_needed */
	T1 a15; /* pre_action_used */
	T1 a16; /* post_action_used */
	T1 a17; /* pre_eof_action_used */
	T1 a18; /* post_eof_action_used */
	T1 a19; /* line_pragma */
	T0* a20; /* yy_start_conditions */
	T6 a21; /* yyNb_rules */
	T0* a22; /* yy_rules */
	T6 a23; /* yyEnd_of_buffer */
	T1 a24; /* yyLine_used */
	T1 a25; /* yyPosition_used */
	T6 a26; /* minimum_symbol */
	T6 a27; /* maximum_symbol */
	T0* a28; /* states */
	T6 a29; /* backing_up_count */
	T0* a30; /* partitions */
	T6 a31; /* start_states_count */
	T1 a32; /* yyBacking_up */
	T0* a33; /* yy_eof_rules */
};

/* Struct for type SPECIAL [LX_WILDCARD] */
struct S2138 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_WILDCARD] */
struct S2141 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
struct S2142 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_LINKABLE [CHARACTER_8] */
struct S2143 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
struct S2145 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
struct S2146 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
struct S2149 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
struct S2150 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S2151 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type ET_UNIVERSE_ERROR */
struct S2152 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* universe */
};

/* Struct for type ET_DOTNET_ASSEMBLY_ERROR */
struct S2153 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* assembly */
};

/* Struct for type AP_OPTION_COMPARATOR */
struct S2154 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_QUICK_SORTER [AP_OPTION] */
struct S2155 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
struct S2158 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* actual_parameters */
	T6 a3; /* tuple_position */
	T0* a4; /* tuple_type */
};

/* Struct for type ET_ACTUAL_PARAMETER_SUBLIST */
struct S2159 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* actual_parameters */
	T6 a2; /* upper */
	T6 a3; /* lower */
};

/* Struct for type TUPLE [ET_ECF_FILE_RULE] */
struct S2162 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PREDICATE [TUPLE [ET_ECF_FILE_RULE]] */
struct S2163 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_FILE_RULE]] */
struct S2165 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_FILE_RULES] */
struct S2166 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_ECF_STATE] */
struct S2167 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
struct S2170 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
struct S2173 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
struct S2174 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST [LX_RULE] */
struct S2175 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_START_CONDITIONS */
struct S2176 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_ACTION_FACTORY */
struct S2177 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
struct S2178 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* position */
	T6 a5; /* count */
	T6 a6; /* capacity */
	T6 a7; /* free_slot */
	T6 a8; /* last_position */
	T0* a9; /* equality_tester */
	T6 a10; /* modulus */
	T6 a11; /* slots_position */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type LX_SYMBOL_CLASS */
struct S2179 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* upper */
	T1 a2; /* is_empty */
	T1 a3; /* is_negated */
	T11 a4; /* first_set */
	T11 a5; /* second_set */
	T11 a6; /* third_set */
	T11 a7; /* fourth_set */
	T0* a8; /* other_sets */
	T6 a9; /* lower */
};

/* Struct for type DS_HASH_TABLE [STRING_32, STRING_8] */
struct S2180 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* special_key_routines */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [LX_SYMBOL_CLASS] */
struct S2181 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* count */
	T6 a10; /* slots_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* internal_cursor */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32] */
struct S2182 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* position */
	T6 a6; /* count */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* free_slot */
	T6 a10; /* last_position */
	T0* a11; /* equality_tester */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type KL_EQUALITY_TESTER [STRING_32] */
struct S2183 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_STACK [BOOLEAN] */
struct S2184 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type KL_SPECIAL_ROUTINES [STRING_32] */
struct S2185 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [STRING_32] */
struct S2186 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
struct S2187 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [LX_SYMBOL_CLASS] */
struct S2188 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_NFA] */
struct S2189 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type LX_NFA */
struct S2190 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* in_trail_context */
	T0* a2; /* states */
};

/* Struct for type SPECIAL [LX_NFA] */
struct S2191 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_RULE */
struct S2192 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* pattern */
	T0* a3; /* action */
	T6 a4; /* head_count */
	T6 a5; /* trail_count */
	T6 a6; /* line_count */
	T6 a7; /* column_count */
	T6 a8; /* line_nb */
	T1 a9; /* has_trail_context */
	T1 a10; /* is_useful */
};

/* Struct for type DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS] */
struct S2193 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type LX_EQUIVALENCE_CLASSES */
struct S2194 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* new_upper */
	T0* a2; /* storage */
};

/* Struct for type LX_UNRECOGNIZED_RULE_ERROR */
struct S2195 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_INVALID_UNICODE_CHARACTER_ERROR */
struct S2196 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_MISSING_QUOTE_ERROR */
struct S2197 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_CLASS_ERROR */
struct S2198 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_ERROR */
struct S2199 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_META_ERROR */
struct S2200 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_REJECT_ERROR */
struct S2201 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
struct S2202 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_CHARACTER_OUT_OF_RANGE_ERROR */
struct S2203 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ARRAY [LX_RULE] */
struct S2204 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [LX_RULE] */
struct S2205 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_DFA_STATE */
struct S2206 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* accepted_rules */
	T0* a2; /* states */
	T0* a3; /* transitions */
	T0* a4; /* accepted_head_rules */
	T6 a5; /* code */
	T6 a6; /* id */
};

/* Struct for type DS_ARRAYED_LIST [LX_NFA_STATE] */
struct S2207 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* equality_tester */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [LX_DFA_STATE] */
struct S2208 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_SYMBOL_PARTITIONS */
struct S2209 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* symbols */
	T0* a2; /* storage */
	T6 a3; /* new_upper */
};

/* Struct for type KL_ARRAY_ROUTINES [LX_RULE] */
struct S2210 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ARRAY [detachable LX_RULE] */
struct S2211 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [detachable LX_RULE] */
struct S2212 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_START_CONDITION */
struct S2213 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* id */
	T1 a3; /* is_exclusive */
	T0* a4; /* patterns */
	T0* a5; /* bol_patterns */
};

/* Struct for type LX_TRANSITION_TABLE [LX_DFA_STATE] */
struct S2214 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* lower */
	T6 a2; /* upper */
	T6 a3; /* minimum_label */
	T6 a4; /* second_minimum_label */
	T6 a5; /* maximum_label */
	T0* a6; /* transitions */
};

/* Struct for type DS_ARRAYED_LIST [LX_NFA] */
struct S2215 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_HASH_TABLE [LX_NFA, INTEGER_32] */
struct S2216 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* count */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* free_slot */
	T6 a8; /* last_position */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type LX_NFA_STATE */
struct S2217 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* in_trail_context */
	T0* a2; /* transition */
	T0* a3; /* epsilon_transition */
	T6 a4; /* id */
	T0* a5; /* accepted_rule */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
struct S2223 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table_cursor */
	T0* a2; /* container */
};

/* Struct for type TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
struct S2224 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PREDICATE [TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
struct S2225 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [DS_HASH_SET [STRING_8]] */
struct S2228 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type DS_LINKABLE [ET_PARENT_FEATURE] */
struct S2230 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type ARRAY [detachable LX_SYMBOL_CLASS] */
struct S2231 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [detachable LX_SYMBOL_CLASS] */
struct S2232 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [detachable DS_HASH_SET [INTEGER_32]] */
struct S2233 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [detachable DS_HASH_SET [INTEGER_32]] */
struct S2234 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
struct S2235 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [LX_SYMBOL_CLASS] */
struct S2236 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
struct S2237 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_AST_NULL_LEAF */
struct S2238 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_RULE] */
struct S2239 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_RULE] */
struct S2240 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_ARRAY_ROUTINES [STRING_8] */
struct S2241 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [LX_START_CONDITION] */
struct S2242 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
struct S2243 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
struct S2244 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
struct S2245 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_EQUALITY_TESTER [LX_SYMBOL_CLASS] */
struct S2246 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
struct S2248 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
struct S2249 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [detachable SPECIAL [NATURAL_64]] */
struct S2250 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [STRING_32, STRING_8] */
struct S2252 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_32] */
struct S2254 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type LX_EPSILON_TRANSITION [LX_NFA_STATE] */
struct S2255 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
};

/* Struct for type LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
struct S2258 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* target */
};

/* Struct for type LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
struct S2259 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* label */
	T0* a2; /* target */
};

/* Struct for type LX_ACTION */
struct S2261 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* text */
};

/* Struct for type ARRAY [DS_BILINKABLE [INTEGER_32]] */
struct S2262 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_BILINKABLE [INTEGER_32] */
struct S2263 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type SPECIAL [DS_BILINKABLE [INTEGER_32]] */
struct S2264 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_BUBBLE_SORTER [LX_NFA_STATE] */
struct S2265 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type DS_BUBBLE_SORTER [LX_RULE] */
struct S2267 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type SPECIAL [LX_NFA_STATE] */
struct S2269 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
struct S2271 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
struct S2272 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [LX_DFA_STATE] */
struct S2274 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
struct S2275 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
struct S2276 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_ARRAY [LX_RULE] */
struct S2277 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32] */
struct S2278 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T0* a16; /* hash_function */
	T6 a17; /* count */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_NFA] */
struct S2279 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
struct S2281 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S2282 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S2283 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type TUPLE [ET_ECF_LIBRARY] */
struct S2284 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S2286 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type KL_COMPARABLE_COMPARATOR [LX_RULE] */
struct S2291 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
struct S2294 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
struct S2297 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
struct S2298 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
struct S2299 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_SYMBOL_CLASS] */
struct S2300 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_ARRAY [STRING_8] */
struct S2301 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_DFA_STATE, INTEGER_32] */
struct S2303 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};


extern T1 GE_default1;
extern T2 GE_default2;
extern T3 GE_default3;
extern T4 GE_default4;
extern T5 GE_default5;
extern T6 GE_default6;
extern T7 GE_default7;
extern T8 GE_default8;
extern T9 GE_default9;
extern T10 GE_default10;
extern T11 GE_default11;
extern T12 GE_default12;
extern T13 GE_default13;
extern T14 GE_default14;
extern T15 GE_default15;
extern T16 GE_default16;
extern T17 GE_default17;
extern T18 GE_default18;
extern T20 GE_default20;
extern T21 GE_default21;
extern T26 GE_default26;
extern T27 GE_default27;
extern T28 GE_default28;
extern T29 GE_default29;
extern T30 GE_default30;
extern T31 GE_default31;
extern T32 GE_default32;
extern T33 GE_default33;
extern T34 GE_default34;
extern T35 GE_default35;
extern T36 GE_default36;
extern T37 GE_default37;
extern T38 GE_default38;
extern T39 GE_default39;
extern T40 GE_default40;
extern T42 GE_default42;
extern T43 GE_default43;
extern T44 GE_default44;
extern T45 GE_default45;
extern T46 GE_default46;
extern T49 GE_default49;
extern T50 GE_default50;
extern T52 GE_default52;
extern T53 GE_default53;
extern T54 GE_default54;
extern T56 GE_default56;
extern T57 GE_default57;
extern T58 GE_default58;
extern T59 GE_default59;
extern T63 GE_default63;
extern T65 GE_default65;
extern T66 GE_default66;
extern T67 GE_default67;
extern T68 GE_default68;
extern T69 GE_default69;
extern T70 GE_default70;
extern T74 GE_default74;
extern T75 GE_default75;
extern T76 GE_default76;
extern T77 GE_default77;
extern T78 GE_default78;
extern T80 GE_default80;
extern T81 GE_default81;
extern T82 GE_default82;
extern T83 GE_default83;
extern T85 GE_default85;
extern T86 GE_default86;
extern T87 GE_default87;
extern T88 GE_default88;
extern T89 GE_default89;
extern T90 GE_default90;
extern T91 GE_default91;
extern T92 GE_default92;
extern T94 GE_default94;
extern T95 GE_default95;
extern T97 GE_default97;
extern T99 GE_default99;
extern T100 GE_default100;
extern T102 GE_default102;
extern T103 GE_default103;
extern T105 GE_default105;
extern T106 GE_default106;
extern T107 GE_default107;
extern T108 GE_default108;
extern T109 GE_default109;
extern T113 GE_default113;
extern T114 GE_default114;
extern T116 GE_default116;
extern T117 GE_default117;
extern T118 GE_default118;
extern T119 GE_default119;
extern T120 GE_default120;
extern T122 GE_default122;
extern T124 GE_default124;
extern T126 GE_default126;
extern T127 GE_default127;
extern T128 GE_default128;
extern T129 GE_default129;
extern T130 GE_default130;
extern T131 GE_default131;
extern T132 GE_default132;
extern T134 GE_default134;
extern T135 GE_default135;
extern T136 GE_default136;
extern T137 GE_default137;
extern T138 GE_default138;
extern T139 GE_default139;
extern T140 GE_default140;
extern T141 GE_default141;
extern T142 GE_default142;
extern T143 GE_default143;
extern T144 GE_default144;
extern T145 GE_default145;
extern T146 GE_default146;
extern T147 GE_default147;
extern T148 GE_default148;
extern T149 GE_default149;
extern T150 GE_default150;
extern T151 GE_default151;
extern T152 GE_default152;
extern T153 GE_default153;
extern T154 GE_default154;
extern T155 GE_default155;
extern T156 GE_default156;
extern T159 GE_default159;
extern T160 GE_default160;
extern T161 GE_default161;
extern T162 GE_default162;
extern T164 GE_default164;
extern T166 GE_default166;
extern T167 GE_default167;
extern T169 GE_default169;
extern T170 GE_default170;
extern T171 GE_default171;
extern T172 GE_default172;
extern T173 GE_default173;
extern T174 GE_default174;
extern T176 GE_default176;
extern T177 GE_default177;
extern T178 GE_default178;
extern T180 GE_default180;
extern T181 GE_default181;
extern T182 GE_default182;
extern T183 GE_default183;
extern T185 GE_default185;
extern T186 GE_default186;
extern T187 GE_default187;
extern T188 GE_default188;
extern T189 GE_default189;
extern T191 GE_default191;
extern T192 GE_default192;
extern T193 GE_default193;
extern T194 GE_default194;
extern T195 GE_default195;
extern T198 GE_default198;
extern T199 GE_default199;
extern T201 GE_default201;
extern T203 GE_default203;
extern T204 GE_default204;
extern T205 GE_default205;
extern T206 GE_default206;
extern T207 GE_default207;
extern T208 GE_default208;
extern T209 GE_default209;
extern T210 GE_default210;
extern T212 GE_default212;
extern T213 GE_default213;
extern T214 GE_default214;
extern T215 GE_default215;
extern T216 GE_default216;
extern T217 GE_default217;
extern T218 GE_default218;
extern T219 GE_default219;
extern T220 GE_default220;
extern T221 GE_default221;
extern T222 GE_default222;
extern T225 GE_default225;
extern T228 GE_default228;
extern T229 GE_default229;
extern T231 GE_default231;
extern T232 GE_default232;
extern T233 GE_default233;
extern T234 GE_default234;
extern T235 GE_default235;
extern T236 GE_default236;
extern T237 GE_default237;
extern T238 GE_default238;
extern T239 GE_default239;
extern T241 GE_default241;
extern T243 GE_default243;
extern T244 GE_default244;
extern T245 GE_default245;
extern T246 GE_default246;
extern T247 GE_default247;
extern T248 GE_default248;
extern T249 GE_default249;
extern T250 GE_default250;
extern T251 GE_default251;
extern T252 GE_default252;
extern T253 GE_default253;
extern T254 GE_default254;
extern T255 GE_default255;
extern T256 GE_default256;
extern T257 GE_default257;
extern T258 GE_default258;
extern T259 GE_default259;
extern T260 GE_default260;
extern T261 GE_default261;
extern T262 GE_default262;
extern T263 GE_default263;
extern T265 GE_default265;
extern T267 GE_default267;
extern T268 GE_default268;
extern T271 GE_default271;
extern T272 GE_default272;
extern T273 GE_default273;
extern T274 GE_default274;
extern T275 GE_default275;
extern T276 GE_default276;
extern T277 GE_default277;
extern T278 GE_default278;
extern T279 GE_default279;
extern T280 GE_default280;
extern T281 GE_default281;
extern T282 GE_default282;
extern T283 GE_default283;
extern T284 GE_default284;
extern T286 GE_default286;
extern T287 GE_default287;
extern T289 GE_default289;
extern T290 GE_default290;
extern T292 GE_default292;
extern T293 GE_default293;
extern T295 GE_default295;
extern T296 GE_default296;
extern T297 GE_default297;
extern T298 GE_default298;
extern T299 GE_default299;
extern T300 GE_default300;
extern T301 GE_default301;
extern T302 GE_default302;
extern T303 GE_default303;
extern T304 GE_default304;
extern T305 GE_default305;
extern T307 GE_default307;
extern T308 GE_default308;
extern T309 GE_default309;
extern T310 GE_default310;
extern T311 GE_default311;
extern T313 GE_default313;
extern T314 GE_default314;
extern T316 GE_default316;
extern T317 GE_default317;
extern T318 GE_default318;
extern T319 GE_default319;
extern T320 GE_default320;
extern T321 GE_default321;
extern T322 GE_default322;
extern T323 GE_default323;
extern T324 GE_default324;
extern T325 GE_default325;
extern T326 GE_default326;
extern T327 GE_default327;
extern T328 GE_default328;
extern T329 GE_default329;
extern T330 GE_default330;
extern T331 GE_default331;
extern T332 GE_default332;
extern T333 GE_default333;
extern T334 GE_default334;
extern T335 GE_default335;
extern T336 GE_default336;
extern T337 GE_default337;
extern T338 GE_default338;
extern T339 GE_default339;
extern T340 GE_default340;
extern T341 GE_default341;
extern T342 GE_default342;
extern T343 GE_default343;
extern T344 GE_default344;
extern T345 GE_default345;
extern T346 GE_default346;
extern T347 GE_default347;
extern T348 GE_default348;
extern T349 GE_default349;
extern T350 GE_default350;
extern T351 GE_default351;
extern T353 GE_default353;
extern T354 GE_default354;
extern T356 GE_default356;
extern T357 GE_default357;
extern T358 GE_default358;
extern T359 GE_default359;
extern T360 GE_default360;
extern T362 GE_default362;
extern T363 GE_default363;
extern T364 GE_default364;
extern T365 GE_default365;
extern T366 GE_default366;
extern T367 GE_default367;
extern T368 GE_default368;
extern T369 GE_default369;
extern T371 GE_default371;
extern T372 GE_default372;
extern T373 GE_default373;
extern T374 GE_default374;
extern T375 GE_default375;
extern T376 GE_default376;
extern T377 GE_default377;
extern T378 GE_default378;
extern T379 GE_default379;
extern T380 GE_default380;
extern T381 GE_default381;
extern T382 GE_default382;
extern T383 GE_default383;
extern T384 GE_default384;
extern T386 GE_default386;
extern T387 GE_default387;
extern T389 GE_default389;
extern T390 GE_default390;
extern T392 GE_default392;
extern T393 GE_default393;
extern T394 GE_default394;
extern T395 GE_default395;
extern T396 GE_default396;
extern T397 GE_default397;
extern T398 GE_default398;
extern T399 GE_default399;
extern T400 GE_default400;
extern T401 GE_default401;
extern T402 GE_default402;
extern T403 GE_default403;
extern T404 GE_default404;
extern T405 GE_default405;
extern T407 GE_default407;
extern T408 GE_default408;
extern T410 GE_default410;
extern T411 GE_default411;
extern T413 GE_default413;
extern T414 GE_default414;
extern T415 GE_default415;
extern T416 GE_default416;
extern T417 GE_default417;
extern T418 GE_default418;
extern T419 GE_default419;
extern T420 GE_default420;
extern T421 GE_default421;
extern T422 GE_default422;
extern T423 GE_default423;
extern T425 GE_default425;
extern T426 GE_default426;
extern T428 GE_default428;
extern T429 GE_default429;
extern T431 GE_default431;
extern T432 GE_default432;
extern T433 GE_default433;
extern T434 GE_default434;
extern T435 GE_default435;
extern T436 GE_default436;
extern T437 GE_default437;
extern T438 GE_default438;
extern T439 GE_default439;
extern T440 GE_default440;
extern T441 GE_default441;
extern T442 GE_default442;
extern T443 GE_default443;
extern T444 GE_default444;
extern T445 GE_default445;
extern T446 GE_default446;
extern T447 GE_default447;
extern T448 GE_default448;
extern T449 GE_default449;
extern T450 GE_default450;
extern T451 GE_default451;
extern T452 GE_default452;
extern T453 GE_default453;
extern T454 GE_default454;
extern T455 GE_default455;
extern T456 GE_default456;
extern T457 GE_default457;
extern T458 GE_default458;
extern T459 GE_default459;
extern T460 GE_default460;
extern T462 GE_default462;
extern T463 GE_default463;
extern T464 GE_default464;
extern T465 GE_default465;
extern T467 GE_default467;
extern T468 GE_default468;
extern T470 GE_default470;
extern T471 GE_default471;
extern T473 GE_default473;
extern T474 GE_default474;
extern T476 GE_default476;
extern T477 GE_default477;
extern T478 GE_default478;
extern T479 GE_default479;
extern T480 GE_default480;
extern T481 GE_default481;
extern T482 GE_default482;
extern T483 GE_default483;
extern T484 GE_default484;
extern T485 GE_default485;
extern T486 GE_default486;
extern T487 GE_default487;
extern T489 GE_default489;
extern T490 GE_default490;
extern T491 GE_default491;
extern T492 GE_default492;
extern T493 GE_default493;
extern T495 GE_default495;
extern T496 GE_default496;
extern T497 GE_default497;
extern T498 GE_default498;
extern T499 GE_default499;
extern T500 GE_default500;
extern T501 GE_default501;
extern T502 GE_default502;
extern T504 GE_default504;
extern T505 GE_default505;
extern T506 GE_default506;
extern T507 GE_default507;
extern T508 GE_default508;
extern T509 GE_default509;
extern T510 GE_default510;
extern T511 GE_default511;
extern T512 GE_default512;
extern T513 GE_default513;
extern T514 GE_default514;
extern T516 GE_default516;
extern T517 GE_default517;
extern T518 GE_default518;
extern T519 GE_default519;
extern T520 GE_default520;
extern T522 GE_default522;
extern T523 GE_default523;
extern T524 GE_default524;
extern T525 GE_default525;
extern T526 GE_default526;
extern T527 GE_default527;
extern T528 GE_default528;
extern T529 GE_default529;
extern T530 GE_default530;
extern T531 GE_default531;
extern T532 GE_default532;
extern T533 GE_default533;
extern T534 GE_default534;
extern T535 GE_default535;
extern T537 GE_default537;
extern T538 GE_default538;
extern T539 GE_default539;
extern T540 GE_default540;
extern T541 GE_default541;
extern T542 GE_default542;
extern T543 GE_default543;
extern T545 GE_default545;
extern T546 GE_default546;
extern T547 GE_default547;
extern T548 GE_default548;
extern T549 GE_default549;
extern T551 GE_default551;
extern T552 GE_default552;
extern T553 GE_default553;
extern T554 GE_default554;
extern T555 GE_default555;
extern T556 GE_default556;
extern T557 GE_default557;
extern T558 GE_default558;
extern T559 GE_default559;
extern T560 GE_default560;
extern T561 GE_default561;
extern T563 GE_default563;
extern T564 GE_default564;
extern T565 GE_default565;
extern T566 GE_default566;
extern T567 GE_default567;
extern T568 GE_default568;
extern T569 GE_default569;
extern T570 GE_default570;
extern T571 GE_default571;
extern T572 GE_default572;
extern T573 GE_default573;
extern T575 GE_default575;
extern T576 GE_default576;
extern T578 GE_default578;
extern T579 GE_default579;
extern T581 GE_default581;
extern T582 GE_default582;
extern T583 GE_default583;
extern T584 GE_default584;
extern T585 GE_default585;
extern T587 GE_default587;
extern T588 GE_default588;
extern T589 GE_default589;
extern T590 GE_default590;
extern T591 GE_default591;
extern T592 GE_default592;
extern T593 GE_default593;
extern T594 GE_default594;
extern T595 GE_default595;
extern T596 GE_default596;
extern T597 GE_default597;
extern T598 GE_default598;
extern T599 GE_default599;
extern T600 GE_default600;
extern T601 GE_default601;
extern T602 GE_default602;
extern T603 GE_default603;
extern T604 GE_default604;
extern T605 GE_default605;
extern T606 GE_default606;
extern T608 GE_default608;
extern T609 GE_default609;
extern T611 GE_default611;
extern T612 GE_default612;
extern T613 GE_default613;
extern T614 GE_default614;
extern T615 GE_default615;
extern T617 GE_default617;
extern T618 GE_default618;
extern T620 GE_default620;
extern T621 GE_default621;
extern T622 GE_default622;
extern T623 GE_default623;
extern T624 GE_default624;
extern T625 GE_default625;
extern T626 GE_default626;
extern T627 GE_default627;
extern T628 GE_default628;
extern T629 GE_default629;
extern T630 GE_default630;
extern T631 GE_default631;
extern T632 GE_default632;
extern T633 GE_default633;
extern T634 GE_default634;
extern T636 GE_default636;
extern T637 GE_default637;
extern T639 GE_default639;
extern T640 GE_default640;
extern T641 GE_default641;
extern T642 GE_default642;
extern T643 GE_default643;
extern T645 GE_default645;
extern T646 GE_default646;
extern T648 GE_default648;
extern T649 GE_default649;
extern T650 GE_default650;
extern T651 GE_default651;
extern T652 GE_default652;
extern T653 GE_default653;
extern T654 GE_default654;
extern T655 GE_default655;
extern T656 GE_default656;
extern T657 GE_default657;
extern T658 GE_default658;
extern T659 GE_default659;
extern T660 GE_default660;
extern T661 GE_default661;
extern T662 GE_default662;
extern T663 GE_default663;
extern T664 GE_default664;
extern T666 GE_default666;
extern T668 GE_default668;
extern T669 GE_default669;
extern T670 GE_default670;
extern T671 GE_default671;
extern T672 GE_default672;
extern T673 GE_default673;
extern T674 GE_default674;
extern T675 GE_default675;
extern T676 GE_default676;
extern T677 GE_default677;
extern T678 GE_default678;
extern T679 GE_default679;
extern T680 GE_default680;
extern T681 GE_default681;
extern T683 GE_default683;
extern T684 GE_default684;
extern T685 GE_default685;
extern T686 GE_default686;
extern T688 GE_default688;
extern T689 GE_default689;
extern T690 GE_default690;
extern T691 GE_default691;
extern T692 GE_default692;
extern T693 GE_default693;
extern T694 GE_default694;
extern T695 GE_default695;
extern T696 GE_default696;
extern T697 GE_default697;
extern T699 GE_default699;
extern T700 GE_default700;
extern T702 GE_default702;
extern T703 GE_default703;
extern T704 GE_default704;
extern T705 GE_default705;
extern T706 GE_default706;
extern T707 GE_default707;
extern T708 GE_default708;
extern T710 GE_default710;
extern T711 GE_default711;
extern T712 GE_default712;
extern T713 GE_default713;
extern T714 GE_default714;
extern T715 GE_default715;
extern T716 GE_default716;
extern T719 GE_default719;
extern T720 GE_default720;
extern T722 GE_default722;
extern T724 GE_default724;
extern T725 GE_default725;
extern T726 GE_default726;
extern T727 GE_default727;
extern T728 GE_default728;
extern T729 GE_default729;
extern T731 GE_default731;
extern T732 GE_default732;
extern T734 GE_default734;
extern T735 GE_default735;
extern T736 GE_default736;
extern T737 GE_default737;
extern T739 GE_default739;
extern T740 GE_default740;
extern T741 GE_default741;
extern T742 GE_default742;
extern T743 GE_default743;
extern T744 GE_default744;
extern T745 GE_default745;
extern T746 GE_default746;
extern T747 GE_default747;
extern T748 GE_default748;
extern T749 GE_default749;
extern T750 GE_default750;
extern T751 GE_default751;
extern T752 GE_default752;
extern T753 GE_default753;
extern T754 GE_default754;
extern T755 GE_default755;
extern T756 GE_default756;
extern T757 GE_default757;
extern T759 GE_default759;
extern T760 GE_default760;
extern T761 GE_default761;
extern T762 GE_default762;
extern T763 GE_default763;
extern T764 GE_default764;
extern T765 GE_default765;
extern T766 GE_default766;
extern T769 GE_default769;
extern T770 GE_default770;
extern T772 GE_default772;
extern T774 GE_default774;
extern T775 GE_default775;
extern T776 GE_default776;
extern T777 GE_default777;
extern T778 GE_default778;
extern T779 GE_default779;
extern T780 GE_default780;
extern T781 GE_default781;
extern T782 GE_default782;
extern T783 GE_default783;
extern T784 GE_default784;
extern T785 GE_default785;
extern T786 GE_default786;
extern T787 GE_default787;
extern T788 GE_default788;
extern T789 GE_default789;
extern T791 GE_default791;
extern T792 GE_default792;
extern T793 GE_default793;
extern T795 GE_default795;
extern T796 GE_default796;
extern T799 GE_default799;
extern T800 GE_default800;
extern T801 GE_default801;
extern T802 GE_default802;
extern T804 GE_default804;
extern T805 GE_default805;
extern T806 GE_default806;
extern T807 GE_default807;
extern T809 GE_default809;
extern T810 GE_default810;
extern T811 GE_default811;
extern T812 GE_default812;
extern T813 GE_default813;
extern T814 GE_default814;
extern T815 GE_default815;
extern T816 GE_default816;
extern T817 GE_default817;
extern T818 GE_default818;
extern T820 GE_default820;
extern T821 GE_default821;
extern T822 GE_default822;
extern T824 GE_default824;
extern T826 GE_default826;
extern T827 GE_default827;
extern T828 GE_default828;
extern T829 GE_default829;
extern T830 GE_default830;
extern T831 GE_default831;
extern T832 GE_default832;
extern T833 GE_default833;
extern T835 GE_default835;
extern T837 GE_default837;
extern T838 GE_default838;
extern T839 GE_default839;
extern T840 GE_default840;
extern T841 GE_default841;
extern T842 GE_default842;
extern T843 GE_default843;
extern T845 GE_default845;
extern T847 GE_default847;
extern T848 GE_default848;
extern T849 GE_default849;
extern T850 GE_default850;
extern T853 GE_default853;
extern T854 GE_default854;
extern T855 GE_default855;
extern T857 GE_default857;
extern T858 GE_default858;
extern T859 GE_default859;
extern T860 GE_default860;
extern T861 GE_default861;
extern T862 GE_default862;
extern T864 GE_default864;
extern T867 GE_default867;
extern T868 GE_default868;
extern T869 GE_default869;
extern T870 GE_default870;
extern T871 GE_default871;
extern T872 GE_default872;
extern T873 GE_default873;
extern T874 GE_default874;
extern T875 GE_default875;
extern T876 GE_default876;
extern T877 GE_default877;
extern T878 GE_default878;
extern T879 GE_default879;
extern T880 GE_default880;
extern T881 GE_default881;
extern T882 GE_default882;
extern T883 GE_default883;
extern T884 GE_default884;
extern T885 GE_default885;
extern T886 GE_default886;
extern T888 GE_default888;
extern T889 GE_default889;
extern T894 GE_default894;
extern T897 GE_default897;
extern T899 GE_default899;
extern T900 GE_default900;
extern T902 GE_default902;
extern T903 GE_default903;
extern T904 GE_default904;
extern T906 GE_default906;
extern T907 GE_default907;
extern T908 GE_default908;
extern T909 GE_default909;
extern T910 GE_default910;
extern T911 GE_default911;
extern T912 GE_default912;
extern T913 GE_default913;
extern T914 GE_default914;
extern T915 GE_default915;
extern T916 GE_default916;
extern T917 GE_default917;
extern T918 GE_default918;
extern T919 GE_default919;
extern T920 GE_default920;
extern T921 GE_default921;
extern T922 GE_default922;
extern T923 GE_default923;
extern T924 GE_default924;
extern T925 GE_default925;
extern T926 GE_default926;
extern T927 GE_default927;
extern T928 GE_default928;
extern T929 GE_default929;
extern T930 GE_default930;
extern T931 GE_default931;
extern T932 GE_default932;
extern T933 GE_default933;
extern T934 GE_default934;
extern T935 GE_default935;
extern T937 GE_default937;
extern T938 GE_default938;
extern T939 GE_default939;
extern T940 GE_default940;
extern T941 GE_default941;
extern T942 GE_default942;
extern T943 GE_default943;
extern T944 GE_default944;
extern T945 GE_default945;
extern T946 GE_default946;
extern T947 GE_default947;
extern T948 GE_default948;
extern T949 GE_default949;
extern T950 GE_default950;
extern T951 GE_default951;
extern T952 GE_default952;
extern T953 GE_default953;
extern T954 GE_default954;
extern T955 GE_default955;
extern T956 GE_default956;
extern T957 GE_default957;
extern T958 GE_default958;
extern T961 GE_default961;
extern T962 GE_default962;
extern T963 GE_default963;
extern T965 GE_default965;
extern T966 GE_default966;
extern T968 GE_default968;
extern T969 GE_default969;
extern T970 GE_default970;
extern T976 GE_default976;
extern T980 GE_default980;
extern T981 GE_default981;
extern T982 GE_default982;
extern T984 GE_default984;
extern T985 GE_default985;
extern T986 GE_default986;
extern T987 GE_default987;
extern T988 GE_default988;
extern T989 GE_default989;
extern T994 GE_default994;
extern T995 GE_default995;
extern T999 GE_default999;
extern T1004 GE_default1004;
extern T1005 GE_default1005;
extern T1006 GE_default1006;
extern T1007 GE_default1007;
extern T1008 GE_default1008;
extern T1011 GE_default1011;
extern T1012 GE_default1012;
extern T1014 GE_default1014;
extern T1015 GE_default1015;
extern T1017 GE_default1017;
extern T1019 GE_default1019;
extern T1020 GE_default1020;
extern T1022 GE_default1022;
extern T1023 GE_default1023;
extern T1024 GE_default1024;
extern T1029 GE_default1029;
extern T1032 GE_default1032;
extern T1033 GE_default1033;
extern T1034 GE_default1034;
extern T1035 GE_default1035;
extern T1038 GE_default1038;
extern T1040 GE_default1040;
extern T1042 GE_default1042;
extern T1043 GE_default1043;
extern T1044 GE_default1044;
extern T1045 GE_default1045;
extern T1047 GE_default1047;
extern T1048 GE_default1048;
extern T1049 GE_default1049;
extern T1050 GE_default1050;
extern T1051 GE_default1051;
extern T1052 GE_default1052;
extern T1053 GE_default1053;
extern T1056 GE_default1056;
extern T1058 GE_default1058;
extern T1059 GE_default1059;
extern T1060 GE_default1060;
extern T1061 GE_default1061;
extern T1062 GE_default1062;
extern T1063 GE_default1063;
extern T1064 GE_default1064;
extern T1065 GE_default1065;
extern T1066 GE_default1066;
extern T1067 GE_default1067;
extern T1068 GE_default1068;
extern T1069 GE_default1069;
extern T1070 GE_default1070;
extern T1073 GE_default1073;
extern T1074 GE_default1074;
extern T1075 GE_default1075;
extern T1076 GE_default1076;
extern T1078 GE_default1078;
extern T1079 GE_default1079;
extern T1080 GE_default1080;
extern T1081 GE_default1081;
extern T1083 GE_default1083;
extern T1085 GE_default1085;
extern T1086 GE_default1086;
extern T1087 GE_default1087;
extern T1089 GE_default1089;
extern T1090 GE_default1090;
extern T1091 GE_default1091;
extern T1092 GE_default1092;
extern T1093 GE_default1093;
extern T1094 GE_default1094;
extern T1096 GE_default1096;
extern T1097 GE_default1097;
extern T1098 GE_default1098;
extern T1099 GE_default1099;
extern T1100 GE_default1100;
extern T1101 GE_default1101;
extern T1102 GE_default1102;
extern T1103 GE_default1103;
extern T1104 GE_default1104;
extern T1105 GE_default1105;
extern T1106 GE_default1106;
extern T1107 GE_default1107;
extern T1109 GE_default1109;
extern T1110 GE_default1110;
extern T1111 GE_default1111;
extern T1112 GE_default1112;
extern T1113 GE_default1113;
extern T1114 GE_default1114;
extern T1115 GE_default1115;
extern T1117 GE_default1117;
extern T1118 GE_default1118;
extern T1120 GE_default1120;
extern T1121 GE_default1121;
extern T1122 GE_default1122;
extern T1123 GE_default1123;
extern T1124 GE_default1124;
extern T1125 GE_default1125;
extern T1126 GE_default1126;
extern T1127 GE_default1127;
extern T1128 GE_default1128;
extern T1129 GE_default1129;
extern T1130 GE_default1130;
extern T1131 GE_default1131;
extern T1132 GE_default1132;
extern T1133 GE_default1133;
extern T1134 GE_default1134;
extern T1135 GE_default1135;
extern T1136 GE_default1136;
extern T1137 GE_default1137;
extern T1138 GE_default1138;
extern T1139 GE_default1139;
extern T1140 GE_default1140;
extern T1141 GE_default1141;
extern T1142 GE_default1142;
extern T1144 GE_default1144;
extern T1145 GE_default1145;
extern T1146 GE_default1146;
extern T1147 GE_default1147;
extern T1148 GE_default1148;
extern T1149 GE_default1149;
extern T1150 GE_default1150;
extern T1151 GE_default1151;
extern T1152 GE_default1152;
extern T1153 GE_default1153;
extern T1154 GE_default1154;
extern T1155 GE_default1155;
extern T1156 GE_default1156;
extern T1157 GE_default1157;
extern T1158 GE_default1158;
extern T1159 GE_default1159;
extern T1160 GE_default1160;
extern T1161 GE_default1161;
extern T1162 GE_default1162;
extern T1163 GE_default1163;
extern T1164 GE_default1164;
extern T1165 GE_default1165;
extern T1166 GE_default1166;
extern T1167 GE_default1167;
extern T1168 GE_default1168;
extern T1169 GE_default1169;
extern T1171 GE_default1171;
extern T1173 GE_default1173;
extern T1175 GE_default1175;
extern T1176 GE_default1176;
extern T1178 GE_default1178;
extern T1179 GE_default1179;
extern T1180 GE_default1180;
extern T1181 GE_default1181;
extern T1182 GE_default1182;
extern T1183 GE_default1183;
extern T1184 GE_default1184;
extern T1185 GE_default1185;
extern T1186 GE_default1186;
extern T1187 GE_default1187;
extern T1188 GE_default1188;
extern T1189 GE_default1189;
extern T1190 GE_default1190;
extern T1193 GE_default1193;
extern T1194 GE_default1194;
extern T1197 GE_default1197;
extern T1198 GE_default1198;
extern T1199 GE_default1199;
extern T1200 GE_default1200;
extern T1202 GE_default1202;
extern T1203 GE_default1203;
extern T1204 GE_default1204;
extern T1205 GE_default1205;
extern T1207 GE_default1207;
extern T1209 GE_default1209;
extern T1210 GE_default1210;
extern T1211 GE_default1211;
extern T1212 GE_default1212;
extern T1213 GE_default1213;
extern T1214 GE_default1214;
extern T1215 GE_default1215;
extern T1216 GE_default1216;
extern T1217 GE_default1217;
extern T1218 GE_default1218;
extern T1219 GE_default1219;
extern T1220 GE_default1220;
extern T1221 GE_default1221;
extern T1222 GE_default1222;
extern T1223 GE_default1223;
extern T1224 GE_default1224;
extern T1225 GE_default1225;
extern T1226 GE_default1226;
extern T1227 GE_default1227;
extern T1228 GE_default1228;
extern T1229 GE_default1229;
extern T1230 GE_default1230;
extern T1231 GE_default1231;
extern T1232 GE_default1232;
extern T1233 GE_default1233;
extern T1234 GE_default1234;
extern T1237 GE_default1237;
extern T1238 GE_default1238;
extern T1240 GE_default1240;
extern T1241 GE_default1241;
extern T1242 GE_default1242;
extern T1243 GE_default1243;
extern T1244 GE_default1244;
extern T1245 GE_default1245;
extern T1248 GE_default1248;
extern T1250 GE_default1250;
extern T1251 GE_default1251;
extern T1252 GE_default1252;
extern T1253 GE_default1253;
extern T1255 GE_default1255;
extern T1257 GE_default1257;
extern T1258 GE_default1258;
extern T1259 GE_default1259;
extern T1260 GE_default1260;
extern T1264 GE_default1264;
extern T1265 GE_default1265;
extern T1266 GE_default1266;
extern T1267 GE_default1267;
extern T1268 GE_default1268;
extern T1269 GE_default1269;
extern T1270 GE_default1270;
extern T1271 GE_default1271;
extern T1272 GE_default1272;
extern T1273 GE_default1273;
extern T1275 GE_default1275;
extern T1276 GE_default1276;
extern T1277 GE_default1277;
extern T1279 GE_default1279;
extern T1280 GE_default1280;
extern T1281 GE_default1281;
extern T1283 GE_default1283;
extern T1284 GE_default1284;
extern T1285 GE_default1285;
extern T1287 GE_default1287;
extern T1288 GE_default1288;
extern T1289 GE_default1289;
extern T1290 GE_default1290;
extern T1291 GE_default1291;
extern T1292 GE_default1292;
extern T1293 GE_default1293;
extern T1294 GE_default1294;
extern T1295 GE_default1295;
extern T1296 GE_default1296;
extern T1297 GE_default1297;
extern T1298 GE_default1298;
extern T1299 GE_default1299;
extern T1300 GE_default1300;
extern T1301 GE_default1301;
extern T1302 GE_default1302;
extern T1303 GE_default1303;
extern T1304 GE_default1304;
extern T1305 GE_default1305;
extern T1306 GE_default1306;
extern T1307 GE_default1307;
extern T1308 GE_default1308;
extern T1309 GE_default1309;
extern T1310 GE_default1310;
extern T1311 GE_default1311;
extern T1314 GE_default1314;
extern T1315 GE_default1315;
extern T1317 GE_default1317;
extern T1319 GE_default1319;
extern T1320 GE_default1320;
extern T1322 GE_default1322;
extern T1323 GE_default1323;
extern T1324 GE_default1324;
extern T1325 GE_default1325;
extern T1326 GE_default1326;
extern T1329 GE_default1329;
extern T1330 GE_default1330;
extern T1331 GE_default1331;
extern T1332 GE_default1332;
extern T1333 GE_default1333;
extern T1334 GE_default1334;
extern T1335 GE_default1335;
extern T1336 GE_default1336;
extern T1337 GE_default1337;
extern T1338 GE_default1338;
extern T1339 GE_default1339;
extern T1340 GE_default1340;
extern T1341 GE_default1341;
extern T1342 GE_default1342;
extern T1343 GE_default1343;
extern T1344 GE_default1344;
extern T1345 GE_default1345;
extern T1346 GE_default1346;
extern T1347 GE_default1347;
extern T1350 GE_default1350;
extern T1352 GE_default1352;
extern T1353 GE_default1353;
extern T1354 GE_default1354;
extern T1355 GE_default1355;
extern T1356 GE_default1356;
extern T1357 GE_default1357;
extern T1358 GE_default1358;
extern T1359 GE_default1359;
extern T1360 GE_default1360;
extern T1361 GE_default1361;
extern T1362 GE_default1362;
extern T1363 GE_default1363;
extern T1364 GE_default1364;
extern T1365 GE_default1365;
extern T1366 GE_default1366;
extern T1367 GE_default1367;
extern T1368 GE_default1368;
extern T1369 GE_default1369;
extern T1370 GE_default1370;
extern T1371 GE_default1371;
extern T1372 GE_default1372;
extern T1373 GE_default1373;
extern T1374 GE_default1374;
extern T1375 GE_default1375;
extern T1376 GE_default1376;
extern T1377 GE_default1377;
extern T1378 GE_default1378;
extern T1379 GE_default1379;
extern T1380 GE_default1380;
extern T1381 GE_default1381;
extern T1382 GE_default1382;
extern T1383 GE_default1383;
extern T1384 GE_default1384;
extern T1385 GE_default1385;
extern T1387 GE_default1387;
extern T1388 GE_default1388;
extern T1389 GE_default1389;
extern T1390 GE_default1390;
extern T1393 GE_default1393;
extern T1394 GE_default1394;
extern T1395 GE_default1395;
extern T1396 GE_default1396;
extern T1397 GE_default1397;
extern T1398 GE_default1398;
extern T1399 GE_default1399;
extern T1400 GE_default1400;
extern T1401 GE_default1401;
extern T1403 GE_default1403;
extern T1404 GE_default1404;
extern T1405 GE_default1405;
extern T1407 GE_default1407;
extern T1408 GE_default1408;
extern T1410 GE_default1410;
extern T1411 GE_default1411;
extern T1412 GE_default1412;
extern T1413 GE_default1413;
extern T1414 GE_default1414;
extern T1415 GE_default1415;
extern T1416 GE_default1416;
extern T1417 GE_default1417;
extern T1418 GE_default1418;
extern T1419 GE_default1419;
extern T1422 GE_default1422;
extern T1425 GE_default1425;
extern T1427 GE_default1427;
extern T1428 GE_default1428;
extern T1429 GE_default1429;
extern T1430 GE_default1430;
extern T1432 GE_default1432;
extern T1433 GE_default1433;
extern T1434 GE_default1434;
extern T1435 GE_default1435;
extern T1436 GE_default1436;
extern T1438 GE_default1438;
extern T1439 GE_default1439;
extern T1441 GE_default1441;
extern T1442 GE_default1442;
extern T1443 GE_default1443;
extern T1444 GE_default1444;
extern T1445 GE_default1445;
extern T1446 GE_default1446;
extern T1447 GE_default1447;
extern T1448 GE_default1448;
extern T1450 GE_default1450;
extern T1453 GE_default1453;
extern T1454 GE_default1454;
extern T1455 GE_default1455;
extern T1456 GE_default1456;
extern T1457 GE_default1457;
extern T1458 GE_default1458;
extern T1459 GE_default1459;
extern T1460 GE_default1460;
extern T1461 GE_default1461;
extern T1462 GE_default1462;
extern T1463 GE_default1463;
extern T1464 GE_default1464;
extern T1465 GE_default1465;
extern T1466 GE_default1466;
extern T1467 GE_default1467;
extern T1468 GE_default1468;
extern T1469 GE_default1469;
extern T1470 GE_default1470;
extern T1471 GE_default1471;
extern T1473 GE_default1473;
extern T1474 GE_default1474;
extern T1475 GE_default1475;
extern T1476 GE_default1476;
extern T1477 GE_default1477;
extern T1478 GE_default1478;
extern T1479 GE_default1479;
extern T1480 GE_default1480;
extern T1481 GE_default1481;
extern T1482 GE_default1482;
extern T1483 GE_default1483;
extern T1484 GE_default1484;
extern T1485 GE_default1485;
extern T1486 GE_default1486;
extern T1487 GE_default1487;
extern T1488 GE_default1488;
extern T1489 GE_default1489;
extern T1490 GE_default1490;
extern T1491 GE_default1491;
extern T1492 GE_default1492;
extern T1494 GE_default1494;
extern T1495 GE_default1495;
extern T1496 GE_default1496;
extern T1497 GE_default1497;
extern T1498 GE_default1498;
extern T1499 GE_default1499;
extern T1500 GE_default1500;
extern T1502 GE_default1502;
extern T1503 GE_default1503;
extern T1505 GE_default1505;
extern T1506 GE_default1506;
extern T1507 GE_default1507;
extern T1508 GE_default1508;
extern T1509 GE_default1509;
extern T1510 GE_default1510;
extern T1512 GE_default1512;
extern T1513 GE_default1513;
extern T1514 GE_default1514;
extern T1515 GE_default1515;
extern T1516 GE_default1516;
extern T1517 GE_default1517;
extern T1518 GE_default1518;
extern T1519 GE_default1519;
extern T1520 GE_default1520;
extern T1521 GE_default1521;
extern T1522 GE_default1522;
extern T1523 GE_default1523;
extern T1524 GE_default1524;
extern T1525 GE_default1525;
extern T1526 GE_default1526;
extern T1527 GE_default1527;
extern T1528 GE_default1528;
extern T1529 GE_default1529;
extern T1530 GE_default1530;
extern T1531 GE_default1531;
extern T1532 GE_default1532;
extern T1533 GE_default1533;
extern T1534 GE_default1534;
extern T1535 GE_default1535;
extern T1538 GE_default1538;
extern T1542 GE_default1542;
extern T1543 GE_default1543;
extern T1544 GE_default1544;
extern T1545 GE_default1545;
extern T1546 GE_default1546;
extern T1547 GE_default1547;
extern T1548 GE_default1548;
extern T1552 GE_default1552;
extern T1553 GE_default1553;
extern T1555 GE_default1555;
extern T1556 GE_default1556;
extern T1559 GE_default1559;
extern T1561 GE_default1561;
extern T1562 GE_default1562;
extern T1563 GE_default1563;
extern T1564 GE_default1564;
extern T1566 GE_default1566;
extern T1574 GE_default1574;
extern T1576 GE_default1576;
extern T1577 GE_default1577;
extern T1578 GE_default1578;
extern T1579 GE_default1579;
extern T1580 GE_default1580;
extern T1582 GE_default1582;
extern T1583 GE_default1583;
extern T1584 GE_default1584;
extern T1586 GE_default1586;
extern T1587 GE_default1587;
extern T1589 GE_default1589;
extern T1590 GE_default1590;
extern T1591 GE_default1591;
extern T1592 GE_default1592;
extern T1593 GE_default1593;
extern T1594 GE_default1594;
extern T1595 GE_default1595;
extern T1596 GE_default1596;
extern T1598 GE_default1598;
extern T1599 GE_default1599;
extern T1600 GE_default1600;
extern T1601 GE_default1601;
extern T1603 GE_default1603;
extern T1605 GE_default1605;
extern T1606 GE_default1606;
extern T1608 GE_default1608;
extern T1609 GE_default1609;
extern T1610 GE_default1610;
extern T1611 GE_default1611;
extern T1612 GE_default1612;
extern T1613 GE_default1613;
extern T1615 GE_default1615;
extern T1616 GE_default1616;
extern T1617 GE_default1617;
extern T1618 GE_default1618;
extern T1619 GE_default1619;
extern T1620 GE_default1620;
extern T1622 GE_default1622;
extern T1624 GE_default1624;
extern T1626 GE_default1626;
extern T1627 GE_default1627;
extern T1628 GE_default1628;
extern T1629 GE_default1629;
extern T1630 GE_default1630;
extern T1631 GE_default1631;
extern T1632 GE_default1632;
extern T1634 GE_default1634;
extern T1635 GE_default1635;
extern T1636 GE_default1636;
extern T1643 GE_default1643;
extern T1644 GE_default1644;
extern T1645 GE_default1645;
extern T1647 GE_default1647;
extern T1648 GE_default1648;
extern T1649 GE_default1649;
extern T1650 GE_default1650;
extern T1652 GE_default1652;
extern T1653 GE_default1653;
extern T1654 GE_default1654;
extern T1655 GE_default1655;
extern T1656 GE_default1656;
extern T1658 GE_default1658;
extern T1659 GE_default1659;
extern T1660 GE_default1660;
extern T1661 GE_default1661;
extern T1662 GE_default1662;
extern T1663 GE_default1663;
extern T1664 GE_default1664;
extern T1665 GE_default1665;
extern T1666 GE_default1666;
extern T1667 GE_default1667;
extern T1669 GE_default1669;
extern T1670 GE_default1670;
extern T1671 GE_default1671;
extern T1672 GE_default1672;
extern T1673 GE_default1673;
extern T1676 GE_default1676;
extern T1677 GE_default1677;
extern T1678 GE_default1678;
extern T1680 GE_default1680;
extern T1681 GE_default1681;
extern T1682 GE_default1682;
extern T1683 GE_default1683;
extern T1685 GE_default1685;
extern T1686 GE_default1686;
extern T1687 GE_default1687;
extern T1688 GE_default1688;
extern T1689 GE_default1689;
extern T1690 GE_default1690;
extern T1692 GE_default1692;
extern T1693 GE_default1693;
extern T1694 GE_default1694;
extern T1695 GE_default1695;
extern T1696 GE_default1696;
extern T1698 GE_default1698;
extern T1700 GE_default1700;
extern T1701 GE_default1701;
extern T1702 GE_default1702;
extern T1703 GE_default1703;
extern T1704 GE_default1704;
extern T1705 GE_default1705;
extern T1706 GE_default1706;
extern T1709 GE_default1709;
extern T1711 GE_default1711;
extern T1712 GE_default1712;
extern T1715 GE_default1715;
extern T1719 GE_default1719;
extern T1720 GE_default1720;
extern T1721 GE_default1721;
extern T1724 GE_default1724;
extern T1725 GE_default1725;
extern T1726 GE_default1726;
extern T1727 GE_default1727;
extern T1728 GE_default1728;
extern T1729 GE_default1729;
extern T1730 GE_default1730;
extern T1733 GE_default1733;
extern T1734 GE_default1734;
extern T1737 GE_default1737;
extern T1738 GE_default1738;
extern T1739 GE_default1739;
extern T1740 GE_default1740;
extern T1741 GE_default1741;
extern T1742 GE_default1742;
extern T1743 GE_default1743;
extern T1744 GE_default1744;
extern T1747 GE_default1747;
extern T1748 GE_default1748;
extern T1749 GE_default1749;
extern T1750 GE_default1750;
extern T1751 GE_default1751;
extern T1752 GE_default1752;
extern T1753 GE_default1753;
extern T1755 GE_default1755;
extern T1756 GE_default1756;
extern T1758 GE_default1758;
extern T1760 GE_default1760;
extern T1762 GE_default1762;
extern T1763 GE_default1763;
extern T1764 GE_default1764;
extern T1765 GE_default1765;
extern T1767 GE_default1767;
extern T1768 GE_default1768;
extern T1769 GE_default1769;
extern T1770 GE_default1770;
extern T1771 GE_default1771;
extern T1772 GE_default1772;
extern T1774 GE_default1774;
extern T1775 GE_default1775;
extern T1776 GE_default1776;
extern T1777 GE_default1777;
extern T1778 GE_default1778;
extern T1779 GE_default1779;
extern T1780 GE_default1780;
extern T1785 GE_default1785;
extern T1789 GE_default1789;
extern T1790 GE_default1790;
extern T1791 GE_default1791;
extern T1792 GE_default1792;
extern T1794 GE_default1794;
extern T1796 GE_default1796;
extern T1797 GE_default1797;
extern T1798 GE_default1798;
extern T1799 GE_default1799;
extern T1800 GE_default1800;
extern T1801 GE_default1801;
extern T1803 GE_default1803;
extern T1804 GE_default1804;
extern T1805 GE_default1805;
extern T1806 GE_default1806;
extern T1807 GE_default1807;
extern T1808 GE_default1808;
extern T1809 GE_default1809;
extern T1811 GE_default1811;
extern T1812 GE_default1812;
extern T1813 GE_default1813;
extern T1814 GE_default1814;
extern T1821 GE_default1821;
extern T1822 GE_default1822;
extern T1823 GE_default1823;
extern T1825 GE_default1825;
extern T1827 GE_default1827;
extern T1830 GE_default1830;
extern T1834 GE_default1834;
extern T1838 GE_default1838;
extern T1840 GE_default1840;
extern T1841 GE_default1841;
extern T1842 GE_default1842;
extern T1844 GE_default1844;
extern T1859 GE_default1859;
extern T1862 GE_default1862;
extern T1866 GE_default1866;
extern T1867 GE_default1867;
extern T1868 GE_default1868;
extern T1870 GE_default1870;
extern T1873 GE_default1873;
extern T1874 GE_default1874;
extern T1882 GE_default1882;
extern T1884 GE_default1884;
extern T1887 GE_default1887;
extern T1896 GE_default1896;
extern T1897 GE_default1897;
extern T1898 GE_default1898;
extern T1899 GE_default1899;
extern T1900 GE_default1900;
extern T1901 GE_default1901;
extern T1902 GE_default1902;
extern T1903 GE_default1903;
extern T1904 GE_default1904;
extern T1905 GE_default1905;
extern T1906 GE_default1906;
extern T1907 GE_default1907;
extern T1908 GE_default1908;
extern T1909 GE_default1909;
extern T1910 GE_default1910;
extern T1911 GE_default1911;
extern T1912 GE_default1912;
extern T1913 GE_default1913;
extern T1914 GE_default1914;
extern T1915 GE_default1915;
extern T1916 GE_default1916;
extern T1917 GE_default1917;
extern T1920 GE_default1920;
extern T1921 GE_default1921;
extern T1922 GE_default1922;
extern T1923 GE_default1923;
extern T1924 GE_default1924;
extern T1925 GE_default1925;
extern T1926 GE_default1926;
extern T1927 GE_default1927;
extern T1928 GE_default1928;
extern T1929 GE_default1929;
extern T1931 GE_default1931;
extern T1933 GE_default1933;
extern T1934 GE_default1934;
extern T1935 GE_default1935;
extern T1936 GE_default1936;
extern T1937 GE_default1937;
extern T1938 GE_default1938;
extern T1939 GE_default1939;
extern T1940 GE_default1940;
extern T1941 GE_default1941;
extern T1942 GE_default1942;
extern T1943 GE_default1943;
extern T1946 GE_default1946;
extern T1947 GE_default1947;
extern T1948 GE_default1948;
extern T1949 GE_default1949;
extern T1950 GE_default1950;
extern T1951 GE_default1951;
extern T1952 GE_default1952;
extern T1953 GE_default1953;
extern T1954 GE_default1954;
extern T1955 GE_default1955;
extern T1956 GE_default1956;
extern T1957 GE_default1957;
extern T1958 GE_default1958;
extern T1959 GE_default1959;
extern T1960 GE_default1960;
extern T1961 GE_default1961;
extern T1963 GE_default1963;
extern T1964 GE_default1964;
extern T1965 GE_default1965;
extern T1966 GE_default1966;
extern T1967 GE_default1967;
extern T1968 GE_default1968;
extern T1969 GE_default1969;
extern T1971 GE_default1971;
extern T1972 GE_default1972;
extern T1974 GE_default1974;
extern T1975 GE_default1975;
extern T1976 GE_default1976;
extern T1977 GE_default1977;
extern T1978 GE_default1978;
extern T1979 GE_default1979;
extern T1980 GE_default1980;
extern T1981 GE_default1981;
extern T1982 GE_default1982;
extern T1983 GE_default1983;
extern T1986 GE_default1986;
extern T1987 GE_default1987;
extern T1988 GE_default1988;
extern T1989 GE_default1989;
extern T1990 GE_default1990;
extern T1991 GE_default1991;
extern T1992 GE_default1992;
extern T1993 GE_default1993;
extern T1995 GE_default1995;
extern T1996 GE_default1996;
extern T1997 GE_default1997;
extern T1998 GE_default1998;
extern T1999 GE_default1999;
extern T2000 GE_default2000;
extern T2002 GE_default2002;
extern T2003 GE_default2003;
extern T2004 GE_default2004;
extern T2005 GE_default2005;
extern T2006 GE_default2006;
extern T2007 GE_default2007;
extern T2008 GE_default2008;
extern T2009 GE_default2009;
extern T2010 GE_default2010;
extern T2012 GE_default2012;
extern T2013 GE_default2013;
extern T2014 GE_default2014;
extern T2015 GE_default2015;
extern T2018 GE_default2018;
extern T2019 GE_default2019;
extern T2020 GE_default2020;
extern T2023 GE_default2023;
extern T2024 GE_default2024;
extern T2028 GE_default2028;
extern T2029 GE_default2029;
extern T2030 GE_default2030;
extern T2031 GE_default2031;
extern T2036 GE_default2036;
extern T2037 GE_default2037;
extern T2038 GE_default2038;
extern T2039 GE_default2039;
extern T2040 GE_default2040;
extern T2041 GE_default2041;
extern T2051 GE_default2051;
extern T2052 GE_default2052;
extern T2055 GE_default2055;
extern T2061 GE_default2061;
extern T2062 GE_default2062;
extern T2063 GE_default2063;
extern T2064 GE_default2064;
extern T2065 GE_default2065;
extern T2066 GE_default2066;
extern T2067 GE_default2067;
extern T2068 GE_default2068;
extern T2069 GE_default2069;
extern T2070 GE_default2070;
extern T2071 GE_default2071;
extern T2072 GE_default2072;
extern T2073 GE_default2073;
extern T2074 GE_default2074;
extern T2075 GE_default2075;
extern T2078 GE_default2078;
extern T2079 GE_default2079;
extern T2080 GE_default2080;
extern T2082 GE_default2082;
extern T2083 GE_default2083;
extern T2085 GE_default2085;
extern T2087 GE_default2087;
extern T2088 GE_default2088;
extern T2089 GE_default2089;
extern T2091 GE_default2091;
extern T2092 GE_default2092;
extern T2093 GE_default2093;
extern T2094 GE_default2094;
extern T2095 GE_default2095;
extern T2096 GE_default2096;
extern T2097 GE_default2097;
extern T2098 GE_default2098;
extern T2099 GE_default2099;
extern T2100 GE_default2100;
extern T2101 GE_default2101;
extern T2102 GE_default2102;
extern T2103 GE_default2103;
extern T2104 GE_default2104;
extern T2105 GE_default2105;
extern T2106 GE_default2106;
extern T2107 GE_default2107;
extern T2108 GE_default2108;
extern T2109 GE_default2109;
extern T2110 GE_default2110;
extern T2111 GE_default2111;
extern T2112 GE_default2112;
extern T2113 GE_default2113;
extern T2114 GE_default2114;
extern T2115 GE_default2115;
extern T2116 GE_default2116;
extern T2117 GE_default2117;
extern T2118 GE_default2118;
extern T2119 GE_default2119;
extern T2120 GE_default2120;
extern T2121 GE_default2121;
extern T2122 GE_default2122;
extern T2123 GE_default2123;
extern T2124 GE_default2124;
extern T2125 GE_default2125;
extern T2126 GE_default2126;
extern T2127 GE_default2127;
extern T2128 GE_default2128;
extern T2129 GE_default2129;
extern T2130 GE_default2130;
extern T2131 GE_default2131;
extern T2132 GE_default2132;
extern T2134 GE_default2134;
extern T2135 GE_default2135;
extern T2136 GE_default2136;
extern T2138 GE_default2138;
extern T2141 GE_default2141;
extern T2142 GE_default2142;
extern T2143 GE_default2143;
extern T2145 GE_default2145;
extern T2146 GE_default2146;
extern T2149 GE_default2149;
extern T2150 GE_default2150;
extern T2151 GE_default2151;
extern T2152 GE_default2152;
extern T2153 GE_default2153;
extern T2154 GE_default2154;
extern T2155 GE_default2155;
extern T2158 GE_default2158;
extern T2159 GE_default2159;
extern T2162 GE_default2162;
extern T2163 GE_default2163;
extern T2165 GE_default2165;
extern T2166 GE_default2166;
extern T2167 GE_default2167;
extern T2170 GE_default2170;
extern T2173 GE_default2173;
extern T2174 GE_default2174;
extern T2175 GE_default2175;
extern T2176 GE_default2176;
extern T2177 GE_default2177;
extern T2178 GE_default2178;
extern T2179 GE_default2179;
extern T2180 GE_default2180;
extern T2181 GE_default2181;
extern T2182 GE_default2182;
extern T2183 GE_default2183;
extern T2184 GE_default2184;
extern T2185 GE_default2185;
extern T2186 GE_default2186;
extern T2187 GE_default2187;
extern T2188 GE_default2188;
extern T2189 GE_default2189;
extern T2190 GE_default2190;
extern T2191 GE_default2191;
extern T2192 GE_default2192;
extern T2193 GE_default2193;
extern T2194 GE_default2194;
extern T2195 GE_default2195;
extern T2196 GE_default2196;
extern T2197 GE_default2197;
extern T2198 GE_default2198;
extern T2199 GE_default2199;
extern T2200 GE_default2200;
extern T2201 GE_default2201;
extern T2202 GE_default2202;
extern T2203 GE_default2203;
extern T2204 GE_default2204;
extern T2205 GE_default2205;
extern T2206 GE_default2206;
extern T2207 GE_default2207;
extern T2208 GE_default2208;
extern T2209 GE_default2209;
extern T2210 GE_default2210;
extern T2211 GE_default2211;
extern T2212 GE_default2212;
extern T2213 GE_default2213;
extern T2214 GE_default2214;
extern T2215 GE_default2215;
extern T2216 GE_default2216;
extern T2217 GE_default2217;
extern T2223 GE_default2223;
extern T2224 GE_default2224;
extern T2225 GE_default2225;
extern T2228 GE_default2228;
extern T2230 GE_default2230;
extern T2231 GE_default2231;
extern T2232 GE_default2232;
extern T2233 GE_default2233;
extern T2234 GE_default2234;
extern T2235 GE_default2235;
extern T2236 GE_default2236;
extern T2237 GE_default2237;
extern T2238 GE_default2238;
extern T2239 GE_default2239;
extern T2240 GE_default2240;
extern T2241 GE_default2241;
extern T2242 GE_default2242;
extern T2243 GE_default2243;
extern T2244 GE_default2244;
extern T2245 GE_default2245;
extern T2246 GE_default2246;
extern T2248 GE_default2248;
extern T2249 GE_default2249;
extern T2250 GE_default2250;
extern T2252 GE_default2252;
extern T2254 GE_default2254;
extern T2255 GE_default2255;
extern T2258 GE_default2258;
extern T2259 GE_default2259;
extern T2261 GE_default2261;
extern T2262 GE_default2262;
extern T2263 GE_default2263;
extern T2264 GE_default2264;
extern T2265 GE_default2265;
extern T2267 GE_default2267;
extern T2269 GE_default2269;
extern T2271 GE_default2271;
extern T2272 GE_default2272;
extern T2274 GE_default2274;
extern T2275 GE_default2275;
extern T2276 GE_default2276;
extern T2277 GE_default2277;
extern T2278 GE_default2278;
extern T2279 GE_default2279;
extern T2281 GE_default2281;
extern T2282 GE_default2282;
extern T2283 GE_default2283;
extern T2284 GE_default2284;
extern T2286 GE_default2286;
extern T2291 GE_default2291;
extern T2294 GE_default2294;
extern T2297 GE_default2297;
extern T2298 GE_default2298;
extern T2299 GE_default2299;
extern T2300 GE_default2300;
extern T2301 GE_default2301;
extern T2303 GE_default2303;

extern T0* GE_new_str8(T6 c);
extern T0* GE_new_str32(T6 c);
extern T0* GE_new_istr8(T6 c);
extern T0* GE_new_istr32(T6 c);
/* New instance of type SPECIAL [CHARACTER_8] */
extern T0* GE_new15(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [CHARACTER_32] */
extern T0* GE_new16(TC* ac, T6 a1, T1 initialize);
/* New instance of type STRING_8 */
extern T0* GE_new17(TC* ac, T1 initialize);
/* New instance of type STRING_32 */
extern T0* GE_new18(TC* ac, T1 initialize);
/* New instance of type IMMUTABLE_STRING_32 */
extern T0* GE_new20(TC* ac, T1 initialize);
/* New instance of type ISE_EXCEPTION_MANAGER */
extern T0* GE_new21(TC* ac, T1 initialize);
/* New instance of type GEC */
extern T0* GE_new26(TC* ac, T1 initialize);
/* New instance of type CELL [detachable EXCEPTION] */
extern T0* GE_new27(TC* ac, T1 initialize);
/* New instance of type HASH_TABLE [INTEGER_32, INTEGER_32] */
extern T0* GE_new28(TC* ac, T1 initialize);
/* New instance of type CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
extern T0* GE_new29(TC* ac, T1 initialize);
/* New instance of type CELL [NO_MORE_MEMORY] */
extern T0* GE_new30(TC* ac, T1 initialize);
/* New instance of type C_STRING */
extern T0* GE_new31(TC* ac, T1 initialize);
/* New instance of type TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
extern T0* GE_new32(TC* ac, T1 initialize);
/* New instance of type KL_ARGUMENTS */
extern T0* GE_new33(TC* ac, T1 initialize);
/* New instance of type ARRAY [STRING_8] */
extern T0* GE_new34(TC* ac, T1 initialize);
/* New instance of type SPECIAL [STRING_8] */
extern T0* GE_new35(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_EXCEPTIONS */
extern T0* GE_new36(TC* ac, T1 initialize);
/* New instance of type EXCEPTIONS */
extern T0* GE_new37(TC* ac, T1 initialize);
/* New instance of type KL_STANDARD_FILES */
extern T0* GE_new38(TC* ac, T1 initialize);
/* New instance of type KL_STDERR_FILE */
extern T0* GE_new39(TC* ac, T1 initialize);
/* New instance of type ET_ERROR_HANDLER */
extern T0* GE_new42(TC* ac, T1 initialize);
/* New instance of type KL_TEXT_INPUT_FILE */
extern T0* GE_new43(TC* ac, T1 initialize);
/* New instance of type UT_GOBO_VARIABLES */
extern T0* GE_new44(TC* ac, T1 initialize);
/* New instance of type UT_ISE_VARIABLES */
extern T0* GE_new45(TC* ac, T1 initialize);
/* New instance of type AP_FLAG */
extern T0* GE_new46(TC* ac, T1 initialize);
/* New instance of type KL_EXECUTION_ENVIRONMENT */
extern T0* GE_new49(TC* ac, T1 initialize);
/* New instance of type ET_SYSTEM */
extern T0* GE_new50(TC* ac, T1 initialize);
/* New instance of type AP_PARSER */
extern T0* GE_new52(TC* ac, T1 initialize);
/* New instance of type AP_ALTERNATIVE_OPTIONS_LIST */
extern T0* GE_new53(TC* ac, T1 initialize);
/* New instance of type AP_STRING_OPTION */
extern T0* GE_new54(TC* ac, T1 initialize);
/* New instance of type UT_VERSION */
extern T0* GE_new56(TC* ac, T1 initialize);
/* New instance of type AP_ENUMERATION_OPTION */
extern T0* GE_new57(TC* ac, T1 initialize);
/* New instance of type AP_BOOLEAN_OPTION */
extern T0* GE_new58(TC* ac, T1 initialize);
/* New instance of type AP_INTEGER_OPTION */
extern T0* GE_new59(TC* ac, T1 initialize);
/* New instance of type ET_NULL_ERROR_HANDLER */
extern T0* GE_new63(TC* ac, T1 initialize);
/* New instance of type ET_AST_FACTORY */
extern T0* GE_new65(TC* ac, T1 initialize);
/* New instance of type ET_SYSTEM_PROCESSOR */
extern T0* GE_new66(TC* ac, T1 initialize);
/* New instance of type ET_CLUSTER */
extern T0* GE_new67(TC* ac, T1 initialize);
/* New instance of type ET_EIFFEL_PARSER */
extern T0* GE_new68(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLASS] */
extern T0* GE_new69(TC* ac, T1 initialize);
/* New instance of type ET_CLASS */
extern T0* GE_new70(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_CLASS] */
extern T0* GE_new74(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_CLASS]] */
extern T0* GE_new75(TC* ac, T1 initialize);
/* New instance of type TUPLE */
extern T0* GE_new76(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
extern T0* GE_new77(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [ET_CLASS]] */
extern T0* GE_new78(TC* ac, T1 initialize);
/* New instance of type ET_CREATOR_LIST */
extern T0* GE_new80(TC* ac, T1 initialize);
/* New instance of type ET_TOKEN_CONSTANTS */
extern T0* GE_new81(TC* ac, T1 initialize);
/* New instance of type ET_CREATOR */
extern T0* GE_new82(TC* ac, T1 initialize);
/* New instance of type UT_CANNOT_READ_FILE_ERROR */
extern T0* GE_new83(TC* ac, T1 initialize);
/* New instance of type ET_ECF_SYSTEM_PARSER */
extern T0* GE_new85(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ERROR_HANDLER */
extern T0* GE_new86(TC* ac, T1 initialize);
/* New instance of type ET_ECF_SYSTEM */
extern T0* GE_new87(TC* ac, T1 initialize);
/* New instance of type ET_ECF_TARGET */
extern T0* GE_new88(TC* ac, T1 initialize);
/* New instance of type ET_ECF_CLUSTER */
extern T0* GE_new89(TC* ac, T1 initialize);
/* New instance of type ET_ECF_SETTINGS */
extern T0* GE_new90(TC* ac, T1 initialize);
/* New instance of type ET_ECF_CAPABILITIES */
extern T0* GE_new91(TC* ac, T1 initialize);
/* New instance of type ET_ECF_VARIABLES */
extern T0* GE_new92(TC* ac, T1 initialize);
/* New instance of type ET_CLUSTERS */
extern T0* GE_new94(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_SYSTEM */
extern T0* GE_new95(TC* ac, T1 initialize);
/* New instance of type DT_DATE_TIME */
extern T0* GE_new97(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [STRING_8] */
extern T0* GE_new99(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
extern T0* GE_new100(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_TYPE */
extern T0* GE_new102(TC* ac, T1 initialize);
/* New instance of type UT_VERSION_NUMBER */
extern T0* GE_new103(TC* ac, T1 initialize);
/* New instance of type EXECUTION_ENVIRONMENT */
extern T0* GE_new105(TC* ac, T1 initialize);
/* New instance of type UT_MESSAGE */
extern T0* GE_new106(TC* ac, T1 initialize);
/* New instance of type RX_PCRE_REGULAR_EXPRESSION */
extern T0* GE_new107(TC* ac, T1 initialize);
/* New instance of type KL_STRING_ROUTINES */
extern T0* GE_new108(TC* ac, T1 initialize);
/* New instance of type ST_SPLITTER */
extern T0* GE_new109(TC* ac, T1 initialize);
/* New instance of type AP_ERROR */
extern T0* GE_new113(TC* ac, T1 initialize);
/* New instance of type ET_C_GENERATOR */
extern T0* GE_new114(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new116(TC* ac, T1 initialize);
/* New instance of type KL_SHELL_COMMAND */
extern T0* GE_new117(TC* ac, T1 initialize);
/* New instance of type GECC */
extern T0* GE_new118(TC* ac, T1 initialize);
/* New instance of type KL_OPERATING_SYSTEM */
extern T0* GE_new119(TC* ac, T1 initialize);
/* New instance of type VOID_TARGET */
extern T0* GE_new120(TC* ac, T1 initialize);
/* New instance of type ROUTINE_FAILURE */
extern T0* GE_new122(TC* ac, T1 initialize);
/* New instance of type OLD_VIOLATION */
extern T0* GE_new124(TC* ac, T1 initialize);
/* New instance of type NO_MORE_MEMORY */
extern T0* GE_new126(TC* ac, T1 initialize);
/* New instance of type INVARIANT_VIOLATION */
extern T0* GE_new127(TC* ac, T1 initialize);
/* New instance of type OPERATING_SYSTEM_SIGNAL_FAILURE */
extern T0* GE_new128(TC* ac, T1 initialize);
/* New instance of type IO_FAILURE */
extern T0* GE_new129(TC* ac, T1 initialize);
/* New instance of type OPERATING_SYSTEM_FAILURE */
extern T0* GE_new130(TC* ac, T1 initialize);
/* New instance of type COM_FAILURE */
extern T0* GE_new131(TC* ac, T1 initialize);
/* New instance of type EIFFEL_RUNTIME_PANIC */
extern T0* GE_new132(TC* ac, T1 initialize);
/* New instance of type PRECONDITION_VIOLATION */
extern T0* GE_new134(TC* ac, T1 initialize);
/* New instance of type POSTCONDITION_VIOLATION */
extern T0* GE_new135(TC* ac, T1 initialize);
/* New instance of type FLOATING_POINT_FAILURE */
extern T0* GE_new136(TC* ac, T1 initialize);
/* New instance of type CHECK_VIOLATION */
extern T0* GE_new137(TC* ac, T1 initialize);
/* New instance of type BAD_INSPECT_VALUE */
extern T0* GE_new138(TC* ac, T1 initialize);
/* New instance of type VARIANT_VIOLATION */
extern T0* GE_new139(TC* ac, T1 initialize);
/* New instance of type LOOP_INVARIANT_VIOLATION */
extern T0* GE_new140(TC* ac, T1 initialize);
/* New instance of type RESCUE_FAILURE */
extern T0* GE_new141(TC* ac, T1 initialize);
/* New instance of type RESUMPTION_FAILURE */
extern T0* GE_new142(TC* ac, T1 initialize);
/* New instance of type CREATE_ON_DEFERRED */
extern T0* GE_new143(TC* ac, T1 initialize);
/* New instance of type EXTERNAL_FAILURE */
extern T0* GE_new144(TC* ac, T1 initialize);
/* New instance of type VOID_ASSIGNED_TO_EXPANDED */
extern T0* GE_new145(TC* ac, T1 initialize);
/* New instance of type EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
extern T0* GE_new146(TC* ac, T1 initialize);
/* New instance of type MISMATCH_FAILURE */
extern T0* GE_new147(TC* ac, T1 initialize);
/* New instance of type DEVELOPER_EXCEPTION */
extern T0* GE_new148(TC* ac, T1 initialize);
/* New instance of type ADDRESS_APPLIED_TO_MELTED_FEATURE */
extern T0* GE_new149(TC* ac, T1 initialize);
/* New instance of type SERIALIZATION_FAILURE */
extern T0* GE_new150(TC* ac, T1 initialize);
/* New instance of type KL_WINDOWS_FILE_SYSTEM */
extern T0* GE_new151(TC* ac, T1 initialize);
/* New instance of type KL_UNIX_FILE_SYSTEM */
extern T0* GE_new152(TC* ac, T1 initialize);
/* New instance of type PRIMES */
extern T0* GE_new153(TC* ac, T1 initialize);
/* New instance of type SPECIAL [INTEGER_32] */
extern T0* GE_new154(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [BOOLEAN] */
extern T0* GE_new155(TC* ac, T6 a1, T1 initialize);
/* New instance of type ARGUMENTS_32 */
extern T0* GE_new156(TC* ac, T1 initialize);
/* New instance of type MUTEX */
extern T0* GE_new159(TC* ac, T1 initialize);
/* New instance of type UT_ERROR_HANDLER */
extern T0* GE_new160(TC* ac, T1 initialize);
/* New instance of type KL_STDOUT_FILE */
extern T0* GE_new161(TC* ac, T1 initialize);
/* New instance of type MANAGED_POINTER */
extern T0* GE_new162(TC* ac, T1 initialize);
/* New instance of type KL_LINKABLE [CHARACTER_8] */
extern T0* GE_new164(TC* ac, T1 initialize);
/* New instance of type FILE_INFO */
extern T0* GE_new166(TC* ac, T1 initialize);
/* New instance of type UC_UTF8_ROUTINES */
extern T0* GE_new167(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [STRING_8] */
extern T0* GE_new169(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_UNIVERSE] */
extern T0* GE_new170(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_UNIVERSE]] */
extern T0* GE_new171(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE [ET_CLASS], BOOLEAN]] */
extern T0* GE_new172(TC* ac, T1 initialize);
/* New instance of type ET_ADAPTED_LIBRARIES */
extern T0* GE_new173(TC* ac, T1 initialize);
/* New instance of type ET_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new174(TC* ac, T1 initialize);
/* New instance of type ET_IMPLICIT_TYPE_MARK */
extern T0* GE_new176(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
extern T0* GE_new177(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_NAME_TESTER */
extern T0* GE_new178(TC* ac, T1 initialize);
/* New instance of type ET_PARENT */
extern T0* GE_new180(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_LIST */
extern T0* GE_new181(TC* ac, T1 initialize);
/* New instance of type ET_CLIENT_LIST */
extern T0* GE_new182(TC* ac, T1 initialize);
/* New instance of type ET_TUPLE_TYPE */
extern T0* GE_new183(TC* ac, T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_LIST */
extern T0* GE_new185(TC* ac, T1 initialize);
/* New instance of type ET_BUILTIN_CONVERT_FEATURE */
extern T0* GE_new186(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_UNIVERSE] */
extern T0* GE_new187(TC* ac, T1 initialize);
/* New instance of type ET_MASTER_CLASS */
extern T0* GE_new188(TC* ac, T1 initialize);
/* New instance of type ET_CLIENT */
extern T0* GE_new189(TC* ac, T1 initialize);
/* New instance of type ET_KEYWORD */
extern T0* GE_new191(TC* ac, T1 initialize);
/* New instance of type ET_ATTACHMENT_MARK_SEPARATE_KEYWORD */
extern T0* GE_new192(TC* ac, T1 initialize);
/* New instance of type ET_RENAME_LIST */
extern T0* GE_new193(TC* ac, T1 initialize);
/* New instance of type ET_EXPORT_LIST */
extern T0* GE_new194(TC* ac, T1 initialize);
/* New instance of type ET_KEYWORD_FEATURE_NAME_LIST */
extern T0* GE_new195(TC* ac, T1 initialize);
/* New instance of type ET_NONE_GROUP */
extern T0* GE_new198(TC* ac, T1 initialize);
/* New instance of type ET_LIKE_CURRENT */
extern T0* GE_new199(TC* ac, T1 initialize);
/* New instance of type ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new201(TC* ac, T1 initialize);
/* New instance of type ET_LIBRARY */
extern T0* GE_new203(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_LIBRARY] */
extern T0* GE_new204(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_LIBRARY]] */
extern T0* GE_new205(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
extern T0* GE_new206(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY */
extern T0* GE_new207(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new208(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new209(TC* ac, T1 initialize);
/* New instance of type ST_WORD_WRAPPER */
extern T0* GE_new210(TC* ac, T1 initialize);
/* New instance of type AP_DISPLAY_HELP_FLAG */
extern T0* GE_new212(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [AP_OPTION] */
extern T0* GE_new213(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new214(TC* ac, T1 initialize);
/* New instance of type AP_ERROR_HANDLER */
extern T0* GE_new215(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [AP_OPTION] */
extern T0* GE_new216(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [AP_OPTION] */
extern T0* GE_new217(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable STRING_8] */
extern T0* GE_new218(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable STRING_8] */
extern T0* GE_new219(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [STRING_8] */
extern T0* GE_new220(TC* ac, T1 initialize);
/* New instance of type KL_STRING_EQUALITY_TESTER */
extern T0* GE_new221(TC* ac, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [STRING_8] */
extern T0* GE_new222(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [BOOLEAN] */
extern T0* GE_new225(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [INTEGER_32] */
extern T0* GE_new228(TC* ac, T1 initialize);
/* New instance of type KL_NULL_TEXT_OUTPUT_STREAM */
extern T0* GE_new229(TC* ac, T1 initialize);
/* New instance of type ET_EIFFEL_PREPARSER */
extern T0* GE_new231(TC* ac, T1 initialize);
/* New instance of type ET_MASTER_CLASS_CHECKER */
extern T0* GE_new232(TC* ac, T1 initialize);
/* New instance of type ET_PROVIDER_CHECKER */
extern T0* GE_new233(TC* ac, T1 initialize);
/* New instance of type ET_ANCESTOR_BUILDER */
extern T0* GE_new234(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_FLATTENER */
extern T0* GE_new235(TC* ac, T1 initialize);
/* New instance of type ET_INTERFACE_CHECKER */
extern T0* GE_new236(TC* ac, T1 initialize);
/* New instance of type ET_IMPLEMENTATION_CHECKER */
extern T0* GE_new237(TC* ac, T1 initialize);
/* New instance of type ET_AST_NULL_PROCESSOR */
extern T0* GE_new238(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [INTEGER_32] */
extern T0* GE_new239(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
extern T0* GE_new241(TC* ac, T1 initialize);
/* New instance of type YY_UNICODE_FILE_BUFFER */
extern T0* GE_new243(TC* ac, T1 initialize);
/* New instance of type KL_STDIN_FILE */
extern T0* GE_new244(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [INTEGER_32] */
extern T0* GE_new245(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new246(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new247(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_KEYWORD] */
extern T0* GE_new248(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_SYMBOL] */
extern T0* GE_new249(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new250(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST] */
extern T0* GE_new251(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new252(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new253(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new254(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new255(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
extern T0* GE_new256(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_QUERY] */
extern T0* GE_new257(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_PROCEDURE] */
extern T0* GE_new258(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new259(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_NAMED_CLASS] */
extern T0* GE_new260(TC* ac, T1 initialize);
/* New instance of type YY_BUFFER */
extern T0* GE_new261(TC* ac, T1 initialize);
/* New instance of type ET_UNKNOWN_GROUP */
extern T0* GE_new262(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [INTEGER_32] */
extern T0* GE_new263(TC* ac, T1 initialize);
/* New instance of type KL_UNICODE_CHARACTER_BUFFER */
extern T0* GE_new265(TC* ac, T1 initialize);
/* New instance of type ET_CLIENTS */
extern T0* GE_new267(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE */
extern T0* GE_new268(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ANY] */
extern T0* GE_new271(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ANY] */
extern T0* GE_new272(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
extern T0* GE_new273(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD] */
extern T0* GE_new274(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new275(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_KEYWORD */
extern T0* GE_new276(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new277(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new278(TC* ac, T1 initialize);
/* New instance of type ET_PRECURSOR_KEYWORD */
extern T0* GE_new279(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new280(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
extern T0* GE_new281(TC* ac, T1 initialize);
/* New instance of type ET_SYMBOL */
extern T0* GE_new282(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_SYMBOL] */
extern T0* GE_new283(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
extern T0* GE_new284(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_POSITION] */
extern T0* GE_new286(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new287(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new289(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
extern T0* GE_new290(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_BREAK] */
extern T0* GE_new292(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new293(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new295(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
extern T0* GE_new296(TC* ac, T1 initialize);
/* New instance of type ET_CURRENT */
extern T0* GE_new297(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CURRENT] */
extern T0* GE_new298(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
extern T0* GE_new299(TC* ac, T1 initialize);
/* New instance of type ET_FREE_OPERATOR */
extern T0* GE_new300(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FREE_OPERATOR] */
extern T0* GE_new301(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER] */
extern T0* GE_new302(TC* ac, T1 initialize);
/* New instance of type ET_IDENTIFIER */
extern T0* GE_new303(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_IDENTIFIER] */
extern T0* GE_new304(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new305(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new307(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new308(TC* ac, T1 initialize);
/* New instance of type ET_KEYWORD_OPERATOR */
extern T0* GE_new309(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new310(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
extern T0* GE_new311(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING] */
extern T0* GE_new313(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
extern T0* GE_new314(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_REAL_CONSTANT] */
extern T0* GE_new316(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
extern T0* GE_new317(TC* ac, T1 initialize);
/* New instance of type ET_RESULT */
extern T0* GE_new318(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_RESULT] */
extern T0* GE_new319(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new320(TC* ac, T1 initialize);
/* New instance of type ET_RETRY_INSTRUCTION */
extern T0* GE_new321(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new322(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new323(TC* ac, T1 initialize);
/* New instance of type ET_SYMBOL_OPERATOR */
extern T0* GE_new324(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new325(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_VOID] */
extern T0* GE_new326(TC* ac, T1 initialize);
/* New instance of type ET_VOID */
extern T0* GE_new327(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_VOID] */
extern T0* GE_new328(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new329(TC* ac, T1 initialize);
/* New instance of type ET_SEMICOLON_SYMBOL */
extern T0* GE_new330(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new331(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new332(TC* ac, T1 initialize);
/* New instance of type ET_BRACKET_SYMBOL */
extern T0* GE_new333(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new334(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new335(TC* ac, T1 initialize);
/* New instance of type ET_QUESTION_MARK_SYMBOL */
extern T0* GE_new336(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new337(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new338(TC* ac, T1 initialize);
/* New instance of type ET_ACROSS_EXPRESSION */
extern T0* GE_new339(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new340(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new341(TC* ac, T1 initialize);
/* New instance of type ET_ACROSS_INSTRUCTION */
extern T0* GE_new342(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new343(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new344(TC* ac, T1 initialize);
/* New instance of type ET_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new345(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new346(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new347(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new348(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new349(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new350(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new351(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new353(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new354(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new356(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new357(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_ARGUMENT_OPERAND_LIST */
extern T0* GE_new358(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new359(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
extern T0* GE_new360(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_TARGET] */
extern T0* GE_new362(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
extern T0* GE_new363(TC* ac, T1 initialize);
/* New instance of type ET_ALIAS_NAME */
extern T0* GE_new364(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ALIAS_NAME] */
extern T0* GE_new365(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST] */
extern T0* GE_new366(TC* ac, T1 initialize);
/* New instance of type ET_ALIAS_NAME_LIST */
extern T0* GE_new367(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ALIAS_NAME_LIST] */
extern T0* GE_new368(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
extern T0* GE_new369(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ASSIGNER] */
extern T0* GE_new371(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new372(TC* ac, T1 initialize);
/* New instance of type ET_BRACKET_EXPRESSION */
extern T0* GE_new373(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new374(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
extern T0* GE_new375(TC* ac, T1 initialize);
/* New instance of type ET_CALL_AGENT */
extern T0* GE_new376(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CALL_AGENT] */
extern T0* GE_new377(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new378(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_CALL_EXPRESSION */
extern T0* GE_new379(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new380(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new381(TC* ac, T1 initialize);
/* New instance of type ET_CHECK_INSTRUCTION */
extern T0* GE_new382(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new383(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
extern T0* GE_new384(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE] */
extern T0* GE_new386(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new387(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new389(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
extern T0* GE_new390(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_ITEM] */
extern T0* GE_new392(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
extern T0* GE_new393(TC* ac, T1 initialize);
/* New instance of type ET_CHOICE_LIST */
extern T0* GE_new394(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_LIST] */
extern T0* GE_new395(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
extern T0* GE_new396(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLASS] */
extern T0* GE_new397(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
extern T0* GE_new398(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLIENT_ITEM] */
extern T0* GE_new399(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
extern T0* GE_new400(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLIENTS] */
extern T0* GE_new401(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
extern T0* GE_new402(TC* ac, T1 initialize);
/* New instance of type ET_COMPOUND */
extern T0* GE_new403(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_COMPOUND] */
extern T0* GE_new404(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
extern T0* GE_new405(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONDITIONAL] */
extern T0* GE_new407(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
extern T0* GE_new408(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTANT] */
extern T0* GE_new410(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new411(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new413(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new414(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
extern T0* GE_new415(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new416(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new417(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_CREATOR */
extern T0* GE_new418(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new419(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST] */
extern T0* GE_new420(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_RENAME_LIST */
extern T0* GE_new421(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST] */
extern T0* GE_new422(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new423(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new425(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new426(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new428(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new429(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new431(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new432(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_FEATURE_LIST */
extern T0* GE_new433(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new434(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new435(TC* ac, T1 initialize);
/* New instance of type ET_CREATE_EXPRESSION */
extern T0* GE_new436(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new437(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION] */
extern T0* GE_new438(TC* ac, T1 initialize);
/* New instance of type ET_CREATION_REGION */
extern T0* GE_new439(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATION_REGION] */
extern T0* GE_new440(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
extern T0* GE_new441(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATOR] */
extern T0* GE_new442(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
extern T0* GE_new443(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATOR_LIST] */
extern T0* GE_new444(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new445(TC* ac, T1 initialize);
/* New instance of type ET_DEBUG_INSTRUCTION */
extern T0* GE_new446(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new447(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
extern T0* GE_new448(TC* ac, T1 initialize);
/* New instance of type ET_ELSEIF_EXPRESSION */
extern T0* GE_new449(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
extern T0* GE_new450(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
extern T0* GE_new451(TC* ac, T1 initialize);
/* New instance of type ET_ELSEIF_EXPRESSION_LIST */
extern T0* GE_new452(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
extern T0* GE_new453(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
extern T0* GE_new454(TC* ac, T1 initialize);
/* New instance of type ET_ELSEIF_PART */
extern T0* GE_new455(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_PART] */
extern T0* GE_new456(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new457(TC* ac, T1 initialize);
/* New instance of type ET_ELSEIF_PART_LIST */
extern T0* GE_new458(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new459(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
extern T0* GE_new460(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPORT] */
extern T0* GE_new462(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
extern T0* GE_new463(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPORT_LIST] */
extern T0* GE_new464(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
extern T0* GE_new465(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPRESSION] */
extern T0* GE_new467(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
extern T0* GE_new468(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPRESSION_ITEM] */
extern T0* GE_new470(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new471(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new473(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new474(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new476(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new477(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new478(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new479(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE_LIST */
extern T0* GE_new480(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new481(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new482(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_EXPORT */
extern T0* GE_new483(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new484(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
extern T0* GE_new485(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_NAME] */
extern T0* GE_new486(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new487(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new489(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new490(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT */
extern T0* GE_new491(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new492(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new493(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new495(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new496(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT_LIST */
extern T0* GE_new497(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new498(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new499(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER */
extern T0* GE_new500(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new501(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new502(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new504(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new505(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_LIST */
extern T0* GE_new506(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new507(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
extern T0* GE_new508(TC* ac, T1 initialize);
/* New instance of type ET_IF_EXPRESSION */
extern T0* GE_new509(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_IF_EXPRESSION] */
extern T0* GE_new510(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new511(TC* ac, T1 initialize);
/* New instance of type ET_IF_INSTRUCTION */
extern T0* GE_new512(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new513(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
extern T0* GE_new514(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_AGENT] */
extern T0* GE_new516(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new517(TC* ac, T1 initialize);
/* New instance of type ET_INLINE_SEPARATE_ARGUMENT */
extern T0* GE_new518(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new519(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
extern T0* GE_new520(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
extern T0* GE_new522(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
extern T0* GE_new523(TC* ac, T1 initialize);
/* New instance of type ET_INLINE_SEPARATE_ARGUMENTS */
extern T0* GE_new524(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
extern T0* GE_new525(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
extern T0* GE_new526(TC* ac, T1 initialize);
/* New instance of type ET_INLINE_SEPARATE_INSTRUCTION */
extern T0* GE_new527(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
extern T0* GE_new528(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION] */
extern T0* GE_new529(TC* ac, T1 initialize);
/* New instance of type ET_INSPECT_EXPRESSION */
extern T0* GE_new530(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INSPECT_EXPRESSION] */
extern T0* GE_new531(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new532(TC* ac, T1 initialize);
/* New instance of type ET_INSPECT_INSTRUCTION */
extern T0* GE_new533(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new534(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
extern T0* GE_new535(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INSTRUCTION] */
extern T0* GE_new537(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
extern T0* GE_new538(TC* ac, T1 initialize);
/* New instance of type ET_INVARIANTS */
extern T0* GE_new539(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INVARIANTS] */
extern T0* GE_new540(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new541(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new542(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
extern T0* GE_new543(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LIKE_TYPE] */
extern T0* GE_new545(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new546(TC* ac, T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE */
extern T0* GE_new547(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new548(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new549(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new551(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new552(TC* ac, T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE_LIST */
extern T0* GE_new553(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new554(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new555(TC* ac, T1 initialize);
/* New instance of type ET_LOOP_INVARIANTS */
extern T0* GE_new556(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new557(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new558(TC* ac, T1 initialize);
/* New instance of type ET_MANIFEST_ARRAY */
extern T0* GE_new559(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new560(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new561(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new563(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new564(TC* ac, T1 initialize);
/* New instance of type ET_MANIFEST_STRING_LIST */
extern T0* GE_new565(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new566(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new567(TC* ac, T1 initialize);
/* New instance of type ET_MANIFEST_TUPLE */
extern T0* GE_new568(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new569(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST] */
extern T0* GE_new570(TC* ac, T1 initialize);
/* New instance of type ET_NOTE_LIST */
extern T0* GE_new571(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_NOTE_LIST] */
extern T0* GE_new572(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM] */
extern T0* GE_new573(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_NOTE_ITEM] */
extern T0* GE_new575(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM] */
extern T0* GE_new576(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_NOTE_TERM] */
extern T0* GE_new578(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM] */
extern T0* GE_new579(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_NOTE_TERM_ITEM] */
extern T0* GE_new581(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST] */
extern T0* GE_new582(TC* ac, T1 initialize);
/* New instance of type ET_NOTE_TERM_LIST */
extern T0* GE_new583(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_NOTE_TERM_LIST] */
extern T0* GE_new584(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
extern T0* GE_new585(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_OBSOLETE] */
extern T0* GE_new587(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new588(TC* ac, T1 initialize);
/* New instance of type ET_PARENTHESIZED_EXPRESSION */
extern T0* GE_new589(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new590(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
extern T0* GE_new591(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT] */
extern T0* GE_new592(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
extern T0* GE_new593(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_CLAUSE_LIST */
extern T0* GE_new594(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
extern T0* GE_new595(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
extern T0* GE_new596(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_ITEM] */
extern T0* GE_new597(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
extern T0* GE_new598(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_LIST] */
extern T0* GE_new599(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
extern T0* GE_new600(TC* ac, T1 initialize);
/* New instance of type ET_POSTCONDITIONS */
extern T0* GE_new601(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_POSTCONDITIONS] */
extern T0* GE_new602(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
extern T0* GE_new603(TC* ac, T1 initialize);
/* New instance of type ET_PRECONDITIONS */
extern T0* GE_new604(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PRECONDITIONS] */
extern T0* GE_new605(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
extern T0* GE_new606(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PROCEDURE] */
extern T0* GE_new608(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new609(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new611(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION] */
extern T0* GE_new612(TC* ac, T1 initialize);
/* New instance of type ET_QUANTIFIER_EXPRESSION */
extern T0* GE_new613(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUANTIFIER_EXPRESSION] */
extern T0* GE_new614(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
extern T0* GE_new615(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUERY] */
extern T0* GE_new617(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
extern T0* GE_new618(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_RENAME_ITEM] */
extern T0* GE_new620(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
extern T0* GE_new621(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_RENAME_LIST] */
extern T0* GE_new622(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION] */
extern T0* GE_new623(TC* ac, T1 initialize);
/* New instance of type ET_REPEAT_INSTRUCTION */
extern T0* GE_new624(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_REPEAT_INSTRUCTION] */
extern T0* GE_new625(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new626(TC* ac, T1 initialize);
/* New instance of type ET_STATIC_CALL_EXPRESSION */
extern T0* GE_new627(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new628(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new629(TC* ac, T1 initialize);
/* New instance of type ET_STRIP_EXPRESSION */
extern T0* GE_new630(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new631(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
extern T0* GE_new632(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE] */
extern T0* GE_new633(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT] */
extern T0* GE_new634(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_CONSTRAINT] */
extern T0* GE_new636(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM] */
extern T0* GE_new637(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM] */
extern T0* GE_new639(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST] */
extern T0* GE_new640(TC* ac, T1 initialize);
/* New instance of type ET_TYPE_CONSTRAINT_LIST */
extern T0* GE_new641(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST] */
extern T0* GE_new642(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
extern T0* GE_new643(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_ITEM] */
extern T0* GE_new645(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
extern T0* GE_new646(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_LIST] */
extern T0* GE_new648(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
extern T0* GE_new649(TC* ac, T1 initialize);
/* New instance of type ET_VARIANT */
extern T0* GE_new650(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_VARIANT] */
extern T0* GE_new651(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION] */
extern T0* GE_new652(TC* ac, T1 initialize);
/* New instance of type ET_WHEN_EXPRESSION */
extern T0* GE_new653(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_EXPRESSION] */
extern T0* GE_new654(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST] */
extern T0* GE_new655(TC* ac, T1 initialize);
/* New instance of type ET_WHEN_EXPRESSION_LIST */
extern T0* GE_new656(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_EXPRESSION_LIST] */
extern T0* GE_new657(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
extern T0* GE_new658(TC* ac, T1 initialize);
/* New instance of type ET_WHEN_PART */
extern T0* GE_new659(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_PART] */
extern T0* GE_new660(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new661(TC* ac, T1 initialize);
/* New instance of type ET_WHEN_PART_LIST */
extern T0* GE_new662(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new663(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
extern T0* GE_new664(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_WRITABLE] */
extern T0* GE_new666(TC* ac, T6 a1, T1 initialize);
/* New instance of type ET_OBJECT_TEST_LIST */
extern T0* GE_new668(TC* ac, T1 initialize);
/* New instance of type ET_ITERATION_COMPONENT_LIST */
extern T0* GE_new669(TC* ac, T1 initialize);
/* New instance of type ET_INLINE_SEPARATE_ARGUMENT_LIST */
extern T0* GE_new670(TC* ac, T1 initialize);
/* New instance of type ET_C3_CHARACTER_CONSTANT */
extern T0* GE_new671(TC* ac, T1 initialize);
/* New instance of type ET_REGULAR_MANIFEST_STRING */
extern T0* GE_new672(TC* ac, T1 initialize);
/* New instance of type ET_SPECIAL_MANIFEST_STRING */
extern T0* GE_new673(TC* ac, T1 initialize);
/* New instance of type ET_VERBATIM_STRING */
extern T0* GE_new674(TC* ac, T1 initialize);
/* New instance of type ET_REGULAR_INTEGER_CONSTANT */
extern T0* GE_new675(TC* ac, T1 initialize);
/* New instance of type ET_UNDERSCORED_INTEGER_CONSTANT */
extern T0* GE_new676(TC* ac, T1 initialize);
/* New instance of type ET_HEXADECIMAL_INTEGER_CONSTANT */
extern T0* GE_new677(TC* ac, T1 initialize);
/* New instance of type ET_OCTAL_INTEGER_CONSTANT */
extern T0* GE_new678(TC* ac, T1 initialize);
/* New instance of type ET_BINARY_INTEGER_CONSTANT */
extern T0* GE_new679(TC* ac, T1 initialize);
/* New instance of type ET_REGULAR_REAL_CONSTANT */
extern T0* GE_new680(TC* ac, T1 initialize);
/* New instance of type ET_UNDERSCORED_REAL_CONSTANT */
extern T0* GE_new681(TC* ac, T1 initialize);
/* New instance of type ET_TRUE_CONSTANT */
extern T0* GE_new683(TC* ac, T1 initialize);
/* New instance of type ET_FALSE_CONSTANT */
extern T0* GE_new684(TC* ac, T1 initialize);
/* New instance of type ET_C1_CHARACTER_CONSTANT */
extern T0* GE_new685(TC* ac, T1 initialize);
/* New instance of type ET_C2_CHARACTER_CONSTANT */
extern T0* GE_new686(TC* ac, T1 initialize);
/* New instance of type ET_TAGGED_NOTE */
extern T0* GE_new688(TC* ac, T1 initialize);
/* New instance of type ET_NOTE */
extern T0* GE_new689(TC* ac, T1 initialize);
/* New instance of type ET_CUSTOM_ATTRIBUTE */
extern T0* GE_new690(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINED_FORMAL_PARAMETER */
extern T0* GE_new691(TC* ac, T1 initialize);
/* New instance of type ET_TYPE_RENAME_CONSTRAINT */
extern T0* GE_new692(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_NAMED_TYPE */
extern T0* GE_new693(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new694(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new695(TC* ac, T1 initialize);
/* New instance of type ET_RENAME */
extern T0* GE_new696(TC* ac, T1 initialize);
/* New instance of type ET_ALL_EXPORT */
extern T0* GE_new697(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_FUNCTION */
extern T0* GE_new699(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_PROCEDURE */
extern T0* GE_new700(TC* ac, T1 initialize);
/* New instance of type ET_ATTRIBUTE */
extern T0* GE_new702(TC* ac, T1 initialize);
/* New instance of type ET_EXTENDED_ATTRIBUTE */
extern T0* GE_new703(TC* ac, T1 initialize);
/* New instance of type ET_CONSTANT_ATTRIBUTE */
extern T0* GE_new704(TC* ac, T1 initialize);
/* New instance of type ET_UNIQUE_ATTRIBUTE */
extern T0* GE_new705(TC* ac, T1 initialize);
/* New instance of type ET_DO_FUNCTION */
extern T0* GE_new706(TC* ac, T1 initialize);
/* New instance of type ET_ONCE_FUNCTION */
extern T0* GE_new707(TC* ac, T1 initialize);
/* New instance of type ET_DEFERRED_FUNCTION */
extern T0* GE_new708(TC* ac, T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION */
extern T0* GE_new710(TC* ac, T1 initialize);
/* New instance of type ET_DO_PROCEDURE */
extern T0* GE_new711(TC* ac, T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE */
extern T0* GE_new712(TC* ac, T1 initialize);
/* New instance of type ET_DEFERRED_PROCEDURE */
extern T0* GE_new713(TC* ac, T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE */
extern T0* GE_new714(TC* ac, T1 initialize);
/* New instance of type ET_ALIASED_FEATURE_NAME */
extern T0* GE_new715(TC* ac, T1 initialize);
/* New instance of type ET_ALIAS_FREE_NAME */
extern T0* GE_new716(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_ASSERTION */
extern T0* GE_new719(TC* ac, T1 initialize);
/* New instance of type ET_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new720(TC* ac, T1 initialize);
/* New instance of type ET_LIKE_FEATURE */
extern T0* GE_new722(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_BRACED_TYPE */
extern T0* GE_new724(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_TYPE */
extern T0* GE_new725(TC* ac, T1 initialize);
/* New instance of type ET_ASSIGNER_INSTRUCTION */
extern T0* GE_new726(TC* ac, T1 initialize);
/* New instance of type ET_ASSIGNMENT */
extern T0* GE_new727(TC* ac, T1 initialize);
/* New instance of type ET_ASSIGNMENT_ATTEMPT */
extern T0* GE_new728(TC* ac, T1 initialize);
/* New instance of type ET_LOOP_INSTRUCTION */
extern T0* GE_new729(TC* ac, T1 initialize);
/* New instance of type ET_BANG_INSTRUCTION */
extern T0* GE_new731(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_CALL */
extern T0* GE_new732(TC* ac, T1 initialize);
/* New instance of type ET_CREATE_INSTRUCTION */
extern T0* GE_new734(TC* ac, T1 initialize);
/* New instance of type ET_CHOICE_RANGE */
extern T0* GE_new735(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new736(TC* ac, T1 initialize);
/* New instance of type ET_PRECURSOR_INSTRUCTION */
extern T0* GE_new737(TC* ac, T1 initialize);
/* New instance of type ET_STATIC_CALL_INSTRUCTION */
extern T0* GE_new739(TC* ac, T1 initialize);
/* New instance of type ET_PRECURSOR_EXPRESSION */
extern T0* GE_new740(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_ADDRESS */
extern T0* GE_new741(TC* ac, T1 initialize);
/* New instance of type ET_CURRENT_ADDRESS */
extern T0* GE_new742(TC* ac, T1 initialize);
/* New instance of type ET_RESULT_ADDRESS */
extern T0* GE_new743(TC* ac, T1 initialize);
/* New instance of type ET_EXPRESSION_ADDRESS */
extern T0* GE_new744(TC* ac, T1 initialize);
/* New instance of type ET_INFIX_EXPRESSION */
extern T0* GE_new745(TC* ac, T1 initialize);
/* New instance of type ET_INFIX_AND_THEN_OPERATOR */
extern T0* GE_new746(TC* ac, T1 initialize);
/* New instance of type ET_INFIX_OR_ELSE_OPERATOR */
extern T0* GE_new747(TC* ac, T1 initialize);
/* New instance of type ET_EQUALITY_EXPRESSION */
extern T0* GE_new748(TC* ac, T1 initialize);
/* New instance of type ET_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new749(TC* ac, T1 initialize);
/* New instance of type ET_MANIFEST_TYPE */
extern T0* GE_new750(TC* ac, T1 initialize);
/* New instance of type ET_PREFIX_EXPRESSION */
extern T0* GE_new751(TC* ac, T1 initialize);
/* New instance of type ET_OLD_EXPRESSION */
extern T0* GE_new752(TC* ac, T1 initialize);
/* New instance of type ET_OLD_OBJECT_TEST */
extern T0* GE_new753(TC* ac, T1 initialize);
/* New instance of type ET_OBJECT_TEST */
extern T0* GE_new754(TC* ac, T1 initialize);
/* New instance of type ET_NAMED_OBJECT_TEST */
extern T0* GE_new755(TC* ac, T1 initialize);
/* New instance of type ET_ONCE_MANIFEST_STRING */
extern T0* GE_new756(TC* ac, T1 initialize);
/* New instance of type ET_ITERATION_CURSOR */
extern T0* GE_new757(TC* ac, T1 initialize);
/* New instance of type ET_DO_FUNCTION_INLINE_AGENT */
extern T0* GE_new759(TC* ac, T1 initialize);
/* New instance of type ET_ONCE_FUNCTION_INLINE_AGENT */
extern T0* GE_new760(TC* ac, T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
extern T0* GE_new761(TC* ac, T1 initialize);
/* New instance of type ET_DO_PROCEDURE_INLINE_AGENT */
extern T0* GE_new762(TC* ac, T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE_INLINE_AGENT */
extern T0* GE_new763(TC* ac, T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
extern T0* GE_new764(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_OPEN_TARGET */
extern T0* GE_new765(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_TYPED_OPEN_ARGUMENT */
extern T0* GE_new766(TC* ac, T1 initialize);
/* New instance of type ET_QUERY_LIST */
extern T0* GE_new769(TC* ac, T1 initialize);
/* New instance of type ET_PROCEDURE_LIST */
extern T0* GE_new770(TC* ac, T1 initialize);
/* New instance of type ET_TAGGED_ASSERTION */
extern T0* GE_new772(TC* ac, T1 initialize);
/* New instance of type ET_FILE_POSITION */
extern T0* GE_new774(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLASS] */
extern T0* GE_new775(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLASS] */
extern T0* GE_new776(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
extern T0* GE_new777(TC* ac, T1 initialize);
/* New instance of type ET_BASE_TYPE_LIST */
extern T0* GE_new778(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_CODES */
extern T0* GE_new779(TC* ac, T1 initialize);
/* New instance of type ET_ECF_AST_FACTORY */
extern T0* GE_new780(TC* ac, T1 initialize);
/* New instance of type DS_CELL [detachable ET_ECF_SYSTEM] */
extern T0* GE_new781(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_TARGET] */
extern T0* GE_new782(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_TARGET]] */
extern T0* GE_new783(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM_PARSER] */
extern T0* GE_new784(TC* ac, T1 initialize);
/* New instance of type XM_ELEMENT */
extern T0* GE_new785(TC* ac, T1 initialize);
/* New instance of type XM_POSITION_TABLE */
extern T0* GE_new786(TC* ac, T1 initialize);
/* New instance of type TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8] */
extern T0* GE_new787(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8]] */
extern T0* GE_new788(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM_PARSER, detachable STRING_8, PROCEDURE [TUPLE [ET_ECF_TARGET]], DS_CELL [detachable ET_ECF_SYSTEM]] */
extern T0* GE_new789(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
extern T0* GE_new791(TC* ac, T1 initialize);
/* New instance of type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
extern T0* GE_new792(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
extern T0* GE_new793(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_PARSER */
extern T0* GE_new795(TC* ac, T1 initialize);
/* New instance of type XM_TREE_CALLBACKS_PIPE */
extern T0* GE_new796(TC* ac, T1 initialize);
/* New instance of type XM_CALLBACKS_TO_TREE_FILTER */
extern T0* GE_new799(TC* ac, T1 initialize);
/* New instance of type ET_ECF_STATE */
extern T0* GE_new800(TC* ac, T1 initialize);
/* New instance of type ET_ECF_SYSTEM_CONFIG */
extern T0* GE_new801(TC* ac, T1 initialize);
/* New instance of type ET_ECF_LIBRARY */
extern T0* GE_new802(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ADAPTED_LIBRARY] */
extern T0* GE_new804(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ADAPTED_LIBRARY]] */
extern T0* GE_new805(TC* ac, T1 initialize);
/* New instance of type XM_DOCUMENT */
extern T0* GE_new806(TC* ac, T1 initialize);
/* New instance of type ET_COMPRESSED_POSITION */
extern T0* GE_new807(TC* ac, T1 initialize);
/* New instance of type XM_STOP_ON_ERROR_FILTER */
extern T0* GE_new809(TC* ac, T1 initialize);
/* New instance of type XM_ATTRIBUTE */
extern T0* GE_new810(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8] */
extern T0* GE_new811(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_TARGET, STRING_8] */
extern T0* GE_new812(TC* ac, T1 initialize);
/* New instance of type ET_ECF_TARGET_PARENT */
extern T0* GE_new813(TC* ac, T1 initialize);
/* New instance of type DS_CELL [detachable ET_ECF_SYSTEM_CONFIG] */
extern T0* GE_new814(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_INTERNAL_UNIVERSE, DS_CELL [detachable ET_ECF_SYSTEM_CONFIG]] */
extern T0* GE_new815(TC* ac, T1 initialize);
/* New instance of type ET_ECF_TARGETS */
extern T0* GE_new816(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8] */
extern T0* GE_new817(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
extern T0* GE_new818(TC* ac, T1 initialize);
/* New instance of type DS_CELL [detachable ET_ECF_LIBRARY] */
extern T0* GE_new820(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ADAPTED_LIBRARY */
extern T0* GE_new821(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_ADAPTED_LIBRARY, DS_CELL [detachable ET_ECF_LIBRARY]] */
extern T0* GE_new822(TC* ac, T1 initialize);
/* New instance of type ET_ECF_DOTNET_ASSEMBLY */
extern T0* GE_new824(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
extern T0* GE_new826(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [STRING_8, STRING_8] */
extern T0* GE_new827(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ERROR */
extern T0* GE_new828(TC* ac, T1 initialize);
/* New instance of type ET_ECF_CLUSTERS */
extern T0* GE_new829(TC* ac, T1 initialize);
/* New instance of type KL_AGENT_HASH_FUNCTION [STRING_8] */
extern T0* GE_new830(TC* ac, T1 initialize);
/* New instance of type TUPLE [STRING_8] */
extern T0* GE_new831(TC* ac, T1 initialize);
/* New instance of type FUNCTION [TUPLE [STRING_8], INTEGER_32] */
extern T0* GE_new832(TC* ac, T1 initialize);
/* New instance of type TUPLE [KL_STRING_ROUTINES] */
extern T0* GE_new833(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_IDENTIFIER, STRING_8] */
extern T0* GE_new835(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLUSTER] */
extern T0* GE_new837(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PRIMARY_TYPE */
extern T0* GE_new838(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE_LIST */
extern T0* GE_new839(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
extern T0* GE_new840(TC* ac, T1 initialize);
/* New instance of type TUPLE [INTEGER_32] */
extern T0* GE_new841(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
extern T0* GE_new842(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_DYNAMIC_SYSTEM] */
extern T0* GE_new843(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE */
extern T0* GE_new845(TC* ac, T1 initialize);
/* New instance of type ET_NESTED_TYPE_CONTEXT */
extern T0* GE_new847(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_TYPE */
extern T0* GE_new848(TC* ac, T1 initialize);
/* New instance of type ARRAY [ET_TYPE] */
extern T0* GE_new849(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_TYPE] */
extern T0* GE_new850(TC* ac, T6 a1, T1 initialize);
/* New instance of type ET_SYSTEM_MULTIPROCESSOR */
extern T0* GE_new853(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [STRING_8] */
extern T0* GE_new854(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [STRING_8] */
extern T0* GE_new855(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_CHECKER */
extern T0* GE_new857(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_SET_LIST */
extern T0* GE_new858(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
extern T0* GE_new859(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR */
extern T0* GE_new860(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR_LIST */
extern T0* GE_new861(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new862(TC* ac, T1 initialize);
/* New instance of type ET_TYPE_CHECKER */
extern T0* GE_new864(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
extern T0* GE_new867(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new868(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new869(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new870(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
extern T0* GE_new871(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new872(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
extern T0* GE_new873(TC* ac, T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE */
extern T0* GE_new874(TC* ac, T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE_BUILDER */
extern T0* GE_new875(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
extern T0* GE_new876(TC* ac, T1 initialize);
/* New instance of type ET_ITERATION_ITEM_SCOPE */
extern T0* GE_new877(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new878(TC* ac, T1 initialize);
/* New instance of type ET_INLINE_SEPARATE_ARGUMENT_SCOPE */
extern T0* GE_new879(TC* ac, T1 initialize);
/* New instance of type ET_ATTACHMENT_SCOPE */
extern T0* GE_new880(TC* ac, T1 initialize);
/* New instance of type ET_ATTACHMENT_SCOPE_BUILDER */
extern T0* GE_new881(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new882(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE] */
extern T0* GE_new883(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NOTE_TERM] */
extern T0* GE_new884(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
extern T0* GE_new885(TC* ac, T1 initialize);
/* New instance of type ET_ADAPTED_BASE_CLASS_CHECKER */
extern T0* GE_new886(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
extern T0* GE_new888(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
extern T0* GE_new889(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_TUPLE_TYPE */
extern T0* GE_new894(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_LIST */
extern T0* GE_new897(TC* ac, T1 initialize);
/* New instance of type NATIVE_STRING */
extern T0* GE_new899(TC* ac, T1 initialize);
/* New instance of type HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
extern T0* GE_new900(TC* ac, T1 initialize);
/* New instance of type RX_BYTE_CODE */
extern T0* GE_new902(TC* ac, T1 initialize);
/* New instance of type RX_CHARACTER_SET */
extern T0* GE_new903(TC* ac, T1 initialize);
/* New instance of type RX_CASE_MAPPING */
extern T0* GE_new904(TC* ac, T1 initialize);
/* New instance of type UC_UNICODE_ROUTINES */
extern T0* GE_new906(TC* ac, T1 initialize);
/* New instance of type ARRAY [RX_CHARACTER_SET] */
extern T0* GE_new907(TC* ac, T1 initialize);
/* New instance of type SPECIAL [RX_CHARACTER_SET] */
extern T0* GE_new908(TC* ac, T6 a1, T1 initialize);
/* New instance of type UC_STRING */
extern T0* GE_new909(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [STRING_8] */
extern T0* GE_new910(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [NATURAL_32] */
extern T0* GE_new911(TC* ac, T1 initialize);
/* New instance of type KL_STRING_OUTPUT_STREAM */
extern T0* GE_new912(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_IDENTIFIER] */
extern T0* GE_new913(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new914(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [BOOLEAN] */
extern T0* GE_new915(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new916(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES] */
extern T0* GE_new917(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
extern T0* GE_new918(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new919(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new920(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new921(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_RESULT] */
extern T0* GE_new922(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST */
extern T0* GE_new923(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET */
extern T0* GE_new924(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new925(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_EXPRESSION] */
extern T0* GE_new926(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_EXPRESSION] */
extern T0* GE_new927(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
extern T0* GE_new928(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
extern T0* GE_new929(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new930(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new931(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_OBJECT_TEST] */
extern T0* GE_new932(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [INTEGER_32] */
extern T0* GE_new933(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_AGENT] */
extern T0* GE_new934(TC* ac, T1 initialize);
/* New instance of type ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION */
extern T0* GE_new935(TC* ac, T1 initialize);
/* New instance of type ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION */
extern T0* GE_new937(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new938(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_FEATURE] */
extern T0* GE_new939(TC* ac, T1 initialize);
/* New instance of type ARRAY [INTEGER_32] */
extern T0* GE_new940(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
extern T0* GE_new941(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
extern T0* GE_new942(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new943(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION] */
extern T0* GE_new944(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT] */
extern T0* GE_new945(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
extern T0* GE_new946(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_FEATURE] */
extern T0* GE_new947(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [BOOLEAN, STRING_8] */
extern T0* GE_new948(TC* ac, T1 initialize);
/* New instance of type DS_STRING_HASH_TABLE */
extern T0* GE_new949(TC* ac, T1 initialize);
/* New instance of type KL_TEXT_OUTPUT_FILE */
extern T0* GE_new950(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
extern T0* GE_new951(TC* ac, T1 initialize);
/* New instance of type UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR */
extern T0* GE_new952(TC* ac, T1 initialize);
/* New instance of type UT_CANNOT_WRITE_TO_FILE_ERROR */
extern T0* GE_new953(TC* ac, T1 initialize);
/* New instance of type KL_DIRECTORY */
extern T0* GE_new954(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new955(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [STRING_8] */
extern T0* GE_new956(TC* ac, T1 initialize);
/* New instance of type UC_STRING_COMPARATOR */
extern T0* GE_new957(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8] */
extern T0* GE_new958(TC* ac, T1 initialize);
/* New instance of type TUPLE [STRING_8, STRING_8] */
extern T0* GE_new961(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new962(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_EQUALITY_TYPES */
extern T0* GE_new963(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_OBJECT_EQUALITY_TYPES */
extern T0* GE_new965(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_SPECIAL_TYPE */
extern T0* GE_new966(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new968(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_SECONDARY_TYPE */
extern T0* GE_new969(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID */
extern T0* GE_new970(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new976(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_INLINED_EXPRESSION */
extern T0* GE_new980(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_CALL_CONTEXT */
extern T0* GE_new981(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [INTEGER_32] */
extern T0* GE_new982(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE] */
extern T0* GE_new984(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new985(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new986(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new987(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new988(TC* ac, T1 initialize);
/* New instance of type UT_INTEGER_FORMATTER */
extern T0* GE_new989(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new994(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new995(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new999(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new1004(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, INTEGER_32, INTEGER_32] */
extern T0* GE_new1005(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1006(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1007(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1008(TC* ac, T1 initialize);
/* New instance of type TUPLE [GECC, DS_ARRAYED_LIST [STRING_8], INTEGER_32, MUTEX] */
extern T0* GE_new1011(TC* ac, T1 initialize);
/* New instance of type WORKER_THREAD */
extern T0* GE_new1012(TC* ac, T1 initialize);
/* New instance of type PATH */
extern T0* GE_new1014(TC* ac, T1 initialize);
/* New instance of type STRING_TO_INTEGER_CONVERTOR */
extern T0* GE_new1015(TC* ac, T1 initialize);
/* New instance of type STRING_8_SEARCHER */
extern T0* GE_new1017(TC* ac, T1 initialize);
/* New instance of type STD_FILES */
extern T0* GE_new1019(TC* ac, T1 initialize);
/* New instance of type HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
extern T0* GE_new1020(TC* ac, T1 initialize);
/* New instance of type DT_SHARED_SYSTEM_CLOCK */
extern T0* GE_new1022(TC* ac, T1 initialize);
/* New instance of type DT_SYSTEM_CLOCK */
extern T0* GE_new1023(TC* ac, T1 initialize);
/* New instance of type DT_DATE_TIME_DURATION */
extern T0* GE_new1024(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, STRING_8] */
extern T0* GE_new1029(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
extern T0* GE_new1032(TC* ac, T1 initialize);
/* New instance of type ET_UNQUALIFIED_CALL_EXPRESSION */
extern T0* GE_new1033(TC* ac, T1 initialize);
/* New instance of type ET_UNQUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new1034(TC* ac, T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [INTEGER_32] */
extern T0* GE_new1035(TC* ac, T1 initialize);
/* New instance of type DS_CELL [detachable ET_ECF_CONFIG] */
extern T0* GE_new1038(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_SYSTEM, DS_CELL [detachable ET_ECF_CONFIG]] */
extern T0* GE_new1040(TC* ac, T1 initialize);
/* New instance of type ET_ECF_OPTIONS */
extern T0* GE_new1042(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new1043(TC* ac, T1 initialize);
/* New instance of type XM_NAMESPACE */
extern T0* GE_new1044(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
extern T0* GE_new1045(TC* ac, T1 initialize);
/* New instance of type ET_ECF_REDIRECTION_CONFIG */
extern T0* GE_new1047(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PROCEDURE_TYPE */
extern T0* GE_new1048(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_FUNCTION_TYPE */
extern T0* GE_new1049(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET */
extern T0* GE_new1050(TC* ac, T1 initialize);
/* New instance of type KL_PLATFORM */
extern T0* GE_new1051(TC* ac, T1 initialize);
/* New instance of type UT_CONFIG_PARSER */
extern T0* GE_new1052(TC* ac, T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
extern T0* GE_new1053(TC* ac, T1 initialize);
/* New instance of type CELL [INTEGER_32] */
extern T0* GE_new1056(TC* ac, T1 initialize);
/* New instance of type KL_PATHNAME */
extern T0* GE_new1058(TC* ac, T1 initialize);
/* New instance of type KL_ANY_ROUTINES */
extern T0* GE_new1059(TC* ac, T1 initialize);
/* New instance of type KL_WINDOWS_INPUT_FILE */
extern T0* GE_new1060(TC* ac, T1 initialize);
/* New instance of type KL_UNIX_INPUT_FILE */
extern T0* GE_new1061(TC* ac, T1 initialize);
/* New instance of type ARRAY [IMMUTABLE_STRING_32] */
extern T0* GE_new1062(TC* ac, T1 initialize);
/* New instance of type SPECIAL [IMMUTABLE_STRING_32] */
extern T0* GE_new1063(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [NATURAL_8] */
extern T0* GE_new1064(TC* ac, T6 a1, T1 initialize);
/* New instance of type UC_UTF8_STRING */
extern T0* GE_new1066(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [STRING_8] */
extern T0* GE_new1067(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1068(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1069(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_MASTER_CLASS] */
extern T0* GE_new1070(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
extern T0* GE_new1073(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
extern T0* GE_new1074(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLASS_NAME] */
extern T0* GE_new1075(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
extern T0* GE_new1076(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_PARENT_ITEM] */
extern T0* GE_new1078(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
extern T0* GE_new1079(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT_ITEM] */
extern T0* GE_new1080(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM] */
extern T0* GE_new1081(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1083(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1085(TC* ac, T1 initialize);
/* New instance of type ET_BRACED_TYPE_LIST */
extern T0* GE_new1086(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_UNIVERSE] */
extern T0* GE_new1087(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
extern T0* GE_new1089(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_UNIVERSE] */
extern T0* GE_new1090(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_MASTER_CLASS] */
extern T0* GE_new1091(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_MASTER_CLASS] */
extern T0* GE_new1092(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_MASTER_CLASS]] */
extern T0* GE_new1093(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
extern T0* GE_new1094(TC* ac, T1 initialize);
/* New instance of type SPECIAL [AP_OPTION] */
extern T0* GE_new1096(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [AP_OPTION] */
extern T0* GE_new1097(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new1098(TC* ac, T1 initialize);
/* New instance of type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new1099(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new1100(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable STRING_8] */
extern T0* GE_new1101(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable STRING_8] */
extern T0* GE_new1102(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [STRING_8] */
extern T0* GE_new1103(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [BOOLEAN] */
extern T0* GE_new1104(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [BOOLEAN] */
extern T0* GE_new1105(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [INTEGER_32] */
extern T0* GE_new1106(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [INTEGER_32] */
extern T0* GE_new1107(TC* ac, T1 initialize);
/* New instance of type YY_FILE_BUFFER */
extern T0* GE_new1109(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
extern T0* GE_new1110(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new1111(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_CHECKER1 */
extern T0* GE_new1112(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER1 */
extern T0* GE_new1113(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new1114(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_NAME_TESTER */
extern T0* GE_new1115(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new1117(TC* ac, T1 initialize);
/* New instance of type ET_ALIAS_NAME_TESTER */
extern T0* GE_new1118(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLIENT_LIST] */
extern T0* GE_new1120(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1121(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1122(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1123(TC* ac, T1 initialize);
/* New instance of type ET_IDENTIFIER_TYPE_RESOLVER */
extern T0* GE_new1124(TC* ac, T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
extern T0* GE_new1125(TC* ac, T1 initialize);
/* New instance of type ET_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1126(TC* ac, T1 initialize);
/* New instance of type ET_SIGNATURE_CHECKER */
extern T0* GE_new1127(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_CHECKER2 */
extern T0* GE_new1128(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER2 */
extern T0* GE_new1129(TC* ac, T1 initialize);
/* New instance of type ET_BUILTIN_FEATURE_CHECKER */
extern T0* GE_new1130(TC* ac, T1 initialize);
/* New instance of type ET_PRECURSOR_CHECKER */
extern T0* GE_new1131(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
extern T0* GE_new1132(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_CLASS] */
extern T0* GE_new1133(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1134(TC* ac, T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
extern T0* GE_new1135(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
extern T0* GE_new1136(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME] */
extern T0* GE_new1137(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_CHECKER3 */
extern T0* GE_new1138(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_PROCEDURE] */
extern T0* GE_new1139(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_QUERY] */
extern T0* GE_new1140(TC* ac, T1 initialize);
/* New instance of type ET_SUPPLIER_BUILDER */
extern T0* GE_new1141(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
extern T0* GE_new1142(TC* ac, T1 initialize);
/* New instance of type YY_UNICODE_BUFFER */
extern T0* GE_new1144(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1145(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1146(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_OBJECT_TEST_LIST] */
extern T0* GE_new1147(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST] */
extern T0* GE_new1148(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new1149(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new1150(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new1151(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new1152(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new1153(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new1154(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new1155(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new1156(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ASSERTION_ITEM] */
extern T0* GE_new1157(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
extern T0* GE_new1158(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
extern T0* GE_new1159(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_QUERY] */
extern T0* GE_new1160(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
extern T0* GE_new1161(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_QUERY] */
extern T0* GE_new1162(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_PROCEDURE] */
extern T0* GE_new1163(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
extern T0* GE_new1164(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
extern T0* GE_new1165(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1166(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
extern T0* GE_new1167(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NAMED_CLASS] */
extern T0* GE_new1168(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
extern T0* GE_new1169(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_EXPRESSION_ITEM] */
extern T0* GE_new1171(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
extern T0* GE_new1173(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INSTRUCTION] */
extern T0* GE_new1175(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
extern T0* GE_new1176(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
extern T0* GE_new1178(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
extern T0* GE_new1179(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1180(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1181(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ITERATION_COMPONENT] */
extern T0* GE_new1182(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT] */
extern T0* GE_new1183(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new1184(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new1185(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_BASE_TYPE] */
extern T0* GE_new1186(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
extern T0* GE_new1187(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
extern T0* GE_new1188(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
extern T0* GE_new1189(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_LIBRARY] */
extern T0* GE_new1190(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
extern T0* GE_new1193(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new1194(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
extern T0* GE_new1197(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new1198(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER */
extern T0* GE_new1199(TC* ac, T1 initialize);
/* New instance of type XM_DEFAULT_POSITION */
extern T0* GE_new1200(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_POSITION] */
extern T0* GE_new1202(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
extern T0* GE_new1203(TC* ac, T1 initialize);
/* New instance of type XM_CALLBACKS_NULL */
extern T0* GE_new1204(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
extern T0* GE_new1205(TC* ac, T1 initialize);
/* New instance of type XM_NULL_EXTERNAL_RESOLVER */
extern T0* GE_new1207(TC* ac, T1 initialize);
/* New instance of type XM_DTD_CALLBACKS_NULL */
extern T0* GE_new1209(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1210(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_PARSER_NAME */
extern T0* GE_new1211(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1212(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new1213(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1214(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new1215(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
extern T0* GE_new1216(TC* ac, T1 initialize);
/* New instance of type XM_DTD_EXTERNAL_ID */
extern T0* GE_new1217(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_DTD_EXTERNAL_ID] */
extern T0* GE_new1218(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1219(TC* ac, T1 initialize);
/* New instance of type XM_DTD_ELEMENT_CONTENT */
extern T0* GE_new1220(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1221(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new1222(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1223(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new1224(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1225(TC* ac, T1 initialize);
/* New instance of type XM_DTD_ATTRIBUTE_CONTENT */
extern T0* GE_new1226(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1227(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
extern T0* GE_new1228(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST [STRING_8] */
extern T0* GE_new1229(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_BILINKED_LIST [STRING_8]] */
extern T0* GE_new1230(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [BOOLEAN] */
extern T0* GE_new1231(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
extern T0* GE_new1232(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_DECLARATION */
extern T0* GE_new1233(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_DECLARATION] */
extern T0* GE_new1234(TC* ac, T6 a1, T1 initialize);
/* New instance of type XM_EIFFEL_ENTITY_DEF */
extern T0* GE_new1237(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER_DTD */
extern T0* GE_new1238(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_PE_ENTITY_DEF */
extern T0* GE_new1240(TC* ac, T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER */
extern T0* GE_new1241(TC* ac, T1 initialize);
/* New instance of type ARRAY [XM_CALLBACKS_FILTER] */
extern T0* GE_new1242(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_CALLBACKS_FILTER] */
extern T0* GE_new1243(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET [XM_NAMESPACE] */
extern T0* GE_new1244(TC* ac, T1 initialize);
/* New instance of type XM_LINKED_LIST [XM_DOCUMENT_NODE] */
extern T0* GE_new1245(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_SYSTEM_CONFIG] */
extern T0* GE_new1248(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG] */
extern T0* GE_new1250(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_SYSTEM_CONFIG, STRING_8] */
extern T0* GE_new1251(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8] */
extern T0* GE_new1252(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_TARGET] */
extern T0* GE_new1253(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
extern T0* GE_new1255(TC* ac, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8] */
extern T0* GE_new1257(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION] */
extern T0* GE_new1258(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable RX_REGULAR_EXPRESSION] */
extern T0* GE_new1259(TC* ac, T6 a1, T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLIES */
extern T0* GE_new1260(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
extern T0* GE_new1264(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_IDENTIFIER] */
extern T0* GE_new1265(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8] */
extern T0* GE_new1266(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLUSTER] */
extern T0* GE_new1267(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLUSTER] */
extern T0* GE_new1268(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
extern T0* GE_new1269(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32] */
extern T0* GE_new1270(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_IDS */
extern T0* GE_new1271(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_FEATURE] */
extern T0* GE_new1272(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
extern T0* GE_new1273(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
extern T0* GE_new1275(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
extern T0* GE_new1276(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
extern T0* GE_new1277(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_TYPE] */
extern T0* GE_new1279(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1280(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_SYSTEM_PROCESSOR, DS_ARRAYED_LIST [ET_CLASS]] */
extern T0* GE_new1281(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new1283(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new1284(TC* ac, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [INTEGER_32] */
extern T0* GE_new1285(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
extern T0* GE_new1287(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TYPE] */
extern T0* GE_new1288(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
extern T0* GE_new1289(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_CLASS] */
extern T0* GE_new1290(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
extern T0* GE_new1291(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_AGENT] */
extern T0* GE_new1292(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
extern T0* GE_new1293(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new1294(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new1295(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new1296(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new1297(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new1298(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new1299(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new1300(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_FEATURE] */
extern T0* GE_new1301(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new1302(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new1303(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
extern T0* GE_new1304(TC* ac, T1 initialize);
/* New instance of type TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new1305(TC* ac, T1 initialize);
/* New instance of type SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
extern T0* GE_new1306(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
extern T0* GE_new1307(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new1308(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new1309(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new1310(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1311(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1314(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
extern T0* GE_new1315(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ITERATION_COMPONENT] */
extern T0* GE_new1317(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new1319(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new1320(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new1322(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new1323(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new1324(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE] */
extern T0* GE_new1325(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ASSERTIONS] */
extern T0* GE_new1326(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ASSERTIONS] */
extern T0* GE_new1329(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE] */
extern T0* GE_new1330(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE] */
extern T0* GE_new1331(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NOTE_TERM] */
extern T0* GE_new1332(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NOTE_TERM] */
extern T0* GE_new1333(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM] */
extern T0* GE_new1334(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
extern T0* GE_new1335(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
extern T0* GE_new1336(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
extern T0* GE_new1337(TC* ac, T1 initialize);
/* New instance of type SPECIAL [NATIVE_STRING] */
extern T0* GE_new1338(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [NATURAL_32] */
extern T0* GE_new1339(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [RX_CHARACTER_SET] */
extern T0* GE_new1340(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [NATURAL_32] */
extern T0* GE_new1341(TC* ac, T1 initialize);
/* New instance of type SPECIAL [NATURAL_64] */
extern T0* GE_new1342(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE [NATURAL_64, NATURAL_32] */
extern T0* GE_new1343(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32] */
extern T0* GE_new1344(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ARRAY [INTEGER_32]] */
extern T0* GE_new1345(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
extern T0* GE_new1346(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_INTEGER_ROUTINES */
extern T0* GE_new1347(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [NATURAL_32] */
extern T0* GE_new1350(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
extern T0* GE_new1352(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1353(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1354(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1355(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [BOOLEAN] */
extern T0* GE_new1356(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new1357(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new1358(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new1359(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_EQUALITY_TYPES] */
extern T0* GE_new1360(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES] */
extern T0* GE_new1361(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES] */
extern T0* GE_new1362(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
extern T0* GE_new1363(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
extern T0* GE_new1364(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
extern T0* GE_new1365(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new1366(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new1367(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new1368(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new1369(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new1370(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new1371(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new1372(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new1373(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new1374(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RESULT] */
extern T0* GE_new1375(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_RESULT] */
extern T0* GE_new1376(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_RESULT] */
extern T0* GE_new1377(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new1378(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new1379(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new1380(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_EXPRESSION] */
extern T0* GE_new1381(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
extern T0* GE_new1382(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
extern T0* GE_new1383(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
extern T0* GE_new1384(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1385(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_OBJECT_TEST] */
extern T0* GE_new1387(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
extern T0* GE_new1388(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
extern T0* GE_new1389(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [INTEGER_32] */
extern T0* GE_new1390(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_AGENT] */
extern T0* GE_new1393(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT] */
extern T0* GE_new1394(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
extern T0* GE_new1395(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new1396(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new1397(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new1398(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE] */
extern T0* GE_new1399(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
extern T0* GE_new1400(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CONSTANT] */
extern T0* GE_new1401(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
extern T0* GE_new1403(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
extern T0* GE_new1404(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_CONSTANT] */
extern T0* GE_new1405(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
extern T0* GE_new1407(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new1408(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1410(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new1411(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION] */
extern T0* GE_new1412(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION] */
extern T0* GE_new1413(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION] */
extern T0* GE_new1414(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_CALL_CONTEXT] */
extern T0* GE_new1415(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT] */
extern T0* GE_new1416(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT] */
extern T0* GE_new1417(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
extern T0* GE_new1418(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE] */
extern T0* GE_new1419(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
extern T0* GE_new1422(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new1427(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new1428(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new1429(TC* ac, T1 initialize);
/* New instance of type SPECIAL [TUPLE [STRING_8, detachable STRING_8]] */
extern T0* GE_new1430(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [TUPLE [STRING_8, detachable STRING_8]] */
extern T0* GE_new1432(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [TUPLE [STRING_8, detachable STRING_8], STRING_8] */
extern T0* GE_new1433(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1434(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1435(TC* ac, T1 initialize);
/* New instance of type ARRAY [BOOLEAN] */
extern T0* GE_new1436(TC* ac, T1 initialize);
/* New instance of type THREAD_ATTRIBUTES */
extern T0* GE_new1438(TC* ac, T1 initialize);
/* New instance of type CELL [BOOLEAN] */
extern T0* GE_new1439(TC* ac, T1 initialize);
/* New instance of type CHARACTER_PROPERTY */
extern T0* GE_new1441(TC* ac, T1 initialize);
/* New instance of type ET_SYSTEM_ERROR */
extern T0* GE_new1442(TC* ac, T1 initialize);
/* New instance of type ET_INTERNAL_ERROR */
extern T0* GE_new1443(TC* ac, T1 initialize);
/* New instance of type ET_SYNTAX_ERROR */
extern T0* GE_new1444(TC* ac, T1 initialize);
/* New instance of type ET_VALIDITY_ERROR */
extern T0* GE_new1445(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_COMMA_ARGUMENT */
extern T0* GE_new1446(TC* ac, T1 initialize);
/* New instance of type ET_LOCAL_COMMA_VARIABLE */
extern T0* GE_new1447(TC* ac, T1 initialize);
/* New instance of type ET_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new1448(TC* ac, T1 initialize);
/* New instance of type ET_KEYWORD_EXPRESSION */
extern T0* GE_new1450(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1453(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CREATOR] */
extern T0* GE_new1454(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CREATOR] */
extern T0* GE_new1455(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1456(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1457(TC* ac, T6 a1, T1 initialize);
/* New instance of type ET_ECF_NOTE_ELEMENT */
extern T0* GE_new1458(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ADAPTED_LIBRARIES */
extern T0* GE_new1459(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new1460(TC* ac, T1 initialize);
/* New instance of type ET_ECF_FILE_RULES */
extern T0* GE_new1461(TC* ac, T1 initialize);
/* New instance of type ET_ECF_NAMESPACES */
extern T0* GE_new1462(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_CFLAGS */
extern T0* GE_new1463(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_INCLUDES */
extern T0* GE_new1464(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LIBRARIES */
extern T0* GE_new1465(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LINKER_FLAGS */
extern T0* GE_new1466(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_MAKES */
extern T0* GE_new1467(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_OBJECTS */
extern T0* GE_new1468(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_RESOURCES */
extern T0* GE_new1469(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ACTION] */
extern T0* GE_new1470(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ADAPTED_PRECOMPILED_LIBRARY */
extern T0* GE_new1471(TC* ac, T1 initialize);
/* New instance of type ET_ECF_VERSION */
extern T0* GE_new1473(TC* ac, T1 initialize);
/* New instance of type ET_ECF_NAMESPACE */
extern T0* GE_new1474(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_CFLAG */
extern T0* GE_new1475(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_INCLUDE */
extern T0* GE_new1476(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LIBRARY */
extern T0* GE_new1477(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LINKER_FLAG */
extern T0* GE_new1478(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_MAKE */
extern T0* GE_new1479(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_OBJECT */
extern T0* GE_new1480(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_RESOURCE */
extern T0* GE_new1481(TC* ac, T1 initialize);
/* New instance of type ET_ECF_FILE_RULE */
extern T0* GE_new1482(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ACTION */
extern T0* GE_new1483(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8] */
extern T0* GE_new1484(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1485(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_OPTIONS] */
extern T0* GE_new1486(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_OPTIONS]] */
extern T0* GE_new1487(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ROOT_CLASS */
extern T0* GE_new1488(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ROOT_ALL_CLASSES */
extern T0* GE_new1489(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ORED_CONDITIONS */
extern T0* GE_new1490(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ANDED_CONDITIONS */
extern T0* GE_new1491(TC* ac, T1 initialize);
/* New instance of type ET_ECF_VISIBLE_CLASS */
extern T0* GE_new1492(TC* ac, T1 initialize);
/* New instance of type ET_ECF_BUILD_CONDITION */
extern T0* GE_new1494(TC* ac, T1 initialize);
/* New instance of type ET_ECF_CONCURRENCY_CONDITION */
extern T0* GE_new1495(TC* ac, T1 initialize);
/* New instance of type ET_ECF_VOID_SAFETY_CONDITION */
extern T0* GE_new1496(TC* ac, T1 initialize);
/* New instance of type ET_ECF_CUSTOM_CONDITION */
extern T0* GE_new1497(TC* ac, T1 initialize);
/* New instance of type ET_ECF_DOTNET_CONDITION */
extern T0* GE_new1498(TC* ac, T1 initialize);
/* New instance of type ET_ECF_DYNAMIC_RUNTIME_CONDITION */
extern T0* GE_new1499(TC* ac, T1 initialize);
/* New instance of type ET_ECF_PLATFORM_CONDITION */
extern T0* GE_new1500(TC* ac, T1 initialize);
/* New instance of type ET_ECF_COMPILER_VERSION_CONDITION */
extern T0* GE_new1502(TC* ac, T1 initialize);
/* New instance of type ET_ECF_MSIL_CLR_VERSION_CONDITION */
extern T0* GE_new1503(TC* ac, T1 initialize);
/* New instance of type UT_COUNTER */
extern T0* GE_new1505(TC* ac, T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ET_CLASS] */
extern T0* GE_new1506(TC* ac, T1 initialize);
/* New instance of type TUPLE [UT_COUNTER] */
extern T0* GE_new1507(TC* ac, T1 initialize);
/* New instance of type TUPLE [KL_AGENT_ROUTINES [ET_CLASS], PROCEDURE [TUPLE]] */
extern T0* GE_new1508(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_CLASS]]] */
extern T0* GE_new1509(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
extern T0* GE_new1510(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1512(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new1513(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new1514(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1515(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new1516(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]], PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]]] */
extern T0* GE_new1517(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_DOTNET_ASSEMBLIES] */
extern T0* GE_new1518(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1519(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_CLUSTER] */
extern T0* GE_new1520(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_CLUSTER]] */
extern T0* GE_new1521(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM] */
extern T0* GE_new1522(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1523(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_AST_PROCESSOR] */
extern T0* GE_new1524(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1525(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
extern T0* GE_new1526(TC* ac, T1 initialize);
/* New instance of type ET_ANCESTORS_STATUS_CHECKER */
extern T0* GE_new1527(TC* ac, T1 initialize);
/* New instance of type ET_FLATTENING_STATUS_CHECKER */
extern T0* GE_new1528(TC* ac, T1 initialize);
/* New instance of type ET_INTERFACE_STATUS_CHECKER */
extern T0* GE_new1529(TC* ac, T1 initialize);
/* New instance of type ET_IMPLEMENTATION_STATUS_CHECKER */
extern T0* GE_new1530(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
extern T0* GE_new1531(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_FLATTENING_STATUS_CHECKER] */
extern T0* GE_new1532(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_INTERFACE_STATUS_CHECKER] */
extern T0* GE_new1533(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
extern T0* GE_new1534(TC* ac, T1 initialize);
/* New instance of type TUPLE [BOOLEAN] */
extern T0* GE_new1535(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_CLUSTER]]] */
extern T0* GE_new1538(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new1542(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]]] */
extern T0* GE_new1543(TC* ac, T1 initialize);
/* New instance of type ET_PARENTHESIS_EXPRESSION */
extern T0* GE_new1544(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_LIBRARY] */
extern T0* GE_new1547(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [ET_LIBRARY]] */
extern T0* GE_new1548(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_RENAME_ITEM] */
extern T0* GE_new1552(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
extern T0* GE_new1553(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_EXPORT] */
extern T0* GE_new1555(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPORT] */
extern T0* GE_new1556(TC* ac, T1 initialize);
/* New instance of type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
extern T0* GE_new1559(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_FEATURE */
extern T0* GE_new1561(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_QUERY] */
extern T0* GE_new1562(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_PROCEDURE] */
extern T0* GE_new1563(TC* ac, T1 initialize);
/* New instance of type ET_INHERITED_FEATURE */
extern T0* GE_new1564(TC* ac, T1 initialize);
/* New instance of type ET_REDECLARED_FEATURE */
extern T0* GE_new1566(TC* ac, T1 initialize);
/* New instance of type KL_CHARACTER_BUFFER */
extern T0* GE_new1574(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new1576(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new1577(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ALIAS_NAME] */
extern T0* GE_new1578(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
extern T0* GE_new1579(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_CURRENT_TARGET */
extern T0* GE_new1580(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CHOICE_ITEM] */
extern T0* GE_new1582(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
extern T0* GE_new1583(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1584(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1586(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1587(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1589(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ELSEIF_EXPRESSION] */
extern T0* GE_new1590(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION] */
extern T0* GE_new1591(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ELSEIF_PART] */
extern T0* GE_new1592(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
extern T0* GE_new1593(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_CLAUSE] */
extern T0* GE_new1594(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
extern T0* GE_new1595(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1596(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1598(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1599(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1600(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1601(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1603(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1605(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1606(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NOTE_ITEM] */
extern T0* GE_new1608(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NOTE_ITEM] */
extern T0* GE_new1609(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NOTE_TERM_ITEM] */
extern T0* GE_new1610(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM] */
extern T0* GE_new1611(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_PARENT_LIST] */
extern T0* GE_new1612(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
extern T0* GE_new1613(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_TYPE_CONSTRAINT_ITEM] */
extern T0* GE_new1615(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM] */
extern T0* GE_new1616(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_WHEN_EXPRESSION] */
extern T0* GE_new1617(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION] */
extern T0* GE_new1618(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_WHEN_PART] */
extern T0* GE_new1619(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
extern T0* GE_new1620(TC* ac, T1 initialize);
/* New instance of type XM_LINKED_LIST [XM_ELEMENT_NODE] */
extern T0* GE_new1622(TC* ac, T1 initialize);
/* New instance of type UC_STRING_EQUALITY_TESTER */
extern T0* GE_new1624(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new1626(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new1627(TC* ac, T1 initialize);
/* New instance of type DS_PAIR [XM_POSITION, XM_NODE] */
extern T0* GE_new1628(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_INPUT_STREAM */
extern T0* GE_new1629(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
extern T0* GE_new1630(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_TARGET] */
extern T0* GE_new1631(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1632(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT] */
extern T0* GE_new1634(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
extern T0* GE_new1635(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new1636(TC* ac, T1 initialize);
/* New instance of type INTEGER_OVERFLOW_CHECKER */
extern T0* GE_new1643(TC* ac, T1 initialize);
/* New instance of type CONSOLE */
extern T0* GE_new1644(TC* ac, T1 initialize);
/* New instance of type C_DATE */
extern T0* GE_new1645(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
extern T0* GE_new1647(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new1648(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new1649(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new1650(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_TARGET_LIST */
extern T0* GE_new1652(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [YY_BUFFER] */
extern T0* GE_new1653(TC* ac, T1 initialize);
/* New instance of type UT_SYNTAX_ERROR */
extern T0* GE_new1654(TC* ac, T1 initialize);
/* New instance of type UT_TOO_MANY_INCLUDES_ERROR */
extern T0* GE_new1655(TC* ac, T1 initialize);
/* New instance of type ARRAY [detachable STRING_8] */
extern T0* GE_new1656(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1658(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1659(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1660(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1661(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1662(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1663(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_TYPE_ITEM] */
extern T0* GE_new1664(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
extern T0* GE_new1665(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
extern T0* GE_new1666(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new1667(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT] */
extern T0* GE_new1669(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [NATURAL_32] */
extern T0* GE_new1670(TC* ac, T1 initialize);
/* New instance of type ET_BASE_TYPE_CONSTRAINT_LIST */
extern T0* GE_new1671(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new1672(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FLATTENED_FEATURE] */
extern T0* GE_new1673(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_NAME] */
extern T0* GE_new1676(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
extern T0* GE_new1677(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
extern T0* GE_new1678(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new1680(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
extern T0* GE_new1681(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT_LIST] */
extern T0* GE_new1682(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
extern T0* GE_new1683(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1685(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT] */
extern T0* GE_new1686(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT] */
extern T0* GE_new1687(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET [ET_FEATURE_NAME] */
extern T0* GE_new1688(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
extern T0* GE_new1689(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new1690(TC* ac, T1 initialize);
/* New instance of type ET_REPLICATED_FEATURE */
extern T0* GE_new1692(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
extern T0* GE_new1693(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
extern T0* GE_new1694(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_SIGNATURE_TESTER */
extern T0* GE_new1695(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_DOTNET_FEATURE] */
extern T0* GE_new1696(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new1698(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
extern T0* GE_new1700(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
extern T0* GE_new1701(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
extern T0* GE_new1702(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
extern T0* GE_new1703(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_PARENT_FEATURE] */
extern T0* GE_new1704(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
extern T0* GE_new1705(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
extern T0* GE_new1706(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_CLASS] */
extern T0* GE_new1709(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
extern T0* GE_new1711(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_RENAME] */
extern T0* GE_new1712(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RENAME] */
extern T0* GE_new1715(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME] */
extern T0* GE_new1719(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_PROCEDURE] */
extern T0* GE_new1720(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_QUERY] */
extern T0* GE_new1721(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [NATURAL_8] */
extern T0* GE_new1724(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
extern T0* GE_new1725(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_CHARACTER_ENTITY */
extern T0* GE_new1726(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [XM_POSITION] */
extern T0* GE_new1727(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
extern T0* GE_new1728(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [XM_EIFFEL_SCANNER] */
extern T0* GE_new1729(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1730(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
extern T0* GE_new1733(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1734(TC* ac, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1737(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1738(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1739(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1740(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1741(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [STRING_8] */
extern T0* GE_new1742(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [STRING_8] */
extern T0* GE_new1743(TC* ac, T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER_CONTEXT */
extern T0* GE_new1744(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_QUEUE [detachable STRING_8] */
extern T0* GE_new1747(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_QUEUE [STRING_8] */
extern T0* GE_new1748(TC* ac, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [XM_NAMESPACE] */
extern T0* GE_new1749(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
extern T0* GE_new1750(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
extern T0* GE_new1751(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_NAMESPACE] */
extern T0* GE_new1752(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_LINKABLE [XM_DOCUMENT_NODE] */
extern T0* GE_new1753(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1755(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, INTEGER_32] */
extern T0* GE_new1756(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
extern T0* GE_new1758(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_CALL_NAME] */
extern T0* GE_new1760(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
extern T0* GE_new1762(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
extern T0* GE_new1763(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
extern T0* GE_new1764(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
extern T0* GE_new1765(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
extern T0* GE_new1767(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
extern T0* GE_new1768(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1769(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1770(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1771(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS] */
extern T0* GE_new1772(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_CLASS] */
extern T0* GE_new1774(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS] */
extern T0* GE_new1775(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1776(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT] */
extern T0* GE_new1777(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new1778(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [RX_CHARACTER_SET] */
extern T0* GE_new1779(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET] */
extern T0* GE_new1780(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [NATURAL_64] */
extern T0* GE_new1785(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1789(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1790(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1791(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1792(TC* ac, T1 initialize);
/* New instance of type KL_STRING_INPUT_STREAM */
extern T0* GE_new1794(TC* ac, T1 initialize);
/* New instance of type UT_TRISTATE */
extern T0* GE_new1796(TC* ac, T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ANY] */
extern T0* GE_new1797(TC* ac, T1 initialize);
/* New instance of type TUPLE [UT_TRISTATE] */
extern T0* GE_new1798(TC* ac, T1 initialize);
/* New instance of type TUPLE [KL_AGENT_ROUTINES [ANY], PROCEDURE [TUPLE]] */
extern T0* GE_new1799(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [ET_MASTER_CLASS]] */
extern T0* GE_new1800(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE] */
extern T0* GE_new1801(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
extern T0* GE_new1803(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
extern T0* GE_new1804(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1805(TC* ac, T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ET_UNIVERSE] */
extern T0* GE_new1806(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [ET_UNIVERSE]] */
extern T0* GE_new1807(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
extern T0* GE_new1808(TC* ac, T1 initialize);
/* New instance of type TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], PREDICATE [TUPLE [ET_UNIVERSE]]] */
extern T0* GE_new1809(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
extern T0* GE_new1811(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
extern T0* GE_new1812(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN], FUNCTION [TUPLE, BOOLEAN]] */
extern T0* GE_new1813(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
extern T0* GE_new1814(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_MASTER_CLASS, ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1821(TC* ac, T1 initialize);
/* New instance of type DS_CELL [detachable ET_CLASS] */
extern T0* GE_new1822(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_CELL [detachable ET_CLASS]] */
extern T0* GE_new1823(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new1825(TC* ac, T1 initialize);
/* New instance of type ET_SEEDED_QUERY_COMPARATOR */
extern T0* GE_new1827(TC* ac, T1 initialize);
/* New instance of type ET_SEEDED_PROCEDURE_COMPARATOR */
extern T0* GE_new1830(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_CLIENT_LIST] */
extern T0* GE_new1834(TC* ac, T1 initialize);
/* New instance of type ET_STANDARD_ONCE_KEYS */
extern T0* GE_new1838(TC* ac, T1 initialize);
/* New instance of type XM_COMMENT */
extern T0* GE_new1840(TC* ac, T1 initialize);
/* New instance of type XM_PROCESSING_INSTRUCTION */
extern T0* GE_new1841(TC* ac, T1 initialize);
/* New instance of type XM_CHARACTER_DATA */
extern T0* GE_new1842(TC* ac, T1 initialize);
/* New instance of type ET_LIKE_N */
extern T0* GE_new1844(TC* ac, T1 initialize);
/* New instance of type ET_PARENTHESIS_SYMBOL */
extern T0* GE_new1859(TC* ac, T1 initialize);
/* New instance of type ET_PARENTHESIS_INSTRUCTION */
extern T0* GE_new1862(TC* ac, T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new1866(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
extern T0* GE_new1867(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
extern T0* GE_new1868(TC* ac, T1 initialize);
/* New instance of type ET_INFIX_CAST_EXPRESSION */
extern T0* GE_new1870(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new1873(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new1874(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
extern T0* GE_new1882(TC* ac, T1 initialize);
/* New instance of type ET_BASE_TYPE_RENAME_CONSTRAINT */
extern T0* GE_new1884(TC* ac, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1887(TC* ac, T1 initialize);
/* New instance of type SPECIAL [NATURAL_16] */
extern T0* GE_new1896(TC* ac, T6 a1, T1 initialize);
/* New instance of type ARRAY [NATURAL_16] */
extern T0* GE_new1897(TC* ac, T1 initialize);
/* New instance of type ARRAY [NATURAL_32] */
extern T0* GE_new1898(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1899(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1900(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1901(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1902(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1903(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
extern T0* GE_new1904(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_NAMESPACE] */
extern T0* GE_new1905(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1906(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1907(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1908(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1909(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1910(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1911(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1912(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ACTION] */
extern T0* GE_new1913(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ACTION] */
extern T0* GE_new1914(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ACTION] */
extern T0* GE_new1915(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1916(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_OPTIONS] */
extern T0* GE_new1917(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS] */
extern T0* GE_new1920(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8] */
extern T0* GE_new1921(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1922(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1923(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1924(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new1925(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM] */
extern T0* GE_new1926(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1927(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1928(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1929(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1931(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1933(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1934(TC* ac, T6 a1, T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER1 */
extern T0* GE_new1935(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER2 */
extern T0* GE_new1936(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
extern T0* GE_new1937(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER3 */
extern T0* GE_new1938(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_LIBRARY] */
extern T0* GE_new1939(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIBRARY] */
extern T0* GE_new1940(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_LIBRARY] */
extern T0* GE_new1941(TC* ac, T6 a1, T1 initialize);
/* New instance of type LX_DFA_WILDCARD */
extern T0* GE_new1942(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
extern T0* GE_new1943(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_QUEUE [CHARACTER_8] */
extern T0* GE_new1946(TC* ac, T1 initialize);
/* New instance of type UC_UTF16_ROUTINES */
extern T0* GE_new1947(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
extern T0* GE_new1948(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1949(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1950(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1951(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_TARGET_PARENT] */
extern T0* GE_new1952(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT] */
extern T0* GE_new1953(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET_PARENT] */
extern T0* GE_new1954(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_CLUSTER] */
extern T0* GE_new1955(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
extern T0* GE_new1956(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
extern T0* GE_new1957(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TARGET] */
extern T0* GE_new1958(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
extern T0* GE_new1959(TC* ac, T1 initialize);
/* New instance of type SPECIAL [YY_BUFFER] */
extern T0* GE_new1960(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [YY_BUFFER] */
extern T0* GE_new1961(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
extern T0* GE_new1963(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_BASE_TYPE_CONSTRAINT] */
extern T0* GE_new1964(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT] */
extern T0* GE_new1965(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT] */
extern T0* GE_new1966(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [NATURAL_32] */
extern T0* GE_new1967(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
extern T0* GE_new1968(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
extern T0* GE_new1969(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new1971(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_REPLICABLE_FEATURE] */
extern T0* GE_new1972(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
extern T0* GE_new1974(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
extern T0* GE_new1975(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [ET_ADAPTED_FEATURE] */
extern T0* GE_new1976(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
extern T0* GE_new1977(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_PARENT_FEATURE] */
extern T0* GE_new1978(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
extern T0* GE_new1979(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DOTNET_FEATURE] */
extern T0* GE_new1980(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
extern T0* GE_new1981(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
extern T0* GE_new1982(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new1983(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new1986(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new1987(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
extern T0* GE_new1988(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [ET_DOTNET_FEATURE] */
extern T0* GE_new1989(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
extern T0* GE_new1990(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_LIKE_FEATURE] */
extern T0* GE_new1991(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
extern T0* GE_new1992(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
extern T0* GE_new1993(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
extern T0* GE_new1995(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
extern T0* GE_new1996(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
extern T0* GE_new1997(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
extern T0* GE_new1998(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1999(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new2000(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new2002(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new2003(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [detachable STRING_8] */
extern T0* GE_new2004(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new2005(TC* ac, T1 initialize);
/* New instance of type ET_CLUSTER_ERROR */
extern T0* GE_new2006(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2007(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_CLUSTER] */
extern T0* GE_new2008(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_CLUSTER]] */
extern T0* GE_new2009(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_TARGET, STRING_8] */
extern T0* GE_new2010(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new2012(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_ADAPTED_LIBRARY]] */
extern T0* GE_new2013(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new2014(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY]] */
extern T0* GE_new2015(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [STRING_8]] */
extern T0* GE_new2018(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_OPTIONS, STRING_8] */
extern T0* GE_new2019(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
extern T0* GE_new2020(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_EQUALITY_EXPRESSION */
extern T0* GE_new2023(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new2024(TC* ac, T1 initialize);
/* New instance of type KL_CHARACTER_ROUTINES */
extern T0* GE_new2028(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_SEPARATE_CALL, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new2029(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new2030(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
extern T0* GE_new2031(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_GROUP] */
extern T0* GE_new2036(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], PREDICATE [TUPLE [ET_CLASS]]] */
extern T0* GE_new2037(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2038(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_BUILTIN_EXPRESSION */
extern T0* GE_new2039(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_FROM_EXPRESSION */
extern T0* GE_new2040(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_TO_EXPRESSION */
extern T0* GE_new2041(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [XM_ELEMENT_NODE] */
extern T0* GE_new2051(TC* ac, T1 initialize);
/* New instance of type TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8] */
extern T0* GE_new2052(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
extern T0* GE_new2055(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new2061(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_CFLAG]] */
extern T0* GE_new2062(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
extern T0* GE_new2063(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new2064(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
extern T0* GE_new2065(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new2066(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
extern T0* GE_new2067(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new2068(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG]] */
extern T0* GE_new2069(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new2070(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_MAKE]] */
extern T0* GE_new2071(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new2072(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
extern T0* GE_new2073(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new2074(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_RESOURCE]] */
extern T0* GE_new2075(TC* ac, T1 initialize);
/* New instance of type TUPLE [LX_WILDCARD] */
extern T0* GE_new2078(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [LX_WILDCARD]] */
extern T0* GE_new2079(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
extern T0* GE_new2080(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [STRING_8]] */
extern T0* GE_new2082(TC* ac, T1 initialize);
/* New instance of type TUPLE [KL_STRING_ROUTINES, STRING_8] */
extern T0* GE_new2083(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new2085(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new2087(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new2088(TC* ac, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
extern T0* GE_new2089(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new2091(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new2092(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new2093(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new2094(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new2095(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new2096(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
extern T0* GE_new2097(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_FILE_RULE] */
extern T0* GE_new2098(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
extern T0* GE_new2099(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_NAMESPACE] */
extern T0* GE_new2100(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_NAMESPACE] */
extern T0* GE_new2101(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_NAMESPACE] */
extern T0* GE_new2102(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new2103(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new2104(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new2105(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new2106(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new2107(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new2108(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new2109(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new2110(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new2111(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new2112(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new2113(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new2114(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new2115(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new2116(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new2117(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new2118(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new2119(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new2120(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new2121(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new2122(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new2123(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new2124(TC* ac, T1 initialize);
/* New instance of type SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new2125(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new2126(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new2127(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new2128(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new2129(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM] */
extern T0* GE_new2130(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_CONDITION_ITEM] */
extern T0* GE_new2131(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION_ITEM] */
extern T0* GE_new2132(TC* ac, T1 initialize);
/* New instance of type LX_WILDCARD_PARSER */
extern T0* GE_new2134(TC* ac, T1 initialize);
/* New instance of type LX_DESCRIPTION */
extern T0* GE_new2135(TC* ac, T1 initialize);
/* New instance of type LX_FULL_DFA */
extern T0* GE_new2136(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_WILDCARD] */
extern T0* GE_new2138(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_WILDCARD] */
extern T0* GE_new2141(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
extern T0* GE_new2142(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [CHARACTER_8] */
extern T0* GE_new2143(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
extern T0* GE_new2145(TC* ac, T1 initialize);
/* New instance of type SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
extern T0* GE_new2146(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
extern T0* GE_new2149(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
extern T0* GE_new2150(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new2151(TC* ac, T1 initialize);
/* New instance of type ET_UNIVERSE_ERROR */
extern T0* GE_new2152(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_ERROR */
extern T0* GE_new2153(TC* ac, T1 initialize);
/* New instance of type AP_OPTION_COMPARATOR */
extern T0* GE_new2154(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [AP_OPTION] */
extern T0* GE_new2155(TC* ac, T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new2158(TC* ac, T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_SUBLIST */
extern T0* GE_new2159(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_FILE_RULE] */
extern T0* GE_new2162(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [ET_ECF_FILE_RULE]] */
extern T0* GE_new2163(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_FILE_RULE]] */
extern T0* GE_new2165(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_FILE_RULES] */
extern T0* GE_new2166(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_STATE] */
extern T0* GE_new2167(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
extern T0* GE_new2170(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
extern T0* GE_new2173(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
extern T0* GE_new2174(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_RULE] */
extern T0* GE_new2175(TC* ac, T1 initialize);
/* New instance of type LX_START_CONDITIONS */
extern T0* GE_new2176(TC* ac, T1 initialize);
/* New instance of type LX_ACTION_FACTORY */
extern T0* GE_new2177(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
extern T0* GE_new2178(TC* ac, T1 initialize);
/* New instance of type LX_SYMBOL_CLASS */
extern T0* GE_new2179(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [STRING_32, STRING_8] */
extern T0* GE_new2180(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [LX_SYMBOL_CLASS] */
extern T0* GE_new2181(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32] */
extern T0* GE_new2182(TC* ac, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [STRING_32] */
extern T0* GE_new2183(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [BOOLEAN] */
extern T0* GE_new2184(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [STRING_32] */
extern T0* GE_new2185(TC* ac, T1 initialize);
/* New instance of type SPECIAL [STRING_32] */
extern T0* GE_new2186(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
extern T0* GE_new2187(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_SYMBOL_CLASS] */
extern T0* GE_new2188(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_NFA] */
extern T0* GE_new2189(TC* ac, T1 initialize);
/* New instance of type LX_NFA */
extern T0* GE_new2190(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_NFA] */
extern T0* GE_new2191(TC* ac, T6 a1, T1 initialize);
/* New instance of type LX_RULE */
extern T0* GE_new2192(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS] */
extern T0* GE_new2193(TC* ac, T1 initialize);
/* New instance of type LX_EQUIVALENCE_CLASSES */
extern T0* GE_new2194(TC* ac, T1 initialize);
/* New instance of type LX_UNRECOGNIZED_RULE_ERROR */
extern T0* GE_new2195(TC* ac, T1 initialize);
/* New instance of type LX_INVALID_UNICODE_CHARACTER_ERROR */
extern T0* GE_new2196(TC* ac, T1 initialize);
/* New instance of type LX_MISSING_QUOTE_ERROR */
extern T0* GE_new2197(TC* ac, T1 initialize);
/* New instance of type LX_BAD_CHARACTER_CLASS_ERROR */
extern T0* GE_new2198(TC* ac, T1 initialize);
/* New instance of type LX_BAD_CHARACTER_ERROR */
extern T0* GE_new2199(TC* ac, T1 initialize);
/* New instance of type LX_FULL_AND_META_ERROR */
extern T0* GE_new2200(TC* ac, T1 initialize);
/* New instance of type LX_FULL_AND_REJECT_ERROR */
extern T0* GE_new2201(TC* ac, T1 initialize);
/* New instance of type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
extern T0* GE_new2202(TC* ac, T1 initialize);
/* New instance of type LX_CHARACTER_OUT_OF_RANGE_ERROR */
extern T0* GE_new2203(TC* ac, T1 initialize);
/* New instance of type ARRAY [LX_RULE] */
extern T0* GE_new2204(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_RULE] */
extern T0* GE_new2205(TC* ac, T6 a1, T1 initialize);
/* New instance of type LX_DFA_STATE */
extern T0* GE_new2206(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_NFA_STATE] */
extern T0* GE_new2207(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_DFA_STATE] */
extern T0* GE_new2208(TC* ac, T1 initialize);
/* New instance of type LX_SYMBOL_PARTITIONS */
extern T0* GE_new2209(TC* ac, T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [LX_RULE] */
extern T0* GE_new2210(TC* ac, T1 initialize);
/* New instance of type ARRAY [detachable LX_RULE] */
extern T0* GE_new2211(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable LX_RULE] */
extern T0* GE_new2212(TC* ac, T6 a1, T1 initialize);
/* New instance of type LX_START_CONDITION */
extern T0* GE_new2213(TC* ac, T1 initialize);
/* New instance of type LX_TRANSITION_TABLE [LX_DFA_STATE] */
extern T0* GE_new2214(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_NFA] */
extern T0* GE_new2215(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_NFA, INTEGER_32] */
extern T0* GE_new2216(TC* ac, T1 initialize);
/* New instance of type LX_NFA_STATE */
extern T0* GE_new2217(TC* ac, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
extern T0* GE_new2223(TC* ac, T1 initialize);
/* New instance of type TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new2224(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
extern T0* GE_new2225(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [STRING_8]] */
extern T0* GE_new2228(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [ET_PARENT_FEATURE] */
extern T0* GE_new2230(TC* ac, T1 initialize);
/* New instance of type ARRAY [detachable LX_SYMBOL_CLASS] */
extern T0* GE_new2231(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable LX_SYMBOL_CLASS] */
extern T0* GE_new2232(TC* ac, T6 a1, T1 initialize);
/* New instance of type ARRAY [detachable DS_HASH_SET [INTEGER_32]] */
extern T0* GE_new2233(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable DS_HASH_SET [INTEGER_32]] */
extern T0* GE_new2234(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
extern T0* GE_new2235(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_SYMBOL_CLASS] */
extern T0* GE_new2236(TC* ac, T1 initialize);
/* New instance of type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
extern T0* GE_new2237(TC* ac, T1 initialize);
/* New instance of type ET_AST_NULL_LEAF */
extern T0* GE_new2238(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_RULE] */
extern T0* GE_new2239(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_RULE] */
extern T0* GE_new2240(TC* ac, T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [STRING_8] */
extern T0* GE_new2241(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_START_CONDITION] */
extern T0* GE_new2242(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
extern T0* GE_new2243(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
extern T0* GE_new2244(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
extern T0* GE_new2245(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [LX_SYMBOL_CLASS] */
extern T0* GE_new2246(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
extern T0* GE_new2248(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
extern T0* GE_new2249(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable SPECIAL [NATURAL_64]] */
extern T0* GE_new2250(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [STRING_32, STRING_8] */
extern T0* GE_new2252(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_32] */
extern T0* GE_new2254(TC* ac, T1 initialize);
/* New instance of type LX_EPSILON_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new2255(TC* ac, T1 initialize);
/* New instance of type LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new2258(TC* ac, T1 initialize);
/* New instance of type LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new2259(TC* ac, T1 initialize);
/* New instance of type LX_ACTION */
extern T0* GE_new2261(TC* ac, T1 initialize);
/* New instance of type ARRAY [DS_BILINKABLE [INTEGER_32]] */
extern T0* GE_new2262(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [INTEGER_32] */
extern T0* GE_new2263(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_BILINKABLE [INTEGER_32]] */
extern T0* GE_new2264(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_BUBBLE_SORTER [LX_NFA_STATE] */
extern T0* GE_new2265(TC* ac, T1 initialize);
/* New instance of type DS_BUBBLE_SORTER [LX_RULE] */
extern T0* GE_new2267(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_NFA_STATE] */
extern T0* GE_new2269(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
extern T0* GE_new2271(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
extern T0* GE_new2272(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_DFA_STATE] */
extern T0* GE_new2274(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
extern T0* GE_new2275(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
extern T0* GE_new2276(TC* ac, T1 initialize);
/* New instance of type KL_ARRAY [LX_RULE] */
extern T0* GE_new2277(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32] */
extern T0* GE_new2278(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_NFA] */
extern T0* GE_new2279(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
extern T0* GE_new2281(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2282(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2283(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_LIBRARY] */
extern T0* GE_new2284(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2286(TC* ac, T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [LX_RULE] */
extern T0* GE_new2291(TC* ac, T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
extern T0* GE_new2294(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
extern T0* GE_new2297(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
extern T0* GE_new2298(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
extern T0* GE_new2299(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_SYMBOL_CLASS] */
extern T0* GE_new2300(TC* ac, T1 initialize);
/* New instance of type KL_ARRAY [STRING_8] */
extern T0* GE_new2301(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_DFA_STATE, INTEGER_32] */
extern T0* GE_new2303(TC* ac, T1 initialize);
/* GEC.execute */
extern T0* T26c72(TC* ac);
/* GEC.execute_with_arguments */
extern void T26f73(TC* ac, T0* C, T0* a1);
/* GEC.execute_with_arguments_and_error_handler */
extern void T26f74(TC* ac, T0* C, T0* a1, T0* a2);
/* GEC.process_system */
extern void T26f79(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.record_end_time */
extern void T66f71(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.print_time */
extern void T66f80(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_STDOUT_FILE.put_line */
extern void T161f9(TC* ac, T0* C, T0* a1);
/* KL_STDOUT_FILE.put_new_line */
extern void T161f8(TC* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_line */
extern void T229f4(TC* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_new_line */
extern void T229f7(TC* ac, T0* C);
/* DT_DATE_TIME_DURATION.out */
extern T0* T1024f9(TC* ac, T0* C);
/* DT_DATE_TIME_DURATION.append_to_string */
extern void T1024f18(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.append_time_to_string */
extern void T1024f23(TC* ac, T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.append_decimal_integer */
extern void T1347s6(TC* ac, T6 a1, T0* a2);
/* STRING_8.append_code */
extern void T17f61(TC* ac, T0* C, T10 a1);
/* STRING_8.put_code */
extern void T17f71(TC* ac, T0* C, T10 a1, T6 a2);
/* STRING_8.reset_hash_codes */
extern void T17f55(TC* ac, T0* C);
/* STRING_8.set_count */
extern void T17f68(TC* ac, T0* C, T6 a1);
/* STRING_8.resize */
extern void T17f54(TC* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].aliased_resized_area_with_default */
extern T0* T15f4(TC* ac, T0* C, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].fill_with */
extern void T15f14(TC* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].extend */
extern void T15f18(TC* ac, T0* C, T2 a1);
/* INTEGER_32.min */
extern T6 T6f17(TC* ac, volatile T6* C, T6 a1);
/* INTEGER_32.is_less_equal */
extern T1 T6f15(TC* ac, volatile T6* C, T6 a1);
/* SPECIAL [CHARACTER_8].aliased_resized_area */
extern T0* T15f5(TC* ac, T0* C, T6 a1);
/* STRING_8.capacity */
extern T6 T17f7(TC* ac, T0* C);
/* DT_DATE_TIME_DURATION.integer_ */
extern T0* T1024s14(TC* ac);
/* KL_INTEGER_ROUTINES.default_create */
extern T0* T1347c5(TC* ac);
/* STRING_8.append_character */
extern void T17f52(TC* ac, T0* C, T2 a1);
/* STRING_8.additional_space */
extern T6 T17f8(TC* ac, T0* C);
/* INTEGER_32.max */
extern T6 T6f16(TC* ac, volatile T6* C, T6 a1);
/* INTEGER_32.is_greater_equal */
extern T1 T6f14(TC* ac, volatile T6* C, T6 a1);
/* DT_DATE_TIME_DURATION.append_date_to_string */
extern void T1024f22(TC* ac, T0* C, T0* a1);
/* STRING_8.make */
extern void T17f49(TC* ac, T0* C, T6 a1);
/* STRING_8.make */
extern T0* T17c49(TC* ac, T6 a1);
/* SPECIAL [CHARACTER_8].make_filled */
extern T0* T15c11(TC* ac, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].make_empty */
extern void T15f15(TC* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].make_empty */
extern T0* T15c15(TC* ac, T6 a1);
/* KL_STDOUT_FILE.put_string */
extern void T161f6(TC* ac, T0* C, T0* a1);
/* CONSOLE.put_string */
extern void T1644f22(TC* ac, T0* C, T0* a1);
/* CONSOLE.console_ps */
extern void T1644s29(TC* ac, T14 a1, T14 a2, T6 a3);
/* UC_UTF8_STRING.area */
extern T0* T1066f2(TC* ac, T0* C);
/* UC_STRING.area */
extern T0* T909f2(TC* ac, T0* C);
/* STRING_8.area */
extern T0* T17f1(TC* ac, T0* C);
/* UC_UTF8_STRING.count */
extern T6 T1066f1(TC* ac, T0* C);
/* UC_STRING.count */
extern T6 T909f1(TC* ac, T0* C);
/* STRING_8.count */
extern T6 T17f2(TC* ac, T0* C);
/* KL_STRING_ROUTINES.as_readable_string_8_no_uc_string */
extern T0* T108s12(TC* ac, T0* a1);
extern T1 T108s12ot1(TC* ac, T0* a1);
/* UC_UTF8_STRING.as_string */
extern T0* T1066f20(TC* ac, T0* C);
/* UC_UTF8_STRING.to_utf8 */
extern T0* T1066f51(TC* ac, T0* C);
/* UC_UTF8_STRING.byte_item */
extern T2 T1066f16(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.old_item */
extern T2 T1066f50(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.set_count */
extern void T1066f73(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.reset_byte_index_cache */
extern void T1066f93(TC* ac, T0* C);
/* UC_STRING.as_string */
extern T0* T909f56(TC* ac, T0* C);
/* UC_STRING.to_utf8 */
extern T0* T909f31(TC* ac, T0* C);
/* UC_STRING.byte_item */
extern T2 T909f36(TC* ac, T0* C, T6 a1);
/* UC_STRING.old_item */
extern T2 T909f54(TC* ac, T0* C, T6 a1);
/* UC_STRING.set_count */
extern void T909f89(TC* ac, T0* C, T6 a1);
/* UC_STRING.reset_byte_index_cache */
extern void T909f102(TC* ac, T0* C);
/* KL_STDOUT_FILE.string_ */
extern T0* T161s2(TC* ac);
/* KL_STRING_ROUTINES.default_create */
extern T0* T108c22(TC* ac);
/* KL_STDOUT_FILE.console */
extern T0* T161s1(TC* ac);
/* STD_FILES.output */
extern T0* T1019s3(TC* ac);
/* CONSOLE.make_open_stdout */
extern T0* T1644c23(TC* ac, T0* a1);
/* CONSOLE.set_write_mode */
extern void T1644f28(TC* ac, T0* C);
/* CONSOLE.console_def */
extern T14 T1644s14(TC* ac, T6 a1);
/* CONSOLE.make_with_name */
extern void T1644f27(TC* ac, T0* C, T0* a1);
/* STRING_32.make_empty */
extern T0* T18c22(TC* ac);
/* STRING_32.make */
extern void T18f23(TC* ac, T0* C, T6 a1);
/* STRING_32.make */
extern T0* T18c23(TC* ac, T6 a1);
/* SPECIAL [CHARACTER_32].make_filled */
extern T0* T16c8(TC* ac, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].fill_with */
extern void T16f13(TC* ac, T0* C, T3 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].extend */
extern void T16f12(TC* ac, T0* C, T3 a1);
/* SPECIAL [CHARACTER_32].make_empty */
extern void T16f11(TC* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_32].make_empty */
extern T0* T16c11(TC* ac, T6 a1);
/* CONSOLE.make_with_name */
extern void T1644f27p1(TC* ac, T0* C, T0* a1);
/* STRING_8.make_empty */
extern T0* T17c58(TC* ac);
/* CONSOLE.default_pointer */
extern T14 T1644s9(TC* ac);
/* CONSOLE.set_name */
extern void T1644f33(TC* ac, T0* C, T0* a1);
/* FILE_INFO.file_name_to_pointer */
extern T0* T166f11(TC* ac, T0* C, T0* a1, T0* a2);
/* C_STRING.set_string */
extern void T31f11(TC* ac, T0* C, T0* a1);
/* C_STRING.set_substring */
extern void T31f15(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* MANAGED_POINTER.put_natural_8 */
extern void T162f16(TC* ac, T0* C, T8 a1, T6 a2);
/* POINTER.memory_copy */
extern void T14f19(TC* ac, volatile T14* C, T14 a1, T6 a2);
/* POINTER.c_memcpy */
extern void T14s20(TC* ac, T14 a1, T14 a2, T6 a3);
/* NATURAL_32.to_natural_8 */
extern T8 T10f23(TC* ac, volatile T10* C);
/* UC_UTF8_STRING.code */
extern T10 T1066f48(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.code_at_byte_index */
extern T10 T1066f43(TC* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.natural_32_encoded_next_value */
extern T10 T167s24(TC* ac, T2 a1);
/* UC_UTF8_ROUTINES.encoded_byte_count */
extern T6 T167s2(TC* ac, T2 a1);
/* CHARACTER_8.is_less_equal */
extern T1 T2f10(TC* ac, volatile T2* C, T2 a1);
/* CHARACTER_8.is_less */
extern T1 T2f15(TC* ac, volatile T2* C, T2 a1);
/* UC_UTF8_ROUTINES.natural_32_encoded_first_value */
extern T10 T167s23(TC* ac, T2 a1);
/* UC_UTF8_STRING.utf8 */
extern T0* T1066s45(TC* ac);
/* UC_UTF8_ROUTINES.default_create */
extern T0* T167c57(TC* ac);
/* UC_UTF8_STRING.byte_index */
extern T6 T1066f14(TC* ac, T0* C, T6 a1);
/* CHARACTER_8.natural_32_code */
extern T10 T2f7(TC* ac, volatile T2* C);
/* INTEGER_32.to_natural_32 */
extern T10 T6f20(TC* ac, volatile T6* C);
/* UC_STRING.code */
extern T10 T909f10(TC* ac, T0* C, T6 a1);
/* UC_STRING.code_at_byte_index */
extern T10 T909f38(TC* ac, T0* C, T6 a1);
/* UC_STRING.utf8 */
extern T0* T909s35(TC* ac);
/* UC_STRING.byte_index */
extern T6 T909f37(TC* ac, T0* C, T6 a1);
/* STRING_8.code */
extern T10 T17f10(TC* ac, T0* C, T6 a1);
/* C_STRING.make_shared_from_pointer_and_count */
extern void T31f10(TC* ac, T0* C, T14 a1, T6 a2);
/* C_STRING.make_shared_from_pointer_and_count */
extern T0* T31c10(TC* ac, T14 a1, T6 a2);
/* MANAGED_POINTER.share_from_pointer */
extern T0* T162c14(TC* ac, T14 a1, T6 a2);
/* MANAGED_POINTER.increment_counter */
extern void T162f12(TC* ac, T0* C);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_8_0_pointer */
extern void T40s18(TC* ac, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* CELL [INTEGER_32].put */
extern void T1056f2(TC* ac, T0* C, T6 a1);
/* CELL [INTEGER_32].put */
extern T0* T1056c2(TC* ac, T6 a1);
/* NATURAL_32.is_less_equal */
extern T1 T10f5(TC* ac, volatile T10* C, T10 a1);
/* UTF_CONVERTER.to_natural_32 */
extern T10 T40s6(TC* ac, T0* a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parsed_natural_32 */
extern T10 T1020f12(TC* ac, T0* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_string_with_type */
extern void T1020f19(TC* ac, T0* C, T0* a1, T6 a2);
extern T1 T1020f19ot1(TC* ac, T0* a1);
extern T1 T1020f19ot2(TC* ac, T0* a1);
/* NATURAL_32.is_valid_character_8_code */
extern T1 T10f30(TC* ac, volatile T10* C);
/* IMMUTABLE_STRING_32.code */
extern T10 T20f5(TC* ac, T0* C, T6 a1);
/* STRING_32.count */
extern T6 T18f2(TC* ac, T0* C);
/* IMMUTABLE_STRING_32.count */
extern T6 T20f2(TC* ac, T0* C);
/* CHARACTER_32.is_character_8 */
extern T1 T3f12(TC* ac, volatile T3* C);
/* STRING_32.area_lower */
extern T6 T18f8(TC* ac, T0* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_character */
extern void T1020f22(TC* ac, T0* C, T2 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflowed */
extern T1 T1020f16(TC* ac, T0* C);
/* INTEGER_OVERFLOW_CHECKER.will_overflow */
extern T1 T1643f7(TC* ac, T0* C, T11 a1, T11 a2, T6 a3, T6 a4);
/* NATURAL_64.is_greater */
extern T1 T11f20(TC* ac, volatile T11* C, T11 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflow_checker */
extern T0* T1020f15(TC* ac, T0* C);
/* INTEGER_OVERFLOW_CHECKER.make */
extern T0* T1643c13(TC* ac);
/* NATURAL_64.to_natural_64 */
extern T11 T11f21(TC* ac, volatile T11* C);
/* NATURAL_32.to_natural_64 */
extern T11 T10f28(TC* ac, volatile T10* C);
/* NATURAL_16.to_natural_64 */
extern T11 T9f19(TC* ac, volatile T9* C);
/* INTEGER_64.to_natural_64 */
extern T11 T7f22(TC* ac, volatile T7* C);
/* INTEGER_32.to_natural_64 */
extern T11 T6f19(TC* ac, volatile T6* C);
/* INTEGER_16.to_natural_64 */
extern T11 T5f6(TC* ac, volatile T5* C);
/* INTEGER_8.to_natural_64 */
extern T11 T4f9(TC* ac, volatile T4* C);
/* SPECIAL [NATURAL_64].extend */
extern void T1342f13(TC* ac, T0* C, T11 a1);
/* SPECIAL [NATURAL_64].make_empty */
extern void T1342f11(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_64].make_empty */
extern T0* T1342c11(TC* ac, T6 a1);
/* STRING_8.has */
extern T1 T17f16(TC* ac, T0* C, T2 a1);
/* NATURAL_8.to_natural_64 */
extern T11 T8f15(TC* ac, volatile T8* C);
/* CHARACTER_8.to_hexa_digit */
extern T8 T2f29(TC* ac, volatile T2* C);
/* INTEGER_8.to_natural_8 */
extern T8 T4f5(TC* ac, volatile T4* C);
/* NATURAL_8.to_integer_8 */
extern T4 T8f17(TC* ac, volatile T8* C);
/* CHARACTER_8.is_hexa_digit */
extern T1 T2f28(TC* ac, volatile T2* C);
/* NATURAL_8.is_greater */
extern T1 T8f5(TC* ac, volatile T8* C, T8 a1);
/* CHARACTER_8.character_types */
extern T8 T2f13(TC* ac, volatile T2* C, T6 a1);
/* CHARACTER_8.internal_character_types */
extern T0* T2f16(TC* ac, volatile T2* C);
/* SPECIAL [NATURAL_8].extend */
extern void T1064f7(TC* ac, T0* C, T8 a1);
/* SPECIAL [NATURAL_8].make_empty */
extern void T1064f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_8].make_empty */
extern T0* T1064c6(TC* ac, T6 a1);
/* UC_UTF8_STRING.area_lower */
extern T6 T1066f49(TC* ac, T0* C);
/* UC_STRING.area_lower */
extern T6 T909f11(TC* ac, T0* C);
/* STRING_8.area_lower */
extern T6 T17f9(TC* ac, T0* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.reset */
extern void T1020f18(TC* ac, T0* C, T6 a1);
/* UTF_CONVERTER.ctoi_convertor */
extern T0* T40s7(TC* ac);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_trailing_separators_acceptable */
extern void T1020f21(TC* ac, T0* C, T1 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_leading_separators_acceptable */
extern void T1020f20(TC* ac, T0* C, T1 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.make */
extern T0* T1020c17(TC* ac);
/* STRING_8.make_from_string */
extern T0* T17c86(TC* ac, T0* a1);
/* SPECIAL [CHARACTER_8].copy_data */
extern void T15f13(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_8].force */
extern void T15f17(TC* ac, T0* C, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].move_data */
extern void T15f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].overlapping_move */
extern void T15f20(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].non_overlapping_move */
extern void T15f19(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UTF_CONVERTER.is_hexa_decimal */
extern T1 T40s5(TC* ac, T0* a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.is_integral_integer */
extern T1 T1020f14(TC* ac, T0* C);
/* UC_UTF8_STRING.substring */
extern T0* T1066f10(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.make_from_substring */
extern T0* T1066c85(TC* ac, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.make_from_substring_general */
extern void T1066f103(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_substring_at_byte_index */
extern void T1066f102(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4, T6 a5);
extern T1 T1066f102ot1(TC* ac, T0* a1);
extern T1 T1066f102ot2(TC* ac, T0* a1);
extern T1 T1066f102ot3(TC* ac, T0* a1);
/* NATURAL_32.to_integer_32 */
extern T6 T10f11(TC* ac, volatile T10* C);
/* UC_STRING.next_byte_index */
extern T6 T909f34(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.next_byte_index */
extern T6 T1066f18(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.put_code_at_byte_index */
extern void T1066f108(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* KL_INTEGER_ROUTINES.to_character */
extern T2 T1347s2(TC* ac, T6 a1);
/* UC_UTF8_STRING.integer_ */
extern T0* T1066s58(TC* ac);
/* UC_UTF8_ROUTINES.code_byte_count */
extern T6 T167s28(TC* ac, T6 a1);
/* UC_UTF8_ROUTINES.natural_32_code_byte_count */
extern T6 T167s16(TC* ac, T10 a1);
/* UC_STRING.item_code_at_byte_index */
extern T6 T909f33(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.item_code_at_byte_index */
extern T6 T1066f17(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.put_character_at_byte_index */
extern void T1066f101(TC* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* UC_UTF8_ROUTINES.character_byte_count */
extern T6 T167s27(TC* ac, T2 a1);
/* UC_UTF8_ROUTINES.character_8_byte_count */
extern T6 T167s13(TC* ac, T2 a1);
/* UC_UTF8_STRING.put_byte */
extern void T1066f109(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.old_put */
extern void T1066f100(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.reset_hash_codes */
extern void T1066f97(TC* ac, T0* C);
/* UC_STRING.item */
extern T2 T909f18(TC* ac, T0* C, T6 a1);
/* UC_STRING.character_item_at_byte_index */
extern T2 T909f43(TC* ac, T0* C, T6 a1);
/* UC_STRING.integer_ */
extern T0* T909s57(TC* ac);
/* KL_PLATFORM.maximum_character_code */
extern T6 T1051s2(TC* ac);
/* UC_STRING.platform */
extern T0* T909s41(TC* ac);
/* KL_PLATFORM.default_create */
extern T0* T1051c3(TC* ac);
/* UC_UTF8_ROUTINES.encoded_next_value */
extern T6 T167s26(TC* ac, T2 a1);
/* UC_UTF8_ROUTINES.encoded_first_value */
extern T6 T167s25(TC* ac, T2 a1);
/* STRING_8.item */
extern T2 T17f24(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.item */
extern T2 T1066f63(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.character_item_at_byte_index */
extern T2 T1066f44(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.platform */
extern T0* T1066s47(TC* ac);
/* KL_ANY_ROUTINES.same_types */
extern T1 T1059s1(TC* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [LX_NFA_STATE].same_type */
extern T1 T2207f18(TC* ac, T0* C, T0* a1);
/* LX_DFA_STATE.same_type */
extern T1 T2206f15(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].same_type */
extern T1 T933f42(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.same_type */
extern T1 T1066f23(TC* ac, T0* C, T0* a1);
/* UC_STRING.same_type */
extern T1 T909f32(TC* ac, T0* C, T0* a1);
/* STRING_8.same_type */
extern T1 T17f18(TC* ac, T0* C, T0* a1);
/* STRING_32.same_type */
extern T1 T18f18(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.same_type */
extern T1 T152f33(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.same_type */
extern T1 T151f36(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.any_ */
extern T0* T1066s42(TC* ac);
/* KL_ANY_ROUTINES.default_create */
extern T0* T1059c2(TC* ac);
/* UC_UTF8_ROUTINES.substring_byte_count */
extern T6 T167s10(TC* ac, T0* a1, T6 a2, T6 a3);
extern T1 T167s10ot1(TC* ac, T0* a1);
extern T1 T167s10ot2(TC* ac, T0* a1);
extern T1 T167s10ot3(TC* ac, T0* a1);
/* UC_UTF8_ROUTINES.character_32_byte_count */
extern T6 T167s15(TC* ac, T3 a1);
/* UC_UTF8_STRING.shifted_byte_index */
extern T6 T1066f15(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.shifted_byte_index */
extern T6 T909f53(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_ROUTINES.dummy_uc_string */
extern T0* T167s14(TC* ac);
/* UC_STRING.make_empty */
extern T0* T909c82(TC* ac);
/* UC_STRING.make */
extern void T909f83(TC* ac, T0* C, T6 a1);
/* UC_STRING.make */
extern T0* T909c83(TC* ac, T6 a1);
/* UC_STRING.old_set_count */
extern void T909f86(TC* ac, T0* C, T6 a1);
/* UC_STRING.reset_hash_codes */
extern void T909f95(TC* ac, T0* C);
/* UC_STRING.byte_capacity */
extern T6 T909f59(TC* ac, T0* C);
/* UC_STRING.capacity */
extern T6 T909f59p1(TC* ac, T0* C);
/* UC_STRING.make */
extern void T909f83p1(TC* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.any_ */
extern T0* T167s11(TC* ac);
/* UC_UTF8_STRING.cloned_string */
extern T0* T1066f33(TC* ac, T0* C);
/* UC_UTF8_STRING.twin */
extern T0* T1066f25(TC* ac, T0* C);
/* UC_UTF8_STRING.copy */
extern void T1066f87(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.copy */
extern void T1066f87p1(TC* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].resized_area */
extern T0* T15f7(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.make */
extern void T1066f84(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.make */
extern T0* T1066c84(TC* ac, T6 a1);
/* UC_UTF8_STRING.old_set_count */
extern void T1066f88(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.byte_capacity */
extern T6 T1066f61(TC* ac, T0* C);
/* UC_UTF8_STRING.capacity */
extern T6 T1066f61p1(TC* ac, T0* C);
/* UC_UTF8_STRING.make */
extern void T1066f84p1(TC* ac, T0* C, T6 a1);
/* STRING_32.substring */
extern T0* T18f13(TC* ac, T0* C, T6 a1, T6 a2);
/* STRING_32.set_count */
extern void T18f28(TC* ac, T0* C, T6 a1);
/* STRING_32.reset_hash_codes */
extern void T18f32(TC* ac, T0* C);
/* SPECIAL [CHARACTER_32].copy_data */
extern void T16f10(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_32].force */
extern void T16f15(TC* ac, T0* C, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].move_data */
extern void T16f14(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].overlapping_move */
extern void T16f17(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].non_overlapping_move */
extern void T16f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_32.new_string */
extern T0* T18f19(TC* ac, T0* C, T6 a1);
/* UC_STRING.substring */
extern T0* T909f16(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.make_from_substring */
extern T0* T909c88(TC* ac, T0* a1, T6 a2, T6 a3);
/* UC_STRING.make_from_substring_general */
extern void T909f92(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
extern T1 T909f92ot1(TC* ac, T0* a1);
/* UC_STRING.put_substring_at_byte_index */
extern void T909f97(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4, T6 a5);
extern T1 T909f97ot1(TC* ac, T0* a1);
extern T1 T909f97ot2(TC* ac, T0* a1);
extern T1 T909f97ot3(TC* ac, T0* a1);
/* UC_STRING.put_code_at_byte_index */
extern void T909f107(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UC_STRING.put_character_at_byte_index */
extern void T909f100(TC* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* UC_STRING.put_byte */
extern void T909f108(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_STRING.old_put */
extern void T909f99(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_STRING.any_ */
extern T0* T909s46(TC* ac);
/* UC_STRING.cloned_string */
extern T0* T909f44(TC* ac, T0* C);
/* UC_STRING.twin */
extern T0* T909f55(TC* ac, T0* C);
/* UC_STRING.copy */
extern void T909f85(TC* ac, T0* C, T0* a1);
/* UC_STRING.copy */
extern void T909f85p1(TC* ac, T0* C, T0* a1);
/* STRING_8.substring */
extern T0* T17f12(TC* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.new_string */
extern T0* T17f6(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.character_32_item */
extern T3 T1066f9(TC* ac, T0* C, T6 a1);
/* STRING_32.item */
extern T3 T18f10(TC* ac, T0* C, T6 a1);
/* UC_STRING.character_32_item */
extern T3 T909f27(TC* ac, T0* C, T6 a1);
/* STRING_8.character_32_item */
extern T3 T17f11(TC* ac, T0* C, T6 a1);
/* STRING_32.code */
extern T10 T18f7(TC* ac, T0* C, T6 a1);
/* UTF_CONVERTER.utf_8_bytes_count */
extern T6 T40s12(TC* ac, T0* a1, T6 a2, T6 a3);
/* INTEGER_32.do_nothing */
extern void T6s37(TC* ac);
/* FILE_INFO.multi_byte_to_utf_16 */
extern T6 T166s10(TC* ac, T14 a1, T14 a2, T6 a3);
/* FILE_INFO.default_pointer */
extern T14 T166s9(TC* ac);
/* C_STRING.item */
extern T14 T31f4(TC* ac, T0* C);
/* C_STRING.make */
extern T0* T31c9(TC* ac, T0* a1);
/* C_STRING.make_empty */
extern void T31f7(TC* ac, T0* C, T6 a1);
/* C_STRING.make_empty */
extern T0* T31c7(TC* ac, T6 a1);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_16_0_pointer */
extern void T40s17(TC* ac, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* MANAGED_POINTER.put_natural_16 */
extern void T162f18(TC* ac, T0* C, T9 a1, T6 a2);
/* NATURAL_32.to_natural_16 */
extern T9 T10f24(TC* ac, volatile T10* C);
/* NATURAL_32.is_greater */
extern T1 T10f12(TC* ac, volatile T10* C, T10 a1);
/* UTF_CONVERTER.utf_16_bytes_count */
extern T6 T40s13(TC* ac, T0* a1, T6 a2, T6 a3);
/* MANAGED_POINTER.make */
extern T0* T162c10(TC* ac, T6 a1);
/* EXCEPTIONS.raise */
extern void T37s4(TC* ac, T0* a1);
/* DEVELOPER_EXCEPTION.raise */
extern void T148f18(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.raise */
extern void T21s19(TC* ac, T0* a1);
/* DEVELOPER_EXCEPTION.code */
extern T6 T148f10(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.default_pointer */
extern T14 T21s9(TC* ac);
/* ISE_EXCEPTION_MANAGER.set_last_exception */
extern void T21s17(TC* ac, T0* a1);
/* CELL [detachable EXCEPTION].put */
extern void T27f2(TC* ac, T0* C, T0* a1);
/* CELL [detachable EXCEPTION].put */
extern T0* T27c2(TC* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.last_exception_cell */
extern T0* T21s2(TC* ac);
/* DEVELOPER_EXCEPTION.set_throwing_exception */
extern void T148f13(TC* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.in_rescue */
extern T1 T21s8(TC* ac);
/* DEVELOPER_EXCEPTION.is_ignored */
extern T1 T148f9(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.is_ignored */
extern T1 T21s13(TC* ac, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].has */
extern T1 T28f34(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].same_keys */
extern T1 T28f26(TC* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].hash_code_of */
extern T6 T28f25(TC* ac, T0* C, T6 a1);
/* INTEGER_32.hash_code */
extern T6 T6f27(TC* ac, volatile T6* C);
/* ISE_EXCEPTION_MANAGER.ignored_exceptions */
extern T0* T21s3(TC* ac);
/* HASH_TABLE [INTEGER_32, INTEGER_32].make */
extern T0* T28c35(TC* ac, T6 a1);
/* SPECIAL [INTEGER_32].make_filled */
extern T0* T154c9(TC* ac, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].fill_with */
extern void T154f12(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].extend */
extern void T154f13(TC* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].make_filled */
extern T0* T155c5(TC* ac, T1 a1, T6 a2);
/* SPECIAL [BOOLEAN].fill_with */
extern void T155f8(TC* ac, T0* C, T1 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].extend */
extern void T155f10(TC* ac, T0* C, T1 a1);
/* SPECIAL [BOOLEAN].make_empty */
extern void T155f7(TC* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].make_empty */
extern T0* T155c7(TC* ac, T6 a1);
/* SPECIAL [INTEGER_32].make_empty */
extern void T154f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].make_empty */
extern T0* T154c8(TC* ac, T6 a1);
/* PRIMES.higher_prime */
extern T6 T153s1(TC* ac, T6 a1);
/* PRIMES.is_prime */
extern T1 T153s3(TC* ac, T6 a1);
/* PRIMES.default_create */
extern T0* T153c5(TC* ac);
/* DEVELOPER_EXCEPTION.exception_manager */
extern T0* T148s8(TC* ac);
/* DEVELOPER_EXCEPTION.set_description */
extern void T148f15(TC* ac, T0* C, T0* a1);
/* C_STRING.set_count */
extern void T31f8(TC* ac, T0* C, T6 a1);
/* UTF_CONVERTER.utf_32_string_into_utf_8_0_pointer */
extern void T40s16(TC* ac, T0* a1, T0* a2, T6 a3, T0* a4);
/* DEVELOPER_EXCEPTION.default_create */
extern T0* T148c12(TC* ac);
/* EXCEPTIONS.default_create */
extern T0* T37c3(TC* ac);
/* MANAGED_POINTER.default_pointer */
extern T14 T162s4(TC* ac);
/* POINTER.memory_calloc */
extern T14 T14s5(TC* ac, T6 a1, T6 a2);
/* POINTER.c_calloc */
extern T14 T14s8(TC* ac, T6 a1, T6 a2);
/* MANAGED_POINTER.resize */
extern void T162f11(TC* ac, T0* C, T6 a1);
/* POINTER.memory_set */
extern void T14f15(TC* ac, volatile T14* C, T6 a1, T6 a2);
/* POINTER.c_memset */
extern void T14s18(TC* ac, T14 a1, T6 a2, T6 a3);
/* POINTER.memory_realloc */
extern T14 T14f6(TC* ac, volatile T14* C, T6 a1);
/* POINTER.c_realloc */
extern T14 T14s9(TC* ac, T14 a1, T6 a2);
/* CONSOLE.buffered_file_info */
extern T0* T1644f16(TC* ac, T0* C);
/* FILE_INFO.make */
extern T0* T166c22(TC* ac);
/* FILE_INFO.make_filled_area */
extern void T166f24(TC* ac, T0* C, T8 a1, T6 a2);
/* SPECIAL [NATURAL_8].make_filled */
extern T0* T1064c5(TC* ac, T8 a1, T6 a2);
/* SPECIAL [NATURAL_8].fill_with */
extern void T1064f8(TC* ac, T0* C, T8 a1, T6 a2, T6 a3);
/* FILE_INFO.stat_size */
extern T6 T166s7(TC* ac);
/* KL_STDOUT_FILE.io */
extern T0* T161s4(TC* ac);
/* STD_FILES.set_output_default */
extern void T1019f6(TC* ac, T0* C);
/* STD_FILES.default_create */
extern T0* T1019c5(TC* ac);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_string */
extern void T229f5(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.set_canonical */
extern void T1024f17(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.make_canonical_from_dates */
extern void T1024f21(TC* ac, T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.make_precise */
extern void T1024f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise */
extern T0* T1024c16(TC* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise_time_duration */
extern void T1024f20(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_DATE_TIME_DURATION.make_date_duration */
extern void T1024f19(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.days_in_current_month */
extern T6 T97f43(TC* ac, T0* C);
/* DT_DATE_TIME.days_in_month */
extern T6 T97s45(TC* ac, T6 a1, T6 a2);
/* DT_DATE_TIME.leap_year */
extern T1 T97s38(TC* ac, T6 a1);
/* DT_DATE_TIME.days_in_previous_month */
extern T6 T97f42(TC* ac, T0* C);
/* DT_DATE_TIME.is_less */
extern T1 T97f41(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.millisecond_count */
extern T6 T97f40(TC* ac, T0* C);
/* DT_DATE_TIME.day */
extern T6 T97f10(TC* ac, T0* C);
/* DT_DATE_TIME.month */
extern T6 T97f9(TC* ac, T0* C);
/* DT_DATE_TIME.year */
extern T6 T97f8(TC* ac, T0* C);
/* DT_DATE_TIME.add_duration */
extern void T97f62(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.add_milliseconds */
extern void T97f66(TC* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_normalized_time_storage */
extern void T97f69(TC* ac, T0* C, T7 a1);
/* DT_DATE_TIME.add_days */
extern void T97f70(TC* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_from_epoch_days */
extern void T97f68(TC* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_year_month_day */
extern void T97f57(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_to_y2k_days */
extern T6 T97s46(TC* ac);
/* DT_DATE_TIME.epoch_days */
extern T6 T97s11(TC* ac, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_days_at_month */
extern T6 T97s24(TC* ac);
/* DT_DATE_TIME.days_at_month */
extern T6 T97s23(TC* ac, T6 a1, T6 a2);
/* DT_DATE_TIME.epoch_leap_years */
extern T6 T97s22(TC* ac);
/* KL_INTEGER_ROUTINES.div */
extern T6 T1347s4(TC* ac, T6 a1, T6 a2);
/* DT_DATE_TIME.integer_ */
extern T0* T97s21(TC* ac);
/* DT_DATE_TIME.set_day */
extern void T97f67(TC* ac, T0* C, T6 a1);
/* INTEGER_64.to_integer */
extern T6 T7f24(TC* ac, volatile T7* C);
/* INTEGER_32.to_integer_64 */
extern T7 T6f21(TC* ac, volatile T6* C);
/* DT_DATE_TIME_DURATION.millisecond_count */
extern T6 T1024f15(TC* ac, T0* C);
/* DT_DATE_TIME.add_years_months_days */
extern void T97f65(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_time */
extern void T97f61(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.set_date */
extern void T97f60(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.tmp_date_time */
extern T0* T1024f8(TC* ac, T0* C);
/* DT_DATE_TIME.make */
extern T0* T97c59(TC* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* DT_DATE_TIME.make_time */
extern void T97f64(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.make_date */
extern void T97f63(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.minus */
extern T0* T97f12(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.duration */
extern T0* T97f16(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.millisecond */
extern T6 T97f7(TC* ac, T0* C);
/* DT_DATE_TIME.second */
extern T6 T97f6(TC* ac, T0* C);
/* DT_DATE_TIME.minute */
extern T6 T97f5(TC* ac, T0* C);
/* DT_DATE_TIME.hour */
extern T6 T97f4(TC* ac, T0* C);
/* DT_DATE_TIME.day_count */
extern T6 T97f3(TC* ac, T0* C);
/* DT_SYSTEM_CLOCK.date_time_now */
extern T0* T1023f10(TC* ac, T0* C);
/* DT_SYSTEM_CLOCK.set_date_time_to_now */
extern void T1023f12(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.set_precise_hour_minute_second */
extern void T97f58(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_SYSTEM_CLOCK.set_local_time */
extern void T1023f13(TC* ac, T0* C);
/* C_DATE.second_now */
extern T6 T1645f6(TC* ac, T0* C);
/* C_DATE.get_tm_sec */
extern T6 T1645s13(TC* ac, T14 a1);
/* C_DATE.minute_now */
extern T6 T1645f5(TC* ac, T0* C);
/* C_DATE.get_tm_min */
extern T6 T1645s12(TC* ac, T14 a1);
/* C_DATE.hour_now */
extern T6 T1645f4(TC* ac, T0* C);
/* C_DATE.get_tm_hour */
extern T6 T1645s11(TC* ac, T14 a1);
/* C_DATE.day_now */
extern T6 T1645f15(TC* ac, T0* C);
/* C_DATE.get_tm_mday */
extern T6 T1645s10(TC* ac, T14 a1);
/* C_DATE.month_now */
extern T6 T1645f8(TC* ac, T0* C);
/* C_DATE.get_tm_mon */
extern T6 T1645s9(TC* ac, T14 a1);
/* C_DATE.year_now */
extern T6 T1645f7(TC* ac, T0* C);
/* C_DATE.get_tm_year */
extern T6 T1645s14(TC* ac, T14 a1);
/* C_DATE.update */
extern void T1645f23(TC* ac, T0* C);
/* POINTER.memory_free */
extern void T14f14(TC* ac, volatile T14* C);
/* POINTER.default_pointer */
extern T14 T14s10(TC* ac);
/* POINTER.c_free */
extern void T14s16(TC* ac, T14 a1);
/* C_DATE.get_millitm */
extern T6 T1645s21(TC* ac, T14 a1);
/* MANAGED_POINTER.make_from_pointer */
extern T0* T162c13(TC* ac, T14 a1, T6 a2);
/* C_DATE.tm_structure_size */
extern T6 T1645s20(TC* ac);
/* C_DATE.localtime */
extern T14 T1645s19(TC* ac, T14 a1);
/* C_DATE.gmtime */
extern T14 T1645s18(TC* ac, T14 a1);
/* C_DATE.get_time */
extern void T1645s25(TC* ac, T14 a1, T14 a2);
/* C_DATE.ftime */
extern void T1645s24(TC* ac, T14 a1);
/* C_DATE.time_t_structure_size */
extern T6 T1645s17(TC* ac);
/* POINTER.memory_alloc */
extern T14 T14s11(TC* ac, T6 a1);
/* POINTER.c_malloc */
extern T14 T14s12(TC* ac, T6 a1);
/* C_DATE.timeb_structure_size */
extern T6 T1645s16(TC* ac);
/* C_DATE.default_create */
extern T0* T1645c22(TC* ac);
/* DT_DATE_TIME.make_from_storage */
extern T0* T97c56(TC* ac, T6 a1, T6 a2);
/* DT_SHARED_SYSTEM_CLOCK.system_clock */
extern T0* T1022s1(TC* ac);
/* DT_SYSTEM_CLOCK.make */
extern T0* T1023c11(TC* ac);
/* DT_SHARED_SYSTEM_CLOCK.default_create */
extern T0* T1022c2(TC* ac);
/* ET_SYSTEM_PROCESSOR.stop_requested */
extern T1 T66f41(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.record_end_time */
extern void T853f58(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.print_time */
extern void T853f70(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.stop_requested */
extern T1 T853f44(TC* ac, T0* C);
/* GEC.compile_c_code */
extern void T26f89(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.rename_file */
extern void T152s37(TC* ac, T0* a1, T0* a2);
/* KL_TEXT_INPUT_FILE.change_name */
extern void T43f75(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.old_change_name */
extern void T43f78(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.rename_file */
extern void T43f80(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.set_name */
extern void T43f71(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.file_rename */
extern void T43s82(TC* ac, T14 a1, T14 a2);
/* KL_TEXT_INPUT_FILE.internal_name_pointer */
extern T0* T43f17(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.buffered_file_info */
extern T0* T43f33(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.same_physical_file */
extern T1 T43f39(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.canonical_pathname */
extern T0* T152s17(TC* ac, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname_to_string */
extern T0* T152s29(TC* ac, T0* a1);
/* UC_UTF8_STRING.append_character */
extern void T1066f79(TC* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.resize_byte_storage */
extern void T1066f99(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.resize */
extern void T1066f96(TC* ac, T0* C, T6 a1);
/* UC_STRING.append_character */
extern void T909f76(TC* ac, T0* C, T2 a1);
/* UC_STRING.resize_byte_storage */
extern void T909f96(TC* ac, T0* C, T6 a1);
/* UC_STRING.resize */
extern void T909f94(TC* ac, T0* C, T6 a1);
/* KL_PATHNAME.item */
extern T0* T1058f9(TC* ac, T0* C, T6 a1);
/* ARRAY [detachable STRING_8].item */
extern T0* T1656f4(TC* ac, T0* C, T6 a1);
/* KL_PATHNAME.is_parent */
extern T1 T1058f8(TC* ac, T0* C, T6 a1);
/* KL_PATHNAME.is_current */
extern T1 T1058f7(TC* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.appended_string */
extern T0* T108s5(TC* ac, T0* a1, T0* a2);
/* UC_UTF8_STRING.to_string_32 */
extern T0* T1066f21(TC* ac, T0* C);
/* STRING_32.append_code */
extern void T18f26(TC* ac, T0* C, T10 a1);
/* STRING_32.put_code */
extern void T18f29(TC* ac, T0* C, T10 a1, T6 a2);
/* STRING_32.resize */
extern void T18f31(TC* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_32].aliased_resized_area_with_default */
extern T0* T16f4(TC* ac, T0* C, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].aliased_resized_area */
extern T0* T16f5(TC* ac, T0* C, T6 a1);
/* STRING_32.capacity */
extern T6 T18f5(TC* ac, T0* C);
/* UC_STRING.to_string_32 */
extern T0* T909f61(TC* ac, T0* C);
/* STRING_8.to_string_32 */
extern T0* T17f19(TC* ac, T0* C);
/* UC_UTF8_STRING.append_string_general */
extern void T1066f77(TC* ac, T0* C, T0* a1);
extern T1 T1066f77ot1(TC* ac, T0* a1);
/* UC_UTF8_STRING.append_string_general */
extern void T1066f77p1(TC* ac, T0* C, T0* a1);
extern T1 T1066f77p1ot1(TC* ac, T0* a1);
/* UC_UTF8_STRING.append */
extern void T1066f77p0(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.append_code */
extern void T1066f78(TC* ac, T0* C, T10 a1);
/* UC_UTF8_STRING.append_item_code */
extern void T1066f98(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.append */
extern void T1066f95(TC* ac, T0* C, T0* a1);
extern T1 T1066f95ot1(TC* ac, T0* a1);
extern T1 T1066f95ot2(TC* ac, T0* a1);
/* UC_UTF8_STRING.dummy_uc_string */
extern T0* T1066s65(TC* ac);
/* UC_UTF8_STRING.gobo_append_substring */
extern void T1066f80(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.append */
extern void T1066f95p1(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.additional_space */
extern T6 T1066f62(TC* ac, T0* C);
/* UC_STRING.append_string_general */
extern void T909f73(TC* ac, T0* C, T0* a1);
extern T1 T909f73ot1(TC* ac, T0* a1);
/* UC_STRING.append_string_general */
extern void T909f73p1(TC* ac, T0* C, T0* a1);
extern T1 T909f73p1ot1(TC* ac, T0* a1);
/* UC_STRING.append */
extern void T909f73p0(TC* ac, T0* C, T0* a1);
/* UC_STRING.append_code */
extern void T909f75(TC* ac, T0* C, T10 a1);
/* UC_STRING.append_item_code */
extern void T909f98(TC* ac, T0* C, T6 a1);
/* UC_STRING.append */
extern void T909f93(TC* ac, T0* C, T0* a1);
extern T1 T909f93ot1(TC* ac, T0* a1);
extern T1 T909f93ot2(TC* ac, T0* a1);
/* UC_STRING.dummy_uc_string */
extern T0* T909s63(TC* ac);
/* UC_STRING.gobo_append_substring */
extern void T909f74(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_STRING.append */
extern void T909f93p1(TC* ac, T0* C, T0* a1);
/* UC_STRING.additional_space */
extern T6 T909f60(TC* ac, T0* C);
/* STRING_8.append_string_general */
extern void T17f64(TC* ac, T0* C, T0* a1);
extern T1 T17f64ot1(TC* ac, T0* a1);
/* STRING_8.append */
extern void T17f64p1(TC* ac, T0* C, T0* a1);
/* STRING_8.append */
extern void T17f53(TC* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.as_readable_string_general_no_uc_string */
extern T0* T108s6(TC* ac, T0* a1);
extern T1 T108s6ot1(TC* ac, T0* a1);
/* KL_STRING_ROUTINES.appended_string_8 */
extern T0* T108s10(TC* ac, T0* a1, T0* a2);
extern T1 T108s10ot1(TC* ac, T0* a1);
extern T1 T108s10ot2(TC* ac, T0* a1);
/* UC_UTF8_STRING.append_string */
extern void T1066f76(TC* ac, T0* C, T0* a1);
/* UC_STRING.append_string */
extern void T909f79(TC* ac, T0* C, T0* a1);
/* STRING_8.append_string */
extern void T17f50(TC* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.concat_string_8 */
extern T0* T108s11(TC* ac, T0* a1, T0* a2);
extern T1 T108s11ot1(TC* ac, T0* a1);
extern T1 T108s11ot2(TC* ac, T0* a1);
/* UC_STRING.make_from_string_general */
extern T0* T909c72(TC* ac, T0* a1);
extern T1 T909f72ot1(TC* ac, T0* a1);
/* UC_UTF8_STRING.to_string_8 */
extern T0* T1066f32(TC* ac, T0* C);
/* UC_UTF8_STRING.put_code */
extern void T1066f89(TC* ac, T0* C, T10 a1, T6 a2);
/* UC_UTF8_STRING.put_item_code */
extern void T1066f105(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.move_bytes_right */
extern void T1066f107(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.move_bytes_left */
extern void T1066f106(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.to_string_8 */
extern T0* T909f9(TC* ac, T0* C);
/* UC_STRING.put_code */
extern void T909f87(TC* ac, T0* C, T10 a1, T6 a2);
/* UC_STRING.put_item_code */
extern void T909f104(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.move_bytes_right */
extern void T909f106(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.move_bytes_left */
extern void T909f105(TC* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.to_string_8 */
extern T0* T17f20(TC* ac, T0* C);
/* UC_UTF8_STRING.prefixed_string */
extern T0* T1066f19(TC* ac, T0* C, T0* a1);
/* UC_STRING.prefixed_string */
extern T0* T909f21(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.gobo_plus_general */
extern T0* T1066f31(TC* ac, T0* C, T0* a1);
/* UC_STRING.gobo_plus_general */
extern T0* T909f8(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.root_directory */
extern T0* T152s22(TC* ac);
/* KL_UNIX_FILE_SYSTEM.string_ */
extern T0* T152s20(TC* ac);
/* KL_PATHNAME.set_canonical */
extern void T1058f21(TC* ac, T0* C);
/* KL_PATHNAME.append_current */
extern void T1058f23(TC* ac, T0* C);
/* KL_PATHNAME.append_name */
extern void T1058f28(TC* ac, T0* C, T0* a1);
/* ARRAY [detachable STRING_8].force */
extern void T1656f11(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable STRING_8].move_data */
extern void T1101f10(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable STRING_8].overlapping_move */
extern void T1101f12(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable STRING_8].force */
extern void T1101f13(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable STRING_8].non_overlapping_move */
extern void T1101f11(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ARRAY [detachable STRING_8].capacity */
extern T6 T1656f7(TC* ac, T0* C);
/* ARRAY [detachable STRING_8].set_area */
extern void T1656f14(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable STRING_8].aliased_resized_area */
extern T0* T1101f4(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable STRING_8].fill_with */
extern void T1101f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable STRING_8].extend */
extern void T1101f9(TC* ac, T0* C, T0* a1);
/* ARRAY [detachable STRING_8].make_empty_area */
extern void T1656f13(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable STRING_8].make_empty */
extern void T1101f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable STRING_8].make_empty */
extern T0* T1101c5(TC* ac, T6 a1);
/* ARRAY [detachable STRING_8].additional_space */
extern T6 T1656f6(TC* ac, T0* C);
/* ARRAY [detachable STRING_8].empty_area */
extern T1 T1656f5(TC* ac, T0* C);
/* ARRAY [detachable STRING_8].put */
extern void T1656f10(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_UNIX_FILE_SYSTEM.string_to_pathname */
extern T0* T152s27(TC* ac, T0* a1);
/* KL_PATHNAME.append_parent */
extern void T1058f24(TC* ac, T0* C);
/* KL_PATHNAME.set_relative */
extern void T1058f22(TC* ac, T0* C, T1 a1);
/* KL_PATHNAME.make */
extern T0* T1058c20(TC* ac);
/* ARRAY [detachable STRING_8].make_filled */
extern T0* T1656c9(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable STRING_8].make_filled_area */
extern void T1656f12(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable STRING_8].make_filled */
extern T0* T1101c8(TC* ac, T0* a1, T6 a2);
/* KL_WINDOWS_FILE_SYSTEM.canonical_pathname */
extern T0* T151s17(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.pathname_to_string */
extern T0* T151s31(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.root_directory */
extern T0* T151s23(TC* ac);
/* KL_WINDOWS_FILE_SYSTEM.string_ */
extern T0* T151s20(TC* ac);
/* KL_WINDOWS_FILE_SYSTEM.string_to_pathname */
extern T0* T151s29(TC* ac, T0* a1);
/* KL_PATHNAME.set_drive */
extern void T1058f27(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_sharename */
extern void T1058f26(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_hostname */
extern void T1058f25(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_directory_separator */
extern T1 T151s21(TC* ac, T2 a1);
/* KL_WINDOWS_FILE_SYSTEM.secondary_directory_separator */
extern T2 T151s33(TC* ac);
/* KL_STRING_ROUTINES.same_string */
extern T1 T108s1(TC* ac, T0* a1, T0* a2);
extern T1 T108s1ot1(TC* ac, T0* a1);
extern T1 T108s1ot2(TC* ac, T0* a1);
/* UC_UTF8_STRING.same_string_general */
extern T1 T1066f36(TC* ac, T0* C, T0* a1);
extern T1 T1066f36ot1(TC* ac, T0* a1);
/* UC_STRING.same_string_general */
extern T1 T909f26(TC* ac, T0* C, T0* a1);
extern T1 T909f26ot1(TC* ac, T0* a1);
/* STRING_8.same_string_general */
extern T1 T17f17(TC* ac, T0* C, T0* a1);
/* STRING_8.same_characters_general */
extern T1 T17f29(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* UC_UTF8_STRING.same_unicode_string */
extern T1 T1066f35(TC* ac, T0* C, T0* a1);
extern T1 T1066f35ot1(TC* ac, T0* a1);
/* UC_STRING.same_unicode_string */
extern T1 T909f25(TC* ac, T0* C, T0* a1);
extern T1 T909f25ot1(TC* ac, T0* a1);
/* KL_TEXT_INPUT_FILE.file_system */
extern T0* T43s46(TC* ac);
/* KL_TEXT_INPUT_FILE.unix_file_system */
extern T0* T43s55(TC* ac);
/* KL_UNIX_FILE_SYSTEM.make */
extern T0* T152c35(TC* ac);
/* KL_OPERATING_SYSTEM.is_unix */
extern T1 T119s2(TC* ac);
/* KL_OPERATING_SYSTEM.current_working_directory */
extern T0* T119s4(TC* ac);
/* PATH.utf_8_name */
extern T0* T1014f6(TC* ac, T0* C);
/* PATH.name */
extern T0* T1014f4(TC* ac, T0* C);
/* UTF_CONVERTER.utf_8_string_8_to_escaped_string_32 */
extern T0* T40s8(TC* ac, T0* a1);
/* UTF_CONVERTER.utf_8_string_8_into_escaped_string_32 */
extern void T40s20(TC* ac, T0* a1, T0* a2);
/* UTF_CONVERTER.escape_code_into */
extern void T40s24(TC* ac, T0* a1, T9 a2);
/* NATURAL_16.to_hex_string */
extern T0* T9f12(TC* ac, volatile T9* C);
/* STRING_8.put */
extern void T17f78(TC* ac, T0* C, T2 a1, T6 a2);
/* NATURAL_16.to_hex_character */
extern T2 T9f15(TC* ac, volatile T9* C);
/* CHARACTER_8.plus */
extern T2 T2f33(TC* ac, volatile T2* C, T6 a1);
/* CHARACTER_8.minus */
extern T2 T2f32(TC* ac, volatile T2* C, T6 a1);
/* NATURAL_16.to_integer_32 */
extern T6 T9f5(TC* ac, volatile T9* C);
/* STRING_8.make_filled */
extern T0* T17c60(TC* ac, T2 a1, T6 a2);
/* STRING_8.fill_character */
extern void T17f72(TC* ac, T0* C, T2 a1);
/* STRING_32.append_string_general */
extern void T18f24(TC* ac, T0* C, T0* a1);
extern T1 T18f24ot1(TC* ac, T0* a1);
/* STRING_32.append */
extern void T18f24p1(TC* ac, T0* C, T0* a1);
/* STRING_32.append */
extern void T18f30(TC* ac, T0* C, T0* a1);
/* STRING_32.additional_space */
extern T6 T18f6(TC* ac, T0* C);
/* NATURAL_8.to_hex_string */
extern T0* T8f14(TC* ac, volatile T8* C);
/* NATURAL_8.to_hex_character */
extern T2 T8f21(TC* ac, volatile T8* C);
/* NATURAL_8.to_integer_32 */
extern T6 T8f25(TC* ac, volatile T8* C);
/* NATURAL_16.is_less_equal */
extern T1 T9f10(TC* ac, volatile T9* C, T9 a1);
/* STRING_32.append_character */
extern void T18f25(TC* ac, T0* C, T3 a1);
/* NATURAL_8.to_natural_16 */
extern T9 T8f12(TC* ac, volatile T8* C);
/* STRING_32.extend */
extern void T18f36(TC* ac, T0* C, T3 a1);
/* NATURAL_8.is_less_equal */
extern T1 T8f9(TC* ac, volatile T8* C, T8 a1);
/* STRING_32.grow */
extern void T18f35(TC* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.make_from_string */
extern T0* T20c18(TC* ac, T0* a1);
/* UTF_CONVERTER.utf_16le_string_8_to_escaped_string_32 */
extern T0* T40s11(TC* ac, T0* a1);
/* UTF_CONVERTER.utf_16le_string_8_into_escaped_string_32 */
extern void T40s23(TC* ac, T0* a1, T0* a2);
/* NATURAL_32.is_greater_equal */
extern T1 T10f14(TC* ac, volatile T10* C, T10 a1);
/* EXECUTION_ENVIRONMENT.current_working_path */
extern T0* T105s7(TC* ac);
/* PATH.make_from_pointer */
extern T0* T1014c18(TC* ac, T14 a1);
/* PATH.reset_internal_data */
extern void T1014f21(TC* ac, T0* C);
/* PATH.normalize */
extern void T1014f20(TC* ac, T0* C);
/* STRING_8.remove_tail */
extern void T17f66(TC* ac, T0* C, T6 a1);
/* PATH.directory_separator */
extern T2 T1014s13(TC* ac);
/* STRING_8.remove_head */
extern void T17f77(TC* ac, T0* C, T6 a1);
/* STRING_8.keep_tail */
extern void T17f81(TC* ac, T0* C, T6 a1);
/* PATH.root_end_position */
extern T6 T1014f12(TC* ac, T0* C);
/* PATH.next_directory_separator */
extern T6 T1014f16(TC* ac, T0* C, T6 a1);
/* CHARACTER_8.is_greater_equal */
extern T1 T2f12(TC* ac, volatile T2* C, T2 a1);
/* CHARACTER_8.as_lower */
extern T2 T2f26(TC* ac, volatile T2* C);
/* CHARACTER_8.lower_value */
extern T0* T2f30(TC* ac, volatile T2* C);
/* STRING_8.keep_head */
extern void T17f73(TC* ac, T0* C, T6 a1);
/* PATH.is_character */
extern T1 T1014f8(TC* ac, T0* C, T0* a1, T6 a2, T2 a3);
/* STRING_8.is_empty */
extern T1 T17f15(TC* ac, T0* C);
/* C_STRING.substring_8 */
extern T0* T31f3(TC* ac, T0* C, T6 a1, T6 a2);
/* C_STRING.read_substring_into */
extern void T31f14(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* NATURAL_8.to_natural_32 */
extern T10 T8f8(TC* ac, volatile T8* C);
/* MANAGED_POINTER.read_natural_8 */
extern T8 T162f5(TC* ac, T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_8].memory_copy */
extern void T1545f4(TC* ac, volatile T1545* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_8].c_memcpy */
extern void T1545s6(TC* ac, T14 a1, T14 a2, T6 a3);
/* PATH.unit_size */
extern T6 T1014f5(TC* ac, T0* C);
/* PATH.pointer_length_in_bytes */
extern T6 T1014f7(TC* ac, T0* C, T14 a1);
/* NATURAL_64.to_integer_32 */
extern T6 T11f16(TC* ac, volatile T11* C);
/* NATURAL_64.is_less_equal */
extern T1 T11f8(TC* ac, volatile T11* C, T11 a1);
/* PATH.c_pointer_length_in_bytes */
extern T11 T1014f15(TC* ac, T0* C, T14 a1);
/* PATH.make_from_string */
extern T0* T1014c17(TC* ac, T0* a1);
/* PATH.internal_append_into */
extern void T1014f19(TC* ac, T0* C, T0* a1, T0* a2, T2 a3);
/* UTF_CONVERTER.escaped_utf_32_string_into_utf_8_string_8 */
extern void T40s15(TC* ac, T0* a1, T0* a2);
/* STRING_8.extend */
extern void T17f57(TC* ac, T0* C, T2 a1);
/* IMMUTABLE_STRING_32.substring */
extern T0* T20f7(TC* ac, T0* C, T6 a1, T6 a2);
/* IMMUTABLE_STRING_32.empty_string */
extern T0* T20f8(TC* ac, T0* C);
/* IMMUTABLE_STRING_32.make */
extern void T20f19(TC* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.make */
extern T0* T20c19(TC* ac, T6 a1);
/* IMMUTABLE_STRING_32.make_from_area_and_bounds */
extern void T20f16(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* IMMUTABLE_STRING_32.make_from_area_and_bounds */
extern T0* T20c16(TC* ac, T0* a1, T6 a2, T6 a3);
/* IMMUTABLE_STRING_32.item */
extern T3 T20f6(TC* ac, T0* C, T6 a1);
/* STRING_8.grow */
extern void T17f56(TC* ac, T0* C, T6 a1);
/* UTF_CONVERTER.escaped_utf_32_string_into_utf_16le_string_8 */
extern void T40s19(TC* ac, T0* a1, T0* a2);
/* UC_UTF8_STRING.old_is_empty */
extern T1 T1066f8(TC* ac, T0* C);
/* UC_STRING.old_is_empty */
extern T1 T909f13(TC* ac, T0* C);
/* EXECUTION_ENVIRONMENT.eif_dir_current */
extern T6 T105s8(TC* ac, T14 a1, T6 a2);
/* KL_OPERATING_SYSTEM.execution_environment */
extern T0* T119s5(TC* ac);
/* EXECUTION_ENVIRONMENT.default_create */
extern T0* T105c10(TC* ac);
/* STRING_8.is_equal */
extern T1 T17f39(TC* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].same_items */
extern T1 T15f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_OPERATING_SYSTEM.variable_value */
extern T0* T119s3(TC* ac, T0* a1);
/* UC_UTF8_ROUTINES.string_to_utf8 */
extern T0* T167s1(TC* ac, T0* a1);
/* UC_UTF8_ROUTINES.substring_to_utf8 */
extern T0* T167s6(TC* ac, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_ROUTINES.append_substring_to_utf8 */
extern void T167s55(TC* ac, T0* a1, T0* a2, T6 a3, T6 a4);
/* UC_UTF8_ROUTINES.append_natural_32_code_to_utf8 */
extern void T167s56(TC* ac, T0* a1, T10 a2);
/* STRING_32.to_string_8 */
extern T0* T18f15(TC* ac, T0* C);
/* STRING_32.is_valid_as_string_8 */
extern T1 T18f14(TC* ac, T0* C);
/* EXECUTION_ENVIRONMENT.item */
extern T0* T105s2(TC* ac, T0* a1);
/* NATIVE_STRING.string */
extern T0* T899f6(TC* ac, T0* C);
/* UTF_CONVERTER.utf_8_0_pointer_to_escaped_string_32 */
extern T0* T40s10(TC* ac, T0* a1);
/* UTF_CONVERTER.utf_8_0_pointer_into_escaped_string_32 */
extern void T40s22(TC* ac, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_8_0_subpointer_into_escaped_string_32 */
extern void T40s26(TC* ac, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* UTF_CONVERTER.utf_16_0_pointer_to_escaped_string_32 */
extern T0* T40s9(TC* ac, T0* a1);
/* UTF_CONVERTER.utf_16_0_pointer_into_escaped_string_32 */
extern void T40s21(TC* ac, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_16_0_subpointer_into_escaped_string_32 */
extern void T40s25(TC* ac, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* NATURAL_16.to_natural_32 */
extern T10 T9f13(TC* ac, volatile T9* C);
/* MANAGED_POINTER.read_natural_16 */
extern T9 T162f6(TC* ac, T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_16].memory_copy */
extern void T1546f4(TC* ac, volatile T1546* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_16].c_memcpy */
extern void T1546s6(TC* ac, T14 a1, T14 a2, T6 a3);
/* NATIVE_STRING.make_from_pointer */
extern T0* T899c10(TC* ac, T14 a1);
/* NATIVE_STRING.unit_size */
extern T6 T899f5(TC* ac, T0* C);
/* NATIVE_STRING.pointer_length_in_bytes */
extern T6 T899f4(TC* ac, T0* C, T14 a1);
/* NATIVE_STRING.c_pointer_length_in_bytes */
extern T11 T899f8(TC* ac, T0* C, T14 a1);
/* EXECUTION_ENVIRONMENT.eif_getenv */
extern T14 T105s3(TC* ac, T14 a1);
/* NATIVE_STRING.item */
extern T14 T899f3(TC* ac, T0* C);
/* NATIVE_STRING.make */
extern T0* T899c9(TC* ac, T0* a1);
/* NATIVE_STRING.set_string */
extern void T899f12(TC* ac, T0* C, T0* a1);
/* NATIVE_STRING.set_substring */
extern void T899f13(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* NATIVE_STRING.upper_cell */
extern T0* T899f7(TC* ac, T0* C);
/* NATIVE_STRING.make_empty */
extern void T899f11(TC* ac, T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.windows_file_system */
extern T0* T43s54(TC* ac);
/* KL_WINDOWS_FILE_SYSTEM.make */
extern T0* T151c38(TC* ac);
/* KL_TEXT_INPUT_FILE.operating_system */
extern T0* T43s53(TC* ac);
/* KL_OPERATING_SYSTEM.default_create */
extern T0* T119c6(TC* ac);
/* KL_TEXT_INPUT_FILE.time_stamp */
extern T6 T43f15(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.date */
extern T6 T43f29(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.eif_file_date */
extern T6 T43s19(TC* ac, T14 a1);
/* KL_TEXT_INPUT_FILE.old_exists */
extern T1 T43f27(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_exists */
extern T1 T43s18(TC* ac, T14 a1);
/* KL_TEXT_INPUT_FILE.old_is_closed */
extern T1 T43f16(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.count */
extern T6 T43f45(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_count */
extern T6 T43f52(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_size */
extern T6 T43s57(TC* ac, T14 a1);
/* FILE_INFO.size */
extern T6 T166f18(TC* ac, T0* C);
/* FILE_INFO.file_info */
extern T6 T166s14(TC* ac, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.set_buffer */
extern void T43f73(TC* ac, T0* C);
/* FILE_INFO.fast_update */
extern void T166f23(TC* ac, T0* C, T0* a1, T0* a2);
/* FILE_INFO.eif_file_stat */
extern T6 T166s12(TC* ac, T14 a1, T14 a2, T1 a3);
/* KL_TEXT_INPUT_FILE.old_is_open_write */
extern T1 T43f56(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.inode */
extern T6 T43f44(TC* ac, T0* C);
/* FILE_INFO.inode */
extern T6 T166f17(TC* ac, T0* C);
/* UC_UTF8_STRING.same_string */
extern T1 T1066f26(TC* ac, T0* C, T0* a1);
/* UC_STRING.same_string */
extern T1 T909f17(TC* ac, T0* C, T0* a1);
/* STRING_8.same_string */
extern T1 T17f22(TC* ac, T0* C, T0* a1);
/* STRING_8.same_characters */
extern T1 T17f31(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_TEXT_INPUT_FILE.tmp_file1 */
extern T0* T43s43(TC* ac);
/* KL_TEXT_INPUT_FILE.exists */
extern T1 T43f36(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_plain */
extern T1 T43f38(TC* ac, T0* C);
/* FILE_INFO.is_plain */
extern T1 T166f13(TC* ac, T0* C);
/* KL_STRING_ROUTINES.as_string_no_uc_string */
extern T0* T108s2(TC* ac, T0* a1);
extern T1 T108s2ot1(TC* ac, T0* a1);
/* KL_TEXT_INPUT_FILE.string_ */
extern T0* T43s22(TC* ac);
/* KL_TEXT_INPUT_FILE.string_name */
extern T0* T43f23(TC* ac, T0* C);
/* UC_UTF8_STRING.as_string_8 */
extern T0* T1066f27(TC* ac, T0* C);
/* STRING_8.valid_code */
extern T1 T17f28(TC* ac, T0* C, T10 a1);
/* UC_UTF8_STRING.valid_code */
extern T1 T1066f52(TC* ac, T0* C, T10 a1);
/* UC_STRING.as_string_8 */
extern T0* T909f12(TC* ac, T0* C);
/* UC_STRING.valid_code */
extern T1 T909f39(TC* ac, T0* C, T10 a1);
/* STRING_8.as_string_8 */
extern T0* T17f14(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.reset */
extern void T43f74(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.tmp_file */
extern T0* T152s25(TC* ac);
/* KL_WINDOWS_FILE_SYSTEM.rename_file */
extern void T151s40(TC* ac, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.tmp_file */
extern T0* T151s27(TC* ac);
/* KL_UNIX_FILE_SYSTEM.pathname */
extern T0* T152s8(TC* ac, T0* a1, T0* a2);
/* STRING_8.twin */
extern T0* T17f13(TC* ac, T0* C);
/* STRING_8.copy */
extern void T17f70(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.pathname */
extern T0* T151s8(TC* ac, T0* a1, T0* a2);
/* GECC.execute_with_arguments */
extern T0* T118c11(TC* ac, T0* a1);
/* GECC.execute_with_arguments_and_error_handler */
extern void T118f12(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature GECC.execute_with_arguments_and_error_handler */
extern T0* T118f12ac1(TC* ac, T0* a1, T0* a2, T6 a3, T0* a4);
/* PROCEDURE [TUPLE].set_rout_disp_final */
extern void T984f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* GECC.report_cannot_read_error */
extern void T118f16(TC* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error */
extern void T160f9(TC* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error_message */
extern void T160f11(TC* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_line */
extern void T39f7(TC* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_new_line */
extern void T39f8(TC* ac, T0* C);
/* UT_ERROR_HANDLER.message */
extern T0* T160f5(TC* ac, T0* C, T0* a1);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.default_message */
extern T0* T2237f5(TC* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.message */
extern T0* T2237f3(TC* ac, T0* C, T0* a1);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.arguments */
extern T0* T2237s6(TC* ac);
/* KL_ARGUMENTS.make */
extern T0* T33c6(TC* ac);
/* KL_ARGUMENTS.argument */
extern T0* T33s3(TC* ac, T6 a1);
/* IMMUTABLE_STRING_32.as_string_8 */
extern T0* T20f12(TC* ac, T0* C);
/* ARGUMENTS_32.argument */
extern T0* T156s2(TC* ac, T6 a1);
/* ARRAY [IMMUTABLE_STRING_32].item */
extern T0* T1062f5(TC* ac, T0* C, T6 a1);
/* ARGUMENTS_32.internal_argument_array */
extern T0* T156s3(TC* ac);
/* ARRAY [IMMUTABLE_STRING_32].put */
extern void T1062f8(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [IMMUTABLE_STRING_32].compare_objects */
extern void T1062f7(TC* ac, T0* C);
/* ARRAY [IMMUTABLE_STRING_32].make_filled */
extern T0* T1062c6(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [IMMUTABLE_STRING_32].make_filled_area */
extern void T1062f9(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [IMMUTABLE_STRING_32].make_filled */
extern T0* T1063c6(TC* ac, T0* a1, T6 a2);
/* SPECIAL [IMMUTABLE_STRING_32].fill_with */
extern void T1063f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [IMMUTABLE_STRING_32].extend */
extern void T1063f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [IMMUTABLE_STRING_32].make_empty */
extern void T1063f4(TC* ac, T0* C, T6 a1);
/* SPECIAL [IMMUTABLE_STRING_32].make_empty */
extern T0* T1063c4(TC* ac, T6 a1);
/* IMMUTABLE_STRING_32.make_empty */
extern T0* T20c17(TC* ac);
/* KL_ARGUMENTS.internal_arguments */
extern T0* T33s4(TC* ac);
/* ARGUMENTS_32.default_create */
extern T0* T156c5(TC* ac);
/* ARRAY [STRING_8].item */
extern T0* T34f5(TC* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].valid_index */
extern T1 T34f4(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.to_integer */
extern T6 T1066f41(TC* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parsed_integer */
extern T6 T1015f13(TC* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parse_string_with_type */
extern void T1015f17(TC* ac, T0* C, T0* a1, T6 a2);
/* STRING_TO_INTEGER_CONVERTOR.parse_character */
extern void T1015f23(TC* ac, T0* C, T2 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflowed */
extern T1 T1015f15(TC* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.overflow_checker */
extern T0* T1015f14(TC* ac, T0* C);
/* CHARACTER_8.is_digit */
extern T1 T2f27(TC* ac, volatile T2* C);
/* STRING_TO_INTEGER_CONVERTOR.reset */
extern void T1015f22(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.ctoi_convertor */
extern T0* T1066f60(TC* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators_acceptable */
extern void T1015f21(TC* ac, T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators_acceptable */
extern void T1015f20(TC* ac, T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators */
extern void T1015f19(TC* ac, T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators */
extern void T1015f18(TC* ac, T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.make */
extern T0* T1015c16(TC* ac);
/* UC_STRING.to_integer */
extern T6 T909f30(TC* ac, T0* C);
/* UC_STRING.ctoi_convertor */
extern T0* T909f52(TC* ac, T0* C);
/* STRING_8.to_integer */
extern T6 T17f27(TC* ac, T0* C);
/* STRING_8.ctoi_convertor */
extern T0* T17f33(TC* ac, T0* C);
/* UC_UTF8_STRING.is_integer */
extern T1 T1066f40(TC* ac, T0* C);
/* UC_UTF8_STRING.is_valid_integer_or_natural */
extern T1 T1066f59(TC* ac, T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.is_integral_integer */
extern T1 T1015f12(TC* ac, T0* C);
/* UC_STRING.is_integer */
extern T1 T909f29(TC* ac, T0* C);
/* UC_STRING.is_valid_integer_or_natural */
extern T1 T909f51(TC* ac, T0* C, T6 a1);
/* STRING_8.is_integer */
extern T1 T17f36(TC* ac, T0* C);
/* STRING_8.is_valid_integer_or_natural */
extern T1 T17f43(TC* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.append_substring_to_string */
extern void T108s23(TC* ac, T0* a1, T0* a2, T6 a3, T6 a4);
extern T1 T108s23ot1(TC* ac, T0* a1);
/* KL_STRING_ROUTINES.appended_substring */
extern T0* T108s4(TC* ac, T0* a1, T0* a2, T6 a3, T6 a4);
/* UC_UTF8_STRING.append_substring_general */
extern void T1066f82(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_STRING.append_substring_general */
extern void T909f78(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_8.append_substring_general */
extern void T17f63(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STRING_ROUTINES.appended_substring_8 */
extern T0* T108s9(TC* ac, T0* a1, T0* a2, T6 a3, T6 a4);
extern T1 T108s9ot1(TC* ac, T0* a1);
extern T1 T108s9ot2(TC* ac, T0* a1);
/* UC_UTF8_STRING.append_substring */
extern void T1066f81(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_STRING.append_substring */
extern void T909f77(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_8.append_substring */
extern void T17f65(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.new_empty_string */
extern T0* T1066f24(TC* ac, T0* C, T6 a1);
/* UC_STRING.new_empty_string */
extern T0* T909f40(TC* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.new_empty_string */
extern T0* T108s3(TC* ac, T0* a1, T6 a2);
extern T1 T108s3ot1(TC* ac, T0* a1);
/* UC_UTF8_STRING.old_wipe_out */
extern void T1066f86(TC* ac, T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T1066f94(TC* ac, T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T1066f86p1(TC* ac, T0* C);
/* UC_STRING.old_wipe_out */
extern void T909f84(TC* ac, T0* C);
/* UC_STRING.wipe_out */
extern void T909f101(TC* ac, T0* C);
/* UC_STRING.wipe_out */
extern void T909f84p1(TC* ac, T0* C);
/* STRING_8.wipe_out */
extern void T17f62(TC* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.string_ */
extern T0* T2237s4(TC* ac);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.default_message */
extern T0* T2203f5(TC* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.message */
extern T0* T2203f3(TC* ac, T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.arguments */
extern T0* T2203s6(TC* ac);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.string_ */
extern T0* T2203s4(TC* ac);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.default_message */
extern T0* T2202f5(TC* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.message */
extern T0* T2202f3(TC* ac, T0* C, T0* a1);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.arguments */
extern T0* T2202s6(TC* ac);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.string_ */
extern T0* T2202s4(TC* ac);
/* LX_FULL_AND_REJECT_ERROR.default_message */
extern T0* T2201f5(TC* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.message */
extern T0* T2201f3(TC* ac, T0* C, T0* a1);
/* LX_FULL_AND_REJECT_ERROR.arguments */
extern T0* T2201s6(TC* ac);
/* LX_FULL_AND_REJECT_ERROR.string_ */
extern T0* T2201s4(TC* ac);
/* LX_FULL_AND_META_ERROR.default_message */
extern T0* T2200f5(TC* ac, T0* C);
/* LX_FULL_AND_META_ERROR.message */
extern T0* T2200f3(TC* ac, T0* C, T0* a1);
/* LX_FULL_AND_META_ERROR.arguments */
extern T0* T2200s6(TC* ac);
/* LX_FULL_AND_META_ERROR.string_ */
extern T0* T2200s4(TC* ac);
/* LX_BAD_CHARACTER_ERROR.default_message */
extern T0* T2199f5(TC* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.message */
extern T0* T2199f3(TC* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.arguments */
extern T0* T2199s6(TC* ac);
/* LX_BAD_CHARACTER_ERROR.string_ */
extern T0* T2199s4(TC* ac);
/* LX_BAD_CHARACTER_CLASS_ERROR.default_message */
extern T0* T2198f5(TC* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.message */
extern T0* T2198f3(TC* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_CLASS_ERROR.arguments */
extern T0* T2198s6(TC* ac);
/* LX_BAD_CHARACTER_CLASS_ERROR.string_ */
extern T0* T2198s4(TC* ac);
/* LX_MISSING_QUOTE_ERROR.default_message */
extern T0* T2197f5(TC* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.message */
extern T0* T2197f3(TC* ac, T0* C, T0* a1);
/* LX_MISSING_QUOTE_ERROR.arguments */
extern T0* T2197s6(TC* ac);
/* LX_MISSING_QUOTE_ERROR.string_ */
extern T0* T2197s4(TC* ac);
/* LX_INVALID_UNICODE_CHARACTER_ERROR.default_message */
extern T0* T2196f5(TC* ac, T0* C);
/* LX_INVALID_UNICODE_CHARACTER_ERROR.message */
extern T0* T2196f3(TC* ac, T0* C, T0* a1);
/* LX_INVALID_UNICODE_CHARACTER_ERROR.arguments */
extern T0* T2196s6(TC* ac);
/* LX_INVALID_UNICODE_CHARACTER_ERROR.string_ */
extern T0* T2196s4(TC* ac);
/* LX_UNRECOGNIZED_RULE_ERROR.default_message */
extern T0* T2195f5(TC* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.message */
extern T0* T2195f3(TC* ac, T0* C, T0* a1);
/* LX_UNRECOGNIZED_RULE_ERROR.arguments */
extern T0* T2195s6(TC* ac);
/* LX_UNRECOGNIZED_RULE_ERROR.string_ */
extern T0* T2195s4(TC* ac);
/* UT_SYNTAX_ERROR.default_message */
extern T0* T1654f5(TC* ac, T0* C);
/* UT_SYNTAX_ERROR.message */
extern T0* T1654f3(TC* ac, T0* C, T0* a1);
/* UT_SYNTAX_ERROR.arguments */
extern T0* T1654s6(TC* ac);
/* UT_SYNTAX_ERROR.string_ */
extern T0* T1654s4(TC* ac);
/* UT_VERSION_NUMBER.default_message */
extern T0* T103f3(TC* ac, T0* C);
/* UT_VERSION_NUMBER.message */
extern T0* T103f5(TC* ac, T0* C, T0* a1);
/* UT_VERSION_NUMBER.arguments */
extern T0* T103s7(TC* ac);
/* UT_VERSION_NUMBER.string_ */
extern T0* T103s6(TC* ac);
/* UT_CANNOT_READ_FILE_ERROR.default_message */
extern T0* T83f3(TC* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.message */
extern T0* T83f5(TC* ac, T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.arguments */
extern T0* T83s7(TC* ac);
/* UT_CANNOT_READ_FILE_ERROR.string_ */
extern T0* T83s6(TC* ac);
/* UT_CANNOT_READ_FILE_ERROR.make */
extern T0* T83c8(TC* ac, T0* a1);
/* ARRAY [STRING_8].put */
extern void T34f8(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [STRING_8].make_filled */
extern T0* T34c7(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [STRING_8].make_filled_area */
extern void T34f9(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].make_filled */
extern T0* T35c7(TC* ac, T0* a1, T6 a2);
/* SPECIAL [STRING_8].fill_with */
extern void T35f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].extend */
extern void T35f10(TC* ac, T0* C, T0* a1);
/* SPECIAL [STRING_8].make_empty */
extern void T35f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].make_empty */
extern T0* T35c8(TC* ac, T6 a1);
/* GECC.process_lines */
extern void T118f14(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* MUTEX.unlock */
extern void T159f12(TC* ac, T0* C);
/* MUTEX.eif_thr_mutex_unlock */
extern void T159s15(TC* ac, T14 a1);
/* MUTEX.default_pointer */
extern T14 T159s7(TC* ac);
/* DS_ARRAYED_LIST [STRING_8].remove_first */
extern void T169f27(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].remove */
extern void T169f32(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].keep_head */
extern void T35f11(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].set_count */
extern void T35f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].move_left */
extern void T169f37(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_cursors_left */
extern void T169f36(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_position */
extern void T1067f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].remove_last */
extern void T169f35(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].move_last_cursors_after */
extern void T169f38(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T1067f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_after */
extern void T1067f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].first */
extern T0* T169f8(TC* ac, T0* C);
/* MUTEX.lock */
extern void T159f11(TC* ac, T0* C);
/* MUTEX.current_thread_id */
extern T14 T159s5(TC* ac);
/* MUTEX.eif_thr_mutex_lock */
extern void T159s14(TC* ac, T14 a1);
/* GECC.process */
extern void T118f15(TC* ac, T0* C, T0* a1, T6 a2);
/* THREAD_CONTROL.join_all */
extern void T1013s1(TC* ac);
/* EXECUTION_ENVIRONMENT.sleep */
extern void T105s12(TC* ac, T7 a1);
/* EXECUTION_ENVIRONMENT.eif_sleep */
extern void T105s13(TC* ac, T7 a1);
/* WORKER_THREAD.launch */
extern void T1012f10(TC* ac, T0* C);
/* WORKER_THREAD.launch_with_attributes */
extern void T1012f12(TC* ac, T0* C, T0* a1);
/* WORKER_THREAD.last_created_thread */
extern T14 T1012s6(TC* ac);
/* WORKER_THREAD.thr_set_terminated */
extern void T1012f14(TC* ac, T0* C, T1 a1);
/* WORKER_THREAD.thr_set_terminated */
extern void T1012a14(T0* C, T1 a1);
/* WORKER_THREAD.thr_main */
extern void T1012f13(TC* ac, T0* C, T6 a1);
/* WORKER_THREAD.thr_main */
extern void T1012a13(T0* C, T6 a1);
/* WORKER_THREAD.execute_procedure */
extern void T1012f16(TC* ac, T0* C);
/* WORKER_THREAD.default_pointer */
extern T14 T1012s8(TC* ac);
/* WORKER_THREAD.create_thread_with_attr */
extern void T1012s15(TC* ac, T0* a1, T14 a2, T14 a3, T14 a4);
/* THREAD_ATTRIBUTES.item */
extern T14 T1438f4(TC* ac, T0* C);
/* WORKER_THREAD.is_launchable */
extern T1 T1012f5(TC* ac, T0* C);
/* MUTEX.is_set */
extern T1 T159f6(TC* ac, T0* C);
/* CELL [BOOLEAN].put */
extern void T1439f2(TC* ac, T0* C, T1 a1);
/* CELL [BOOLEAN].put */
extern T0* T1439c2(TC* ac, T1 a1);
/* WORKER_THREAD.is_last_launch_successful_cell */
extern T0* T1012f7(TC* ac, T0* C);
/* THREAD_ATTRIBUTES.make */
extern T0* T1438c7(TC* ac);
/* THREAD_ATTRIBUTES.set_priority */
extern void T1438f9(TC* ac, T0* C, T6 a1);
/* THREAD_ATTRIBUTES.c_set_priority */
extern void T1438s10(TC* ac, T14 a1, T6 a2);
/* THREAD_ATTRIBUTES.default_priority */
extern T6 T1438s5(TC* ac);
/* THREAD_ATTRIBUTES.mem_make */
extern void T1438f8(TC* ac, T0* C);
/* THREAD_ATTRIBUTES.structure_size */
extern T6 T1438s6(TC* ac);
/* WORKER_THREAD.make */
extern T0* T1012c9(TC* ac, T0* a1);
/* WORKER_THREAD.thread_make */
extern void T1012f11(TC* ac, T0* C);
/* GECC.thread_count */
extern T6 T118f8(TC* ac, T0* C);
/* AP_INTEGER_OPTION.parameter */
extern T6 T59f14(TC* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].last */
extern T6 T228f7(TC* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].is_empty */
extern T1 T228f6(TC* ac, T0* C);
/* AP_INTEGER_OPTION.was_found */
extern T1 T59f13(TC* ac, T0* C);
/* AP_INTEGER_OPTION.occurrences */
extern T6 T59f16(TC* ac, T0* C);
/* EXECUTION_ENVIRONMENT.available_cpu_count */
extern T10 T105s5(TC* ac);
/* MUTEX.make */
extern T0* T159c10(TC* ac);
/* MUTEX.eif_thr_mutex_create */
extern T14 T159s8(TC* ac);
/* DS_ARRAYED_LIST [STRING_8].is_empty */
extern T1 T169f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].force_last */
extern void T169f25(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [STRING_8].force */
extern void T855s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* DS_ARRAYED_LIST [STRING_8].resize */
extern void T169f31(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].aliased_resized_area */
extern T0* T855s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [STRING_8].aliased_resized_area */
extern T0* T35f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].new_capacity */
extern T6 T169f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].extendible */
extern T1 T169f16(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.ends_with */
extern T1 T1066f28(TC* ac, T0* C, T0* a1);
/* STRING_8.area_upper */
extern T6 T17f30(TC* ac, T0* C);
/* UC_UTF8_STRING.area_upper */
extern T6 T1066f53(TC* ac, T0* C);
/* UC_STRING.ends_with */
extern T1 T909f22(TC* ac, T0* C, T0* a1);
/* UC_STRING.area_upper */
extern T6 T909f45(TC* ac, T0* C);
/* STRING_8.ends_with */
extern T1 T17f25(TC* ac, T0* C, T0* a1);
/* STRING_8.starts_with */
extern T1 T17f21(TC* ac, T0* C, T0* a1);
/* STRING_8.adjust */
extern void T17f69(TC* ac, T0* C);
/* STRING_8.right_adjust */
extern void T17f75(TC* ac, T0* C);
/* CHARACTER_8.is_space */
extern T1 T2f9(TC* ac, volatile T2* C);
/* STRING_8.left_adjust */
extern void T17f74(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.read_line */
extern void T43f64(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.unread_character */
extern void T43f69(TC* ac, T0* C, T2 a1);
/* KL_LINKABLE [CHARACTER_8].put_right */
extern void T164f4(TC* ac, T0* C, T0* a1);
/* KL_LINKABLE [CHARACTER_8].make */
extern T0* T164c3(TC* ac, T2 a1);
/* KL_TEXT_INPUT_FILE.read_character */
extern void T43f68(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_read_character */
extern void T43f72(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_gc */
extern T2 T43s34(TC* ac, T14 a1);
/* KL_TEXT_INPUT_FILE.old_end_of_file */
extern T1 T43f32(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_feof */
extern T1 T43s35(TC* ac, T14 a1);
/* KL_STRING_ROUTINES.wipe_out */
extern void T108s24(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].make */
extern void T169f21(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].make */
extern T0* T169c21(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].set_internal_cursor */
extern void T169f28(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].new_cursor */
extern T0* T169f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].make */
extern T0* T1067c8(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [STRING_8].make */
extern T0* T855s1(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].default_create */
extern T0* T855c3(TC* ac);
/* GECC.parse_arguments */
extern void T118f13(TC* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_info_message */
extern void T160f8(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_usage_instruction */
extern T0* T212f12(TC* ac, T0* C, T0* a1);
/* AP_PARSER.full_usage_instruction */
extern T0* T52f23(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].forth */
extern void T214f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_forth */
extern void T214f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_position */
extern void T1098f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].add_traversing_cursor */
extern void T214f22(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_next_cursor */
extern void T1098f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].remove_traversing_cursor */
extern void T214f23(TC* ac, T0* C, T0* a1);
/* AP_PARSER.alternative_usage_instruction */
extern T0* T52f21(TC* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.wrapped_string */
extern T0* T210f5(TC* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.canonify_whitespace */
extern void T210f12(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.put */
extern void T1066f111(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_STRING.put */
extern void T909f110(TC* ac, T0* C, T2 a1, T6 a2);
/* ST_WORD_WRAPPER.is_space */
extern T1 T210f8(TC* ac, T0* C, T2 a1);
/* KL_STRING_ROUTINES.cloned_string */
extern T0* T108s13(TC* ac, T0* a1);
/* ST_WORD_WRAPPER.string_ */
extern T0* T210s4(TC* ac);
/* ST_WORD_WRAPPER.set_new_line_indentation */
extern void T210f10(TC* ac, T0* C, T6 a1);
/* AP_PARSER.wrapper */
extern T0* T52f12(TC* ac, T0* C);
/* ST_WORD_WRAPPER.set_maximum_text_width */
extern void T210f11(TC* ac, T0* C, T6 a1);
/* ST_WORD_WRAPPER.make */
extern T0* T210c9(TC* ac);
/* UC_UTF8_STRING.keep_head */
extern void T1066f74(TC* ac, T0* C, T6 a1);
/* UC_STRING.keep_head */
extern void T909f81(TC* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.basename */
extern T0* T152s14(TC* ac, T0* a1);
/* KL_UNIX_FILE_SYSTEM.is_root_directory */
extern T1 T152s11(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.basename */
extern T0* T151s14(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_root_directory */
extern T1 T151s11(TC* ac, T0* a1);
/* AP_PARSER.arguments */
extern T0* T52s27(TC* ac);
/* AP_PARSER.file_system */
extern T0* T52s26(TC* ac);
/* AP_PARSER.unix_file_system */
extern T0* T52s15(TC* ac);
/* AP_PARSER.windows_file_system */
extern T0* T52s14(TC* ac);
/* AP_PARSER.operating_system */
extern T0* T52s13(TC* ac);
/* AP_ALTERNATIVE_OPTIONS_LIST.forth */
extern void T53f20(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_forth */
extern void T53f22(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.add_traversing_cursor */
extern void T53f23(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T217f9(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.remove_traversing_cursor */
extern void T53f24(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set */
extern void T217f8(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* AP_ALTERNATIVE_OPTIONS_LIST.item_for_iteration */
extern T0* T53f9(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_item */
extern T0* T53f11(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.after */
extern T1 T53f8(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_after */
extern T1 T53f10(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.start */
extern void T53f19(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_start */
extern void T53f21(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_off */
extern T1 T53f12(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].off */
extern T1 T217f6(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.example */
extern T0* T212f14(TC* ac, T0* C);
/* CHARACTER_8.out */
extern T0* T2f4(TC* ac, volatile T2* C);
/* AP_FLAG.example */
extern T0* T46f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item_for_iteration */
extern T0* T214f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_item */
extern T0* T214f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T214f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_after */
extern T1 T214f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T1098f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].start */
extern void T214f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_start */
extern void T214f20(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_after */
extern void T1098f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].is_empty */
extern T1 T214f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].off */
extern T1 T1098f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].before */
extern T1 T1098f6(TC* ac, T0* C);
/* AP_PARSER.usage_instruction */
extern T0* T52f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].forth */
extern void T213f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_forth */
extern void T213f24(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_position */
extern void T1094f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].add_traversing_cursor */
extern void T213f25(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T1094f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].remove_traversing_cursor */
extern void T213f26(TC* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.example */
extern T0* T59f15(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.example */
extern T0* T58f17(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.example */
extern T0* T57f13(TC* ac, T0* C);
/* AP_STRING_OPTION.example */
extern T0* T54f18(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.is_hidden */
extern T1 T212f6(TC* ac, T0* C);
/* AP_INTEGER_OPTION.is_hidden */
extern T1 T59f8(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.is_hidden */
extern T1 T58f7(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.is_hidden */
extern T1 T57f8(TC* ac, T0* C);
/* AP_FLAG.is_hidden */
extern T1 T46f6(TC* ac, T0* C);
/* AP_STRING_OPTION.is_hidden */
extern T1 T54f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].item_for_iteration */
extern T0* T213f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_item */
extern T0* T213f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].after */
extern T1 T213f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_after */
extern T1 T213f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].after */
extern T1 T1094f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].start */
extern void T213f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_start */
extern void T213f23(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_after */
extern void T1094f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].is_empty */
extern T1 T213f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].off */
extern T1 T1094f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].before */
extern T1 T1094f6(TC* ac, T0* C);
/* GECC.report_version_number */
extern void T118f17(TC* ac, T0* C);
/* UT_ERROR_HANDLER.report_info */
extern void T160f10(TC* ac, T0* C, T0* a1);
/* UT_VERSION_NUMBER.make */
extern T0* T103c8(TC* ac, T0* a1);
/* AP_PARSER.parse_array */
extern void T52f44(TC* ac, T0* C, T0* a1);
/* AP_PARSER.parse_list */
extern void T52f45(TC* ac, T0* C, T0* a1);
/* AP_PARSER.final_error_action */
extern void T52f49(TC* ac, T0* C);
/* AP_PARSER.exceptions */
extern T0* T52s31(TC* ac);
/* KL_EXCEPTIONS.default_create */
extern T0* T36c1(TC* ac);
/* AP_ERROR_HANDLER.report_error_message */
extern void T215f10(TC* ac, T0* C, T0* a1);
/* AP_ERROR_HANDLER.report_error_message */
extern void T215f10p1(TC* ac, T0* C, T0* a1);
/* AP_PARSER.check_options_after_parsing */
extern void T52f48(TC* ac, T0* C);
/* AP_ERROR.make_surplus_option_error */
extern T0* T113c23(TC* ac, T0* a1);
/* AP_DISPLAY_HELP_FLAG.name */
extern T0* T212f10(TC* ac, T0* C);
/* AP_INTEGER_OPTION.name */
extern T0* T59f17(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.name */
extern T0* T58f13(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.name */
extern T0* T57f15(TC* ac, T0* C);
/* AP_FLAG.name */
extern T0* T46f10(TC* ac, T0* C);
/* AP_STRING_OPTION.name */
extern T0* T54f14(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.occurrences */
extern T6 T212f5(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.occurrences */
extern T6 T58f14(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.occurrences */
extern T6 T57f16(TC* ac, T0* C);
/* AP_FLAG.occurrences */
extern T6 T46f1(TC* ac, T0* C);
/* AP_STRING_OPTION.occurrences */
extern T6 T54f17(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.maximum_occurrences */
extern T6 T212f8(TC* ac, T0* C);
/* AP_INTEGER_OPTION.maximum_occurrences */
extern T6 T59f10(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.maximum_occurrences */
extern T6 T58f9(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.maximum_occurrences */
extern T6 T57f10(TC* ac, T0* C);
/* AP_FLAG.maximum_occurrences */
extern T6 T46f8(TC* ac, T0* C);
/* AP_STRING_OPTION.maximum_occurrences */
extern T6 T54f10(TC* ac, T0* C);
/* AP_ERROR_HANDLER.report_error */
extern void T215f9(TC* ac, T0* C, T0* a1);
/* AP_ERROR_HANDLER.message */
extern T0* T215f6(TC* ac, T0* C, T0* a1);
/* AP_ERROR.default_message */
extern T0* T113f17(TC* ac, T0* C);
/* AP_ERROR.message */
extern T0* T113f18(TC* ac, T0* C, T0* a1);
/* AP_ERROR.arguments */
extern T0* T113s20(TC* ac);
/* AP_ERROR.string_ */
extern T0* T113s19(TC* ac);
/* AP_ERROR.make_missing_option_error */
extern T0* T113c22(TC* ac, T0* a1);
/* AP_DISPLAY_HELP_FLAG.was_found */
extern T1 T212f13(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.was_found */
extern T1 T58f16(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.was_found */
extern T1 T57f18(TC* ac, T0* C);
/* AP_STRING_OPTION.was_found */
extern T1 T54f13(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.is_mandatory */
extern T1 T212f7(TC* ac, T0* C);
/* AP_INTEGER_OPTION.is_mandatory */
extern T1 T59f9(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.is_mandatory */
extern T1 T58f8(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.is_mandatory */
extern T1 T57f9(TC* ac, T0* C);
/* AP_FLAG.is_mandatory */
extern T1 T46f7(TC* ac, T0* C);
/* AP_STRING_OPTION.is_mandatory */
extern T1 T54f9(TC* ac, T0* C);
/* AP_PARSER.parse_argument */
extern void T52f47(TC* ac, T0* C, T0* a1);
/* AP_PARSER.parse_short */
extern void T52f51(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.record_occurrence */
extern void T212f26(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.display_help */
extern void T212f27(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.exceptions */
extern T0* T212s18(TC* ac);
/* AP_ERROR_HANDLER.report_info_message */
extern void T215f11(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_help_text */
extern T0* T212f17(TC* ac, T0* C, T0* a1);
/* AP_PARSER.full_help_text */
extern T0* T52f35(TC* ac, T0* C);
/* AP_PARSER.option_help_text */
extern T0* T52f40(TC* ac, T0* C, T0* a1, T6 a2);
/* AP_DISPLAY_HELP_FLAG.description */
extern T0* T212f1(TC* ac, T0* C);
/* AP_INTEGER_OPTION.description */
extern T0* T59f3(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.description */
extern T0* T58f3(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.description */
extern T0* T57f3(TC* ac, T0* C);
/* AP_FLAG.description */
extern T0* T46f2(TC* ac, T0* C);
/* AP_STRING_OPTION.description */
extern T0* T54f3(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.names */
extern T0* T212f19(TC* ac, T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T59f21(TC* ac, T0* C);
/* AP_INTEGER_OPTION.has_long_form */
extern T1 T59f22(TC* ac, T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T59f21p1(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T58f24(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.has_long_form */
extern T1 T58f25(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T58f24p1(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T57f23(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.has_long_form */
extern T1 T57f24(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T57f23p1(TC* ac, T0* C);
/* AP_FLAG.names */
extern T0* T46f16(TC* ac, T0* C);
/* AP_STRING_OPTION.names */
extern T0* T54f22(TC* ac, T0* C);
/* AP_STRING_OPTION.has_long_form */
extern T1 T54f23(TC* ac, T0* C);
/* AP_STRING_OPTION.names */
extern T0* T54f22p1(TC* ac, T0* C);
/* DS_QUICK_SORTER [AP_OPTION].sort */
extern void T2155f3(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [AP_OPTION].sort_with_comparator */
extern void T2155f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [AP_OPTION].subsort_with_comparator */
extern void T2155f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ARRAY [INTEGER_32].force */
extern void T940f14(TC* ac, T0* C, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].move_data */
extern void T154f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].overlapping_move */
extern void T154f19(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].force */
extern void T154f11(TC* ac, T0* C, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].non_overlapping_move */
extern void T154f18(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ARRAY [INTEGER_32].capacity */
extern T6 T940f7(TC* ac, T0* C);
/* ARRAY [INTEGER_32].set_area */
extern void T940f16(TC* ac, T0* C, T0* a1);
/* SPECIAL [INTEGER_32].aliased_resized_area */
extern T0* T154f4(TC* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].make_empty_area */
extern void T940f15(TC* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].additional_space */
extern T6 T940f6(TC* ac, T0* C);
/* ARRAY [INTEGER_32].empty_area */
extern T1 T940f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].swap */
extern void T213f28(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [AP_OPTION].replace */
extern void T213f27(TC* ac, T0* C, T0* a1, T6 a2);
/* AP_OPTION_COMPARATOR.less_than */
extern T1 T2154f1(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.three_way_comparison */
extern T6 T108s20(TC* ac, T0* a1, T0* a2);
extern T1 T108s20ot1(TC* ac, T0* a1);
extern T1 T108s20ot2(TC* ac, T0* a1);
/* UC_UTF8_STRING.three_way_unicode_comparison */
extern T6 T1066f70(TC* ac, T0* C, T0* a1);
extern T1 T1066f70ot1(TC* ac, T0* a1);
/* UC_STRING.three_way_unicode_comparison */
extern T6 T909f70(TC* ac, T0* C, T0* a1);
extern T1 T909f70ot1(TC* ac, T0* a1);
/* AP_OPTION_COMPARATOR.string_ */
extern T0* T2154s2(TC* ac);
/* AP_DISPLAY_HELP_FLAG.long_form */
extern T0* T212f4(TC* ac, T0* C);
/* AP_INTEGER_OPTION.long_form */
extern T0* T59f6(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.long_form */
extern T0* T58f6(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.long_form */
extern T0* T57f7(TC* ac, T0* C);
/* AP_FLAG.long_form */
extern T0* T46f3(TC* ac, T0* C);
/* AP_STRING_OPTION.long_form */
extern T0* T54f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].item */
extern T0* T213f16(TC* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].item */
extern T6 T940f4(TC* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].put */
extern void T940f12(TC* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].make_filled */
extern T0* T940c10(TC* ac, T6 a1, T6 a2, T6 a3);
/* ARRAY [INTEGER_32].make_filled_area */
extern void T940f13(TC* ac, T0* C, T6 a1, T6 a2);
/* AP_PARSER.all_options */
extern T0* T52f25(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].has */
extern T1 T213f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].make */
extern T0* T213c17(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].set_internal_cursor */
extern void T213f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_cursor */
extern T0* T213f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].make */
extern T0* T1094c8(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].make */
extern T0* T1097s1(TC* ac, T6 a1);
/* SPECIAL [AP_OPTION].make_empty */
extern T0* T1096c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].default_create */
extern T0* T1097c3(TC* ac);
/* DS_QUICK_SORTER [AP_OPTION].make */
extern T0* T2155c2(TC* ac, T0* a1);
/* AP_OPTION_COMPARATOR.default_create */
extern T0* T2154c3(TC* ac);
/* AP_INTEGER_OPTION.record_occurrence */
extern void T59f29(TC* ac, T0* C, T0* a1);
/* AP_ERROR.make_invalid_parameter_error */
extern T0* T113c21(TC* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST [INTEGER_32].force_last */
extern void T228f10(TC* ac, T0* C, T6 a1);
/* DS_LINKABLE [INTEGER_32].put_right */
extern void T1106f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [INTEGER_32].make */
extern T0* T1106c3(TC* ac, T6 a1);
/* AP_BOOLEAN_OPTION.record_occurrence */
extern void T58f32(TC* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.false_strings */
extern T0* T58f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].put_last */
extern void T169f26(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].set_equality_tester */
extern void T169f43(TC* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.case_insensitive_string_equality_tester */
extern T0* T58s23(TC* ac);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.default_create */
extern T0* T792c3(TC* ac);
/* DS_ARRAYED_LIST [STRING_8].has */
extern T1 T169f18(TC* ac, T0* C, T0* a1);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.test */
extern T1 T792f1(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.same_case_insensitive */
extern T1 T108s14(TC* ac, T0* a1, T0* a2);
extern T1 T108s14ot1(TC* ac, T0* a1);
extern T1 T108s14ot2(TC* ac, T0* a1);
/* CHARACTER_32.lower */
extern T3 T3f7(TC* ac, volatile T3* C);
/* CHARACTER_PROPERTY.to_lower */
extern T3 T1441f1(TC* ac, T0* C, T3 a1);
/* CHARACTER_PROPERTY.to_lower_table_16 */
extern T0* T1441f19(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_15 */
extern T0* T1441f18(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_14 */
extern T0* T1441f17(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_13 */
extern T0* T1441f16(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_12 */
extern T0* T1441f15(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_11 */
extern T0* T1441f14(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_10 */
extern T0* T1441f13(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_9 */
extern T0* T1441f12(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_8 */
extern T0* T1441f11(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_7 */
extern T0* T1441f10(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_6 */
extern T0* T1441f9(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_5 */
extern T0* T1441f8(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_4 */
extern T0* T1441f7(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_3 */
extern T0* T1441f6(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_2 */
extern T0* T1441f5(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_1 */
extern T0* T1441f4(TC* ac, T0* C);
/* CHARACTER_32.plus */
extern T3 T3f6(TC* ac, volatile T3* C, T10 a1);
/* CHARACTER_32.is_less_equal */
extern T1 T3f13(TC* ac, volatile T3* C, T3 a1);
/* CHARACTER_32.is_less */
extern T1 T3f15(TC* ac, volatile T3* C, T3 a1);
/* CHARACTER_32.properties */
extern T0* T3f10(TC* ac, volatile T3* C);
/* CHARACTER_PROPERTY.make */
extern T0* T1441c37(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code */
extern T6 T906s2(TC* ac, T6 a1);
/* UC_UNICODE_ROUTINES.lower_codes */
extern T0* T906s7(TC* ac);
/* UC_UNICODE_ROUTINES.empty_lower_code_plane */
extern T0* T906s10(TC* ac);
/* SPECIAL [ARRAY [INTEGER_32]].make_filled */
extern T0* T1345c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ARRAY [INTEGER_32]].fill_with */
extern void T1345f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ARRAY [INTEGER_32]].extend */
extern void T1345f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [ARRAY [INTEGER_32]].make_empty */
extern void T1345f6(TC* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.empty_lower_code_segment */
extern T0* T906s17(TC* ac);
/* KL_INTEGER_ROUTINES.to_integer */
extern T6 T1347s1(TC* ac, T6 a1);
/* UC_UNICODE_ROUTINES.integer_ */
extern T0* T906s28(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_1 */
extern T0* T906s9(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_1_segment_4 */
extern T0* T906s27(TC* ac);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].make_filled */
extern T0* T1346c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].fill_with */
extern void T1346f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].extend */
extern void T1346f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].make_empty */
extern void T1346f6(TC* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_code_plane_0 */
extern T0* T906s8(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_255 */
extern T0* T906s26(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_167 */
extern T0* T906s25(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_166 */
extern T0* T906s24(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_44 */
extern T0* T906s23(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_36 */
extern T0* T906s22(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_33 */
extern T0* T906s21(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_31 */
extern T0* T906s20(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_30 */
extern T0* T906s19(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_16 */
extern T0* T906s18(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_5 */
extern T0* T906s16(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_4 */
extern T0* T906s15(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_3 */
extern T0* T906s14(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_2 */
extern T0* T906s13(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_1 */
extern T0* T906s12(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_0 */
extern T0* T906s11(TC* ac);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_natural_32_code */
extern T1 T906s1(TC* ac, T10 a1);
/* KL_STRING_ROUTINES.unicode */
extern T0* T108s16(TC* ac);
/* UC_UNICODE_ROUTINES.default_create */
extern T0* T906c57(TC* ac);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.string_ */
extern T0* T792s2(TC* ac);
/* AP_BOOLEAN_OPTION.true_strings */
extern T0* T58f21(TC* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].force_last */
extern void T225f10(TC* ac, T0* C, T1 a1);
/* DS_LINKABLE [BOOLEAN].put_right */
extern void T1104f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [BOOLEAN].make */
extern T0* T1104c3(TC* ac, T1 a1);
/* AP_ENUMERATION_OPTION.record_occurrence */
extern void T57f33(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].has */
extern T1 T220f15(TC* ac, T0* C, T0* a1);
/* KL_STRING_EQUALITY_TESTER.test */
extern T1 T221f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [detachable STRING_8].force_last */
extern void T218f19(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable STRING_8].force */
extern void T1102s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* DS_ARRAYED_LIST [detachable STRING_8].resize */
extern void T218f20(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable STRING_8].aliased_resized_area */
extern T0* T1102s2(TC* ac, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [detachable STRING_8].new_capacity */
extern T6 T218f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable STRING_8].extendible */
extern T1 T218f11(TC* ac, T0* C, T6 a1);
/* AP_FLAG.record_occurrence */
extern void T46f24(TC* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.record_occurrence */
extern void T54f31(TC* ac, T0* C, T0* a1);
/* AP_ERROR.make_missing_parameter_error */
extern T0* T113c25(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].off */
extern T1 T169f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_off */
extern T1 T169f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].off */
extern T1 T1067f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].before */
extern T1 T1067f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].after */
extern T1 T1067f5(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.needs_parameter */
extern T1 T212f9(TC* ac, T0* C);
/* AP_INTEGER_OPTION.needs_parameter */
extern T1 T59f5(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.needs_parameter */
extern T1 T58f5(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.needs_parameter */
extern T1 T57f6(TC* ac, T0* C);
/* AP_FLAG.needs_parameter */
extern T1 T46f12(TC* ac, T0* C);
/* AP_STRING_OPTION.needs_parameter */
extern T1 T54f6(TC* ac, T0* C);
/* AP_ERROR.make_unknown_option_error */
extern T0* T113c24(TC* ac, T0* a1);
/* AP_DISPLAY_HELP_FLAG.short_form */
extern T2 T212f2(TC* ac, T0* C);
/* AP_INTEGER_OPTION.short_form */
extern T2 T59f7(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.short_form */
extern T2 T58f11(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.short_form */
extern T2 T57f12(TC* ac, T0* C);
/* AP_FLAG.short_form */
extern T2 T46f4(TC* ac, T0* C);
/* AP_STRING_OPTION.short_form */
extern T2 T54f12(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.has_short_form */
extern T1 T212f3(TC* ac, T0* C);
/* AP_INTEGER_OPTION.has_short_form */
extern T1 T59f11(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.has_short_form */
extern T1 T58f10(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.has_short_form */
extern T1 T57f11(TC* ac, T0* C);
/* AP_FLAG.has_short_form */
extern T1 T46f5(TC* ac, T0* C);
/* AP_STRING_OPTION.has_short_form */
extern T1 T54f11(TC* ac, T0* C);
/* AP_PARSER.parse_long */
extern void T52f50(TC* ac, T0* C, T0* a1);
/* AP_ERROR.make_unnecessary_parameter_error */
extern T0* T113c26(TC* ac, T0* a1, T0* a2);
/* AP_DISPLAY_HELP_FLAG.allows_parameter */
extern T1 T212f11(TC* ac, T0* C);
/* AP_INTEGER_OPTION.allows_parameter */
extern T1 T59f18(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.allows_parameter */
extern T1 T58f15(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.allows_parameter */
extern T1 T57f17(TC* ac, T0* C);
/* AP_FLAG.allows_parameter */
extern T1 T46f13(TC* ac, T0* C);
/* AP_STRING_OPTION.allows_parameter */
extern T1 T54f16(TC* ac, T0* C);
/* AP_PARSER.string_ */
extern T0* T52s33(TC* ac);
/* UC_UTF8_STRING.index_of */
extern T6 T1066f30(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.index_of_item_code */
extern T6 T1066f54(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.index_of */
extern T6 T909f24(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_STRING.index_of_item_code */
extern T6 T909f47(TC* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.index_of */
extern T6 T17f41(TC* ac, T0* C, T2 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].forth */
extern void T169f24(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_forth */
extern void T169f30(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].add_traversing_cursor */
extern void T169f33(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].remove_traversing_cursor */
extern void T169f34(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].item_for_iteration */
extern T0* T169f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_item */
extern T0* T169f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].after */
extern T1 T169f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_after */
extern T1 T169f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].start */
extern void T169f23(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_start */
extern void T169f29(TC* ac, T0* C, T0* a1);
/* AP_PARSER.reset_parser */
extern void T52f46(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.reset */
extern void T212f25(TC* ac, T0* C);
/* AP_INTEGER_OPTION.reset */
extern void T59f28(TC* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].make */
extern T0* T228c8(TC* ac);
/* DS_LINKED_LIST [INTEGER_32].set_internal_cursor */
extern void T228f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [INTEGER_32].new_cursor */
extern T0* T228f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [INTEGER_32].make */
extern T0* T1107c3(TC* ac, T0* a1);
/* AP_BOOLEAN_OPTION.reset */
extern void T58f31(TC* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].make */
extern T0* T225c8(TC* ac);
/* DS_LINKED_LIST [BOOLEAN].set_internal_cursor */
extern void T225f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [BOOLEAN].new_cursor */
extern T0* T225f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [BOOLEAN].make */
extern T0* T1105c3(TC* ac, T0* a1);
/* AP_ENUMERATION_OPTION.reset */
extern void T57f31(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].make */
extern T0* T218c13(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable STRING_8].set_internal_cursor */
extern void T218f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable STRING_8].new_cursor */
extern T0* T218f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].make */
extern T0* T219c9(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable STRING_8].make */
extern T0* T1102s1(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable STRING_8].default_create */
extern T0* T1102c3(TC* ac);
/* AP_FLAG.reset */
extern void T46f22(TC* ac, T0* C);
/* AP_STRING_OPTION.reset */
extern void T54f30(TC* ac, T0* C);
/* AP_ERROR_HANDLER.reset */
extern void T215f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].make_from_array */
extern T0* T169c22(TC* ac, T0* a1);
/* ARRAY [STRING_8].count */
extern T6 T34f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].force_last */
extern void T214f15(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].force */
extern void T1100s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].fill_with */
extern void T1099f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].extend */
extern void T1099f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern void T214f19(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T1100s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T1099f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_capacity */
extern T6 T214f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].extendible */
extern T1 T214f10(TC* ac, T0* C, T6 a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.make */
extern T0* T53c13(TC* ac, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.old_make */
extern void T53f17(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_internal_cursor */
extern void T53f18(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.new_cursor */
extern T0* T53f7(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].make */
extern T0* T217c7(TC* ac, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_parameters_description */
extern void T53f16(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_introduction_option */
extern void T53f15(TC* ac, T0* C, T0* a1);
/* AP_FLAG.set_description */
extern void T46f18(TC* ac, T0* C, T0* a1);
/* AP_FLAG.make */
extern T0* T46c19(TC* ac, T2 a1, T0* a2);
/* AP_FLAG.set_long_form */
extern void T46f21(TC* ac, T0* C, T0* a1);
/* AP_FLAG.set_short_form */
extern void T46f23(TC* ac, T0* C, T2 a1);
/* AP_FLAG.initialize */
extern void T46f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].force_last */
extern void T213f18(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].force */
extern void T1097s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [AP_OPTION].fill_with */
extern void T1096f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].extend */
extern void T1096f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].resize */
extern void T213f22(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].aliased_resized_area */
extern T0* T1097s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [AP_OPTION].aliased_resized_area */
extern T0* T1096f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_capacity */
extern T6 T213f14(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].extendible */
extern T1 T213f13(TC* ac, T0* C, T6 a1);
/* AP_INTEGER_OPTION.set_parameter_description */
extern void T59f25(TC* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.set_description */
extern void T59f24(TC* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.make_with_long_form */
extern T0* T59c23(TC* ac, T0* a1);
/* AP_INTEGER_OPTION.set_long_form */
extern void T59f27(TC* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.initialize */
extern void T59f26(TC* ac, T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T59f26p1(TC* ac, T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T59f26p0(TC* ac, T0* C);
/* AP_PARSER.set_parameters_description */
extern void T52f43(TC* ac, T0* C, T0* a1);
/* AP_PARSER.set_application_description */
extern void T52f42(TC* ac, T0* C, T0* a1);
/* AP_PARSER.make */
extern T0* T52c41(TC* ac);
/* AP_DISPLAY_HELP_FLAG.set_description */
extern void T212f21(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.make */
extern T0* T212c20(TC* ac, T2 a1, T0* a2);
/* AP_DISPLAY_HELP_FLAG.set_long_form */
extern void T212f24(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.set_short_form */
extern void T212f23(TC* ac, T0* C, T2 a1);
/* AP_DISPLAY_HELP_FLAG.initialize */
extern void T212f22(TC* ac, T0* C);
/* AP_PARSER.make */
extern void T52f41p1(TC* ac, T0* C);
/* AP_ERROR_HANDLER.make_standard */
extern T0* T215c7(TC* ac);
/* KL_STANDARD_FILES.output */
extern T0* T38s2(TC* ac);
/* KL_STDOUT_FILE.make */
extern T0* T161c5(TC* ac);
/* AP_ERROR_HANDLER.std */
extern T0* T215s5(TC* ac);
/* KL_STANDARD_FILES.default_create */
extern T0* T38c4(TC* ac);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T214c14(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].set_internal_cursor */
extern void T214f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_cursor */
extern T0* T214f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T1098c8(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T1100s1(TC* ac, T6 a1);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make_empty */
extern T0* T1099c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].default_create */
extern T0* T1100c3(TC* ac);
/* GECC.ise_variables */
extern T0* T118s7(TC* ac);
/* UT_ISE_VARIABLES.default_create */
extern T0* T45c17(TC* ac);
/* GECC.gobo_variables */
extern T0* T118s6(TC* ac);
/* UT_GOBO_VARIABLES.default_create */
extern T0* T44c15(TC* ac);
/* GECC.arguments */
extern T0* T118s9(TC* ac);
/* UT_ERROR_HANDLER.make_standard */
extern T0* T160c7(TC* ac);
/* UT_ERROR_HANDLER.std */
extern T0* T160s4(TC* ac);
/* INTEGER_32.out */
extern T0* T6f7(TC* ac, volatile T6* C);
/* STRING_8.append_integer */
extern void T17f51(TC* ac, T0* C, T6 a1);
/* UT_GOBO_VARIABLES.executable_pathname */
extern T0* T44s2(TC* ac, T0* a1);
/* UT_GOBO_VARIABLES.gobo_value */
extern T0* T44s1(TC* ac);
/* KL_EXECUTION_ENVIRONMENT.variable_value */
extern T0* T49s3(TC* ac, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.string_ */
extern T0* T49s7(TC* ac);
/* KL_EXECUTION_ENVIRONMENT.environment_impl */
extern T0* T49s6(TC* ac);
/* UT_GOBO_VARIABLES.execution_environment */
extern T0* T44s4(TC* ac);
/* KL_EXECUTION_ENVIRONMENT.default_create */
extern T0* T49c18(TC* ac);
/* KL_UNIX_FILE_SYSTEM.file_exists */
extern T1 T152s10(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.file_exists */
extern T1 T151s10(TC* ac, T0* a1);
/* KL_UNIX_FILE_SYSTEM.dirname */
extern T0* T152s4(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.dirname */
extern T0* T151s4(TC* ac, T0* a1);
/* KL_UNIX_FILE_SYSTEM.extension */
extern T0* T152s9(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.extension */
extern T0* T151s9(TC* ac, T0* a1);
/* UT_GOBO_VARIABLES.file_system */
extern T0* T44s6(TC* ac);
/* UT_GOBO_VARIABLES.unix_file_system */
extern T0* T44s10(TC* ac);
/* UT_GOBO_VARIABLES.windows_file_system */
extern T0* T44s9(TC* ac);
/* UT_GOBO_VARIABLES.operating_system */
extern T0* T44s8(TC* ac);
/* KL_EXECUTION_ENVIRONMENT.current_executable_pathname */
extern T0* T49s1(TC* ac);
/* STRING_8.make_from_c */
extern T0* T17c59(TC* ac, T14 a1);
/* C_STRING.read_substring_into_character_8_area */
extern void T31f13(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* MANAGED_POINTER.read_into_special_character_8 */
extern void T162f15(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_8].item_address */
extern T14 T15f8(TC* ac, T0* C, T6 a1);
/* C_STRING.set_shared_from_pointer */
extern void T31f12(TC* ac, T0* C, T14 a1);
/* C_STRING.set_shared_from_pointer_and_count */
extern void T31f16(TC* ac, T0* C, T14 a1, T6 a2);
/* MANAGED_POINTER.set_from_pointer */
extern void T162f17(TC* ac, T0* C, T14 a1, T6 a2);
/* C_STRING.c_strlen */
extern T6 T31s5(TC* ac, T14 a1);
/* STRING_8.c_string_provider */
extern T0* T17f35(TC* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.eif_current_executable_pathname_ptr */
extern T6 T49s4(TC* ac, T14 a1, T6 a2);
/* GEC.c_compile_using_gecc */
extern T1 T26f67(TC* ac, T0* C);
/* GEC.string_ */
extern T0* T26s56(TC* ac);
/* AP_ENUMERATION_OPTION.parameter */
extern T0* T57f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].last */
extern T0* T218f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].is_empty */
extern T1 T218f8(TC* ac, T0* C);
/* KL_SHELL_COMMAND.execute */
extern void T117f11(TC* ac, T0* C);
/* KL_SHELL_COMMAND.operating_system */
extern T0* T117s5(TC* ac);
/* KL_SHELL_COMMAND.system */
extern void T117f12(TC* ac, T0* C, T0* a1);
/* KL_SHELL_COMMAND.system_call */
extern T6 T117s7(TC* ac, T14 a1);
/* KL_SHELL_COMMAND.default_shell */
extern T0* T117s6(TC* ac);
/* KL_SHELL_COMMAND.item */
extern T0* T117s8(TC* ac, T0* a1);
/* KL_SHELL_COMMAND.eif_getenv */
extern T14 T117s9(TC* ac, T14 a1);
/* KL_SHELL_COMMAND.make */
extern T0* T117c10(TC* ac, T0* a1);
/* KL_UNIX_FILE_SYSTEM.absolute_pathname */
extern T0* T152f5(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.cwd */
extern T0* T152f24(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.execution_environment */
extern T0* T152s31(TC* ac);
/* KL_UNIX_FILE_SYSTEM.is_absolute_pathname */
extern T1 T152s23(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.absolute_pathname */
extern T0* T151f5(TC* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.concat */
extern T0* T108s18(TC* ac, T0* a1, T0* a2);
/* STRING_32.plus */
extern T0* T18f17(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.as_string_32 */
extern T0* T1066f22(TC* ac, T0* C);
/* STRING_32.as_string_32 */
extern T0* T18f16(TC* ac, T0* C);
/* UC_STRING.as_string_32 */
extern T0* T909f64(TC* ac, T0* C);
/* STRING_8.as_string_32 */
extern T0* T17f44(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.current_drive */
extern T0* T151f26(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.cwd */
extern T0* T151f25(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.execution_environment */
extern T0* T151s34(TC* ac);
/* KL_WINDOWS_FILE_SYSTEM.is_relative_pathname */
extern T1 T151s18(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_absolute_pathname */
extern T1 T151s24(TC* ac, T0* a1);
/* GEC.c_compile_using_script */
extern T1 T26f66(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.cd */
extern void T152f36(TC* ac, T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.change_working_path */
extern void T105f14(TC* ac, T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.eif_chdir */
extern T6 T105s9(TC* ac, T14 a1);
/* PATH.to_pointer */
extern T0* T1014f14(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.cd */
extern void T151f39(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.plus */
extern T0* T1066f12(TC* ac, T0* C, T0* a1);
/* UC_STRING.plus */
extern T0* T909f20(TC* ac, T0* C, T0* a1);
/* STRING_8.plus */
extern T0* T17f5(TC* ac, T0* C, T0* a1);
/* KL_OPERATING_SYSTEM.is_windows */
extern T1 T119s1(TC* ac);
/* GEC.operating_system */
extern T0* T26s64(TC* ac);
/* ET_CLASS.lower_name */
extern T0* T70f145(TC* ac, T0* C);
/* ET_IDENTIFIER.lower_name */
extern T0* T303f27(TC* ac, T0* C);
/* UC_UTF8_STRING.as_lower */
extern T0* T1066f11(TC* ac, T0* C);
/* UC_UTF8_STRING.to_lower */
extern void T1066f90(TC* ac, T0* C);
/* UC_UTF8_STRING.unicode */
extern T0* T1066s64(TC* ac);
/* UC_STRING.as_lower */
extern T0* T909f19(TC* ac, T0* C);
/* UC_STRING.to_lower */
extern void T909f90(TC* ac, T0* C);
/* UC_STRING.unicode */
extern T0* T909s62(TC* ac);
/* STRING_8.as_lower */
extern T0* T17f38(TC* ac, T0* C);
/* STRING_8.to_lower */
extern void T17f79(TC* ac, T0* C);
/* STRING_8.to_lower_area */
extern void T17f82(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* CHARACTER_8.lower */
extern T2 T2f24(TC* ac, volatile T2* C);
/* ET_CLASS_TYPE.base_class */
extern T0* T102f11(TC* ac, T0* C);
/* ET_CLASS.actual_class */
extern T0* T70f66(TC* ac, T0* C);
/* ET_MASTER_CLASS.actual_class */
extern T0* T188f26(TC* ac, T0* C);
/* GEC.no_c_compile */
extern T1 T26f54(TC* ac, T0* C);
/* GEC.compile_degree_minus_3 */
extern void T26f88(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.dynamic_feature_count */
extern T6 T95f74(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.procedures */
extern T0* T1049f18(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.procedures */
extern T0* T1048f18(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.procedures */
extern T0* T894f14(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.procedures */
extern T0* T966f14(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.procedures */
extern T0* T838f13(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.queries */
extern T0* T1049f6(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.queries */
extern T0* T1048f6(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.queries */
extern T0* T894f6(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.queries */
extern T0* T966f6(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.queries */
extern T0* T838f3(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].item */
extern T0* T116f9(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.alive_dynamic_type_count */
extern T6 T95f76(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_alive */
extern T1 T1049f4(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_alive */
extern T1 T1048f4(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_alive */
extern T1 T894f4(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_alive */
extern T1 T966f4(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_alive */
extern T1 T838f1(TC* ac, T0* C);
/* KL_STDOUT_FILE.put_integer */
extern void T161f7(TC* ac, T0* C, T6 a1);
/* KL_STDOUT_FILE.put_integer_64 */
extern void T161f11(TC* ac, T0* C, T7 a1);
/* KL_STDOUT_FILE.put_character */
extern void T161f10(TC* ac, T0* C, T2 a1);
/* CONSOLE.put_character */
extern void T1644f24(TC* ac, T0* C, T2 a1);
/* CONSOLE.console_pc */
extern void T1644s30(TC* ac, T14 a1, T2 a2);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer */
extern void T229f6(TC* ac, T0* C, T6 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_64 */
extern void T229f10(TC* ac, T0* C, T7 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_character */
extern void T229f8(TC* ac, T0* C, T2 a1);
/* ET_C_GENERATOR.generate */
extern void T114f659(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].wipe_out */
extern void T827f52(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_wipe_out */
extern void T827f69(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_wipe_out */
extern void T827f68(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_wipe_out */
extern void T827f67(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_wipe_out */
extern void T827f66(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].unset_found_item */
extern void T827f58(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_all_cursors_after */
extern void T827f65(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_next_cursor */
extern void T951f15(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_after */
extern void T951f14(TC* ac, T0* C);
/* ET_C_GENERATOR.generate_compilation_script */
extern void T114f666(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.report_cannot_write_error */
extern void T114f669(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error */
extern void T63f194(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T63f198(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.set_has_error */
extern void T63f200(TC* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T63f198p1(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.message */
extern T0* T63f11(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.default_message */
extern T0* T2153f12(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.message */
extern T0* T2153f7(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.arguments */
extern T0* T2153s6(TC* ac);
/* ET_DOTNET_ASSEMBLY_ERROR.string_ */
extern T0* T2153s9(TC* ac);
/* ET_UNIVERSE_ERROR.default_message */
extern T0* T2152f12(TC* ac, T0* C);
/* ET_UNIVERSE_ERROR.message */
extern T0* T2152f7(TC* ac, T0* C, T0* a1);
/* ET_UNIVERSE_ERROR.arguments */
extern T0* T2152s6(TC* ac);
/* ET_UNIVERSE_ERROR.string_ */
extern T0* T2152s9(TC* ac);
/* ET_CLUSTER_ERROR.default_message */
extern T0* T2006f12(TC* ac, T0* C);
/* ET_CLUSTER_ERROR.message */
extern T0* T2006f7(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_ERROR.arguments */
extern T0* T2006s6(TC* ac);
/* ET_CLUSTER_ERROR.string_ */
extern T0* T2006s9(TC* ac);
/* UT_TOO_MANY_INCLUDES_ERROR.default_message */
extern T0* T1655f5(TC* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.message */
extern T0* T1655f3(TC* ac, T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.arguments */
extern T0* T1655s6(TC* ac);
/* UT_TOO_MANY_INCLUDES_ERROR.string_ */
extern T0* T1655s4(TC* ac);
/* ET_VALIDITY_ERROR.default_message */
extern T0* T1445f44(TC* ac, T0* C);
/* ET_VALIDITY_ERROR.message */
extern T0* T1445f15(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.arguments */
extern T0* T1445s12(TC* ac);
/* ET_VALIDITY_ERROR.string_ */
extern T0* T1445s43(TC* ac);
/* ET_INTERNAL_ERROR.default_message */
extern T0* T1443f5(TC* ac, T0* C);
/* ET_INTERNAL_ERROR.message */
extern T0* T1443f7(TC* ac, T0* C, T0* a1);
/* ET_INTERNAL_ERROR.arguments */
extern T0* T1443s6(TC* ac);
/* ET_INTERNAL_ERROR.string_ */
extern T0* T1443s9(TC* ac);
/* ET_SYSTEM_ERROR.default_message */
extern T0* T1442f5(TC* ac, T0* C);
/* ET_SYSTEM_ERROR.message */
extern T0* T1442f7(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.arguments */
extern T0* T1442s6(TC* ac);
/* ET_SYSTEM_ERROR.string_ */
extern T0* T1442s9(TC* ac);
/* ET_SYNTAX_ERROR.default_message */
extern T0* T1444f11(TC* ac, T0* C);
/* ET_SYNTAX_ERROR.message */
extern T0* T1444f14(TC* ac, T0* C, T0* a1);
/* ET_SYNTAX_ERROR.arguments */
extern T0* T1444s12(TC* ac);
/* ET_SYNTAX_ERROR.string_ */
extern T0* T1444s16(TC* ac);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.default_message */
extern T0* T953f5(TC* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.message */
extern T0* T953f3(TC* ac, T0* C, T0* a1);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.arguments */
extern T0* T953s6(TC* ac);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.string_ */
extern T0* T953s4(TC* ac);
/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR.default_message */
extern T0* T952f5(TC* ac, T0* C);
/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR.message */
extern T0* T952f3(TC* ac, T0* C, T0* a1);
/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR.arguments */
extern T0* T952s6(TC* ac);
/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR.string_ */
extern T0* T952s4(TC* ac);
/* UT_MESSAGE.default_message */
extern T0* T106f3(TC* ac, T0* C);
/* UT_MESSAGE.message */
extern T0* T106f5(TC* ac, T0* C, T0* a1);
/* UT_MESSAGE.arguments */
extern T0* T106s7(TC* ac);
/* UT_MESSAGE.string_ */
extern T0* T106s6(TC* ac);
/* ET_ERROR_HANDLER.report_error */
extern void T42f194(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T42f198(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_error */
extern void T42f200(TC* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T42f198p1(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.message */
extern T0* T42f11(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.error_handler */
extern T0* T114f190(TC* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.make */
extern T0* T953c8(TC* ac, T0* a1);
/* ET_C_GENERATOR.set_fatal_error */
extern void T114f667(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.change_mode */
extern void T950f41(TC* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.old_change_mode */
extern void T950f50(TC* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.file_chmod */
extern void T950s57(TC* ac, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.internal_name_pointer */
extern T0* T950f23(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_exists */
extern T1 T950f17(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_exists */
extern T1 T950s31(TC* ac, T14 a1);
/* KL_TEXT_OUTPUT_FILE.old_is_closed */
extern T1 T950f21(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.string_name */
extern T0* T950f16(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.close */
extern void T950f39(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_close */
extern void T950f45(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.default_pointer */
extern T14 T950s19(TC* ac);
/* KL_TEXT_OUTPUT_FILE.file_close */
extern void T950s53(TC* ac, T14 a1);
/* UC_UTF8_STRING.remove_tail */
extern void T1066f75(TC* ac, T0* C, T6 a1);
/* UC_STRING.remove_tail */
extern void T909f80(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].back */
extern void T951f13(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_back */
extern void T949f79(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.add_traversing_cursor */
extern void T949f81(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_position */
extern void T951f16(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.remove_traversing_cursor */
extern void T949f80(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_before */
extern void T951f17(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.clashes_item */
extern T6 T949f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_back */
extern void T827f85(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].add_traversing_cursor */
extern void T827f78(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove_traversing_cursor */
extern void T827f77(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_item */
extern T6 T827f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].item */
extern T0* T951f8(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_item */
extern T0* T949f50(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.item_storage_item */
extern T0* T949f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_item */
extern T0* T827f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_item */
extern T0* T827f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].key */
extern T0* T951f6(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_key */
extern T0* T949f51(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.key_storage_item */
extern T0* T949f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_key */
extern T0* T827f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_item */
extern T0* T827f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].before */
extern T1 T951f5(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].finish */
extern void T951f12(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_finish */
extern void T949f78(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.cursor_off */
extern T1 T949f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].off */
extern T1 T951f10(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.is_empty */
extern T1 T949f52(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_finish */
extern void T827f84(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_off */
extern T1 T827f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].is_empty */
extern T1 T827f29(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_cursor */
extern T0* T827f22(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].make */
extern T0* T951c11(TC* ac, T0* a1);
/* DS_STRING_HASH_TABLE.item */
extern T0* T949f23(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.search_position */
extern void T949f60(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.hash_position */
extern T6 T949f26(TC* ac, T0* C, T0* a1);
/* KL_EQUALITY_TESTER [STRING_8].test */
extern T1 T222f1(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T222f1e1(TC* ac, T0* a1, T0* a2);
/* UC_UTF8_STRING.is_equal */
extern T1 T1066f46(TC* ac, T0* C, T0* a1);
/* UC_STRING.is_equal */
extern T1 T909f23(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.slots_item */
extern T6 T949f24(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.value */
extern T0* T949f25(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.position_of_key */
extern T6 T949f21(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.expanded_string */
extern T0* T949f43(TC* ac, T0* C, T0* a1, T1 a2);
/* DS_STRING_HASH_TABLE.string_ */
extern T0* T949s29(TC* ac);
/* UC_UTF8_STRING.starts_with */
extern T1 T1066f29(TC* ac, T0* C, T0* a1);
/* UC_STRING.starts_with */
extern T1 T909f15(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.replace_all */
extern T0* T107f186(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replace_all_to_string */
extern void T107f343(TC* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_unbounded_substring */
extern void T107f347(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_substring */
extern void T107f322(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_it */
extern void T107f336(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_start */
extern T1 T107f149(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_internal */
extern T6 T107f236(TC* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_type */
extern T6 T107f303(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.match_not_repeated_characters */
extern T6 T107f302(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.infinity */
extern T6 T107f57(TC* ac, T0* C);
/* KL_PLATFORM.maximum_integer */
extern T6 T1051s1(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.platform */
extern T0* T107s187(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_characters */
extern T6 T107f301(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_BYTE_CODE.character_item */
extern T10 T902f8(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_classes */
extern T6 T107f300(TC* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.character_set_has */
extern T1 T902f5(TC* ac, T0* C, T6 a1, T10 a2);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].item */
extern T0* T1340f9(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_refs */
extern T6 T107f299(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_ref */
extern T6 T107f305(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.space_set */
extern T0* T107s150(TC* ac);
/* RX_CHARACTER_SET.make */
extern T0* T903c16(TC* ac, T0* a1);
/* RX_CHARACTER_SET.add_string */
extern void T903f17(TC* ac, T0* C, T0* a1);
/* RX_CHARACTER_SET.add_character */
extern void T903f14(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].force */
extern void T1343f60(TC* ac, T0* C, T11 a1, T10 a2);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_storage_put */
extern void T1343f78(TC* ac, T0* C, T10 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [NATURAL_32].force */
extern void T1341s6(TC* ac, T0* a1, T10 a2, T6 a3);
/* SPECIAL [NATURAL_32].fill_with */
extern void T1339f10(TC* ac, T0* C, T10 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_32].extend */
extern void T1339f11(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].slots_put */
extern void T1343f77(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clashes_put */
extern void T1343f76(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].slots_item */
extern T6 T1343f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clashes_item */
extern T6 T1343f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].hash_position */
extern T6 T1343f28(TC* ac, T0* C, T10 a1);
/* NATURAL_32.hash_code */
extern T6 T10f29(TC* ac, volatile T10* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].resize */
extern void T1343f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clashes_resize */
extern void T1343f93(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].special_integer_ */
extern T0* T1343s49(TC* ac);
/* KL_SPECIAL_ROUTINES [INTEGER_32].default_create */
extern T0* T263c6(TC* ac);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_storage_resize */
extern void T1343f92(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_32].aliased_resized_area */
extern T0* T1341s4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [NATURAL_32].aliased_resized_area */
extern T0* T1339f6(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_storage_resize */
extern void T1343f91(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_64].aliased_resized_area */
extern T0* T1785s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [NATURAL_64].aliased_resized_area */
extern T0* T1342f5(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_storage_item */
extern T10 T1343f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].slots_resize */
extern void T1343f90(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].new_modulus */
extern T6 T1343f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].new_capacity */
extern T6 T1343f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_storage_put */
extern void T1343f65(TC* ac, T0* C, T11 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [NATURAL_64].force */
extern void T1785s4(TC* ac, T0* a1, T11 a2, T6 a3);
/* SPECIAL [NATURAL_64].fill_with */
extern void T1342f12(TC* ac, T0* C, T11 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].search_position */
extern void T1343f61(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].unset_found_item */
extern void T1343f64(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].value */
extern T11 T1343f34(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_storage_item */
extern T11 T1343f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].position_of_key */
extern T6 T1343f22(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].has */
extern T1 T1343f33(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_map */
extern T0* T1343c50(TC* ac, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_with_equality_testers */
extern void T1343f62(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_sparse_container */
extern void T1343f83(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].set_internal_cursor */
extern void T1343f69(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].new_cursor */
extern T0* T1343f39(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].make */
extern T0* T1344c10(TC* ac, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_slots */
extern void T1343f97(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_clashes */
extern void T1343f96(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_key_storage */
extern void T1343f95(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_32].make */
extern T0* T1341s1(TC* ac, T6 a1);
/* SPECIAL [NATURAL_32].make_empty */
extern void T1339f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_32].make_empty */
extern T0* T1339c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_32].default_create */
extern T0* T1341c5(TC* ac);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_item_storage */
extern void T1343f94(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_64].make */
extern T0* T1785s2(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_64].default_create */
extern T0* T1785c3(TC* ac);
/* RX_CHARACTER_SET.masks */
extern T0* T903f9(TC* ac, T0* C);
/* SPECIAL [NATURAL_64].make_filled */
extern T0* T1342c9(TC* ac, T11 a1, T6 a2);
/* RX_CHARACTER_SET.make_empty */
extern void T903f11(TC* ac, T0* C);
/* RX_CHARACTER_SET.make_empty */
extern T0* T903c11(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.digit_set */
extern T0* T107s165(TC* ac);
/* RX_CHARACTER_SET.has */
extern T1 T903f10(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item */
extern T11 T1343f36(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ims_options */
extern void T107f334(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_dotall */
extern T1 T107s81(TC* ac, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_multiline */
extern T1 T107s80(TC* ac, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_caseless */
extern T1 T107s79(TC* ac, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_match_count */
extern void T107f345(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_next_start */
extern void T107f344(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_recursive */
extern T6 T107f298(TC* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* RX_BYTE_CODE.integer_item */
extern T10 T902f6(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.next_matching_alternate */
extern T6 T107f296(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_additional_bracket */
extern T6 T107f277(TC* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.opcode_item */
extern T10 T902f7(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].aliased_resized_area_with_default */
extern T0* T263s4(TC* ac, T0* a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].aliased_resized_area_with_default */
extern T0* T154f5(TC* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.special_integer_ */
extern T0* T107s232(TC* ac);
/* RX_CASE_MAPPING.flip_case */
extern T10 T904f4(TC* ac, T0* C, T10 a1);
/* NATURAL_32.to_integer_64 */
extern T7 T10f15(TC* ac, volatile T10* C);
/* RX_CASE_MAPPING.to_lower */
extern T10 T904f3(TC* ac, T0* C, T10 a1);
/* INTEGER_64.to_natural_32 */
extern T10 T7f6(TC* ac, volatile T7* C);
/* INTEGER_64.is_greater_equal */
extern T1 T7f5(TC* ac, volatile T7* C, T7 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_subject */
extern void T107f340(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replacement_to_string */
extern void T107f346(TC* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.append_captured_substring_to_string */
extern void T107f348(TC* ac, T0* C, T0* a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_end_position */
extern T6 T107f70(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_start_position */
extern T6 T107f67(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_matched */
extern T1 T107f56(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.string_ */
extern T0* T107s249(TC* ac);
/* ET_C_GENERATOR.execution_environment */
extern T0* T114s334(TC* ac);
/* ET_C_GENERATOR.string_ */
extern T0* T114s269(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.match */
extern void T107f311(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].item */
extern T0* T169f19(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.found_item */
extern T0* T949f22(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.found */
extern T1 T949f49(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.search */
extern void T949f57(TC* ac, T0* C, T0* a1);
/* UT_ISE_VARIABLES.ise_platform_value */
extern T0* T45s7(TC* ac);
/* UT_ISE_VARIABLES.execution_environment */
extern T0* T45s3(TC* ac);
/* ET_C_GENERATOR.ise_variables */
extern T0* T114s186(TC* ac);
/* UT_GOBO_VARIABLES.boehm_gc_value */
extern T0* T44s3(TC* ac);
/* UT_GOBO_VARIABLES.zig_value */
extern T0* T44s13(TC* ac);
/* DS_STRING_HASH_TABLE.force */
extern void T949f55(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_STRING_HASH_TABLE.key_storage_put */
extern void T949f67(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_STRING_HASH_TABLE.slots_put */
extern void T949f66(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_STRING_HASH_TABLE.clashes_put */
extern void T949f65(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_STRING_HASH_TABLE.resize */
extern void T949f64(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.clashes_resize */
extern void T949f72(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.special_integer_ */
extern T0* T949s48(TC* ac);
/* DS_STRING_HASH_TABLE.key_storage_resize */
extern void T949f71(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.item_storage_resize */
extern void T949f70(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.slots_resize */
extern void T949f69(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.new_modulus */
extern T6 T949f45(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.new_capacity */
extern T6 T949f35(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.item_storage_put */
extern void T949f63(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_STRING_HASH_TABLE.unset_found_item */
extern void T949f62(TC* ac, T0* C);
/* ET_C_GENERATOR.gobo_variables */
extern T0* T114s197(TC* ac);
/* DS_STRING_HASH_TABLE.make */
extern T0* T949c54(TC* ac, T6 a1);
/* DS_STRING_HASH_TABLE.make_with_equality_testers */
extern void T949f61(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_STRING_HASH_TABLE.make_sparse_container */
extern void T949f68(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.set_internal_cursor */
extern void T949f77(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.new_cursor */
extern T0* T949f47(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.make_slots */
extern void T949f76(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.make_clashes */
extern void T949f75(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.make_key_storage */
extern void T949f74(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.make_item_storage */
extern void T949f73(TC* ac, T0* C, T6 a1);
/* KL_EQUALITY_TESTER [STRING_8].default_create */
extern T0* T222c2(TC* ac);
/* KL_TEXT_OUTPUT_FILE.put_line */
extern void T950f35(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_new_line */
extern void T950f36(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.put_string */
extern void T950f37(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_put_string */
extern void T950f47(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.file_ps */
extern void T950s55(TC* ac, T14 a1, T14 a2, T6 a3);
/* KL_TEXT_OUTPUT_FILE.string_ */
extern T0* T950s12(TC* ac);
/* KL_TEXT_OUTPUT_FILE.is_open_write */
extern T1 T950f22(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_open_write */
extern T1 T950f20(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.recursive_open_write */
extern void T950f34(TC* ac, T0* C);
/* KL_DIRECTORY.recursive_create_directory */
extern void T954f42(TC* ac, T0* C);
/* KL_DIRECTORY.string_ */
extern T0* T954s15(TC* ac);
/* KL_DIRECTORY.file_system */
extern T0* T954s22(TC* ac);
/* KL_DIRECTORY.unix_file_system */
extern T0* T954s35(TC* ac);
/* KL_DIRECTORY.windows_file_system */
extern T0* T954s34(TC* ac);
/* KL_DIRECTORY.operating_system */
extern T0* T954s33(TC* ac);
/* KL_DIRECTORY.create_directory */
extern void T954f47(TC* ac, T0* C);
/* KL_DIRECTORY.create_dir */
extern void T954f50(TC* ac, T0* C);
/* KL_DIRECTORY.file_mkdir */
extern void T954s52(TC* ac, T14 a1);
/* KL_DIRECTORY.internal_name_pointer */
extern T0* T954f27(TC* ac, T0* C);
/* KL_DIRECTORY.old_exists */
extern T1 T954f17(TC* ac, T0* C);
/* KL_DIRECTORY.eif_dir_exists */
extern T1 T954s29(TC* ac, T14 a1);
/* KL_DIRECTORY.exists */
extern T1 T954f19(TC* ac, T0* C);
/* KL_DIRECTORY.make */
extern void T954f37(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.make */
extern T0* T954c37(TC* ac, T0* a1);
/* KL_DIRECTORY.old_make */
extern void T954f44(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.make_with_name */
extern void T954f49(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.set_name */
extern void T954f51(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.file_info */
extern T0* T954f30(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_system */
extern T0* T950s14(TC* ac);
/* KL_TEXT_OUTPUT_FILE.unix_file_system */
extern T0* T950s30(TC* ac);
/* KL_TEXT_OUTPUT_FILE.windows_file_system */
extern T0* T950s29(TC* ac);
/* KL_TEXT_OUTPUT_FILE.operating_system */
extern T0* T950s28(TC* ac);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T950f40(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.is_closed */
extern T1 T950f18(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_write */
extern void T950f49(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T950f49p1(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_open */
extern T14 T950s24(TC* ac, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.make */
extern T0* T950c33(TC* ac, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_make */
extern void T950f46(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.make_with_name */
extern void T950f46p1(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.set_name */
extern void T950f54(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.buffered_file_info */
extern T0* T950f27(TC* ac, T0* C);
/* ET_C_GENERATOR.file_system */
extern T0* T114s214(TC* ac);
/* ET_C_GENERATOR.unix_file_system */
extern T0* T114s586(TC* ac);
/* ET_C_GENERATOR.windows_file_system */
extern T0* T114s585(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T107f310(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T107f310p1(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_startline */
extern void T107f321(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_startline */
extern T1 T107f147(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.first_significant_code */
extern T10 T107f205(TC* ac, T0* C, T10 a1, T10 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.find_firstchar */
extern T10 T107f78(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_anchored */
extern void T107f320(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.can_anchored */
extern T1 T107f77(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.ims_options */
extern T10 T107f75(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_dotall */
extern T10 T107s129(TC* ac, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_multiline */
extern T10 T107s127(TC* ac, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_caseless */
extern T10 T107s125(TC* ac, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_regexp */
extern void T107f319(TC* ac, T0* C, T10 a1, T1 a2, T1 a3, T7 a4);
/* RX_BYTE_CODE.set_count */
extern void T902f15(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.find_fixed_code_length */
extern T6 T107f62(TC* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.put_integer */
extern void T902f14(TC* ac, T0* C, T10 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_branch */
extern void T107f335(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.meta_set */
extern T0* T107s146(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.maxlit */
extern T6 T107f145(TC* ac, T0* C);
/* RX_BYTE_CODE.append_character */
extern void T902f16(TC* ac, T0* C, T10 a1);
/* RX_BYTE_CODE.put_character */
extern void T902f22(TC* ac, T0* C, T10 a1, T6 a2);
/* RX_BYTE_CODE.resize_byte_code */
extern void T902f21(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_32].aliased_resized_area_with_default */
extern T0* T1341s3(TC* ac, T0* a1, T10 a2, T6 a3);
/* SPECIAL [NATURAL_32].aliased_resized_area_with_default */
extern T0* T1339f4(TC* ac, T0* C, T10 a1, T6 a2);
/* RX_BYTE_CODE.special_natural_32_ */
extern T0* T902s9(TC* ac);
/* INTEGER_64.is_less_equal */
extern T1 T7f10(TC* ac, volatile T7* C, T7 a1);
/* RX_PCRE_REGULAR_EXPRESSION.scan_escape */
extern T7 T107f139(TC* ac, T0* C, T6 a1, T1 a2);
/* RX_PCRE_REGULAR_EXPRESSION.scan_hex_number */
extern T10 T107f223(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.xdigit_set */
extern T0* T107s248(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.scan_octal_number */
extern T10 T107f222(TC* ac, T0* C, T6 a1);
/* INTEGER_64.to_integer_32 */
extern T6 T7f19(TC* ac, volatile T7* C);
/* RX_PCRE_REGULAR_EXPRESSION.escape_character */
extern T7 T107s217(TC* ac, T10 a1);
/* INTEGER_64.is_greater */
extern T1 T7f7(TC* ac, volatile T7* C, T7 a1);
/* RX_PCRE_REGULAR_EXPRESSION.to_option_ims */
extern T10 T107s132(TC* ac, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ichanged */
extern void T107f333(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_dotall */
extern T10 T107s130(TC* ac, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_multiline */
extern T10 T107s128(TC* ac, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_caseless */
extern T10 T107s126(TC* ac, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.scan_decimal_number */
extern T10 T107f107(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_repeats */
extern void T107f339(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T7 a4, T6 a5);
/* RX_BYTE_CODE.append_subcopy */
extern void T902f20(TC* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.put_opcode */
extern void T902f19(TC* ac, T0* C, T10 a1, T6 a2);
/* RX_BYTE_CODE.move_right */
extern void T902f18(TC* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_single_repeat */
extern void T107f341(TC* ac, T0* C, T10 a1, T6 a2, T6 a3, T6 a4, T10 a5, T10 a6);
/* RX_PCRE_REGULAR_EXPRESSION.compile_character_class */
extern void T107f338(TC* ac, T0* C);
/* RX_BYTE_CODE.append_character_set */
extern void T902f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].force_last */
extern void T1340f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_CHARACTER_SET].force */
extern void T1779s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [RX_CHARACTER_SET].fill_with */
extern void T908f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [RX_CHARACTER_SET].extend */
extern void T908f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].resize */
extern void T1340f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [RX_CHARACTER_SET].aliased_resized_area */
extern T0* T1779s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [RX_CHARACTER_SET].aliased_resized_area */
extern T0* T908f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].new_capacity */
extern T6 T1340f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].extendible */
extern T1 T1340f7(TC* ac, T0* C, T6 a1);
/* RX_CHARACTER_SET.set_negated */
extern void T903f15(TC* ac, T0* C, T1 a1);
/* RX_CHARACTER_SET.add_set */
extern void T903f13(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].wipe_out */
extern void T1343f59(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].slots_wipe_out */
extern void T1343f82(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clashes_wipe_out */
extern void T1343f81(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_storage_wipe_out */
extern void T1343f80(TC* ac, T0* C);
/* SPECIAL [NATURAL_32].keep_head */
extern void T1339f12(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_32].set_count */
extern void T1339f14(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_storage_wipe_out */
extern void T1343f79(TC* ac, T0* C);
/* SPECIAL [NATURAL_64].keep_head */
extern void T1342f14(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_64].set_count */
extern void T1342f16(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].move_all_cursors_after */
extern void T1343f67(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].set_next_cursor */
extern void T1344f15(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].set_after */
extern void T1344f13(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].forth */
extern void T1344f11(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_forth */
extern void T1343f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].add_traversing_cursor */
extern void T1343f85(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].set_position */
extern void T1344f14(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].remove_traversing_cursor */
extern void T1343f84(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].force_new */
extern void T1343f58(TC* ac, T0* C, T11 a1, T10 a2);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].replace_found_item */
extern void T1343f57(TC* ac, T0* C, T11 a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].item */
extern T11 T1344f6(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_item */
extern T11 T1343f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].found_item */
extern T11 T1343f32(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].found */
extern T1 T1343f31(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].search */
extern void T1343f56(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].key */
extern T10 T1344f7(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_key */
extern T10 T1343f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].after */
extern T1 T1344f4(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].new_iterator */
extern T0* T1343f23(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].start */
extern void T1344f12(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_start */
extern void T1343f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_off */
extern T1 T1343f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].off */
extern T1 T1344f9(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].forth */
extern void T1343f53(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].remove */
extern void T1343f55(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].remove_position */
extern void T1343f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_storage_keep_head */
extern void T1343f89(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_storage_keep_head */
extern void T1343f88(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].move_cursors_forth */
extern void T1343f87(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].internal_set_key_equality_tester */
extern void T1343f86(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_for_iteration */
extern T10 T1343f30(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].after */
extern T1 T1343f25(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_after */
extern T1 T1343f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].start */
extern void T1343f51(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].copy */
extern void T1343f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].copy */
extern void T1343f54p1(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clone_clashes */
extern void T1343f73(TC* ac, T0* C);
/* SPECIAL [INTEGER_32].resized_area */
extern T0* T154f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].copy_data */
extern void T154f17(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clone_slots */
extern void T1343f72(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clone_key_storage */
extern void T1343f71(TC* ac, T0* C);
/* SPECIAL [NATURAL_32].resized_area */
extern T0* T1339f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_32].copy_data */
extern void T1339f13(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [NATURAL_32].force */
extern void T1339f16(TC* ac, T0* C, T10 a1, T6 a2);
/* SPECIAL [NATURAL_32].move_data */
extern void T1339f15(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_32].overlapping_move */
extern void T1339f18(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_32].non_overlapping_move */
extern void T1339f17(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clone_item_storage */
extern void T1343f70(TC* ac, T0* C);
/* SPECIAL [NATURAL_64].resized_area */
extern T0* T1342f4(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_64].copy_data */
extern void T1342f15(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [NATURAL_64].force */
extern void T1342f18(TC* ac, T0* C, T11 a1, T6 a2);
/* SPECIAL [NATURAL_64].move_data */
extern void T1342f17(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_64].overlapping_move */
extern void T1342f20(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_64].non_overlapping_move */
extern void T1342f19(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].valid_cursor */
extern T1 T1343f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].twin */
extern T0* T1343f48(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].is_empty */
extern T1 T1343f41(TC* ac, T0* C);
/* RX_CHARACTER_SET.add_negated_set */
extern void T903f12(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].replace */
extern void T1343f52(TC* ac, T0* C, T11 a1, T10 a2);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_for_iteration */
extern T11 T1343f27(TC* ac, T0* C);
/* ARRAY [RX_CHARACTER_SET].item */
extern T0* T907f4(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.class_sets */
extern T0* T107s157(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.default_word_set */
extern T0* T107s55(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.punct_set */
extern T0* T107s247(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.print_set */
extern T0* T107s246(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.graph_set */
extern T0* T107s245(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.cntrl_set */
extern T0* T107s244(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.ascii_set */
extern T0* T107s243(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.alnum_set */
extern T0* T107s242(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.upper_set */
extern T0* T107s241(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.lower_set */
extern T0* T107s240(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.alpha_set */
extern T0* T107s238(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_name */
extern T6 T107f155(TC* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.class_names */
extern T0* T107s239(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_syntax */
extern T6 T107f153(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_counted_repeats */
extern T1 T107f83(TC* ac, T0* C, T6 a1, T7 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.scan_comment */
extern void T107f337(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_undef */
extern T1 T107s59(TC* ac, T10 a1);
/* RX_BYTE_CODE.append_integer */
extern void T902f13(TC* ac, T0* C, T10 a1);
/* RX_BYTE_CODE.append_opcode */
extern void T902f12(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_error */
extern void T107f318(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_internal_options */
extern void T107f317(TC* ac, T0* C);
/* RX_BYTE_CODE.wipe_out */
extern void T902f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].wipe_out */
extern void T1340f11(TC* ac, T0* C);
/* SPECIAL [RX_CHARACTER_SET].keep_head */
extern void T908f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [RX_CHARACTER_SET].set_count */
extern void T908f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].move_all_cursors_after */
extern void T1340f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET].set_next_cursor */
extern void T1780f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET].set_after */
extern void T1780f6(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T107f316(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T107f316p1(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern T0* T107c309(TC* ac);
/* KL_SPECIAL_ROUTINES [INTEGER_32].make_filled */
extern T0* T263s5(TC* ac, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern void T107f309p1(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_options */
extern void T107f315(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_strict */
extern void T107f332(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_greedy */
extern void T107f331(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_eol */
extern void T107f330(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_bol */
extern void T107f329(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dollar_endonly */
extern void T107f328(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_empty_allowed */
extern void T107f327(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_extended */
extern void T107f326(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dotall */
extern void T107f325(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_multiline */
extern void T107f324(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_caseless */
extern void T107f323(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_word_set */
extern void T107f314(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_character_case_mapping */
extern void T107f313(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.default_character_case_mapping */
extern T0* T107s235(TC* ac);
/* RX_CASE_MAPPING.make */
extern T0* T904c6(TC* ac, T0* a1, T0* a2);
/* RX_CASE_MAPPING.add */
extern void T904f8(TC* ac, T0* C, T0* a1, T0* a2);
/* RX_CASE_MAPPING.make_default */
extern void T904f7(TC* ac, T0* C);
/* RX_CASE_MAPPING.clear */
extern void T904f9(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [NATURAL_32].make_filled */
extern T0* T1341s2(TC* ac, T10 a1, T6 a2);
/* SPECIAL [NATURAL_32].make_filled */
extern T0* T1339c7(TC* ac, T10 a1, T6 a2);
/* RX_CASE_MAPPING.special_natural_32_ */
extern T0* T904s5(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T107f312(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T107f312p1(TC* ac, T0* C);
/* STRING_32.wipe_out */
extern void T18f27(TC* ac, T0* C);
/* STRING_32.twin */
extern T0* T18f9(TC* ac, T0* C);
/* STRING_32.copy */
extern void T18f33(TC* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_32].resized_area */
extern T0* T16f6(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.empty_pattern_buffer */
extern T0* T107f233(TC* ac, T0* C);
/* RX_BYTE_CODE.make */
extern T0* T902c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].make */
extern T0* T1340c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].set_internal_cursor */
extern void T1340f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].new_cursor */
extern T0* T1340f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET].make */
extern T0* T1780c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_CHARACTER_SET].make */
extern T0* T1779s1(TC* ac, T6 a1);
/* SPECIAL [RX_CHARACTER_SET].make_empty */
extern T0* T908c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [RX_CHARACTER_SET].default_create */
extern T0* T1779c3(TC* ac);
/* ET_C_GENERATOR.operating_system */
extern T0* T114s183(TC* ac);
/* ET_C_GENERATOR.generate_c_code */
extern void T114f665(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.dummy_feature */
extern T0* T114f165(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.make */
extern T0* T845c52(TC* ac, T0* a1, T0* a2, T0* a3);
extern T1 T845f52ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_PROCEDURE.has_seed */
extern T1 T714f40(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.has */
extern T1 T1271f7(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.has_seed */
extern T1 T712f39(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.has_seed */
extern T1 T710f49(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.has_seed */
extern T1 T708f45(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.has_seed */
extern T1 T707f48(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.has_seed */
extern T1 T706f47(TC* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.has_seed */
extern T1 T705f43(TC* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.has_seed */
extern T1 T704f41(TC* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.has_seed */
extern T1 T703f47(TC* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.has_seed */
extern T1 T702f39(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.has_seed */
extern T1 T711f47(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.has_seed */
extern T1 T713f40(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_set_reference_field_feature */
extern void T95f114(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.use_all_attributes */
extern void T95f115(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.use_all_attributes */
extern void T1049f85(TC* ac, T0* C, T0* a1);
extern T1 T1049f85ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.is_builtin_attribute */
extern T1 T1049f38(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_EXTERNAL_FUNCTION.is_builtin */
extern T1 T710f43(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.tokens */
extern T0* T710s50(TC* ac);
/* ET_TOKEN_CONSTANTS.default_create */
extern T0* T81c1563(TC* ac);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_query */
extern T0* T1049f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_function */
extern void T1049f91(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.is_basic */
extern T1 T1049f33(TC* ac, T0* C);
/* ET_CLASS.is_basic */
extern T1 T70f86(TC* ac, T0* C);
/* ET_CLASS_CODES.is_basic */
extern T1 T779s34(TC* ac, T8 a1);
/* ET_CLASS.class_codes */
extern T0* T70s134(TC* ac);
/* ET_CLASS_CODES.default_create */
extern T0* T779c38(TC* ac);
/* ET_DYNAMIC_PRECURSOR.is_builtin_any_is_equal */
extern T1 T860f37(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_any_is_equal */
extern T1 T845f28(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_once_per_object */
extern T1 T860f30(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once_per_object */
extern T1 T714f35(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once_per_object */
extern T1 T713f34(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_once_per_object */
extern T1 T712f34(TC* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.has_object_key */
extern T1 T1838s1(TC* ac, T0* a1);
/* ET_STANDARD_ONCE_KEYS.has_expected_key */
extern T1 T1838s8(TC* ac, T0* a1, T0* a2);
/* ET_STANDARD_ONCE_KEYS.is_expected_key */
extern T1 T1838s11(TC* ac, T0* a1, T0* a2);
/* ET_VERBATIM_STRING.value */
extern T0* T674f1(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.value */
extern T0* T673f1(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.value */
extern T0* T672f1(TC* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.string_ */
extern T0* T1838s12(TC* ac);
/* ET_MANIFEST_STRING_LIST.manifest_string */
extern T0* T565f7(TC* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.manifest_string */
extern T0* T674f29(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.manifest_string */
extern T0* T673f26(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.manifest_string */
extern T0* T672f24(TC* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.item */
extern T0* T565f9(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.standard_once_keys */
extern T0* T712s49(TC* ac);
/* ET_STANDARD_ONCE_KEYS.default_create */
extern T0* T1838c13(TC* ac);
/* ET_DO_PROCEDURE.is_once_per_object */
extern T1 T711f37(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once_per_object */
extern T1 T710f40(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once_per_object */
extern T1 T708f36(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_once_per_object */
extern T1 T707f39(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.standard_once_keys */
extern T0* T707s54(TC* ac);
/* ET_DO_FUNCTION.is_once_per_object */
extern T1 T706f38(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once_per_object */
extern T1 T705f34(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once_per_object */
extern T1 T704f32(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once_per_object */
extern T1 T703f37(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_once_per_object */
extern T1 T702f30(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once_per_object */
extern T1 T845f23(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.force_last */
extern void T839f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].force */
extern void T1273s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].fill_with */
extern void T1272f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].extend */
extern void T1272f10(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.fixed_array */
extern T0* T839f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].default_create */
extern T0* T1273c3(TC* ac);
/* ET_DYNAMIC_FEATURE_LIST.resize */
extern void T839f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T1273s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T1272f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.new_capacity */
extern T6 T839f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.capacity */
extern T6 T839f6(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.put_attribute */
extern void T1049f90(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_reference_field_dynamic_types */
extern void T842f23(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_reference_field_dynamic_types */
extern void T100f127(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_giaaa_error */
extern void T63f202(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_internal_error */
extern void T63f237(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.set_has_internal_error */
extern void T63f240(TC* ac, T0* C, T1 a1);
/* ET_INTERNAL_ERROR.make_giaaa */
extern T0* T1443c19(TC* ac);
/* ET_ERROR_HANDLER.report_giaaa_error */
extern void T42f202(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_internal_error */
extern void T42f237(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_internal_error */
extern void T42f240(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.error_handler */
extern T0* T100f95(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_fatal_error */
extern void T100f115(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_result_dynamic_types */
extern void T100f125(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_dynamic_types */
extern void T100f126(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_target */
extern void T1814f19(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_target */
extern void T924f24(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_target */
extern void T1050f18(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T2024f9(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T2023f9(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.propagate_can_be_void */
extern void T888f20(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.propagate_can_be_void */
extern void T889f15(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.propagate_can_be_void */
extern void T1814f18(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.propagate_can_be_void */
extern void T924f20(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.propagate_can_be_void */
extern void T1050f19(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.item */
extern T0* T1652f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.propagate_can_be_void */
extern void T1049f88(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.propagate_can_be_void */
extern void T1048f88(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.propagate_can_be_void */
extern void T894f89(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.propagate_can_be_void */
extern void T966f91(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.propagate_can_be_void */
extern void T838f87(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.propagate_can_be_void */
extern void T969f34(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T2024f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_type */
extern void T2024f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T842f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T100f577(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_actual_argument_dynamic_types */
extern void T100f172(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_FUNCTION_TYPE.conforms_to_primary_type */
extern T1 T1049f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].has */
extern T1 T930f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].search_position */
extern void T930f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].hash_position */
extern T6 T930f20(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.hash_code */
extern T6 T1049f24(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.hash_code */
extern T6 T1048f23(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.hash_code */
extern T6 T894f20(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.hash_code */
extern T6 T966f20(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.hash_code */
extern T6 T838f18(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].key_storage_item */
extern T0* T930f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].item_storage_item */
extern T0* T930f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].clashes_item */
extern T6 T930f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].key_equality_tester */
extern T0* T930f24(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].slots_item */
extern T6 T930f22(TC* ac, T0* C, T6 a1);
/* ET_CLASS.is_none */
extern T1 T70f82(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_none */
extern T1 T89f38(TC* ac, T0* C);
/* ET_CLUSTER.is_none */
extern T1 T67f20(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_none */
extern T1 T262f9(TC* ac, T0* C);
/* ET_NONE_GROUP.is_none */
extern T1 T198s6(TC* ac);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_primary_type */
extern T1 T1048f70(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.conforms_to_primary_type */
extern T1 T894f41(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.conforms_to_primary_type */
extern T1 T966f31(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.conforms_to_primary_type */
extern T1 T838f37(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.set_regular */
extern void T860f59(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_regular */
extern void T845f55(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.item */
extern T0* T861f3(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.error_handler */
extern T0* T842f13(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.error_handler */
extern T0* T95f78(TC* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_fatal_error */
extern void T842f28(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_query */
extern T0* T1049f41(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_CLASS.seeded_query */
extern T0* T70f85(TC* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.seeded_feature */
extern T0* T769f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_query */
extern T0* T1048f41(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_function */
extern void T1048f91(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_attribute */
extern void T1048f90(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.register_feature_seeds */
extern void T1048f89(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_IDS.item */
extern T6 T1271f6(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.other_seeds */
extern T0* T714f25(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.other_seeds */
extern T0* T712f25(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.other_seeds */
extern T0* T710f27(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.other_seeds */
extern T0* T708f24(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.other_seeds */
extern T0* T707f27(TC* ac, T0* C);
/* ET_DO_FUNCTION.other_seeds */
extern T0* T706f26(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.other_seeds */
extern T0* T705f21(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.other_seeds */
extern T0* T704f19(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.other_seeds */
extern T0* T703f24(TC* ac, T0* C);
/* ET_ATTRIBUTE.other_seeds */
extern T0* T702f17(TC* ac, T0* C);
/* ET_DO_PROCEDURE.other_seeds */
extern T0* T711f14(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.other_seeds */
extern T0* T713f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].force_last */
extern void T1270f34(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].key_storage_put */
extern void T1270f42(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [INTEGER_32].force */
extern void T263s7(TC* ac, T0* a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].slots_put */
extern void T1270f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].clashes_put */
extern void T1270f40(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].slots_item */
extern T6 T1270f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].hash_position */
extern T6 T1270f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].resize */
extern void T1270f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].clashes_resize */
extern void T1270f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1270s31(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].key_storage_resize */
extern void T1270f46(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].aliased_resized_area */
extern T0* T263s2(TC* ac, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].item_storage_resize */
extern void T1270f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1270f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].clashes_item */
extern T6 T1270f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].slots_resize */
extern void T1270f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].new_modulus */
extern T6 T1270f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].new_capacity */
extern T6 T1270f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].item_storage_put */
extern void T1270f38(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].search_position */
extern void T1270f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].unset_found_item */
extern void T1270f36(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.first_seed */
extern T6 T714f24(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.first_seed */
extern T6 T712f24(TC* ac, T0* C);
/* ET_DO_PROCEDURE.first_seed */
extern T6 T711f13(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.first_seed */
extern T6 T713f10(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_query */
extern T0* T1048f55(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_query */
extern T0* T894f43(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_function */
extern void T894f80(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_attribute */
extern void T894f79(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.register_feature_seeds */
extern void T894f78(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T894f68(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_reference_item */
extern void T842f25(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_reference_item */
extern void T100f129(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SECONDARY_TYPE.is_basic */
extern T1 T969f16(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.base_class */
extern T0* T969f17(TC* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.item */
extern T0* T858f4(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.same_feature_name */
extern T1 T303f47(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.string_ */
extern T0* T303s9(TC* ac);
/* ET_TOKEN_CONSTANTS.reference_item_feature_name */
extern T0* T81s624(TC* ac);
/* ET_DYNAMIC_TUPLE_TYPE.tokens */
extern T0* T894s30(TC* ac);
/* ET_DYNAMIC_FEATURE.is_builtin */
extern T1 T845f27(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.name */
extern T0* T710f51(TC* ac, T0* C);
/* ET_IDENTIFIER.feature_name */
extern T0* T303f30(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.name */
extern T0* T708f46(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.name */
extern T0* T707f40(TC* ac, T0* C);
/* ET_DO_FUNCTION.name */
extern T0* T706f41(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.name */
extern T0* T705f35(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.name */
extern T0* T704f35(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.name */
extern T0* T703f48(TC* ac, T0* C);
/* ET_ATTRIBUTE.name */
extern T0* T702f33(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T894f68p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_query */
extern T0* T966f43(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_function */
extern void T966f82(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_attribute */
extern void T966f81(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.register_feature_seeds */
extern void T966f80(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T966f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.set_result_type_set */
extern void T845f60(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.is_builtin_special_item */
extern T1 T845f24(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T966f27p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.seeded_dynamic_query */
extern T0* T838f47(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.put_function */
extern void T838f80(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.put_attribute */
extern void T838f79(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.register_feature_seeds */
extern void T838f77(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.new_dynamic_query */
extern T0* T838f34(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_basic */
extern T1 T1048f33(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_basic */
extern T1 T894f28(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_basic */
extern T1 T966f29(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_basic */
extern T1 T838f48(TC* ac, T0* C);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T2023f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_type */
extern void T2023f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_from_type_set */
extern void T888f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_tuple_label */
extern void T888f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T842f29(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T100f567(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f567ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_result_dynamic_types */
extern void T100f574(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.valid_index */
extern T1 T858f3(TC* ac, T0* C, T6 a1);
/* ET_INFIX_OR_ELSE_OPERATOR.seed */
extern T6 T747f3(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.seed */
extern T6 T746f3(TC* ac, T0* C);
/* ET_FREE_OPERATOR.seed */
extern T6 T300f6(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.seed */
extern T6 T309f4(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.seed */
extern T6 T324f4(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.seed */
extern T6 T1859f1(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.seed */
extern T6 T333f4(TC* ac, T0* C);
/* ET_IDENTIFIER.seed */
extern T6 T303f2(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.name */
extern T0* T2041f1(TC* ac, T0* C);
/* ET_CALL_AGENT.name */
extern T0* T376f9(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.name */
extern T0* T751f2(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.name */
extern T0* T745f3(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.name */
extern T0* T1544f2(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.name */
extern T0* T373f3(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.name */
extern T0* T379f8(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T888f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T888f21p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T888f21p1ot1(TC* ac, T0* a1);
extern T1 T888f21p1ot2(TC* ac, T0* a1);
extern T1 T888f21p1ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type */
extern void T1814f20(TC* ac, T0* C, T0* a1);
extern T1 T1814f20ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.force_last */
extern void T923f21(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE].force */
extern void T1007s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].fill_with */
extern void T1006f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].extend */
extern void T1006f10(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.fixed_array */
extern T0* T923f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE].default_create */
extern T0* T1007c3(TC* ac);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.hash_position */
extern T6 T923f12(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.modulus */
extern T6 T923f14(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.resize */
extern void T923f18(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.special_integer_ */
extern T0* T923s7(TC* ac);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE].aliased_resized_area */
extern T0* T1007s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].aliased_resized_area */
extern T0* T1006f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.new_modulus */
extern T6 T923f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.new_capacity */
extern T6 T923f15(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.capacity */
extern T6 T923f10(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.put_last */
extern void T923f19(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.append_last */
extern void T923f22(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.dynamic_type */
extern T0* T1814f13(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.make_with_capacity */
extern T0* T923c17(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T1007s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].make_empty */
extern T0* T1006c5(TC* ac, T6 a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T1814f8(TC* ac, T0* C, T0* a1);
extern T1 T1814f8ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T1814f8p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T1814f12(TC* ac, T0* C, T0* a1);
extern T1 T1814f12ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T1814f12p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.index_of */
extern T6 T969f28(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.index_of */
extern T6 T1049f68(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.index_of */
extern T6 T1048f68(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.index_of */
extern T6 T894f65(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.index_of */
extern T6 T966f67(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.index_of */
extern T6 T838f64(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.index_of */
extern T6 T923f16(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.has_type */
extern T1 T923f13(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.has_type */
extern T1 T969f25(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_type */
extern T1 T1049f40(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_type */
extern T1 T1048f40(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.has_type */
extern T1 T894f42(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.has_type */
extern T1 T966f44(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.has_type */
extern T1 T838f29(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.dynamic_type */
extern T0* T923f6(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SECONDARY_TYPE.dynamic_type */
extern T0* T969f22(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_type */
extern T0* T1049f36(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_type */
extern T0* T1048f36(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_type */
extern T0* T894f39(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_type */
extern T0* T966f42(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.dynamic_type */
extern T0* T838f67(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.count */
extern T6 T923f1(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.count */
extern T6 T969f21(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.count */
extern T6 T1049f35(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.count */
extern T6 T1048f35(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.count */
extern T6 T894f38(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.count */
extern T6 T966f41(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.count */
extern T6 T838f66(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.conforms_to_type */
extern T1 T1049f54(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_attached_with_type_mark */
extern T1 T183f24(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_detachable_mark */
extern T1 T192f11(TC* ac, T0* C);
/* ET_KEYWORD.is_detachable_mark */
extern T1 T191f11(TC* ac, T0* C);
/* ET_KEYWORD.is_question_mark */
extern T1 T191f18(TC* ac, T0* C);
/* ET_KEYWORD.is_detachable */
extern T1 T191f17(TC* ac, T0* C);
/* ET_KEYWORD.tokens */
extern T0* T191s16(TC* ac);
/* ET_QUESTION_MARK_SYMBOL.is_detachable_mark */
extern T1 T336f39(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_question_mark */
extern T1 T336f13(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.tokens */
extern T0* T336s18(TC* ac);
/* ET_QUESTION_MARK_SYMBOL.is_detachable */
extern T1 T336f12(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_detachable_mark */
extern T1 T333f84(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_question_mark */
extern T1 T333f19(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.tokens */
extern T0* T333s70(TC* ac);
/* ET_BRACKET_SYMBOL.is_detachable */
extern T1 T333f18(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_detachable_mark */
extern T1 T324f95(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_question_mark */
extern T1 T324f19(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.tokens */
extern T0* T324s70(TC* ac);
/* ET_SYMBOL_OPERATOR.is_detachable */
extern T1 T324f18(TC* ac, T0* C);
/* ET_SYMBOL.is_detachable_mark */
extern T1 T282f4(TC* ac, T0* C);
/* ET_SYMBOL.is_question_mark */
extern T1 T282f20(TC* ac, T0* C);
/* ET_SYMBOL.tokens */
extern T0* T282s71(TC* ac);
/* ET_SYMBOL.is_detachable */
extern T1 T282f19(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_detachable_mark */
extern T1 T176f5(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_attached_mark */
extern T1 T192f6(TC* ac, T0* C);
/* ET_KEYWORD.is_attached_mark */
extern T1 T191f6(TC* ac, T0* C);
/* ET_KEYWORD.is_bang */
extern T1 T191f13(TC* ac, T0* C);
/* ET_KEYWORD.is_attached */
extern T1 T191f12(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attached_mark */
extern T1 T336f24(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_bang */
extern T1 T336f11(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attached */
extern T1 T336f10(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attached_mark */
extern T1 T333f71(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_bang */
extern T1 T333f17(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attached */
extern T1 T333f16(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_attached_mark */
extern T1 T324f71(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_bang */
extern T1 T324f17(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_attached */
extern T1 T324f16(TC* ac, T0* C);
/* ET_SYMBOL.is_attached_mark */
extern T1 T282f72(TC* ac, T0* C);
/* ET_SYMBOL.is_bang */
extern T1 T282f18(TC* ac, T0* C);
/* ET_SYMBOL.is_attached */
extern T1 T282f17(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_attached_mark */
extern T1 T176f3(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_attached */
extern T1 T183f15(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_attachment_mark */
extern T1 T192f5(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_attachment_mark */
extern T1 T324f8(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attachment_mark */
extern T1 T333f8(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attachment_mark */
extern T1 T336f19(TC* ac, T0* C);
/* ET_SYMBOL.is_attachment_mark */
extern T1 T282f8(TC* ac, T0* C);
/* ET_KEYWORD.is_attachment_mark */
extern T1 T191f5(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_attachment_mark */
extern T1 T176f8(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_type_attached_with_type_mark */
extern T1 T102f25(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_expanded */
extern T1 T102f14(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_reference_mark */
extern T1 T324f13(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_reference */
extern T1 T324f75(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_reference_mark */
extern T1 T333f13(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_reference */
extern T1 T333f75(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_reference_mark */
extern T1 T336f8(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_reference */
extern T1 T336f17(TC* ac, T0* C);
/* ET_SYMBOL.is_reference_mark */
extern T1 T282f13(TC* ac, T0* C);
/* ET_SYMBOL.is_reference */
extern T1 T282f76(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_reference_mark */
extern T1 T192f7(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_reference */
extern T1 T192f13(TC* ac, T0* C);
/* ET_KEYWORD.is_reference_mark */
extern T1 T191f7(TC* ac, T0* C);
/* ET_KEYWORD.is_reference */
extern T1 T191f14(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_reference_mark */
extern T1 T176f4(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_expanded_mark */
extern T1 T324f10(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_expanded */
extern T1 T324f72(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expanded_mark */
extern T1 T333f10(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expanded */
extern T1 T333f72(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expanded_mark */
extern T1 T336f5(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expanded */
extern T1 T336f14(TC* ac, T0* C);
/* ET_SYMBOL.is_expanded_mark */
extern T1 T282f10(TC* ac, T0* C);
/* ET_SYMBOL.is_expanded */
extern T1 T282f73(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_expanded_mark */
extern T1 T192f12(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_expanded */
extern T1 T192f8(TC* ac, T0* C);
/* ET_KEYWORD.is_expanded_mark */
extern T1 T191f19(TC* ac, T0* C);
/* ET_KEYWORD.is_expanded */
extern T1 T191f8(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_expanded_mark */
extern T1 T176f1(TC* ac, T0* C);
/* ET_CLASS.is_expanded */
extern T1 T70f79(TC* ac, T0* C);
/* ET_CLASS.has_expanded_mark */
extern T1 T70f130(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_attached */
extern T1 T102f16(TC* ac, T0* C);
/* ET_CLASS.is_type_attached_with_type_mark */
extern T1 T70f80(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_attached */
extern T1 T70f124(TC* ac, T0* C);
/* ET_CLASS.current_system */
extern T0* T70f123(TC* ac, T0* C);
/* ET_ECF_LIBRARY.current_system */
extern T0* T802f11(TC* ac, T0* C);
/* ET_ECF_SYSTEM.current_system */
extern T0* T87f13(TC* ac, T0* C);
/* ET_SYSTEM.current_system */
extern T0* T50f11(TC* ac, T0* C);
/* ET_ECF_LIBRARY.implicit_attachment_type_mark */
extern T0* T802f16(TC* ac, T0* C);
/* ET_ECF_SYSTEM.implicit_attachment_type_mark */
extern T0* T87f18(TC* ac, T0* C);
/* ET_SYSTEM.implicit_attachment_type_mark */
extern T0* T50f17(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.type_mark */
extern T0* T1049f51(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.tokens */
extern T0* T1049s60(TC* ac);
/* ET_DYNAMIC_PROCEDURE_TYPE.type_mark */
extern T0* T1048f51(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.tokens */
extern T0* T1048s60(TC* ac);
/* ET_DYNAMIC_SECONDARY_TYPE.type_mark */
extern T0* T969f3(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.type_mark */
extern T0* T966f57(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.tokens */
extern T0* T966s32(TC* ac);
/* ET_DYNAMIC_TUPLE_TYPE.type_mark */
extern T0* T894f54(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.type_mark */
extern T0* T838f56(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.tokens */
extern T0* T838s35(TC* ac);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_type */
extern T1 T1048f56(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.conforms_to_type */
extern T1 T966f69(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.conforms_to_type */
extern T1 T894f44(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.conforms_to_type */
extern T1 T969f8(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.conforms_to_type */
extern T1 T838f38(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.dynamic_type_set */
extern T0* T860f51(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.item */
extern T0* T929f4(TC* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.index */
extern T6 T1868f3(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.index */
extern T6 T2041f2(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.index */
extern T6 T2040f3(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.index */
extern T6 T1870f1(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.index */
extern T6 T2039f1(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.index */
extern T6 T766f5(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.index */
extern T6 T336f3(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.index */
extern T6 T980f2(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.index */
extern T6 T530f1(TC* ac, T0* C);
/* ET_IF_EXPRESSION.index */
extern T6 T509f1(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.index */
extern T6 T436f1(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.index */
extern T6 T379f2(TC* ac, T0* C);
/* ET_CALL_AGENT.index */
extern T6 T376f1(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.index */
extern T6 T373f1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.index */
extern T6 T339f4(TC* ac, T0* C);
/* ET_VOID.index */
extern T6 T327f1(TC* ac, T0* C);
/* ET_RESULT.index */
extern T6 T318f4(TC* ac, T0* C);
/* ET_IDENTIFIER.index */
extern T6 T303f3(TC* ac, T0* C);
/* ET_CURRENT.index */
extern T6 T297f1(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.index */
extern T6 T679f2(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.index */
extern T6 T678f2(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.index */
extern T6 T677f2(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.index */
extern T6 T676f2(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.index */
extern T6 T675f1(TC* ac, T0* C);
/* ET_VERBATIM_STRING.index */
extern T6 T674f2(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.index */
extern T6 T673f2(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.index */
extern T6 T671f1(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.index */
extern T6 T757f1(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.index */
extern T6 T613f3(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.index */
extern T6 T756f1(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.index */
extern T6 T755f2(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.index */
extern T6 T753f2(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.index */
extern T6 T741f1(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.index */
extern T6 T1033f1(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.index */
extern T6 T764f1(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.index */
extern T6 T763f1(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.index */
extern T6 T762f1(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.index */
extern T6 T761f1(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.index */
extern T6 T760f1(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.index */
extern T6 T759f1(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.index */
extern T6 T630f1(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.index */
extern T6 T568f5(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.index */
extern T6 T559f1(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.index */
extern T6 T589f1(TC* ac, T0* C);
/* ET_OBJECT_TEST.index */
extern T6 T754f1(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.index */
extern T6 T752f1(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.index */
extern T6 T751f1(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.index */
extern T6 T750f1(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.index */
extern T6 T749f1(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.index */
extern T6 T748f1(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.index */
extern T6 T745f1(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.index */
extern T6 T744f1(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.index */
extern T6 T743f1(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.index */
extern T6 T742f1(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.index */
extern T6 T740f1(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.index */
extern T6 T627f1(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.index */
extern T6 T686f1(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.index */
extern T6 T685f1(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.index */
extern T6 T684f1(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.index */
extern T6 T683f4(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.index */
extern T6 T681f2(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.index */
extern T6 T680f1(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.index */
extern T6 T672f2(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.dynamic_type_set */
extern T0* T845f29(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.expression */
extern T0* T568f6(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.expression_item */
extern T0* T2041f10(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.expression_item */
extern T0* T2040f11(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.expression_item */
extern T0* T2039f9(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.expression_item */
extern T0* T1870f9(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.expression_item */
extern T0* T980f7(TC* ac, T0* C);
/* ET_IDENTIFIER.expression_item */
extern T0* T303f46(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.expression_item */
extern T0* T679f53(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.expression_item */
extern T0* T678f53(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.expression_item */
extern T0* T677f53(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.expression_item */
extern T0* T676f53(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.expression_item */
extern T0* T675f9(TC* ac, T0* C);
/* ET_VERBATIM_STRING.expression_item */
extern T0* T674f39(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.expression_item */
extern T0* T673f10(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.expression_item */
extern T0* T671f38(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.expression_item */
extern T0* T757f6(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.expression_item */
extern T0* T613f14(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.expression_item */
extern T0* T339f20(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.expression_item */
extern T0* T756f6(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.expression_item */
extern T0* T755f7(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.expression_item */
extern T0* T753f10(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.expression_item */
extern T0* T741f6(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T1033f5(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T764f16(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T763f41(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T762f17(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T761f18(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T760f20(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T759f37(TC* ac, T0* C);
/* ET_CALL_AGENT.expression_item */
extern T0* T376f8(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.expression_item */
extern T0* T630f9(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.expression_item */
extern T0* T568f14(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.expression_item */
extern T0* T559f10(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.expression_item */
extern T0* T589f5(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.expression_item */
extern T0* T373f6(TC* ac, T0* C);
/* ET_OBJECT_TEST.expression_item */
extern T0* T754f6(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.expression_item */
extern T0* T752f6(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.expression_item */
extern T0* T751f5(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.expression_item */
extern T0* T750f5(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.expression_item */
extern T0* T749f5(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.expression_item */
extern T0* T748f5(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.expression_item */
extern T0* T745f22(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.expression_item */
extern T0* T744f6(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.expression_item */
extern T0* T743f6(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.expression_item */
extern T0* T742f6(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.expression_item */
extern T0* T740f8(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.expression_item */
extern T0* T627f7(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T379f10(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.expression_item */
extern T0* T530f8(TC* ac, T0* C);
/* ET_IF_EXPRESSION.expression_item */
extern T0* T509f11(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.expression_item */
extern T0* T436f16(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.expression_item */
extern T0* T686f37(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.expression_item */
extern T0* T685f37(TC* ac, T0* C);
/* ET_CURRENT.expression_item */
extern T0* T297f16(TC* ac, T0* C);
/* ET_RESULT.expression_item */
extern T0* T318f12(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.expression_item */
extern T0* T684f7(TC* ac, T0* C);
/* ET_VOID.expression_item */
extern T0* T327f11(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.expression_item */
extern T0* T683f7(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.expression_item */
extern T0* T681f32(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.expression_item */
extern T0* T680f7(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.expression_item */
extern T0* T672f6(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.item */
extern T0* T568f12(TC* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.actual_argument */
extern T0* T1870f16(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.actual_argument */
extern T0* T980f17(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.actual_argument */
extern T0* T2041f16(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.actual_argument */
extern T0* T2040f17(TC* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.actual_argument */
extern T0* T1867f7(TC* ac, T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.actual_argument */
extern T0* T358f7(TC* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.agent_actual_argument */
extern T0* T1870f18(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.agent_actual_argument */
extern T0* T980f19(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.agent_actual_argument */
extern T0* T2041f18(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.agent_actual_argument */
extern T0* T2040f19(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.agent_actual_argument */
extern T0* T2039f17(TC* ac, T0* C);
/* ET_IDENTIFIER.agent_actual_argument */
extern T0* T303f77(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T679f41(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T678f41(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T677f41(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T676f41(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T675f43(TC* ac, T0* C);
/* ET_VERBATIM_STRING.agent_actual_argument */
extern T0* T674f35(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.agent_actual_argument */
extern T0* T673f32(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T671f31(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.agent_actual_argument */
extern T0* T757f19(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.agent_actual_argument */
extern T0* T613f33(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.agent_actual_argument */
extern T0* T339f34(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.agent_actual_argument */
extern T0* T756f21(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.agent_actual_argument */
extern T0* T755f23(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.agent_actual_argument */
extern T0* T753f26(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.agent_actual_argument */
extern T0* T741f19(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T1033f22(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.agent_actual_argument */
extern T0* T766f6(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T764f33(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T763f39(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T762f35(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T761f34(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T760f40(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T759f36(TC* ac, T0* C);
/* ET_CALL_AGENT.agent_actual_argument */
extern T0* T376f25(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.agent_actual_argument */
extern T0* T630f26(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.agent_actual_argument */
extern T0* T568f26(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.agent_actual_argument */
extern T0* T559f26(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.agent_actual_argument */
extern T0* T589f21(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.agent_actual_argument */
extern T0* T373f23(TC* ac, T0* C);
/* ET_OBJECT_TEST.agent_actual_argument */
extern T0* T754f22(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.agent_actual_argument */
extern T0* T752f19(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.agent_actual_argument */
extern T0* T751f24(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.agent_actual_argument */
extern T0* T750f20(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T749f20(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T748f19(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.agent_actual_argument */
extern T0* T745f24(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.agent_actual_argument */
extern T0* T744f19(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.agent_actual_argument */
extern T0* T743f19(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.agent_actual_argument */
extern T0* T742f19(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.agent_actual_argument */
extern T0* T740f24(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.agent_actual_argument */
extern T0* T627f24(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T379f24(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.agent_actual_argument */
extern T0* T530f22(TC* ac, T0* C);
/* ET_IF_EXPRESSION.agent_actual_argument */
extern T0* T509f25(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.agent_actual_argument */
extern T0* T436f31(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T686f29(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T685f29(TC* ac, T0* C);
/* ET_CURRENT.agent_actual_argument */
extern T0* T297f29(TC* ac, T0* C);
/* ET_RESULT.agent_actual_argument */
extern T0* T318f26(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.agent_actual_argument */
extern T0* T684f28(TC* ac, T0* C);
/* ET_VOID.agent_actual_argument */
extern T0* T327f24(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.agent_actual_argument */
extern T0* T683f28(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.agent_actual_argument */
extern T0* T336f37(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.agent_actual_argument */
extern T0* T681f29(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.agent_actual_argument */
extern T0* T680f29(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.agent_actual_argument */
extern T0* T672f30(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.item */
extern T0* T358f8(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.actual_argument */
extern T0* T2039f15(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.actual_argument */
extern T0* T303f50(TC* ac, T0* C, T6 a1);
/* ET_BINARY_INTEGER_CONSTANT.actual_argument */
extern T0* T679f17(TC* ac, T0* C, T6 a1);
/* ET_OCTAL_INTEGER_CONSTANT.actual_argument */
extern T0* T678f17(TC* ac, T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument */
extern T0* T677f17(TC* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument */
extern T0* T676f17(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.actual_argument */
extern T0* T675f18(TC* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.actual_argument */
extern T0* T674f21(TC* ac, T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.actual_argument */
extern T0* T673f18(TC* ac, T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.actual_argument */
extern T0* T671f15(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_CURSOR.actual_argument */
extern T0* T757f9(TC* ac, T0* C, T6 a1);
/* ET_QUANTIFIER_EXPRESSION.actual_argument */
extern T0* T613f20(TC* ac, T0* C, T6 a1);
/* ET_ACROSS_EXPRESSION.actual_argument */
extern T0* T339f22(TC* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.actual_argument */
extern T0* T756f10(TC* ac, T0* C, T6 a1);
/* ET_NAMED_OBJECT_TEST.actual_argument */
extern T0* T755f12(TC* ac, T0* C, T6 a1);
/* ET_OLD_OBJECT_TEST.actual_argument */
extern T0* T753f15(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.actual_argument */
extern T0* T741f9(TC* ac, T0* C, T6 a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T1033f9(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T764f19(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T763f21(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T762f20(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T761f21(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T760f23(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T759f22(TC* ac, T0* C, T6 a1);
/* ET_CALL_AGENT.actual_argument */
extern T0* T376f12(TC* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.actual_argument */
extern T0* T630f13(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.actual_argument */
extern T0* T568f9(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.actual_argument */
extern T0* T559f14(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.actual_argument */
extern T0* T589f10(TC* ac, T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.actual_argument */
extern T0* T373f10(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST.actual_argument */
extern T0* T754f10(TC* ac, T0* C, T6 a1);
/* ET_OLD_EXPRESSION.actual_argument */
extern T0* T752f9(TC* ac, T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.actual_argument */
extern T0* T751f8(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TYPE.actual_argument */
extern T0* T750f10(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.actual_argument */
extern T0* T749f9(TC* ac, T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.actual_argument */
extern T0* T748f9(TC* ac, T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.actual_argument */
extern T0* T745f9(TC* ac, T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.actual_argument */
extern T0* T744f9(TC* ac, T0* C, T6 a1);
/* ET_RESULT_ADDRESS.actual_argument */
extern T0* T743f9(TC* ac, T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.actual_argument */
extern T0* T742f9(TC* ac, T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.actual_argument */
extern T0* T740f13(TC* ac, T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.actual_argument */
extern T0* T627f13(TC* ac, T0* C, T6 a1);
/* ET_QUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T379f14(TC* ac, T0* C, T6 a1);
/* ET_INSPECT_EXPRESSION.actual_argument */
extern T0* T530f10(TC* ac, T0* C, T6 a1);
/* ET_IF_EXPRESSION.actual_argument */
extern T0* T509f14(TC* ac, T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.actual_argument */
extern T0* T436f18(TC* ac, T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.actual_argument */
extern T0* T686f13(TC* ac, T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.actual_argument */
extern T0* T685f13(TC* ac, T0* C, T6 a1);
/* ET_CURRENT.actual_argument */
extern T0* T297f18(TC* ac, T0* C, T6 a1);
/* ET_RESULT.actual_argument */
extern T0* T318f14(TC* ac, T0* C, T6 a1);
/* ET_FALSE_CONSTANT.actual_argument */
extern T0* T684f14(TC* ac, T0* C, T6 a1);
/* ET_VOID.actual_argument */
extern T0* T327f14(TC* ac, T0* C, T6 a1);
/* ET_TRUE_CONSTANT.actual_argument */
extern T0* T683f14(TC* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.actual_argument */
extern T0* T681f15(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.actual_argument */
extern T0* T680f15(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.actual_argument */
extern T0* T672f16(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T1866f13(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.item */
extern T0* T1866f14(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T345f6(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.item */
extern T0* T345f5(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.is_agent_type */
extern T1 T1049s69(TC* ac);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_agent_type */
extern T1 T1048s69(TC* ac);
/* ET_DYNAMIC_TUPLE_TYPE.is_agent_type */
extern T1 T894f66(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_agent_type */
extern T1 T966f68(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_agent_type */
extern T1 T838f65(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin_function_item */
extern T1 T860f48(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_function_item */
extern T1 T845f49(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin_procedure_call */
extern T1 T860f47(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_procedure_call */
extern T1 T845f48(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.actual_argument_count */
extern T6 T1870s15(TC* ac);
/* ET_DYNAMIC_INLINED_EXPRESSION.actual_argument_count */
extern T6 T980s16(TC* ac);
/* ET_CONVERT_TO_EXPRESSION.actual_argument_count */
extern T6 T2041s15(TC* ac);
/* ET_CONVERT_FROM_EXPRESSION.actual_argument_count */
extern T6 T2040s16(TC* ac);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.count */
extern T6 T1867f1(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.count */
extern T6 T358f3(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.actual_argument_count */
extern T6 T2039s14(TC* ac);
/* ET_IDENTIFIER.actual_argument_count */
extern T6 T303s49(TC* ac);
/* ET_BINARY_INTEGER_CONSTANT.actual_argument_count */
extern T6 T679s16(TC* ac);
/* ET_OCTAL_INTEGER_CONSTANT.actual_argument_count */
extern T6 T678s16(TC* ac);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument_count */
extern T6 T677s16(TC* ac);
/* ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument_count */
extern T6 T676s16(TC* ac);
/* ET_REGULAR_INTEGER_CONSTANT.actual_argument_count */
extern T6 T675s17(TC* ac);
/* ET_VERBATIM_STRING.actual_argument_count */
extern T6 T674s20(TC* ac);
/* ET_SPECIAL_MANIFEST_STRING.actual_argument_count */
extern T6 T673s17(TC* ac);
/* ET_C3_CHARACTER_CONSTANT.actual_argument_count */
extern T6 T671s14(TC* ac);
/* ET_ITERATION_CURSOR.actual_argument_count */
extern T6 T757s8(TC* ac);
/* ET_QUANTIFIER_EXPRESSION.actual_argument_count */
extern T6 T613s19(TC* ac);
/* ET_ACROSS_EXPRESSION.actual_argument_count */
extern T6 T339s21(TC* ac);
/* ET_ONCE_MANIFEST_STRING.actual_argument_count */
extern T6 T756s9(TC* ac);
/* ET_NAMED_OBJECT_TEST.actual_argument_count */
extern T6 T755s11(TC* ac);
/* ET_OLD_OBJECT_TEST.actual_argument_count */
extern T6 T753s14(TC* ac);
/* ET_FEATURE_ADDRESS.actual_argument_count */
extern T6 T741s8(TC* ac);
/* ET_UNQUALIFIED_CALL_EXPRESSION.actual_argument_count */
extern T6 T1033s8(TC* ac);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_argument_count */
extern T6 T764s18(TC* ac);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_argument_count */
extern T6 T763s20(TC* ac);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_argument_count */
extern T6 T762s19(TC* ac);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_argument_count */
extern T6 T761s20(TC* ac);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_argument_count */
extern T6 T760s22(TC* ac);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_argument_count */
extern T6 T759s21(TC* ac);
/* ET_CALL_AGENT.actual_argument_count */
extern T6 T376s11(TC* ac);
/* ET_STRIP_EXPRESSION.actual_argument_count */
extern T6 T630s12(TC* ac);
/* ET_MANIFEST_TUPLE.actual_argument_count */
extern T6 T568s7(TC* ac);
/* ET_MANIFEST_ARRAY.actual_argument_count */
extern T6 T559s13(TC* ac);
/* ET_PARENTHESIZED_EXPRESSION.actual_argument_count */
extern T6 T589s9(TC* ac);
/* ET_BRACKET_EXPRESSION.actual_argument_count */
extern T6 T373s9(TC* ac);
/* ET_OBJECT_TEST.actual_argument_count */
extern T6 T754s9(TC* ac);
/* ET_OLD_EXPRESSION.actual_argument_count */
extern T6 T752s8(TC* ac);
/* ET_PREFIX_EXPRESSION.actual_argument_count */
extern T6 T751s7(TC* ac);
/* ET_MANIFEST_TYPE.actual_argument_count */
extern T6 T750s9(TC* ac);
/* ET_OBJECT_EQUALITY_EXPRESSION.actual_argument_count */
extern T6 T749s8(TC* ac);
/* ET_EQUALITY_EXPRESSION.actual_argument_count */
extern T6 T748s8(TC* ac);
/* ET_INFIX_EXPRESSION.actual_argument_count */
extern T6 T745s8(TC* ac);
/* ET_EXPRESSION_ADDRESS.actual_argument_count */
extern T6 T744s8(TC* ac);
/* ET_RESULT_ADDRESS.actual_argument_count */
extern T6 T743s8(TC* ac);
/* ET_CURRENT_ADDRESS.actual_argument_count */
extern T6 T742s8(TC* ac);
/* ET_PRECURSOR_EXPRESSION.actual_argument_count */
extern T6 T740s12(TC* ac);
/* ET_STATIC_CALL_EXPRESSION.actual_argument_count */
extern T6 T627s12(TC* ac);
/* ET_QUALIFIED_CALL_EXPRESSION.actual_argument_count */
extern T6 T379s13(TC* ac);
/* ET_INSPECT_EXPRESSION.actual_argument_count */
extern T6 T530s9(TC* ac);
/* ET_IF_EXPRESSION.actual_argument_count */
extern T6 T509s13(TC* ac);
/* ET_CREATE_EXPRESSION.actual_argument_count */
extern T6 T436s17(TC* ac);
/* ET_C2_CHARACTER_CONSTANT.actual_argument_count */
extern T6 T686s12(TC* ac);
/* ET_C1_CHARACTER_CONSTANT.actual_argument_count */
extern T6 T685s12(TC* ac);
/* ET_CURRENT.actual_argument_count */
extern T6 T297s17(TC* ac);
/* ET_RESULT.actual_argument_count */
extern T6 T318s13(TC* ac);
/* ET_FALSE_CONSTANT.actual_argument_count */
extern T6 T684s13(TC* ac);
/* ET_VOID.actual_argument_count */
extern T6 T327s13(TC* ac);
/* ET_TRUE_CONSTANT.actual_argument_count */
extern T6 T683s13(TC* ac);
/* ET_UNDERSCORED_REAL_CONSTANT.actual_argument_count */
extern T6 T681s14(TC* ac);
/* ET_REGULAR_REAL_CONSTANT.actual_argument_count */
extern T6 T680s14(TC* ac);
/* ET_REGULAR_MANIFEST_STRING.actual_argument_count */
extern T6 T672s15(TC* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.count */
extern T6 T1866f1(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.count */
extern T6 T345f1(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments */
extern T0* T2041f19(TC* ac, T0* C);
/* ET_CALL_AGENT.arguments */
extern T0* T376f4(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.arguments */
extern T0* T751f9(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.right */
extern T0* T745f4(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.arguments */
extern T0* T1544f3(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.arguments */
extern T0* T373f4(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.arguments */
extern T0* T379f3(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.dynamic_feature */
extern T0* T888f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_tuple_label */
extern T1 T888f10(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_tuple_label */
extern T1 T2041f20(TC* ac, T0* C);
/* ET_IDENTIFIER.is_tuple_label */
extern T1 T303f29(TC* ac, T0* C);
/* ET_CALL_AGENT.is_tuple_label */
extern T1 T376f26(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_tuple_label */
extern T1 T751f10(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_tuple_label */
extern T1 T300f23(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_tuple_label */
extern T1 T309f23(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_tuple_label */
extern T1 T324f96(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_tuple_label */
extern T1 T745f10(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_tuple_label */
extern T1 T747f15(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_tuple_label */
extern T1 T746f15(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.is_tuple_label */
extern T1 T1544f6(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_tuple_label */
extern T1 T1859f19(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_tuple_label */
extern T1 T373f7(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_tuple_label */
extern T1 T333f85(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_tuple_label */
extern T1 T379f6(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_from_type_set */
extern void T889f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_tuple_label */
extern void T889f18(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T842f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T100f568(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f568ot1(TC* ac, T0* a1);
extern T1 T100f568ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_argument_dynamic_types */
extern void T100f575(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIS_INSTRUCTION.name */
extern T0* T1862f2(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.name */
extern T0* T736f5(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.name */
extern T0* T726f4(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_feature */
extern void T889f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T889f17ot1(TC* ac, T0* a1);
extern T1 T889f17ot2(TC* ac, T0* a1);
extern T1 T889f17ot3(TC* ac, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.actual_argument */
extern T0* T726f18(TC* ac, T0* C, T6 a1);
/* ET_ASSIGNER_INSTRUCTION.count */
extern T6 T726f17(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.arguments_count */
extern T6 T373f21(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.arguments_count */
extern T6 T379f22(TC* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.arguments */
extern T0* T1862f3(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.arguments */
extern T0* T736f3(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.arguments */
extern T0* T726f14(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.dynamic_feature */
extern T0* T889f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_procedure */
extern T0* T1049f43(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_procedure */
extern void T1049f92(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_any_copy */
extern T1 T860f32(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_any_copy */
extern T1 T845f26(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T1049f57(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.seeded_procedure */
extern T0* T70f84(TC* ac, T0* C, T6 a1);
/* ET_PROCEDURE_LIST.seeded_feature */
extern T0* T770f5(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_procedure */
extern T0* T1048f43(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_procedure */
extern void T1048f92(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T1048f57(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_agent_call */
extern void T842f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_agent_call */
extern void T100f132(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.set_dynamic_type_sets */
extern void T845f54(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.make */
extern T0* T1814c15(TC* ac, T0* a1, T0* a2);
/* ET_DYNAMIC_SECONDARY_TYPE.is_expanded */
extern T1 T969f5(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_expanded */
extern T1 T183s23(TC* ac);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.is_empty */
extern T1 T929f8(TC* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.is_empty */
extern T1 T858f8(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T1048f57p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_procedure */
extern T0* T894f47(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_procedure */
extern void T894f81(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T894f29(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_put_reference */
extern void T842f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_put_reference */
extern void T100f130(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.put_reference_feature_name */
extern T0* T81s625(TC* ac);
/* ET_EXTERNAL_PROCEDURE.name */
extern T0* T714f46(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.name */
extern T0* T713f49(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.name */
extern T0* T712f45(TC* ac, T0* C);
/* ET_DO_PROCEDURE.name */
extern T0* T711f51(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T894f29p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_procedure */
extern T0* T966f47(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_procedure */
extern void T966f83(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T966f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.is_builtin_special_extend */
extern T1 T845f38(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_special_put */
extern T1 T845f37(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T966f30p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.seeded_dynamic_procedure */
extern T0* T838f33(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.put_procedure */
extern void T838f78(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.new_dynamic_procedure */
extern T0* T838f32(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_tuple_label */
extern T1 T889f8(TC* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.is_tuple_label */
extern T1 T1862f6(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.is_tuple_label */
extern T1 T736f6(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_tuple_label */
extern T1 T726f15(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1814f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T1814f17ot1(TC* ac, T0* a1);
extern T1 T1814f17ot2(TC* ac, T0* a1);
/* ET_SYSTEM_PROCESSOR.is_ise */
extern T1 T66f44(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.is_ise */
extern T1 T853f46(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1814f17p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T1814f17p1ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.count */
extern T6 T1050f2(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.dynamic_types */
extern T0* T1050f4(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.dynamic_types */
extern T0* T969f24(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_types */
extern T0* T1049f66(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_types */
extern T0* T1048f66(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_types */
extern T0* T894f63(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_types */
extern T0* T966f65(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.dynamic_types */
extern T0* T838f62(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type_from_type_set */
extern void T924f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type */
extern void T924f15(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1050f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1050f17p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T1050f17p1ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T1050f12(TC* ac, T0* C, T0* a1);
extern T1 T1050f12ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T1050f12p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T1050f14(TC* ac, T0* C, T0* a1);
extern T1 T1050f14ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T1050f14p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_type_from_type_set */
extern void T1049f87(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_type_from_type_set */
extern void T1048f87(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.put_type_from_type_set */
extern void T894f88(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.put_type_from_type_set */
extern void T966f90(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRIMARY_TYPE.put_type_from_type_set */
extern void T838f86(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SECONDARY_TYPE.put_type_from_type_set */
extern void T969f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET.dynamic_type */
extern T0* T1050f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.force_last */
extern void T1652f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].force */
extern void T1959s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].fill_with */
extern void T1958f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].extend */
extern void T1958f8(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.fixed_array */
extern T0* T1652f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].default_create */
extern T0* T1959c3(TC* ac);
/* ET_DYNAMIC_TARGET_LIST.resize */
extern void T1652f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T1959s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T1958f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.new_capacity */
extern T6 T1652f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.capacity */
extern T6 T1652f7(TC* ac, T0* C);
/* ET_DYNAMIC_TARGET_LIST.has */
extern T1 T1652f3(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.index_of */
extern T6 T1652f5(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.put_last */
extern void T1652f10(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.make_with_capacity */
extern T0* T1652c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].make */
extern T0* T1959s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_TARGET].make_empty */
extern T0* T1958c5(TC* ac, T6 a1);
/* ET_DYNAMIC_SECONDARY_TYPE.put_target */
extern void T969f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SECONDARY_TYPE.is_never_void */
extern T1 T969f19(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.put_target */
extern void T1049f86(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.is_never_void */
extern T1 T1049f37(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_target */
extern void T1048f86(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_never_void */
extern T1 T1048f37(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.put_target */
extern void T894f87(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.is_never_void */
extern T1 T894f37(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.put_target */
extern void T966f89(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.is_never_void */
extern T1 T966f39(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.put_target */
extern void T838f82(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.is_never_void */
extern T1 T838f27(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_expanded */
extern T1 T1049f71(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_expanded */
extern T1 T1048f29(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_expanded */
extern T1 T894f67(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_expanded */
extern T1 T966f70(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_expanded */
extern T1 T838f44(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.static_type */
extern T0* T1814f1(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.static_type */
extern T0* T924f1(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.static_type */
extern T0* T1050f1(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.static_type */
extern T0* T1049f52(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.static_type */
extern T0* T1048f53(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.static_type */
extern T0* T894f58(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.static_type */
extern T0* T966f59(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.static_type */
extern T0* T838f57(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.static_type */
extern T0* T969f6(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.put */
extern void T839f12(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PRECURSOR.is_attribute */
extern T1 T860f35(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_builtin_attribute */
extern T1 T1048f38(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_TUPLE_TYPE.is_builtin_attribute */
extern T1 T894f45(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_SPECIAL_TYPE.is_builtin_attribute */
extern T1 T966f45(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_PRIMARY_TYPE.is_builtin_attribute */
extern T1 T838f49(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_EXTERNAL_PROCEDURE.is_attribute */
extern T1 T714f58(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_attribute */
extern T1 T713f30(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_attribute */
extern T1 T712f52(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_attribute */
extern T1 T711f33(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin */
extern T1 T860f27(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_attribute */
extern T1 T845f36(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.register_feature_seeds */
extern void T1049f89(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T1049f55(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T1049f55p1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].value */
extern T0* T1270f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1270f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].position_of_key */
extern T6 T1270f24(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.first_seed */
extern T6 T710f26(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.first_seed */
extern T6 T708f23(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.first_seed */
extern T6 T707f26(TC* ac, T0* C);
/* ET_DO_FUNCTION.first_seed */
extern T6 T706f25(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.first_seed */
extern T6 T705f20(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.first_seed */
extern T6 T704f18(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.first_seed */
extern T6 T703f23(TC* ac, T0* C);
/* ET_ATTRIBUTE.first_seed */
extern T6 T702f16(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_map */
extern T0* T1270c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1270f35(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_sparse_container */
extern void T1270f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].set_internal_cursor */
extern void T1270f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].new_cursor */
extern T0* T1270f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, INTEGER_32].make */
extern T0* T1756c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_slots */
extern void T1270f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_clashes */
extern void T1270f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_key_storage */
extern void T1270f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].make */
extern T0* T263s1(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_item_storage */
extern void T1270f48(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].make */
extern T0* T1273s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_FEATURE].make_empty */
extern T0* T1272c5(TC* ac, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.make_with_capacity */
extern T0* T839c10(TC* ac, T6 a1);
/* ET_EXTERNAL_FUNCTION.is_attribute */
extern T1 T710f52(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_attribute */
extern T1 T708f47(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_attribute */
extern T1 T707f50(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_attribute */
extern T1 T706f49(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_attribute */
extern T1 T705f47(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_attribute */
extern T1 T704f45(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_attribute */
extern T1 T703f49(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_attribute */
extern T1 T702f43(TC* ac, T0* C);
/* ET_QUERY_LIST.item */
extern T0* T769f9(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.use_all_attributes */
extern void T1048f85(TC* ac, T0* C, T0* a1);
extern T1 T1048f85ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_query */
extern T0* T1048f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.use_all_attributes */
extern void T894f86(TC* ac, T0* C, T0* a1);
extern T1 T894f86ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_query */
extern T0* T894f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.use_all_attributes */
extern void T966f88(TC* ac, T0* C, T0* a1);
extern T1 T966f88ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_query */
extern T0* T966f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.use_all_attributes */
extern void T838f85(TC* ac, T0* C, T0* a1);
extern T1 T838f85ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.dynamic_query */
extern T0* T838f43(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_set_reference_field_dynamic_types */
extern void T842f24(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_set_reference_field_dynamic_types */
extern void T100f128(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_formal_argument_dynamic_types */
extern void T100f131(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.item */
extern T0* T839f3(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.attribute_count */
extern T6 T1049f5(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.attribute_count */
extern T6 T1048f5(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.attribute_count */
extern T6 T894f5(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.attribute_count */
extern T6 T966f5(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.attribute_count */
extern T6 T838f2(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_reference_field_feature */
extern void T95f113(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_new_type_instance_of_feature */
extern void T95f112(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.attached_type */
extern T0* T1049f10(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.attached_type */
extern T0* T1048f10(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.attached_type */
extern T0* T894f10(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.attached_type */
extern T0* T966f10(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.attached_type */
extern T0* T838f10(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.propagate_type_of_type_result_type */
extern void T95f100(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T842f21(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T100f124(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.meta_type */
extern T0* T1049f7(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.meta_type */
extern T0* T1048f7(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.meta_type */
extern T0* T894f7(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.meta_type */
extern T0* T966f7(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.meta_type */
extern T0* T838f6(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.meta_type */
extern T0* T969f2(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.create_meta_type */
extern void T95f110(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.meta_type */
extern T0* T95f77(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_meta_type */
extern void T1049f76(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_meta_type */
extern void T1048f76(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_meta_type */
extern void T894f74(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_meta_type */
extern void T966f76(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_meta_type */
extern void T838f73(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.set_meta_type */
extern void T969f30(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.dynamic_primary_type */
extern T0* T95f80(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.initialize_dynamic_types */
extern void T95f99(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_DYNAMIC_SYSTEM.propagate_alive_conforming_descendants */
extern void T95f109(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_alive_conforming_descendants */
extern void T842f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].forth */
extern void T862f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_forth */
extern void T862f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T862f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T1636f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_position */
extern void T1636f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T862f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_after */
extern void T1636f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T862f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T862f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_item */
extern T0* T862f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T862f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T862f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_after */
extern T1 T862f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T1636f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].start */
extern void T862f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_start */
extern void T862f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_off */
extern T1 T862f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].off */
extern T1 T1636f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].is_empty */
extern T1 T862f20(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_alive_conforming_descendants */
extern void T100f109(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.propagate_attribute_type_sets */
extern void T95f108(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.initialize_predicate_type */
extern void T95f107(TC* ac, T0* C, T0* a1);
extern T1 T95f107ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_set_rout_disp_final_feature */
extern void T1049f84(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_set_rout_disp_final_feature */
extern void T1048f84(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_attribute_position */
extern void T1049f83(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_FEATURE_LIST.index_of */
extern T6 T839f8(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_attribute_position */
extern void T1048f83(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TUPLE_TYPE.set_attribute_position */
extern void T894f85(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_SPECIAL_TYPE.set_attribute_position */
extern void T966f87(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PRIMARY_TYPE.set_attribute_position */
extern void T838f84(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_CLASS.is_predicate_class */
extern T1 T70f119(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_function_type */
extern void T95f106(TC* ac, T0* C, T0* a1);
extern T1 T95f106ot1(TC* ac, T0* a1);
/* ET_CLASS.is_function_class */
extern T1 T70f118(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_procedure_type */
extern void T95f105(TC* ac, T0* C, T0* a1);
extern T1 T95f105ot1(TC* ac, T0* a1);
/* ET_CLASS.is_procedure_class */
extern T1 T70f117(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_typed_pointer_type */
extern void T95f104(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_typed_pointer_class */
extern T1 T70f116(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_array_type */
extern void T95f103(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_array_class */
extern T1 T70f115(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_special_type */
extern void T95f102(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_special_class */
extern T1 T70f114(TC* ac, T0* C);
/* ET_CLASS.canonical_to_text */
extern T0* T70f76(TC* ac, T0* C);
/* ET_TUPLE_TYPE.canonical_to_text */
extern T0* T183f13(TC* ac, T0* C);
/* ET_CLASS_TYPE.canonical_to_text */
extern T0* T102f13(TC* ac, T0* C);
/* ET_CLASS.has_interface_error */
extern T1 T70f62(TC* ac, T0* C);
/* ET_CLASS.interface_checked */
extern T1 T70f61(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_fatal_error */
extern void T95f98(TC* ac, T0* C);
/* ET_CLASS.has_implementation_error */
extern T1 T70f64(TC* ac, T0* C);
/* ET_CLASS.implementation_checked */
extern T1 T70f63(TC* ac, T0* C);
/* ET_CLASS.process */
extern void T70f296(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class */
extern void T1938f4(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class_type */
extern void T1938f5(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_class_type_validity */
extern void T1938f12(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.process */
extern void T691f100(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_constrained_formal_parameter */
extern void T1938f17(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_constrained_formal_parameter */
extern void T1937f20(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_constrained_formal_parameter */
extern void T1936f17(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_constrained_formal_parameter */
extern void T1935f17(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_constrained_formal_parameter */
extern void T1138f20(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_constrained_formal_parameter */
extern void T1135f20(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1134f31(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_constrained_formal_parameter */
extern void T1129f23(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_constrained_formal_parameter */
extern void T1128f23(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_constrained_formal_parameter */
extern void T1127f33(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1126f23(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_constrained_formal_parameter */
extern void T1125f20(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_constrained_formal_parameter */
extern void T1124f23(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_constrained_formal_parameter */
extern void T1113f46(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_constrained_formal_parameter */
extern void T1112f24(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T864f45(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.process */
extern void T500f96(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter */
extern void T1938f16(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter */
extern void T1937f19(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter */
extern void T1936f16(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter */
extern void T1935f16(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter */
extern void T1138f19(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter */
extern void T1135f19(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1134f30(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter */
extern void T1129f22(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter */
extern void T1128f22(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter */
extern void T1127f32(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1126f22(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter */
extern void T1125f19(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter */
extern void T1124f22(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter */
extern void T1113f45(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_formal_parameter */
extern void T1112f23(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter */
extern void T864f44(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.process */
extern void T848f87(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter_type */
extern void T1938f10(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter_type */
extern void T1937f14(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter_type */
extern void T1936f10(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter_type */
extern void T1935f10(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter_type */
extern void T1138f17(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter_type */
extern void T1128f20(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_formal_parameter_type */
extern void T1112f19(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter_type */
extern void T1129f17(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter_type */
extern void T1113f37(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameter_type_constraint */
extern void T1113f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [INTEGER_32].replace */
extern void T239f21(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_CLASS.formal_parameter_count */
extern T6 T70f184(TC* ac, T0* C);
/* ET_LIKE_CURRENT.type_constraint_type */
extern T0* T199f77(TC* ac, T0* C);
/* ET_TUPLE_TYPE.type_constraint_type */
extern T0* T183f109(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type_constraint_type */
extern T0* T848f66(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.type_constraint_type */
extern T0* T725f64(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_constraint_type */
extern T0* T724f67(TC* ac, T0* C);
/* ET_LIKE_FEATURE.type_constraint_type */
extern T0* T722f64(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.type */
extern T0* T692f1(TC* ac, T0* C);
/* ET_CLASS_TYPE.type_constraint_type */
extern T0* T102f95(TC* ac, T0* C);
/* ET_CLASS.type_constraint_type */
extern T0* T70f209(TC* ac, T0* C);
/* ET_TYPE_CHECKER.process_formal_parameter_type */
extern void T864f29(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1134f20(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1126f14(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter_type */
extern void T1135f11(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter_type */
extern void T1125f11(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter_type */
extern void T1127f21(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter_type */
extern void T1124f12(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.process */
extern void T725f92(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_type */
extern void T1938f9(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_qualified_like_identifier_validity */
extern void T1938f13(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_type */
extern void T1937f13(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_qualified_like_identifier_validity */
extern void T1937f17(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.set_fatal_error */
extern void T1937f18(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_base_class */
extern T0* T691f15(TC* ac, T0* C, T0* a1);
extern T1 T691f15ot1(TC* ac, T0* a1);
extern T1 T691f15ot2(TC* ac, T0* a1);
extern T1 T691f15ot3(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.named_base_class */
extern T0* T183f3(TC* ac, T0* C);
/* ET_CLASS.named_base_class */
extern T0* T70f13(TC* ac, T0* C);
/* ET_CLASS_TYPE.named_base_class */
extern T0* T102f3(TC* ac, T0* C);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.type */
extern T0* T1884f1(TC* ac, T0* C);
/* ET_TUPLE_TYPE.type_constraint */
extern T0* T183f96(TC* ac, T0* C, T6 a1);
/* ET_CLASS.type_constraint */
extern T0* T70f212(TC* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.type_constraint */
extern T0* T1884f4(TC* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.type_constraint */
extern T0* T1671f7(TC* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.item */
extern T0* T1671f13(TC* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.type_constraint */
extern T0* T102f84(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.constraint_base_types */
extern T0* T500f27(TC* ac, T0* C);
/* ET_ECF_LIBRARY.detachable_separate_any_type */
extern T0* T802f21(TC* ac, T0* C);
/* ET_ECF_SYSTEM.detachable_separate_any_type */
extern T0* T87f24(TC* ac, T0* C);
/* ET_SYSTEM.detachable_separate_any_type */
extern T0* T50f23(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter */
extern T0* T506f12(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.formal_parameter */
extern T0* T691f10(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.formal_parameter */
extern T0* T500f5(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.item */
extern T0* T506f11(TC* ac, T0* C, T6 a1);
/* ET_TUPLE_TYPE.root_context */
extern T0* T183f20(TC* ac, T0* C);
/* ET_CLASS_TYPE.root_context */
extern T0* T102f20(TC* ac, T0* C);
/* ET_CLASS.root_context */
extern T0* T70f75(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.root_context */
extern T0* T847f1(TC* ac, T0* C);
/* ET_TUPLE_TYPE.context_base_type_actual */
extern T0* T183f68(TC* ac, T0* C, T6 a1);
/* ET_TUPLE_TYPE.base_type_actual */
extern T0* T183f81(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T183f81ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type */
extern T0* T691f48(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T691f19(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T691f19ot1(TC* ac, T0* a1);
extern T1 T691f19ot2(TC* ac, T0* a1);
extern T1 T691f19ot3(TC* ac, T0* a1);
/* ET_CLASS.type_with_type_mark */
extern T0* T70f105(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.make */
extern T0* T102c130(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.make_generic */
extern T0* T102c131(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.overridden_type_mark */
extern T0* T70f131(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.implicit_type_mark */
extern T0* T81s601(TC* ac, T1 a1, T1 a2, T1 a3, T1 a4, T1 a5, T1 a6);
/* ET_TOKEN_CONSTANTS.implicit_no_type_mark */
extern T0* T81s704(TC* ac);
/* ET_IMPLICIT_TYPE_MARK.make */
extern T0* T176c27(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_reference_type_mark */
extern T0* T81s703(TC* ac);
/* ET_IMPLICIT_TYPE_MARK.set_reference_mark */
extern void T176f33(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_expanded_type_mark */
extern T0* T81s702(TC* ac);
/* ET_IMPLICIT_TYPE_MARK.set_expanded_mark */
extern void T176f32(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_non_separate_type_mark */
extern T0* T81s701(TC* ac);
/* ET_IMPLICIT_TYPE_MARK.set_non_separate_mark */
extern void T176f31(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_non_separate_reference_type_mark */
extern T0* T81s700(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_non_separate_expanded_type_mark */
extern T0* T81s699(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_separate_type_mark */
extern T0* T81s597(TC* ac);
/* ET_IMPLICIT_TYPE_MARK.set_separate_mark */
extern void T176f29(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_separate_reference_type_mark */
extern T0* T81s698(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_separate_expanded_type_mark */
extern T0* T81s697(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_detachable_reference_type_mark */
extern T0* T81s696(TC* ac);
/* ET_IMPLICIT_TYPE_MARK.set_detachable_mark */
extern void T176f30(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_detachable_expanded_type_mark */
extern T0* T81s695(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_detachable_non_separate_reference_type_mark */
extern T0* T81s694(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_detachable_non_separate_expanded_type_mark */
extern T0* T81s693(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_type_mark */
extern T0* T81s692(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_reference_type_mark */
extern T0* T81s691(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_expanded_type_mark */
extern T0* T81s690(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_attached_type_mark */
extern T0* T81s5(TC* ac);
/* ET_IMPLICIT_TYPE_MARK.set_attached_mark */
extern void T176f28(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_attached_reference_type_mark */
extern T0* T81s689(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_attached_expanded_type_mark */
extern T0* T81s688(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_attached_non_separate_type_mark */
extern T0* T81s687(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_attached_non_separate_reference_type_mark */
extern T0* T81s686(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_attached_non_separate_expanded_type_mark */
extern T0* T81s685(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_type_mark */
extern T0* T81s38(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_reference_type_mark */
extern T0* T81s684(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_expanded_type_mark */
extern T0* T81s683(TC* ac);
/* ET_CLASS.tokens */
extern T0* T70s60(TC* ac);
/* ET_CLASS.is_separate */
extern T1 T70f122(TC* ac, T0* C);
/* ET_CLASS.has_separate_mark */
extern T1 T70f133(TC* ac, T0* C);
/* ET_KEYWORD.is_separate */
extern T1 T191f10(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_separate_mark */
extern T1 T324f12(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_separate */
extern T1 T324f74(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separate_mark */
extern T1 T333f12(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separate */
extern T1 T333f74(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separate_mark */
extern T1 T336f7(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separate */
extern T1 T336f16(TC* ac, T0* C);
/* ET_SYMBOL.is_separate_mark */
extern T1 T282f12(TC* ac, T0* C);
/* ET_SYMBOL.is_separate */
extern T1 T282f75(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_separate_mark */
extern T1 T192f4(TC* ac, T0* C);
/* ET_KEYWORD.is_separate_mark */
extern T1 T191f4(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_separate_mark */
extern T1 T176f2(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_separateness_mark */
extern T1 T324f11(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_non_separate_mark */
extern T1 T324f73(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separateness_mark */
extern T1 T333f11(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_non_separate_mark */
extern T1 T333f73(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separateness_mark */
extern T1 T336f6(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_non_separate_mark */
extern T1 T336f15(TC* ac, T0* C);
/* ET_SYMBOL.is_separateness_mark */
extern T1 T282f11(TC* ac, T0* C);
/* ET_SYMBOL.is_non_separate_mark */
extern T1 T282f74(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_separateness_mark */
extern T1 T192f3(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_non_separate_mark */
extern T1 T192f9(TC* ac, T0* C);
/* ET_KEYWORD.is_separateness_mark */
extern T1 T191f20(TC* ac, T0* C);
/* ET_KEYWORD.is_non_separate_mark */
extern T1 T191f9(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_separateness_mark */
extern T1 T176f9(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_expandedness_mark */
extern T1 T324f9(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expandedness_mark */
extern T1 T333f9(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expandedness_mark */
extern T1 T336f4(TC* ac, T0* C);
/* ET_SYMBOL.is_expandedness_mark */
extern T1 T282f9(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_expandedness_mark */
extern T1 T192f10(TC* ac, T0* C);
/* ET_KEYWORD.is_expandedness_mark */
extern T1 T191f15(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_expandedness_mark */
extern T1 T176f7(TC* ac, T0* C);
/* ET_TUPLE_TYPE.type_with_type_mark */
extern T0* T183f27(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.set_tuple_keyword */
extern void T183f125(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.make */
extern T0* T183c124(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.tuple_keyword */
extern T0* T81s612(TC* ac);
/* ET_TUPLE_TYPE.tokens */
extern T0* T183s16(TC* ac);
/* ET_TUPLE_TYPE.overridden_type_mark */
extern T0* T183f7(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_separate */
extern T1 T183f14(TC* ac, T0* C);
/* ET_CLASS_TYPE.type_with_type_mark */
extern T0* T102f27(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.overridden_type_mark */
extern T0* T102f10(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.tokens */
extern T0* T102s17(TC* ac);
/* ET_CLASS_TYPE.is_separate */
extern T1 T102f15(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type_with_type_mark */
extern T0* T848f39(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.make */
extern T0* T848c83(TC* ac, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T848f35(TC* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.overridden_type_mark */
extern T0* T176f13(TC* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.tokens */
extern T0* T176s17(TC* ac);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.overridden_type_mark */
extern T0* T192f17(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.tokens */
extern T0* T192s21(TC* ac);
/* ET_SYMBOL_OPERATOR.overridden_type_mark */
extern T0* T324f14(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.overridden_type_mark */
extern T0* T333f14(TC* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.overridden_type_mark */
extern T0* T336f9(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.overridden_type_mark */
extern T0* T282f15(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.overridden_type_mark */
extern T0* T191f36(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T500f37(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T500f35(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T691f35(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.implementation_class */
extern T0* T848f4(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.implementation_class */
extern T0* T500f3(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.implementation_class */
extern T0* T691f5(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.named_type_with_type_mark */
extern T0* T848f23(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T848f23ot1(TC* ac, T0* a1);
extern T1 T848f23ot2(TC* ac, T0* a1);
extern T1 T848f23ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.tokens */
extern T0* T848s36(TC* ac);
/* ET_QUALIFIED_LIKE_TYPE.named_type_with_type_mark */
extern T0* T725f33(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T725f33ot1(TC* ac, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.keep_first */
extern void T847f65(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].keep_head */
extern void T1279s5(TC* ac, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].keep_head */
extern void T850f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE].set_count */
extern void T850f10(TC* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.fixed_array */
extern T0* T847f4(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].default_create */
extern T0* T1279c3(TC* ac);
/* ET_QUALIFIED_LIKE_TYPE.overridden_type_mark */
extern T0* T725f40(TC* ac, T0* C, T0* a1);
/* ET_ADAPTED_BASE_CLASS_CHECKER.reset_context_if_multiple_constraints */
extern void T886s11(TC* ac, T1 a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.like_0 */
extern T0* T81s919(TC* ac);
/* ET_LIKE_N.make_zero */
extern T0* T1844c42(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.like_keyword */
extern T0* T81s753(TC* ac);
/* ET_KEYWORD.make_like */
extern T0* T191c54(TC* ac);
/* ET_KEYWORD.make_token */
extern void T191f48(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_leaf */
extern void T191f49(TC* ac, T0* C);
/* ET_LIKE_N.tokens */
extern T0* T1844s31(TC* ac);
/* ET_TOKEN_CONSTANTS.detachable_like_current */
extern T0* T81s58(TC* ac);
/* ET_LIKE_CURRENT.make */
extern T0* T199c85(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.current_keyword */
extern T0* T81s602(TC* ac);
/* ET_CURRENT.make */
extern T0* T297c35(TC* ac);
/* ET_CURRENT.make_token */
extern void T297f39(TC* ac, T0* C, T0* a1);
/* ET_CURRENT.make_leaf */
extern void T297f40(TC* ac, T0* C);
/* ET_CURRENT.tokens */
extern T0* T297s11(TC* ac);
/* ET_LIKE_CURRENT.tokens */
extern T0* T199s56(TC* ac);
/* ET_TOKEN_CONSTANTS.detachable_keyword */
extern T0* T81s15(TC* ac);
/* ET_KEYWORD.make_detachable */
extern T0* T191c44(TC* ac);
/* ET_NESTED_TYPE_CONTEXT.is_type_detachable */
extern T1 T847f38(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T847f29(TC* ac, T0* C, T0* a1);
extern T1 T847f29ot1(TC* ac, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.put_last */
extern void T847f57(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].force */
extern void T1279s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_TYPE].fill_with */
extern void T850f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].extend */
extern void T850f9(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_detachable_with_type_mark */
extern T1 T1844f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_N.overridden_type_mark */
extern T0* T1844f30(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.valid_index */
extern T1 T847f55(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T691f25(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T691f25ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_expanded */
extern T1 T691f27(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_expanded */
extern T1 T500f28(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T500f24(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T500f24ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.tokens */
extern T0* T500s36(TC* ac);
/* ET_LIKE_FEATURE.is_type_detachable_with_type_mark */
extern T1 T722f34(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.overridden_type_mark */
extern T0* T722f32(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.item */
extern T0* T497f6(TC* ac, T0* C, T6 a1);
/* ET_CLASS.seeded_feature */
extern T0* T70f199(TC* ac, T0* C, T6 a1);
/* ET_LIKE_FEATURE.index */
extern T6 T722f31(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_like_argument */
extern T1 T722f30(TC* ac, T0* C);
/* ET_IDENTIFIER.is_argument */
extern T1 T303f32(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_type_detachable_with_type_mark */
extern T1 T725f30(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T725f30ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable_with_type_mark */
extern T1 T724f31(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T724f31ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.overridden_type_mark */
extern T0* T724f42(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.adapted_base_class_with_seeded_feature */
extern T0* T691f46(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T691f46ot1(TC* ac, T0* a1);
extern T1 T691f46ot2(TC* ac, T0* a1);
extern T1 T691f46ot3(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.type_constraint_count */
extern T6 T183s95(TC* ac);
/* ET_CLASS.type_constraint_count */
extern T6 T70s211(TC* ac);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.count */
extern T6 T1884s3(TC* ac);
/* ET_BASE_TYPE_CONSTRAINT_LIST.count */
extern T6 T1671f4(TC* ac, T0* C);
/* ET_CLASS_TYPE.type_constraint_count */
extern T6 T102s83(TC* ac);
/* ET_FORMAL_PARAMETER.adapted_base_class_with_seeded_feature */
extern T0* T500f48(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T500f48ot1(TC* ac, T0* a1);
extern T1 T500f48ot2(TC* ac, T0* a1);
extern T1 T500f48ot3(TC* ac, T0* a1);
/* ET_CLASS.adapted_base_class_with_seeded_feature */
extern T0* T70f223(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_TUPLE_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T183f67(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T848f17(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T848f17ot1(TC* ac, T0* a1);
extern T1 T848f17ot2(TC* ac, T0* a1);
extern T1 T848f17ot3(TC* ac, T0* a1);
/* ET_CLASS_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T102f66(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.adapted_base_class_with_named_feature */
extern T0* T691f45(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T691f45ot1(TC* ac, T0* a1);
extern T1 T691f45ot2(TC* ac, T0* a1);
extern T1 T691f45ot3(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.named_feature */
extern T0* T183f112(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_procedure */
extern T0* T183f115(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_procedure */
extern T0* T70f127(TC* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.named_feature */
extern T0* T770f6(TC* ac, T0* C, T0* a1);
extern T1 T770f6ot1(TC* ac, T0* a1);
/* ET_ALIAS_NAME_LIST.has_call_name */
extern T1 T367f6(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.same_call_name */
extern T1 T716f16(TC* ac, T0* C, T0* a1);
extern T1 T716f16ot1(TC* ac, T0* a1);
/* ET_ALIAS_FREE_NAME.string_ */
extern T0* T716s7(TC* ac);
/* ET_ALIAS_FREE_NAME.operator_name */
extern T0* T716f8(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_freeop */
extern T1 T300f35(TC* ac, T0* C);
/* ET_FREE_OPERATOR.tokens */
extern T0* T300s9(TC* ac);
/* ET_ALIAS_FREE_NAME.is_infix_freeop */
extern T1 T716f18(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.tokens */
extern T0* T716s9(TC* ac);
/* ET_ALIAS_NAME.same_call_name */
extern T1 T364f14(TC* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_SYMBOL.is_prefix_not_symbol */
extern T1 T1859f48(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_not_symbol */
extern T1 T333f128(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not_symbol */
extern T1 T747f41(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_not_symbol */
extern T1 T746f41(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_not_symbol */
extern T1 T300f31(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_not_symbol */
extern T1 T309f36(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_not_symbol */
extern T1 T324f109(TC* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_not_symbol */
extern T1 T303f112(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_not_symbol */
extern T1 T716f49(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_not_symbol */
extern T1 T364f76(TC* ac, T0* C);
/* ET_ALIAS_NAME.tokens */
extern T0* T364s79(TC* ac);
/* ET_PARENTHESIS_SYMBOL.is_prefix_not */
extern T1 T1859f47(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_not */
extern T1 T333f127(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not */
extern T1 T747f40(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_not */
extern T1 T746f40(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_not */
extern T1 T300f30(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_not */
extern T1 T309f35(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.tokens */
extern T0* T309s7(TC* ac);
/* ET_SYMBOL_OPERATOR.is_prefix_not */
extern T1 T324f108(TC* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_not */
extern T1 T303f111(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_not */
extern T1 T716f48(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_not */
extern T1 T364f75(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_plus */
extern T1 T1859f46(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_plus */
extern T1 T333f126(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_plus */
extern T1 T747f39(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_plus */
extern T1 T746f39(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_plus */
extern T1 T300f53(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_plus */
extern T1 T309f54(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_plus */
extern T1 T324f130(TC* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_plus */
extern T1 T303f110(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_plus */
extern T1 T716f47(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_plus */
extern T1 T364f21(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_minus */
extern T1 T1859f45(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_minus */
extern T1 T333f125(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_minus */
extern T1 T747f38(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_minus */
extern T1 T746f38(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_minus */
extern T1 T300f52(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_minus */
extern T1 T309f53(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_minus */
extern T1 T324f129(TC* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_minus */
extern T1 T303f109(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_minus */
extern T1 T716f46(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_minus */
extern T1 T364f22(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_dotdot */
extern T1 T1859f44(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_dotdot */
extern T1 T333f124(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_dotdot */
extern T1 T747f37(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_dotdot */
extern T1 T746f37(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_dotdot */
extern T1 T300f51(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_dotdot */
extern T1 T309f52(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_dotdot */
extern T1 T324f128(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_dotdot */
extern T1 T303f108(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_dotdot */
extern T1 T716f45(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_dotdot */
extern T1 T364f74(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_xor_symbol */
extern T1 T1859f43(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_xor_symbol */
extern T1 T333f123(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor_symbol */
extern T1 T747f36(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_xor_symbol */
extern T1 T746f36(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_xor_symbol */
extern T1 T300f50(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_xor_symbol */
extern T1 T309f51(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_xor_symbol */
extern T1 T324f127(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_xor_symbol */
extern T1 T303f107(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_xor_symbol */
extern T1 T716f44(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_xor_symbol */
extern T1 T364f73(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_xor */
extern T1 T1859f42(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_xor */
extern T1 T333f122(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor */
extern T1 T747f35(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_xor */
extern T1 T746f35(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_xor */
extern T1 T300f49(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_xor */
extern T1 T309f50(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_xor */
extern T1 T324f126(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_xor */
extern T1 T303f106(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_xor */
extern T1 T716f43(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_xor */
extern T1 T364f72(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_times */
extern T1 T1859f41(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_times */
extern T1 T333f121(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_times */
extern T1 T747f34(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_times */
extern T1 T746f34(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_times */
extern T1 T300f48(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_times */
extern T1 T309f49(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_times */
extern T1 T324f125(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_times */
extern T1 T303f105(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_times */
extern T1 T716f42(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_times */
extern T1 T364f71(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_power */
extern T1 T1859f40(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_power */
extern T1 T333f120(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_power */
extern T1 T747f33(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_power */
extern T1 T746f33(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_power */
extern T1 T300f47(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_power */
extern T1 T309f48(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_power */
extern T1 T324f124(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_power */
extern T1 T303f104(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_power */
extern T1 T716f41(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_power */
extern T1 T364f70(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_plus */
extern T1 T1859f39(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_plus */
extern T1 T333f119(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_plus */
extern T1 T747f32(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_plus */
extern T1 T746f32(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_plus */
extern T1 T300f46(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_plus */
extern T1 T309f47(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_plus */
extern T1 T324f123(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_plus */
extern T1 T303f103(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_plus */
extern T1 T716f40(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_plus */
extern T1 T364f19(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or_else_symbol */
extern T1 T1859f12(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_else_symbol */
extern T1 T333f101(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or_else_symbol */
extern T1 T747f10(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else_symbol */
extern T1 T746f10(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or_else_symbol */
extern T1 T300f18(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_else_symbol */
extern T1 T309f18(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_else_symbol */
extern T1 T324f91(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or_else_symbol */
extern T1 T303f73(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_else_symbol */
extern T1 T716f39(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or_else_symbol */
extern T1 T364f69(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or_else */
extern T1 T1859f11(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_else */
extern T1 T333f100(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or_else */
extern T1 T747s5(TC* ac);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else */
extern T1 T746f5(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or_else */
extern T1 T300f13(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_else */
extern T1 T309f13(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_else */
extern T1 T324f86(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or_else */
extern T1 T303f72(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_else */
extern T1 T716f38(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or_else */
extern T1 T364f68(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or_symbol */
extern T1 T1859f38(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_symbol */
extern T1 T333f118(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or_symbol */
extern T1 T747f13(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_symbol */
extern T1 T746f13(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or_symbol */
extern T1 T300f21(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_symbol */
extern T1 T309f21(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_symbol */
extern T1 T324f94(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or_symbol */
extern T1 T303f102(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_symbol */
extern T1 T716f37(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or_symbol */
extern T1 T364f67(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or */
extern T1 T1859f37(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or */
extern T1 T333f117(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or */
extern T1 T747f8(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or */
extern T1 T746f8(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or */
extern T1 T300f16(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or */
extern T1 T309f16(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or */
extern T1 T324f89(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or */
extern T1 T303f101(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or */
extern T1 T716f36(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or */
extern T1 T364f66(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_mod */
extern T1 T1859f36(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_mod */
extern T1 T333f116(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_mod */
extern T1 T747f31(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_mod */
extern T1 T746f31(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_mod */
extern T1 T300f45(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_mod */
extern T1 T309f46(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_mod */
extern T1 T324f122(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_mod */
extern T1 T303f100(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_mod */
extern T1 T716f35(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_mod */
extern T1 T364f65(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_minus */
extern T1 T1859f35(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_minus */
extern T1 T333f115(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_minus */
extern T1 T747f30(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_minus */
extern T1 T746f30(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_minus */
extern T1 T300f44(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_minus */
extern T1 T309f45(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_minus */
extern T1 T324f121(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_minus */
extern T1 T303f99(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_minus */
extern T1 T716f34(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_minus */
extern T1 T364f20(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_lt */
extern T1 T1859f34(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_lt */
extern T1 T333f114(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_lt */
extern T1 T747f29(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_lt */
extern T1 T746f29(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_lt */
extern T1 T300f43(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_lt */
extern T1 T309f44(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_lt */
extern T1 T324f120(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_lt */
extern T1 T303f98(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_lt */
extern T1 T716f33(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_lt */
extern T1 T364f64(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_le */
extern T1 T1859f33(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_le */
extern T1 T333f113(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_le */
extern T1 T747f28(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_le */
extern T1 T746f28(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_le */
extern T1 T300f42(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_le */
extern T1 T309f43(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_le */
extern T1 T324f119(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_le */
extern T1 T303f97(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_le */
extern T1 T716f32(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_le */
extern T1 T364f63(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_implies_symbol */
extern T1 T1859f10(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_implies_symbol */
extern T1 T333f99(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies_symbol */
extern T1 T747f11(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_implies_symbol */
extern T1 T746f11(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_implies_symbol */
extern T1 T300f19(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_implies_symbol */
extern T1 T309f19(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_implies_symbol */
extern T1 T324f92(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_implies_symbol */
extern T1 T303f71(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_implies_symbol */
extern T1 T716f31(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_implies_symbol */
extern T1 T364f62(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_implies */
extern T1 T1859f9(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_implies */
extern T1 T333f98(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies */
extern T1 T747f6(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_implies */
extern T1 T746f6(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_implies */
extern T1 T300f14(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_implies */
extern T1 T309f14(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_implies */
extern T1 T324f87(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_implies */
extern T1 T303f70(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_implies */
extern T1 T716f30(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_implies */
extern T1 T364f61(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_gt */
extern T1 T1859f32(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_gt */
extern T1 T333f112(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_gt */
extern T1 T747f27(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_gt */
extern T1 T746f27(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_gt */
extern T1 T300f41(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_gt */
extern T1 T309f42(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_gt */
extern T1 T324f118(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_gt */
extern T1 T303f96(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_gt */
extern T1 T716f29(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_gt */
extern T1 T364f60(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_ge */
extern T1 T1859f31(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_ge */
extern T1 T333f111(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_ge */
extern T1 T747f26(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_ge */
extern T1 T746f26(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_ge */
extern T1 T300f40(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_ge */
extern T1 T309f41(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_ge */
extern T1 T324f117(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_ge */
extern T1 T303f95(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_ge */
extern T1 T716f28(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_ge */
extern T1 T364f59(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_divide */
extern T1 T1859f30(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_divide */
extern T1 T333f110(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_divide */
extern T1 T747f25(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_divide */
extern T1 T746f25(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_divide */
extern T1 T300f39(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_divide */
extern T1 T309f40(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_divide */
extern T1 T324f116(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_divide */
extern T1 T303f94(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_divide */
extern T1 T716f27(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_divide */
extern T1 T364f58(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_div */
extern T1 T1859f29(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_div */
extern T1 T333f109(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_div */
extern T1 T747f24(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_div */
extern T1 T746f24(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_div */
extern T1 T300f38(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_div */
extern T1 T309f39(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_div */
extern T1 T324f115(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_div */
extern T1 T303f93(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_div */
extern T1 T716f26(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_div */
extern T1 T364f57(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and_then_symbol */
extern T1 T1859f8(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_then_symbol */
extern T1 T333f97(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then_symbol */
extern T1 T747f9(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and_then_symbol */
extern T1 T746f9(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and_then_symbol */
extern T1 T300f17(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_then_symbol */
extern T1 T309f17(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_then_symbol */
extern T1 T324f90(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and_then_symbol */
extern T1 T303f69(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_then_symbol */
extern T1 T716f25(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and_then_symbol */
extern T1 T364f56(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and_then */
extern T1 T1859f7(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_then */
extern T1 T333f96(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then */
extern T1 T747f4(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and_then */
extern T1 T746s4(TC* ac);
/* ET_FREE_OPERATOR.is_infix_and_then */
extern T1 T300f12(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_then */
extern T1 T309f12(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_then */
extern T1 T324f85(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and_then */
extern T1 T303f68(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_then */
extern T1 T716f24(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and_then */
extern T1 T364f55(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and_symbol */
extern T1 T1859f28(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_symbol */
extern T1 T333f108(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_symbol */
extern T1 T747f12(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and_symbol */
extern T1 T746f12(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and_symbol */
extern T1 T300f20(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_symbol */
extern T1 T309f20(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_symbol */
extern T1 T324f93(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and_symbol */
extern T1 T303f92(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_symbol */
extern T1 T716f23(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and_symbol */
extern T1 T364f54(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and */
extern T1 T1859f27(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and */
extern T1 T333f107(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and */
extern T1 T747f7(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and */
extern T1 T746f7(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and */
extern T1 T300f15(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and */
extern T1 T309f15(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and */
extern T1 T324f88(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and */
extern T1 T303f91(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and */
extern T1 T716f22(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and */
extern T1 T364f53(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_parenthesis */
extern T1 T1859s26(TC* ac);
/* ET_BRACKET_SYMBOL.is_parenthesis */
extern T1 T333f106(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_parenthesis */
extern T1 T747f23(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_parenthesis */
extern T1 T746f23(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_parenthesis */
extern T1 T300f37(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_parenthesis */
extern T1 T309f38(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_parenthesis */
extern T1 T324f114(TC* ac, T0* C);
/* ET_IDENTIFIER.is_parenthesis */
extern T1 T303f90(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_parenthesis */
extern T1 T716f11(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_parenthesis */
extern T1 T364f9(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_bracket */
extern T1 T1859f25(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_bracket */
extern T1 T333s105(TC* ac);
/* ET_INFIX_OR_ELSE_OPERATOR.is_bracket */
extern T1 T747f22(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_bracket */
extern T1 T746f22(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_bracket */
extern T1 T300f36(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_bracket */
extern T1 T309f37(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_bracket */
extern T1 T324f113(TC* ac, T0* C);
/* ET_IDENTIFIER.is_bracket */
extern T1 T303f89(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_bracket */
extern T1 T716f10(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_bracket */
extern T1 T364f8(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.alias_names */
extern T0* T714f41(TC* ac, T0* C);
/* ET_IDENTIFIER.alias_names */
extern T0* T303f57(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.alias_names */
extern T0* T713f41(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.alias_names */
extern T0* T712f40(TC* ac, T0* C);
/* ET_DO_PROCEDURE.alias_names */
extern T0* T711f43(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.hash_code */
extern T6 T714f19(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.hash_code */
extern T6 T713f4(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.hash_code */
extern T6 T712f19(TC* ac, T0* C);
/* ET_DO_PROCEDURE.hash_code */
extern T6 T711f2(TC* ac, T0* C);
/* ET_CLASS.named_feature */
extern T0* T70f204(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.named_feature */
extern T0* T1884f11(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.named_procedure */
extern T0* T1884f14(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_RENAME_LIST.index_of_old_name */
extern T6 T421f10(TC* ac, T0* C, T0* a1);
/* ET_RENAME.rename_pair */
extern T0* T696f5(TC* ac, T0* C);
/* ET_CONSTRAINT_RENAME_LIST.rename_pair */
extern T0* T421f7(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_RENAME_LIST.item */
extern T0* T421f9(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_RENAME_LIST.index_of_new_name */
extern T6 T421f8(TC* ac, T0* C, T0* a1);
extern T1 T421f8ot1(TC* ac, T0* a1);
/* ET_CLASS_TYPE.named_feature */
extern T0* T102f94(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_procedure */
extern T0* T102f98(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.adapted_base_class_with_named_feature */
extern T0* T500f47(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T500f47ot1(TC* ac, T0* a1);
extern T1 T500f47ot2(TC* ac, T0* a1);
extern T1 T500f47ot3(TC* ac, T0* a1);
/* ET_CLASS.adapted_base_class_with_named_feature */
extern T0* T70f222(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.adapted_base_class_with_named_feature */
extern T0* T183f66(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.adapted_base_class_with_named_feature */
extern T0* T848f16(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T848f16ot1(TC* ac, T0* a1);
extern T1 T848f16ot2(TC* ac, T0* a1);
extern T1 T848f16ot3(TC* ac, T0* a1);
/* ET_CLASS_TYPE.adapted_base_class_with_named_feature */
extern T0* T102f65(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.name */
extern T0* T724f39(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.seed */
extern T6 T724f38(TC* ac, T0* C);
/* ET_LIKE_CURRENT.is_type_detachable_with_type_mark */
extern T1 T199f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T183f42(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_detachable_with_type_mark */
extern T1 T70f156(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T102f42(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.overridden_type_mark */
extern T0* T199f14(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T848f29(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T848f29ot1(TC* ac, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.put */
extern void T847f66(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.item */
extern T0* T847f11(TC* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.remove_last */
extern void T847f62(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.tokens */
extern T0* T847s31(TC* ac);
/* ET_NESTED_TYPE_CONTEXT.last */
extern T0* T847f30(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_type_detachable_with_type_mark */
extern T1 T183f50(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_detachable_with_type_mark */
extern T1 T102f49(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_detachable_with_type_mark */
extern T1 T70f172(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.attached_like_current */
extern T0* T81s920(TC* ac);
/* ET_TOKEN_CONSTANTS.attached_keyword */
extern T0* T81s914(TC* ac);
/* ET_KEYWORD.make_attached */
extern T0* T191c60(TC* ac);
/* ET_ADAPTED_BASE_CLASS_CHECKER.tokens */
extern T0* T886s7(TC* ac);
/* ET_NESTED_TYPE_CONTEXT.is_type_attached */
extern T1 T847f36(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T847f52(TC* ac, T0* C, T0* a1);
extern T1 T847f52ot1(TC* ac, T0* a1);
/* ET_LIKE_N.is_type_attached_with_type_mark */
extern T1 T1844f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T691f30(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T691f30ot1(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.is_type_attached */
extern T1 T183f102(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_attached */
extern T1 T70f253(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.is_type_attached */
extern T1 T1884f7(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.has_attached_type */
extern T1 T1671f9(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_attached */
extern T1 T102f85(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.is_type_expanded */
extern T1 T1884f6(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.has_expanded_type */
extern T1 T1671f8(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T500f31(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T500f31ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.is_type_attached_with_type_mark */
extern T1 T722f54(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_attached_with_type_mark */
extern T1 T725f54(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T725f54ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_attached_with_type_mark */
extern T1 T724f57(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T724f57ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.is_type_attached_with_type_mark */
extern T1 T199f51(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_is_type_attached_with_type_mark */
extern T1 T183f91(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_attached_with_type_mark */
extern T1 T102f106(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_attached_with_type_mark */
extern T1 T70f235(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T848f41(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T848f41ot1(TC* ac, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.force_last */
extern void T847f61(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.resize */
extern void T847f64(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].aliased_resized_area */
extern T0* T1279s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE].aliased_resized_area */
extern T0* T850f4(TC* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.new_capacity */
extern T6 T847f12(TC* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.capacity */
extern T6 T847f10(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.as_nested_type_context */
extern T0* T847f7(TC* ac, T0* C);
/* ET_TUPLE_TYPE.as_nested_type_context */
extern T0* T183f33(TC* ac, T0* C);
/* ET_TUPLE_TYPE.to_nested_type_context */
extern T0* T183f34(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.make_with_capacity */
extern T0* T847c56(TC* ac, T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.make_ast_list_with_capacity */
extern void T847f59(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].make */
extern T0* T1279s1(TC* ac, T6 a1);
/* SPECIAL [ET_TYPE].make_empty */
extern T0* T850c5(TC* ac, T6 a1);
/* ET_CLASS.as_nested_type_context */
extern T0* T70f140(TC* ac, T0* C);
/* ET_CLASS.to_nested_type_context */
extern T0* T70f141(TC* ac, T0* C);
/* ET_CLASS_TYPE.as_nested_type_context */
extern T0* T102f34(TC* ac, T0* C);
/* ET_CLASS_TYPE.to_nested_type_context */
extern T0* T102f35(TC* ac, T0* C);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.base_class */
extern T0* T1884f10(TC* ac, T0* C);
/* ET_LIKE_FEATURE.adapted_base_class_with_seeded_feature */
extern T0* T722f40(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_LIKE_FEATURE.tokens */
extern T0* T722s7(TC* ac);
/* ET_QUALIFIED_LIKE_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T725f17(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T725f17ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T724f41(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T724f41ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.tokens */
extern T0* T724s9(TC* ac);
/* ET_LIKE_CURRENT.adapted_base_class_with_seeded_feature */
extern T0* T199f37(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.adapted_base_class_with_seeded_feature */
extern T0* T847f48(TC* ac, T0* C, T6 a1);
extern T1 T847f48ot1(TC* ac, T0* a1);
/* ET_LIKE_N.adapted_base_class_with_seeded_feature */
extern T0* T1844f23(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_TUPLE_TYPE.context_adapted_base_class_with_seeded_feature */
extern T0* T183f87(TC* ac, T0* C, T6 a1);
/* ET_CLASS.context_adapted_base_class_with_seeded_feature */
extern T0* T70f231(TC* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.context_adapted_base_class_with_seeded_feature */
extern T0* T102f102(TC* ac, T0* C, T6 a1);
/* ET_TUPLE_TYPE.named_query */
extern T0* T183f113(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.named_query */
extern T0* T1884f12(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_query */
extern T0* T102f96(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_query */
extern T0* T70f126(TC* ac, T0* C, T0* a1);
/* ET_QUERY_LIST.named_feature */
extern T0* T769f8(TC* ac, T0* C, T0* a1);
extern T1 T769f8ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_FUNCTION.alias_names */
extern T0* T710f34(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.alias_names */
extern T0* T708f54(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.alias_names */
extern T0* T707f58(TC* ac, T0* C);
/* ET_DO_FUNCTION.alias_names */
extern T0* T706f56(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.alias_names */
extern T0* T705f28(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.alias_names */
extern T0* T704f26(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.alias_names */
extern T0* T703f31(TC* ac, T0* C);
/* ET_ATTRIBUTE.alias_names */
extern T0* T702f24(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.hash_code */
extern T6 T710f21(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.hash_code */
extern T6 T708f19(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.hash_code */
extern T6 T707f21(TC* ac, T0* C);
/* ET_DO_FUNCTION.hash_code */
extern T6 T706f21(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.hash_code */
extern T6 T705f15(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.hash_code */
extern T6 T704f14(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.hash_code */
extern T6 T703f19(TC* ac, T0* C);
/* ET_ATTRIBUTE.hash_code */
extern T6 T702f12(TC* ac, T0* C);
/* ET_LIKE_FEATURE.adapted_base_class_with_named_feature */
extern T0* T722f39(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.adapted_base_class_with_named_feature */
extern T0* T725f16(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T725f16ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.adapted_base_class_with_named_feature */
extern T0* T724f40(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T724f40ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.adapted_base_class_with_named_feature */
extern T0* T199f36(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.adapted_base_class_with_named_feature */
extern T0* T847f47(TC* ac, T0* C, T0* a1);
extern T1 T847f47ot1(TC* ac, T0* a1);
/* ET_LIKE_N.adapted_base_class_with_named_feature */
extern T0* T1844f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_adapted_base_class_with_named_feature */
extern T0* T183f86(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_adapted_base_class_with_named_feature */
extern T0* T70f230(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_adapted_base_class_with_named_feature */
extern T0* T102f101(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.name */
extern T0* T725f39(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.tokens */
extern T0* T725s38(TC* ac);
/* ET_QUALIFIED_LIKE_TYPE.seed */
extern T6 T725f37(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type_with_type_mark */
extern T0* T724f34(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T724f34ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.named_type_with_type_mark */
extern T0* T722f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.named_type_with_type_mark */
extern T0* T199f32(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T847f23(TC* ac, T0* C, T0* a1);
extern T1 T847f23ot1(TC* ac, T0* a1);
/* ET_LIKE_N.named_type_with_type_mark */
extern T0* T1844f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_named_type_with_type_mark */
extern T0* T183f63(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_named_type_with_type_mark */
extern T0* T70f195(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_named_type_with_type_mark */
extern T0* T102f62(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_type_with_type_mark */
extern T0* T70f185(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.named_type_with_type_mark */
extern T0* T183f55(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.named_type_with_type_mark */
extern T0* T102f54(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T500f18(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T500f18ot1(TC* ac, T0* a1);
extern T1 T500f18ot2(TC* ac, T0* a1);
extern T1 T500f18ot3(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T691f34(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_type */
extern T0* T500f50(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_type */
extern T0* T848f32(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_type */
extern T0* T725f34(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type */
extern T0* T724f35(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_type */
extern T0* T722f24(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_type */
extern T0* T199f27(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_type */
extern T0* T70f181(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_type */
extern T0* T183f52(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_type */
extern T0* T102f51(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_root_context */
extern T1 T70f74(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_root_context */
extern T1 T102f19(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_root_context */
extern T1 T847f22(TC* ac, T0* C);
extern T1 T847f22ot1(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.is_root_context */
extern T1 T183f19(TC* ac, T0* C);
/* ET_CLASS_TYPE.context_base_type_actual */
extern T0* T102f67(TC* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.base_type_actual */
extern T0* T102f87(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T102f87ot1(TC* ac, T0* a1);
/* ET_CLASS.context_base_type_actual */
extern T0* T70f200(TC* ac, T0* C, T6 a1);
/* ET_CLASS.base_type_actual */
extern T0* T70f214(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual */
extern T0* T847f32(TC* ac, T0* C, T6 a1);
extern T1 T847f32ot1(TC* ac, T0* a1);
/* ET_LIKE_N.base_type_actual */
extern T0* T1844f17(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual */
extern T0* T691f59(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T691f59ot1(TC* ac, T0* a1);
extern T1 T691f59ot2(TC* ac, T0* a1);
extern T1 T691f59ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.base_type_actual */
extern T0* T500f61(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T500f61ot1(TC* ac, T0* a1);
extern T1 T500f61ot2(TC* ac, T0* a1);
extern T1 T500f61ot3(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.base_type_actual */
extern T0* T722f67(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual */
extern T0* T725f66(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T725f66ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual */
extern T0* T724f69(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T724f69ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.base_type_actual */
extern T0* T199f61(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual */
extern T0* T848f60(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T848f60ot1(TC* ac, T0* a1);
extern T1 T848f60ot2(TC* ac, T0* a1);
extern T1 T848f60ot3(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.context_base_type_actual_count */
extern T6 T183f56(TC* ac, T0* C);
/* ET_TUPLE_TYPE.base_type_actual_count */
extern T6 T183f46(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.actual_parameter_count */
extern T6 T183f51(TC* ac, T0* C);
/* ET_CLASS_TYPE.context_base_type_actual_count */
extern T6 T102f55(TC* ac, T0* C);
/* ET_CLASS_TYPE.base_type_actual_count */
extern T6 T102f46(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.actual_parameter_count */
extern T6 T102f50(TC* ac, T0* C);
/* ET_CLASS.context_base_type_actual_count */
extern T6 T70f188(TC* ac, T0* C);
/* ET_CLASS.base_type_actual_count */
extern T6 T70f178(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual_count */
extern T6 T847f24(TC* ac, T0* C);
extern T1 T847f24ot1(TC* ac, T0* a1);
/* ET_LIKE_N.base_type_actual_count */
extern T6 T1844f8(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T691f20(TC* ac, T0* C, T0* a1);
extern T1 T691f20ot1(TC* ac, T0* a1);
extern T1 T691f20ot2(TC* ac, T0* a1);
extern T1 T691f20ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T500f19(TC* ac, T0* C, T0* a1);
extern T1 T500f19ot1(TC* ac, T0* a1);
extern T1 T500f19ot2(TC* ac, T0* a1);
extern T1 T500f19ot3(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.base_type_actual_count */
extern T6 T722f15(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual_count */
extern T6 T725f20(TC* ac, T0* C, T0* a1);
extern T1 T725f20ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual_count */
extern T6 T724f19(TC* ac, T0* C, T0* a1);
extern T1 T724f19ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.base_type_actual_count */
extern T6 T199f20(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual_count */
extern T6 T848f24(TC* ac, T0* C, T0* a1);
extern T1 T848f24ot1(TC* ac, T0* a1);
extern T1 T848f24ot2(TC* ac, T0* a1);
extern T1 T848f24ot3(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.tokens */
extern T0* T691s29(TC* ac);
/* ET_CONSTRAINED_FORMAL_PARAMETER.index */
extern T6 T691f7(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T848f3(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.index */
extern T6 T500f2(TC* ac, T0* C);
/* ET_CLASS.ancestor */
extern T0* T70f186(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.base_type */
extern T0* T778f6(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_unknown */
extern T1 T70f65(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_unknown */
extern T1 T89f59(TC* ac, T0* C);
/* ET_CLUSTER.is_unknown */
extern T1 T67f18(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_unknown */
extern T1 T262s5(TC* ac);
/* ET_NONE_GROUP.is_unknown */
extern T1 T198f9(TC* ac, T0* C);
/* ET_TUPLE_TYPE.base_class */
extern T0* T183f11(TC* ac, T0* C);
/* ET_CLASS.base_class */
extern T0* T70f109(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_class */
extern T0* T847f20(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.named_base_class */
extern T0* T847f15(TC* ac, T0* C);
extern T1 T847f15ot1(TC* ac, T0* a1);
/* ET_LIKE_N.named_base_class */
extern T0* T1844f14(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_base_class */
extern T0* T500f14(TC* ac, T0* C, T0* a1);
extern T1 T500f14ot1(TC* ac, T0* a1);
extern T1 T500f14ot2(TC* ac, T0* a1);
extern T1 T500f14ot3(TC* ac, T0* a1);
/* ET_CLASS.named_base_class_in_context */
extern T0* T70f171(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_base_class */
extern T0* T722f27(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_base_class_in_context */
extern T0* T183f10(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_base_class */
extern T0* T848f20(TC* ac, T0* C, T0* a1);
extern T1 T848f20ot1(TC* ac, T0* a1);
extern T1 T848f20ot2(TC* ac, T0* a1);
extern T1 T848f20ot3(TC* ac, T0* a1);
/* ET_CLASS_TYPE.named_base_class_in_context */
extern T0* T102f8(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_base_class */
extern T0* T725f27(TC* ac, T0* C, T0* a1);
extern T1 T725f27ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_base_class */
extern T0* T724f28(TC* ac, T0* C, T0* a1);
extern T1 T724f28ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.named_base_class */
extern T0* T199f12(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_type */
extern void T1936f9(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_qualified_like_identifier_validity */
extern void T1936f14(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_type */
extern void T1935f9(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_qualified_like_identifier_validity */
extern void T1935f13(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_qualified_like_type */
extern void T1138f16(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_qualified_like_type */
extern void T1128f19(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_qualified_like_type */
extern void T1112f18(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_type */
extern void T1112f21(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_like_type_validity */
extern void T1112f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3a_error */
extern void T63f608(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_validity_error */
extern void T63f239(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.set_has_eiffel_error */
extern void T63f238(TC* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_info */
extern void T63f197(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info_message */
extern void T63f199(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vhpr3a */
extern T0* T1445c1286(TC* ac, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.set_compilers */
extern void T1445f931(TC* ac, T0* C, T1 a1);
/* ET_QUALIFIED_LIKE_TYPE.to_text */
extern T0* T725f70(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.append_to_string */
extern void T725f89(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_to_string */
extern void T722f93(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_to_string */
extern void T724f93(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_to_string */
extern void T691f92(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.upper_name */
extern T0* T691f58(TC* ac, T0* C);
/* ET_IDENTIFIER.upper_name */
extern T0* T303f7(TC* ac, T0* C);
/* UC_UTF8_STRING.as_upper */
extern T0* T1066f39(TC* ac, T0* C);
/* UC_UTF8_STRING.to_upper */
extern void T1066f91(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code */
extern T6 T906s29(TC* ac, T6 a1);
/* UC_UNICODE_ROUTINES.upper_codes */
extern T0* T906s30(TC* ac);
/* UC_UNICODE_ROUTINES.empty_upper_code_plane */
extern T0* T906s33(TC* ac);
/* UC_UNICODE_ROUTINES.empty_upper_code_segment */
extern T0* T906s40(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_1 */
extern T0* T906s32(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_1_segment_4 */
extern T0* T906s51(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0 */
extern T0* T906s31(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_255 */
extern T0* T906s50(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_167 */
extern T0* T906s49(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_166 */
extern T0* T906s48(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_45 */
extern T0* T906s47(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_44 */
extern T0* T906s46(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_36 */
extern T0* T906s45(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_33 */
extern T0* T906s44(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_31 */
extern T0* T906s43(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_30 */
extern T0* T906s42(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_29 */
extern T0* T906s41(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_5 */
extern T0* T906s39(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_4 */
extern T0* T906s38(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_3 */
extern T0* T906s37(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_2 */
extern T0* T906s36(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_1 */
extern T0* T906s35(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_0 */
extern T0* T906s34(TC* ac);
/* UC_STRING.as_upper */
extern T0* T909f58(TC* ac, T0* C);
/* UC_STRING.to_upper */
extern void T909f91(TC* ac, T0* C);
/* STRING_8.as_upper */
extern T0* T17f40(TC* ac, T0* C);
/* STRING_8.to_upper */
extern void T17f80(TC* ac, T0* C);
/* STRING_8.to_upper_area */
extern void T17f83(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* CHARACTER_8.upper */
extern T2 T2f25(TC* ac, volatile T2* C);
/* CHARACTER_8.upper_value */
extern T0* T2f31(TC* ac, volatile T2* C);
/* ET_FORMAL_PARAMETER.append_to_string */
extern void T500f87(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.upper_name */
extern T0* T500f60(TC* ac, T0* C);
/* ET_CLASS.append_to_string */
extern void T70f310(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_to_string */
extern void T506f32(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.label */
extern T0* T691f56(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.label */
extern T0* T500f55(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.actual_parameter */
extern T0* T506f18(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.actual_parameter */
extern T0* T691f33(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type */
extern T0* T691f32(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.actual_parameter */
extern T0* T500f34(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.type */
extern T0* T500f33(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.is_empty */
extern T1 T506f7(TC* ac, T0* C);
/* ET_TUPLE_TYPE.append_to_string */
extern void T183f127(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_to_string */
extern void T2159f25(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.label */
extern T0* T1448f5(TC* ac, T0* C);
/* ET_IDENTIFIER.identifier */
extern T0* T303f58(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.label */
extern T0* T848f34(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.label */
extern T0* T725f36(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.label */
extern T0* T724f37(TC* ac, T0* C);
/* ET_LIKE_FEATURE.label */
extern T0* T722f26(TC* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.label */
extern T0* T720f6(TC* ac, T0* C);
/* ET_LIKE_CURRENT.label */
extern T0* T199f29(TC* ac, T0* C);
/* ET_TUPLE_TYPE.label */
extern T0* T183f54(TC* ac, T0* C);
/* ET_CLASS_TYPE.label */
extern T0* T102f53(TC* ac, T0* C);
/* ET_CLASS.label */
extern T0* T70f183(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.actual_parameter */
extern T0* T2159f19(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T201f17(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T2158f19(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.actual_parameter */
extern T0* T185f5(TC* ac, T0* C, T6 a1);
/* ET_LIKE_FEATURE.actual_parameter */
extern T0* T722f9(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.actual_parameter */
extern T0* T848f8(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.actual_parameter */
extern T0* T725f10(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.actual_parameter */
extern T0* T724f13(TC* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.actual_parameter */
extern T0* T1448f6(TC* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.actual_parameter */
extern T0* T720f4(TC* ac, T0* C);
/* ET_TUPLE_TYPE.actual_parameter */
extern T0* T183f49(TC* ac, T0* C);
/* ET_CLASS.actual_parameter */
extern T0* T70f170(TC* ac, T0* C);
/* ET_LIKE_CURRENT.actual_parameter */
extern T0* T199f19(TC* ac, T0* C);
/* ET_CLASS_TYPE.actual_parameter */
extern T0* T102f48(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.item */
extern T0* T185f6(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.append_to_string */
extern void T185f32(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.is_empty */
extern T1 T2159f4(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T185f10(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.append_to_string */
extern void T848f84(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.upper_name */
extern T0* T848f42(TC* ac, T0* C);
/* ET_CLASS_TYPE.append_to_string */
extern void T102f133(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T201f20(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T2158f22(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T201f5(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T2158f18(TC* ac, T0* C);
/* ET_LIKE_CURRENT.append_to_string */
extern void T199f87(TC* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.append_to_string_with_space */
extern void T176f34(TC* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.expandedness_text */
extern T0* T176f12(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_explicit_expandedness_mark */
extern T1 T176f19(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_reference */
extern T1 T176f26(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_expanded */
extern T1 T176f25(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.separateness_text */
extern T0* T176f11(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_explicit_separateness_mark */
extern T1 T176f18(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_separate */
extern T1 T176f24(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.attachment_text */
extern T0* T176f10(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_explicit_attachment_mark */
extern T1 T176f16(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_question_mark */
extern T1 T176f23(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_bang */
extern T1 T176f22(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_detachable */
extern T1 T176f21(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_attached */
extern T1 T176f20(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.append_to_string_with_space */
extern void T192f25(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.expandedness_text */
extern T0* T192f16(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_explicit_expandedness_mark */
extern T1 T192f23(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.separateness_text */
extern T0* T192f15(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_explicit_separateness_mark */
extern T1 T192f22(TC* ac, T0* C);
/* ET_KEYWORD.is_explicit_separateness_mark */
extern T1 T191f40(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.attachment_text */
extern T0* T192f14(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_explicit_attachment_mark */
extern T1 T192f20(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_explicit_attachment_mark */
extern T1 T324f101(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_explicit_attachment_mark */
extern T1 T333f90(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_explicit_attachment_mark */
extern T1 T336f30(TC* ac, T0* C);
/* ET_SYMBOL.is_explicit_attachment_mark */
extern T1 T282f87(TC* ac, T0* C);
/* ET_KEYWORD.is_explicit_attachment_mark */
extern T1 T191f39(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.append_to_string_with_space */
extern void T324f155(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.expandedness_text */
extern T0* T324f82(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_explicit_expandedness_mark */
extern T1 T324f103(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.separateness_text */
extern T0* T324f81(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_explicit_separateness_mark */
extern T1 T324f102(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.attachment_text */
extern T0* T324f80(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.append_to_string_with_space */
extern void T333f131(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.expandedness_text */
extern T0* T333f82(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_explicit_expandedness_mark */
extern T1 T333f92(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.separateness_text */
extern T0* T333f81(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_explicit_separateness_mark */
extern T1 T333f91(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.attachment_text */
extern T0* T333f80(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.append_to_string_with_space */
extern void T336f48(TC* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.expandedness_text */
extern T0* T336f27(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_explicit_expandedness_mark */
extern T1 T336f32(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.separateness_text */
extern T0* T336f26(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_explicit_separateness_mark */
extern T1 T336f31(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.attachment_text */
extern T0* T336f25(TC* ac, T0* C);
/* ET_SYMBOL.append_to_string_with_space */
extern void T282f120(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.expandedness_text */
extern T0* T282f83(TC* ac, T0* C);
/* ET_SYMBOL.is_explicit_expandedness_mark */
extern T1 T282f89(TC* ac, T0* C);
/* ET_SYMBOL.separateness_text */
extern T0* T282f82(TC* ac, T0* C);
/* ET_SYMBOL.is_explicit_separateness_mark */
extern T1 T282f88(TC* ac, T0* C);
/* ET_SYMBOL.attachment_text */
extern T0* T282f81(TC* ac, T0* C);
/* ET_KEYWORD.append_to_string_with_space */
extern void T191f101(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.expandedness_text */
extern T0* T191f35(TC* ac, T0* C);
/* ET_KEYWORD.is_explicit_expandedness_mark */
extern T1 T191f41(TC* ac, T0* C);
/* ET_KEYWORD.separateness_text */
extern T0* T191f34(TC* ac, T0* C);
/* ET_KEYWORD.attachment_text */
extern T0* T191f33(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.to_text */
extern T0* T724f73(TC* ac, T0* C);
/* ET_LIKE_FEATURE.to_text */
extern T0* T722f71(TC* ac, T0* C);
/* ET_LIKE_CURRENT.to_text */
extern T0* T199f65(TC* ac, T0* C);
/* ET_CLASS.upper_name */
extern T0* T70f81(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.column */
extern T6 T321f17(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.column */
extern T6 T1859f17(TC* ac, T0* C);
/* ET_VOID.column */
extern T6 T327f26(TC* ac, T0* C);
/* ET_RESULT.column */
extern T6 T318f28(TC* ac, T0* C);
/* ET_FREE_OPERATOR.column */
extern T6 T300f33(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.column */
extern T6 T279f20(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.column */
extern T6 T276f11(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.column */
extern T6 T807f7(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.column */
extern T6 T309f32(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.column */
extern T6 T686f21(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.column */
extern T6 T685f21(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.column */
extern T6 T684f22(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.column */
extern T6 T683f22(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.column */
extern T6 T681f23(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.column */
extern T6 T680f23(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.column */
extern T6 T679f25(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.column */
extern T6 T678f25(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.column */
extern T6 T677f25(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.column */
extern T6 T676f25(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.column */
extern T6 T675f27(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.column */
extern T6 T671f23(TC* ac, T0* C);
/* ET_VERBATIM_STRING.column */
extern T6 T674f13(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.column */
extern T6 T673f8(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.column */
extern T6 T672f9(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.column */
extern T6 T336f35(TC* ac, T0* C);
/* ET_CURRENT.column */
extern T6 T297f7(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.column */
extern T6 T324f7(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.column */
extern T6 T333f7(TC* ac, T0* C);
/* ET_SYMBOL.column */
extern T6 T282f7(TC* ac, T0* C);
/* ET_KEYWORD.column */
extern T6 T191f28(TC* ac, T0* C);
/* ET_IDENTIFIER.column */
extern T6 T303f42(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.line */
extern T6 T321f15(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.line */
extern T6 T1859f16(TC* ac, T0* C);
/* ET_VOID.line */
extern T6 T327f25(TC* ac, T0* C);
/* ET_RESULT.line */
extern T6 T318f27(TC* ac, T0* C);
/* ET_FREE_OPERATOR.line */
extern T6 T300f32(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.line */
extern T6 T279f19(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.line */
extern T6 T276f10(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.line */
extern T6 T807f6(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.line */
extern T6 T309f11(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.line */
extern T6 T686f20(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.line */
extern T6 T685f20(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.line */
extern T6 T684f21(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.line */
extern T6 T683f21(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.line */
extern T6 T681f22(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.line */
extern T6 T680f22(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.line */
extern T6 T679f24(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.line */
extern T6 T678f24(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.line */
extern T6 T677f24(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.line */
extern T6 T676f24(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.line */
extern T6 T675f26(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.line */
extern T6 T671f22(TC* ac, T0* C);
/* ET_VERBATIM_STRING.line */
extern T6 T674f12(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.line */
extern T6 T673f35(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.line */
extern T6 T672f8(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.line */
extern T6 T336f34(TC* ac, T0* C);
/* ET_CURRENT.line */
extern T6 T297f6(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.line */
extern T6 T324f6(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.line */
extern T6 T333f6(TC* ac, T0* C);
/* ET_SYMBOL.line */
extern T6 T282f6(TC* ac, T0* C);
/* ET_KEYWORD.line */
extern T6 T191f27(TC* ac, T0* C);
/* ET_IDENTIFIER.line */
extern T6 T303f41(TC* ac, T0* C);
/* ET_VALIDITY_ERROR.filename */
extern T0* T1445f20(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_cluster */
extern T1 T89s37(TC* ac);
/* ET_CLUSTER.is_cluster */
extern T1 T67s19(TC* ac);
/* ET_UNKNOWN_GROUP.is_cluster */
extern T1 T262f21(TC* ac, T0* C);
/* ET_NONE_GROUP.is_cluster */
extern T1 T198f20(TC* ac, T0* C);
/* ET_VALIDITY_ERROR.default_message_template */
extern T0* T1445f18(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.null_position */
extern T0* T1445f21(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.make_default */
extern T0* T807c12(TC* ac);
/* ET_VALIDITY_ERROR.template_code */
extern T0* T1445f14(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.position */
extern T0* T725f7(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_null_position */
extern T1 T679f26(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_null_position */
extern T1 T678f26(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_null_position */
extern T1 T677f26(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_null_position */
extern T1 T676f26(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_null_position */
extern T1 T675f28(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_null_position */
extern T1 T674f27(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_null_position */
extern T1 T673f24(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_null_position */
extern T1 T671f24(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_null_position */
extern T1 T686f22(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_null_position */
extern T1 T685f22(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_null_position */
extern T1 T684f23(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_null_position */
extern T1 T683f23(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_null_position */
extern T1 T681f24(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_null_position */
extern T1 T680f24(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_null_position */
extern T1 T672f22(TC* ac, T0* C);
/* ET_CURRENT.is_null_position */
extern T1 T297f19(TC* ac, T0* C);
/* ET_IDENTIFIER.is_null_position */
extern T1 T303f43(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.like_keyword */
extern T0* T725f6(TC* ac, T0* C);
/* ET_LIKE_FEATURE.like_keyword */
extern T0* T722f3(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.like_keyword */
extern T0* T724f3(TC* ac, T0* C);
/* ET_LIKE_CURRENT.like_keyword */
extern T0* T199f2(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.is_null */
extern T1 T807f8(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_null_position */
extern T1 T336f33(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_null_position */
extern T1 T324f15(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_null_position */
extern T1 T333f15(TC* ac, T0* C);
/* ET_SYMBOL.is_null_position */
extern T1 T282f16(TC* ac, T0* C);
/* ET_KEYWORD.is_null_position */
extern T1 T191f26(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.position */
extern T0* T176f15(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_position */
extern T0* T81s851(TC* ac);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.position */
extern T0* T192f19(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.position */
extern T0* T324f20(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.position */
extern T0* T333f20(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.position */
extern T0* T336f29(TC* ac, T0* C);
/* ET_SYMBOL.position */
extern T0* T282f21(TC* ac, T0* C);
/* ET_KEYWORD.position */
extern T0* T191f21(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_implicit_mark */
extern T1 T176f14(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_implicit_mark */
extern T1 T192f18(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_implicit_mark */
extern T1 T324f84(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_implicit_mark */
extern T1 T333f83(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_implicit_mark */
extern T1 T336f28(TC* ac, T0* C);
/* ET_SYMBOL.is_implicit_mark */
extern T1 T282f84(TC* ac, T0* C);
/* ET_KEYWORD.is_implicit_mark */
extern T1 T191f38(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.position */
extern T0* T724f10(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.position */
extern T0* T691f68(TC* ac, T0* C);
/* ET_IDENTIFIER.position */
extern T0* T303f28(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.position */
extern T0* T500f70(TC* ac, T0* C);
/* ET_CLASS.position */
extern T0* T70f198(TC* ac, T0* C);
/* ET_NOTE_LIST.position */
extern T0* T571f8(TC* ac, T0* C);
/* ET_NOTE.position */
extern T0* T689f3(TC* ac, T0* C);
/* ET_NOTE_TERM_LIST.position */
extern T0* T583f6(TC* ac, T0* C);
/* ET_NOTE_TERM_LIST.tokens */
extern T0* T583s8(TC* ac);
/* ET_BINARY_INTEGER_CONSTANT.position */
extern T0* T679f18(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.position */
extern T0* T678f18(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position */
extern T0* T677f18(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position */
extern T0* T676f18(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.position */
extern T0* T675f19(TC* ac, T0* C);
/* ET_VERBATIM_STRING.position */
extern T0* T674f14(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.position */
extern T0* T673f9(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.position */
extern T0* T671f16(TC* ac, T0* C);
/* ET_CUSTOM_ATTRIBUTE.position */
extern T0* T690f6(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.position */
extern T0* T436f20(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.position */
extern T0* T686f14(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.position */
extern T0* T685f14(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.position */
extern T0* T684f15(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.position */
extern T0* T683f15(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.position */
extern T0* T681f16(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.position */
extern T0* T680f16(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.position */
extern T0* T672f7(TC* ac, T0* C);
/* ET_NOTE_TERM_LIST.first */
extern T0* T583f7(TC* ac, T0* C);
/* ET_NOTE_TERM_LIST.is_empty */
extern T1 T583f5(TC* ac, T0* C);
/* ET_NOTE.tag */
extern T0* T689f4(TC* ac, T0* C);
/* ET_TAGGED_NOTE.position */
extern T0* T688f4(TC* ac, T0* C);
/* ET_NOTE_LIST.first */
extern T0* T571f11(TC* ac, T0* C);
/* ET_NOTE_LIST.is_empty */
extern T1 T571f10(TC* ac, T0* C);
/* ET_TUPLE_TYPE.position */
extern T0* T183f43(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.position */
extern T0* T848f6(TC* ac, T0* C);
/* ET_CLASS_TYPE.position */
extern T0* T102f43(TC* ac, T0* C);
/* ET_LIKE_FEATURE.position */
extern T0* T722f6(TC* ac, T0* C);
/* ET_LIKE_CURRENT.position */
extern T0* T199f17(TC* ac, T0* C);
/* ET_CURRENT.position */
extern T0* T297f9(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T63f189(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr3a_error */
extern void T42f608(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_validity_error */
extern void T42f239(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_eiffel_error */
extern void T42f238(TC* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_info */
extern void T42f197(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info_message */
extern void T42f199(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T42f189(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.error_handler */
extern T0* T1112f6(TC* ac, T0* C);
/* ET_PARENT_CHECKER1.set_fatal_error */
extern void T1112f12(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_type */
extern void T1129f16(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_type */
extern void T1113f36(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_type */
extern void T1113f40(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_like_type_constraint */
extern void T1113f44(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vggc1a_error */
extern void T63f604(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vggc1a */
extern T0* T1445c1284(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vggc1_error */
extern T1 T63f187(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vggc1a_error */
extern void T42f604(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vggc1_error */
extern T1 T42f187(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.error_handler */
extern T0* T1113f12(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_fatal_error */
extern void T1113f24(TC* ac, T0* C);
/* ET_TYPE_CHECKER.process_qualified_like_type */
extern void T864f28(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T864f32(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].wipe_out */
extern void T1290f14(TC* ac, T0* C);
/* SPECIAL [ET_ADAPTED_CLASS].keep_head */
extern void T1774f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_CLASS].set_count */
extern void T1774f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].move_all_cursors_after */
extern void T1290f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS].set_next_cursor */
extern void T1775f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS].set_after */
extern void T1775f6(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.reset */
extern void T847f58(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.wipe_out */
extern void T847f60(TC* ac, T0* C);
/* ET_TYPE_CHECKER.tokens */
extern T0* T864s15(TC* ac);
/* ET_NESTED_TYPE_CONTEXT.copy_type_context */
extern void T847f68(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.set_root_context */
extern void T847f70(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgmc0e_error */
extern void T63f354(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vgmc0e */
extern T0* T1445c1042(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_EXTERNAL_FUNCTION.lower_name */
extern T0* T710f54(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.lower_name */
extern T0* T708f50(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.lower_name */
extern T0* T707f53(TC* ac, T0* C);
/* ET_DO_FUNCTION.lower_name */
extern T0* T706f52(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.lower_name */
extern T0* T705f50(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.lower_name */
extern T0* T704f48(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.lower_name */
extern T0* T703f52(TC* ac, T0* C);
/* ET_ATTRIBUTE.lower_name */
extern T0* T702f46(TC* ac, T0* C);
/* ET_TUPLE_TYPE.to_text */
extern T0* T183f28(TC* ac, T0* C);
/* ET_CLASS_TYPE.to_text */
extern T0* T102f28(TC* ac, T0* C);
/* ET_CLASS.to_text */
extern T0* T70f111(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.lower_name */
extern T0* T1859f21(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.name */
extern T0* T1859f14(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.tokens */
extern T0* T1859s15(TC* ac);
/* ET_BRACKET_SYMBOL.lower_name */
extern T0* T333f86(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.name */
extern T0* T333f93(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.lower_name */
extern T0* T747f16(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.name */
extern T0* T747f18(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.tokens */
extern T0* T747s14(TC* ac);
/* ET_INFIX_AND_THEN_OPERATOR.lower_name */
extern T0* T746f16(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.name */
extern T0* T746f18(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.tokens */
extern T0* T746s14(TC* ac);
/* ET_FREE_OPERATOR.lower_name */
extern T0* T300f24(TC* ac, T0* C);
/* ET_FREE_OPERATOR.name */
extern T0* T300f25(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.lower_name */
extern T0* T309f24(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.name */
extern T0* T309f26(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.lower_name */
extern T0* T324f97(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.name */
extern T0* T324f104(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_not_symbol_name */
extern T0* T81f886(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_xor_symbol_name */
extern T0* T81f884(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_or_else_symbol_name */
extern T0* T81f880(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_or_symbol_name */
extern T0* T81f879(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_implies_symbol_name */
extern T0* T81f874(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_and_then_symbol_name */
extern T0* T81f869(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_and_symbol_name */
extern T0* T81f868(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.position */
extern T0* T1859f13(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.position */
extern T0* T747f21(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.position */
extern T0* T746f21(TC* ac, T0* C);
/* ET_FREE_OPERATOR.position */
extern T0* T300f27(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.position */
extern T0* T309f5(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vgmc_error */
extern T1 T63f73(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgmc0e_error */
extern void T42f354(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vgmc_error */
extern T1 T42f73(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_context */
extern T1 T847f35(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_context_with_type_marks */
extern T1 T847f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T847f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T847f18ot1(TC* ac, T0* a1);
/* ET_LIKE_N.same_named_type_with_type_marks */
extern T1 T1844f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.to_nested_type_context */
extern T0* T847f8(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T691f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T691f16ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T691f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T691f14ot1(TC* ac, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T847f5(TC* ac, T0* C);
/* ET_TUPLE_TYPE.attachment_type_conformance_mode */
extern T1 T183f31(TC* ac, T0* C);
/* ET_CLASS_TYPE.attachment_type_conformance_mode */
extern T1 T102f32(TC* ac, T0* C);
/* ET_CLASS.attachment_type_conformance_mode */
extern T1 T70f135(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T500f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T500f13ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T725f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T725f41ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T724f44(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T724f44ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.same_named_formal_parameter_type_with_type_marks */
extern T1 T722f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T848f37(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T848f37ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_named_formal_parameter_type_with_type_marks */
extern T1 T199f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T847f49(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T847f49ot1(TC* ac, T0* a1);
/* ET_LIKE_N.same_named_formal_parameter_type_with_type_marks */
extern T1 T1844f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T183f88(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T102f103(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T70f232(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_formal_parameter_type_with_type_marks */
extern T1 T70f201(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T183f69(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T102f68(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T500f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T500f15ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.same_named_type_with_type_marks */
extern T1 T722f35(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_named_type_with_type_marks */
extern T1 T725f31(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T725f31ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type_with_type_marks */
extern T1 T724f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T724f32ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_named_type_with_type_marks */
extern T1 T199f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.context_same_named_type_with_type_marks */
extern T1 T183f61(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_type_with_type_marks */
extern T1 T102f60(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_type_with_type_marks */
extern T1 T70f193(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type_with_type_marks */
extern T1 T848f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T848f21ot1(TC* ac, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.cloned_type_context */
extern T0* T847f9(TC* ac, T0* C);
/* ET_TUPLE_TYPE.same_named_type_with_type_marks */
extern T1 T183f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T691f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T691f13ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T500f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T500f12ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T725f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T725f22ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T724f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T724f21ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.same_named_tuple_type_with_type_marks */
extern T1 T722f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T848f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T848f15ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_named_tuple_type_with_type_marks */
extern T1 T199f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T847f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T847f17ot1(TC* ac, T0* a1);
/* ET_LIKE_N.same_named_tuple_type_with_type_marks */
extern T1 T1844f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T183f58(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_tuple_type_with_type_marks */
extern T1 T70f190(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T102f57(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_tuple_type_with_type_marks */
extern T1 T70f179(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T183f47(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACTUAL_PARAMETER_SUBLIST.same_named_types */
extern T1 T2159f6(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type */
extern T1 T691f43(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_named_type */
extern T1 T500f45(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type */
extern T1 T848f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_named_type */
extern T1 T725f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type */
extern T1 T724f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_named_type */
extern T1 T722f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_named_type */
extern T1 T199f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_named_type */
extern T1 T70f89(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_named_type */
extern T1 T183f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_named_types */
extern T1 T185f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.is_type_separate_with_type_mark */
extern T1 T183f38(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.scoop_mode */
extern T1 T847f6(TC* ac, T0* C);
/* ET_TUPLE_TYPE.scoop_mode */
extern T1 T183f32(TC* ac, T0* C);
/* ET_CLASS.scoop_mode */
extern T1 T70f137(TC* ac, T0* C);
/* ET_CLASS_TYPE.scoop_mode */
extern T1 T102f33(TC* ac, T0* C);
/* ET_CLASS_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T102f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_generic */
extern T1 T183f36(TC* ac, T0* C);
/* ET_CLASS.same_named_type_with_type_marks */
extern T1 T70f90(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T691f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T691f12ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T500f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T500f11ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_named_class_type_with_type_marks */
extern T1 T848f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T848f14ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_named_class_type_with_type_marks */
extern T1 T725f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T725f21ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_class_type_with_type_marks */
extern T1 T724f20(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T724f20ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.same_named_class_type_with_type_marks */
extern T1 T722f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_named_class_type_with_type_marks */
extern T1 T199f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T847f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T847f16ot1(TC* ac, T0* a1);
/* ET_LIKE_N.same_named_class_type_with_type_marks */
extern T1 T1844f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T183f57(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_class_type_with_type_marks */
extern T1 T70f189(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T102f56(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_class_type_with_type_marks */
extern T1 T70f151(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_LIST.same_named_types */
extern T1 T506f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.is_type_separate_with_type_mark */
extern T1 T102f36(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_separate_with_type_mark */
extern T1 T70f138(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_expanded_with_type_mark */
extern T1 T102f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_expanded_with_type_mark */
extern T1 T70f136(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.same_named_class_type_with_type_marks */
extern T1 T183f35(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_class_type_with_type_marks */
extern T1 T102f31(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T201f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T2158f6(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.is_generic */
extern T1 T102f18(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identity_type */
extern T0* T81s19(TC* ac);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].item */
extern T0* T1290f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].is_empty */
extern T1 T1290f8(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtat1c_error */
extern void T63f593(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1c */
extern T0* T1445c1273(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T63f182(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat1c_error */
extern void T42f593(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T42f182(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat2b_error */
extern void T63f590(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat2b */
extern T0* T1445c1270(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.name */
extern T0* T722f1(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T63f169(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat2b_error */
extern void T42f590(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T42f169(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.depends_on_qualified_anchored_type */
extern T1 T848f50(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.depends_on_qualified_anchored_type */
extern T1 T725f50(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.depends_on_qualified_anchored_type */
extern T1 T724f53(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.depends_on_qualified_anchored_type */
extern T1 T722f50(TC* ac, T0* C, T0* a1);
/* ET_CLASS.depends_on_qualified_anchored_type */
extern T1 T70f228(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T506f21(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T691f55(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T500f57(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.depends_on_qualified_anchored_type */
extern T1 T183f78(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.depends_on_qualified_anchored_type */
extern T1 T2159f10(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T185f19(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.depends_on_qualified_anchored_type */
extern T1 T102f82(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T201f11(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T2158f10(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.depends_on_qualified_anchored_type */
extern T1 T199f47(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolve_identifier_type */
extern void T725f95(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_seed */
extern void T303f120(TC* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolve_identifier_type */
extern void T724f98(TC* ac, T0* C, T6 a1);
/* ET_TYPE_CHECKER.error_handler */
extern T0* T864f16(TC* ac, T0* C);
/* ET_TYPE_CHECKER.set_fatal_error */
extern void T864f30(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].first */
extern T0* T1290f7(TC* ac, T0* C);
/* ET_TYPE_CHECKER.check_adapted_base_classes_validity */
extern void T864f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ADAPTED_BASE_CLASS_CHECKER.check_adapted_base_classes_validity */
extern void T886f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T886f12ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgmc0a_error */
extern void T63f603(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgmc0a */
extern T0* T1445c1283(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgmc0a_error */
extern void T42f603(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgmc0d_error */
extern void T63f602(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T6 a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vgmc0d */
extern T0* T1445c1282(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T6 a6, T0* a7);
/* ET_ERROR_HANDLER.report_vgmc0d_error */
extern void T42f602(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T6 a6, T0* a7);
/* ET_TUPLE_TYPE.adapted_class_base_type_index_of_label */
extern T6 T183f114(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.index_of_label */
extern T6 T183f99(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.index_of_label */
extern T6 T2159f12(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.same_identifier */
extern T1 T303f48(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.index_of_label */
extern T6 T185f23(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.base_type_index_of_label */
extern T6 T1884f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.index_of_label */
extern T6 T70f241(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.index_of_label */
extern T6 T506f23(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.index_of_label */
extern T6 T102f112(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T201f13(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T2158f12(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.adapted_class_base_type_index_of_label */
extern T6 T102f116(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.adapted_class_base_type_index_of_label */
extern T6 T70f213(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T847f46(TC* ac, T0* C, T0* a1);
extern T1 T847f46ot1(TC* ac, T0* a1);
/* ET_LIKE_N.base_type_index_of_label */
extern T6 T1844f21(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T691f62(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T691f62ot1(TC* ac, T0* a1);
extern T1 T691f62ot2(TC* ac, T0* a1);
extern T1 T691f62ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T500f64(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T500f64ot1(TC* ac, T0* a1);
extern T1 T500f64ot2(TC* ac, T0* a1);
extern T1 T500f64ot3(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.base_type_index_of_label */
extern T6 T722f70(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_index_of_label */
extern T6 T725f69(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T725f69ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_index_of_label */
extern T6 T724f72(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T724f72ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.base_type_index_of_label */
extern T6 T199f63(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_index_of_label */
extern T6 T70f242(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_index_of_label */
extern T6 T848f63(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T848f63ot1(TC* ac, T0* a1);
extern T1 T848f63ot2(TC* ac, T0* a1);
extern T1 T848f63ot3(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.base_type_index_of_label */
extern T6 T183f100(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type_index_of_label */
extern T6 T102f113(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vgmc0c_error */
extern void T63f601(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vgmc0c */
extern T0* T1445c1281(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7);
/* ET_EXTERNAL_PROCEDURE.lower_name */
extern T0* T714f49(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.lower_name */
extern T0* T713f47(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.lower_name */
extern T0* T712f48(TC* ac, T0* C);
/* ET_DO_PROCEDURE.lower_name */
extern T0* T711f49(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vgmc0c_error */
extern void T42f601(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vgmc0b_error */
extern void T63f600(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vgmc0b */
extern T0* T1445c1280(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vgmc0b_error */
extern void T42f600(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ADAPTED_BASE_CLASS_CHECKER.error_handler */
extern T0* T886f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].put_last */
extern void T1290f17(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS].force */
extern void T1772s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_CLASS].fill_with */
extern void T1774f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_CLASS].extend */
extern void T1774f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].remove */
extern void T1290f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].move_left */
extern void T1290f22(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].move_cursors_left */
extern void T1290f21(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS].set_position */
extern void T1775f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].remove_last */
extern void T1290f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].move_last_cursors_after */
extern void T1290f24(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].keep_first */
extern void T1290f15(TC* ac, T0* C, T6 a1);
/* ET_CLASS.interface_checked_successfully */
extern T1 T70f168(TC* ac, T0* C);
/* ET_ADAPTED_BASE_CLASS_CHECKER.set_fatal_error */
extern void T886f14(TC* ac, T0* C);
/* ET_CLASS.features_flattened_successfully */
extern T1 T70f210(TC* ac, T0* C);
/* ET_ADAPTED_BASE_CLASS_CHECKER.set_class_interface_error_only */
extern void T886f13(TC* ac, T0* C, T1 a1);
/* ET_NESTED_TYPE_CONTEXT.add_adapted_base_classes_to_list */
extern void T847f67(TC* ac, T0* C, T0* a1);
extern T1 T847f67ot1(TC* ac, T0* a1);
/* ET_LIKE_N.add_adapted_base_classes_to_list */
extern void T1844f43(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.add_adapted_base_classes_to_list */
extern void T691f99(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T691f99ot1(TC* ac, T0* a1);
extern T1 T691f99ot2(TC* ac, T0* a1);
extern T1 T691f99ot3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].force_last */
extern void T1290f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].resize */
extern void T1290f23(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS].aliased_resized_area */
extern T0* T1772s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_CLASS].aliased_resized_area */
extern T0* T1774f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].new_capacity */
extern T6 T1290f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].extendible */
extern T1 T1290f10(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.add_adapted_base_classes_to_list */
extern void T500f95(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T500f95ot1(TC* ac, T0* a1);
extern T1 T500f95ot2(TC* ac, T0* a1);
extern T1 T500f95ot3(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.add_adapted_base_classes_to_list */
extern void T722f101(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.add_adapted_base_classes_to_list */
extern void T725f96(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T725f96ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.add_adapted_base_classes_to_list */
extern void T724f99(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T724f99ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.add_adapted_base_classes_to_list */
extern void T199f93(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.add_adapted_base_classes_to_list */
extern void T70f337(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.add_adapted_base_classes_to_list */
extern void T848f90(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T848f90ot1(TC* ac, T0* a1);
extern T1 T848f90ot2(TC* ac, T0* a1);
extern T1 T848f90ot3(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.add_adapted_base_classes_to_list */
extern void T183f131(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.add_adapted_base_classes_to_list */
extern void T102f137(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_add_adapted_base_classes_to_list */
extern void T183f134(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_add_adapted_base_classes_to_list */
extern void T102f140(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_add_adapted_base_classes_to_list */
extern void T70f334(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.set */
extern void T847f63(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TYPE_CHECKER.report_qualified_anchored_type_supplier */
extern void T864f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.report_qualified_anchored_type_supplier */
extern void T1141f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.add_supplier */
extern void T1141f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].force_last */
extern void T260f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].slots_put */
extern void T260f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_NAMED_CLASS].clashes_put */
extern void T260f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_NAMED_CLASS].slots_item */
extern T6 T260f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].hash_position */
extern T6 T260f20(TC* ac, T0* C, T0* a1);
/* ET_CLASS.hash_code */
extern T6 T70f88(TC* ac, T0* C);
/* ET_MASTER_CLASS.hash_code */
extern T6 T188f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].resize */
extern void T260f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].clashes_resize */
extern void T260f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].special_integer_ */
extern T0* T260s32(TC* ac);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_resize */
extern void T260f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_resize */
extern void T260f68(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1169s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1168f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_item */
extern T0* T260f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_item */
extern T0* T260f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].clashes_item */
extern T6 T260f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].slots_resize */
extern void T260f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].new_modulus */
extern T6 T260f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].new_capacity */
extern T6 T260f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_put */
extern void T260f55(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].force */
extern void T1169s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NAMED_CLASS].fill_with */
extern void T1168f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NAMED_CLASS].extend */
extern void T1168f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].search_position */
extern void T260f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].key_equality_tester */
extern T0* T260f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].unset_found_item */
extern void T260f46(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1134f19(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T1134f22(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1134s11(TC* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1134f12(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1134f23(TC* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].force_last */
extern void T1133f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].slots_put */
extern void T1133f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].clashes_put */
extern void T1133f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].slots_item */
extern T6 T1133f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].hash_position */
extern T6 T1133f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].resize */
extern void T1133f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_resize */
extern void T1133f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].special_integer_ */
extern T0* T1133s31(TC* ac);
/* DS_HASH_SET [ET_CLASS].key_storage_resize */
extern void T1133f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_resize */
extern void T1133f53(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].aliased_resized_area */
extern T0* T776s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS].aliased_resized_area */
extern T0* T775f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_item */
extern T0* T1133f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_item */
extern T0* T1133f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_item */
extern T6 T1133f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].slots_resize */
extern void T1133f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_modulus */
extern T6 T1133f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_capacity */
extern T6 T1133f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_put */
extern void T1133f48(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CLASS].force */
extern void T776s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLASS].fill_with */
extern void T775f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS].extend */
extern void T775f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].search_position */
extern void T1133f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].key_equality_tester */
extern T0* T1133f24(TC* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].unset_found_item */
extern void T1133f38(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.add_adapted_base_classes_to_list */
extern void T1134f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T1134f24ot1(TC* ac, T0* a1);
extern T1 T1134f24ot2(TC* ac, T0* a1);
/* ET_EXTERNAL_PROCEDURE.implementation_class */
extern T0* T714f3(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.implementation_class */
extern T0* T713f8(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.implementation_class */
extern T0* T712f2(TC* ac, T0* C);
/* ET_DO_PROCEDURE.implementation_class */
extern T0* T711f6(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.implementation_class */
extern T0* T710f4(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.implementation_class */
extern T0* T708f3(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.implementation_class */
extern T0* T707f3(TC* ac, T0* C);
/* ET_DO_FUNCTION.implementation_class */
extern T0* T706f3(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.implementation_class */
extern T0* T705f2(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.implementation_class */
extern T0* T704f3(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.implementation_class */
extern T0* T703f2(TC* ac, T0* C);
/* ET_ATTRIBUTE.implementation_class */
extern T0* T702f2(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.copy_to_type_context */
extern void T847f69(TC* ac, T0* C, T0* a1);
/* ET_CLASS.copy_to_type_context */
extern void T70f329(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1126f13(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_qualified_like_identifier_to_sorter */
extern void T1126f16(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_type */
extern void T1135f10(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_qualified_like_identifier */
extern void T1135f12(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_type */
extern void T1125f10(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_qualified_like_identifier */
extern void T1125f12(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_qualified_like_type */
extern void T1127f20(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_qualified_like_identifier_tuple_actual_parameters_unfolded */
extern void T1127f23(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_qualified_like_identifier_vtct_validity */
extern void T1127f22(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_type */
extern void T1124f11(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_qualified_like_identifier */
extern void T1124f14(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_type */
extern void T1124f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.process */
extern void T724f95(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_braced_type */
extern void T1938f8(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_braced_type */
extern void T1937f12(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_braced_type */
extern void T1936f8(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_braced_type */
extern void T1935f8(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_qualified_like_braced_type */
extern void T1138f15(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_qualified_like_braced_type */
extern void T1128f18(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_qualified_like_braced_type */
extern void T1112f17(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_braced_type */
extern void T1129f15(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_braced_type */
extern void T1113f35(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T864f27(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1134f18(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1126f12(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_braced_type */
extern void T1135f9(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_braced_type */
extern void T1125f9(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_qualified_like_braced_type */
extern void T1127f19(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_braced_type */
extern void T1124f10(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.process */
extern void T722f95(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_feature */
extern void T1938f7(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_feature */
extern void T1937f11(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_feature */
extern void T1936f7(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_feature */
extern void T1935f7(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_feature */
extern void T1138f14(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_feature */
extern void T1128f17(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_feature */
extern void T1112f16(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_feature */
extern void T1129f14(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_feature */
extern void T1113f34(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_feature */
extern void T864f26(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_feature_validity */
extern void T864f31(TC* ac, T0* C, T0* a1);
extern T1 T864f31ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1a_error */
extern void T63f592(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat1a */
extern T0* T1445c1272(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtat1a_error */
extern void T42f592(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtat1b_error */
extern void T63f591(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1b */
extern T0* T1445c1271(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat1b_error */
extern void T42f591(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.resolve_like_argument */
extern void T722f100(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_procedure */
extern T1 T714f73(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_procedure */
extern T1 T712f67(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_procedure */
extern T1 T711f65(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_procedure */
extern T1 T710f80(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_procedure */
extern T1 T708f71(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_procedure */
extern T1 T707f74(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_procedure */
extern T1 T706f72(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_procedure */
extern T1 T705f73(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_procedure */
extern T1 T704f72(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_procedure */
extern T1 T703f72(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_procedure */
extern T1 T702f67(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_procedure */
extern T1 T713f64(TC* ac, T0* C);
/* ET_IDENTIFIER.set_argument */
extern void T303f127(TC* ac, T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT_LIST.index_of */
extern T6 T497f10(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT.formal_argument */
extern T0* T491f6(TC* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.formal_argument */
extern T0* T1446f6(TC* ac, T0* C);
/* ET_LIKE_FEATURE.resolve_like_feature */
extern void T722f99(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1134f17(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_like_feature_validity */
extern void T1134f21(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1126f11(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_like_feature_to_sorter */
extern void T1126f15(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].force_relation */
extern void T1701f13(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].put_indexed_relation */
extern void T1701f17(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].replace */
extern void T1435f14(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].item */
extern T0* T1435f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].item */
extern T6 T239f8(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].reset */
extern void T1701f15(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].force */
extern void T1701f16(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].put */
extern void T1701f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].put_last */
extern void T1435f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].force */
extern void T1791s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].fill_with */
extern void T1790f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].extend */
extern void T1790f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].put_last */
extern void T239f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].put_new */
extern void T1990f36(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_put */
extern void T1990f52(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].force */
extern void T1992s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LIKE_FEATURE].fill_with */
extern void T1991f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_FEATURE].extend */
extern void T1991f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_put */
extern void T1990f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_put */
extern void T1990f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_put */
extern void T1990f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_item */
extern T6 T1990f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].hash_position */
extern T6 T1990f28(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.hash_code */
extern T6 T722f90(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_item */
extern T6 T1990f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].unset_found_item */
extern void T1990f40(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].put_last */
extern void T1702f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].resize */
extern void T1435f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].aliased_resized_area */
extern T0* T1791s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].aliased_resized_area */
extern T0* T1790f5(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].resize */
extern void T239f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].resize */
extern void T1990f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_resize */
extern void T1990f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].special_integer_ */
extern T0* T1990s26(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_resize */
extern void T1990f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T1992s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T1991f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_resize */
extern void T1990f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_item */
extern T0* T1990f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_resize */
extern void T1990f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].new_modulus */
extern T6 T1990f22(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].resize */
extern void T1702f13(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].capacity */
extern T6 T1701f9(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].count */
extern T6 T1701f8(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].index_of */
extern T6 T1701f7(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].found_item */
extern T6 T1990f21(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_item */
extern T6 T1990f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].found */
extern T1 T1990f23(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].search */
extern void T1990f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].search_position */
extern void T1990f53(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_feature */
extern void T1135f8(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_feature */
extern void T1125f8(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_feature */
extern void T1127f18(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_feature */
extern void T1124f9(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_like_feature */
extern void T1124f13(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.error_handler */
extern T0* T1124f6(TC* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.set_fatal_error */
extern void T1124f15(TC* ac, T0* C);
/* ET_LIKE_CURRENT.process */
extern void T199f92(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_current */
extern void T1938f6(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_current */
extern void T1937f8(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_current */
extern void T1936f4(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_current */
extern void T1935f6(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_current */
extern void T1138f13(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_current */
extern void T1128f16(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_current */
extern void T1112f15(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_current */
extern void T1129f13(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_current */
extern void T1113f33(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_current */
extern void T864f37(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_current_validity */
extern void T864f42(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1134f27(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1126f19(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_current */
extern void T1135f15(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_current */
extern void T1125f16(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_current */
extern void T1127f26(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_current */
extern void T1124f18(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.process */
extern void T183f130(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_tuple_type */
extern void T1938f11(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_tuple_type_validity */
extern void T1938f14(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_tuple_type */
extern void T1937f10(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_actual_parameters_validity */
extern void T1937f16(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_tuple_type */
extern void T1936f6(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_tuple_type_validity */
extern void T1936f13(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.set_fatal_error */
extern void T1936f15(TC* ac, T0* C);
/* ET_CLASS.has_ancestors_error */
extern T1 T70f161(TC* ac, T0* C);
/* ET_MASTER_CLASS.has_ancestors_error */
extern T1 T188f45(TC* ac, T0* C);
/* ET_CLASS.ancestors_built */
extern T1 T70f71(TC* ac, T0* C);
/* ET_MASTER_CLASS.ancestors_built */
extern T1 T188f44(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_tuple_type */
extern void T1935f11(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_tuple_type_validity */
extern void T1935f14(TC* ac, T0* C, T0* a1);
/* ET_CLASS.has_syntax_error */
extern T1 T70f146(TC* ac, T0* C);
/* ET_MASTER_CLASS.has_syntax_error */
extern T1 T188f43(TC* ac, T0* C);
/* ET_CLASS.is_parsed */
extern T1 T70f56(TC* ac, T0* C);
/* ET_MASTER_CLASS.is_parsed */
extern T1 T188f42(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.set_fatal_error */
extern void T1935f15(TC* ac, T0* C);
/* ET_CLASS.is_preparsed */
extern T1 T70f125(TC* ac, T0* C);
/* ET_MASTER_CLASS.is_preparsed */
extern T1 T188f37(TC* ac, T0* C);
/* ET_PARENT_CHECKER3.process_tuple_type */
extern void T1138f11(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.check_tuple_type_validity */
extern void T1138f18(TC* ac, T0* C, T0* a1);
extern T1 T1138f18ot1(TC* ac, T0* a1);
/* ET_PARENT_CHECKER2.process_tuple_type */
extern void T1128f14(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_tuple_type_validity */
extern void T1128f21(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_tuple_type */
extern void T1112f13(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_tuple_type_validity */
extern void T1112f20(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvhpr5a_error */
extern void T63f607(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr5a */
extern T0* T1445c1285(TC* ac, T0* a1, T0* a2);
/* ET_COMPRESSED_POSITION.to_text */
extern T0* T807f9(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.append_to_string */
extern void T807f14(TC* ac, T0* C, T0* a1);
/* ET_COMPRESSED_POSITION.integer_ */
extern T0* T807s10(TC* ac);
/* ET_QUESTION_MARK_SYMBOL.position_to_text */
extern T0* T336f36(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.append_position_to_string */
extern void T336f50(TC* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.integer_ */
extern T0* T336s41(TC* ac);
/* ET_IDENTIFIER.position_to_text */
extern T0* T303f76(TC* ac, T0* C);
/* ET_IDENTIFIER.append_position_to_string */
extern void T303f138(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.integer_ */
extern T0* T303s78(TC* ac);
/* ET_SYMBOL_OPERATOR.position_to_text */
extern T0* T324f111(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.append_position_to_string */
extern void T324f158(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.integer_ */
extern T0* T324s112(TC* ac);
/* ET_BRACKET_SYMBOL.position_to_text */
extern T0* T333f103(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.append_position_to_string */
extern void T333f134(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.integer_ */
extern T0* T333s104(TC* ac);
/* ET_SYMBOL.position_to_text */
extern T0* T282f91(TC* ac, T0* C);
/* ET_SYMBOL.append_position_to_string */
extern void T282f122(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.integer_ */
extern T0* T282s92(TC* ac);
/* ET_KEYWORD.position_to_text */
extern T0* T191f42(TC* ac, T0* C);
/* ET_KEYWORD.append_position_to_string */
extern void T191f102(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.integer_ */
extern T0* T191s43(TC* ac);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T63f188(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr5a_error */
extern void T42f607(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T42f188(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_tuple_type */
extern void T1129f18(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_tuple_type_constraint */
extern void T1129f20(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_tuple_type */
extern void T1113f38(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_tuple_type_constraint */
extern void T1113f42(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_CHECKER1.add_base_type_dependency */
extern void T1113f43(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_CHECKER1.add_n_items_to_list */
extern void T1113f29(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* DS_ARRAYED_LIST [INTEGER_32].force_last */
extern void T239f19(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_capacity */
extern T6 T239f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].extendible */
extern T1 T239f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].force_last */
extern void T1669f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT].force */
extern void T1965s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].fill_with */
extern void T1964f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].extend */
extern void T1964f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].resize */
extern void T1669f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT].aliased_resized_area */
extern T0* T1965s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].aliased_resized_area */
extern T0* T1964f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].new_capacity */
extern T6 T1669f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].extendible */
extern T1 T1669f8(TC* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.make */
extern T0* T1884c15(TC* ac, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.renames */
extern T0* T199f78(TC* ac, T0* C);
/* ET_TUPLE_TYPE.renames */
extern T0* T183f110(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.renames */
extern T0* T848f67(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.renames */
extern T0* T725f65(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.renames */
extern T0* T724f68(TC* ac, T0* C);
/* ET_LIKE_FEATURE.renames */
extern T0* T722f65(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.renames */
extern T0* T692f2(TC* ac, T0* C);
/* ET_CLASS_TYPE.renames */
extern T0* T102f108(TC* ac, T0* C);
/* ET_CLASS.renames */
extern T0* T70f216(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_named_type */
extern T1 T183f75(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_named_type */
extern T1 T691f52(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_named_type */
extern T1 T500f54(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_named_type */
extern T1 T848f47(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_named_type */
extern T1 T725f47(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_named_type */
extern T1 T724f50(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_named_type */
extern T1 T722f47(TC* ac, T0* C);
/* ET_LIKE_CURRENT.is_named_type */
extern T1 T199f44(TC* ac, T0* C);
/* ET_CLASS.is_named_type */
extern T1 T70s221(TC* ac);
/* ET_CLASS_TYPE.is_named_type */
extern T1 T102f76(TC* ac, T0* C);
/* ET_TYPE_CHECKER.process_tuple_type */
extern void T864f36(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_tuple_type_validity */
extern void T864f41(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.reset_fatal_error */
extern void T864f43(TC* ac, T0* C, T1 a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1134f26(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_actual_parameters_validity */
extern void T1134f28(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.reset_fatal_error */
extern void T1134f16(TC* ac, T0* C, T1 a1);
/* ET_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1126f18(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_actual_parameters_to_sorter */
extern void T1126f20(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_tuple_type */
extern void T1135f14(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_tuple_type */
extern void T1135f17(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_tuple_type */
extern void T1125f15(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_tuple_type */
extern void T1125f18(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_tuple_type */
extern void T1127f25(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_tuple_actual_parameters_unfolded */
extern void T1127f30(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_vtct_validity */
extern void T1127f29(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_tuple_type */
extern void T1124f17(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_actual_parameters */
extern void T1124f19(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.reset_fatal_error */
extern void T1124f21(TC* ac, T0* C, T1 a1);
/* ET_CLASS_TYPE.process */
extern void T102f136(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class_type */
extern void T1937f9(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class_type */
extern void T1936f5(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_class_type_validity */
extern void T1936f12(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class_type */
extern void T1935f5(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_class_type_validity */
extern void T1935f12(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class_type */
extern void T1129f12(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_class_type_constraint */
extern void T1129f19(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg3a_error */
extern void T63f598(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vtcg3a */
extern T0* T1445c1278(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.types_to_text */
extern T0* T102f121(TC* ac, T0* C);
/* ET_CLASS_TYPE.append_types_to_string */
extern void T102f145(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.types_to_text */
extern T0* T183f111(TC* ac, T0* C);
/* ET_TUPLE_TYPE.append_types_to_string */
extern void T183f137(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.types_to_text */
extern T0* T848f82(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.append_types_to_string */
extern void T848f94(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.types_to_text */
extern T0* T725f87(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.append_types_to_string */
extern void T725f100(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.types_to_text */
extern T0* T724f90(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_types_to_string */
extern void T724f105(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.types_to_text */
extern T0* T722f89(TC* ac, T0* C);
/* ET_LIKE_FEATURE.append_types_to_string */
extern void T722f107(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.types_to_text */
extern T0* T199f84(TC* ac, T0* C);
/* ET_LIKE_CURRENT.append_types_to_string */
extern void T199f99(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CONSTRAINT_LIST.types_to_text */
extern T0* T641f9(TC* ac, T0* C);
/* ET_TYPE_CONSTRAINT_LIST.append_types_to_string */
extern void T641f18(TC* ac, T0* C, T0* a1);
/* ET_TYPE_RENAME_CONSTRAINT.types_to_text */
extern T0* T692f6(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.append_types_to_string */
extern void T692f12(TC* ac, T0* C, T0* a1);
/* ET_CLASS.types_to_text */
extern T0* T70f252(TC* ac, T0* C);
/* ET_CLASS.append_types_to_string */
extern void T70f342(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.to_text */
extern T0* T691f11(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.to_text */
extern T0* T500f10(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.to_text */
extern T0* T848f51(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T63f186(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg3a_error */
extern void T42f598(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T42f186(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.error_handler */
extern T0* T1129f7(TC* ac, T0* C);
/* ET_CLASS.resolve_unfolded_tuple_actual_parameters_2 */
extern void T70f341(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_2 */
extern void T102f144(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T2158c20(TC* ac, T0* a1, T0* a2, T6 a3);
/* ET_IDENTIFIER.set_position */
extern void T303f121(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_ECF_LIBRARY.tuple_type */
extern T0* T802f25(TC* ac, T0* C);
/* ET_ECF_SYSTEM.tuple_type */
extern T0* T87f28(TC* ac, T0* C);
/* ET_SYSTEM.tuple_type */
extern T0* T50f27(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.make */
extern T0* T2159c23(TC* ac, T0* a1, T6 a2, T6 a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_constraint */
extern T1 T691f66(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_constraint_with_type_marks */
extern T1 T691f79(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T691f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T691f17ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T691f42(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T691f42ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.recursive_formal_constraints */
extern T0* T500f30(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T500f44(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T500f44ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T848f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T848f38ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T725f42(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T725f42ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T724f45(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T724f45ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T722f42(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_CURRENT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T199f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T847f50(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T847f50ot1(TC* ac, T0* a1);
/* ET_LIKE_N.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1844f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T183f89(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T102f104(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T70f233(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T70f202(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.conforms_to_type_with_type_marks */
extern T1 T1884f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_BASE_TYPE_CONSTRAINT_LIST.conforms_to_type_with_type_marks */
extern T1 T1671f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T183f70(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T102f69(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type_with_type_marks */
extern T1 T848f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T848f22ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_type_with_type_marks */
extern T1 T725f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T725f32ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type_with_type_marks */
extern T1 T724f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T724f33ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.conforms_to_type_with_type_marks */
extern T1 T722f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_CURRENT.conforms_to_type_with_type_marks */
extern T1 T199f31(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T847f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T847f19ot1(TC* ac, T0* a1);
/* ET_LIKE_N.conforms_to_type_with_type_marks */
extern T1 T1844f5(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T183f62(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T102f61(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_to_type_with_type_marks */
extern T1 T70f194(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.conforms_to_type_with_type_marks */
extern T1 T70f78(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T691f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T691f21ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T691f36(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T691f36ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_reference */
extern T1 T691f31(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_reference */
extern T1 T500f32(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference_with_type_mark */
extern T1 T848f40(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T848f40ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_reference_with_type_mark */
extern T1 T725f53(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T725f53ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference_with_type_mark */
extern T1 T724f56(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T724f56ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.is_type_reference_with_type_mark */
extern T1 T722f53(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_reference_with_type_mark */
extern T1 T199f50(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_is_type_reference_with_type_mark */
extern T1 T183f90(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_reference_with_type_mark */
extern T1 T102f105(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_reference_with_type_mark */
extern T1 T70f234(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T847f51(TC* ac, T0* C, T0* a1);
extern T1 T847f51ot1(TC* ac, T0* a1);
/* ET_LIKE_N.is_type_reference_with_type_mark */
extern T1 T1844f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_reference_with_type_mark */
extern T1 T70f224(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_reference_with_type_mark */
extern T1 T183f80(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_expanded_with_type_mark */
extern T1 T183f5(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_reference_with_type_mark */
extern T1 T102f88(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T500f38(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T500f38ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T500f20(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T500f20ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T848f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T848f25ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T725f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T725f24ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T724f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T724f23ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.conforms_from_class_type_with_type_marks */
extern T1 T722f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_CURRENT.conforms_from_class_type_with_type_marks */
extern T1 T199f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T847f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T847f25ot1(TC* ac, T0* a1);
/* ET_LIKE_N.conforms_from_class_type_with_type_marks */
extern T1 T1844f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T183f59(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T102f58(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_from_class_type_with_type_marks */
extern T1 T70f191(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T183f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T102f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.is_dotnet */
extern T1 T70f143(TC* ac, T0* C);
/* ET_CLASS.is_in_dotnet_assembly */
extern T1 T70f144(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_dotnet_assembly */
extern T1 T89f39(TC* ac, T0* C);
/* ET_CLUSTER.is_dotnet_assembly */
extern T1 T67f21(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_dotnet_assembly */
extern T1 T262f10(TC* ac, T0* C);
/* ET_NONE_GROUP.is_dotnet_assembly */
extern T1 T198f7(TC* ac, T0* C);
/* ET_CLASS.is_system_object_class */
extern T1 T70f142(TC* ac, T0* C);
/* ET_CLASS.conforming_ancestor */
extern T0* T70f139(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T201f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_to_type */
extern T1 T183f48(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T2158f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type */
extern T1 T691f44(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_to_type */
extern T1 T500f46(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type */
extern T1 T848f31(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_type */
extern T1 T725f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type */
extern T1 T724f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_to_type */
extern T1 T722f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_to_type */
extern T1 T199f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_to_type */
extern T1 T70f180(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_to_type */
extern T1 T102f47(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_SUBLIST.conforms_to_types */
extern T1 T2159f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.conforms_to_types */
extern T1 T185f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_LIST.conforms_to_types */
extern T1 T506f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_from_class_type_with_type_marks */
extern T1 T70f129(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.conforms_to_type_with_type_marks */
extern T1 T183f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T691f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T691f22ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T500f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T500f21ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T848f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T848f26ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T725f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T725f25ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T724f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T724f24ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.conforms_from_tuple_type_with_type_marks */
extern T1 T722f20(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_CURRENT.conforms_from_tuple_type_with_type_marks */
extern T1 T199f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T847f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T847f26ot1(TC* ac, T0* a1);
/* ET_LIKE_N.conforms_from_tuple_type_with_type_marks */
extern T1 T1844f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T183f60(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T102f59(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_from_tuple_type_with_type_marks */
extern T1 T70f192(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T183f37(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACTUAL_PARAMETER_SUBLIST.tuple_conforms_to_types */
extern T1 T2159f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.tuple_conforms_to_types */
extern T1 T185f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T102f37(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforms_from_tuple_type_with_type_marks */
extern T1 T70f152(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_to_type_with_type_marks */
extern T1 T102f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T500f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T500f16ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.type_constraint */
extern T0* T848f58(TC* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_TYPE.type_constraint */
extern T0* T725f60(TC* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_constraint */
extern T0* T724f63(TC* ac, T0* C, T6 a1);
/* ET_LIKE_FEATURE.type_constraint */
extern T0* T722f60(TC* ac, T0* C, T6 a1);
/* ET_LIKE_CURRENT.type_constraint */
extern T0* T199f60(TC* ac, T0* C, T6 a1);
/* ET_TYPE_CONSTRAINT_LIST.type_constraint */
extern T0* T641f8(TC* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.current_type_constraint */
extern T0* T102f107(TC* ac, T0* C);
/* ET_TUPLE_TYPE.current_type_constraint */
extern T0* T183f94(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.current_type_constraint */
extern T0* T848f56(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.current_type_constraint */
extern T0* T725f58(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.current_type_constraint */
extern T0* T724f61(TC* ac, T0* C);
/* ET_LIKE_FEATURE.current_type_constraint */
extern T0* T722f58(TC* ac, T0* C);
/* ET_LIKE_CURRENT.current_type_constraint */
extern T0* T199f58(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.current_type_constraint */
extern T0* T692f5(TC* ac, T0* C);
/* ET_CLASS.current_type_constraint */
extern T0* T70f237(TC* ac, T0* C);
/* ET_TYPE_CONSTRAINT_LIST.item */
extern T0* T641f7(TC* ac, T0* C, T6 a1);
/* ET_TYPE_RENAME_CONSTRAINT.type_constraint */
extern T0* T692f4(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_TYPE.type_constraint_count */
extern T6 T848s57(TC* ac);
/* ET_QUALIFIED_LIKE_TYPE.type_constraint_count */
extern T6 T725s59(TC* ac);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_constraint_count */
extern T6 T724s62(TC* ac);
/* ET_LIKE_FEATURE.type_constraint_count */
extern T6 T722s59(TC* ac);
/* ET_LIKE_CURRENT.type_constraint_count */
extern T6 T199s59(TC* ac);
/* ET_TYPE_CONSTRAINT_LIST.count */
extern T6 T641f3(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.count */
extern T6 T692s3(TC* ac);
/* ET_FORMAL_PARAMETER.conforms_to_constraint */
extern T1 T500f68(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_to_constraint_with_type_marks */
extern T1 T500f81(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_constraint */
extern T1 T848f69(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T848f80(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_constraint */
extern T1 T725f72(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T725f84(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_constraint */
extern T1 T724f75(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T724f87(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_FEATURE.conforms_to_constraint */
extern T1 T722f73(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_to_constraint_with_type_marks */
extern T1 T722f85(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_CURRENT.conforms_to_constraint */
extern T1 T199f67(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_to_constraint_with_type_marks */
extern T1 T199f80(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforms_to_constraint */
extern T1 T70f246(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_to_constraint_with_type_marks */
extern T1 T70f257(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.conforms_to_constraint */
extern T1 T183f103(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T183f118(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_to_constraint */
extern T1 T102f117(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T102f124(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER.constraint */
extern T0* T500f9(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.set_fatal_error */
extern void T1129f21(TC* ac, T0* C);
/* ET_CLASS.resolve_unfolded_tuple_actual_parameters_1 */
extern void T70f340(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_1 */
extern void T102f143(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.unfolded_empty_tuple_actual_parameters */
extern T0* T802f28(TC* ac, T0* C);
/* ET_ECF_SYSTEM.unfolded_empty_tuple_actual_parameters */
extern T0* T87f31(TC* ac, T0* C);
/* ET_SYSTEM.unfolded_empty_tuple_actual_parameters */
extern T0* T50f30(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.position */
extern T0* T2159f18(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.tokens */
extern T0* T2159s22(TC* ac);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T1448f11(TC* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.position */
extern T0* T720f11(TC* ac, T0* C);
/* ET_CLASS.is_routine_class */
extern T1 T70f164(TC* ac, T0* C);
/* ET_ECF_LIBRARY.obsolete_routine_type_mode */
extern T1 T802f100(TC* ac, T0* C);
/* ET_ECF_SYSTEM.obsolete_routine_type_mode */
extern T1 T87f142(TC* ac, T0* C);
/* ET_SYSTEM.obsolete_routine_type_mode */
extern T1 T50f119(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.current_universe */
extern T0* T1129f6(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class_type */
extern void T1113f32(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_class_type_constraint */
extern void T1113f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5a_error */
extern void T63f597(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_gvtcg5a */
extern T0* T1445c1277(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T63f185(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvtcg5a_error */
extern void T42f597(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T42f185(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference */
extern T1 T691f65(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_reference */
extern T1 T500f67(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T848f43(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_reference */
extern T1 T725f43(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference */
extern T1 T724f46(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_reference */
extern T1 T722f43(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_reference */
extern T1 T199f40(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_reference */
extern T1 T70f245(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_reference */
extern T1 T183f71(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_reference */
extern T1 T102f71(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5b_error */
extern void T63f596(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_gvtcg5b */
extern T0* T1445c1276(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_gvtcg5b_error */
extern void T42f596(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vtug2a_error */
extern void T63f595(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug2a */
extern T0* T1445c1275(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T63f184(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug2a_error */
extern void T42f595(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T42f184(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.current_universe */
extern T0* T1113f15(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtug1a_error */
extern void T63f594(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug1a */
extern T0* T1445c1274(TC* ac, T0* a1, T0* a2);
/* ET_CLASS_TYPE.upper_name */
extern T0* T102f120(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T63f183(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug1a_error */
extern void T42f594(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T42f183(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtct0a_error */
extern void T63f251(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtct0a */
extern T0* T1445c937(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtct_error */
extern T1 T63f33(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtct0a_error */
extern void T42f251(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtct_error */
extern T1 T42f33(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class_type */
extern void T1138f8(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.check_class_type_validity */
extern void T1138f9(TC* ac, T0* C, T0* a1);
extern T1 T1138f9ot1(TC* ac, T0* a1);
extern T1 T1138f9ot2(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg4a_error */
extern void T63f589(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4a */
extern T0* T1445c1269(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T63f181(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg4a_error */
extern void T42f589(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T42f181(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_creation_exported_to */
extern T1 T714f78(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.is_deferred */
extern T1 T70f112(TC* ac, T0* C);
/* ET_CLASS.has_deferred_mark */
extern T1 T70f132(TC* ac, T0* C);
/* ET_KEYWORD.is_deferred */
extern T1 T191f25(TC* ac, T0* C);
/* ET_CLASS.is_creation_exported_to */
extern T1 T70f238(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR_LIST.is_exported_to */
extern T1 T80f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.is_exported_to */
extern T1 T82f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.has_feature_name */
extern T1 T82f11(TC* ac, T0* C, T0* a1);
/* ET_CLIENTS.has_descendant */
extern T1 T267f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_ancestor */
extern T1 T70f229(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.has_class */
extern T1 T778f5(TC* ac, T0* C, T0* a1);
/* ET_CLIENT.base_class */
extern T0* T189f3(TC* ac, T0* C);
/* ET_CLASS.ancestors_built_successfully */
extern T1 T70f162(TC* ac, T0* C);
/* ET_CLIENTS.has_class */
extern T1 T267f10(TC* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.has_descendant */
extern T1 T182f6(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLIENT_LIST.has_class */
extern T1 T182f7(TC* ac, T0* C, T0* a1);
/* ET_CREATOR.is_empty */
extern T1 T82f7(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_creation_exported_to */
extern T1 T713f69(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.is_creation_exported_to */
extern T1 T712f72(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.is_creation_exported_to */
extern T1 T711f70(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vtcg4b_error */
extern void T63f588(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4b */
extern T0* T1445c1268(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vtcg4b_error */
extern void T42f588(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_CONSTRAINT_CREATOR.has_feature */
extern T1 T418f8(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.feature_name */
extern T0* T418f7(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.item */
extern T0* T418f10(TC* ac, T0* C, T6 a1);
/* ET_PARENT_CHECKER3.error_handler */
extern T0* T1138f5(TC* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.is_empty */
extern T1 T418f9(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.creation_procedures */
extern T0* T500f26(TC* ac, T0* C);
/* ET_PARENT_CHECKER3.set_fatal_error */
extern void T1138f10(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.process_class_type */
extern void T1128f11(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_class_type_validity */
extern void T1128f12(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.error_handler */
extern T0* T1128f8(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.current_system */
extern T0* T1128f7(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.set_fatal_error */
extern void T1128f13(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.current_universe */
extern T0* T1128f6(TC* ac, T0* C);
/* ET_PARENT_CHECKER1.process_class_type */
extern void T1112f10(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_class_type_validity */
extern void T1112f11(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.current_universe */
extern T0* T1112f7(TC* ac, T0* C);
/* ET_TYPE_CHECKER.process_class_type */
extern void T864f35(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_class_type_validity */
extern void T864f40(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T691f61(TC* ac, T0* C, T0* a1);
extern T1 T691f61ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T500f63(TC* ac, T0* C, T0* a1);
extern T1 T500f63ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T848f62(TC* ac, T0* C, T0* a1);
extern T1 T848f62ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T725f68(TC* ac, T0* C, T0* a1);
extern T1 T725f68ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T724f71(TC* ac, T0* C, T0* a1);
extern T1 T724f71ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T722f69(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T199f62(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T70f262(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T847f42(TC* ac, T0* C);
extern T1 T847f42ot1(TC* ac, T0* a1);
/* ET_LIKE_N.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T1844f19(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T70f240(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T506f22(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T691f69(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T500f71(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T183f98(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T2159f11(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T1448f8(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T1448f3(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T848f7(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.type */
extern T0* T725f9(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type */
extern T0* T724f12(TC* ac, T0* C);
/* ET_LIKE_FEATURE.type */
extern T0* T722f8(TC* ac, T0* C);
/* ET_LIKE_CURRENT.type */
extern T0* T199f18(TC* ac, T0* C);
/* ET_CLASS.type */
extern T0* T70f169(TC* ac, T0* C);
/* ET_TUPLE_TYPE.type */
extern T0* T183f18(TC* ac, T0* C);
/* ET_CLASS_TYPE.type */
extern T0* T102f21(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T848f76(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T725f79(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T724f82(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T722f80(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T720f8(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.type */
extern T0* T720f3(TC* ac, T0* C);
/* ET_LIKE_CURRENT.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T199f74(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T183f119(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T102f127(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T70f259(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T185f22(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T102f111(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T201f12(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T2158f11(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.current_system */
extern T0* T864f19(TC* ac, T0* C);
/* ET_TYPE_CHECKER.current_universe */
extern T0* T864f21(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1134f25(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1126f17(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class_type */
extern void T1135f13(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_class_type */
extern void T1135f16(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.current_universe */
extern T0* T1135f5(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class_type */
extern void T1125f14(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_class_type */
extern void T1125f17(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T691f67(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T500f69(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.has_identifier_anchored_type */
extern T1 T848f70(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.has_identifier_anchored_type */
extern T1 T725f73(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_identifier_anchored_type */
extern T1 T724f76(TC* ac, T0* C);
/* ET_LIKE_FEATURE.has_identifier_anchored_type */
extern T1 T722f74(TC* ac, T0* C);
/* ET_LIKE_CURRENT.has_identifier_anchored_type */
extern T1 T199f68(TC* ac, T0* C);
/* ET_CLASS.has_identifier_anchored_type */
extern T1 T70f247(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T506f24(TC* ac, T0* C);
/* ET_TUPLE_TYPE.has_identifier_anchored_type */
extern T1 T183f104(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_identifier_anchored_type */
extern T1 T2159f13(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T185f24(TC* ac, T0* C);
/* ET_CLASS_TYPE.has_identifier_anchored_type */
extern T1 T102f119(TC* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T201f14(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T2158f13(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.current_universe */
extern T0* T1125f5(TC* ac, T0* C);
/* ET_SIGNATURE_CHECKER.process_class_type */
extern void T1127f24(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_tuple_actual_parameters_unfolded */
extern void T1127f28(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.set_fatal_error */
extern void T1127f16(TC* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_class_type_vtct_validity */
extern void T1127f27(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.error_handler */
extern T0* T1127f8(TC* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class_type */
extern void T1124f16(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T201f4(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T2158f17(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.type */
extern T0* T2159f21(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.type */
extern T0* T506f5(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.type */
extern T0* T185f8(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.count */
extern T6 T201s3(TC* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.count */
extern T6 T2158f1(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.count */
extern T6 T2159f20(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.count */
extern T6 T506f1(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.count */
extern T6 T185f1(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.set_fatal_error */
extern void T1938f15(TC* ac, T0* C);
/* ET_CLASS.has_flattening_error */
extern T1 T70f163(TC* ac, T0* C);
/* ET_MASTER_CLASS.has_flattening_error */
extern T1 T188f47(TC* ac, T0* C);
/* ET_CLASS.features_flattened */
extern T1 T70f72(TC* ac, T0* C);
/* ET_MASTER_CLASS.features_flattened */
extern T1 T188f46(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class */
extern void T1937f15(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class */
extern void T1936f11(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class */
extern void T1935f4(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class */
extern void T1138f12(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class */
extern void T1135f18(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class */
extern void T1134f29(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_class */
extern void T1128f15(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_class */
extern void T1127f31(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class */
extern void T1126f21(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class */
extern void T1124f20(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class */
extern void T1112f14(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_class */
extern void T864f38(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class */
extern void T1125f13(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class */
extern void T1129f11(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class */
extern void T1113f31(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_class */
extern void T68f2304(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.internal_process_class */
extern void T68f2306(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_class_processed */
extern void T853f74(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_class_processed */
extern void T66f108(TC* ac, T0* C, T0* a1);
/* ET_CLASS.reset_preparsed */
extern void T70f295(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_group */
extern T0* T81s4(TC* ac);
/* ET_UNKNOWN_GROUP.make */
extern T0* T262c31(TC* ac);
/* KL_STRING_INPUT_STREAM.make */
extern T0* T1794c9(TC* ac, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_class */
extern void T241f5(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gaaaa_error */
extern void T63f586(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_assembly_error */
extern void T63f606(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.make_gaaaa */
extern T0* T2153c14(TC* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T824f98(TC* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T824f102(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_DOTNET_ASSEMBLY.lower_name */
extern T0* T207f96(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].item */
extern T0* T1632f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_DOTNET_ASSEMBLY.string_ */
extern T0* T824s104(TC* ac);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].is_empty */
extern T1 T1632f10(TC* ac, T0* C);
/* ET_ECF_SYSTEM.shortest_path */
extern T0* T87f143(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T87f143ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T87f143ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T87f143ac3(TC* ac, T0* a1, T0* a2);
/* KL_AGENT_ROUTINES [ET_UNIVERSE].negated */
extern T1 T1806s1(TC* ac, T0* a1, T0* a2);
/* PREDICATE [TUPLE [ET_UNIVERSE]].set_rout_disp_final */
extern void T1807f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* PROCEDURE [TUPLE [ET_UNIVERSE]].set_rout_disp_final */
extern void T171f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_SYSTEM.insert_in_hash_table */
extern void T87f252(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].force_first */
extern void T1632f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].put */
extern void T1632f15(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].move_cursors_right */
extern void T1632f18(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE].set_position */
extern void T1951f5(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].move_right */
extern void T1632f17(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].force */
extern void T1950s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_UNIVERSE].fill_with */
extern void T1949f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_UNIVERSE].extend */
extern void T1949f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].put_last */
extern void T1632f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].resize */
extern void T1632f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T1950s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T1949f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].new_capacity */
extern T6 T1632f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].extendible */
extern T1 T1632f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T824f93(TC* ac, T0* C, T0* a1);
extern T1 T824f93ot1(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].has */
extern T1 T1755f10(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T207f93(TC* ac, T0* C, T0* a1);
extern T1 T207f93ot1(TC* ac, T0* a1);
/* ET_LIBRARY.adapted_universe */
extern T0* T203f94(TC* ac, T0* C, T0* a1);
extern T1 T203f94ot1(TC* ac, T0* a1);
extern T1 T203f94ot2(TC* ac, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.adapted_dotnet_assembly */
extern T0* T174f5(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T1069f7(TC* ac, T0* C, T6 a1);
/* ET_ADAPTED_LIBRARIES.adapted_library */
extern T0* T173f5(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].item */
extern T0* T1068f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_LIBRARY.adapted_universe */
extern T0* T802f111(TC* ac, T0* C, T0* a1);
extern T1 T802f111ot1(TC* ac, T0* a1);
extern T1 T802f111ot2(TC* ac, T0* a1);
/* ET_SYSTEM.adapted_universe */
extern T0* T50f122(TC* ac, T0* C, T0* a1);
extern T1 T50f122ot1(TC* ac, T0* a1);
extern T1 T50f122ot2(TC* ac, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].before */
extern T1 T1804f4(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].back */
extern void T1804f16(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_back */
extern void T1803f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].add_traversing_cursor */
extern void T1803f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_next_cursor */
extern void T1804f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_position */
extern void T1804f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].remove_traversing_cursor */
extern void T1803f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_before */
extern void T1804f19(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_item */
extern T6 T1803f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].finish */
extern void T1804f15(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_finish */
extern void T1803f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_off */
extern T1 T1803f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].off */
extern T1 T1804f10(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].is_empty */
extern T1 T1803f34(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].forth */
extern void T1804f14(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_forth */
extern void T1803f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_after */
extern void T1804f17(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].go_after */
extern void T1804f13(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_go_after */
extern void T1803f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].has */
extern T1 T1803f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].search_position */
extern void T1803f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].hash_position */
extern T6 T1803f24(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.hash_code */
extern T6 T824f92(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.hash_code */
extern T6 T207f92(TC* ac, T0* C);
/* ET_LIBRARY.hash_code */
extern T6 T203f93(TC* ac, T0* C);
/* ET_ECF_LIBRARY.hash_code */
extern T6 T802f116(TC* ac, T0* C);
/* ET_SYSTEM.hash_code */
extern T6 T50f130(TC* ac, T0* C);
/* ET_ECF_SYSTEM.hash_code */
extern T6 T87f164(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_item */
extern T0* T1803f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_item */
extern T6 T1803f32(TC* ac, T0* C, T6 a1);
/* ET_ECF_DOTNET_ASSEMBLY.universes_do_if */
extern void T824f162(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLIES.universes_do_if */
extern void T1260f8(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].item */
extern T0* T1755f9(TC* ac, T0* C, T6 a1);
/* ET_DOTNET_ASSEMBLY.universes_do_if */
extern void T207f162(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.universes_do_if */
extern void T203f163(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_if */
extern void T174f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_LIBRARIES.universes_do_if */
extern void T173f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.universes_do_if */
extern void T802f192(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.universes_do_if */
extern void T87f290(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.universes_do_if */
extern void T50f211(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.universe_actions */
extern T0* T87f147(TC* ac, T0* C);
/* KL_AGENT_ROUTINES [ET_UNIVERSE].default_create */
extern T0* T1806c2(TC* ac);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].item */
extern T6 T1804f9(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_item */
extern T6 T1803f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_item */
extern T6 T1803f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].key */
extern T0* T1804f7(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_key */
extern T0* T1803f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].after */
extern T1 T1804f5(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].start */
extern void T1804f12(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_start */
extern void T1803f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_cursor */
extern T0* T1803f21(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].make */
extern T0* T1804c11(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].force_last */
extern void T1803f37(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_put */
extern void T1803f45(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].force */
extern void T1089s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_UNIVERSE].fill_with */
extern void T1090f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_UNIVERSE].extend */
extern void T1090f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_put */
extern void T1803f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_put */
extern void T1803f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].resize */
extern void T1803f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_resize */
extern void T1803f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].special_integer_ */
extern T0* T1803s28(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_resize */
extern void T1803f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].aliased_resized_area */
extern T0* T1089s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_UNIVERSE].aliased_resized_area */
extern T0* T1090f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_resize */
extern void T1803f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_resize */
extern void T1803f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_modulus */
extern T6 T1803f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_capacity */
extern T6 T1803f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_put */
extern void T1803f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].unset_found_item */
extern void T1803f40(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_map */
extern T0* T1803c36(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_with_equality_testers */
extern void T1803f39(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_sparse_container */
extern void T1803f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].set_internal_cursor */
extern void T1803f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_slots */
extern void T1803f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_clashes */
extern void T1803f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_key_storage */
extern void T1803f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].make */
extern T0* T1089s1(TC* ac, T6 a1);
/* SPECIAL [ET_UNIVERSE].make_empty */
extern T0* T1090c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].default_create */
extern T0* T1089c3(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_item_storage */
extern void T1803f51(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].make */
extern T0* T1632c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].set_internal_cursor */
extern void T1632f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].new_cursor */
extern T0* T1632f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE].make */
extern T0* T1951c4(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].make */
extern T0* T1950s1(TC* ac, T6 a1);
/* SPECIAL [ET_ADAPTED_UNIVERSE].make_empty */
extern T0* T1949c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].default_create */
extern T0* T1950c3(TC* ac);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.lower_name */
extern T0* T826f23(TC* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.lower_name */
extern T0* T821f21(TC* ac, T0* C);
/* ET_ECF_SYSTEM.adapted_universe */
extern T0* T87f157(TC* ac, T0* C, T0* a1);
extern T1 T87f157ot1(TC* ac, T0* a1);
extern T1 T87f157ot2(TC* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.lower_name */
extern T0* T824f94(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T207f101(TC* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T207f103(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_DOTNET_ASSEMBLY.string_ */
extern T0* T207s99(TC* ac);
/* ET_SYSTEM.shortest_path */
extern T0* T50f123(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.shortest_path */
extern T0* T50f123ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_SYSTEM.shortest_path */
extern T0* T50f123ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_SYSTEM.shortest_path */
extern T0* T50f123ac3(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM.insert_in_hash_table */
extern void T50f210(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_SYSTEM.universe_actions */
extern T0* T50f125(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T63f179(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gaaaa_error */
extern void T42f586(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_assembly_error */
extern void T42f606(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T42f179(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.dotnet_assembly */
extern T0* T89f42(TC* ac, T0* C);
/* ET_CLUSTER.dotnet_assembly */
extern T0* T67f23(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.dotnet_assembly */
extern T0* T262f12(TC* ac, T0* C);
/* ET_NONE_GROUP.dotnet_assembly */
extern T0* T198f11(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.error_handler */
extern T0* T241f2(TC* ac, T0* C);
/* ET_CLASS.set_syntax_error */
extern void T70f269(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gcaab_error */
extern void T63f243(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_cluster_error */
extern void T63f565(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_ERROR.make_gcaab */
extern T0* T2006c23(TC* ac, T0* a1, T0* a2);
/* ET_ECF_CLUSTER.full_lower_name */
extern T0* T89f43(TC* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.relative_lower_name */
extern T0* T89f58(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_CLUSTER.relative_lower_name */
extern T0* T89f58p1(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.relative_lower_name */
extern T0* T802f108(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.string_ */
extern T0* T802s106(TC* ac);
/* ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T207f102(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T207f102ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T207f102ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T207f102ac3(TC* ac, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T207f168(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.universe_actions */
extern T0* T207f104(TC* ac, T0* C);
/* ET_LIBRARY.shortest_path */
extern T0* T203f102(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.shortest_path */
extern T0* T203f102ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LIBRARY.shortest_path */
extern T0* T203f102ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.shortest_path */
extern T0* T203f102ac3(TC* ac, T0* a1, T0* a2);
/* ET_LIBRARY.insert_in_hash_table */
extern void T203f170(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_LIBRARY.universe_actions */
extern T0* T203f104(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T824f99(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T824f99ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T824f99ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T824f99ac3(TC* ac, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T824f166(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.universe_actions */
extern T0* T824f103(TC* ac, T0* C);
/* ET_ECF_LIBRARY.shortest_path */
extern T0* T802f112(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T802f112ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T802f112ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T802f112ac3(TC* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.insert_in_hash_table */
extern void T802f185(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_LIBRARY.universe_actions */
extern T0* T802f114(TC* ac, T0* C);
/* ET_ECF_LIBRARY.lower_name */
extern T0* T802f110(TC* ac, T0* C);
/* ET_ECF_SYSTEM.relative_lower_name */
extern T0* T87f160(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.string_ */
extern T0* T87s158(TC* ac);
/* ET_ECF_SYSTEM.lower_name */
extern T0* T87f162(TC* ac, T0* C);
/* ET_ECF_CLUSTER.string_ */
extern T0* T89s52(TC* ac);
/* ET_ECF_CLUSTER.lower_name */
extern T0* T89f62(TC* ac, T0* C);
/* ET_ECF_CLUSTER.current_system */
extern T0* T89f41(TC* ac, T0* C);
/* ET_CLUSTER.full_lower_name */
extern T0* T67f24(TC* ac, T0* C, T2 a1);
/* ET_CLUSTER.relative_lower_name */
extern T0* T67f25(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_CLUSTER.relative_lower_name */
extern T0* T67f25p1(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.relative_lower_name */
extern T0* T50f132(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.string_ */
extern T0* T50s124(TC* ac);
/* ET_SYSTEM.lower_name */
extern T0* T50f134(TC* ac, T0* C);
/* ET_CLUSTER.string_ */
extern T0* T67s27(TC* ac);
/* ET_CLUSTER.lower_name */
extern T0* T67f26(TC* ac, T0* C);
/* ET_CLUSTER.current_system */
extern T0* T67f31(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T63f27(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaab_error */
extern void T42f243(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_cluster_error */
extern void T42f565(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T42f27(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvscn1b_error */
extern void T63f242(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvscn1b */
extern T0* T1445c932(TC* ac, T0* a1, T0* a2);
/* ET_UNKNOWN_GROUP.full_lower_name */
extern T0* T262f13(TC* ac, T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.relative_lower_name */
extern T0* T262f14(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.string_ */
extern T0* T262s16(TC* ac);
/* ET_UNKNOWN_GROUP.lower_name */
extern T0* T262f15(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.universe */
extern T0* T262f7(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_system */
extern T0* T81s620(TC* ac);
/* ET_SYSTEM.make */
extern T0* T50c139(TC* ac, T0* a1);
/* ET_SYSTEM.set_kernel_types */
extern void T50f145(TC* ac, T0* C);
/* ET_SYSTEM.set_wide_character_type */
extern void T50f188(TC* ac, T0* C);
/* ET_MASTER_CLASS.set_marked */
extern void T188f51(TC* ac, T0* C, T1 a1);
/* ET_CLASS.set_marked */
extern void T70f288(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM.master_class */
extern T0* T50f129(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].force_last_new */
extern void T177f41(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_put */
extern void T177f49(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].force */
extern void T1074s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].fill_with */
extern void T1075f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].extend */
extern void T1075f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_put */
extern void T177f48(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].force */
extern void T1073s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_MASTER_CLASS].fill_with */
extern void T1070f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_MASTER_CLASS].extend */
extern void T1070f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_put */
extern void T177f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_put */
extern void T177f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_item */
extern T6 T177f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].hash_position */
extern T6 T177f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].resize */
extern void T177f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_resize */
extern void T177f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].special_integer_ */
extern T0* T177s31(TC* ac);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_resize */
extern void T177f53(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].aliased_resized_area */
extern T0* T1074s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME].aliased_resized_area */
extern T0* T1075f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_resize */
extern void T177f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].aliased_resized_area */
extern T0* T1073s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_MASTER_CLASS].aliased_resized_area */
extern T0* T1070f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_item */
extern T0* T177f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_item */
extern T6 T177f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_resize */
extern void T177f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_modulus */
extern T6 T177f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_capacity */
extern T6 T177f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].unset_found_item */
extern void T177f44(TC* ac, T0* C);
/* ET_MASTER_CLASS.make */
extern T0* T188c50(TC* ac, T0* a1, T0* a2);
/* ET_MASTER_CLASS.tokens */
extern T0* T188s22(TC* ac);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].found_item */
extern T0* T177f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_item */
extern T0* T177f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].found */
extern T1 T177f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].search */
extern void T177f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].search_position */
extern void T177f43(TC* ac, T0* C, T0* a1);
/* ET_CLASS_NAME_TESTER.test */
extern T1 T178f1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.same_class_name */
extern T1 T303f8(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_class_name */
extern T0* T81s60(TC* ac);
/* ET_SYSTEM.tokens */
extern T0* T50s126(TC* ac);
/* ET_SYSTEM.set_typed_pointer_type */
extern void T50f187(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.put_first */
extern void T185f28(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].force */
extern void T1085s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T1083f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].extend */
extern void T1083f8(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.fixed_array */
extern T0* T185f11(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T1085c3(TC* ac);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T185c27(TC* ac, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T185f27p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T1085s1(TC* ac, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T1083c5(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.right_bracket_symbol */
extern T0* T81s634(TC* ac);
/* ET_SYMBOL.make_right_bracket */
extern T0* T282c109(TC* ac);
/* ET_SYMBOL.make_leaf */
extern void T282f121(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.left_bracket_symbol */
extern T0* T81s705(TC* ac);
/* ET_BRACKET_SYMBOL.make */
extern T0* T333c129(TC* ac);
/* ET_BRACKET_SYMBOL.make_leaf */
extern void T333f132(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T185s9(TC* ac);
/* ET_TOKEN_CONSTANTS.typed_pointer_class_name */
extern T0* T81s59(TC* ac);
/* ET_SYSTEM.set_type_type */
extern void T50f186(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_class_name */
extern T0* T81s57(TC* ac);
/* ET_SYSTEM.set_system_string_type */
extern void T50f185(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.system_string_class_name */
extern T0* T81s56(TC* ac);
/* ET_SYSTEM.set_system_object_type */
extern void T50f184(TC* ac, T0* C);
/* ET_PARENT_LIST.put_first */
extern void T181f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].force */
extern void T1079s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].fill_with */
extern void T1078f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].extend */
extern void T1078f7(TC* ac, T0* C, T0* a1);
/* ET_PARENT_LIST.fixed_array */
extern T0* T181f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].default_create */
extern T0* T1079c2(TC* ac);
/* ET_PARENT_LIST.make_with_capacity */
extern T0* T181c11(TC* ac, T6 a1);
/* ET_PARENT_LIST.make_with_capacity */
extern void T181f11p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].make */
extern T0* T1079s1(TC* ac, T6 a1);
/* SPECIAL [ET_PARENT_ITEM].make_empty */
extern T0* T1078c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.inherit_keyword */
extern T0* T81s670(TC* ac);
/* ET_KEYWORD.make_inherit */
extern T0* T191c89(TC* ac);
/* ET_PARENT_LIST.tokens */
extern T0* T181s6(TC* ac);
/* ET_PARENT.make */
extern T0* T180c11(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TOKEN_CONSTANTS.end_keyword */
extern T0* T81s575(TC* ac);
/* ET_KEYWORD.make_end */
extern T0* T191c46(TC* ac);
/* ET_PARENT.tokens */
extern T0* T180s9(TC* ac);
/* ET_PARENT.has_feature_adaptation */
extern T1 T180f8(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.system_object_class_name */
extern T0* T81s55(TC* ac);
/* ET_SYSTEM.set_string_type */
extern void T50f183(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_class_name */
extern T0* T81s54(TC* ac);
/* ET_SYSTEM.set_string_32_type */
extern void T50f182(TC* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.make */
extern T0* T186c6(TC* ac, T0* a1);
/* ET_BRACED_TYPE_LIST.make */
extern T0* T1086c8(TC* ac);
/* ET_BRACED_TYPE_LIST.make */
extern void T1086f8p1(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].make */
extern T0* T1665s1(TC* ac, T6 a1);
/* SPECIAL [ET_TYPE_ITEM].make_empty */
extern T0* T1664c4(TC* ac, T6 a1);
/* ET_BRACED_TYPE_LIST.fixed_array */
extern T0* T1086f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].default_create */
extern T0* T1665c2(TC* ac);
/* ET_TOKEN_CONSTANTS.right_brace_symbol */
extern T0* T81s633(TC* ac);
/* ET_SYMBOL.make_right_brace */
extern T0* T282c108(TC* ac);
/* ET_TOKEN_CONSTANTS.left_brace_symbol */
extern T0* T81s632(TC* ac);
/* ET_SYMBOL.make_left_brace */
extern T0* T282c107(TC* ac);
/* ET_BRACED_TYPE_LIST.tokens */
extern T0* T1086s5(TC* ac);
/* ET_TOKEN_CONSTANTS.string_32_class_name */
extern T0* T81s53(TC* ac);
/* ET_SYSTEM.set_string_8_type */
extern void T50f181(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_8_class_name */
extern T0* T81s52(TC* ac);
/* ET_SYSTEM.set_special_type */
extern void T50f180(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.special_class_name */
extern T0* T81s51(TC* ac);
/* ET_SYSTEM.set_routine_type */
extern void T50f179(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.routine_class_name */
extern T0* T81s50(TC* ac);
/* ET_SYSTEM.set_real_64_type */
extern void T50f178(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_class_name */
extern T0* T81s49(TC* ac);
/* ET_SYSTEM.set_real_32_type */
extern void T50f177(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_class_name */
extern T0* T81s48(TC* ac);
/* ET_SYSTEM.set_real_type */
extern void T50f176(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_class_name */
extern T0* T81s47(TC* ac);
/* ET_SYSTEM.set_procedure_type */
extern void T50f175(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.procedure_class_name */
extern T0* T81s46(TC* ac);
/* ET_SYSTEM.set_predicate_type */
extern void T50f174(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.predicate_class_name */
extern T0* T81s45(TC* ac);
/* ET_SYSTEM.set_pointer_type */
extern void T50f173(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_class_name */
extern T0* T81s44(TC* ac);
/* ET_SYSTEM.set_natural_64_type */
extern void T50f172(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_class_name */
extern T0* T81s43(TC* ac);
/* ET_SYSTEM.set_natural_32_type */
extern void T50f171(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_class_name */
extern T0* T81s42(TC* ac);
/* ET_SYSTEM.set_natural_16_type */
extern void T50f170(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_class_name */
extern T0* T81s41(TC* ac);
/* ET_SYSTEM.set_natural_8_type */
extern void T50f169(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_class_name */
extern T0* T81s40(TC* ac);
/* ET_SYSTEM.set_natural_type */
extern void T50f168(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_class_name */
extern T0* T81s39(TC* ac);
/* ET_SYSTEM.set_iterable_type */
extern void T50f167(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.iterable_class_name */
extern T0* T81s37(TC* ac);
/* ET_SYSTEM.set_ise_exception_manager_type */
extern void T50f166(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ise_exception_manager_class_name */
extern T0* T81s36(TC* ac);
/* ET_SYSTEM.set_integer_64_type */
extern void T50f165(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_class_name */
extern T0* T81s35(TC* ac);
/* ET_SYSTEM.set_integer_32_type */
extern void T50f164(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_class_name */
extern T0* T81s34(TC* ac);
/* ET_SYSTEM.set_integer_16_type */
extern void T50f163(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_class_name */
extern T0* T81s33(TC* ac);
/* ET_SYSTEM.set_integer_8_type */
extern void T50f162(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_class_name */
extern T0* T81s32(TC* ac);
/* ET_SYSTEM.set_integer_type */
extern void T50f161(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_class_name */
extern T0* T81s31(TC* ac);
/* ET_SYSTEM.set_immutable_string_32_type */
extern void T50f160(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.immutable_string_32_class_name */
extern T0* T81s30(TC* ac);
/* ET_SYSTEM.set_immutable_string_8_type */
extern void T50f159(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.immutable_string_8_class_name */
extern T0* T81s29(TC* ac);
/* ET_SYSTEM.set_function_type */
extern void T50f158(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.function_class_name */
extern T0* T81s28(TC* ac);
/* ET_SYSTEM.set_exception_manager_type */
extern void T50f157(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_manager_class_name */
extern T0* T81s27(TC* ac);
/* ET_SYSTEM.set_exception_type */
extern void T50f156(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_class_name */
extern T0* T81s26(TC* ac);
/* ET_SYSTEM.set_double_type */
extern void T50f155(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.double_class_name */
extern T0* T81s25(TC* ac);
/* ET_SYSTEM.set_character_32_type */
extern void T50f154(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_class_name */
extern T0* T81s24(TC* ac);
/* ET_SYSTEM.set_character_8_type */
extern void T50f153(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_class_name */
extern T0* T81s23(TC* ac);
/* ET_SYSTEM.set_character_type */
extern void T50f152(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_class_name */
extern T0* T81s22(TC* ac);
/* ET_SYSTEM.set_boolean_type */
extern void T50f151(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_class_name */
extern T0* T81s21(TC* ac);
/* ET_SYSTEM.set_array_type */
extern void T50f150(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.array_class_name */
extern T0* T81s20(TC* ac);
/* ET_SYSTEM.set_tuple_type */
extern void T50f149(TC* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T201c18(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.tuple_class_name */
extern T0* T81s18(TC* ac);
/* ET_SYSTEM.set_none_type */
extern void T50f148(TC* ac, T0* C);
/* ET_MASTER_CLASS.add_first_local_class */
extern void T188f52(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_first_local_non_override_class */
extern void T188f57(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.update_intrinsic_class */
extern void T188f61(TC* ac, T0* C);
/* ET_MASTER_CLASS.set_intrinsic_class */
extern void T188f62(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T188f62ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T188f62ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T188f62ac3(TC* ac, T0* a1);
extern T1 T188f62ot1(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_MASTER_CLASS]].set_rout_disp_final */
extern void T1093f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_MASTER_CLASS.is_marked */
extern T1 T188f28(TC* ac, T0* C);
/* ET_MASTER_CLASS.mark_overridden */
extern void T188f64(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_overriding_class */
extern void T188f67(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].force_last */
extern void T1091f19(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].resize */
extern void T1091f22(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].new_capacity */
extern T6 T1091f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].extendible */
extern T1 T1091f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].make */
extern T0* T1091c14(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].set_internal_cursor */
extern void T1091f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].new_cursor */
extern T0* T1091f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].make */
extern T0* T1882c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].make */
extern T0* T1073s2(TC* ac, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].make_empty */
extern T0* T1070c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].default_create */
extern T0* T1073c3(TC* ac);
/* ET_MASTER_CLASS.is_override */
extern T1 T188f32(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_override */
extern T1 T70f70(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].do_all */
extern void T1091f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].item */
extern T0* T1091f7(TC* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.unmark_overridden */
extern void T188f63(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_overriding_class */
extern void T188f66(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove_first */
extern void T1091f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove */
extern void T1091f20(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].keep_head */
extern void T1070f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].set_count */
extern void T1070f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_left */
extern void T1091f27(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_cursors_left */
extern void T1091f26(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_position */
extern void T1882f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove_last */
extern void T1091f25(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_last_cursors_after */
extern void T1091f31(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_next_cursor */
extern void T1882f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_after */
extern void T1882f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].first */
extern T0* T1091f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].is_empty */
extern T1 T1091f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].delete */
extern void T1091f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_all_cursors_after */
extern void T1091f24(TC* ac, T0* C);
/* ET_CLASS.is_unknown_class */
extern T1 T70f69(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_class_name */
extern T0* T81s576(TC* ac);
/* DS_ARRAYED_LIST [ET_CLASS].force_first */
extern void T69f22(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].put */
extern void T69f23(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_cursors_right */
extern void T69f26(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_position */
extern void T777f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].move_right */
extern void T69f25(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].put_last */
extern void T69f24(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].resize */
extern void T69f18(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_capacity */
extern T6 T69f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].extendible */
extern T1 T69f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].make */
extern T0* T69c15(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].set_internal_cursor */
extern void T69f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_cursor */
extern T0* T69f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].make */
extern T0* T777c9(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].make */
extern T0* T776s1(TC* ac, T6 a1);
/* SPECIAL [ET_CLASS].make_empty */
extern T0* T775c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].default_create */
extern T0* T776c3(TC* ac);
/* ET_MASTER_CLASS.add_first_local_override_class */
extern void T188f56(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_in_override_group */
extern T1 T70f68(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_override */
extern T1 T89f27(TC* ac, T0* C);
/* ET_CLUSTER.is_override */
extern T1 T67f9(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_override */
extern T1 T262s8(TC* ac);
/* ET_NONE_GROUP.is_override */
extern T1 T198s5(TC* ac);
/* ET_MASTER_CLASS.add_first_local_ignored_class */
extern void T188f55(TC* ac, T0* C, T0* a1);
/* ET_NONE_GROUP.make */
extern T0* T198c30(TC* ac, T0* a1);
/* ET_SYSTEM.register_class */
extern void T50f190(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_id */
extern void T70f267(TC* ac, T0* C, T6 a1);
/* ET_CLASS.make */
extern void T70f265(TC* ac, T0* C, T0* a1);
/* ET_CLASS.make */
extern T0* T70c265(TC* ac, T0* a1);
/* ET_CLASS_CODES.class_code */
extern T8 T779s1(TC* ac, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].found_item */
extern T8 T1188f28(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_item */
extern T8 T1188f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].found */
extern T1 T1188f29(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].search */
extern void T1188f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].search_position */
extern void T1188f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].hash_position */
extern T6 T1188f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_item */
extern T0* T1188f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_item */
extern T6 T1188f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_item */
extern T6 T1188f26(TC* ac, T0* C, T6 a1);
/* ET_CLASS_CODES.codes_by_name */
extern T0* T779s2(TC* ac);
/* ET_TOKEN_CONSTANTS.iteration_cursor_class_name */
extern T0* T81s623(TC* ac);
/* ET_TOKEN_CONSTANTS.disposable_class_name */
extern T0* T81s622(TC* ac);
/* ET_TOKEN_CONSTANTS.any_class_name */
extern T0* T81s14(TC* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].force_last */
extern void T1188f37(TC* ac, T0* C, T8 a1, T0* a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_put */
extern void T1188f45(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_put */
extern void T1188f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_put */
extern void T1188f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].resize */
extern void T1188f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_resize */
extern void T1188f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].special_integer_ */
extern T0* T1188s31(TC* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_resize */
extern void T1188f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_resize */
extern void T1188f48(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].aliased_resized_area */
extern T0* T1724s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [NATURAL_8].aliased_resized_area */
extern T0* T1064f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_resize */
extern void T1188f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_modulus */
extern T6 T1188f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_capacity */
extern T6 T1188f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_put */
extern void T1188f41(TC* ac, T0* C, T8 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [NATURAL_8].force */
extern void T1724s4(TC* ac, T0* a1, T8 a2, T6 a3);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].unset_found_item */
extern void T1188f40(TC* ac, T0* C);
/* ET_CLASS_CODES.tokens */
extern T0* T779s6(TC* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].set_key_equality_tester */
extern void T1188f36(TC* ac, T0* C, T0* a1);
/* ET_CLASS_CODES.class_name_tester */
extern T0* T779s4(TC* ac);
/* ET_CLASS_NAME_TESTER.default_create */
extern T0* T178c2(TC* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_map */
extern T0* T1188c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_with_equality_testers */
extern void T1188f38(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_sparse_container */
extern void T1188f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].set_internal_cursor */
extern void T1188f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_cursor */
extern T0* T1188f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME].make */
extern T0* T1725c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_slots */
extern void T1188f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_clashes */
extern void T1188f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_key_storage */
extern void T1188f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].make */
extern T0* T1074s2(TC* ac, T6 a1);
/* SPECIAL [ET_CLASS_NAME].make_empty */
extern T0* T1075c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].default_create */
extern T0* T1074c3(TC* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_item_storage */
extern void T1188f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].make */
extern T0* T1724s2(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].default_create */
extern T0* T1724c3(TC* ac);
/* ET_TOKEN_CONSTANTS.class_keyword */
extern T0* T81s574(TC* ac);
/* ET_KEYWORD.make_class */
extern T0* T191c45(TC* ac);
/* ET_TOKEN_CONSTANTS.empty_procedures */
extern T0* T81s573(TC* ac);
/* ET_PROCEDURE_LIST.make_with_capacity */
extern T0* T770c8(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].make */
extern T0* T1165s1(TC* ac, T6 a1);
/* SPECIAL [ET_PROCEDURE].make_empty */
extern T0* T1163c5(TC* ac, T6 a1);
/* ET_PROCEDURE_LIST.fixed_array */
extern T0* T770f4(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].default_create */
extern T0* T1165c3(TC* ac);
/* ET_TOKEN_CONSTANTS.empty_queries */
extern T0* T81s572(TC* ac);
/* ET_QUERY_LIST.make_with_capacity */
extern T0* T769c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].make */
extern T0* T1162s1(TC* ac, T6 a1);
/* SPECIAL [ET_QUERY].make_empty */
extern T0* T1160c5(TC* ac, T6 a1);
/* ET_QUERY_LIST.fixed_array */
extern T0* T769f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_QUERY].default_create */
extern T0* T1162c3(TC* ac);
/* ET_TOKEN_CONSTANTS.empty_ancestors */
extern T0* T81s571(TC* ac);
/* ET_BASE_TYPE_LIST.make_with_capacity */
extern T0* T778c7(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].make */
extern T0* T1187s1(TC* ac, T6 a1);
/* SPECIAL [ET_BASE_TYPE].make_empty */
extern T0* T1186c5(TC* ac, T6 a1);
/* ET_BASE_TYPE_LIST.fixed_array */
extern T0* T778f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].default_create */
extern T0* T1187c3(TC* ac);
/* ET_TOKEN_CONSTANTS.none_class_name */
extern T0* T81s17(TC* ac);
/* ET_SYSTEM.set_any_type */
extern void T50f147(TC* ac, T0* C);
/* ET_CLIENT_LIST.put_first */
extern void T182f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].force */
extern void T1081s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLIENT_ITEM].fill_with */
extern void T1080f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT_ITEM].extend */
extern void T1080f8(TC* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.fixed_array */
extern T0* T182f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].default_create */
extern T0* T1081c3(TC* ac);
/* ET_CLIENT.make */
extern T0* T189c6(TC* ac, T0* a1, T0* a2);
/* ET_CLIENT_LIST.make_with_capacity */
extern T0* T182c13(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].make */
extern T0* T1081s1(TC* ac, T6 a1);
/* SPECIAL [ET_CLIENT_ITEM].make_empty */
extern T0* T1080c5(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.detachable_separate_type_mark */
extern T0* T81s16(TC* ac);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.make */
extern T0* T192c24(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.separate_keyword */
extern T0* T81s577(TC* ac);
/* ET_KEYWORD.make_separate */
extern T0* T191c47(TC* ac);
/* ET_SYSTEM.make_adapted */
extern void T50f144(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.default_read_only_value */
extern T1 T50f127(TC* ac, T0* C);
/* ET_SYSTEM.set_unknown_kernel_types */
extern void T50f143(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_convert_feature */
extern T0* T81s13(TC* ac);
/* ET_TOKEN_CONSTANTS.unknown_generic_class_type */
extern T0* T81s12(TC* ac);
/* ET_ACTUAL_PARAMETER_LIST.make */
extern T0* T185c29(TC* ac);
/* ET_ACTUAL_PARAMETER_LIST.make */
extern void T185f29p1(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.empty_actual_parameters */
extern T0* T81s11(TC* ac);
/* ET_TOKEN_CONSTANTS.unknown_tuple_type */
extern T0* T81s10(TC* ac);
/* ET_TOKEN_CONSTANTS.empty_clients */
extern T0* T81s9(TC* ac);
/* ET_CLIENT_LIST.make */
extern T0* T182c15(TC* ac);
/* ET_TOKEN_CONSTANTS.unknown_parents */
extern T0* T81s8(TC* ac);
/* ET_TOKEN_CONSTANTS.unknown_parent */
extern T0* T81s7(TC* ac);
/* ET_TOKEN_CONSTANTS.unknown_class_type */
extern T0* T81s6(TC* ac);
/* ET_SYSTEM.set_system_name */
extern void T50f142(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.initialize */
extern void T50f141(TC* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.make_empty */
extern T0* T174c6(TC* ac);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1069c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1069f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1069f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1663c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1662s1(TC* ac, T6 a1);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T1661c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T1662c3(TC* ac);
/* ET_CLUSTERS.make_empty */
extern T0* T94c3(TC* ac);
/* DS_ARRAYED_LIST [ET_CLUSTER].make */
extern T0* T837c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].set_internal_cursor */
extern void T837f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].new_cursor */
extern T0* T837f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLUSTER].make */
extern T0* T1269c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].make */
extern T0* T1267s1(TC* ac, T6 a1);
/* SPECIAL [ET_CLUSTER].make_empty */
extern T0* T1268c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].default_create */
extern T0* T1267c3(TC* ac);
/* ET_ADAPTED_LIBRARIES.make_empty */
extern T0* T173c6(TC* ac);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].make */
extern T0* T1068c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].set_internal_cursor */
extern void T1068f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].new_cursor */
extern T0* T1068f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY].make */
extern T0* T1660c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].make */
extern T0* T1659s1(TC* ac, T6 a1);
/* SPECIAL [ET_ADAPTED_LIBRARY].make_empty */
extern T0* T1658c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].default_create */
extern T0* T1659c3(TC* ac);
/* ET_SYSTEM.initialize */
extern void T50f141p1(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].set_key_equality_tester */
extern void T177f39(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.class_name_tester */
extern T0* T50s136(TC* ac);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_map */
extern T0* T177c38(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_with_equality_testers */
extern void T177f42(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_sparse_container */
extern void T177f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].set_internal_cursor */
extern void T177f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T177f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].make */
extern T0* T1076c10(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_slots */
extern void T177f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_clashes */
extern void T177f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_key_storage */
extern void T177f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_item_storage */
extern void T177f55(TC* ac, T0* C, T6 a1);
/* ET_UNKNOWN_GROUP.tokens */
extern T0* T262s6(TC* ac);
/* ET_UNKNOWN_GROUP.current_system */
extern T0* T262f4(TC* ac, T0* C);
/* ET_NONE_GROUP.full_lower_name */
extern T0* T198f12(TC* ac, T0* C, T2 a1);
/* ET_NONE_GROUP.relative_lower_name */
extern T0* T198f13(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.string_ */
extern T0* T198s15(TC* ac);
/* ET_NONE_GROUP.lower_name */
extern T0* T198f14(TC* ac, T0* C);
/* ET_NONE_GROUP.current_system */
extern T0* T198f10(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T63f13(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvscn1b_error */
extern void T42f242(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T42f13(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.syntax_error */
extern T1 T68f1053(TC* ac, T0* C);
/* ET_CLASS.set_group */
extern void T70f266(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_filename */
extern void T70f284(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_file */
extern void T68f1064(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_CLASS.set_has_utf8_bom */
extern void T70f277(TC* ac, T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yyparse */
extern void T68f1068(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_pop_last_value */
extern void T68f1082(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_push_error_value */
extern void T68f1081(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ANY].force */
extern void T271s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ANY].fill_with */
extern void T272f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ANY].extend */
extern void T272f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ANY].aliased_resized_area */
extern T0* T271s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ANY].aliased_resized_area */
extern T0* T272f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action */
extern void T68f1080(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_801_1000 */
extern void T68f1110(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_954 */
extern void T68f2081(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_counter */
extern void T68f2090(TC* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].force */
extern void T245f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].resize */
extern void T245f13(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].new_capacity */
extern T6 T245f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].extendible */
extern T1 T245f6(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_953 */
extern void T68f2080(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].force */
extern void T302s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_IDENTIFIER].fill_with */
extern void T304f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_IDENTIFIER].extend */
extern void T304f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_952 */
extern void T68f2079(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_951 */
extern void T68f2078(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_950 */
extern void T68f2077(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].force */
extern void T314s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_REAL_CONSTANT].fill_with */
extern void T316f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_REAL_CONSTANT].extend */
extern void T316f10(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_cast_type */
extern void T681f45(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_cast_type */
extern void T680f48(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_target_type */
extern T0* T65f264(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.ast_factory */
extern T0* T68f762(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_949 */
extern void T68f2076(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_sign */
extern void T681f44(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_sign */
extern void T680f47(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_948 */
extern void T68f2075(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_947 */
extern void T68f2074(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_946 */
extern void T68f2073(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_945 */
extern void T68f2072(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_944 */
extern void T68f2071(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_943 */
extern void T68f2070(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].force */
extern void T305s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].fill_with */
extern void T307f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].extend */
extern void T307f10(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_cast_type */
extern void T679f67(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_cast_type */
extern void T678f67(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_cast_type */
extern void T677f67(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_cast_type */
extern void T676f67(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_cast_type */
extern void T675f70(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_942 */
extern void T68f2069(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.set_sign */
extern void T679f66(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_sign */
extern void T678f66(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_sign */
extern void T677f66(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_sign */
extern void T676f66(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_sign */
extern void T675f69(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_941 */
extern void T68f2068(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_940 */
extern void T68f2067(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_939 */
extern void T68f2066(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_938 */
extern void T68f2065(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_937 */
extern void T68f2064(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_936 */
extern void T68f2063(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].force */
extern void T287s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].fill_with */
extern void T289f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].extend */
extern void T289f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_935 */
extern void T68f2062(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_934 */
extern void T68f2061(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].force */
extern void T293s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].fill_with */
extern void T295f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].extend */
extern void T295f10(TC* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_cast_type */
extern void T671f50(TC* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.set_cast_type */
extern void T686f53(TC* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.set_cast_type */
extern void T685f49(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_933 */
extern void T68f2060(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T293s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T295f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_932 */
extern void T68f2059(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_931 */
extern void T68f2058(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_930 */
extern void T68f2057(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_929 */
extern void T68f2056(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].force */
extern void T311s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING].fill_with */
extern void T313f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING].extend */
extern void T313f10(TC* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.set_cast_type */
extern void T674f53(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_cast_type */
extern void T673f49(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_cast_type */
extern void T672f51(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_928 */
extern void T68f2055(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T311s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T313f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_927 */
extern void T68f2054(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_926 */
extern void T68f2053(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_925 */
extern void T68f2052(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_924 */
extern void T68f2051(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_923 */
extern void T68f2050(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_922 */
extern void T68f2049(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_921 */
extern void T68f2048(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_920 */
extern void T68f2047(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_919 */
extern void T68f2046(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_918 */
extern void T68f2045(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_917 */
extern void T68f2044(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_916 */
extern void T68f2043(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_915 */
extern void T68f2042(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_914 */
extern void T68f2041(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_913 */
extern void T68f2040(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_912 */
extern void T68f2039(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_911 */
extern void T68f2038(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_910 */
extern void T68f2037(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_909 */
extern void T68f2036(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_908 */
extern void T68f2035(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_907 */
extern void T68f2034(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_906 */
extern void T68f2033(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_905 */
extern void T68f2032(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_904 */
extern void T68f2031(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_903 */
extern void T68f2030(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_902 */
extern void T68f2029(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_901 */
extern void T68f2028(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_900 */
extern void T68f2027(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_899 */
extern void T68f2026(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_898 */
extern void T68f2025(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_897 */
extern void T68f2024(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_896 */
extern void T68f2023(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_895 */
extern void T68f2022(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].force */
extern void T351s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].fill_with */
extern void T353f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].extend */
extern void T353f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T351s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T353f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_typed_open_argument */
extern T0* T65f333(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.make */
extern T0* T766c14(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.question_mark_symbol */
extern T0* T81s916(TC* ac);
/* ET_QUESTION_MARK_SYMBOL.make */
extern T0* T336c46(TC* ac);
/* ET_QUESTION_MARK_SYMBOL.make_leaf */
extern void T336f49(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.tokens */
extern T0* T766s8(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_894 */
extern void T68f2021(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_893 */
extern void T68f2020(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_892 */
extern void T68f2019(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].force */
extern void T354s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].fill_with */
extern void T356f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].extend */
extern void T356f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T354s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T356f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.increment_counter */
extern void T68f2091(TC* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].replace */
extern void T245f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].item */
extern T6 T245f5(TC* ac, T0* C);
/* ET_AST_FACTORY.new_agent_argument_operand_comma */
extern T0* T65f332(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_891 */
extern void T68f2018(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].force */
extern void T357s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].fill_with */
extern void T359f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].extend */
extern void T359f10(TC* ac, T0* C, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put_first */
extern void T358f15(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].force */
extern void T1577s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].fill_with */
extern void T1576f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].extend */
extern void T1576f7(TC* ac, T0* C, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.fixed_array */
extern T0* T358f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T1577c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_890 */
extern void T68f2017(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T357s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T359f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_argument_operands */
extern T0* T65f331(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern T0* T358c14(TC* ac, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern void T358f14p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T1577s1(TC* ac, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].make_empty */
extern T0* T1576c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.right_parenthesis_symbol */
extern T0* T81s631(TC* ac);
/* ET_SYMBOL.make_right_parenthesis */
extern T0* T282c106(TC* ac);
/* ET_TOKEN_CONSTANTS.left_parenthesis_symbol */
extern T0* T81s630(TC* ac);
/* ET_SYMBOL.make_left_parenthesis */
extern T0* T282c105(TC* ac);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.tokens */
extern T0* T358s5(TC* ac);
/* ET_EIFFEL_PARSER.counter_value */
extern T6 T68f962(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.last_symbol */
extern T0* T68f964(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].item */
extern T0* T249f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_889 */
extern void T68f2016(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_888 */
extern void T68f2015(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_symbol */
extern void T68f2094(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].force */
extern void T249f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].force */
extern void T281s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL].fill_with */
extern void T283f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL].extend */
extern void T283f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].resize */
extern void T249f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T281s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T283f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].new_capacity */
extern T6 T249f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].extendible */
extern T1 T249f6(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_887 */
extern void T68f2014(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_counter */
extern void T68f2088(TC* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].remove */
extern void T245f10(TC* ac, T0* C);
/* SPECIAL [INTEGER_32].keep_head */
extern void T154f14(TC* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].set_count */
extern void T154f15(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.remove_symbol */
extern void T68f2093(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].remove */
extern void T249f10(TC* ac, T0* C);
/* SPECIAL [detachable ET_SYMBOL].keep_head */
extern void T283f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL].set_count */
extern void T283f9(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_886 */
extern void T68f2013(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_885 */
extern void T68f2012(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_884 */
extern void T68f2011(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].force */
extern void T360s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_TARGET].fill_with */
extern void T362f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_TARGET].extend */
extern void T362f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T360s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T362f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_open_target */
extern T0* T65f330(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AGENT_OPEN_TARGET.make */
extern T0* T765c12(TC* ac, T0* a1);
/* ET_AGENT_OPEN_TARGET.tokens */
extern T0* T765s6(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_883 */
extern void T68f2010(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_882 */
extern void T68f2009(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_881 */
extern void T68f2008(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_880 */
extern void T68f2007(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_agent_identifier_target */
extern T0* T68f1016(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_unqualified_call_expression */
extern T0* T65f355(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_EXPRESSION.make */
extern T0* T1033c31(TC* ac, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_feature_name */
extern void T303f128(TC* ac, T0* C, T1 a1);
/* ET_IDENTIFIER.set_object_test_local */
extern void T303f136(TC* ac, T0* C, T1 a1);
/* ET_OBJECT_TEST_LIST.index_of_name */
extern T6 T668f4(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_inline_separate_argument */
extern void T303f119(TC* ac, T0* C, T1 a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.index_of_name */
extern T6 T670f4(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_inline_separate_argument */
extern T1 T303f36(TC* ac, T0* C);
/* ET_IDENTIFIER.set_iteration_item */
extern void T303f135(TC* ac, T0* C, T1 a1);
/* ET_ITERATION_COMPONENT_LIST.index_of_name */
extern T6 T669f4(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_iteration_item */
extern T1 T303f35(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.item_name */
extern T0* T613f1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.item_name */
extern T0* T339f1(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.item_name */
extern T0* T624f1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.item_name */
extern T0* T342f1(TC* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.set_used */
extern void T1447f11(TC* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE.set_used */
extern void T547f10(TC* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.local_variable */
extern T0* T553f4(TC* ac, T0* C, T6 a1);
/* ET_LOCAL_VARIABLE.local_variable */
extern T0* T547f7(TC* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.local_variable */
extern T0* T1447f7(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.item */
extern T0* T553f7(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_local */
extern void T303f134(TC* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.index_of */
extern T6 T553f8(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.name */
extern T0* T1447f8(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE.name */
extern T0* T547f8(TC* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_used */
extern void T1446f12(TC* ac, T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT.set_used */
extern void T491f11(TC* ac, T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_879 */
extern void T68f2006(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_start_closure */
extern void T68f2102(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].force */
extern void T254f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].force */
extern void T1154s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].fill_with */
extern void T1153f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].extend */
extern void T1153f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].resize */
extern void T254f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1154s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1153f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].new_capacity */
extern T6 T254f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].extendible */
extern T1 T254f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].force */
extern void T252f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST].force */
extern void T1150s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].fill_with */
extern void T1149f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].extend */
extern void T1149f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].resize */
extern void T252f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST].aliased_resized_area */
extern T0* T1150s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].aliased_resized_area */
extern T0* T1149f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].new_capacity */
extern T6 T252f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].extendible */
extern T1 T252f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].force */
extern void T250f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].force */
extern void T1146s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].fill_with */
extern void T1145f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].extend */
extern void T1145f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].resize */
extern void T250f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1146s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1145f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].new_capacity */
extern T6 T250f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].extendible */
extern T1 T250f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T247f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T552s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].fill_with */
extern void T554f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].extend */
extern void T554f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].resize */
extern void T247f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T552s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T554f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].new_capacity */
extern T6 T247f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].extendible */
extern T1 T247f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T246f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T496s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].fill_with */
extern void T498f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].extend */
extern void T498f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].resize */
extern void T246f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T496s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T498f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].new_capacity */
extern T6 T246f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].extendible */
extern T1 T246f7(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_878 */
extern void T68f2005(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_877 */
extern void T68f2004(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].force */
extern void T514s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_AGENT].fill_with */
extern void T516f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_AGENT].extend */
extern void T516f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].aliased_resized_area */
extern T0* T514s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_AGENT].aliased_resized_area */
extern T0* T516f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.register_inline_agent */
extern void T68f2113(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_end_closure */
extern void T68f2117(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].remove */
extern void T254f13(TC* ac, T0* C);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].keep_head */
extern void T1153f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].set_count */
extern void T1153f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].item */
extern T0* T254f7(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].is_empty */
extern T1 T254f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].force */
extern void T255f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST].force */
extern void T1156s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].fill_with */
extern void T1155f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].extend */
extern void T1155f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].resize */
extern void T255f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1156s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1155f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].new_capacity */
extern T6 T255f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].extendible */
extern T1 T255f7(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.wipe_out */
extern void T670f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT].keep_head */
extern void T1185s4(TC* ac, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].keep_head */
extern void T1184f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].set_count */
extern void T1184f9(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.fixed_array */
extern T0* T670f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT].default_create */
extern T0* T1185c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].remove */
extern void T252f13(TC* ac, T0* C);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].keep_head */
extern void T1149f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].set_count */
extern void T1149f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].item */
extern T0* T252f7(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].is_empty */
extern T1 T252f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].force */
extern void T253f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST].force */
extern void T1152s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].fill_with */
extern void T1151f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].extend */
extern void T1151f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].resize */
extern void T253f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST].aliased_resized_area */
extern T0* T1152s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].aliased_resized_area */
extern T0* T1151f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].new_capacity */
extern T6 T253f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].extendible */
extern T1 T253f7(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_COMPONENT_LIST.wipe_out */
extern void T669f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT].keep_head */
extern void T1183s4(TC* ac, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ITERATION_COMPONENT].keep_head */
extern void T1182f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ITERATION_COMPONENT].set_count */
extern void T1182f9(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_COMPONENT_LIST.fixed_array */
extern T0* T669f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT].default_create */
extern T0* T1183c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].remove */
extern void T250f13(TC* ac, T0* C);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].keep_head */
extern void T1145f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].set_count */
extern void T1145f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].item */
extern T0* T250f7(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].is_empty */
extern T1 T250f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].force */
extern void T251f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST].force */
extern void T1148s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST_LIST].fill_with */
extern void T1147f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST_LIST].extend */
extern void T1147f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].resize */
extern void T251f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1148s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1147f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].new_capacity */
extern T6 T251f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].extendible */
extern T1 T251f7(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.wipe_out */
extern void T668f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].keep_head */
extern void T1181s4(TC* ac, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NAMED_OBJECT_TEST].keep_head */
extern void T1180f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_OBJECT_TEST].set_count */
extern void T1180f9(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.fixed_array */
extern T0* T668f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].default_create */
extern T0* T1181c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].remove */
extern void T247f12(TC* ac, T0* C);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].keep_head */
extern void T554f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].set_count */
extern void T554f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].item */
extern T0* T247f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].is_empty */
extern T1 T247f5(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].remove */
extern void T246f12(TC* ac, T0* C);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].keep_head */
extern void T498f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].set_count */
extern void T498f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].item */
extern T0* T246f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].is_empty */
extern T1 T246f5(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_inline_separate_arguments */
extern void T764f45(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_inline_separate_arguments */
extern void T763f51(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_inline_separate_arguments */
extern void T762f47(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_inline_separate_arguments */
extern void T761f46(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_inline_separate_arguments */
extern void T760f52(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_inline_separate_arguments */
extern void T759f48(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.cloned_inline_separate_argument_list */
extern T0* T670f3(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.put_last */
extern void T670f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT].force */
extern void T1185s5(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].fill_with */
extern void T1184f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].extend */
extern void T1184f10(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.make_with_capacity */
extern T0* T670c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT].make */
extern T0* T1185s1(TC* ac, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].make_empty */
extern T0* T1184c5(TC* ac, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_iteration_components */
extern void T764f44(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_iteration_components */
extern void T763f50(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_iteration_components */
extern void T762f46(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_iteration_components */
extern void T761f45(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_iteration_components */
extern void T760f51(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_iteration_components */
extern void T759f47(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_COMPONENT_LIST.cloned_iteration_component_list */
extern T0* T669f3(TC* ac, T0* C);
/* ET_ITERATION_COMPONENT_LIST.put_last */
extern void T669f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT].force */
extern void T1183s5(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ITERATION_COMPONENT].fill_with */
extern void T1182f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ITERATION_COMPONENT].extend */
extern void T1182f10(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_COMPONENT_LIST.make_with_capacity */
extern T0* T669c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT].make */
extern T0* T1183s1(TC* ac, T6 a1);
/* SPECIAL [ET_ITERATION_COMPONENT].make_empty */
extern T0* T1182c5(TC* ac, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T764f43(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T763f49(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T762f45(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T761f44(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T760f50(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T759f46(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.cloned_object_test_list */
extern T0* T668f3(TC* ac, T0* C);
/* ET_OBJECT_TEST_LIST.put_last */
extern void T668f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].force */
extern void T1181s5(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NAMED_OBJECT_TEST].fill_with */
extern void T1180f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NAMED_OBJECT_TEST].extend */
extern void T1180f10(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.make_with_capacity */
extern T0* T668c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].make */
extern T0* T1181s1(TC* ac, T6 a1);
/* SPECIAL [ET_NAMED_OBJECT_TEST].make_empty */
extern T0* T1180c5(TC* ac, T6 a1);
/* ET_AST_FACTORY.new_external_procedure_inline_agent */
extern T0* T65f329(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T764f50(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_alias_clause */
extern void T764f49(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T764f48(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T764f47(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make */
extern T0* T764c42(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_procedure */
extern void T764f53(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T764f54(TC* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.make */
extern T0* T1580c9(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.agent_keyword */
extern T0* T81s894(TC* ac);
/* ET_AGENT_KEYWORD.make */
extern T0* T276c13(TC* ac);
/* ET_AGENT_KEYWORD.make_token */
extern void T276f15(TC* ac, T0* C, T0* a1);
/* ET_AGENT_KEYWORD.make_leaf */
extern void T276f16(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.tokens */
extern T0* T276s7(TC* ac);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T764s35(TC* ac);
/* ET_AST_FACTORY.new_external_language */
extern T0* T65f190(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_876 */
extern void T68f2003(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_875 */
extern void T68f2002(TC* ac, T0* C);
/* ET_AST_FACTORY.new_once_procedure_inline_agent */
extern T0* T65f328(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T763f59(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T763f58(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_compound */
extern void T763f57(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_keys */
extern void T763f56(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_locals */
extern void T763f55(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T763f54(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T763f53(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make */
extern T0* T763c48(TC* ac, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T763f62(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T763s18(TC* ac);
/* ET_AST_FACTORY.new_once_compound */
extern T0* T65f187(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_COMPOUND.set_keyword */
extern void T403f19(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.once_keyword */
extern T0* T81s682(TC* ac);
/* ET_KEYWORD.make_once */
extern T0* T191c50(TC* ac);
/* ET_AST_FACTORY.tokens */
extern T0* T65s371(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_874 */
extern void T68f2001(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_873 */
extern void T68f2000(TC* ac, T0* C);
/* ET_AST_FACTORY.new_do_procedure_inline_agent */
extern T0* T65f327(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T762f54(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T762f53(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_compound */
extern void T762f52(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_locals */
extern void T762f51(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T762f50(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T762f49(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.make */
extern T0* T762c44(TC* ac, T0* a1, T0* a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T762f57(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T762s36(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_872 */
extern void T68f1999(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_871 */
extern void T68f1998(TC* ac, T0* C);
/* ET_AST_FACTORY.new_external_function_inline_agent */
extern T0* T65f326(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T761f51(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_alias_clause */
extern void T761f50(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T761f49(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T761f48(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make */
extern T0* T761c43(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_function */
extern void T761f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T761f55(TC* ac, T0* C, T0* a1);
/* ET_RESULT.set_position */
extern void T318f38(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_RESULT.make */
extern T0* T318c35(TC* ac);
/* ET_RESULT.make_token */
extern void T318f36(TC* ac, T0* C, T0* a1);
/* ET_RESULT.make_leaf */
extern void T318f37(TC* ac, T0* C);
/* ET_RESULT.tokens */
extern T0* T318s6(TC* ac);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.tokens */
extern T0* T761s35(TC* ac);
/* ET_AST_FACTORY.new_colon_type */
extern T0* T65f181(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_870 */
extern void T68f1997(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_869 */
extern void T68f1996(TC* ac, T0* C);
/* ET_AST_FACTORY.new_once_function_inline_agent */
extern T0* T65f325(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T760f60(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T760f59(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_compound */
extern void T760f58(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_keys */
extern void T760f57(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_locals */
extern void T760f56(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T760f55(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T760f54(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make */
extern T0* T760c49(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T760f63(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.tokens */
extern T0* T760s42(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_868 */
extern void T68f1995(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_867 */
extern void T68f1994(TC* ac, T0* C);
/* ET_AST_FACTORY.new_do_function_inline_agent */
extern T0* T65f324(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_DO_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T759f55(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T759f54(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_compound */
extern void T759f53(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_locals */
extern void T759f52(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T759f51(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T759f50(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.make */
extern T0* T759c45(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T759f58(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.tokens */
extern T0* T759s19(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_866 */
extern void T68f1993(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_865 */
extern void T68f1992(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_inline_agent_actual_arguments */
extern void T68f2112(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T764f46(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T763f52(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T762f48(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T761f47(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T760f53(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T759f49(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_864 */
extern void T68f1991(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].force */
extern void T375s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CALL_AGENT].fill_with */
extern void T377f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CALL_AGENT].extend */
extern void T377f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T375s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T377f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_call_agent */
extern T0* T65f322(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_agent_keyword */
extern void T376f35(TC* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.make */
extern T0* T376c34(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.tokens */
extern T0* T376s10(TC* ac);
/* ET_CALL_AGENT.make_unqualified */
extern T0* T376c33(TC* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_dot_feature_name */
extern T0* T65f323(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_863 */
extern void T68f1990(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_862 */
extern void T68f1989(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].force */
extern void T465s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPRESSION].fill_with */
extern void T467f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPRESSION].extend */
extern void T467f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].aliased_resized_area */
extern T0* T465s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPRESSION].aliased_resized_area */
extern T0* T467f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_iteration_cursor */
extern T0* T68f1015(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_iteration_cursor */
extern T0* T65f370(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ITERATION_CURSOR.set_at_symbol */
extern void T757f25(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_CURSOR.make */
extern T0* T757c24(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.at_symbol */
extern T0* T81s915(TC* ac);
/* ET_SYMBOL.make_at */
extern T0* T282c98(TC* ac);
/* ET_ITERATION_CURSOR.tokens */
extern T0* T757s5(TC* ac);
/* ET_AST_FACTORY.new_prefix_expression */
extern T0* T65f311(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.make */
extern T0* T751c29(TC* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_operator_from_symbol */
extern T0* T65f321(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_break */
extern void T300f58(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.break */
extern T0* T324f1(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.break */
extern T0* T333f1(TC* ac, T0* C);
/* ET_SYMBOL.break */
extern T0* T282f1(TC* ac, T0* C);
/* ET_FREE_OPERATOR.set_position */
extern void T300f55(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FREE_OPERATOR.make_prefix */
extern T0* T300c54(TC* ac, T0* a1);
/* KL_STRING_ROUTINES.case_insensitive_hash_code */
extern T6 T108s15(TC* ac, T0* a1);
/* CHARACTER_32.upper */
extern T3 T3f8(TC* ac, volatile T3* C);
/* CHARACTER_PROPERTY.to_upper */
extern T3 T1441f2(TC* ac, T0* C, T3 a1);
/* CHARACTER_PROPERTY.to_upper_table_17 */
extern T0* T1441f36(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_16 */
extern T0* T1441f35(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_15 */
extern T0* T1441f34(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_14 */
extern T0* T1441f33(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_13 */
extern T0* T1441f32(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_12 */
extern T0* T1441f31(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_11 */
extern T0* T1441f30(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_10 */
extern T0* T1441f29(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_9 */
extern T0* T1441f28(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_8 */
extern T0* T1441f27(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_7 */
extern T0* T1441f26(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_6 */
extern T0* T1441f25(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_5 */
extern T0* T1441f24(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_4 */
extern T0* T1441f23(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_3 */
extern T0* T1441f22(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_2 */
extern T0* T1441f21(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_1 */
extern T0* T1441f20(TC* ac, T0* C);
/* CHARACTER_32.minus */
extern T3 T3f14(TC* ac, volatile T3* C, T10 a1);
/* ET_FREE_OPERATOR.string_ */
extern T0* T300s10(TC* ac);
/* ET_FREE_OPERATOR.make_token */
extern void T300f60(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_leaf */
extern void T300f61(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.text */
extern T0* T324f5(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.xor_symbol_name */
extern T0* T81f770(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.there_exists_symbol_name */
extern T0* T81f568(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.or_else_symbol_name */
extern T0* T81f769(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.or_symbol_name */
extern T0* T81f768(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.open_repeat_symbol_name */
extern T0* T81f559(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.not_symbol_name */
extern T0* T81f766(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implies_symbol_name */
extern T0* T81f765(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.for_all_symbol_name */
extern T0* T81f547(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.close_repeat_symbol_name */
extern T0* T81f538(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bar_symbol_name */
extern T0* T81f537(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.and_then_symbol_name */
extern T0* T81f763(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.and_symbol_name */
extern T0* T81f762(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.text */
extern T0* T333f5(TC* ac, T0* C);
/* ET_SYMBOL.text */
extern T0* T282f5(TC* ac, T0* C);
/* ET_ECF_LIBRARY.use_obsolete_syntax_mode */
extern T1 T802f98(TC* ac, T0* C);
/* ET_ECF_SYSTEM.use_obsolete_syntax_mode */
extern T1 T87f133(TC* ac, T0* C);
/* ET_SYSTEM.use_obsolete_syntax_mode */
extern T1 T50f101(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.current_universe */
extern T0* T68f760(TC* ac, T0* C);
/* ET_ECF_CLUSTER.universe */
extern T0* T89f4(TC* ac, T0* C);
/* ET_NONE_GROUP.universe */
extern T0* T198f2(TC* ac, T0* C);
/* ET_CLUSTER.universe */
extern T0* T67f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_861 */
extern void T68f1988(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION].force */
extern void T612s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].fill_with */
extern void T614f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].extend */
extern void T614f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION].aliased_resized_area */
extern T0* T612s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].aliased_resized_area */
extern T0* T614f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_there_exists_quantifier_expression_header */
extern T0* T68f1014(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ITERATION_COMPONENT_LIST.force_last */
extern void T669f11(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_COMPONENT_LIST.resize */
extern void T669f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT].aliased_resized_area */
extern T0* T1183s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ITERATION_COMPONENT].aliased_resized_area */
extern T0* T1182f4(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_COMPONENT_LIST.new_capacity */
extern T6 T669f7(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_COMPONENT_LIST.capacity */
extern T6 T669f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_iteration_component_list */
extern T0* T68f1033(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].remove */
extern void T253f11(TC* ac, T0* C);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].keep_head */
extern void T1151f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].set_count */
extern void T1151f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].item */
extern T0* T253f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].is_empty */
extern T1 T253f5(TC* ac, T0* C);
/* ET_AST_FACTORY.new_there_exists_quantifier_expression */
extern T0* T65f369(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUANTIFIER_EXPRESSION.make_there_exists */
extern T0* T613c41(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUANTIFIER_EXPRESSION.create_unfolded_form */
extern void T613f44(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.make */
extern T0* T736c14(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_INSTRUCTION.make_qualified_call */
extern void T736f15(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL_EXPRESSION.make */
extern T0* T379c29(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.make_qualified_call */
extern void T379f35(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.bar_symbol */
extern T0* T81s637(TC* ac);
/* ET_SYMBOL.make_bar */
extern T0* T282c112(TC* ac);
/* ET_TOKEN_CONSTANTS.colon_symbol */
extern T0* T81s629(TC* ac);
/* ET_SYMBOL.make_colon */
extern T0* T282c104(TC* ac);
/* ET_TOKEN_CONSTANTS.there_exists_symbol */
extern T0* T81s636(TC* ac);
/* ET_SYMBOL.make_there_exists */
extern T0* T282c111(TC* ac);
/* ET_QUANTIFIER_EXPRESSION.tokens */
extern T0* T613s16(TC* ac);
/* ET_TOKEN_CONSTANTS.true_keyword */
extern T0* T81s65(TC* ac);
/* ET_TRUE_CONSTANT.make */
extern T0* T683c41(TC* ac);
/* ET_TRUE_CONSTANT.make_token */
extern void T683f42(TC* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.make_leaf */
extern void T683f43(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.tokens */
extern T0* T683s6(TC* ac);
/* ET_EIFFEL_PARSER.tokens */
extern T0* T68s709(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_860 */
extern void T68f1987(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_for_all_quantifier_expression_header */
extern T0* T68f1013(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_AST_FACTORY.new_for_all_quantifier_expression */
extern T0* T65f368(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUANTIFIER_EXPRESSION.make_for_all */
extern T0* T613c39(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_859 */
extern void T68f1986(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_quantifier_expression */
extern T0* T68f1012(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUANTIFIER_EXPRESSION.set_iteration_expression */
extern void T613f40(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_858 */
extern void T68f1985(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].force */
extern void T338s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].fill_with */
extern void T340f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].extend */
extern void T340f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T338s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T340f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_across_expression_header */
extern T0* T68f1011(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_EXPRESSION.set_has_cursor_name */
extern void T339f48(TC* ac, T0* C, T1 a1);
/* ET_KEYWORD.is_as */
extern T1 T191f37(TC* ac, T0* C);
/* ET_ECF_LIBRARY.obsolete_iteration_mode */
extern T1 T802f99(TC* ac, T0* C);
/* ET_ECF_SYSTEM.obsolete_iteration_mode */
extern T1 T87f134(TC* ac, T0* C);
/* ET_SYSTEM.obsolete_iteration_mode */
extern T1 T50f102(TC* ac, T0* C);
/* ET_AST_FACTORY.new_across_all_expression */
extern T0* T65f367(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_ACROSS_EXPRESSION.set_as_keyword */
extern void T339f49(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_variant_part */
extern void T339f45(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_invariant_part */
extern void T339f44(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.make_all */
extern T0* T339c40(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_EXPRESSION.create_unfolded_form */
extern void T339f52(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_keyword */
extern T0* T81s645(TC* ac);
/* ET_KEYWORD.make_as */
extern T0* T191c64(TC* ac);
/* ET_TOKEN_CONSTANTS.across_keyword */
extern T0* T81s661(TC* ac);
/* ET_KEYWORD.make_across */
extern T0* T191c80(TC* ac);
/* ET_ACROSS_EXPRESSION.tokens */
extern T0* T339s19(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_857 */
extern void T68f1984(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_856 */
extern void T68f1983(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_all_expression */
extern T0* T68f1010(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACROSS_EXPRESSION.set_end_keyword */
extern void T339f46(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_all */
extern void T339f47(TC* ac, T0* C, T1 a1);
/* ET_ACROSS_EXPRESSION.set_iteration_conditional */
extern void T339f42(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_until_conditional */
extern void T339f41(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_conditional */
extern T0* T65f258(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_KEYWORD_EXPRESSION.make */
extern T0* T1450c4(TC* ac, T0* a1, T0* a2);
/* ET_KEYWORD.is_inspect */
extern T1 T191f23(TC* ac, T0* C);
/* ET_KEYWORD.is_if */
extern T1 T191f22(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_855 */
extern void T68f1982(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_some_expression */
extern T0* T68f1009(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACROSS_EXPRESSION.set_some */
extern void T339f43(TC* ac, T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_854 */
extern void T68f1981(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].force */
extern void T408s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTANT].fill_with */
extern void T410f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTANT].extend */
extern void T410f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].aliased_resized_area */
extern T0* T408s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTANT].aliased_resized_area */
extern T0* T410f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_853 */
extern void T68f1980(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_852 */
extern void T68f1979(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_851 */
extern void T68f1978(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_850 */
extern void T68f1977(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_849 */
extern void T68f1976(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].force */
extern void T629s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].fill_with */
extern void T631f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].extend */
extern void T631f10(TC* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.put_first */
extern void T630f32(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].force */
extern void T1456s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].fill_with */
extern void T1457f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].extend */
extern void T1457f7(TC* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.fixed_array */
extern T0* T630f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].default_create */
extern T0* T1456c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_848 */
extern void T68f1975(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T629s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T631f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_strip_expression */
extern T0* T65f320(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_STRIP_EXPRESSION.set_strip_keyword */
extern void T630f33(TC* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern T0* T630c31(TC* ac, T6 a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern void T630f31p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].make */
extern T0* T1456s1(TC* ac, T6 a1);
/* SPECIAL [ET_FEATURE_NAME_ITEM].make_empty */
extern T0* T1457c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.strip_keyword */
extern T0* T81s900(TC* ac);
/* ET_KEYWORD.make_strip */
extern T0* T191c55(TC* ac);
/* ET_STRIP_EXPRESSION.tokens */
extern T0* T630s8(TC* ac);
/* ET_EIFFEL_PARSER.last_keyword */
extern T0* T68f961(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].item */
extern T0* T248f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_847 */
extern void T68f1974(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_846 */
extern void T68f1973(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_keyword */
extern void T68f2089(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].force */
extern void T248f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].force */
extern void T273s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD].fill_with */
extern void T274f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD].extend */
extern void T274f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].resize */
extern void T248f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T273s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T274f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].new_capacity */
extern T6 T248f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].extendible */
extern T1 T248f6(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_845 */
extern void T68f1972(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_keyword */
extern void T68f2087(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].remove */
extern void T248f10(TC* ac, T0* C);
/* SPECIAL [detachable ET_KEYWORD].keep_head */
extern void T274f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD].set_count */
extern void T274f9(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_844 */
extern void T68f1971(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_843 */
extern void T68f1970(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].force */
extern void T567s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].fill_with */
extern void T569f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].extend */
extern void T569f10(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.put_first */
extern void T568f33(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].force */
extern void T1173s5(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].fill_with */
extern void T1171f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].extend */
extern void T1171f10(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.fixed_array */
extern T0* T568f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].default_create */
extern T0* T1173c3(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_842 */
extern void T68f1969(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T567s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T569f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_tuple */
extern T0* T65f319(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_TUPLE.set_left_symbol */
extern void T568f36(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern T0* T568c31(TC* ac, T6 a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern void T568f31p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].make */
extern T0* T1173s1(TC* ac, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].make_empty */
extern T0* T1171c5(TC* ac, T6 a1);
/* ET_MANIFEST_TUPLE.tokens */
extern T0* T568s8(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_841 */
extern void T68f1968(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_840 */
extern void T68f1967(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_839 */
extern void T68f1966(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_838 */
extern void T68f1965(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_837 */
extern void T68f1964(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].force */
extern void T558s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].fill_with */
extern void T560f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].extend */
extern void T560f10(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.put_first */
extern void T559f33(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.fixed_array */
extern T0* T559f9(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_836 */
extern void T68f1963(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T558s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T560f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_array */
extern T0* T65f318(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_ARRAY.set_left_symbol */
extern void T559f34(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern T0* T559c31(TC* ac, T6 a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern void T559f31p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_array_symbol */
extern T0* T81s640(TC* ac);
/* ET_SYMBOL.make_right_array */
extern T0* T282c115(TC* ac);
/* ET_TOKEN_CONSTANTS.left_array_symbol */
extern T0* T81s897(TC* ac);
/* ET_SYMBOL.make_left_array */
extern T0* T282c101(TC* ac);
/* ET_MANIFEST_ARRAY.tokens */
extern T0* T559s8(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_835 */
extern void T68f1962(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_834 */
extern void T68f1961(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.set_cast_type */
extern void T559f32(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_833 */
extern void T68f1960(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_832 */
extern void T68f1959(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_831 */
extern void T68f1958(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_830 */
extern void T68f1957(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].force */
extern void T588s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].fill_with */
extern void T590f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].extend */
extern void T590f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T588s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T590f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parenthesized_expression */
extern T0* T65f317(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.set_left_parenthesis */
extern void T589f26(TC* ac, T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.make */
extern T0* T589c25(TC* ac, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.tokens */
extern T0* T589s6(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_829 */
extern void T68f1956(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].force */
extern void T344s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].fill_with */
extern void T346f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].extend */
extern void T346f10(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.put_first */
extern void T345f22(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T345f9(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_828 */
extern void T68f1955(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T344s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T346f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_bracket_arguments */
extern T0* T65f316(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_ARGUMENT_LIST.make_bracketed_with_capacity */
extern T0* T345c23(TC* ac, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T345s7(TC* ac);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T345f19(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T345c19(TC* ac, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T345f19p1(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_827 */
extern void T68f1954(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_826 */
extern void T68f1953(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].force */
extern void T372s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].fill_with */
extern void T374f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].extend */
extern void T374f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T372s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T374f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_825 */
extern void T68f1952(TC* ac, T0* C);
/* ET_AST_FACTORY.new_bracket_expression */
extern T0* T65f315(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.make */
extern T0* T373c28(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_824 */
extern void T68f1951(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_823 */
extern void T68f1950(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_822 */
extern void T68f1949(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_821 */
extern void T68f1948(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_820 */
extern void T68f1947(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_819 */
extern void T68f1946(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_818 */
extern void T68f1945(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_817 */
extern void T68f1944(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_816 */
extern void T68f1943(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_815 */
extern void T68f1942(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.raise_error */
extern void T68f2084(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.older_ise_version */
extern T1 T853f41(TC* ac, T0* C, T0* a1);
/* UT_VERSION.is_less */
extern T1 T56f14(TC* ac, T0* C, T0* a1);
/* UT_VERSION.build */
extern T6 T56f9(TC* ac, T0* C);
/* UT_VERSION.has_build */
extern T1 T56f8(TC* ac, T0* C);
/* UT_VERSION.revision */
extern T6 T56f7(TC* ac, T0* C);
/* UT_VERSION.has_revision */
extern T1 T56f6(TC* ac, T0* C);
/* UT_VERSION.minor */
extern T6 T56f5(TC* ac, T0* C);
/* UT_VERSION.has_minor */
extern T1 T56f13(TC* ac, T0* C);
/* UT_VERSION.major */
extern T6 T56f12(TC* ac, T0* C);
/* UT_VERSION.has_major */
extern T1 T56f11(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.older_ise_version */
extern T1 T66f45(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.ise_17_11_0 */
extern T0* T68s1008(TC* ac);
/* UT_VERSION.make */
extern T0* T56c19(TC* ac, T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_EIFFEL_PARSER.yy_do_action_814 */
extern void T68f1941(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_813 */
extern void T68f1940(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_812 */
extern void T68f1939(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_811 */
extern void T68f1938(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_810 */
extern void T68f1937(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_809 */
extern void T68f1936(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_once_manifest_string */
extern T0* T68f1007(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.register_inline_constant */
extern void T70f289(TC* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.set_id */
extern void T756f28(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_once_manifest_string */
extern T0* T65f366(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.set_once_keyword */
extern void T756f29(TC* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.make */
extern T0* T756c27(TC* ac, T0* a1);
/* ET_ONCE_MANIFEST_STRING.tokens */
extern T0* T756s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_808 */
extern void T68f1935(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_807 */
extern void T68f1934(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_806 */
extern void T68f1933(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_805 */
extern void T68f1932(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_804 */
extern void T68f1931(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_803 */
extern void T68f1930(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_802 */
extern void T68f1929(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_801 */
extern void T68f1928(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601_800 */
extern void T68f1109(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_800 */
extern void T68f1927(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_799 */
extern void T68f1926(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_798 */
extern void T68f1925(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_797 */
extern void T68f1924(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_796 */
extern void T68f1923(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_795 */
extern void T68f1922(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_named_object_test */
extern T0* T68f1006(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_OBJECT_TEST_LIST.force_last */
extern void T668f11(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.resize */
extern void T668f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T1181s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T1180f4(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.new_capacity */
extern T6 T668f7(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.capacity */
extern T6 T668f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_object_test_list */
extern T0* T68f1035(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].remove */
extern void T251f11(TC* ac, T0* C);
/* SPECIAL [ET_OBJECT_TEST_LIST].keep_head */
extern void T1147f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_TEST_LIST].set_count */
extern void T1147f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].item */
extern T0* T251f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].is_empty */
extern T1 T251f5(TC* ac, T0* C);
/* ET_AST_FACTORY.new_named_object_test */
extern T0* T65f365(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NAMED_OBJECT_TEST.set_attached_keyword */
extern void T755f30(TC* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.make */
extern T0* T755c29(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NAMED_OBJECT_TEST.make_object_test */
extern void T755f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NAMED_OBJECT_TEST.tokens */
extern T0* T755s9(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_794 */
extern void T68f1921(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_793 */
extern void T68f1920(TC* ac, T0* C);
/* ET_AST_FACTORY.new_object_test */
extern T0* T65f314(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST.set_attached_keyword */
extern void T754f28(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST.make */
extern T0* T754c27(TC* ac, T0* a1, T0* a2);
/* ET_OBJECT_TEST.tokens */
extern T0* T754s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_792 */
extern void T68f1919(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_791 */
extern void T68f1918(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_old_object_test */
extern T0* T68f1005(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_AST_FACTORY.new_old_object_test */
extern T0* T65f364(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_OLD_OBJECT_TEST.set_left_brace */
extern void T753f33(TC* ac, T0* C, T0* a1);
/* ET_OLD_OBJECT_TEST.make */
extern T0* T753c32(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_OLD_OBJECT_TEST.tokens */
extern T0* T753s12(TC* ac);
/* ET_EIFFEL_PARSER.ise_6_1_0 */
extern T0* T68s989(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_790 */
extern void T68f1917(TC* ac, T0* C);
/* ET_AST_FACTORY.new_old_expression */
extern T0* T65f313(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.set_old_keyword */
extern void T752f25(TC* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.make */
extern T0* T752c24(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.old_keyword */
extern T0* T81s913(TC* ac);
/* ET_KEYWORD.make_old */
extern T0* T191c53(TC* ac);
/* ET_OLD_EXPRESSION.tokens */
extern T0* T752s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_789 */
extern void T68f1916(TC* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_free_operator */
extern T0* T65f312(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_prefix */
extern void T300f59(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_788 */
extern void T68f1915(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_787 */
extern void T68f1914(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_786 */
extern void T68f1913(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_prefix_minus_expression */
extern T0* T68f1004(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T68f1004ot1(TC* ac, T0* a1);
extern T1 T68f1004ot2(TC* ac, T0* a1);
/* ET_AST_FACTORY.new_prefix_minus_operator */
extern T0* T65f363(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_minus */
extern void T324f154(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.sign */
extern T0* T679f1(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.sign */
extern T0* T678f1(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.sign */
extern T0* T677f1(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.sign */
extern T0* T676f1(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.sign */
extern T0* T675f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_785 */
extern void T68f1912(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_prefix_plus_expression */
extern T0* T68f1003(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T68f1003ot1(TC* ac, T0* a1);
extern T1 T68f1003ot2(TC* ac, T0* a1);
/* ET_AST_FACTORY.new_prefix_plus_operator */
extern T0* T65f362(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_plus */
extern void T324f153(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_784 */
extern void T68f1911(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_783 */
extern void T68f1910(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_782 */
extern void T68f1909(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_781 */
extern void T68f1908(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_780 */
extern void T68f1907(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_779 */
extern void T68f1906(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_778 */
extern void T68f1905(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_777 */
extern void T68f1904(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_776 */
extern void T68f1903(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_775 */
extern void T68f1902(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_774 */
extern void T68f1901(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_773 */
extern void T68f1900(TC* ac, T0* C);
/* ET_AST_FACTORY.new_manifest_type */
extern T0* T65f310(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.make */
extern T0* T750c25(TC* ac, T0* a1);
/* ET_MANIFEST_TYPE.tokens */
extern T0* T750s6(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_772 */
extern void T68f1899(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_771 */
extern void T68f1898(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_770 */
extern void T68f1897(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_769 */
extern void T68f1896(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_768 */
extern void T68f1895(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_767 */
extern void T68f1894(TC* ac, T0* C);
/* ET_AST_FACTORY.new_object_equality_expression */
extern T0* T65f309(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T749c26(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_766 */
extern void T68f1893(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_765 */
extern void T68f1892(TC* ac, T0* C);
/* ET_AST_FACTORY.new_equality_expression */
extern T0* T65f308(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.make */
extern T0* T748c24(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_764 */
extern void T68f1891(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_763 */
extern void T68f1890(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_expression */
extern T0* T65f302(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.make */
extern T0* T745c29(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_762 */
extern void T68f1889(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_761 */
extern void T68f1888(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_760 */
extern void T68f1887(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_else_operator */
extern T0* T65f307(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_OR_ELSE_OPERATOR.set_or_keyword */
extern void T747f43(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.is_null_position */
extern T1 T309f6(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.make */
extern T0* T747c42(TC* ac);
/* ET_TOKEN_CONSTANTS.else_keyword */
extern T0* T81s649(TC* ac);
/* ET_KEYWORD.make_else */
extern T0* T191c68(TC* ac);
/* ET_TOKEN_CONSTANTS.or_keyword */
extern T0* T81s911(TC* ac);
/* ET_KEYWORD_OPERATOR.make_or */
extern T0* T309c55(TC* ac);
/* ET_KEYWORD_OPERATOR.make_token */
extern void T309f61(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_leaf */
extern void T309f62(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_759 */
extern void T68f1886(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_758 */
extern void T68f1885(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_then_operator */
extern T0* T65f306(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_AND_THEN_OPERATOR.set_and_keyword */
extern void T746f43(TC* ac, T0* C, T0* a1);
/* ET_INFIX_AND_THEN_OPERATOR.make */
extern T0* T746c42(TC* ac);
/* ET_TOKEN_CONSTANTS.then_keyword */
extern T0* T81s654(TC* ac);
/* ET_KEYWORD.make_then */
extern T0* T191c73(TC* ac);
/* ET_TOKEN_CONSTANTS.and_keyword */
extern T0* T81s909(TC* ac);
/* ET_KEYWORD_OPERATOR.make_and */
extern T0* T309c57(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_757 */
extern void T68f1884(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_756 */
extern void T68f1883(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_755 */
extern void T68f1882(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_754 */
extern void T68f1881(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_753 */
extern void T68f1880(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_752 */
extern void T68f1879(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_751 */
extern void T68f1878(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_750 */
extern void T68f1877(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_749 */
extern void T68f1876(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_748 */
extern void T68f1875(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_747 */
extern void T68f1874(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_746 */
extern void T68f1873(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_745 */
extern void T68f1872(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_744 */
extern void T68f1871(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_743 */
extern void T68f1870(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_742 */
extern void T68f1869(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_minus_operator */
extern T0* T65f305(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_minus */
extern void T324f152(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_741 */
extern void T68f1868(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_plus_operator */
extern T0* T65f304(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_plus */
extern void T324f151(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_740 */
extern void T68f1867(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_free_operator_from_symbol */
extern T0* T65f303(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_infix */
extern T0* T300c57(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_739 */
extern void T68f1866(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_free_operator */
extern T0* T65f301(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_infix */
extern void T300f56(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_738 */
extern void T68f1865(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_737 */
extern void T68f1864(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_736 */
extern void T68f1863(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].force */
extern void T664s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WRITABLE].fill_with */
extern void T666f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WRITABLE].extend */
extern void T666f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T664s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T666f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_735 */
extern void T68f1862(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_writable */
extern T0* T68f1002(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_734 */
extern void T68f1861(TC* ac, T0* C);
/* ET_AST_FACTORY.new_expression_address */
extern T0* T65f300(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.set_dollar */
extern void T744f25(TC* ac, T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.make */
extern T0* T744c24(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.dollar_symbol */
extern T0* T81s908(TC* ac);
/* ET_SYMBOL.make_dollar */
extern T0* T282c96(TC* ac);
/* ET_EXPRESSION_ADDRESS.tokens */
extern T0* T744s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_733 */
extern void T68f1860(TC* ac, T0* C);
/* ET_AST_FACTORY.new_result_address */
extern T0* T65f299(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.set_dollar */
extern void T743f25(TC* ac, T0* C, T0* a1);
/* ET_RESULT_ADDRESS.make */
extern T0* T743c24(TC* ac);
/* ET_TOKEN_CONSTANTS.result_keyword */
extern T0* T81s604(TC* ac);
/* ET_RESULT_ADDRESS.tokens */
extern T0* T743s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_732 */
extern void T68f1859(TC* ac, T0* C);
/* ET_AST_FACTORY.new_current_address */
extern T0* T65f298(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.set_dollar */
extern void T742f25(TC* ac, T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.make */
extern T0* T742c24(TC* ac);
/* ET_CURRENT_ADDRESS.tokens */
extern T0* T742s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_731 */
extern void T68f1858(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_feature_address */
extern T0* T68f1001(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_feature_address */
extern T0* T65f361(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.set_dollar */
extern void T741f25(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.make */
extern T0* T741c24(TC* ac, T0* a1);
/* ET_FEATURE_ADDRESS.tokens */
extern T0* T741s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_730 */
extern void T68f1857(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].force */
extern void T468s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].fill_with */
extern void T470f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].extend */
extern void T470f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T468s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T470f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_expression_comma */
extern T0* T65f297(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_729 */
extern void T68f1856(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_728 */
extern void T68f1855(TC* ac, T0* C);
/* ET_AST_FACTORY.new_actual_arguments */
extern T0* T65f296(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_727 */
extern void T68f1854(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_726 */
extern void T68f1853(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_725 */
extern void T68f1852(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_724 */
extern void T68f1851(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_723 */
extern void T68f1850(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_722 */
extern void T68f1849(TC* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_call_expression */
extern T0* T65f293(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.new_dot_feature_name */
extern T0* T68f988(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_721 */
extern void T68f1848(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_5_7_59914 */
extern T0* T68s973(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_720 */
extern void T68f1847(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_719 */
extern void T68f1846(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_718 */
extern void T68f1845(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_717 */
extern void T68f1844(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_716 */
extern void T68f1843(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_715 */
extern void T68f1842(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_714 */
extern void T68f1841(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_713 */
extern void T68f1840(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_712 */
extern void T68f1839(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_expression */
extern T0* T68f1000(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_711 */
extern void T68f1838(TC* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_expression */
extern T0* T65f295(TC* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_precursor_keyword */
extern void T740f31(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_parent_prefixed */
extern void T740f30(TC* ac, T0* C, T1 a1);
/* ET_PRECURSOR_EXPRESSION.make */
extern T0* T740c29(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.precursor_keyword */
extern T0* T81s907(TC* ac);
/* ET_PRECURSOR_KEYWORD.make */
extern T0* T279c23(TC* ac);
/* ET_PRECURSOR_KEYWORD.make_token */
extern void T279f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.make_leaf */
extern void T279f26(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.tokens */
extern T0* T279s7(TC* ac);
/* ET_PRECURSOR_EXPRESSION.tokens */
extern T0* T740s11(TC* ac);
/* ET_AST_FACTORY.new_precursor_class_name */
extern T0* T65f291(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_710 */
extern void T68f1837(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_709 */
extern void T68f1836(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].force */
extern void T626s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].fill_with */
extern void T628f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].extend */
extern void T628f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T626s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T628f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_static_call_expression */
extern T0* T65f294(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_EXPRESSION.set_feature_keyword */
extern void T627f34(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.make */
extern T0* T627c33(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.make_qualified_call */
extern void T627f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_708 */
extern void T68f1835(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_707 */
extern void T68f1834(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].force */
extern void T378s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].fill_with */
extern void T380f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].extend */
extern void T380f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T378s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T380f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_706 */
extern void T68f1833(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_705 */
extern void T68f1832(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_704 */
extern void T68f1831(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_703 */
extern void T68f1830(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_702 */
extern void T68f1829(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].force */
extern void T535s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INSTRUCTION].fill_with */
extern void T537f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INSTRUCTION].extend */
extern void T537f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T535s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T537f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_static_call_instruction */
extern T0* T65f292(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.set_feature_keyword */
extern void T739f15(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.make */
extern T0* T739c14(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_INSTRUCTION.make_qualified_call */
extern void T739f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_701 */
extern void T68f1828(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_700 */
extern void T68f1827(TC* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_instruction */
extern T0* T65f290(TC* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.set_precursor_keyword */
extern void T737f16(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_prefixed */
extern void T737f15(TC* ac, T0* C, T1 a1);
/* ET_PRECURSOR_INSTRUCTION.make */
extern T0* T737c14(TC* ac, T0* a1, T0* a2);
/* ET_PRECURSOR_INSTRUCTION.tokens */
extern T0* T737s11(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_699 */
extern void T68f1826(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_698 */
extern void T68f1825(TC* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_call_instruction */
extern T0* T65f289(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_697 */
extern void T68f1824(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_696 */
extern void T68f1823(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_instruction */
extern T0* T68f999(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_unqualified_call_instruction */
extern T0* T65f360(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.make */
extern T0* T1034c12(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_695 */
extern void T68f1822(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].force */
extern void T520s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].fill_with */
extern void T522f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].extend */
extern void T522f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T520s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T522f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inline_separate_argument_comma */
extern T0* T65f288(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_694 */
extern void T68f1821(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT].force */
extern void T517s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].fill_with */
extern void T519f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].extend */
extern void T519f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT].aliased_resized_area */
extern T0* T517s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].aliased_resized_area */
extern T0* T519f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_inline_separate_argument */
extern T0* T68f998(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.force_last */
extern void T670f11(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.resize */
extern void T670f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT].aliased_resized_area */
extern T0* T1185s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].aliased_resized_area */
extern T0* T1184f4(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.new_capacity */
extern T6 T670f7(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.capacity */
extern T6 T670f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_inline_separate_argument_list */
extern T0* T68f1034(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].remove */
extern void T255f11(TC* ac, T0* C);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].keep_head */
extern void T1155f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].set_count */
extern void T1155f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].item */
extern T0* T255f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].is_empty */
extern T1 T255f5(TC* ac, T0* C);
/* ET_AST_FACTORY.new_inline_separate_argument */
extern T0* T65f359(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_SEPARATE_ARGUMENT.make */
extern T0* T518c11(TC* ac, T0* a1, T0* a2);
/* ET_INLINE_SEPARATE_ARGUMENT.tokens */
extern T0* T518s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_693 */
extern void T68f1820(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS].force */
extern void T523s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].fill_with */
extern void T525f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].extend */
extern void T525f10(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.put_first */
extern void T524f15(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM].force */
extern void T1179s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM].fill_with */
extern void T1178f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM].extend */
extern void T1178f7(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.fixed_array */
extern T0* T524f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM].default_create */
extern T0* T1179c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_692 */
extern void T68f1819(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS].aliased_resized_area */
extern T0* T523s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].aliased_resized_area */
extern T0* T525f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inline_separate_arguments */
extern T0* T65f287(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_INLINE_SEPARATE_ARGUMENTS.set_separate_keyword */
extern void T524f16(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.make_with_capacity */
extern T0* T524c14(TC* ac, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.make_with_capacity */
extern void T524f14p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM].make */
extern T0* T1179s1(TC* ac, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM].make_empty */
extern T0* T1178c4(TC* ac, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.tokens */
extern T0* T524s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_691 */
extern void T68f1818(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_690 */
extern void T68f1817(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_689 */
extern void T68f1816(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION].force */
extern void T526s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].fill_with */
extern void T528f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].extend */
extern void T528f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION].aliased_resized_area */
extern T0* T526s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].aliased_resized_area */
extern T0* T528f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_inline_separate_instruction */
extern T0* T68f997(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_SEPARATE_ARGUMENTS.argument */
extern T0* T524f6(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENT.argument */
extern T0* T518f5(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.item */
extern T0* T524f7(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inline_separate_instruction */
extern T0* T65f358(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_SEPARATE_INSTRUCTION.make */
extern T0* T527c11(TC* ac, T0* a1, T0* a2);
/* ET_INLINE_SEPARATE_INSTRUCTION.tokens */
extern T0* T527s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_688 */
extern void T68f1815(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].force */
extern void T561s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].fill_with */
extern void T563f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].extend */
extern void T563f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T561s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T563f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_string_comma */
extern T0* T65f286(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_687 */
extern void T68f1814(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].force */
extern void T564s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].fill_with */
extern void T566f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].extend */
extern void T566f10(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.put_first */
extern void T565f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].force */
extern void T1606s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].fill_with */
extern void T1605f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].extend */
extern void T1605f7(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.fixed_array */
extern T0* T565f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T1606c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_686 */
extern void T68f1813(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T564s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T566f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_string_list */
extern T0* T65f285(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern T0* T565c11(TC* ac, T6 a1);
/* ET_MANIFEST_STRING_LIST.tokens */
extern T0* T565s5(TC* ac);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern void T565f11p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].make */
extern T0* T1606s1(TC* ac, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].make_empty */
extern T0* T1605c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_685 */
extern void T68f1812(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_684 */
extern void T68f1811(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_683 */
extern void T68f1810(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_682 */
extern void T68f1809(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_681 */
extern void T68f1808(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].force */
extern void T445s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].fill_with */
extern void T447f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].extend */
extern void T447f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T445s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T447f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_debug_instruction */
extern T0* T65f284(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEBUG_INSTRUCTION.make */
extern T0* T446c11(TC* ac, T0* a1, T0* a2);
/* ET_DEBUG_INSTRUCTION.tokens */
extern T0* T446s4(TC* ac);
/* ET_AST_FACTORY.new_debug_compound */
extern T0* T65f283(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.debug_keyword */
extern T0* T81s658(TC* ac);
/* ET_KEYWORD.make_debug */
extern T0* T191c77(TC* ac);
/* ET_COMPOUND.make */
extern T0* T403c18(TC* ac);
/* ET_COMPOUND.make */
extern void T403f18p1(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].make */
extern T0* T1176s1(TC* ac, T6 a1);
/* SPECIAL [ET_INSTRUCTION].make_empty */
extern T0* T1175c4(TC* ac, T6 a1);
/* ET_COMPOUND.fixed_array */
extern T0* T403f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].default_create */
extern T0* T1176c2(TC* ac);
/* ET_TOKEN_CONSTANTS.do_keyword */
extern T0* T81s646(TC* ac);
/* ET_KEYWORD.make_do */
extern T0* T191c65(TC* ac);
/* ET_COMPOUND.tokens */
extern T0* T403s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_680 */
extern void T68f1807(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].force */
extern void T405s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONDITIONAL].fill_with */
extern void T407f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONDITIONAL].extend */
extern void T407f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T405s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T407f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_679 */
extern void T68f1806(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_678 */
extern void T68f1805(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION].force */
extern void T623s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].fill_with */
extern void T625f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].extend */
extern void T625f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION].aliased_resized_area */
extern T0* T623s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].aliased_resized_area */
extern T0* T625f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_repeat_instruction_header */
extern T0* T68f996(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_AST_FACTORY.new_repeat_instruction */
extern T0* T65f357(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_REPEAT_INSTRUCTION.make */
extern T0* T624c26(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_REPEAT_INSTRUCTION.create_unfolded_form */
extern void T624f29(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.close_repeat_symbol */
extern T0* T81s639(TC* ac);
/* ET_SYMBOL.make_close_repeat */
extern T0* T282c114(TC* ac);
/* ET_TOKEN_CONSTANTS.open_repeat_symbol */
extern T0* T81s638(TC* ac);
/* ET_SYMBOL.make_open_repeat */
extern T0* T282c113(TC* ac);
/* ET_REPEAT_INSTRUCTION.tokens */
extern T0* T624s13(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_677 */
extern void T68f1804(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].force */
extern void T341s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].fill_with */
extern void T343f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].extend */
extern void T343f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T341s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T343f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_across_instruction_header */
extern T0* T68f995(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_INSTRUCTION.set_has_cursor_name */
extern void T342f32(TC* ac, T0* C, T1 a1);
/* ET_AST_FACTORY.new_across_instruction */
extern T0* T65f356(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ACROSS_INSTRUCTION.set_as_keyword */
extern void T342f33(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_variant_part */
extern void T342f30(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_invariant_part */
extern void T342f29(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.make */
extern T0* T342c25(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACROSS_INSTRUCTION.create_unfolded_form */
extern void T342f34(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.tokens */
extern T0* T342s17(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_676 */
extern void T68f1803(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_675 */
extern void T68f1802(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION].force */
extern void T652s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].fill_with */
extern void T654f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].extend */
extern void T654f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION].aliased_resized_area */
extern T0* T652s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].aliased_resized_area */
extern T0* T654f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_expression */
extern T0* T65f282(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_WHEN_EXPRESSION.make */
extern T0* T653c10(TC* ac, T0* a1, T0* a2);
/* ET_WHEN_EXPRESSION.tokens */
extern T0* T653s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_674 */
extern void T68f1801(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST].force */
extern void T655s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].fill_with */
extern void T657f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].extend */
extern void T657f10(TC* ac, T0* C, T0* a1);
/* ET_WHEN_EXPRESSION_LIST.put_first */
extern void T656f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION].force */
extern void T1618s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_WHEN_EXPRESSION].fill_with */
extern void T1617f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_EXPRESSION].extend */
extern void T1617f7(TC* ac, T0* C, T0* a1);
/* ET_WHEN_EXPRESSION_LIST.fixed_array */
extern T0* T656f4(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION].default_create */
extern T0* T1618c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_673 */
extern void T68f1800(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST].aliased_resized_area */
extern T0* T655s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].aliased_resized_area */
extern T0* T657f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_expression_list */
extern T0* T65f281(TC* ac, T0* C, T6 a1);
/* ET_WHEN_EXPRESSION_LIST.make_with_capacity */
extern T0* T656c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION].make */
extern T0* T1618s1(TC* ac, T6 a1);
/* SPECIAL [ET_WHEN_EXPRESSION].make_empty */
extern T0* T1617c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_672 */
extern void T68f1799(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_671 */
extern void T68f1798(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_670 */
extern void T68f1797(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION].force */
extern void T529s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].fill_with */
extern void T531f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].extend */
extern void T531f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION].aliased_resized_area */
extern T0* T529s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].aliased_resized_area */
extern T0* T531f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inspect_expression */
extern T0* T65f280(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_EXPRESSION.set_else_part */
extern void T530f28(TC* ac, T0* C, T0* a1);
/* ET_INSPECT_EXPRESSION.make */
extern T0* T530c27(TC* ac, T0* a1, T0* a2);
/* ET_INSPECT_EXPRESSION.tokens */
extern T0* T530s6(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_669 */
extern void T68f1796(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_668 */
extern void T68f1795(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].force */
extern void T387s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].fill_with */
extern void T389f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].extend */
extern void T389f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T387s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T389f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_667 */
extern void T68f1794(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_choice_attribute_constant */
extern T0* T68f994(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_666 */
extern void T68f1793(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_665 */
extern void T68f1792(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_664 */
extern void T68f1791(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].force */
extern void T384s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE].fill_with */
extern void T386f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE].extend */
extern void T386f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].aliased_resized_area */
extern T0* T384s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE].aliased_resized_area */
extern T0* T386f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_range */
extern T0* T65f279(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CHOICE_RANGE.make */
extern T0* T735c11(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.dotdot_symbol */
extern T0* T81s642(TC* ac);
/* ET_SYMBOL.make_dotdot */
extern T0* T282c117(TC* ac);
/* ET_CHOICE_RANGE.tokens */
extern T0* T735s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_663 */
extern void T68f1790(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_662 */
extern void T68f1789(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].force */
extern void T390s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_ITEM].fill_with */
extern void T392f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_ITEM].extend */
extern void T392f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T390s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T392f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_comma */
extern T0* T65f278(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_661 */
extern void T68f1788(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].force */
extern void T393s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_LIST].fill_with */
extern void T395f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_LIST].extend */
extern void T395f10(TC* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.put_first */
extern void T394f15(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].force */
extern void T1583s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].fill_with */
extern void T1582f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].extend */
extern void T1582f7(TC* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.fixed_array */
extern T0* T394f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].default_create */
extern T0* T1583c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_660 */
extern void T68f1787(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T393s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T395f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_list */
extern T0* T65f277(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_CHOICE_LIST.set_when_keyword */
extern void T394f16(TC* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern T0* T394c14(TC* ac, T6 a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern void T394f14p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].make */
extern T0* T1583s1(TC* ac, T6 a1);
/* SPECIAL [ET_CHOICE_ITEM].make_empty */
extern T0* T1582c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.when_keyword */
extern T0* T81s655(TC* ac);
/* ET_KEYWORD.make_when */
extern T0* T191c74(TC* ac);
/* ET_CHOICE_LIST.tokens */
extern T0* T394s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_659 */
extern void T68f1786(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_658 */
extern void T68f1785(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_657 */
extern void T68f1784(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_656 */
extern void T68f1783(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_655 */
extern void T68f1782(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].force */
extern void T658s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART].fill_with */
extern void T660f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART].extend */
extern void T660f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T658s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T660f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_part */
extern T0* T65f276(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_WHEN_PART.make */
extern T0* T659c9(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_654 */
extern void T68f1781(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].force */
extern void T661s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART_LIST].fill_with */
extern void T663f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART_LIST].extend */
extern void T663f10(TC* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.put_first */
extern void T662f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].force */
extern void T1620s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].fill_with */
extern void T1619f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].extend */
extern void T1619f7(TC* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.fixed_array */
extern T0* T662f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].default_create */
extern T0* T1620c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_653 */
extern void T68f1780(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T661s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T663f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_part_list */
extern T0* T65f275(TC* ac, T0* C, T6 a1);
/* ET_WHEN_PART_LIST.make_with_capacity */
extern T0* T662c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].make */
extern T0* T1620s1(TC* ac, T6 a1);
/* SPECIAL [ET_WHEN_PART].make_empty */
extern T0* T1619c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_652 */
extern void T68f1779(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_651 */
extern void T68f1778(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_650 */
extern void T68f1777(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].force */
extern void T532s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].fill_with */
extern void T534f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].extend */
extern void T534f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T532s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T534f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inspect_instruction */
extern T0* T65f274(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_INSTRUCTION.set_else_compound */
extern void T533f14(TC* ac, T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.make */
extern T0* T533c13(TC* ac, T0* a1, T0* a2);
/* ET_INSPECT_INSTRUCTION.tokens */
extern T0* T533s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_649 */
extern void T68f1776(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_648 */
extern void T68f1775(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].force */
extern void T448s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].fill_with */
extern void T450f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].extend */
extern void T450f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].aliased_resized_area */
extern T0* T448s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].aliased_resized_area */
extern T0* T450f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_expression */
extern T0* T65f273(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ELSEIF_EXPRESSION.make */
extern T0* T449c11(TC* ac, T0* a1, T0* a2);
/* ET_ELSEIF_EXPRESSION.tokens */
extern T0* T449s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_647 */
extern void T68f1774(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].force */
extern void T451s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].fill_with */
extern void T453f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].extend */
extern void T453f10(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION_LIST.put_first */
extern void T452f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION].force */
extern void T1591s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ELSEIF_EXPRESSION].fill_with */
extern void T1590f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_EXPRESSION].extend */
extern void T1590f7(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION_LIST.fixed_array */
extern T0* T452f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION].default_create */
extern T0* T1591c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_646 */
extern void T68f1773(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].aliased_resized_area */
extern T0* T451s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].aliased_resized_area */
extern T0* T453f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_expression_list */
extern T0* T65f272(TC* ac, T0* C, T6 a1);
/* ET_ELSEIF_EXPRESSION_LIST.make_with_capacity */
extern T0* T452c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION].make */
extern T0* T1591s1(TC* ac, T6 a1);
/* SPECIAL [ET_ELSEIF_EXPRESSION].make_empty */
extern T0* T1590c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_645 */
extern void T68f1772(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_644 */
extern void T68f1771(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].force */
extern void T508s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_IF_EXPRESSION].fill_with */
extern void T510f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_IF_EXPRESSION].extend */
extern void T510f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].aliased_resized_area */
extern T0* T508s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_IF_EXPRESSION].aliased_resized_area */
extern T0* T510f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_if_expression */
extern T0* T65f271(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_IF_EXPRESSION.set_elseif_parts */
extern void T509f31(TC* ac, T0* C, T0* a1);
/* ET_IF_EXPRESSION.make */
extern T0* T509c30(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_IF_EXPRESSION.tokens */
extern T0* T509s9(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_643 */
extern void T68f1770(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_642 */
extern void T68f1769(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].force */
extern void T454s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART].fill_with */
extern void T456f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART].extend */
extern void T456f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T454s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T456f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_part */
extern T0* T65f270(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ELSEIF_PART.make */
extern T0* T455c10(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_641 */
extern void T68f1768(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].force */
extern void T457s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].fill_with */
extern void T459f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].extend */
extern void T459f10(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.put_first */
extern void T458f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].force */
extern void T1593s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].fill_with */
extern void T1592f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].extend */
extern void T1592f7(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.fixed_array */
extern T0* T458f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].default_create */
extern T0* T1593c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_640 */
extern void T68f1767(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T457s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T459f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_part_list */
extern T0* T65f269(TC* ac, T0* C, T6 a1);
/* ET_ELSEIF_PART_LIST.make_with_capacity */
extern T0* T458c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].make */
extern T0* T1593s1(TC* ac, T6 a1);
/* SPECIAL [ET_ELSEIF_PART].make_empty */
extern T0* T1592c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_639 */
extern void T68f1766(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_638 */
extern void T68f1765(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].force */
extern void T511s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_IF_INSTRUCTION].fill_with */
extern void T513f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_IF_INSTRUCTION].extend */
extern void T513f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T511s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T513f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_if_instruction */
extern T0* T65f268(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_IF_INSTRUCTION.set_else_compound */
extern void T512f16(TC* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.set_elseif_parts */
extern void T512f15(TC* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.make */
extern T0* T512c14(TC* ac, T0* a1, T0* a2);
/* ET_IF_INSTRUCTION.tokens */
extern T0* T512s6(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_637 */
extern void T68f1764(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_636 */
extern void T68f1763(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_635 */
extern void T68f1762(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_634 */
extern void T68f1761(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].force */
extern void T438s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATION_REGION].fill_with */
extern void T440f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATION_REGION].extend */
extern void T440f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].aliased_resized_area */
extern T0* T438s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATION_REGION].aliased_resized_area */
extern T0* T440f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_creation_region */
extern T0* T65f267(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATION_REGION.set_right_symbol */
extern void T439f7(TC* ac, T0* C, T0* a1);
/* ET_CREATION_REGION.set_left_symbol */
extern void T439f6(TC* ac, T0* C, T0* a1);
/* ET_CREATION_REGION.make */
extern T0* T439c5(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.greater_than_symbol */
extern T0* T81s896(TC* ac);
/* ET_SYMBOL_OPERATOR.make_gt */
extern T0* T324c138(TC* ac);
/* ET_SYMBOL_OPERATOR.make_leaf */
extern void T324f156(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.less_than_symbol */
extern T0* T81s895(TC* ac);
/* ET_SYMBOL_OPERATOR.make_lt */
extern T0* T324c139(TC* ac);
/* ET_CREATION_REGION.tokens */
extern T0* T439s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_633 */
extern void T68f1760(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_632 */
extern void T68f1759(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].force */
extern void T435s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].fill_with */
extern void T437f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].extend */
extern void T437f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T435s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T437f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_create_expression */
extern T0* T65f266(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_EXPRESSION.set_creation_region */
extern void T436f39(TC* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.set_create_keyword */
extern void T436f38(TC* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.make */
extern T0* T436c36(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.create_keyword */
extern T0* T81s621(TC* ac);
/* ET_KEYWORD.make_create */
extern T0* T191c63(TC* ac);
/* ET_CREATE_EXPRESSION.tokens */
extern T0* T436s9(TC* ac);
/* ET_AST_FACTORY.new_qualified_call */
extern T0* T65f263(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL.make */
extern T0* T732c5(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_631 */
extern void T68f1758(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_630 */
extern void T68f1757(TC* ac, T0* C);
/* ET_AST_FACTORY.new_create_instruction */
extern T0* T65f265(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CREATE_INSTRUCTION.set_creation_region */
extern void T734f24(TC* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.set_create_keyword */
extern void T734f23(TC* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.make */
extern T0* T734c22(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_INSTRUCTION.tokens */
extern T0* T734s18(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_629 */
extern void T68f1756(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_628 */
extern void T68f1755(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_627 */
extern void T68f1754(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_626 */
extern void T68f1753(TC* ac, T0* C);
/* ET_AST_FACTORY.new_bang_instruction */
extern T0* T65f262(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BANG_INSTRUCTION.set_left_bang */
extern void T731f22(TC* ac, T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.make */
extern T0* T731c21(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.bang_symbol */
extern T0* T81s906(TC* ac);
/* ET_SYMBOL.make_bang */
extern T0* T282c95(TC* ac);
/* ET_BANG_INSTRUCTION.tokens */
extern T0* T731s17(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_625 */
extern void T68f1752(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_624 */
extern void T68f1751(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_623 */
extern void T68f1750(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_622 */
extern void T68f1749(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].force */
extern void T381s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].fill_with */
extern void T383f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].extend */
extern void T383f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T381s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T383f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_check_instruction */
extern T0* T68f993(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].remove_last */
extern void T256f15(TC* ac, T0* C);
/* SPECIAL [ET_ASSERTION_ITEM].keep_head */
extern void T1157f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].set_count */
extern void T1157f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_last_cursors_after */
extern void T256f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_next_cursor */
extern void T1159f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_after */
extern void T1159f6(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.put_first */
extern void T382f17(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].force */
extern void T1158s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].fill_with */
extern void T1157f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].extend */
extern void T1157f10(TC* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.fixed_array */
extern T0* T382f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].default_create */
extern T0* T1158c3(TC* ac);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].item */
extern T0* T256f10(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_check_instruction */
extern T0* T65f354(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_CHECK_INSTRUCTION.set_check_keyword */
extern void T382f19(TC* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.set_then_compound */
extern void T382f18(TC* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern T0* T382c16(TC* ac, T6 a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern void T382f16p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].make */
extern T0* T1158s1(TC* ac, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].make_empty */
extern T0* T1157c5(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.check_keyword */
extern T0* T81s657(TC* ac);
/* ET_KEYWORD.make_check */
extern T0* T191c76(TC* ac);
/* ET_CHECK_INSTRUCTION.tokens */
extern T0* T382s7(TC* ac);
/* DS_ARRAYED_LIST [INTEGER_32].remove_last */
extern void T239f24(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].move_last_cursors_after */
extern void T239f27(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_next_cursor */
extern void T1142f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_after */
extern void T1142f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].last */
extern T6 T239f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].is_empty */
extern T1 T239f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_621 */
extern void T68f1748(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_620 */
extern void T68f1747(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_619 */
extern void T68f1746(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_618 */
extern void T68f1745(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_check_instruction */
extern void T68f2111(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_assertions */
extern void T68f2116(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_617 */
extern void T68f1744(TC* ac, T0* C);
/* ET_AST_FACTORY.new_null_instruction */
extern T0* T65f261(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_616 */
extern void T68f1743(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_615 */
extern void T68f1742(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_614 */
extern void T68f1741(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_613 */
extern void T68f1740(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_612 */
extern void T68f1739(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_repeat_instruction */
extern T0* T68f992(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REPEAT_INSTRUCTION.set_close_repeat_symbol */
extern void T624f28(TC* ac, T0* C, T0* a1);
/* ET_REPEAT_INSTRUCTION.set_loop_compound */
extern void T624f27(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_611 */
extern void T68f1738(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_instruction */
extern T0* T68f991(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ACROSS_INSTRUCTION.set_end_keyword */
extern void T342f31(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_loop_compound */
extern void T342f28(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_until_conditional */
extern void T342f27(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_from_compound */
extern void T342f26(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_610 */
extern void T68f1737(TC* ac, T0* C);
/* ET_AST_FACTORY.new_loop_instruction */
extern T0* T65f260(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LOOP_INSTRUCTION.set_has_old_variant_syntax */
extern void T729f19(TC* ac, T0* C, T1 a1);
/* ET_LOOP_INSTRUCTION.set_variant_part */
extern void T729f18(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.set_invariant_part */
extern void T729f17(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.make */
extern T0* T729c16(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_LOOP_INSTRUCTION.tokens */
extern T0* T729s8(TC* ac);
/* ET_EIFFEL_PARSER.ise_6_3_7_4554 */
extern T0* T68s990(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_609 */
extern void T68f1736(TC* ac, T0* C);
/* ET_AST_FACTORY.new_loop_instruction_old_syntax */
extern T0* T65f259(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_EIFFEL_PARSER.yy_do_action_608 */
extern void T68f1735(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_607 */
extern void T68f1734(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_606 */
extern void T68f1733(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_605 */
extern void T68f1732(TC* ac, T0* C);
/* ET_AST_FACTORY.new_assignment_attempt */
extern T0* T65f257(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT_ATTEMPT.make */
extern T0* T728c11(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_attempt_symbol */
extern T0* T81s644(TC* ac);
/* ET_SYMBOL.make_assign_attempt */
extern T0* T282c119(TC* ac);
/* ET_ASSIGNMENT_ATTEMPT.tokens */
extern T0* T728s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_604 */
extern void T68f1731(TC* ac, T0* C);
/* ET_AST_FACTORY.new_assignment */
extern T0* T65f256(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT.make */
extern T0* T727c12(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_symbol */
extern T0* T81s643(TC* ac);
/* ET_SYMBOL.make_assign */
extern T0* T282c118(TC* ac);
/* ET_ASSIGNMENT.tokens */
extern T0* T727s6(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_603 */
extern void T68f1730(TC* ac, T0* C);
/* ET_AST_FACTORY.new_assigner_instruction */
extern T0* T65f255(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.make */
extern T0* T726c20(TC* ac, T0* a1, T0* a2);
/* ET_ASSIGNER_INSTRUCTION.dummy_name */
extern T0* T726f6(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.tokens */
extern T0* T726s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_602 */
extern void T68f1729(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601 */
extern void T68f1728(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401_600 */
extern void T68f1108(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_600 */
extern void T68f1727(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_599 */
extern void T68f1726(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_598 */
extern void T68f1725(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].force */
extern void T402s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_COMPOUND].fill_with */
extern void T404f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_COMPOUND].extend */
extern void T404f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T402s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T404f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_597 */
extern void T68f1724(TC* ac, T0* C);
/* ET_COMPOUND.put_first */
extern void T403f17(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].force */
extern void T1176s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].fill_with */
extern void T1175f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].extend */
extern void T1175f7(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_596 */
extern void T68f1723(TC* ac, T0* C);
/* ET_AST_FACTORY.new_compound */
extern T0* T65f254(TC* ac, T0* C, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern T0* T403c16(TC* ac, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern void T403f16p1(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_595 */
extern void T68f1722(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_594 */
extern void T68f1721(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_593 */
extern void T68f1720(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_592 */
extern void T68f1719(TC* ac, T0* C);
/* ET_AST_FACTORY.new_empty_compound */
extern T0* T65f253(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_591 */
extern void T68f1718(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_590 */
extern void T68f1717(TC* ac, T0* C);
/* ET_AST_FACTORY.new_loop_compound */
extern T0* T65f252(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.loop_keyword */
extern T0* T81s651(TC* ac);
/* ET_KEYWORD.make_loop */
extern T0* T191c70(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_589 */
extern void T68f1716(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_588 */
extern void T68f1715(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_587 */
extern void T68f1714(TC* ac, T0* C);
/* ET_AST_FACTORY.new_from_compound */
extern T0* T65f251(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.from_keyword */
extern T0* T81s650(TC* ac);
/* ET_KEYWORD.make_from */
extern T0* T191c69(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_586 */
extern void T68f1713(TC* ac, T0* C);
/* ET_AST_FACTORY.new_rescue_compound */
extern T0* T65f250(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.rescue_keyword */
extern T0* T81s666(TC* ac);
/* ET_KEYWORD.make_rescue */
extern T0* T191c85(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_585 */
extern void T68f1712(TC* ac, T0* C);
/* ET_AST_FACTORY.new_else_compound */
extern T0* T65f249(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_584 */
extern void T68f1711(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_583 */
extern void T68f1710(TC* ac, T0* C);
/* ET_AST_FACTORY.new_then_compound */
extern T0* T65f248(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_582 */
extern void T68f1709(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_581 */
extern void T68f1708(TC* ac, T0* C);
/* ET_AST_FACTORY.new_attribute_compound */
extern T0* T65f247(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.attribute_keyword */
extern T0* T81s680(TC* ac);
/* ET_KEYWORD.make_attribute */
extern T0* T191c99(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_580 */
extern void T68f1707(TC* ac, T0* C);
/* ET_AST_FACTORY.new_do_compound */
extern T0* T65f246(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_579 */
extern void T68f1706(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].force */
extern void T609s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].fill_with */
extern void T611f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].extend */
extern void T611f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T609s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T611f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_qualified_like_type */
extern T0* T65f245(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_TYPE.make */
extern T0* T725c88(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AST_FACTORY.new_attachment_mark_separate_keyword */
extern T0* T65f149(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_578 */
extern void T68f1705(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_577 */
extern void T68f1704(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_576 */
extern void T68f1703(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_575 */
extern void T68f1702(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_574 */
extern void T68f1701(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_573 */
extern void T68f1700(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_572 */
extern void T68f1699(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_571 */
extern void T68f1698(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_570 */
extern void T68f1697(TC* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_like_braced_type */
extern T0* T65f244(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_like_keyword */
extern void T724f92(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.make */
extern T0* T724c91(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_569 */
extern void T68f1696(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_568 */
extern void T68f1695(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_567 */
extern void T68f1694(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_566 */
extern void T68f1693(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_565 */
extern void T68f1692(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_564 */
extern void T68f1691(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_563 */
extern void T68f1690(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_562 */
extern void T68f1689(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_561 */
extern void T68f1688(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_560 */
extern void T68f1687(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_559 */
extern void T68f1686(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_558 */
extern void T68f1685(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].force */
extern void T543s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LIKE_TYPE].fill_with */
extern void T545f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LIKE_TYPE].extend */
extern void T545f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T543s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T545f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_557 */
extern void T68f1684(TC* ac, T0* C);
/* ET_AST_FACTORY.new_like_current */
extern T0* T65f243(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.set_like_keyword */
extern void T199f86(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_556 */
extern void T68f1683(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_555 */
extern void T68f1682(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_554 */
extern void T68f1681(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_553 */
extern void T68f1680(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_552 */
extern void T68f1679(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_551 */
extern void T68f1678(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_550 */
extern void T68f1677(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_549 */
extern void T68f1676(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_548 */
extern void T68f1675(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_547 */
extern void T68f1674(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_like_feature */
extern T0* T68f987(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_like_feature */
extern T0* T65f353(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.set_like_keyword */
extern void T722f92(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.make */
extern T0* T722c91(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_546 */
extern void T68f1673(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_545 */
extern void T68f1672(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_544 */
extern void T68f1671(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_543 */
extern void T68f1670(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_542 */
extern void T68f1669(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_541 */
extern void T68f1668(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_540 */
extern void T68f1667(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_539 */
extern void T68f1666(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_538 */
extern void T68f1665(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_537 */
extern void T68f1664(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_536 */
extern void T68f1663(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_535 */
extern void T68f1662(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_534 */
extern void T68f1661(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].force */
extern void T347s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T348f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].extend */
extern void T348f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T347s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T348f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_labeled_actual_parameter_semicolon */
extern T0* T65f242(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_actual_parameter */
extern T0* T65f239(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LABELED_ACTUAL_PARAMETER.make */
extern T0* T720c12(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_533 */
extern void T68f1660(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_532 */
extern void T68f1659(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].force */
extern void T349s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].fill_with */
extern void T350f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].extend */
extern void T350f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.add_to_actual_parameter_list */
extern void T68f2110(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_comma_actual_parameter */
extern T0* T65f241(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T1448c12(TC* ac, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.first */
extern T0* T185f12(TC* ac, T0* C);
/* ET_AST_FACTORY.new_label_comma */
extern T0* T65f240(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_531 */
extern void T68f1658(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_530 */
extern void T68f1657(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_529 */
extern void T68f1656(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_528 */
extern void T68f1655(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_527 */
extern void T68f1654(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T349s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T350f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_actual_parameters */
extern T0* T65f237(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T185f31(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_526 */
extern void T68f1653(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_525 */
extern void T68f1652(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_524 */
extern void T68f1651(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_523 */
extern void T68f1650(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_522 */
extern void T68f1649(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_521 */
extern void T68f1648(TC* ac, T0* C);
/* ET_AST_FACTORY.new_actual_parameter_comma */
extern T0* T65f238(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_520 */
extern void T68f1647(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_519 */
extern void T68f1646(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_tuple_type */
extern T0* T68f986(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T68f986ot1(TC* ac, T0* a1);
/* ET_AST_FACTORY.new_tuple_type */
extern T0* T65f352(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.providers_enabled */
extern T1 T68f1017(TC* ac, T0* C);
/* ET_ECF_LIBRARY.master_class */
extern T0* T802f115(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.master_class */
extern T0* T87f144(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_518 */
extern void T68f1645(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_named_type */
extern T0* T68f985(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T68f985ot1(TC* ac, T0* a1);
/* ET_AST_FACTORY.new_class_type */
extern T0* T65f339(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_generic_class_type */
extern T0* T65f338(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AST_FACTORY.new_formal_parameter_type */
extern T0* T65f351(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_CLASS.formal_parameter */
extern T0* T70f58(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter_by_name */
extern T0* T506f14(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_517 */
extern void T68f1644(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_516 */
extern void T68f1643(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_515 */
extern void T68f1642(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_514 */
extern void T68f1641(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_513 */
extern void T68f1640(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_512 */
extern void T68f1639(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_511 */
extern void T68f1638(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_510 */
extern void T68f1637(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_509 */
extern void T68f1636(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_508 */
extern void T68f1635(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_507 */
extern void T68f1634(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE].force */
extern void T632s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE].fill_with */
extern void T633f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE].extend */
extern void T633f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE].aliased_resized_area */
extern T0* T632s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE].aliased_resized_area */
extern T0* T633f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_506 */
extern void T68f1633(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_505 */
extern void T68f1632(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_504 */
extern void T68f1631(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_503 */
extern void T68f1630(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_502 */
extern void T68f1629(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_501 */
extern void T68f1628(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_500 */
extern void T68f1627(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_499 */
extern void T68f1626(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_498 */
extern void T68f1625(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_497 */
extern void T68f1624(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_496 */
extern void T68f1623(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_495 */
extern void T68f1622(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_494 */
extern void T68f1621(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_493 */
extern void T68f1620(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_492 */
extern void T68f1619(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_491 */
extern void T68f1618(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_490 */
extern void T68f1617(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_489 */
extern void T68f1616(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_488 */
extern void T68f1615(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_487 */
extern void T68f1614(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_486 */
extern void T68f1613(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_485 */
extern void T68f1612(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_484 */
extern void T68f1611(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_483 */
extern void T68f1610(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_482 */
extern void T68f1609(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_481 */
extern void T68f1608(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_480 */
extern void T68f1607(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_479 */
extern void T68f1606(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_478 */
extern void T68f1605(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_477 */
extern void T68f1604(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_476 */
extern void T68f1603(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_475 */
extern void T68f1602(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_474 */
extern void T68f1601(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_473 */
extern void T68f1600(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_472 */
extern void T68f1599(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_471 */
extern void T68f1598(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_470 */
extern void T68f1597(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_469 */
extern void T68f1596(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_468 */
extern void T68f1595(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_467 */
extern void T68f1594(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_466 */
extern void T68f1593(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_465 */
extern void T68f1592(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_464 */
extern void T68f1591(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_463 */
extern void T68f1590(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_462 */
extern void T68f1589(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_461 */
extern void T68f1588(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_460 */
extern void T68f1587(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_459 */
extern void T68f1586(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_458 */
extern void T68f1585(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_457 */
extern void T68f1584(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_456 */
extern void T68f1583(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_455 */
extern void T68f1582(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_454 */
extern void T68f1581(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_453 */
extern void T68f1580(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_452 */
extern void T68f1579(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_451 */
extern void T68f1578(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_450 */
extern void T68f1577(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_449 */
extern void T68f1576(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_448 */
extern void T68f1575(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_447 */
extern void T68f1574(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_446 */
extern void T68f1573(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_445 */
extern void T68f1572(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_444 */
extern void T68f1571(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_443 */
extern void T68f1570(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_442 */
extern void T68f1569(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_441 */
extern void T68f1568(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_440 */
extern void T68f1567(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_439 */
extern void T68f1566(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_438 */
extern void T68f1565(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_437 */
extern void T68f1564(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_436 */
extern void T68f1563(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].force */
extern void T649s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_VARIANT].fill_with */
extern void T651f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_VARIANT].extend */
extern void T651f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_435 */
extern void T68f1562(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].aliased_resized_area */
extern T0* T649s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_VARIANT].aliased_resized_area */
extern T0* T651f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_434 */
extern void T68f1561(TC* ac, T0* C);
/* ET_AST_FACTORY.new_variant */
extern T0* T65f236(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VARIANT.set_variant_keyword */
extern void T650f7(TC* ac, T0* C, T0* a1);
/* ET_VARIANT.make */
extern T0* T650c6(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.variant_keyword */
extern T0* T81s672(TC* ac);
/* ET_KEYWORD.make_variant */
extern T0* T191c91(TC* ac);
/* ET_VARIANT.tokens */
extern T0* T650s4(TC* ac);
/* ET_AST_FACTORY.new_tag */
extern T0* T65f133(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_433 */
extern void T68f1560(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_432 */
extern void T68f1559(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].force */
extern void T555s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].fill_with */
extern void T557f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].extend */
extern void T557f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T555s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T557f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_loop_invariants */
extern T0* T68f984(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.put_first */
extern void T556f16(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.fixed_array */
extern T0* T556f5(TC* ac, T0* C);
/* ET_AST_FACTORY.new_loop_invariants */
extern T0* T65f350(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_LOOP_INVARIANTS.set_invariant_keyword */
extern void T556f17(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern T0* T556c15(TC* ac, T6 a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern void T556f15p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.invariant_keyword */
extern T0* T81s681(TC* ac);
/* ET_KEYWORD.make_invariant */
extern T0* T191c100(TC* ac);
/* ET_LOOP_INVARIANTS.tokens */
extern T0* T556s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_431 */
extern void T68f1558(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_430 */
extern void T68f1557(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_429 */
extern void T68f1556(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_428 */
extern void T68f1555(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_loop_invariant */
extern void T68f2109(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_427 */
extern void T68f1554(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_426 */
extern void T68f1553(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].force */
extern void T538s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INVARIANTS].fill_with */
extern void T540f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INVARIANTS].extend */
extern void T540f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T538s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T540f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_invariants */
extern T0* T68f983(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.wipe_out_last_inline_separate_arguments_stack */
extern void T68f1088(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].wipe_out */
extern void T254f11(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].i_th */
extern T0* T254f5(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.wipe_out_last_iteration_components_stack */
extern void T68f1087(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].wipe_out */
extern void T252f11(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].i_th */
extern T0* T252f5(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.wipe_out_last_object_tests_stack */
extern void T68f1086(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].wipe_out */
extern void T250f11(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].i_th */
extern T0* T250f5(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.wipe_out_last_local_variables_stack */
extern void T68f1085(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].wipe_out */
extern void T247f10(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.wipe_out_last_formal_arguments_stack */
extern void T68f1084(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].wipe_out */
extern void T246f10(TC* ac, T0* C);
/* ET_INVARIANTS.set_inline_separate_arguments */
extern void T539f30(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.set_iteration_components */
extern void T539f29(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.set_object_tests */
extern void T539f28(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.put_first */
extern void T539f27(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.fixed_array */
extern T0* T539f10(TC* ac, T0* C);
/* ET_AST_FACTORY.new_invariants */
extern T0* T65f349(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_INVARIANTS.set_invariant_keyword */
extern void T539f31(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.make_with_capacity */
extern T0* T539c26(TC* ac, T0* a1, T6 a2);
/* ET_INVARIANTS.make_assertions_with_capacity */
extern void T539f33(TC* ac, T0* C, T6 a1);
/* ET_INVARIANTS.tokens */
extern T0* T539s11(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_425 */
extern void T68f1552(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_424 */
extern void T68f1551(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_423 */
extern void T68f1550(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_422 */
extern void T68f1549(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_invariant */
extern void T68f2108(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_421 */
extern void T68f1548(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].force */
extern void T600s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_POSTCONDITIONS].fill_with */
extern void T602f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_POSTCONDITIONS].extend */
extern void T602f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T600s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T602f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_postconditions */
extern T0* T68f982(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_POSTCONDITIONS.put_first */
extern void T601f18(TC* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.fixed_array */
extern T0* T601f8(TC* ac, T0* C);
/* ET_AST_FACTORY.new_postconditions */
extern T0* T65f348(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_POSTCONDITIONS.set_then_keyword */
extern void T601f20(TC* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.set_ensure_keyword */
extern void T601f19(TC* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern T0* T601c17(TC* ac, T6 a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern void T601f17p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.ensure_keyword */
extern T0* T81s898(TC* ac);
/* ET_KEYWORD.make_ensure */
extern T0* T191c56(TC* ac);
/* ET_POSTCONDITIONS.tokens */
extern T0* T601s9(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_420 */
extern void T68f1547(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_419 */
extern void T68f1546(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_418 */
extern void T68f1545(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_417 */
extern void T68f1544(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_416 */
extern void T68f1543(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_postcondition */
extern void T68f2107(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_415 */
extern void T68f1542(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].force */
extern void T603s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PRECONDITIONS].fill_with */
extern void T605f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PRECONDITIONS].extend */
extern void T605f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].aliased_resized_area */
extern T0* T603s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PRECONDITIONS].aliased_resized_area */
extern T0* T605f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_preconditions */
extern T0* T68f981(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.put_first */
extern void T604f17(TC* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.fixed_array */
extern T0* T604f7(TC* ac, T0* C);
/* ET_AST_FACTORY.new_preconditions */
extern T0* T65f347(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_PRECONDITIONS.set_else_keyword */
extern void T604f19(TC* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.set_require_keyword */
extern void T604f18(TC* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern T0* T604c16(TC* ac, T6 a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern void T604f16p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.require_keyword */
extern T0* T81s899(TC* ac);
/* ET_KEYWORD.make_require */
extern T0* T191c59(TC* ac);
/* ET_PRECONDITIONS.tokens */
extern T0* T604s8(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_414 */
extern void T68f1541(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_413 */
extern void T68f1540(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_412 */
extern void T68f1539(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_411 */
extern void T68f1538(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_410 */
extern void T68f1537(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_precondition */
extern void T68f2106(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_409 */
extern void T68f1536(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_class_assertion */
extern void T68f2105(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.add_untagged_assertion */
extern void T68f2115(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T68f2115ot1(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].force_last */
extern void T256f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].resize */
extern void T256f18(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1158s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1157f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_capacity */
extern T6 T256f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].extendible */
extern T1 T256f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].replace */
extern void T256f14(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_AST_FACTORY.new_assertion_semicolon */
extern T0* T65f335(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TAGGED_ASSERTION.set_untagged_assertion */
extern void T772f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].last */
extern T0* T256f6(TC* ac, T0* C);
/* ET_AST_FACTORY.new_class_assertion */
extern T0* T65f235(TC* ac, T0* C, T0* a1);
/* ET_CLASS_ASSERTION.set_class_keyword */
extern void T719f8(TC* ac, T0* C, T0* a1);
/* ET_CLASS_ASSERTION.make */
extern T0* T719c7(TC* ac);
/* ET_CLASS_ASSERTION.tokens */
extern T0* T719s2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_408 */
extern void T68f1535(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_407 */
extern void T68f1534(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_tagged_assertion */
extern void T68f2104(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T68f2104ot1(TC* ac, T0* a1);
/* ET_AST_FACTORY.new_tagged_assertion */
extern T0* T65f334(TC* ac, T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.make */
extern T0* T772c7(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.report_syntax_error */
extern void T68f1113(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_syntax_error */
extern void T63f217(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.make */
extern T0* T1444c18(TC* ac, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.set_compilers */
extern void T1444f19(TC* ac, T0* C, T1 a1);
/* ET_BINARY_INTEGER_CONSTANT.position_to_text */
extern T0* T679f62(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.append_position_to_string */
extern void T679f75(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.integer_ */
extern T0* T679s64(TC* ac);
/* ET_OCTAL_INTEGER_CONSTANT.position_to_text */
extern T0* T678f62(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.append_position_to_string */
extern void T678f75(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.integer_ */
extern T0* T678s64(TC* ac);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position_to_text */
extern T0* T677f62(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.append_position_to_string */
extern void T677f75(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_ */
extern T0* T677s64(TC* ac);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position_to_text */
extern T0* T676f62(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.append_position_to_string */
extern void T676f75(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_ */
extern T0* T676s64(TC* ac);
/* ET_REGULAR_INTEGER_CONSTANT.position_to_text */
extern T0* T675f62(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.append_position_to_string */
extern void T675f76(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.integer_ */
extern T0* T675s64(TC* ac);
/* ET_VERBATIM_STRING.position_to_text */
extern T0* T674f49(TC* ac, T0* C);
/* ET_VERBATIM_STRING.append_position_to_string */
extern void T674f61(TC* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.integer_ */
extern T0* T674s51(TC* ac);
/* ET_SPECIAL_MANIFEST_STRING.position_to_text */
extern T0* T673f45(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.append_position_to_string */
extern void T673f57(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.integer_ */
extern T0* T673s47(TC* ac);
/* ET_C3_CHARACTER_CONSTANT.position_to_text */
extern T0* T671f46(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.append_position_to_string */
extern void T671f58(TC* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.integer_ */
extern T0* T671s48(TC* ac);
/* ET_C2_CHARACTER_CONSTANT.position_to_text */
extern T0* T686f46(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.append_position_to_string */
extern void T686f58(TC* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.integer_ */
extern T0* T686s48(TC* ac);
/* ET_C1_CHARACTER_CONSTANT.position_to_text */
extern T0* T685f45(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.append_position_to_string */
extern void T685f57(TC* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.integer_ */
extern T0* T685s47(TC* ac);
/* ET_FALSE_CONSTANT.position_to_text */
extern T0* T684f38(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.append_position_to_string */
extern void T684f49(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.integer_ */
extern T0* T684s40(TC* ac);
/* ET_TRUE_CONSTANT.position_to_text */
extern T0* T683f38(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.append_position_to_string */
extern void T683f49(TC* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.integer_ */
extern T0* T683s40(TC* ac);
/* ET_UNDERSCORED_REAL_CONSTANT.position_to_text */
extern T0* T681f40(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.append_position_to_string */
extern void T681f53(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.integer_ */
extern T0* T681s42(TC* ac);
/* ET_REGULAR_REAL_CONSTANT.position_to_text */
extern T0* T680f40(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.append_position_to_string */
extern void T680f53(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.integer_ */
extern T0* T680s42(TC* ac);
/* ET_REGULAR_MANIFEST_STRING.position_to_text */
extern T0* T672f44(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.append_position_to_string */
extern void T672f56(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.integer_ */
extern T0* T672s46(TC* ac);
/* ET_CURRENT.position_to_text */
extern T0* T297f30(TC* ac, T0* C);
/* ET_CURRENT.append_position_to_string */
extern void T297f42(TC* ac, T0* C, T0* a1);
/* ET_CURRENT.integer_ */
extern T0* T297s31(TC* ac);
/* ET_FILE_POSITION.to_text */
extern T0* T774f10(TC* ac, T0* C);
/* ET_FILE_POSITION.append_to_string */
extern void T774f15(TC* ac, T0* C, T0* a1);
/* ET_FILE_POSITION.append_to_string_with_filename */
extern void T774f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_context_to_string */
extern void T774f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_line_to_string */
extern void T774f19(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_TEXT_INPUT_FILE.end_of_input */
extern T1 T43f37(TC* ac, T0* C);
/* ET_FILE_POSITION.skip_lines */
extern void T774f18(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_FILE_POSITION.integer_ */
extern T0* T774s11(TC* ac);
/* ET_ERROR_HANDLER.report_syntax_error */
extern void T42f217(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.set_syntax_error */
extern void T68f1117(TC* ac, T0* C);
/* ET_FILE_POSITION.make */
extern T0* T774c12(TC* ac, T0* a1, T6 a2, T6 a3);
/* ET_FILE_POSITION.make_compressed_position */
extern void T774f13(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.set_position */
extern void T774f14(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.column */
extern T6 T774f3(TC* ac, T0* C);
/* ET_FILE_POSITION.line */
extern T6 T774f6(TC* ac, T0* C);
/* ET_FILE_POSITION.is_null */
extern T1 T774f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.current_position */
extern T0* T68f750(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_406 */
extern void T68f1533(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_405 */
extern void T68f1532(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_expression_assertion */
extern void T68f2103(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_404 */
extern void T68f1531(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_403 */
extern void T68f1530(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_402 */
extern void T68f1529(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401 */
extern void T68f1528(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201_400 */
extern void T68f1107(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_400 */
extern void T68f1527(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_399 */
extern void T68f1526(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_398 */
extern void T68f1525(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_397 */
extern void T68f1524(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].force */
extern void T549s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].fill_with */
extern void T551f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].extend */
extern void T551f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T549s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T551f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_variable_semicolon */
extern T0* T65f234(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_local_variable */
extern T0* T65f233(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LOCAL_VARIABLE.make */
extern T0* T547c9(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_396 */
extern void T68f1523(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_395 */
extern void T68f1522(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].force */
extern void T546s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].fill_with */
extern void T548f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].extend */
extern void T548f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T546s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T548f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_comma_variable */
extern T0* T65f232(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LOCAL_COMMA_VARIABLE.make */
extern T0* T1447c9(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_type */
extern T0* T68f978(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_394 */
extern void T68f1521(TC* ac, T0* C);
/* ET_AST_FACTORY.new_local_name_comma */
extern T0* T65f231(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_393 */
extern void T68f1520(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.put_first */
extern void T553f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].force */
extern void T1603s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].fill_with */
extern void T1601f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].extend */
extern void T1601f7(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.fixed_array */
extern T0* T553f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T1603c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_392 */
extern void T68f1519(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_391 */
extern void T68f1518(TC* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.set_declared_type */
extern void T1447f10(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE.type */
extern T0* T547f6(TC* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.type */
extern T0* T1447f6(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.first */
extern T0* T553f6(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.is_empty */
extern T1 T553f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_390 */
extern void T68f1517(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_389 */
extern void T68f1516(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_local_variables */
extern T0* T68f979(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_AST_FACTORY.new_local_variables */
extern T0* T65f346(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_LOCAL_VARIABLE_LIST.set_local_keyword */
extern void T553f13(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern T0* T553c11(TC* ac, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern void T553f11p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T1603s1(TC* ac, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].make_empty */
extern T0* T1601c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.local_keyword */
extern T0* T81s659(TC* ac);
/* ET_KEYWORD.make_local */
extern T0* T191c78(TC* ac);
/* ET_LOCAL_VARIABLE_LIST.tokens */
extern T0* T553s9(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_388 */
extern void T68f1515(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_387 */
extern void T68f1514(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_386 */
extern void T68f1513(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_385 */
extern void T68f1512(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_384 */
extern void T68f1511(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_383 */
extern void T68f1510(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].force */
extern void T493s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].fill_with */
extern void T495f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].extend */
extern void T495f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T493s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T495f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_argument_semicolon */
extern T0* T65f230(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_formal_argument */
extern T0* T65f229(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_ARGUMENT.make */
extern T0* T491c9(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_382 */
extern void T68f1509(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_381 */
extern void T68f1508(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].force */
extern void T490s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].fill_with */
extern void T492f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].extend */
extern void T492f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T490s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T492f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_comma_argument */
extern T0* T65f228(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.make */
extern T0* T1446c9(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_380 */
extern void T68f1507(TC* ac, T0* C);
/* ET_AST_FACTORY.new_argument_name_comma */
extern T0* T65f227(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_379 */
extern void T68f1506(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.put_first */
extern void T497f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].force */
extern void T1598s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].fill_with */
extern void T1596f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].extend */
extern void T1596f7(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.fixed_array */
extern T0* T497f11(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T1598c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_378 */
extern void T68f1505(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_377 */
extern void T68f1504(TC* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_declared_type */
extern void T1446f10(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.first */
extern T0* T497f5(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.is_empty */
extern T1 T497f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_376 */
extern void T68f1503(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_375 */
extern void T68f1502(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_formal_arguments */
extern T0* T68f977(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AST_FACTORY.new_formal_arguments */
extern T0* T65f345(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T497c12(TC* ac, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern void T497f12p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T1598s1(TC* ac, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].make_empty */
extern T0* T1596c4(TC* ac, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.tokens */
extern T0* T497s9(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_374 */
extern void T68f1501(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_373 */
extern void T68f1500(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_372 */
extern void T68f1499(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_371 */
extern void T68f1498(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_370 */
extern void T68f1497(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_369 */
extern void T68f1496(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_368 */
extern void T68f1495(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_367 */
extern void T68f1494(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].force */
extern void T363s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME].fill_with */
extern void T365f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME].extend */
extern void T365f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T363s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T365f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_invalid_alias_name */
extern T0* T68f976(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.new_alias_free_name */
extern T0* T68f1032(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_alias_free_name */
extern T0* T65f224(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_FREE_NAME.set_convert_keyword */
extern void T716f56(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.set_alias_keyword */
extern void T716f55(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.make_infix */
extern T0* T716c54(TC* ac, T0* a1);
/* ET_ALIAS_FREE_NAME.default_keyword */
extern T0* T716f53(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_keyword */
extern T0* T81s656(TC* ac);
/* ET_KEYWORD.make_alias */
extern T0* T191c75(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_366 */
extern void T68f1493(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_parenthesis_name */
extern T0* T65f226(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.set_convert_keyword */
extern void T364f82(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.set_alias_keyword */
extern void T364f81(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.make_parenthesis */
extern T0* T364c109(TC* ac, T0* a1);
/* ET_ALIAS_NAME.default_keyword */
extern T0* T364f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_365 */
extern void T68f1492(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_bracket_name */
extern T0* T65f225(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_bracket */
extern T0* T364c108(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_364 */
extern void T68f1491(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_363 */
extern void T68f1490(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_dotdot_name */
extern T0* T65f223(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_dotdot */
extern T0* T364c107(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_362 */
extern void T68f1489(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_xor_symbol_name */
extern T0* T65f222(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_xor_symbol */
extern T0* T364c106(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_361 */
extern void T68f1488(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_xor_name */
extern T0* T65f221(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_xor */
extern T0* T364c105(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_360 */
extern void T68f1487(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_implies_symbol_name */
extern T0* T65f220(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_implies_symbol */
extern T0* T364c104(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_359 */
extern void T68f1486(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_implies_name */
extern T0* T65f219(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_implies */
extern T0* T364c103(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_358 */
extern void T68f1485(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_else_symbol_name */
extern T0* T65f218(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_or_else_symbol */
extern T0* T364c102(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_357 */
extern void T68f1484(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_else_name */
extern T0* T65f217(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_or_else */
extern T0* T364c101(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_356 */
extern void T68f1483(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_symbol_name */
extern T0* T65f216(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_or_symbol */
extern T0* T364c100(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_355 */
extern void T68f1482(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_name */
extern T0* T65f215(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_or */
extern T0* T364c99(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_354 */
extern void T68f1481(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_then_symbol_name */
extern T0* T65f214(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_and_then_symbol */
extern T0* T364c98(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_353 */
extern void T68f1480(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_then_name */
extern T0* T65f213(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_and_then */
extern T0* T364c97(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_352 */
extern void T68f1479(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_symbol_name */
extern T0* T65f212(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_and_symbol */
extern T0* T364c96(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_351 */
extern void T68f1478(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_name */
extern T0* T65f211(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_and */
extern T0* T364c95(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_350 */
extern void T68f1477(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_ge_name */
extern T0* T65f210(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_ge */
extern T0* T364c94(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_349 */
extern void T68f1476(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_gt_name */
extern T0* T65f209(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_gt */
extern T0* T364c93(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_348 */
extern void T68f1475(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_le_name */
extern T0* T65f208(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_le */
extern T0* T364c92(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_347 */
extern void T68f1474(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_lt_name */
extern T0* T65f207(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_lt */
extern T0* T364c91(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_346 */
extern void T68f1473(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_power_name */
extern T0* T65f206(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_power */
extern T0* T364c90(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_345 */
extern void T68f1472(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_mod_name */
extern T0* T65f205(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_mod */
extern T0* T364c89(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_344 */
extern void T68f1471(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_div_name */
extern T0* T65f204(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_div */
extern T0* T364c88(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_343 */
extern void T68f1470(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_divide_name */
extern T0* T65f203(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_divide */
extern T0* T364c87(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_342 */
extern void T68f1469(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_times_name */
extern T0* T65f202(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_times */
extern T0* T364c86(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_341 */
extern void T68f1468(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_minus_name */
extern T0* T65f201(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_minus */
extern T0* T364c85(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_340 */
extern void T68f1467(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_plus_name */
extern T0* T65f200(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_plus */
extern T0* T364c84(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_339 */
extern void T68f1466(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_not_symbol_name */
extern T0* T65f199(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_not_symbol */
extern T0* T364c83(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_338 */
extern void T68f1465(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_not_name */
extern T0* T65f198(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_not */
extern T0* T364c80(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_337 */
extern void T68f1464(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST].force */
extern void T366s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].fill_with */
extern void T368f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].extend */
extern void T368f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST].aliased_resized_area */
extern T0* T366s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].aliased_resized_area */
extern T0* T368f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_336 */
extern void T68f1463(TC* ac, T0* C);
/* ET_ALIAS_NAME_LIST.put_first */
extern void T367f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].force */
extern void T1579s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].fill_with */
extern void T1578f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].extend */
extern void T1578f10(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.fixed_array */
extern T0* T367f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].default_create */
extern T0* T1579c3(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_335 */
extern void T68f1462(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_name_list */
extern T0* T65f197(TC* ac, T0* C, T6 a1);
/* ET_ALIAS_NAME_LIST.make_with_capacity */
extern T0* T367c11(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].make */
extern T0* T1579s2(TC* ac, T6 a1);
/* SPECIAL [ET_ALIAS_NAME].make_empty */
extern T0* T1578c5(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_334 */
extern void T68f1461(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].force */
extern void T471s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].fill_with */
extern void T473f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].extend */
extern void T473f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T471s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T473f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_aliased_feature_name */
extern T0* T65f196(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIASED_FEATURE_NAME.make */
extern T0* T715c6(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_333 */
extern void T68f1460(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_332 */
extern void T68f1459(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].force */
extern void T485s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME].fill_with */
extern void T486f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME].extend */
extern void T486f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T485s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T486f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_331 */
extern void T68f1458(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].force */
extern void T369s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ASSIGNER].fill_with */
extern void T371f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ASSIGNER].extend */
extern void T371f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T369s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T371f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_assigner */
extern T0* T65f195(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_330 */
extern void T68f1457(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_329 */
extern void T68f1456(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].force */
extern void T474s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].fill_with */
extern void T476f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].extend */
extern void T476f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T474s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T476f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_external_alias */
extern T0* T65f194(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_328 */
extern void T68f1455(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_327 */
extern void T68f1454(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].force */
extern void T329s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].fill_with */
extern void T331f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].extend */
extern void T331f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_326 */
extern void T68f1453(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T329s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T331f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_325 */
extern void T68f1452(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_324 */
extern void T68f1451(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_323 */
extern void T68f1450(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].force */
extern void T606s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PROCEDURE].fill_with */
extern void T608f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PROCEDURE].extend */
extern void T608f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].aliased_resized_area */
extern T0* T606s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PROCEDURE].aliased_resized_area */
extern T0* T608f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_external_procedure */
extern T0* T68f975(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_AST_FACTORY.new_external_procedure */
extern T0* T65f344(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EXTERNAL_PROCEDURE.set_first_note */
extern void T714f100(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_clients */
extern void T714f99(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_alias_clause */
extern void T714f98(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_postconditions */
extern void T714f97(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_preconditions */
extern void T714f96(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_obsolete_message */
extern void T714f95(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_is_keyword */
extern void T714f94(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.make */
extern T0* T714c89(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.tokens */
extern T0* T714s45(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_322 */
extern void T68f1449(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_321 */
extern void T68f1448(TC* ac, T0* C);
/* ET_AST_FACTORY.new_deferred_procedure */
extern T0* T65f193(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13);
/* ET_DEFERRED_PROCEDURE.set_first_note */
extern void T713f90(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_clients */
extern void T713f89(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_postconditions */
extern void T713f88(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_preconditions */
extern void T713f87(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_obsolete_message */
extern void T713f86(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_is_keyword */
extern void T713f85(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.make */
extern T0* T713c80(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DEFERRED_PROCEDURE.make */
extern void T713f80p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.deferred_keyword */
extern T0* T81s674(TC* ac);
/* ET_KEYWORD.make_deferred */
extern T0* T191c93(TC* ac);
/* ET_DEFERRED_PROCEDURE.tokens */
extern T0* T713s29(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_320 */
extern void T68f1447(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_319 */
extern void T68f1446(TC* ac, T0* C);
/* ET_AST_FACTORY.new_once_procedure */
extern T0* T65f192(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_ONCE_PROCEDURE.set_first_note */
extern void T712f97(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_clients */
extern void T712f96(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_rescue_clause */
extern void T712f95(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_postconditions */
extern void T712f94(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_compound */
extern void T712f93(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_keys */
extern void T712f92(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_locals */
extern void T712f91(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_preconditions */
extern void T712f90(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_obsolete_message */
extern void T712f89(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_is_keyword */
extern void T712f88(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.make */
extern T0* T712c83(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.tokens */
extern T0* T712s47(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_318 */
extern void T68f1445(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_317 */
extern void T68f1444(TC* ac, T0* C);
/* ET_AST_FACTORY.new_do_procedure */
extern T0* T65f191(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DO_PROCEDURE.set_first_note */
extern void T711f94(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_clients */
extern void T711f93(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_rescue_clause */
extern void T711f92(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_postconditions */
extern void T711f91(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_compound */
extern void T711f90(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_locals */
extern void T711f89(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_preconditions */
extern void T711f88(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_obsolete_message */
extern void T711f87(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_is_keyword */
extern void T711f86(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_316 */
extern void T68f1443(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_315 */
extern void T68f1442(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_QUERY].force */
extern void T615s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUERY].fill_with */
extern void T617f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUERY].extend */
extern void T617f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUERY].aliased_resized_area */
extern T0* T615s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUERY].aliased_resized_area */
extern T0* T617f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_external_function */
extern T0* T68f974(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_AST_FACTORY.new_external_function */
extern T0* T65f343(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EXTERNAL_FUNCTION.set_first_note */
extern void T710f103(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_clients */
extern void T710f102(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_alias_clause */
extern void T710f101(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_postconditions */
extern void T710f100(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_preconditions */
extern void T710f99(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_obsolete_message */
extern void T710f98(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_assigner */
extern void T710f97(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_is_keyword */
extern void T710f96(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.make */
extern T0* T710c91(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EIFFEL_PARSER.yy_do_action_314 */
extern void T68f1441(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_313 */
extern void T68f1440(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_312 */
extern void T68f1439(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_311 */
extern void T68f1438(TC* ac, T0* C);
/* ET_AST_FACTORY.new_deferred_function */
extern T0* T65f189(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DEFERRED_FUNCTION.set_first_note */
extern void T708f93(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_clients */
extern void T708f92(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_postconditions */
extern void T708f91(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_preconditions */
extern void T708f90(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_obsolete_message */
extern void T708f89(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_assigner */
extern void T708f88(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_is_keyword */
extern void T708f87(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.make */
extern T0* T708c82(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.make */
extern void T708f82p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.tokens */
extern T0* T708s39(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_310 */
extern void T68f1437(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_309 */
extern void T68f1436(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_308 */
extern void T68f1435(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_307 */
extern void T68f1434(TC* ac, T0* C);
/* ET_AST_FACTORY.new_once_function */
extern T0* T65f188(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17, T0* a18);
/* ET_ONCE_FUNCTION.set_first_note */
extern void T707f100(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_clients */
extern void T707f99(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_rescue_clause */
extern void T707f98(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_postconditions */
extern void T707f97(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_compound */
extern void T707f96(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_keys */
extern void T707f95(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_locals */
extern void T707f94(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_preconditions */
extern void T707f93(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_obsolete_message */
extern void T707f92(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_assigner */
extern void T707f91(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_is_keyword */
extern void T707f90(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.make */
extern T0* T707c85(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ONCE_FUNCTION.tokens */
extern T0* T707s42(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_306 */
extern void T68f1433(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_305 */
extern void T68f1432(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_304 */
extern void T68f1431(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_303 */
extern void T68f1430(TC* ac, T0* C);
/* ET_AST_FACTORY.new_do_function */
extern T0* T65f186(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_DO_FUNCTION.set_first_note */
extern void T706f97(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_clients */
extern void T706f96(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_rescue_clause */
extern void T706f95(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_postconditions */
extern void T706f94(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_compound */
extern void T706f93(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_locals */
extern void T706f92(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_preconditions */
extern void T706f91(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_obsolete_message */
extern void T706f90(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_assigner */
extern void T706f89(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_is_keyword */
extern void T706f88(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.make */
extern T0* T706c83(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DO_FUNCTION.tokens */
extern T0* T706s48(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_302 */
extern void T68f1429(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_301 */
extern void T68f1428(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_300 */
extern void T68f1427(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_299 */
extern void T68f1426(TC* ac, T0* C);
/* ET_AST_FACTORY.new_unique_attribute */
extern T0* T65f185(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_UNIQUE_ATTRIBUTE.set_clients */
extern void T705f89(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_assigner */
extern void T705f88(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.make */
extern T0* T705c83(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_INTEGER_CONSTANT.make */
extern T0* T675c65(TC* ac, T0* a1, T11 a2, T1 a3);
/* ET_REGULAR_INTEGER_CONSTANT.make_leaf */
extern void T675f68(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unique_keyword */
extern T0* T81s902(TC* ac);
/* ET_KEYWORD.make_unique */
extern T0* T191c58(TC* ac);
/* ET_TOKEN_CONSTANTS.is_keyword */
extern T0* T81s648(TC* ac);
/* ET_KEYWORD.make_is */
extern T0* T191c67(TC* ac);
/* ET_UNIQUE_ATTRIBUTE.tokens */
extern T0* T705s37(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_298 */
extern void T68f1425(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_297 */
extern void T68f1424(TC* ac, T0* C);
/* ET_AST_FACTORY.new_constant_attribute */
extern T0* T65f184(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CONSTANT_ATTRIBUTE.set_clients */
extern void T704f88(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_assigner */
extern void T704f87(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.make */
extern T0* T704c82(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTANT_ATTRIBUTE.tokens */
extern T0* T704s44(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_296 */
extern void T68f1423(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_295 */
extern void T68f1422(TC* ac, T0* C);
/* ET_AST_FACTORY.new_extended_attribute */
extern T0* T65f183(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_EXTENDED_ATTRIBUTE.set_first_note */
extern void T703f97(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_clients */
extern void T703f96(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_rescue_clause */
extern void T703f95(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_postconditions */
extern void T703f94(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_compound */
extern void T703f93(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_locals */
extern void T703f92(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_preconditions */
extern void T703f91(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_obsolete_message */
extern void T703f90(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_assigner */
extern void T703f89(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.make */
extern T0* T703c84(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.make */
extern void T703f84p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.tokens */
extern T0* T703s41(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_294 */
extern void T68f1421(TC* ac, T0* C);
/* ET_AST_FACTORY.new_attribute */
extern T0* T65f182(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ATTRIBUTE.set_clients */
extern void T702f85(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_assigner */
extern void T702f84(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.make */
extern T0* T702c79(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ATTRIBUTE.tokens */
extern T0* T702s42(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_293 */
extern void T68f1420(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_292 */
extern void T68f1419(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.register_procedure_synonym */
extern void T68f2101(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].back */
extern void T258f21(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_back */
extern void T258f28(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].add_traversing_cursor */
extern void T258f29(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T1164f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_traversing_cursor */
extern void T258f30(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_position */
extern void T1164f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left */
extern void T258f20(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left_cursor */
extern void T258f27(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put */
extern void T258f31(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_right */
extern void T258f34(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_right */
extern void T258f33(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].force */
extern void T1165s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].fill_with */
extern void T1163f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].extend */
extern void T1163f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put_last */
extern void T258f32(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].index */
extern T6 T1164f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_index */
extern T6 T258f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].resize */
extern void T258f24(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].aliased_resized_area */
extern T0* T1165s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_PROCEDURE].aliased_resized_area */
extern T0* T1163f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_capacity */
extern T6 T258f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].extendible */
extern T1 T258f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].forth */
extern void T258f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_forth */
extern void T258f26(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].before */
extern T1 T258f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_before */
extern T1 T258f6(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].before */
extern T1 T1164f8(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_frozen_keyword */
extern void T714f93(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_frozen_keyword */
extern void T713f84(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_frozen_keyword */
extern void T712f87(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_frozen_keyword */
extern void T711f85(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_procedure_synonym */
extern T0* T68f972(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.new_synonym */
extern T0* T714f47(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_builtin_code */
extern void T714f105(TC* ac, T0* C, T8 a1, T8 a2);
/* ET_EXTERNAL_PROCEDURE.is_builtin */
extern T1 T714f57(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_synonym */
extern void T714f104(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_inline_separate_arguments */
extern void T714f92(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_iteration_components */
extern void T714f91(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_object_tests */
extern void T714f90(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_feature_clause */
extern void T714f103(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_semicolon */
extern void T714f102(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_end_keyword */
extern void T714f101(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.new_synonym */
extern T0* T713f45(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_synonym */
extern void T713f95(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_inline_separate_arguments */
extern void T713f83(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_iteration_components */
extern void T713f82(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_object_tests */
extern void T713f81(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_feature_clause */
extern void T713f94(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_semicolon */
extern void T713f93(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_end_keyword */
extern void T713f92(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_deferred_keyword */
extern void T713f91(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.new_synonym */
extern T0* T712f44(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_synonym */
extern void T712f101(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_inline_separate_arguments */
extern void T712f86(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_iteration_components */
extern void T712f85(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_object_tests */
extern void T712f84(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_feature_clause */
extern void T712f100(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_semicolon */
extern void T712f99(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_end_keyword */
extern void T712f98(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.new_synonym */
extern T0* T711f48(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_synonym */
extern void T711f98(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_inline_separate_arguments */
extern void T711f84(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_iteration_components */
extern void T711f83(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_object_tests */
extern void T711f82(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_feature_clause */
extern void T711f97(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_semicolon */
extern void T711f96(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_end_keyword */
extern void T711f95(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_291 */
extern void T68f1418(TC* ac, T0* C);
/* ET_AST_FACTORY.new_extended_feature_name_comma */
extern T0* T65f180(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_290 */
extern void T68f1417(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_289 */
extern void T68f1416(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_288 */
extern void T68f1415(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.register_procedure */
extern void T68f2100(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].finish */
extern void T258f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_finish */
extern void T258f25(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].off */
extern T1 T1164f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].after */
extern T1 T1164f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_last */
extern void T258f17(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_287 */
extern void T68f1414(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_286 */
extern void T68f1413(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.register_query_synonym */
extern void T68f2099(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].back */
extern void T257f21(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_back */
extern void T257f28(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].add_traversing_cursor */
extern void T257f29(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_next_cursor */
extern void T1161f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_traversing_cursor */
extern void T257f30(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_position */
extern void T1161f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left */
extern void T257f20(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left_cursor */
extern void T257f27(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_QUERY].put */
extern void T257f31(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_right */
extern void T257f34(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_right */
extern void T257f33(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_QUERY].force */
extern void T1162s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_QUERY].fill_with */
extern void T1160f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUERY].extend */
extern void T1160f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].put_last */
extern void T257f32(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].index */
extern T6 T1161f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_index */
extern T6 T257f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].resize */
extern void T257f24(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].aliased_resized_area */
extern T0* T1162s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_QUERY].aliased_resized_area */
extern T0* T1160f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_capacity */
extern T6 T257f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].extendible */
extern T1 T257f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].forth */
extern void T257f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_forth */
extern void T257f26(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].before */
extern T1 T257f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_before */
extern T1 T257f6(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].before */
extern T1 T1161f8(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_frozen_keyword */
extern void T710f95(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_frozen_keyword */
extern void T708f86(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_frozen_keyword */
extern void T707f89(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_frozen_keyword */
extern void T706f87(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_frozen_keyword */
extern void T705f87(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_frozen_keyword */
extern void T704f86(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_frozen_keyword */
extern void T703f88(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_frozen_keyword */
extern void T702f83(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_query_synonym */
extern T0* T68f971(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.new_synonym */
extern T0* T710f41(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_builtin_code */
extern void T710f108(TC* ac, T0* C, T8 a1, T8 a2);
/* ET_EXTERNAL_FUNCTION.set_synonym */
extern void T710f107(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_inline_separate_arguments */
extern void T710f94(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_iteration_components */
extern void T710f93(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_object_tests */
extern void T710f92(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_feature_clause */
extern void T710f106(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_semicolon */
extern void T710f105(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_end_keyword */
extern void T710f104(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.new_synonym */
extern T0* T708f37(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_synonym */
extern void T708f98(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_inline_separate_arguments */
extern void T708f85(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_iteration_components */
extern void T708f84(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_object_tests */
extern void T708f83(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_feature_clause */
extern void T708f97(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_semicolon */
extern void T708f96(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_end_keyword */
extern void T708f95(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_deferred_keyword */
extern void T708f94(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.new_synonym */
extern T0* T707f49(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_synonym */
extern void T707f104(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_inline_separate_arguments */
extern void T707f88(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_iteration_components */
extern void T707f87(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_object_tests */
extern void T707f86(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_feature_clause */
extern void T707f103(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_semicolon */
extern void T707f102(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_end_keyword */
extern void T707f101(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.new_synonym */
extern T0* T706f39(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_synonym */
extern void T706f101(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_inline_separate_arguments */
extern void T706f86(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_iteration_components */
extern void T706f85(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_object_tests */
extern void T706f84(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_feature_clause */
extern void T706f100(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_semicolon */
extern void T706f99(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_end_keyword */
extern void T706f98(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.new_synonym */
extern T0* T705f46(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_synonym */
extern void T705f96(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_constant */
extern void T705f95(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_inline_separate_arguments */
extern void T705f86(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_iteration_components */
extern void T705f85(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_object_tests */
extern void T705f84(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_note */
extern void T705f94(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_feature_clause */
extern void T705f93(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_semicolon */
extern void T705f92(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_unique_keyword */
extern void T705f91(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_is_keyword */
extern void T705f90(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.new_synonym */
extern T0* T704f33(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_synonym */
extern void T704f93(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_inline_separate_arguments */
extern void T704f85(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_iteration_components */
extern void T704f84(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_object_tests */
extern void T704f83(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_note */
extern void T704f92(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_feature_clause */
extern void T704f91(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_semicolon */
extern void T704f90(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_is_keyword */
extern void T704f89(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.new_synonym */
extern T0* T703f38(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_synonym */
extern void T703f101(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_inline_separate_arguments */
extern void T703f87(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_iteration_components */
extern void T703f86(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_object_tests */
extern void T703f85(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_feature_clause */
extern void T703f100(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_semicolon */
extern void T703f99(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_end_keyword */
extern void T703f98(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.new_synonym */
extern T0* T702f31(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_synonym */
extern void T702f89(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_inline_separate_arguments */
extern void T702f82(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_iteration_components */
extern void T702f81(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_object_tests */
extern void T702f80(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_note */
extern void T702f88(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_feature_clause */
extern void T702f87(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_semicolon */
extern void T702f86(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_285 */
extern void T68f1412(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_284 */
extern void T68f1411(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_283 */
extern void T68f1410(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_282 */
extern void T68f1409(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.register_query */
extern void T68f2098(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].finish */
extern void T257f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_finish */
extern void T257f25(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].off */
extern T1 T1161f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].after */
extern T1 T1161f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].force_last */
extern void T257f17(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_281 */
extern void T68f1408(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_280 */
extern void T68f1407(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_279 */
extern void T68f1406(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_278 */
extern void T68f1405(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_277 */
extern void T68f1404(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_276 */
extern void T68f1403(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].force */
extern void T477s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].fill_with */
extern void T478f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].extend */
extern void T478f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T477s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T478f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_clause */
extern T0* T65f179(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CLAUSE.make */
extern T0* T268c4(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.feature_keyword */
extern T0* T81s669(TC* ac);
/* ET_KEYWORD.make_feature */
extern T0* T191c88(TC* ac);
/* ET_FEATURE_CLAUSE.tokens */
extern T0* T268s3(TC* ac);
/* ET_EIFFEL_PARSER.new_any_clients */
extern T0* T68f970(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_client */
extern T0* T68f968(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_client */
extern T0* T65f341(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.current_system */
extern T0* T68f1031(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_275 */
extern void T68f1402(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_274 */
extern void T68f1401(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_273 */
extern void T68f1400(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_272 */
extern void T68f1399(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].force */
extern void T479s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].fill_with */
extern void T481f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].extend */
extern void T481f10(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CLAUSE_LIST.put_first */
extern void T480f5(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].force */
extern void T1595s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].fill_with */
extern void T1594f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].extend */
extern void T1594f7(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CLAUSE_LIST.fixed_array */
extern T0* T480f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].default_create */
extern T0* T1595c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_271 */
extern void T68f1398(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T479s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T481f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_clauses */
extern T0* T65f178(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CLAUSE_LIST.make_with_capacity */
extern T0* T480c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].make */
extern T0* T1595s1(TC* ac, T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE].make_empty */
extern T0* T1594c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_270 */
extern void T68f1397(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_features */
extern void T68f2097(TC* ac, T0* C);
extern T1 T68f2097ot1(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].wipe_out */
extern void T258f16(TC* ac, T0* C);
/* SPECIAL [ET_PROCEDURE].keep_head */
extern void T1163f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_PROCEDURE].set_count */
extern void T1163f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_all_cursors_after */
extern void T258f23(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_after */
extern void T1164f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].wipe_out */
extern void T257f16(TC* ac, T0* C);
/* SPECIAL [ET_QUERY].keep_head */
extern void T1160f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_QUERY].set_count */
extern void T1160f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_all_cursors_after */
extern void T257f23(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_after */
extern void T1161f12(TC* ac, T0* C);
/* ET_CLASS.set_procedures */
extern void T70f282(TC* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.set_declared_count */
extern void T770f10(TC* ac, T0* C, T6 a1);
/* ET_PROCEDURE_LIST.put_first */
extern void T770f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].item */
extern T0* T258f7(TC* ac, T0* C, T6 a1);
/* ET_CLASS.set_queries */
extern void T70f281(TC* ac, T0* C, T0* a1);
/* ET_QUERY_LIST.set_declared_attribute_count */
extern void T769f14(TC* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.set_attribute_count */
extern void T769f13(TC* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.set_declared_count */
extern void T769f12(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_value */
extern void T675f73(TC* ac, T0* C, T11 a1);
/* NATURAL_64.out */
extern T0* T11f19(TC* ac, volatile T11* C);
/* STRING_8.append_natural_64 */
extern void T17f87(TC* ac, T0* C, T11 a1);
/* ET_CLASS.register_feature */
extern void T70f280(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_id */
extern void T714f106(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_version */
extern void T714f112(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_first_seed */
extern void T714f111(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_id */
extern void T713f96(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_version */
extern void T713f102(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_first_seed */
extern void T713f101(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_id */
extern void T712f102(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_version */
extern void T712f108(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_first_seed */
extern void T712f107(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_id */
extern void T711f99(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_version */
extern void T711f105(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_first_seed */
extern void T711f104(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_id */
extern void T710f109(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_version */
extern void T710f115(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_first_seed */
extern void T710f114(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_id */
extern void T708f99(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_version */
extern void T708f105(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_first_seed */
extern void T708f104(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_id */
extern void T707f105(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_version */
extern void T707f111(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_first_seed */
extern void T707f110(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_id */
extern void T706f102(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_version */
extern void T706f108(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_first_seed */
extern void T706f107(TC* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_id */
extern void T705f97(TC* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_version */
extern void T705f103(TC* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_seed */
extern void T705f102(TC* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_id */
extern void T704f94(TC* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_version */
extern void T704f100(TC* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_seed */
extern void T704f99(TC* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_id */
extern void T703f102(TC* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_version */
extern void T703f108(TC* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_seed */
extern void T703f107(TC* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_id */
extern void T702f90(TC* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_version */
extern void T702f96(TC* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_first_seed */
extern void T702f95(TC* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.put_first */
extern void T769f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].item */
extern T0* T257f7(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_269 */
extern void T68f1396(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_268 */
extern void T68f1395(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_267 */
extern void T68f1394(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].force */
extern void T643s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_ITEM].fill_with */
extern void T645f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_ITEM].extend */
extern void T645f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T643s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T645f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_comma */
extern T0* T65f177(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_266 */
extern void T68f1393(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].force */
extern void T646s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_LIST].fill_with */
extern void T648f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_LIST].extend */
extern void T648f10(TC* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.put_first */
extern void T1086f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].force */
extern void T1665s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].fill_with */
extern void T1664f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].extend */
extern void T1664f7(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_265 */
extern void T68f1392(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T646s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T648f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_types */
extern T0* T65f176(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACED_TYPE_LIST.set_left_brace */
extern void T1086f11(TC* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern T0* T1086c9(TC* ac, T6 a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern void T1086f9p1(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_264 */
extern void T68f1391(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_263 */
extern void T68f1390(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_262 */
extern void T68f1389(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_261 */
extern void T68f1388(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].force */
extern void T426s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE].fill_with */
extern void T428f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE].extend */
extern void T428f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T426s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T428f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_procedure */
extern T0* T65f175(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_PROCEDURE.make */
extern T0* T700c9(TC* ac, T0* a1, T0* a2);
/* ET_CONVERT_PROCEDURE.tokens */
extern T0* T700s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_260 */
extern void T68f1387(TC* ac, T0* C);
/* ET_AST_FACTORY.new_convert_function */
extern T0* T65f174(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FUNCTION.make */
extern T0* T699c8(TC* ac, T0* a1, T0* a2);
/* ET_CONVERT_FUNCTION.tokens */
extern T0* T699s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_259 */
extern void T68f1386(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].force */
extern void T429s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].fill_with */
extern void T431f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].extend */
extern void T431f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T429s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T431f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_feature_comma */
extern T0* T65f173(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_258 */
extern void T68f1385(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].force */
extern void T432s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].fill_with */
extern void T434f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].extend */
extern void T434f10(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_FEATURE_LIST.put_first */
extern void T433f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].force */
extern void T1589s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].fill_with */
extern void T1587f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].extend */
extern void T1587f7(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_FEATURE_LIST.fixed_array */
extern T0* T433f7(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T1589c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_257 */
extern void T68f1384(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T432s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T434f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_features */
extern T0* T65f172(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern T0* T433c8(TC* ac, T6 a1);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern void T433f8p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].make */
extern T0* T1589s1(TC* ac, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].make_empty */
extern T0* T1587c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.convert_keyword */
extern T0* T81s668(TC* ac);
/* ET_KEYWORD.make_convert */
extern T0* T191c87(TC* ac);
/* ET_CONVERT_FEATURE_LIST.tokens */
extern T0* T433s6(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_256 */
extern void T68f1383(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_255 */
extern void T68f1382(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_254 */
extern void T68f1381(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_253 */
extern void T68f1380(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_252 */
extern void T68f1379(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_251 */
extern void T68f1378(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].force */
extern void T487s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].fill_with */
extern void T489f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].extend */
extern void T489f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T487s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T489f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_name_comma */
extern T0* T65f169(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_250 */
extern void T68f1377(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].force */
extern void T441s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR].fill_with */
extern void T442f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR].extend */
extern void T442f10(TC* ac, T0* C, T0* a1);
/* ET_CREATOR.put_first */
extern void T82f17(TC* ac, T0* C, T0* a1);
/* ET_CREATOR.fixed_array */
extern T0* T82f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_249 */
extern void T68f1376(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].aliased_resized_area */
extern T0* T441s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATOR].aliased_resized_area */
extern T0* T442f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_creator */
extern T0* T65f171(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CREATOR.make_with_capacity */
extern T0* T82c16(TC* ac, T0* a1, T6 a2);
/* ET_CREATOR.make_feature_name_list_with_capacity */
extern void T82f18(TC* ac, T0* C, T6 a1);
/* ET_CREATOR.tokens */
extern T0* T82s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_248 */
extern void T68f1375(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_247 */
extern void T68f1374(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_246 */
extern void T68f1373(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_245 */
extern void T68f1372(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_244 */
extern void T68f1371(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_243 */
extern void T68f1370(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_242 */
extern void T68f1369(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_241 */
extern void T68f1368(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_240 */
extern void T68f1367(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_239 */
extern void T68f1366(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_238 */
extern void T68f1365(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_237 */
extern void T68f1364(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_236 */
extern void T68f1363(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_235 */
extern void T68f1362(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].force */
extern void T443s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR_LIST].fill_with */
extern void T444f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR_LIST].extend */
extern void T444f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T443s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T444f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_234 */
extern void T68f1361(TC* ac, T0* C);
/* ET_CREATOR_LIST.put_first */
extern void T80f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].force */
extern void T1455s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CREATOR].fill_with */
extern void T1454f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].extend */
extern void T1454f7(TC* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.fixed_array */
extern T0* T80f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].default_create */
extern T0* T1455c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_233 */
extern void T68f1360(TC* ac, T0* C);
/* ET_AST_FACTORY.new_creators */
extern T0* T65f170(TC* ac, T0* C, T6 a1);
/* ET_CREATOR_LIST.make_with_capacity */
extern T0* T80c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].make */
extern T0* T1455s1(TC* ac, T6 a1);
/* SPECIAL [ET_CREATOR].make_empty */
extern T0* T1454c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_232 */
extern void T68f1359(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_231 */
extern void T68f1358(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_230 */
extern void T68f1357(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_229 */
extern void T68f1356(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].force */
extern void T541s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].fill_with */
extern void T542f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].extend */
extern void T542f10(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.put_first */
extern void T195f9(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.fixed_array */
extern T0* T195f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_228 */
extern void T68f1355(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T541s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T542f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_keyword_feature_name_list */
extern T0* T65f168(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern T0* T195c8(TC* ac, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern void T195f8p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.redefine_keyword */
extern T0* T81s678(TC* ac);
/* ET_KEYWORD.make_redefine */
extern T0* T191c97(TC* ac);
/* ET_KEYWORD_FEATURE_NAME_LIST.tokens */
extern T0* T195s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_227 */
extern void T68f1354(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_226 */
extern void T68f1353(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_225 */
extern void T68f1352(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_224 */
extern void T68f1351(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_223 */
extern void T68f1350(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_222 */
extern void T68f1349(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_221 */
extern void T68f1348(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_220 */
extern void T68f1347(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_219 */
extern void T68f1346(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_218 */
extern void T68f1345(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_217 */
extern void T68f1344(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_216 */
extern void T68f1343(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_215 */
extern void T68f1342(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_214 */
extern void T68f1341(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_213 */
extern void T68f1340(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_212 */
extern void T68f1339(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_211 */
extern void T68f1338(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].force */
extern void T400s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLIENTS].fill_with */
extern void T401f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLIENTS].extend */
extern void T401f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T400s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T401f4(TC* ac, T0* C, T6 a1);
/* ET_CLIENTS.put_first */
extern void T267f18(TC* ac, T0* C, T0* a1);
/* ET_CLIENTS.fixed_array */
extern T0* T267f6(TC* ac, T0* C);
/* ET_AST_FACTORY.new_clients */
extern T0* T65f167(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CLIENTS.set_left_brace */
extern void T267f19(TC* ac, T0* C, T0* a1);
/* ET_CLIENTS.make_with_capacity */
extern T0* T267c20(TC* ac, T6 a1);
/* ET_CLIENTS.make_with_capacity */
extern void T267f20p1(TC* ac, T0* C, T6 a1);
/* ET_CLIENTS.tokens */
extern T0* T267s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_210 */
extern void T68f1337(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_209 */
extern void T68f1336(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_208 */
extern void T68f1335(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].force */
extern void T398s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLIENT_ITEM].fill_with */
extern void T399f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLIENT_ITEM].extend */
extern void T399f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T398s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T399f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_client_comma */
extern T0* T68f969(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_client_comma */
extern T0* T65f342(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_207 */
extern void T68f1334(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_206 */
extern void T68f1333(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_205 */
extern void T68f1332(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_204 */
extern void T68f1331(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_203 */
extern void T68f1330(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_202 */
extern void T68f1329(TC* ac, T0* C);
/* ET_AST_FACTORY.new_none_clients */
extern T0* T65f166(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLIENTS.make */
extern T0* T267c17(TC* ac);
/* ET_CLIENTS.make */
extern void T267f17p1(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201 */
extern void T68f1328(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_1_200 */
extern void T68f1106(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_200 */
extern void T68f1327(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_199 */
extern void T68f1326(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].force */
extern void T482s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_EXPORT].fill_with */
extern void T484f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_EXPORT].extend */
extern void T484f10(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.put_first */
extern void T483f11(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.fixed_array */
extern T0* T483f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_198 */
extern void T68f1325(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T482s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T484f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_export */
extern T0* T65f164(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_with_capacity */
extern T0* T483c10(TC* ac, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_feature_name_list_with_capacity */
extern void T483f12(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_197 */
extern void T68f1324(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_196 */
extern void T68f1323(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].force */
extern void T460s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT].fill_with */
extern void T462f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT].extend */
extern void T462f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].aliased_resized_area */
extern T0* T460s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPORT].aliased_resized_area */
extern T0* T462f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_null_export */
extern T0* T65f165(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_195 */
extern void T68f1322(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_194 */
extern void T68f1321(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_193 */
extern void T68f1320(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_192 */
extern void T68f1319(TC* ac, T0* C);
/* ET_AST_FACTORY.new_all_export */
extern T0* T65f163(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ALL_EXPORT.make */
extern T0* T697c8(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.all_keyword */
extern T0* T81s901(TC* ac);
/* ET_KEYWORD.make_all */
extern T0* T191c52(TC* ac);
/* ET_ALL_EXPORT.tokens */
extern T0* T697s3(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_191 */
extern void T68f1318(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].force */
extern void T463s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT_LIST].fill_with */
extern void T464f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT_LIST].extend */
extern void T464f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T463s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T464f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_190 */
extern void T68f1317(TC* ac, T0* C);
/* ET_EXPORT_LIST.put_first */
extern void T194f8(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].force */
extern void T1556s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EXPORT].fill_with */
extern void T1555f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].extend */
extern void T1555f7(TC* ac, T0* C, T0* a1);
/* ET_EXPORT_LIST.fixed_array */
extern T0* T194f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].default_create */
extern T0* T1556c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_189 */
extern void T68f1316(TC* ac, T0* C);
/* ET_AST_FACTORY.new_exports */
extern T0* T65f162(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_EXPORT_LIST.make_with_capacity */
extern T0* T194c7(TC* ac, T6 a1);
/* ET_EXPORT_LIST.make_with_capacity */
extern void T194f7p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].make */
extern T0* T1556s1(TC* ac, T6 a1);
/* SPECIAL [ET_EXPORT].make_empty */
extern T0* T1555c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.export_keyword */
extern T0* T81s664(TC* ac);
/* ET_KEYWORD.make_export */
extern T0* T191c83(TC* ac);
/* ET_EXPORT_LIST.tokens */
extern T0* T194s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_188 */
extern void T68f1315(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_187 */
extern void T68f1314(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_186 */
extern void T68f1313(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_185 */
extern void T68f1312(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_184 */
extern void T68f1311(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_183 */
extern void T68f1310(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].force */
extern void T618s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_ITEM].fill_with */
extern void T620f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_ITEM].extend */
extern void T620f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T618s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T620f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_rename_comma */
extern T0* T65f161(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_RENAME.make */
extern T0* T696c6(TC* ac, T0* a1, T0* a2);
/* ET_RENAME.tokens */
extern T0* T696s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_182 */
extern void T68f1309(TC* ac, T0* C);
/* ET_AST_FACTORY.new_rename */
extern T0* T65f160(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_181 */
extern void T68f1308(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].force */
extern void T621s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_LIST].fill_with */
extern void T622f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_LIST].extend */
extern void T622f10(TC* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.put_first */
extern void T193f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].force */
extern void T1553s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].fill_with */
extern void T1552f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].extend */
extern void T1552f7(TC* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.fixed_array */
extern T0* T193f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].default_create */
extern T0* T1553c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_180 */
extern void T68f1307(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T621s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T622f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_renames */
extern T0* T65f159(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_RENAME_LIST.make_with_capacity */
extern T0* T193c8(TC* ac, T6 a1);
/* ET_RENAME_LIST.make_with_capacity */
extern void T193f8p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].make */
extern T0* T1553s1(TC* ac, T6 a1);
/* SPECIAL [ET_RENAME_ITEM].make_empty */
extern T0* T1552c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.rename_keyword */
extern T0* T81s665(TC* ac);
/* ET_KEYWORD.make_rename */
extern T0* T191c84(TC* ac);
/* ET_RENAME_LIST.tokens */
extern T0* T193s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_179 */
extern void T68f1306(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_178 */
extern void T68f1305(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_177 */
extern void T68f1304(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_176 */
extern void T68f1303(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_175 */
extern void T68f1302(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].force */
extern void T596s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_ITEM].fill_with */
extern void T597f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_ITEM].extend */
extern void T597f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T596s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T597f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parent_semicolon */
extern T0* T65f158(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_174 */
extern void T68f1301(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].force */
extern void T598s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_LIST].fill_with */
extern void T599f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_LIST].extend */
extern void T599f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_173 */
extern void T68f1300(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_172 */
extern void T68f1299(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T598s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T599f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parents */
extern T0* T65f157(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_171 */
extern void T68f1298(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_170 */
extern void T68f1297(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].force */
extern void T591s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT].fill_with */
extern void T592f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT].extend */
extern void T592f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].aliased_resized_area */
extern T0* T591s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT].aliased_resized_area */
extern T0* T592f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_parent */
extern T0* T68f967(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_AST_FACTORY.new_parent */
extern T0* T65f340(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_CLASS.has_formal_parameter */
extern T1 T70f57(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_parameter */
extern T1 T506f13(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_169 */
extern void T68f1296(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_168 */
extern void T68f1295(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_167 */
extern void T68f1294(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_166 */
extern void T68f1293(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_165 */
extern void T68f1292(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_164 */
extern void T68f1291(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_163 */
extern void T68f1290(TC* ac, T0* C);
/* ET_PARENT_LIST.set_clients_clause */
extern void T181f13(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_162 */
extern void T68f1289(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_161 */
extern void T68f1288(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].force */
extern void T593s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].fill_with */
extern void T595f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].extend */
extern void T595f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].aliased_resized_area */
extern T0* T593s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].aliased_resized_area */
extern T0* T595f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_160 */
extern void T68f1287(TC* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.put_first */
extern void T594f7(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].force */
extern void T1613s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].fill_with */
extern void T1612f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].extend */
extern void T1612f7(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CLAUSE_LIST.fixed_array */
extern T0* T594f4(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].default_create */
extern T0* T1613c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_159 */
extern void T68f1286(TC* ac, T0* C);
/* ET_AST_FACTORY.new_parent_clauses */
extern T0* T65f156(TC* ac, T0* C, T6 a1);
/* ET_PARENT_CLAUSE_LIST.make_with_capacity */
extern T0* T594c6(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].make */
extern T0* T1613s1(TC* ac, T6 a1);
/* SPECIAL [ET_PARENT_LIST].make_empty */
extern T0* T1612c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_158 */
extern void T68f1285(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_157 */
extern void T68f1284(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_156 */
extern void T68f1283(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].force */
extern void T585s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_OBSOLETE].fill_with */
extern void T587f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_OBSOLETE].extend */
extern void T587f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T585s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T587f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_obsolete_message */
extern T0* T65f155(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_155 */
extern void T68f1282(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_154 */
extern void T68f1281(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].force */
extern void T411s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T413f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].extend */
extern void T413f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T411s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T413f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter_semicolon */
extern T0* T65f154(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter */
extern T0* T65f152(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.make */
extern T0* T694c6(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_153 */
extern void T68f1280(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_152 */
extern void T68f1279(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].force */
extern void T414s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].fill_with */
extern void T416f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].extend */
extern void T416f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.add_to_constraint_actual_parameter_list */
extern void T68f2096(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.put_first */
extern void T415f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].force */
extern void T1586s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T1584f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].extend */
extern void T1584f7(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.fixed_array */
extern T0* T415f8(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T1586c2(TC* ac);
/* ET_AST_FACTORY.new_constraint_labeled_comma_actual_parameter */
extern T0* T65f153(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T695c6(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_NAMED_TYPE.type */
extern T0* T693f4(TC* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.type */
extern T0* T1032f5(TC* ac, T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T695f3(TC* ac, T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.type */
extern T0* T694f3(TC* ac, T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.first */
extern T0* T415f7(TC* ac, T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T415f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_151 */
extern void T68f1278(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_150 */
extern void T68f1277(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_149 */
extern void T68f1276(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T414s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T416f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_actual_parameters */
extern T0* T65f150(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T415f14(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T415c12(TC* ac, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T415f12p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T1586s1(TC* ac, T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T1584c4(TC* ac, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T415s6(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_148 */
extern void T68f1275(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_147 */
extern void T68f1274(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_146 */
extern void T68f1273(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_145 */
extern void T68f1272(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_144 */
extern void T68f1271(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_143 */
extern void T68f1270(TC* ac, T0* C);
/* ET_AST_FACTORY.new_constraint_actual_parameter_comma */
extern T0* T65f151(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_142 */
extern void T68f1269(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_constraint_named_type */
extern T0* T68f966(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_constraint_named_type */
extern T0* T65f337(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.make */
extern T0* T693c7(TC* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_generic_named_type */
extern T0* T65f336(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.make */
extern T0* T1032c8(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_141 */
extern void T68f1268(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_140 */
extern void T68f1267(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_139 */
extern void T68f1266(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_138 */
extern void T68f1265(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_137 */
extern void T68f1264(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_136 */
extern void T68f1263(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_135 */
extern void T68f1262(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].force */
extern void T423s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].fill_with */
extern void T425f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].extend */
extern void T425f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T423s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T425f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_134 */
extern void T68f1261(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_133 */
extern void T68f1260(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_132 */
extern void T68f1259(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_131 */
extern void T68f1258(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_130 */
extern void T68f1257(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_129 */
extern void T68f1256(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_128 */
extern void T68f1255(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_127 */
extern void T68f1254(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_126 */
extern void T68f1253(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_125 */
extern void T68f1252(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_124 */
extern void T68f1251(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_123 */
extern void T68f1250(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_122 */
extern void T68f1249(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_121 */
extern void T68f1248(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_120 */
extern void T68f1247(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_119 */
extern void T68f1246(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_118 */
extern void T68f1245(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_117 */
extern void T68f1244(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_116 */
extern void T68f1243(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_115 */
extern void T68f1242(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_114 */
extern void T68f1241(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_113 */
extern void T68f1240(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_112 */
extern void T68f1239(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_111 */
extern void T68f1238(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_110 */
extern void T68f1237(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_109 */
extern void T68f1236(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_108 */
extern void T68f1235(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_107 */
extern void T68f1234(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_106 */
extern void T68f1233(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_105 */
extern void T68f1232(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_104 */
extern void T68f1231(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_103 */
extern void T68f1230(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_102 */
extern void T68f1229(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_101 */
extern void T68f1228(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_100 */
extern void T68f1227(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_99 */
extern void T68f1226(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_98 */
extern void T68f1225(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_97 */
extern void T68f1224(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_96 */
extern void T68f1223(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_95 */
extern void T68f1222(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_94 */
extern void T68f1221(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_93 */
extern void T68f1220(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_92 */
extern void T68f1219(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_91 */
extern void T68f1218(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].force */
extern void T417s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].fill_with */
extern void T419f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].extend */
extern void T419f10(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.put_first */
extern void T418f13(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.fixed_array */
extern T0* T418f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_90 */
extern void T68f1217(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T417s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T419f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_creator */
extern T0* T65f148(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern T0* T418c12(TC* ac, T6 a1);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern void T418f12p1(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.tokens */
extern T0* T418s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_89 */
extern void T68f1216(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_88 */
extern void T68f1215(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_87 */
extern void T68f1214(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_86 */
extern void T68f1213(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_85 */
extern void T68f1212(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_84 */
extern void T68f1211(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_83 */
extern void T68f1210(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST].force */
extern void T420s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].fill_with */
extern void T422f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].extend */
extern void T422f10(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_RENAME_LIST.put_first */
extern void T421f13(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_RENAME_LIST.fixed_array */
extern T0* T421f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_82 */
extern void T68f1209(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST].aliased_resized_area */
extern T0* T420s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].aliased_resized_area */
extern T0* T422f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_renames */
extern T0* T65f147(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_RENAME_LIST.make_with_capacity */
extern T0* T421c12(TC* ac, T6 a1);
/* ET_CONSTRAINT_RENAME_LIST.make_with_capacity */
extern void T421f12p1(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_RENAME_LIST.make_with_capacity */
extern void T421f12p0(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_RENAME_LIST.tokens */
extern T0* T421s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_81 */
extern void T68f1208(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_80 */
extern void T68f1207(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_79 */
extern void T68f1206(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_78 */
extern void T68f1205(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_77 */
extern void T68f1204(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM].force */
extern void T637s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].fill_with */
extern void T639f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].extend */
extern void T639f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM].aliased_resized_area */
extern T0* T637s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].aliased_resized_area */
extern T0* T639f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_constraint_comma */
extern T0* T65f146(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_76 */
extern void T68f1203(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST].force */
extern void T640s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].fill_with */
extern void T642f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].extend */
extern void T642f10(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CONSTRAINT_LIST.put_first */
extern void T641f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM].force */
extern void T1616s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM].fill_with */
extern void T1615f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM].extend */
extern void T1615f7(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CONSTRAINT_LIST.fixed_array */
extern T0* T641f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM].default_create */
extern T0* T1616c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_75 */
extern void T68f1202(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST].aliased_resized_area */
extern T0* T640s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].aliased_resized_area */
extern T0* T642f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_constraint_list */
extern T0* T65f145(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_TYPE_CONSTRAINT_LIST.set_left_brace */
extern void T641f13(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CONSTRAINT_LIST.make_with_capacity */
extern T0* T641c11(TC* ac, T6 a1);
/* ET_TYPE_CONSTRAINT_LIST.make_with_capacity */
extern void T641f11p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM].make */
extern T0* T1616s1(TC* ac, T6 a1);
/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM].make_empty */
extern T0* T1615c4(TC* ac, T6 a1);
/* ET_TYPE_CONSTRAINT_LIST.tokens */
extern T0* T641s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_74 */
extern void T68f1201(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_73 */
extern void T68f1200(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_72 */
extern void T68f1199(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT].force */
extern void T634s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].fill_with */
extern void T636f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].extend */
extern void T636f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT].aliased_resized_area */
extern T0* T634s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].aliased_resized_area */
extern T0* T636f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.register_constraint */
extern void T68f2095(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].force_last */
extern void T259f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].resize */
extern void T259f15(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_capacity */
extern T6 T259f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].extendible */
extern T1 T259f7(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_rename_constraint */
extern T0* T65f144(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TYPE_RENAME_CONSTRAINT.make */
extern T0* T692c8(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_constraint */
extern T0* T68f965(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_71 */
extern void T68f1198(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_70 */
extern void T68f1197(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].force */
extern void T499s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].fill_with */
extern void T501f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].extend */
extern void T501f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T499s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T501f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constrained_formal_parameter */
extern T0* T65f143(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_type_mark */
extern void T691f84(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make */
extern T0* T691c83(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make_unconstrained */
extern void T691f86(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.arrow_symbol */
extern T0* T81s641(TC* ac);
/* ET_SYMBOL.make_arrow */
extern T0* T282c116(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_69 */
extern void T68f1196(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_68 */
extern void T68f1195(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_67 */
extern void T68f1194(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_66 */
extern void T68f1193(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_65 */
extern void T68f1192(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_64 */
extern void T68f1191(TC* ac, T0* C);
/* ET_AST_FACTORY.new_formal_parameter */
extern T0* T65f142(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.set_type_mark */
extern void T500f85(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.make */
extern T0* T500c84(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_63 */
extern void T68f1190(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_62 */
extern void T68f1189(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_61 */
extern void T68f1188(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].force */
extern void T502s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].fill_with */
extern void T504f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].extend */
extern void T504f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T502s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T504f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_parameter_comma */
extern T0* T65f141(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_60 */
extern void T68f1187(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].force */
extern void T505s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].fill_with */
extern void T507f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].extend */
extern void T507f10(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T506f29(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.set_index */
extern void T500f86(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_index */
extern void T691f85(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.capacity */
extern T6 T506f17(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T506f29p1(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].force */
extern void T1600s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].fill_with */
extern void T1599f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].extend */
extern void T1599f9(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.fixed_array */
extern T0* T506f16(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T1600c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_59 */
extern void T68f1186(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T505s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T507f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_parameters */
extern T0* T65f140(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_PARAMETER_LIST.set_left_bracket */
extern void T506f30(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern T0* T506c27(TC* ac, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern void T506f27p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T1600s1(TC* ac, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].make_empty */
extern T0* T1599c4(TC* ac, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.tokens */
extern T0* T506s15(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_58 */
extern void T68f1185(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_57 */
extern void T68f1184(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_formal_parameters */
extern void T68f2092(TC* ac, T0* C, T0* a1);
extern T1 T68f2092ot1(TC* ac, T0* a1);
extern T1 T68f2092ot2(TC* ac, T0* a1);
extern T1 T68f2092ot3(TC* ac, T0* a1);
extern T1 T68f2092ot4(TC* ac, T0* a1);
extern T1 T68f2092ot5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].wipe_out */
extern void T259f11(TC* ac, T0* C);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].keep_head */
extern void T425f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].set_count */
extern void T425f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].move_all_cursors_after */
extern void T259f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_next_cursor */
extern void T1166f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_after */
extern void T1166f6(TC* ac, T0* C);
/* ET_CLASS.set_formal_parameters */
extern void T70f279(TC* ac, T0* C, T0* a1);
extern T1 T70f279ot1(TC* ac, T0* a1);
/* ET_TYPE_CONSTRAINT_LIST.put */
extern void T641f15(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_TYPE_CONSTRAINT_LIST.remove */
extern void T641f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM].keep_head */
extern void T1616s4(TC* ac, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM].keep_head */
extern void T1615f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM].set_count */
extern void T1615f9(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint */
extern void T691f87(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.remove */
extern void T506f28(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T1600s3(TC* ac, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T1599f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].set_count */
extern void T1599f8(TC* ac, T0* C, T6 a1);
/* ET_TYPE_RENAME_CONSTRAINT.set_type */
extern void T692f9(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint */
extern T0* T722f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T693f3(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_named_type */
extern T0* T68f1055(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T68f1055ot1(TC* ac, T0* a1);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T1032f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_generic_named_type */
extern T0* T68f1056(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T68f1056ot1(TC* ac, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.resolved_syntactical_constraint */
extern T0* T415f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_actual_parameter_list */
extern T0* T68f1058(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T722f51(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T693f6(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1032f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T725f51(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T724f54(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint_with_type */
extern T0* T199f48(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T695f5(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_comma_actual_parameter */
extern T0* T68f1062(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T694f5(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_actual_parameter */
extern T0* T68f1061(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.item */
extern T0* T415f11(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.position */
extern T0* T415f9(TC* ac, T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.position */
extern T0* T693f5(TC* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.position */
extern T0* T1032f6(TC* ac, T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T695f4(TC* ac, T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.position */
extern T0* T694f4(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint */
extern T0* T725f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint */
extern T0* T724f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint */
extern T0* T199f5(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].item */
extern T0* T259f9(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_56 */
extern void T68f1183(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_55 */
extern void T68f1182(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_54 */
extern void T68f1181(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_53 */
extern void T68f1180(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_52 */
extern void T68f1179(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_51 */
extern void T68f1178(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_50 */
extern void T68f1177(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].force */
extern void T396s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLASS].fill_with */
extern void T397f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLASS].extend */
extern void T397f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].aliased_resized_area */
extern T0* T396s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLASS].aliased_resized_area */
extern T0* T397f4(TC* ac, T0* C, T6 a1);
/* ET_CLASS.set_external_keyword */
extern void T70f276(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_frozen_keyword */
extern void T70f275(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_class_mark */
extern void T70f283(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_class_keyword */
extern void T70f274(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_class */
extern T0* T68f963(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_compilation_status */
extern void T63f221(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_compilation_status */
extern void T42f221(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.set_time_stamp */
extern void T70f287(TC* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.add_last_local_class */
extern void T188f54(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_non_override_class */
extern void T188f60(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].force_last */
extern void T69f16(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_override_class */
extern void T188f59(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_ignored_class */
extern void T188f58(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.register_class */
extern void T87f216(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_name */
extern void T70f286(TC* ac, T0* C, T0* a1);
/* ET_CLASS.reset */
extern void T70f285(TC* ac, T0* C);
/* ET_CLASS.reset_parsed */
extern void T70f294(TC* ac, T0* C);
/* ET_CLASS.reset_ancestors_built */
extern void T70f293(TC* ac, T0* C);
/* ET_CLASS.reset_features_flattened */
extern void T70f292(TC* ac, T0* C);
/* ET_CLASS.reset_interface_checked */
extern void T70f291(TC* ac, T0* C);
/* ET_CLASS.reset_implementation_checked */
extern void T70f290(TC* ac, T0* C);
/* ET_MASTER_CLASS.set_modified */
extern void T188f53(TC* ac, T0* C, T1 a1);
/* KL_UNIX_FILE_SYSTEM.same_pathnames */
extern T1 T152s15(TC* ac, T0* a1, T0* a2);
/* KL_PATHNAME.same_pathname */
extern T1 T1058f10(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.is_subpathname */
extern T1 T1058f15(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.string_ */
extern T0* T1058s17(TC* ac);
/* UC_STRING_EQUALITY_TESTER.test */
extern T1 T1624f1(TC* ac, T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.string_ */
extern T0* T1624s2(TC* ac);
/* KL_PATHNAME.string_equality_tester */
extern T0* T1058s18(TC* ac);
/* UC_STRING_EQUALITY_TESTER.default_create */
extern T0* T1624c3(TC* ac);
/* KL_WINDOWS_FILE_SYSTEM.same_pathnames */
extern T1 T151s15(TC* ac, T0* a1, T0* a2);
/* KL_PATHNAME.same_case_insensitive */
extern T1 T1058f14(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.is_case_insensitive_subpathname */
extern T1 T1058f11(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.case_insensitive_string_equality_tester */
extern T0* T1058s16(TC* ac);
/* ET_EIFFEL_PARSER.file_system */
extern T0* T68s1030(TC* ac);
/* ET_EIFFEL_PARSER.unix_file_system */
extern T0* T68s1039(TC* ac);
/* ET_EIFFEL_PARSER.windows_file_system */
extern T0* T68s1038(TC* ac);
/* ET_EIFFEL_PARSER.operating_system */
extern T0* T68s1037(TC* ac);
/* ET_NULL_ERROR_HANDLER.report_gvscn1a_error */
extern void T63f220(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvscn1a */
extern T0* T1445c923(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvscn1a_error */
extern void T42f220(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MASTER_CLASS.first_local_class */
extern T0* T188f25(TC* ac, T0* C);
/* ET_MASTER_CLASS.has_local_class */
extern T1 T188f24(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_hidden_class */
extern T1 T188f23(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_ignored_class */
extern T1 T188f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].has */
extern T1 T69f12(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_non_override_class */
extern T1 T188f30(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_override_class */
extern T1 T188f27(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_49 */
extern void T68f1176(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_48 */
extern void T68f1175(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_47 */
extern void T68f1174(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_46 */
extern void T68f1173(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM].force */
extern void T579s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].fill_with */
extern void T581f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].extend */
extern void T581f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM].aliased_resized_area */
extern T0* T579s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].aliased_resized_area */
extern T0* T581f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_note_term_comma */
extern T0* T65f139(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_45 */
extern void T68f1172(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM].force */
extern void T576s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM].fill_with */
extern void T578f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM].extend */
extern void T578f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM].aliased_resized_area */
extern T0* T576s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_NOTE_TERM].aliased_resized_area */
extern T0* T578f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_custom_attribute */
extern T0* T65f138(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CUSTOM_ATTRIBUTE.make */
extern T0* T690c9(TC* ac, T0* a1, T0* a2);
/* ET_CUSTOM_ATTRIBUTE.tokens */
extern T0* T690s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_44 */
extern void T68f1171(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_43 */
extern void T68f1170(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_42 */
extern void T68f1169(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_41 */
extern void T68f1168(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_40 */
extern void T68f1167(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_39 */
extern void T68f1166(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_38 */
extern void T68f1165(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_37 */
extern void T68f1164(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST].force */
extern void T582s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].fill_with */
extern void T584f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].extend */
extern void T584f10(TC* ac, T0* C, T0* a1);
/* ET_NOTE_TERM_LIST.put_first */
extern void T583f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM].force */
extern void T1611s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NOTE_TERM_ITEM].fill_with */
extern void T1610f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NOTE_TERM_ITEM].extend */
extern void T1610f7(TC* ac, T0* C, T0* a1);
/* ET_NOTE_TERM_LIST.fixed_array */
extern T0* T583f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM].default_create */
extern T0* T1611c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_36 */
extern void T68f1163(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST].aliased_resized_area */
extern T0* T582s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].aliased_resized_area */
extern T0* T584f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_note_terms */
extern T0* T65f137(TC* ac, T0* C, T6 a1);
/* ET_NOTE_TERM_LIST.make_with_capacity */
extern T0* T583c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM].make */
extern T0* T1611s1(TC* ac, T6 a1);
/* SPECIAL [ET_NOTE_TERM_ITEM].make_empty */
extern T0* T1610c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_35 */
extern void T68f1162(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM].force */
extern void T573s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_ITEM].fill_with */
extern void T575f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_ITEM].extend */
extern void T575f10(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_note_semicolon */
extern T0* T65f135(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_34 */
extern void T68f1161(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_33 */
extern void T68f1160(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM].aliased_resized_area */
extern T0* T573s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_NOTE_ITEM].aliased_resized_area */
extern T0* T575f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_tagged_note */
extern T0* T65f134(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TAGGED_NOTE.make */
extern T0* T688c5(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_32 */
extern void T68f1159(TC* ac, T0* C);
/* ET_AST_FACTORY.new_note */
extern T0* T65f136(TC* ac, T0* C, T0* a1);
/* ET_NOTE.make */
extern T0* T689c5(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_31 */
extern void T68f1158(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_30 */
extern void T68f1157(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST].force */
extern void T570s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_LIST].fill_with */
extern void T572f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_LIST].extend */
extern void T572f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST].aliased_resized_area */
extern T0* T570s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_NOTE_LIST].aliased_resized_area */
extern T0* T572f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_29 */
extern void T68f1156(TC* ac, T0* C);
/* ET_NOTE_LIST.put_first */
extern void T571f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_ITEM].force */
extern void T1609s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NOTE_ITEM].fill_with */
extern void T1608f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NOTE_ITEM].extend */
extern void T1608f7(TC* ac, T0* C, T0* a1);
/* ET_NOTE_LIST.fixed_array */
extern T0* T571f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_NOTE_ITEM].default_create */
extern T0* T1609c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_28 */
extern void T68f1155(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_27 */
extern void T68f1154(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_26 */
extern void T68f1153(TC* ac, T0* C);
/* ET_AST_FACTORY.new_notes */
extern T0* T65f132(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_NOTE_LIST.set_note_keyword */
extern void T571f14(TC* ac, T0* C, T0* a1);
/* ET_NOTE_LIST.make_with_capacity */
extern T0* T571c12(TC* ac, T6 a1);
/* ET_NOTE_LIST.make_with_capacity */
extern void T571f12p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_ITEM].make */
extern T0* T1609s1(TC* ac, T6 a1);
/* SPECIAL [ET_NOTE_ITEM].make_empty */
extern T0* T1608c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.note_keyword */
extern T0* T81s652(TC* ac);
/* ET_KEYWORD.make_note */
extern T0* T191c71(TC* ac);
/* ET_NOTE_LIST.tokens */
extern T0* T571s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_25 */
extern void T68f1152(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_24 */
extern void T68f1151(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_23 */
extern void T68f1150(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_22 */
extern void T68f1149(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_21 */
extern void T68f1148(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_20 */
extern void T68f1147(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_19 */
extern void T68f1146(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_18 */
extern void T68f1145(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_17 */
extern void T68f1144(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_16 */
extern void T68f1143(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_15 */
extern void T68f1142(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_14 */
extern void T68f1141(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_13 */
extern void T68f1140(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_12 */
extern void T68f1139(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_11 */
extern void T68f1138(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_10 */
extern void T68f1137(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_9 */
extern void T68f1136(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_8 */
extern void T68f1135(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_providers */
extern void T68f2086(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].wipe_out */
extern void T260f37(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].slots_wipe_out */
extern void T260f52(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].clashes_wipe_out */
extern void T260f51(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_wipe_out */
extern void T260f50(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_wipe_out */
extern void T260f49(TC* ac, T0* C);
/* SPECIAL [ET_NAMED_CLASS].keep_head */
extern void T1168f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_CLASS].set_count */
extern void T1168f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].move_all_cursors_after */
extern void T260f48(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_next_cursor */
extern void T1167f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_after */
extern void T1167f10(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].forth */
extern void T260f40(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_forth */
extern void T260f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].add_traversing_cursor */
extern void T260f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_position */
extern void T1167f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].remove_traversing_cursor */
extern void T260f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].put_last */
extern void T260f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].compress */
extern void T260f56(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_keep_head */
extern void T260f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_keep_head */
extern void T260f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].move_all_cursors */
extern void T260f64(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_put */
extern void T260f63(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_NAMED_CLASS].item_for_iteration */
extern T0* T260f33(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_item */
extern T0* T260f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].after */
extern T1 T260f17(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_after */
extern T1 T260f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].after */
extern T1 T1167f8(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].start */
extern void T260f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_start */
extern void T260f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_off */
extern T1 T260f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].off */
extern T1 T1167f6(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].is_empty */
extern T1 T260f25(TC* ac, T0* C);
/* ET_CLASS.set_providers */
extern void T70f278(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make */
extern T0* T260c36(TC* ac, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].set_internal_cursor */
extern void T260f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].new_cursor */
extern T0* T260f34(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].make */
extern T0* T1167c9(TC* ac, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make_slots */
extern void T260f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make_clashes */
extern void T260f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make_key_storage */
extern void T260f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make_item_storage */
extern void T260f42(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].make */
extern T0* T1169s1(TC* ac, T6 a1);
/* SPECIAL [ET_NAMED_CLASS].make_empty */
extern T0* T1168c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].default_create */
extern T0* T1169c3(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_7 */
extern void T68f1134(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_to_end */
extern void T68f2085(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CLASS.set_parsed */
extern void T70f307(TC* ac, T0* C);
/* ET_CLASS.set_end_keyword */
extern void T70f306(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_second_note_clause */
extern void T70f305(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_invariants */
extern void T70f304(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_feature_clauses */
extern void T70f303(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_convert_features */
extern void T70f302(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_creators */
extern void T70f301(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_parent_clauses */
extern void T70f300(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_obsolete_message */
extern void T70f299(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_6 */
extern void T68f1133(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_5 */
extern void T68f1132(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_4 */
extern void T68f1131(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_3 */
extern void T68f1130(TC* ac, T0* C);
/* ET_CLASS.set_first_note_clause */
extern void T70f298(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_2 */
extern void T68f1129(TC* ac, T0* C);
/* ET_CLASS.set_leading_break */
extern void T70f297(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_1 */
extern void T68f1128(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_push_last_value */
extern void T68f1079(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].force */
extern void T335s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].fill_with */
extern void T337f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].extend */
extern void T337f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T335s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T337f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].force */
extern void T332s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].fill_with */
extern void T334f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].extend */
extern void T334f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T332s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T334f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].force */
extern void T326s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_VOID].fill_with */
extern void T328f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_VOID].extend */
extern void T328f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].aliased_resized_area */
extern T0* T326s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_VOID].aliased_resized_area */
extern T0* T328f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].force */
extern void T323s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].fill_with */
extern void T325f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].extend */
extern void T325f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T323s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T325f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].force */
extern void T320s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].fill_with */
extern void T322f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].extend */
extern void T322f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T320s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T322f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].force */
extern void T317s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RESULT].fill_with */
extern void T319f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RESULT].extend */
extern void T319f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].aliased_resized_area */
extern T0* T317s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RESULT].aliased_resized_area */
extern T0* T319f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T314s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T316f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].force */
extern void T308s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].fill_with */
extern void T310f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].extend */
extern void T310f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T308s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T310f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T305s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T307f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].aliased_resized_area */
extern T0* T302s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_IDENTIFIER].aliased_resized_area */
extern T0* T304f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].force */
extern void T299s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FREE_OPERATOR].fill_with */
extern void T301f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FREE_OPERATOR].extend */
extern void T301f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T299s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T301f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].force */
extern void T296s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CURRENT].fill_with */
extern void T298f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CURRENT].extend */
extern void T298f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].aliased_resized_area */
extern T0* T296s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CURRENT].aliased_resized_area */
extern T0* T298f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].force */
extern void T290s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BREAK].fill_with */
extern void T292f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BREAK].extend */
extern void T292f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].aliased_resized_area */
extern T0* T290s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BREAK].aliased_resized_area */
extern T0* T292f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T287s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T289f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].force */
extern void T284s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_POSITION].fill_with */
extern void T286f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_POSITION].extend */
extern void T286f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].aliased_resized_area */
extern T0* T284s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_POSITION].aliased_resized_area */
extern T0* T286f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].force */
extern void T278s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].fill_with */
extern void T280f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].extend */
extern void T280f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T278s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T280f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].force */
extern void T275s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_KEYWORD].fill_with */
extern void T277f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_KEYWORD].extend */
extern void T277f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T275s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T277f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.accept */
extern void T68f1078(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action */
extern void T68f1076(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_error */
extern void T68f1105(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1800_1999 */
extern void T68f1104(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_eof_expected_error */
extern void T68f1127(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1600_1799 */
extern void T68f1103(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1400_1599 */
extern void T68f1102(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1200_1399 */
extern void T68f1101(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1000_1199 */
extern void T68f1100(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_800_999 */
extern void T68f1099(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_600_799 */
extern void T68f1098(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_400_599 */
extern void T68f1097(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_200_399 */
extern void T68f1096(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_0_199 */
extern void T68f1095(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.read_token */
extern void T68f1075(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_execute_action */
extern void T68f1094(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.less */
extern void T68f1126(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_break */
extern void T68f1115(TC* ac, T0* C);
/* ET_AST_FACTORY.new_comment */
extern T0* T65f15(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_break */
extern T0* T65f14(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_underscored_real_constant */
extern T0* T65f13(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_position */
extern void T681f46(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_REAL_CONSTANT.make */
extern T0* T681c43(TC* ac, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.make_leaf */
extern void T681f49(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.last_literal */
extern T0* T68f1050(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.text_substring */
extern T0* T68f1054(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].force_new */
extern void T1029f38(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_put */
extern void T1029f48(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_put */
extern void T1029f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_put */
extern void T1029f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_put */
extern void T1029f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_item */
extern T6 T1029f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].hash_position */
extern T6 T1029f31(TC* ac, T0* C, T0* a1);
/* KL_AGENT_HASH_FUNCTION [STRING_8].hash_code */
extern T6 T830f2(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_item */
extern T6 T1029f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].resize */
extern void T1029f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_resize */
extern void T1029f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].special_integer_ */
extern T0* T1029s33(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_resize */
extern void T1029f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_resize */
extern void T1029f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_item */
extern T0* T1029f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_resize */
extern void T1029f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_modulus */
extern T6 T1029f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_capacity */
extern T6 T1029f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].unset_found_item */
extern void T1029f43(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_key */
extern T0* T1029f28(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found */
extern T1 T1029f21(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search */
extern void T1029f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search_position */
extern void T1029f42(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.strings */
extern T0* T68f1027(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_key_equality_tester */
extern void T1029f39(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.string_equality_tester */
extern T0* T68s1036(TC* ac);
/* KL_STRING_EQUALITY_TESTER.default_create */
extern T0* T221c2(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_map */
extern T0* T1029c36(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_with_equality_testers */
extern void T1029f41(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_sparse_container */
extern void T1029f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_internal_cursor */
extern void T1029f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_cursor */
extern T0* T1029f32(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8].make */
extern T0* T1647c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_slots */
extern void T1029f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_clashes */
extern void T1029f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_key_storage */
extern void T1029f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_item_storage */
extern void T1029f54(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.append_text_substring_to_string */
extern void T68f2303(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.append_substring_to_string */
extern void T1574f15(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_UNICODE_CHARACTER_BUFFER.append_substring_to_string */
extern void T265f17(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_UNICODE_CHARACTER_BUFFER.item */
extern T2 T265f10(TC* ac, T0* C, T6 a1);
/* KL_UNICODE_CHARACTER_BUFFER.unicode_item */
extern T3 T265f9(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.string_ */
extern T0* T68s1026(TC* ac);
/* ET_EIFFEL_PARSER.string_buffer */
extern T0* T68f1025(TC* ac, T0* C);
/* ET_AST_FACTORY.new_regular_real_constant */
extern T0* T65f12(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_position */
extern void T680f49(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_REAL_CONSTANT.make */
extern T0* T680c43(TC* ac, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.make_leaf */
extern void T680f46(TC* ac, T0* C);
/* ET_AST_FACTORY.new_binary_integer_constant */
extern T0* T65f11(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_position */
extern void T679f68(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_binary_integer_constant */
extern T0* T68f1049(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.make */
extern T0* T679c65(TC* ac, T0* a1, T11 a2, T1 a3);
/* ET_BINARY_INTEGER_CONSTANT.make_leaf */
extern void T679f71(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.compute_natural_64_value */
extern void T68f2302(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_octal_integer_constant */
extern T0* T65f10(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_position */
extern void T678f68(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_octal_integer_constant */
extern T0* T68f1048(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.make */
extern T0* T678c65(TC* ac, T0* a1, T11 a2, T1 a3);
/* ET_OCTAL_INTEGER_CONSTANT.make_leaf */
extern void T678f71(TC* ac, T0* C);
/* ET_AST_FACTORY.new_hexadecimal_integer_constant */
extern T0* T65f9(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_position */
extern void T677f68(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_hexadecimal_integer_constant */
extern T0* T68f1047(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make */
extern T0* T677c65(TC* ac, T0* a1, T11 a2, T1 a3);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make_leaf */
extern void T677f71(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_silu_error */
extern void T63f216(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_silu_error */
extern void T42f216(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sifu_error */
extern void T63f215(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sifu_error */
extern void T42f215(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_underscored_integer_constant */
extern T0* T65f8(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_position */
extern void T676f68(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_underscored_integer_constant */
extern T0* T68f1046(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make */
extern T0* T676c65(TC* ac, T0* a1, T11 a2, T1 a3);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make_leaf */
extern void T676f71(TC* ac, T0* C);
/* ET_AST_FACTORY.new_regular_integer_constant */
extern T0* T65f7(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_position */
extern void T675f71(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_regular_integer_constant */
extern T0* T68f1045(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_ssnp_error */
extern void T63f204(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnp_error */
extern void T42f204(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssel_error */
extern void T63f214(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssel_error */
extern void T42f214(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnl_error */
extern void T63f213(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnl_error */
extern void T42f213(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sssc_error */
extern void T63f212(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sssc_error */
extern void T42f212(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sscu_error */
extern void T63f211(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sscu_error */
extern void T42f211(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssac_error */
extern void T63f210(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssac_error */
extern void T42f210(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssas_error */
extern void T63f209(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssas_error */
extern void T42f209(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_verbatim_string */
extern T0* T65f6(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* ET_VERBATIM_STRING.set_position */
extern void T674f54(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_verbatim_string */
extern T0* T68f1044(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_VERBATIM_STRING.make */
extern T0* T674c52(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_VERBATIM_STRING.make_leaf */
extern void T674f57(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.last_utf8_literal */
extern T0* T68f1041(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.is_verbatim_string_closer */
extern T1 T68f781(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_ROUTINES.four_byte_character_code */
extern T10 T167s5(TC* ac, T2 a1, T2 a2, T2 a3, T2 a4);
/* UC_UTF8_ROUTINES.three_byte_character_code */
extern T10 T167s4(TC* ac, T2 a1, T2 a2, T2 a3);
/* UC_UTF8_ROUTINES.two_byte_character_code */
extern T10 T167s3(TC* ac, T2 a1, T2 a2);
/* ET_EIFFEL_PARSER.utf8_text */
extern T0* T68f779(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.append_utf8_text_to_string */
extern void T68f2248(TC* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.append_utf8_substring_to_string */
extern void T1574f14(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_UNICODE_CHARACTER_BUFFER.append_utf8_substring_to_string */
extern void T265f16(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PARSER.utf8_text_substring */
extern T0* T68f776(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.append_utf8_text_substring_to_string */
extern void T68f2247(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_AST_FACTORY.new_special_manifest_string */
extern T0* T65f5(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_position */
extern void T673f50(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_special_manifest_string */
extern T0* T68f1043(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.make */
extern T0* T673c48(TC* ac, T0* a1, T0* a2, T1 a3);
/* ET_SPECIAL_MANIFEST_STRING.make_leaf */
extern void T673f53(TC* ac, T0* C);
/* NATURAL_64.to_natural_32 */
extern T10 T11f9(TC* ac, volatile T11* C);
/* ET_AST_FACTORY.new_regular_manifest_string */
extern T0* T65f4(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_position */
extern void T672f52(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_MANIFEST_STRING.make */
extern T0* T672c47(TC* ac, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.make_leaf */
extern void T672f50(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.process_regular_manifest_string */
extern void T68f1125(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_sceq_error */
extern void T63f208(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sceq_error */
extern void T42f208(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scqq_error */
extern void T63f207(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scqq_error */
extern void T42f207(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scac_error */
extern void T63f206(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scac_error */
extern void T42f206(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scas_error */
extern void T63f205(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scas_error */
extern void T42f205(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_c3_character_constant */
extern T0* T65f3(TC* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_position */
extern void T671f51(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_c3_character_constant */
extern T0* T68f1042(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.make */
extern T0* T671c49(TC* ac, T0* a1, T3 a2, T1 a3);
/* ET_C3_CHARACTER_CONSTANT.make_leaf */
extern void T671f54(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.process_c2_character_constant */
extern void T68f1124(TC* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_c2_character_constant */
extern T0* T65f131(TC* ac, T0* C, T2 a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.set_position */
extern void T686f54(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_C2_CHARACTER_CONSTANT.make */
extern T0* T686c49(TC* ac, T2 a1);
/* ET_C2_CHARACTER_CONSTANT.make_leaf */
extern void T686f52(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_scsc_error */
extern void T63f219(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scsc_error */
extern void T42f219(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sccu_error */
extern void T63f218(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sccu_error */
extern void T42f218(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.text_item */
extern T2 T68f768(TC* ac, T0* C, T6 a1);
/* KL_CHARACTER_BUFFER.item */
extern T2 T1574f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_c1_character_constant */
extern void T68f1123(TC* ac, T0* C, T3 a1);
/* ET_AST_FACTORY.new_c1_character_constant */
extern T0* T65f130(TC* ac, T0* C, T3 a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.set_position */
extern void T685f50(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.make */
extern T0* T685c48(TC* ac, T3 a1);
/* ET_C1_CHARACTER_CONSTANT.make_leaf */
extern void T685f53(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_start_condition */
extern void T68f1116(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.more */
extern void T68f1122(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.process_identifier */
extern void T68f1121(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_detachable_keyword */
extern T0* T65f129(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.set_position */
extern void T191f51(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.use_detachable_keyword */
extern T1 T68f930(TC* ac, T0* C);
/* ET_AST_FACTORY.new_reference_keyword */
extern T0* T65f128(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_reference */
extern T0* T191c62(TC* ac);
/* ET_EIFFEL_PARSER.use_reference_keyword */
extern T1 T68f928(TC* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_keyword */
extern T0* T65f127(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_position */
extern void T279f24(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_invariant_keyword */
extern T0* T65f126(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_attribute_keyword */
extern T0* T65f125(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_attribute_keyword */
extern T1 T68f924(TC* ac, T0* C);
/* ET_ECF_CLUSTER.use_obsolete_syntax */
extern T1 T89f9(TC* ac, T0* C);
/* ET_NONE_GROUP.use_obsolete_syntax */
extern T1 T198f3(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.use_obsolete_syntax */
extern T1 T262f1(TC* ac, T0* C);
/* ET_CLUSTER.use_obsolete_syntax */
extern T1 T67f8(TC* ac, T0* C);
/* ET_AST_FACTORY.new_undefine_keyword */
extern T0* T65f124(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.undefine_keyword */
extern T0* T81s679(TC* ac);
/* ET_KEYWORD.make_undefine */
extern T0* T191c98(TC* ac);
/* ET_AST_FACTORY.new_separate_keyword */
extern T0* T65f123(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_redefine_keyword */
extern T0* T65f122(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_obsolete_keyword */
extern T0* T65f121(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.obsolete_keyword */
extern T0* T81s677(TC* ac);
/* ET_KEYWORD.make_obsolete */
extern T0* T191c96(TC* ac);
/* ET_AST_FACTORY.new_indexing_keyword */
extern T0* T65f120(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.indexing_keyword */
extern T0* T81s676(TC* ac);
/* ET_KEYWORD.make_indexing */
extern T0* T191c95(TC* ac);
/* ET_AST_FACTORY.new_external_keyword */
extern T0* T65f119(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.external_keyword */
extern T0* T81s675(TC* ac);
/* ET_KEYWORD.make_external */
extern T0* T191c94(TC* ac);
/* ET_AST_FACTORY.new_expanded_keyword */
extern T0* T65f118(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_expanded */
extern T0* T191c61(TC* ac);
/* ET_AST_FACTORY.new_deferred_keyword */
extern T0* T65f117(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_creation_keyword */
extern T0* T65f116(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.creation_keyword */
extern T0* T81s673(TC* ac);
/* ET_KEYWORD.make_creation */
extern T0* T191c92(TC* ac);
/* ET_AST_FACTORY.new_attached_keyword */
extern T0* T65f115(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_attached_keyword */
extern T1 T68f913(TC* ac, T0* C);
/* ET_AST_FACTORY.new_variant_keyword */
extern T0* T65f114(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_require_keyword */
extern T0* T65f113(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_inspect_keyword */
extern T0* T65f112(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.inspect_keyword */
extern T0* T81s671(TC* ac);
/* ET_KEYWORD.make_inspect */
extern T0* T191c90(TC* ac);
/* ET_AST_FACTORY.new_inherit_keyword */
extern T0* T65f111(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_implies_keyword */
extern T0* T65f110(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.set_position */
extern void T309f56(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_OPERATOR.make_implies */
extern T0* T309c60(TC* ac);
/* ET_AST_FACTORY.new_feature_keyword */
extern T0* T65f109(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_convert_keyword */
extern T0* T65f108(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_current_keyword */
extern T0* T65f107(TC* ac, T0* C, T0* a1);
/* ET_CURRENT.set_position */
extern void T297f36(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_unique_keyword */
extern T0* T65f106(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_select_keyword */
extern T0* T65f105(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.select_keyword */
extern T0* T81s667(TC* ac);
/* ET_KEYWORD.make_select */
extern T0* T191c86(TC* ac);
/* ET_AST_FACTORY.new_result_keyword */
extern T0* T65f104(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_rescue_keyword */
extern T0* T65f103(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_rename_keyword */
extern T0* T65f102(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_frozen_keyword */
extern T0* T65f101(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_frozen */
extern T0* T191c57(TC* ac);
/* ET_AST_FACTORY.new_export_keyword */
extern T0* T65f100(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_ensure_keyword */
extern T0* T65f99(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_elseif_keyword */
extern T0* T65f98(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.elseif_keyword */
extern T0* T81s663(TC* ac);
/* ET_KEYWORD.make_elseif */
extern T0* T191c82(TC* ac);
/* ET_AST_FACTORY.new_create_keyword */
extern T0* T65f97(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_keyword */
extern T0* T65f96(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.assign_keyword */
extern T0* T81s662(TC* ac);
/* ET_KEYWORD.make_assign */
extern T0* T191c81(TC* ac);
/* ET_AST_FACTORY.new_across_keyword */
extern T0* T65f95(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_until_keyword */
extern T0* T65f94(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.until_keyword */
extern T0* T81s660(TC* ac);
/* ET_KEYWORD.make_until */
extern T0* T191c79(TC* ac);
/* ET_AST_FACTORY.new_strip_keyword */
extern T0* T65f93(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_retry_keyword */
extern T0* T65f92(TC* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.set_position */
extern void T321f19(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_RETRY_INSTRUCTION.make */
extern T0* T321c18(TC* ac);
/* ET_RETRY_INSTRUCTION.make_token */
extern void T321f20(TC* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.make_leaf */
extern void T321f21(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.tokens */
extern T0* T321s7(TC* ac);
/* ET_AST_FACTORY.new_local_keyword */
extern T0* T65f91(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_false_keyword */
extern T0* T65f90(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.set_position */
extern void T684f46(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FALSE_CONSTANT.make */
extern T0* T684c41(TC* ac);
/* ET_FALSE_CONSTANT.make_token */
extern void T684f44(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.make_leaf */
extern void T684f45(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.tokens */
extern T0* T684s6(TC* ac);
/* ET_AST_FACTORY.new_debug_keyword */
extern T0* T65f89(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_class_keyword */
extern T0* T65f88(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_check_keyword */
extern T0* T65f87(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_alias_keyword */
extern T0* T65f86(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_agent_keyword */
extern T0* T65f85(TC* ac, T0* C, T0* a1);
/* ET_AGENT_KEYWORD.set_position */
extern void T276f14(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_when_keyword */
extern T0* T65f84(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_void_keyword */
extern T0* T65f83(TC* ac, T0* C, T0* a1);
/* ET_VOID.set_position */
extern void T327f37(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_VOID.make */
extern T0* T327c32(TC* ac);
/* ET_VOID.make_token */
extern void T327f35(TC* ac, T0* C, T0* a1);
/* ET_VOID.make_leaf */
extern void T327f36(TC* ac, T0* C);
/* ET_VOID.tokens */
extern T0* T327s6(TC* ac);
/* ET_AST_FACTORY.new_true_keyword */
extern T0* T65f82(TC* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.set_position */
extern void T683f44(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_then_keyword */
extern T0* T65f81(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_some_keyword */
extern T0* T65f80(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.some_keyword */
extern T0* T81s653(TC* ac);
/* ET_KEYWORD.make_some */
extern T0* T191c72(TC* ac);
/* ET_AST_FACTORY.new_note_keyword */
extern T0* T65f79(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_note_keyword */
extern T1 T68f874(TC* ac, T0* C);
/* ET_AST_FACTORY.new_identifier */
extern T0* T65f78(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.last_identifier */
extern T0* T231f131(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].replace_found_item */
extern void T1029f40(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.make_with_hash_code */
extern void T303f131(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_with_hash_code */
extern T0* T303c131(TC* ac, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_leaf */
extern void T303f132(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_item */
extern T6 T1029f35(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_item */
extern T6 T1029f25(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.strings */
extern T0* T231f134(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.tokens */
extern T0* T231s93(TC* ac);
/* ET_EIFFEL_PREPARSER.string_equality_tester */
extern T0* T231s135(TC* ac);
/* ET_EIFFEL_PREPARSER.append_text_substring_to_string */
extern void T231f206(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PREPARSER.string_ */
extern T0* T231s133(TC* ac);
/* ET_EIFFEL_PREPARSER.string_buffer */
extern T0* T231f132(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.last_identifier */
extern T0* T68f1051(TC* ac, T0* C);
/* ET_AST_FACTORY.new_loop_keyword */
extern T0* T65f77(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_like_keyword */
extern T0* T65f76(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_from_keyword */
extern T0* T65f75(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_else_keyword */
extern T0* T65f74(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_xor_keyword */
extern T0* T65f73(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_xor */
extern T0* T309c59(TC* ac);
/* ET_AST_FACTORY.new_old_keyword */
extern T0* T65f72(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_not_keyword */
extern T0* T65f71(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_not */
extern T0* T309c58(TC* ac);
/* ET_AST_FACTORY.new_end_keyword */
extern T0* T65f70(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_all_keyword */
extern T0* T65f69(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_and_keyword */
extern T0* T65f68(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_or_keyword */
extern T0* T65f67(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_is_keyword */
extern T0* T65f66(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_if_keyword */
extern T0* T65f65(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.if_keyword */
extern T0* T81s647(TC* ac);
/* ET_KEYWORD.make_if */
extern T0* T191c66(TC* ac);
/* ET_AST_FACTORY.new_do_keyword */
extern T0* T65f64(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_as_keyword */
extern T0* T65f63(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_keyword */
extern T0* T65f2(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_two_char_symbol */
extern void T68f1120(TC* ac, T0* C, T3 a1, T3 a2);
/* ET_AST_FACTORY.new_or_else_symbol */
extern T0* T65f62(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_position */
extern void T324f133(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_SYMBOL_OPERATOR.make_or_else_symbol */
extern T0* T324c150(TC* ac);
/* ET_AST_FACTORY.new_and_then_symbol */
extern T0* T65f61(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_and_then_symbol */
extern T0* T324c149(TC* ac);
/* ET_AST_FACTORY.new_assign_attempt_symbol */
extern T0* T65f60(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_symbol */
extern T0* T65f59(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_dotdot_symbol */
extern T0* T65f58(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_arrow_symbol */
extern T0* T65f57(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_array_symbol */
extern T0* T65f56(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.set_position */
extern void T282f94(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_le_symbol */
extern T0* T65f55(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_le */
extern T0* T324c148(TC* ac);
/* ET_AST_FACTORY.new_right_array_symbol */
extern T0* T65f54(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_ge_symbol */
extern T0* T65f53(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_ge */
extern T0* T324c147(TC* ac);
/* ET_AST_FACTORY.new_mod_symbol */
extern T0* T65f52(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_mod */
extern T0* T324c146(TC* ac);
/* ET_AST_FACTORY.new_not_tilde_symbol */
extern T0* T65f51(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_not_tilde */
extern T0* T282c100(TC* ac);
/* ET_AST_FACTORY.new_not_equal_symbol */
extern T0* T65f50(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_not_equal */
extern T0* T282c99(TC* ac);
/* ET_AST_FACTORY.new_div_symbol */
extern T0* T65f49(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_div */
extern T0* T324c145(TC* ac);
/* ET_AST_FACTORY.new_free_operator */
extern T0* T65f1(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.text_count */
extern T6 T68f759(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_set_line_column */
extern void T68f1119(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.unicode_item */
extern T3 T1574f3(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_one_char_symbol */
extern void T68f1118(TC* ac, T0* C, T3 a1);
/* ET_AST_FACTORY.new_xor_symbol */
extern T0* T65f48(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_xor_symbol */
extern T0* T324c144(TC* ac);
/* ET_AST_FACTORY.new_or_symbol */
extern T0* T65f47(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_or_symbol */
extern T0* T324c143(TC* ac);
/* ET_AST_FACTORY.new_not_symbol */
extern T0* T65f46(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_not_symbol */
extern T0* T324c142(TC* ac);
/* ET_AST_FACTORY.new_implies_symbol */
extern T0* T65f45(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_implies_symbol */
extern T0* T324c141(TC* ac);
/* ET_AST_FACTORY.new_and_symbol */
extern T0* T65f44(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_and_symbol */
extern T0* T324c140(TC* ac);
/* ET_AST_FACTORY.new_close_repeat_symbol */
extern T0* T65f43(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_open_repeat_symbol */
extern T0* T65f42(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_bar_symbol */
extern T0* T65f41(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_there_exists_symbol */
extern T0* T65f40(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_for_all_symbol */
extern T0* T65f39(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.for_all_symbol */
extern T0* T81s635(TC* ac);
/* ET_SYMBOL.make_for_all */
extern T0* T282c110(TC* ac);
/* ET_AST_FACTORY.new_at_symbol */
extern T0* T65f38(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_tilde_symbol */
extern T0* T65f37(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_tilde */
extern T0* T282c97(TC* ac);
/* ET_AST_FACTORY.new_dollar_symbol */
extern T0* T65f36(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_bracket_symbol */
extern T0* T65f35(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_bracket_symbol */
extern T0* T65f34(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.set_position */
extern void T333f130(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_right_brace_symbol */
extern T0* T65f33(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_brace_symbol */
extern T0* T65f32(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_parenthesis_symbol */
extern T0* T65f31(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_parenthesis_symbol */
extern T0* T65f30(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_question_mark_symbol */
extern T0* T65f29(TC* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.set_position */
extern void T336f47(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_bang_symbol */
extern T0* T65f28(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_symbol */
extern T0* T65f27(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_comma_symbol */
extern T0* T65f26(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.comma_symbol */
extern T0* T81s628(TC* ac);
/* ET_SYMBOL.make_comma */
extern T0* T282c103(TC* ac);
/* ET_AST_FACTORY.new_semicolon_symbol */
extern T0* T65f25(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.semicolon_symbol */
extern T0* T81s627(TC* ac);
/* ET_SEMICOLON_SYMBOL.make */
extern T0* T330c4(TC* ac);
/* ET_SEMICOLON_SYMBOL.make_leaf */
extern void T330f5(TC* ac, T0* C);
/* ET_SEMICOLON_SYMBOL.tokens */
extern T0* T330s3(TC* ac);
/* ET_AST_FACTORY.new_dot_symbol */
extern T0* T65f24(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.dot_symbol */
extern T0* T81s626(TC* ac);
/* ET_SYMBOL.make_dot */
extern T0* T282c102(TC* ac);
/* ET_AST_FACTORY.new_lt_symbol */
extern T0* T65f23(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_gt_symbol */
extern T0* T65f22(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_equal_symbol */
extern T0* T65f21(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_equal */
extern T0* T282c93(TC* ac);
/* ET_AST_FACTORY.new_power_symbol */
extern T0* T65f20(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_power */
extern T0* T324c137(TC* ac);
/* ET_AST_FACTORY.new_divide_symbol */
extern T0* T65f19(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_divide */
extern T0* T324c136(TC* ac);
/* ET_AST_FACTORY.new_times_symbol */
extern T0* T65f18(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_times */
extern T0* T324c135(TC* ac);
/* ET_AST_FACTORY.new_plus_symbol */
extern T0* T65f17(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_plus */
extern T0* T324c134(TC* ac);
/* ET_AST_FACTORY.new_minus_symbol */
extern T0* T65f16(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_minus */
extern T0* T324c132(TC* ac);
/* ET_EIFFEL_PARSER.unicode_text_item */
extern T3 T68f758(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_execute_eof_action */
extern void T68f1093(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_sseq_error */
extern void T63f203(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sseq_error */
extern void T42f203(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.terminate */
extern void T68f1114(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.wrap */
extern T1 T68f720(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_refill_input_buffer */
extern void T68f1092(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_set_content */
extern void T68f1073(TC* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.count */
extern T6 T1574f5(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.count */
extern T6 T265f6(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.as_unicode_special */
extern T0* T1574f6(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.as_special */
extern T0* T265f11(TC* ac, T0* C);
/* YY_BUFFER.fill */
extern void T261f14(TC* ac, T0* C);
/* YY_UNICODE_FILE_BUFFER.fill */
extern void T243f26(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.put */
extern void T265f18(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_ROUTINES.is_endian_detection_character */
extern T1 T167s22(TC* ac, T2 a1, T2 a2, T2 a3);
/* UC_UTF8_ROUTINES.is_endian_detection_character_start */
extern T1 T167s30(TC* ac, T2 a1, T2 a2);
/* CHARACTER_8.to_character_8 */
extern T2 T2f11(TC* ac, volatile T2* C);
/* KL_STRING_INPUT_STREAM.end_of_input */
extern T1 T1794f1(TC* ac, T0* C);
/* KL_STDIN_FILE.end_of_file */
extern T1 T244f1(TC* ac, T0* C);
/* UC_UNICODE_CONSTANTS.bom_character */
extern T3 T667s5(TC* ac);
/* KL_UNICODE_CHARACTER_BUFFER.fill_from_iso_8859_1_stream */
extern T6 T265f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_UNICODE_CHARACTER_BUFFER.fill_from_iso_8859_1_substring */
extern void T265f21(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* STRING_32.put */
extern void T18f38(TC* ac, T0* C, T3 a1, T6 a2);
/* KL_STRING_INPUT_STREAM.read_to_string */
extern T6 T1794f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STRING_INPUT_STREAM.read_character */
extern void T1794f10(TC* ac, T0* C);
/* KL_STDIN_FILE.read_to_string */
extern T6 T244f11(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_8.subcopy */
extern void T17f84(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* CONSOLE.read_stream */
extern void T1644f26(TC* ac, T0* C, T6 a1);
/* CONSOLE.read_stream_thread_aware */
extern void T1644f32(TC* ac, T0* C, T6 a1);
/* C_STRING.read_string_into */
extern void T31f18(TC* ac, T0* C, T0* a1);
/* CONSOLE.console_readstream */
extern T6 T1644s13(TC* ac, T14 a1, T14 a2, T6 a3);
/* CONSOLE.read_data_buffer */
extern T0* T1644f12(TC* ac, T0* C);
/* KL_STDIN_FILE.any_ */
extern T0* T244s6(TC* ac);
/* CONSOLE.end_of_file */
extern T1 T1644f15(TC* ac, T0* C);
/* CONSOLE.console_eof */
extern T1 T1644s17(TC* ac, T14 a1);
/* KL_STDIN_FILE.console */
extern T0* T244s5(TC* ac);
/* STD_FILES.input */
extern T0* T1019s4(TC* ac);
/* CONSOLE.make_open_stdin */
extern T0* T1644c25(TC* ac, T0* a1);
/* CONSOLE.set_read_mode */
extern void T1644f31(TC* ac, T0* C);
/* KL_STDIN_FILE.io */
extern T0* T244s8(TC* ac);
/* KL_TEXT_INPUT_FILE.read_to_string */
extern T6 T43f41(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.dummy_kl_character_buffer */
extern T0* T43s50(TC* ac);
/* KL_CHARACTER_BUFFER.make */
extern T0* T1574c11(TC* ac, T6 a1);
/* KL_TEXT_INPUT_FILE.old_read_to_string */
extern T6 T43f40(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.file_gss */
extern T6 T43s47(TC* ac, T14 a1, T14 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.any_ */
extern T0* T43s48(TC* ac);
/* KL_UNICODE_CHARACTER_BUFFER.fill_from_utf8_stream */
extern T6 T265f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_ROUTINES.is_encoded_next_byte */
extern T1 T167s38(TC* ac, T2 a1);
/* UC_UTF8_ROUTINES.is_encoded_second_byte */
extern T1 T167s37(TC* ac, T2 a1, T2 a2);
/* UC_UTF8_ROUTINES.is_encoded_first_byte */
extern T1 T167s36(TC* ac, T2 a1);
/* YY_UNICODE_FILE_BUFFER.compact_left */
extern void T243f28(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.move_left */
extern void T265f20(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_32.subcopy */
extern void T18f39(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_UNICODE_CHARACTER_BUFFER.resize */
extern void T265f19(TC* ac, T0* C, T6 a1);
/* YY_UNICODE_FILE_BUFFER.default_capacity */
extern T6 T243f20(TC* ac, T0* C);
/* YY_BUFFER.set_index */
extern void T261f13(TC* ac, T0* C, T6 a1);
/* YY_UNICODE_FILE_BUFFER.set_index */
extern void T243f25(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_null_trans_state */
extern T6 T68f719(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_previous_state */
extern T6 T68f718(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.fatal_error */
extern void T68f1091(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.report_invalid_unicode_character_error */
extern void T68f1090(TC* ac, T0* C, T10 a1);
/* KL_CHARACTER_BUFFER.item_code */
extern T10 T1574f9(TC* ac, T0* C, T6 a1);
/* KL_UNICODE_CHARACTER_BUFFER.item_code */
extern T10 T265f12(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_at_beginning_of_line */
extern T6 T68f700(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.special_integer_ */
extern T0* T68s685(TC* ac);
/* ET_EIFFEL_PARSER.yy_init_value_stacks */
extern void T68f1074(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_clear_all */
extern void T68f1083(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.clear_all */
extern void T68f1111(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.clear_stacks */
extern void T68f2082(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T68f2114(TC* ac, T0* C);
/* SPECIAL [detachable ET_WRITABLE].keep_head */
extern void T666f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WRITABLE].set_count */
extern void T666f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].keep_head */
extern void T663f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].set_count */
extern void T663f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].keep_head */
extern void T660f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].set_count */
extern void T660f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].keep_head */
extern void T657f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].set_count */
extern void T657f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].keep_head */
extern void T654f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].set_count */
extern void T654f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].keep_head */
extern void T651f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].set_count */
extern void T651f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].keep_head */
extern void T648f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].set_count */
extern void T648f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].keep_head */
extern void T645f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].set_count */
extern void T645f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].keep_head */
extern void T642f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].set_count */
extern void T642f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].keep_head */
extern void T639f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].set_count */
extern void T639f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].keep_head */
extern void T636f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].set_count */
extern void T636f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE].keep_head */
extern void T633f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE].set_count */
extern void T633f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].keep_head */
extern void T631f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].set_count */
extern void T631f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].keep_head */
extern void T628f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].set_count */
extern void T628f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].keep_head */
extern void T625f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].set_count */
extern void T625f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].keep_head */
extern void T622f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].set_count */
extern void T622f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].keep_head */
extern void T620f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].set_count */
extern void T620f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUERY].keep_head */
extern void T617f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUERY].set_count */
extern void T617f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].keep_head */
extern void T614f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].set_count */
extern void T614f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].keep_head */
extern void T611f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].set_count */
extern void T611f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PROCEDURE].keep_head */
extern void T608f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PROCEDURE].set_count */
extern void T608f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECONDITIONS].keep_head */
extern void T605f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECONDITIONS].set_count */
extern void T605f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].keep_head */
extern void T602f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].set_count */
extern void T602f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].keep_head */
extern void T599f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].set_count */
extern void T599f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].keep_head */
extern void T597f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].set_count */
extern void T597f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].keep_head */
extern void T595f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].set_count */
extern void T595f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].keep_head */
extern void T592f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].set_count */
extern void T592f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].keep_head */
extern void T590f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].set_count */
extern void T590f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].keep_head */
extern void T587f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].set_count */
extern void T587f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].keep_head */
extern void T584f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].set_count */
extern void T584f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].keep_head */
extern void T581f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].set_count */
extern void T581f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM].keep_head */
extern void T578f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM].set_count */
extern void T578f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_ITEM].keep_head */
extern void T575f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_ITEM].set_count */
extern void T575f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_LIST].keep_head */
extern void T572f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_LIST].set_count */
extern void T572f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].keep_head */
extern void T569f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].set_count */
extern void T569f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].keep_head */
extern void T566f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].set_count */
extern void T566f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].keep_head */
extern void T563f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].set_count */
extern void T563f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].keep_head */
extern void T560f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].set_count */
extern void T560f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].keep_head */
extern void T557f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].set_count */
extern void T557f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].keep_head */
extern void T551f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].set_count */
extern void T551f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].keep_head */
extern void T548f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].set_count */
extern void T548f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].keep_head */
extern void T545f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].set_count */
extern void T545f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].keep_head */
extern void T542f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].set_count */
extern void T542f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].keep_head */
extern void T540f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].set_count */
extern void T540f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].keep_head */
extern void T537f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].set_count */
extern void T537f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].keep_head */
extern void T534f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].set_count */
extern void T534f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].keep_head */
extern void T531f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].set_count */
extern void T531f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].keep_head */
extern void T528f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].set_count */
extern void T528f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].keep_head */
extern void T525f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].set_count */
extern void T525f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].keep_head */
extern void T522f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].set_count */
extern void T522f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].keep_head */
extern void T519f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].set_count */
extern void T519f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_AGENT].keep_head */
extern void T516f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_AGENT].set_count */
extern void T516f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].keep_head */
extern void T513f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].set_count */
extern void T513f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_EXPRESSION].keep_head */
extern void T510f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_EXPRESSION].set_count */
extern void T510f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].keep_head */
extern void T507f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].set_count */
extern void T507f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T504f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].set_count */
extern void T504f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].keep_head */
extern void T501f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].set_count */
extern void T501f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].keep_head */
extern void T495f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].set_count */
extern void T495f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].keep_head */
extern void T492f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].set_count */
extern void T492f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].keep_head */
extern void T489f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].set_count */
extern void T489f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME].keep_head */
extern void T486f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME].set_count */
extern void T486f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].keep_head */
extern void T484f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].set_count */
extern void T484f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].keep_head */
extern void T481f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].set_count */
extern void T481f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].keep_head */
extern void T478f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].set_count */
extern void T478f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].keep_head */
extern void T476f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].set_count */
extern void T476f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].keep_head */
extern void T473f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].set_count */
extern void T473f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].keep_head */
extern void T470f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].set_count */
extern void T470f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION].keep_head */
extern void T467f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION].set_count */
extern void T467f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].keep_head */
extern void T464f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].set_count */
extern void T464f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].keep_head */
extern void T462f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].set_count */
extern void T462f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].keep_head */
extern void T459f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].set_count */
extern void T459f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].keep_head */
extern void T456f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].set_count */
extern void T456f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].keep_head */
extern void T453f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].set_count */
extern void T453f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].keep_head */
extern void T450f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].set_count */
extern void T450f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].keep_head */
extern void T447f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].set_count */
extern void T447f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].keep_head */
extern void T444f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].set_count */
extern void T444f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].keep_head */
extern void T442f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].set_count */
extern void T442f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATION_REGION].keep_head */
extern void T440f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATION_REGION].set_count */
extern void T440f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].keep_head */
extern void T437f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].set_count */
extern void T437f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].keep_head */
extern void T434f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].set_count */
extern void T434f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].keep_head */
extern void T431f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].set_count */
extern void T431f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].keep_head */
extern void T428f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].set_count */
extern void T428f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].keep_head */
extern void T422f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].set_count */
extern void T422f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].keep_head */
extern void T419f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].set_count */
extern void T419f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].keep_head */
extern void T416f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].set_count */
extern void T416f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T413f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].set_count */
extern void T413f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTANT].keep_head */
extern void T410f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTANT].set_count */
extern void T410f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].keep_head */
extern void T407f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].set_count */
extern void T407f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].keep_head */
extern void T404f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].set_count */
extern void T404f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].keep_head */
extern void T401f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].set_count */
extern void T401f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].keep_head */
extern void T399f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].set_count */
extern void T399f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].keep_head */
extern void T397f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].set_count */
extern void T397f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].keep_head */
extern void T395f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].set_count */
extern void T395f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].keep_head */
extern void T392f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].set_count */
extern void T392f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].keep_head */
extern void T389f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].set_count */
extern void T389f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].keep_head */
extern void T386f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].set_count */
extern void T386f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].keep_head */
extern void T383f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].set_count */
extern void T383f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].keep_head */
extern void T380f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].set_count */
extern void T380f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].keep_head */
extern void T377f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].set_count */
extern void T377f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].keep_head */
extern void T374f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].set_count */
extern void T374f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].keep_head */
extern void T371f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].set_count */
extern void T371f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].keep_head */
extern void T368f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].set_count */
extern void T368f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME].keep_head */
extern void T365f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME].set_count */
extern void T365f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].keep_head */
extern void T362f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].set_count */
extern void T362f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].keep_head */
extern void T359f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].set_count */
extern void T359f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].keep_head */
extern void T356f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].set_count */
extern void T356f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].keep_head */
extern void T353f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].set_count */
extern void T353f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].keep_head */
extern void T350f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].set_count */
extern void T350f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T348f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].set_count */
extern void T348f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].keep_head */
extern void T346f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].set_count */
extern void T346f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].keep_head */
extern void T343f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].set_count */
extern void T343f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].keep_head */
extern void T340f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].set_count */
extern void T340f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].keep_head */
extern void T337f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].set_count */
extern void T337f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].keep_head */
extern void T334f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].set_count */
extern void T334f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].keep_head */
extern void T331f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].set_count */
extern void T331f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].keep_head */
extern void T328f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].set_count */
extern void T328f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].keep_head */
extern void T325f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].set_count */
extern void T325f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].keep_head */
extern void T322f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].set_count */
extern void T322f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].keep_head */
extern void T319f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].set_count */
extern void T319f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].keep_head */
extern void T316f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].set_count */
extern void T316f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].keep_head */
extern void T313f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].set_count */
extern void T313f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].keep_head */
extern void T310f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].set_count */
extern void T310f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].keep_head */
extern void T307f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].set_count */
extern void T307f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IDENTIFIER].keep_head */
extern void T304f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IDENTIFIER].set_count */
extern void T304f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].keep_head */
extern void T301f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].set_count */
extern void T301f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].keep_head */
extern void T298f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].set_count */
extern void T298f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].keep_head */
extern void T295f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].set_count */
extern void T295f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].keep_head */
extern void T292f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].set_count */
extern void T292f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].keep_head */
extern void T289f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].set_count */
extern void T289f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].keep_head */
extern void T286f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].set_count */
extern void T286f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].keep_head */
extern void T280f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].set_count */
extern void T280f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].keep_head */
extern void T277f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].set_count */
extern void T277f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].keep_head */
extern void T272f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].set_count */
extern void T272f9(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.abort */
extern void T68f1077(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_load_input_buffer */
extern void T68f1067(TC* ac, T0* C);
/* YY_UNICODE_FILE_BUFFER.set_file */
extern void T243f23(TC* ac, T0* C, T0* a1);
/* YY_UNICODE_FILE_BUFFER.set_file_with_size */
extern void T243f27(TC* ac, T0* C, T0* a1, T6 a2);
/* YY_UNICODE_FILE_BUFFER.flush */
extern void T243f29(TC* ac, T0* C);
/* YY_UNICODE_FILE_BUFFER.flush */
extern void T243f29p1(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T68f1069(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].wipe_out */
extern void T239f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].move_all_cursors_after */
extern void T239f26(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].wipe_out */
extern void T256f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_all_cursors_after */
extern void T256f17(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].wipe_out */
extern void T249f9(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].wipe_out */
extern void T248f9(TC* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].wipe_out */
extern void T245f9(TC* ac, T0* C);
/* YY_UNICODE_FILE_BUFFER.set_end_of_file */
extern void T243f24(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T68f1069p1(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T68f1069p0(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T68f1069p2(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.tmp_file */
extern T0* T68f1057(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_closed */
extern T1 T43f25(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.shared_file */
extern T0* T68f1059(TC* ac, T0* C);
/* ET_CLASS.reset_after_preparsed */
extern void T70f322(TC* ac, T0* C);
/* ET_ECF_CLUSTER.cluster */
extern T0* T89f40(TC* ac, T0* C);
/* ET_CLUSTER.cluster */
extern T0* T67f22(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.cluster */
extern T0* T262f11(TC* ac, T0* C);
/* ET_NONE_GROUP.cluster */
extern T0* T198f8(TC* ac, T0* C);
/* ET_CLASS.is_in_cluster */
extern T1 T70f67(TC* ac, T0* C);
/* MUTEX.try_lock */
extern T1 T159f4(TC* ac, T0* C);
/* MUTEX.eif_thr_mutex_trylock */
extern T1 T159s3(TC* ac, T14 a1);
/* ET_EIFFEL_PARSER.error_handler */
extern T0* T68f754(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_fatal_error */
extern void T68f2083(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_none_class */
extern void T68f2305(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.process_class */
extern void T237f22(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.internal_process_class */
extern void T237f25(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.post_action */
extern void T237f32(TC* ac, T0* C);
/* ET_CLASS.set_implementation_checked */
extern void T70f320(TC* ac, T0* C);
/* ET_CLASS.set_suppliers */
extern void T70f319(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].extend */
extern void T260f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].forth */
extern void T1167f14(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].put */
extern void T260f72(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].item */
extern T0* T1167f5(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].start */
extern void T1167f13(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_invariants_validity */
extern void T237f31(TC* ac, T0* C, T1 a1);
/* ET_BASE_TYPE_LIST.item */
extern T0* T778f4(TC* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.flat_mode */
extern T1 T237f17(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_invariants_validity */
extern void T857f82(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE.wipe_out */
extern void T880f12(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].wipe_out */
extern void T933f46(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].slots_wipe_out */
extern void T933f66(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].clashes_wipe_out */
extern void T933f65(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].key_storage_wipe_out */
extern void T933f64(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].item_storage_wipe_out */
extern void T933f63(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].unset_found_item */
extern void T933f55(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].move_all_cursors_after */
extern void T933f62(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_next_cursor */
extern void T1390f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_after */
extern void T1390f10(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.wipe_out */
extern void T879f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].wipe_out */
extern void T1320f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].move_all_cursors_after */
extern void T1320f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT].set_next_cursor */
extern void T1778f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT].set_after */
extern void T1778f6(TC* ac, T0* C);
/* ET_ITERATION_ITEM_SCOPE.wipe_out */
extern void T877f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].wipe_out */
extern void T1317f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].move_all_cursors_after */
extern void T1317f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT].set_next_cursor */
extern void T1777f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT].set_after */
extern void T1777f6(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_cursor_name */
extern T1 T613s17(TC* ac);
/* ET_ACROSS_EXPRESSION.has_cursor_name */
extern T1 T339f11(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_cursor_name */
extern T1 T624s14(TC* ac);
/* ET_ACROSS_INSTRUCTION.has_cursor_name */
extern T1 T342f10(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_for_iteration */
extern T0* T876f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_key */
extern T0* T876f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_storage_item */
extern T0* T876f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].wipe_out */
extern void T876f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].slots_wipe_out */
extern void T876f55(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].clashes_wipe_out */
extern void T876f54(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_storage_wipe_out */
extern void T876f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_storage_wipe_out */
extern void T876f52(TC* ac, T0* C);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].keep_head */
extern void T1308f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].set_count */
extern void T1308f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].unset_found_item */
extern void T876f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].move_all_cursors_after */
extern void T876f50(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].set_next_cursor */
extern void T1315f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].set_after */
extern void T1315f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].forth */
extern void T876f45(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_forth */
extern void T876f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].add_traversing_cursor */
extern void T876f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].set_position */
extern void T1315f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].remove_traversing_cursor */
extern void T876f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].clashes_item */
extern T6 T876f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_for_iteration */
extern T0* T876f23(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_item */
extern T0* T876f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_storage_item */
extern T0* T876f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].after */
extern T1 T876f25(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_after */
extern T1 T876f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].after */
extern T1 T1315f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].start */
extern void T876f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_start */
extern void T876f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_off */
extern T1 T876f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].off */
extern T1 T1315f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].is_empty */
extern T1 T876f40(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.wipe_out */
extern void T874f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].wipe_out */
extern void T1314f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T1314f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T1776f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].set_after */
extern void T1776f6(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].wipe_out */
extern void T873f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_wipe_out */
extern void T873f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_wipe_out */
extern void T873f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_wipe_out */
extern void T873f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_wipe_out */
extern void T873f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].unset_found_item */
extern void T873f47(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T873f46(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T1311f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_after */
extern void T1311f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].forth */
extern void T873f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_forth */
extern void T873f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].add_traversing_cursor */
extern void T873f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_position */
extern void T1311f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].remove_traversing_cursor */
extern void T873f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_item */
extern T6 T873f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_for_iteration */
extern T0* T873f23(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_item */
extern T0* T873f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_item */
extern T0* T873f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].after */
extern T1 T873f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_after */
extern T1 T873f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].after */
extern T1 T1311f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].start */
extern void T873f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_start */
extern void T873f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_off */
extern T1 T873f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].off */
extern T1 T1311f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].is_empty */
extern T1 T873f27(TC* ac, T0* C);
/* ET_INVARIANTS.set_validity_error */
extern void T539f35(TC* ac, T0* C);
/* ET_INVARIANTS.set_validity_checked */
extern void T539f34(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.free_context */
extern void T857f77(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.tokens */
extern T0* T857s55(TC* ac);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].force_last */
extern void T872f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].force */
extern void T1309s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].fill_with */
extern void T1308f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].extend */
extern void T1308f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].resize */
extern void T872f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T1309s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T1308f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_capacity */
extern T6 T872f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].extendible */
extern T1 T872f8(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_SCOPE.keep_object_tests */
extern void T874f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].keep_first */
extern void T1314f12(TC* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.build_scope */
extern void T881f4(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_INLINED_EXPRESSION.process */
extern void T980f24(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_inlined_expression */
extern void T881f62(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_inlined_expression */
extern void T875f68(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inlined_expression */
extern void T1131f106(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inlined_expression */
extern void T100f351(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_inlined_expression */
extern void T857f233(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_inlined_expression */
extern void T114f900(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inlined_expression */
extern void T114f963(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.remove_last */
extern void T858f13(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].keep_head */
extern void T1284s5(TC* ac, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].keep_head */
extern void T1283f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].set_count */
extern void T1283f10(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.fixed_array */
extern T0* T858f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].default_create */
extern T0* T1284c3(TC* ac);
/* ET_C_GENERATOR.new_inlined_operand */
extern T0* T114f350(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T114f350ot1(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].force_last */
extern void T944f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION].force */
extern void T1413s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].fill_with */
extern void T1412f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].extend */
extern void T1412f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].resize */
extern void T944f17(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION].aliased_resized_area */
extern T0* T1413s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].aliased_resized_area */
extern T0* T1412f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].new_capacity */
extern T6 T944f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].extendible */
extern T1 T944f9(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.set_context */
extern void T980f23(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.set_dynamic_type_set */
extern void T980f25(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.set_expression */
extern void T980f22(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].remove_last */
extern void T944f15(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].keep_head */
extern void T1412f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].set_count */
extern void T1412f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].move_last_cursors_after */
extern void T944f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION].set_next_cursor */
extern void T1414f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION].set_after */
extern void T1414f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].last */
extern T0* T944f7(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.make */
extern T0* T980c21(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_INLINED_EXPRESSION.make_inlined_expression */
extern void T980f26(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].is_empty */
extern T1 T944f6(TC* ac, T0* C);
/* ET_C_GENERATOR.dynamic_type_set */
extern T0* T114f314(TC* ac, T0* C, T0* a1);
extern T1 T114f314ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.valid_index */
extern T1 T929f3(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIS_EXPRESSION.index */
extern T6 T1544f4(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.index */
extern T6 T937f4(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_current */
extern T1 T2041f14(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_current */
extern T1 T2040f15(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_current */
extern T1 T2039f13(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_current */
extern T1 T1870f11(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.is_current */
extern T1 T1544f5(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_current */
extern T1 T679f13(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_current */
extern T1 T678f13(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_current */
extern T1 T677f13(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_current */
extern T1 T676f13(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_current */
extern T1 T674f11(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_current */
extern T1 T673f11(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_current */
extern T1 T671f12(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_current */
extern T1 T757f4(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_current */
extern T1 T613f15(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_current */
extern T1 T339f18(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_current */
extern T1 T756f7(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_current */
extern T1 T755f8(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_current */
extern T1 T753f11(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_current */
extern T1 T741f4(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_current */
extern T1 T1033f7(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T764f34(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T763f40(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T762f37(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_current */
extern T1 T761f36(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_current */
extern T1 T760f41(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_current */
extern T1 T759f38(TC* ac, T0* C);
/* ET_CALL_AGENT.is_current */
extern T1 T376f7(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_current */
extern T1 T630f7(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_current */
extern T1 T568f13(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_current */
extern T1 T559f7(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_current */
extern T1 T589f7(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_current */
extern T1 T373f5(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_current */
extern T1 T754f7(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_current */
extern T1 T752f4(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_current */
extern T1 T751f22(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_current */
extern T1 T750f7(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_current */
extern T1 T749f6(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_current */
extern T1 T748f6(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_current */
extern T1 T745f6(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_current */
extern T1 T744f4(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_current */
extern T1 T743f4(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_current */
extern T1 T742f4(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_current */
extern T1 T740f10(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_current */
extern T1 T627f9(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_current */
extern T1 T379f9(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_current */
extern T1 T530f7(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_current */
extern T1 T509f10(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_current */
extern T1 T685f10(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_current */
extern T1 T683f5(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_current */
extern T1 T681f11(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_current */
extern T1 T672f34(TC* ac, T0* C);
/* ET_RESULT.is_current */
extern T1 T318f5(TC* ac, T0* C);
/* ET_CURRENT.is_current */
extern T1 T297s8(TC* ac);
/* ET_DYNAMIC_INLINED_EXPRESSION.is_current */
extern T1 T980f5(TC* ac, T0* C);
/* ET_IDENTIFIER.is_current */
extern T1 T303f20(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_current */
extern T1 T684f5(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_current */
extern T1 T686f6(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_current */
extern T1 T680f8(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_current */
extern T1 T675f10(TC* ac, T0* C);
/* ET_VOID.is_current */
extern T1 T327f5(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.is_current */
extern T1 T937f7(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_current */
extern T1 T436f15(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_EXPRESSION].replace */
extern void T926f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].item */
extern T0* T926f7(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_giaac_error */
extern void T63f234(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_INTERNAL_ERROR.make_giaac */
extern T0* T1443c20(TC* ac, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_ERROR_HANDLER.report_giaac_error */
extern void T42f234(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* DS_ARRAYED_STACK [ET_EXPRESSION].is_empty */
extern T1 T926f6(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.set_index */
extern void T2041f29(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.set_index */
extern void T2040f32(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.set_index */
extern void T2039f24(TC* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.set_index */
extern void T1870f21(TC* ac, T0* C, T6 a1);
/* ET_ACROSS_EXPRESSION.set_index */
extern void T339f53(TC* ac, T0* C, T6 a1);
/* ET_CALL_AGENT.set_index */
extern void T376f38(TC* ac, T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.set_index */
extern void T373f31(TC* ac, T0* C, T6 a1);
/* ET_INSPECT_EXPRESSION.set_index */
extern void T530f31(TC* ac, T0* C, T6 a1);
/* ET_IF_EXPRESSION.set_index */
extern void T509f34(TC* ac, T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.set_index */
extern void T436f37(TC* ac, T0* C, T6 a1);
/* ET_RESULT.set_index */
extern void T318f41(TC* ac, T0* C, T6 a1);
/* ET_CURRENT.set_index */
extern void T297f41(TC* ac, T0* C, T6 a1);
/* ET_BINARY_INTEGER_CONSTANT.set_index */
extern void T679f72(TC* ac, T0* C, T6 a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_index */
extern void T678f72(TC* ac, T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_index */
extern void T677f72(TC* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_index */
extern void T676f72(TC* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.set_index */
extern void T674f58(TC* ac, T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.set_index */
extern void T673f54(TC* ac, T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.set_index */
extern void T671f55(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_CURSOR.set_index */
extern void T757f28(TC* ac, T0* C, T6 a1);
/* ET_QUANTIFIER_EXPRESSION.set_index */
extern void T613f45(TC* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.set_index */
extern void T756f32(TC* ac, T0* C, T6 a1);
/* ET_NAMED_OBJECT_TEST.set_index */
extern void T755f34(TC* ac, T0* C, T6 a1);
/* ET_OLD_OBJECT_TEST.set_index */
extern void T753f36(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.set_index */
extern void T741f28(TC* ac, T0* C, T6 a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_index */
extern void T1033f34(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_index */
extern void T764f55(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_index */
extern void T763f63(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_index */
extern void T762f58(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_index */
extern void T761f56(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_index */
extern void T760f64(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_index */
extern void T759f59(TC* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.set_index */
extern void T630f36(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.set_index */
extern void T568f34(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.set_index */
extern void T559f37(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.set_index */
extern void T589f29(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST.set_index */
extern void T754f31(TC* ac, T0* C, T6 a1);
/* ET_OLD_EXPRESSION.set_index */
extern void T752f28(TC* ac, T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.set_index */
extern void T751f32(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TYPE.set_index */
extern void T750f28(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_index */
extern void T749f29(TC* ac, T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.set_index */
extern void T748f27(TC* ac, T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.set_index */
extern void T745f32(TC* ac, T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.set_index */
extern void T744f28(TC* ac, T0* C, T6 a1);
/* ET_RESULT_ADDRESS.set_index */
extern void T743f28(TC* ac, T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.set_index */
extern void T742f28(TC* ac, T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.set_index */
extern void T740f34(TC* ac, T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.set_index */
extern void T627f38(TC* ac, T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.set_index */
extern void T685f54(TC* ac, T0* C, T6 a1);
/* ET_TRUE_CONSTANT.set_index */
extern void T683f47(TC* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_index */
extern void T681f50(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.set_index */
extern void T672f48(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.set_index */
extern void T980f27(TC* ac, T0* C, T6 a1);
/* ET_FALSE_CONSTANT.set_index */
extern void T684f42(TC* ac, T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.set_index */
extern void T686f50(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.set_index */
extern void T680f44(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_index */
extern void T675f66(TC* ac, T0* C, T6 a1);
/* ET_VOID.set_index */
extern void T327f33(TC* ac, T0* C, T6 a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_index */
extern void T379f30(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.force_last */
extern void T858f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].force */
extern void T1284s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].fill_with */
extern void T1283f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].extend */
extern void T1283f9(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.resize */
extern void T858f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T1284s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T1283f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.new_capacity */
extern T6 T858f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.capacity */
extern T6 T858f6(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_giaab_error */
extern void T63f235(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_INTERNAL_ERROR.make_giaab */
extern T0* T1443c21(TC* ac, T0* a1, T0* a2, T6 a3);
/* ET_ERROR_HANDLER.report_giaab_error */
extern void T42f235(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONVERT_TO_EXPRESSION.process */
extern void T2041f27(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_to_expression */
extern void T1131f117(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_to_expression */
extern void T881f65(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_to_expression */
extern void T875f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_to_expression */
extern void T100f580(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_to_expression_validity */
extern void T100f583(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_expression_validity */
extern void T100f272(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T100f272ot1(TC* ac, T0* a1);
extern T1 T100f272ot2(TC* ac, T0* a1);
extern T1 T100f272ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_adapted_base_classes */
extern void T100f271(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].force_last */
extern void T885f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].force */
extern void T1335s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].fill_with */
extern void T1336f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].extend */
extern void T1336f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].resize */
extern void T885f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].aliased_resized_area */
extern T0* T1335s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].aliased_resized_area */
extern T0* T1336f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].new_capacity */
extern T6 T885f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].extendible */
extern T1 T885f6(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_context */
extern void T100f112(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tokens */
extern T0* T100s71(TC* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_context */
extern T0* T100f94(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove_last */
extern void T872f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_last_cursors_after */
extern void T872f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_next_cursor */
extern void T1310f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_after */
extern void T1310f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].last */
extern T0* T872f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].is_empty */
extern T1 T872f10(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgmc0f_error */
extern void T63f355(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgmc0f */
extern T0* T1445c1043(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vgmc0f_error */
extern void T42f355(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vuex2a_error */
extern void T63f353(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuex2a */
extern T0* T1445c1041(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T63f72(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex2a_error */
extern void T42f353(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T42f72(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_expression_validity */
extern void T100f360(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TOKEN_CONSTANTS.controlled_type_modifier */
extern T0* T81s921(TC* ac);
/* ET_LIKE_CURRENT.set_controlled */
extern void T199f94(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.separate_type_modifier */
extern T0* T81s599(TC* ac);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_separate */
extern T1 T691f40(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_separate_with_type_mark */
extern T1 T691f24(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T691f24ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_separate */
extern T1 T691f28(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_separate */
extern T1 T500f29(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_type_separate_with_type_mark */
extern T1 T848f28(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T848f28ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_separate_with_type_mark */
extern T1 T725f29(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T725f29ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_separate_with_type_mark */
extern T1 T724f30(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T724f30ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.is_type_separate_with_type_mark */
extern T1 T722f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_separate_with_type_mark */
extern T1 T199f15(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.is_type_separate_with_type_mark */
extern T1 T847f28(TC* ac, T0* C, T0* a1);
extern T1 T847f28ot1(TC* ac, T0* a1);
/* ET_LIKE_N.is_type_separate_with_type_mark */
extern T1 T1844f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_is_type_separate_with_type_mark */
extern T1 T183f41(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_separate_with_type_mark */
extern T1 T70f155(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_separate_with_type_mark */
extern T1 T102f41(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_separate_with_type_mark */
extern T1 T500f23(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T500f23ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_separate */
extern T1 T500f42(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_separate */
extern T1 T848f12(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_expression */
extern void T100f451(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f451ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_qualified_call_target_dynamic_types */
extern void T100f362(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_query_call */
extern void T1049f81(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.put_query_call */
extern void T860f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].force */
extern void T1277f35(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].key_storage_put */
extern void T1277f43(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].force */
extern void T1764s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CALL_NAME].fill_with */
extern void T1760f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_NAME].extend */
extern void T1760f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].slots_put */
extern void T1277f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].clashes_put */
extern void T1277f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].slots_item */
extern T6 T1277f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].clashes_item */
extern T6 T1277f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].hash_position */
extern T6 T1277f26(TC* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_SYMBOL.hash_code */
extern T6 T1859f4(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.hash_code */
extern T6 T747f17(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.hash_code */
extern T6 T746f17(TC* ac, T0* C);
/* ET_FREE_OPERATOR.hash_code */
extern T6 T300f2(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.hash_code */
extern T6 T309f25(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.hash_code */
extern T6 T324f98(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.hash_code */
extern T6 T333f87(TC* ac, T0* C);
/* ET_IDENTIFIER.hash_code */
extern T6 T303f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].resize */
extern void T1277f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].clashes_resize */
extern void T1277f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].special_integer_ */
extern T0* T1277s32(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].key_storage_resize */
extern void T1277f47(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].aliased_resized_area */
extern T0* T1764s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_NAME].aliased_resized_area */
extern T0* T1760f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].item_storage_resize */
extern void T1277f46(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL].aliased_resized_area */
extern T0* T1767s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL].aliased_resized_area */
extern T0* T1765f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].key_storage_item */
extern T0* T1277f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].slots_resize */
extern void T1277f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].new_modulus */
extern T6 T1277f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].new_capacity */
extern T6 T1277f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].item_storage_put */
extern void T1277f39(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL].force */
extern void T1767s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL].fill_with */
extern void T1765f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL].extend */
extern void T1765f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].search_position */
extern void T1277f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].unset_found_item */
extern void T1277f37(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.put_query_call */
extern void T845f59(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_next */
extern void T888f16(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_query_call */
extern void T1048f81(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_query_call */
extern void T894f82(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_query_call */
extern void T966f84(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.put_query_call */
extern void T838f81(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.make */
extern T0* T888c15(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_dynamic_type_set */
extern void T100f246(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.put */
extern void T858f17(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.set_index */
extern void T1868f7(TC* ac, T0* C, T6 a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.set_index */
extern void T766f15(TC* ac, T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.set_index */
extern void T336f51(TC* ac, T0* C, T6 a1);
/* ET_AGENT_OPEN_TARGET.set_index */
extern void T765f13(TC* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.set_index */
extern void T1580f10(TC* ac, T0* C, T6 a1);
/* ET_AGENT_OPEN_TARGET.index */
extern T6 T765f4(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.index */
extern T6 T1580f1(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dynamic_type_set */
extern T0* T100f78(TC* ac, T0* C, T0* a1);
/* ET_CLASS.formal_parameter_type */
extern T0* T70f128(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].replace */
extern void T1453f11(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].item */
extern T0* T1453f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].put_last */
extern void T1453f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].force */
extern void T1900s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].fill_with */
extern void T1899f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].extend */
extern void T1899f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].resize */
extern void T1453f9(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T1900s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T1899f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1453c8(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].set_internal_cursor */
extern void T1453f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].new_cursor */
extern T0* T1453f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1901c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1900s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].make_empty */
extern T0* T1899c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].default_create */
extern T0* T1900c3(TC* ac);
/* ET_NULL_ERROR_HANDLER.report_vuar1c_error */
extern void T63f426(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar1c */
extern T0* T1445c1114(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T63f108(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar1c_error */
extern void T42f426(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T42f108(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.arguments_count */
extern T6 T2041f25(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.arguments_count */
extern T6 T751f21(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.arguments_count */
extern T6 T745f21(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.arguments_count */
extern T6 T1544f9(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuta4gb_error */
extern void T63f425(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuta4gb */
extern T0* T1445c1113(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuta4g_error */
extern T1 T63f107(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuta4gb_error */
extern void T42f425(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuta4g_error */
extern T1 T42f107(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_controlled */
extern T1 T847f34(TC* ac, T0* C);
extern T1 T847f34ot1(TC* ac, T0* a1);
/* ET_LIKE_N.is_controlled */
extern T1 T1844f18(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_controlled */
extern T1 T691f60(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_controlled */
extern T1 T500f62(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_controlled */
extern T1 T722f68(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_controlled */
extern T1 T725f67(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_controlled */
extern T1 T724f70(TC* ac, T0* C);
/* ET_LIKE_CURRENT.is_controlled */
extern T1 T199f4(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_controlled */
extern T1 T848f61(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_controlled */
extern T1 T183f97(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_controlled */
extern T1 T102f80(TC* ac, T0* C);
/* ET_CLASS.is_controlled */
extern T1 T70f239(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_non_separate */
extern T1 T847f33(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_non_separate_with_type_mark */
extern T1 T847f53(TC* ac, T0* C, T0* a1);
extern T1 T847f53ot1(TC* ac, T0* a1);
/* ET_LIKE_N.is_type_non_separate_with_type_mark */
extern T1 T1844f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_non_separate_with_type_mark */
extern T1 T691f63(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T691f63ot1(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.is_type_non_separate */
extern T1 T183f72(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_non_separate */
extern T1 T70f254(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.is_type_non_separate */
extern T1 T1884f9(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.has_non_separate_type */
extern T1 T1671f11(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_non_separate */
extern T1 T102f72(TC* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.is_non_separate_mark */
extern T1 T176f6(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_type_non_separate_with_type_mark */
extern T1 T500f65(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T500f65ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.is_type_non_separate_with_type_mark */
extern T1 T722f61(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_non_separate_with_type_mark */
extern T1 T725f61(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T725f61ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_non_separate_with_type_mark */
extern T1 T724f64(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T724f64ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.is_type_non_separate_with_type_mark */
extern T1 T199f52(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_is_type_non_separate_with_type_mark */
extern T1 T183f92(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_non_separate_with_type_mark */
extern T1 T102f93(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_non_separate_with_type_mark */
extern T1 T70f236(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_non_separate_with_type_mark */
extern T1 T848f59(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T848f59ot1(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.is_type_non_separate_with_type_mark */
extern T1 T183f82(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_non_separate_with_type_mark */
extern T1 T102f89(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_non_separate_with_type_mark */
extern T1 T70f243(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuta2b_error */
extern void T63f424(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuta2b */
extern T0* T1445c1112(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T63f106(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuta2b_error */
extern void T42f424(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T42f106(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_tuple_label_parenthesis_call_validity */
extern void T100f270(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T100f270ot1(TC* ac, T0* a1);
extern T1 T100f270ot2(TC* ac, T0* a1);
extern T1 T100f270ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_expression_validity */
extern void T100f359(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T100f359ot1(TC* ac, T0* a1);
extern T1 T100f359ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_instruction_validity */
extern void T100f358(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T100f358ot1(TC* ac, T0* a1);
extern T1 T100f358ot2(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn1a_error */
extern void T63f488(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn1a */
extern T0* T1445c1176(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_KEYWORD.lower_name */
extern T0* T279f22(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.position */
extern T0* T279f10(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T63f130(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn1a_error */
extern void T42f488(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T42f130(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_instruction_validity */
extern void T100f268(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_instruction */
extern void T100f275(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FUNCTION_TYPE.put_procedure_call */
extern void T1049f95(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.put_procedure_call */
extern void T860f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].force */
extern void T1276f43(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].key_storage_put */
extern void T1276f49(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].slots_put */
extern void T1276f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].clashes_put */
extern void T1276f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].slots_item */
extern T6 T1276f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].clashes_item */
extern T6 T1276f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].hash_position */
extern T6 T1276f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].resize */
extern void T1276f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].clashes_resize */
extern void T1276f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].special_integer_ */
extern T0* T1276s33(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].key_storage_resize */
extern void T1276f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].item_storage_resize */
extern void T1276f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].aliased_resized_area */
extern T0* T1763s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].aliased_resized_area */
extern T0* T1758f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].key_storage_item */
extern T0* T1276f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].slots_resize */
extern void T1276f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].new_modulus */
extern T6 T1276f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].new_capacity */
extern T6 T1276f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].item_storage_put */
extern void T1276f45(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].force */
extern void T1763s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].fill_with */
extern void T1758f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].extend */
extern void T1758f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].search_position */
extern void T1276f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].unset_found_item */
extern void T1276f41(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.put_procedure_call */
extern void T845f65(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_next */
extern void T889f16(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_procedure_call */
extern void T1048f95(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_procedure_call */
extern void T894f91(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_procedure_call */
extern void T966f93(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.put_procedure_call */
extern void T838f89(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.make */
extern T0* T889c13(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PARENTHESIS_INSTRUCTION.target */
extern T0* T1862f1(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.target */
extern T0* T736f1(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.target */
extern T0* T726f12(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_validity */
extern void T100f354(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.reset_fatal_error */
extern void T100f370(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_arguments_validity */
extern void T100f373(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T100f373ot1(TC* ac, T0* a1);
extern T1 T100f373ot2(TC* ac, T0* a1);
extern T1 T100f373ot3(TC* ac, T0* a1);
extern T1 T100f373ot4(TC* ac, T0* a1);
extern T1 T100f373ot5(TC* ac, T0* a1);
extern T1 T100f373ot6(TC* ac, T0* a1);
extern T1 T100f373ot7(TC* ac, T0* a1);
extern T1 T100f373ot8(TC* ac, T0* a1);
extern T1 T100f373ot9(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar3ga_error */
extern void T63f498(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar3ga */
extern T0* T1445c1186(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vuar3g_error */
extern T1 T63f133(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar3ga_error */
extern void T42f498(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vuar3g_error */
extern T1 T42f133(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_separate */
extern T1 T847f43(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_expanded */
extern T1 T847f39(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T847f27(TC* ac, T0* C, T0* a1);
extern T1 T847f27ot1(TC* ac, T0* a1);
/* ET_LIKE_N.is_type_expanded_with_type_mark */
extern T1 T1844f11(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T691f23(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T691f23ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T500f22(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T500f22ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.is_type_expanded_with_type_mark */
extern T1 T722f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_expanded_with_type_mark */
extern T1 T725f28(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T725f28ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded_with_type_mark */
extern T1 T724f29(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T724f29ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.is_type_expanded_with_type_mark */
extern T1 T199f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T183f40(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_expanded_with_type_mark */
extern T1 T70f154(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T102f40(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded_with_type_mark */
extern T1 T848f27(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T848f27ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2b_error */
extern void T63f497(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vuar2b */
extern T0* T1445c1185(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T63f132(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar2b_error */
extern void T42f497(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T42f132(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2a_error */
extern void T63f496(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar2a */
extern T0* T1445c1184(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vuar2a_error */
extern void T42f496(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vdpr4b_error */
extern void T63f495(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vdpr4b */
extern T0* T1445c1183(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T63f131(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr4b_error */
extern void T42f495(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T42f131(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_converted_target_infix_expression_validity */
extern void T100f461(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_INFIX_EXPRESSION.set_left */
extern void T745f35(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type */
extern T1 T847f40(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_CAST_EXPRESSION.make */
extern T0* T1870c20(TC* ac, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.set_right */
extern void T745f34(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.put */
extern void T1866f18(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_ACTUAL_ARGUMENT_LIST.put */
extern void T345f24(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.convert_expression */
extern T0* T100f83(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_conversion */
extern void T100f570(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_BUILTIN_EXPRESSION.make */
extern T0* T2039c21(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_expression */
extern void T100f448(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T100f448ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_SYSTEM.separate_type */
extern T0* T95f82(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.detachable_separate_type */
extern T0* T95f83(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.separate_type */
extern T0* T1049f8(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.separate_type */
extern T0* T1048f8(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.separate_type */
extern T0* T894f8(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.separate_type */
extern T0* T966f8(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.separate_type */
extern T0* T838f8(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.attached_separate_type */
extern T0* T95f63(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.attached_separate_type_modifier */
extern T0* T81s598(TC* ac);
/* ET_DYNAMIC_FUNCTION_TYPE.attached_separate_type */
extern T0* T1049f9(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.attached_separate_type */
extern T0* T1048f9(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.attached_separate_type */
extern T0* T966f9(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.attached_separate_type */
extern T0* T894f9(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.attached_separate_type */
extern T0* T838f9(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_attached */
extern T1 T1049f34(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_attached */
extern T1 T1048f34(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_attached */
extern T1 T894f40(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_attached */
extern T1 T966f40(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_attached */
extern T1 T838f31(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.is_attached */
extern T1 T969f11(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_separate */
extern T1 T1049s45(TC* ac);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_separate */
extern T1 T1048s45(TC* ac);
/* ET_DYNAMIC_SPECIAL_TYPE.is_separate */
extern T1 T966s51(TC* ac);
/* ET_DYNAMIC_TUPLE_TYPE.is_separate */
extern T1 T894s50(TC* ac);
/* ET_DYNAMIC_SECONDARY_TYPE.is_separate */
extern T1 T969f23(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_separate */
extern T1 T838s36(TC* ac);
/* ET_AST_FACTORY.new_convert_to_expression */
extern T0* T65f373(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_TO_EXPRESSION.make */
extern T0* T2041c26(TC* ac, T0* a1, T0* a2);
/* ET_CONVERT_TO_EXPRESSION.position */
extern T0* T2041f22(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.position */
extern T0* T2040f22(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.position */
extern T0* T2039f18(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.position */
extern T0* T1870f13(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.position */
extern T0* T980f8(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.position */
extern T0* T757f10(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.position */
extern T0* T613f22(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.position */
extern T0* T339f25(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.position */
extern T0* T756f11(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.position */
extern T0* T755f14(TC* ac, T0* C);
/* ET_VOID.is_null_position */
extern T1 T327f27(TC* ac, T0* C);
/* ET_RESULT.is_null_position */
extern T1 T318f29(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_null_position */
extern T1 T300f34(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_null_position */
extern T1 T279f21(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.is_null_position */
extern T1 T276f12(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.position */
extern T0* T753f17(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.position */
extern T0* T741f10(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.position */
extern T0* T1033f11(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.position */
extern T0* T764f21(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.position */
extern T0* T276f9(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.position */
extern T0* T763f26(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.position */
extern T0* T762f24(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.position */
extern T0* T761f23(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.position */
extern T0* T760f27(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.position */
extern T0* T759f25(TC* ac, T0* C);
/* ET_CALL_AGENT.position */
extern T0* T376f15(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.position */
extern T0* T765f7(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.position */
extern T0* T1580f7(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T764f40(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T764f41(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T763f46(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T763f47(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T762f42(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T762f43(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T761f41(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T761f42(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T760f47(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T760f48(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T759f43(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T759f44(TC* ac, T0* C);
/* ET_CALL_AGENT.implicit_target_position */
extern T0* T376f32(TC* ac, T0* C);
/* ET_IDENTIFIER.first_leaf */
extern T0* T303f113(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.position */
extern T0* T630f14(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.item */
extern T0* T630f21(TC* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.is_empty */
extern T1 T630f20(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.position */
extern T0* T568f16(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_empty */
extern T1 T568f22(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T559f15(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T559f15p1(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.item */
extern T0* T559f21(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.is_empty */
extern T1 T559f22(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.position */
extern T0* T589f11(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.position */
extern T0* T373f12(TC* ac, T0* C);
/* ET_OBJECT_TEST.position */
extern T0* T754f13(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.position */
extern T0* T752f10(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.position */
extern T0* T751f12(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.position */
extern T0* T750f11(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.position */
extern T0* T749f10(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.position */
extern T0* T748f10(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.position */
extern T0* T745f12(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.position */
extern T0* T744f10(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.position */
extern T0* T743f10(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.position */
extern T0* T742f10(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.position */
extern T0* T740f15(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.position */
extern T0* T627f15(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.position */
extern T0* T379f11(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.position */
extern T0* T530f12(TC* ac, T0* C);
/* ET_KEYWORD_EXPRESSION.position */
extern T0* T1450f3(TC* ac, T0* C);
/* ET_IF_EXPRESSION.position */
extern T0* T509f16(TC* ac, T0* C);
/* ET_RESULT.position */
extern T0* T318f16(TC* ac, T0* C);
/* ET_VOID.position */
extern T0* T327f15(TC* ac, T0* C);
/* ET_CONVERT_PROCEDURE.is_convert_to */
extern T1 T700f7(TC* ac, T0* C);
/* ET_CONVERT_FUNCTION.is_convert_to */
extern T1 T699s6(TC* ac);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_to */
extern T1 T186f5(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_expression */
extern void T100f551(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FROM_EXPRESSION.separate_target */
extern T0* T2040f21(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.tokens */
extern T0* T2040s25(TC* ac);
/* ET_CREATE_EXPRESSION.separate_target */
extern T0* T436f11(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_operand_dynamic_types */
extern void T100f462(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.set_creation */
extern void T860f61(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_creation */
extern void T845f58(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_SYSTEM.set_has_separate_creation */
extern void T95f117(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_separate_creation */
extern void T860f63(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.has_separate_argument */
extern T1 T860f34(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.arguments_count */
extern T6 T714f48(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.arguments_count */
extern T6 T713f46(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.arguments_count */
extern T6 T712f46(TC* ac, T0* C);
/* ET_DO_PROCEDURE.arguments_count */
extern T6 T711f32(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.arguments_count */
extern T6 T710f42(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.arguments_count */
extern T6 T708f38(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.arguments_count */
extern T6 T707f41(TC* ac, T0* C);
/* ET_DO_FUNCTION.arguments_count */
extern T6 T706f40(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments_count */
extern T6 T705f36(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments_count */
extern T6 T704f34(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.arguments_count */
extern T6 T703f39(TC* ac, T0* C);
/* ET_ATTRIBUTE.arguments_count */
extern T6 T702f32(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.set_separate_creation */
extern void T845f63(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.has_separate_argument */
extern T1 T845f34(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_procedure */
extern T0* T1049f48(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_procedure */
extern T0* T1048f48(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_procedure */
extern T0* T894f53(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_procedure */
extern T0* T966f56(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.dynamic_procedure */
extern T0* T838f40(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_vape_validity */
extern void T100f522(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vape2a_error */
extern void T63f538(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape2a */
extern T0* T1445c1226(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vape2_error */
extern T1 T63f153(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vape2a_error */
extern void T42f538(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vape2_error */
extern T1 T42f153(TC* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.client */
extern T0* T182f4(TC* ac, T0* C, T6 a1);
/* ET_CLIENT.client */
extern T0* T189f4(TC* ac, T0* C);
/* ET_CLIENT_LIST.item */
extern T0* T182f8(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.as_feature */
extern T0* T714f60(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.as_feature */
extern T0* T712f55(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.as_feature */
extern T0* T710f65(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.as_feature */
extern T0* T708f56(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.as_feature */
extern T0* T707f60(TC* ac, T0* C);
/* ET_DO_FUNCTION.as_feature */
extern T0* T706f58(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_feature */
extern T0* T705f58(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_feature */
extern T0* T704f57(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.as_feature */
extern T0* T703f58(TC* ac, T0* C);
/* ET_ATTRIBUTE.as_feature */
extern T0* T702f52(TC* ac, T0* C);
/* ET_DO_PROCEDURE.as_feature */
extern T0* T711f53(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.as_feature */
extern T0* T713f51(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.add_non_descendant_caller_clients_to */
extern void T100f464(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLIENT_LIST.force_first */
extern void T182f17(TC* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.resize */
extern void T182f18(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T1081s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T1080f4(TC* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.new_capacity */
extern T6 T182f10(TC* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.capacity */
extern T6 T182f9(TC* ac, T0* C);
/* ET_CLIENTS.client */
extern T0* T267f8(TC* ac, T0* C, T6 a1);
/* ET_CLIENTS.item */
extern T0* T267f11(TC* ac, T0* C, T6 a1);
/* ET_CLIENTS.is_none_or_unknown */
extern T1 T267f7(TC* ac, T0* C);
/* ET_CLIENT_LIST.is_none_or_unknown */
extern T1 T182f5(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.clients */
extern T0* T714f8(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.clients */
extern T0* T712f9(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.clients */
extern T0* T710f10(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.clients */
extern T0* T708f8(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.clients */
extern T0* T707f11(TC* ac, T0* C);
/* ET_DO_FUNCTION.clients */
extern T0* T706f11(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.clients */
extern T0* T705f4(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.clients */
extern T0* T704f5(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.clients */
extern T0* T703f10(TC* ac, T0* C);
/* ET_ATTRIBUTE.clients */
extern T0* T702f4(TC* ac, T0* C);
/* ET_DO_PROCEDURE.clients */
extern T0* T711f5(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.clients */
extern T0* T713f7(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.add_creation_clients_to */
extern void T714f116(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR_LIST.add_creation_clients_to */
extern void T80f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.add_creation_clients_to */
extern void T82f20(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLIENT_LIST.append_first */
extern void T182f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.any_clients */
extern T0* T802f24(TC* ac, T0* C);
/* ET_ECF_SYSTEM.any_clients */
extern T0* T87f27(TC* ac, T0* C);
/* ET_SYSTEM.any_clients */
extern T0* T50f26(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.add_creation_clients_to */
extern void T713f106(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.add_creation_clients_to */
extern void T712f112(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.add_creation_clients_to */
extern void T711f109(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLIENT_LIST.wipe_out */
extern void T182f16(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].keep_head */
extern void T1081s5(TC* ac, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT_ITEM].keep_head */
extern void T1080f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_ITEM].set_count */
extern void T1080f10(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.is_feature */
extern T1 T714s59(TC* ac);
/* ET_ONCE_PROCEDURE.is_feature */
extern T1 T712s54(TC* ac);
/* ET_EXTERNAL_FUNCTION.is_feature */
extern T1 T710s64(TC* ac);
/* ET_DEFERRED_FUNCTION.is_feature */
extern T1 T708s55(TC* ac);
/* ET_ONCE_FUNCTION.is_feature */
extern T1 T707s59(TC* ac);
/* ET_DO_FUNCTION.is_feature */
extern T1 T706s57(TC* ac);
/* ET_UNIQUE_ATTRIBUTE.is_feature */
extern T1 T705s57(TC* ac);
/* ET_CONSTANT_ATTRIBUTE.is_feature */
extern T1 T704s56(TC* ac);
/* ET_EXTENDED_ATTRIBUTE.is_feature */
extern T1 T703s57(TC* ac);
/* ET_ATTRIBUTE.is_feature */
extern T1 T702s51(TC* ac);
/* ET_DO_PROCEDURE.is_feature */
extern T1 T711s52(TC* ac);
/* ET_DEFERRED_PROCEDURE.is_feature */
extern T1 T713s50(TC* ac);
/* ET_NULL_ERROR_HANDLER.report_vgcc6c_error */
extern void T63f521(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6c */
extern T0* T1445c1209(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T63f55(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc6c_error */
extern void T42f521(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T42f55(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_PROCEDURE.name */
extern T0* T700f1(TC* ac, T0* C);
/* ET_CONVERT_FUNCTION.name */
extern T0* T699f1(TC* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.name */
extern T0* T186f1(TC* ac, T0* C);
/* ET_AST_FACTORY.new_convert_from_expression */
extern T0* T65f372(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_FROM_EXPRESSION.make */
extern T0* T2040c29(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_PROCEDURE.is_convert_from */
extern T1 T700s8(TC* ac);
/* ET_CONVERT_FUNCTION.is_convert_from */
extern T1 T699f7(TC* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_from */
extern T1 T186f4(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2041f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FROM_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2040f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_BUILTIN_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2039f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_CAST_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1870f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_INLINED_EXPRESSION.manifest_constant_convert_feature */
extern T0* T980f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER.manifest_constant_convert_feature */
extern T0* T303f83(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BINARY_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T679f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.real_64_convert_feature */
extern T0* T802f75(TC* ac, T0* C);
/* ET_ECF_SYSTEM.real_64_convert_feature */
extern T0* T87f78(TC* ac, T0* C);
/* ET_SYSTEM.real_64_convert_feature */
extern T0* T50f77(TC* ac, T0* C);
/* ET_ECF_LIBRARY.real_64_type */
extern T0* T802f74(TC* ac, T0* C);
/* ET_ECF_SYSTEM.real_64_type */
extern T0* T87f77(TC* ac, T0* C);
/* ET_SYSTEM.real_64_type */
extern T0* T50f76(TC* ac, T0* C);
/* ET_ECF_LIBRARY.real_32_convert_feature */
extern T0* T802f73(TC* ac, T0* C);
/* ET_ECF_SYSTEM.real_32_convert_feature */
extern T0* T87f76(TC* ac, T0* C);
/* ET_SYSTEM.real_32_convert_feature */
extern T0* T50f75(TC* ac, T0* C);
/* ET_ECF_LIBRARY.real_32_type */
extern T0* T802f72(TC* ac, T0* C);
/* ET_ECF_SYSTEM.real_32_type */
extern T0* T87f75(TC* ac, T0* C);
/* ET_SYSTEM.real_32_type */
extern T0* T50f74(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_64_convert_feature */
extern T0* T802f65(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_64_convert_feature */
extern T0* T87f68(TC* ac, T0* C);
/* ET_SYSTEM.natural_64_convert_feature */
extern T0* T50f67(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_64 */
extern T1 T679f36(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_negative */
extern T1 T679f15(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_minus */
extern T1 T324f83(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_64_type */
extern T0* T802f64(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_64_type */
extern T0* T87f67(TC* ac, T0* C);
/* ET_SYSTEM.natural_64_type */
extern T0* T50f66(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_32_convert_feature */
extern T0* T802f63(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_32_convert_feature */
extern T0* T87f66(TC* ac, T0* C);
/* ET_SYSTEM.natural_32_convert_feature */
extern T0* T50f65(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_32 */
extern T1 T679f35(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_32_type */
extern T0* T802f62(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_32_type */
extern T0* T87f65(TC* ac, T0* C);
/* ET_SYSTEM.natural_32_type */
extern T0* T50f64(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_16_convert_feature */
extern T0* T802f61(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_16_convert_feature */
extern T0* T87f64(TC* ac, T0* C);
/* ET_SYSTEM.natural_16_convert_feature */
extern T0* T50f63(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_16 */
extern T1 T679f34(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_16_type */
extern T0* T802f60(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_16_type */
extern T0* T87f63(TC* ac, T0* C);
/* ET_SYSTEM.natural_16_type */
extern T0* T50f62(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_8_convert_feature */
extern T0* T802f59(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_8_convert_feature */
extern T0* T87f62(TC* ac, T0* C);
/* ET_SYSTEM.natural_8_convert_feature */
extern T0* T50f61(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_8 */
extern T1 T679f33(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_8_type */
extern T0* T802f58(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_8_type */
extern T0* T87f61(TC* ac, T0* C);
/* ET_SYSTEM.natural_8_type */
extern T0* T50f60(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_64_convert_feature */
extern T0* T802f54(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_64_convert_feature */
extern T0* T87f57(TC* ac, T0* C);
/* ET_SYSTEM.integer_64_convert_feature */
extern T0* T50f56(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_64 */
extern T1 T679f32(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T679f48(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_64_type */
extern T0* T802f53(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_64_type */
extern T0* T87f56(TC* ac, T0* C);
/* ET_SYSTEM.integer_64_type */
extern T0* T50f55(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_32_convert_feature */
extern T0* T802f52(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_32_convert_feature */
extern T0* T87f55(TC* ac, T0* C);
/* ET_SYSTEM.integer_32_convert_feature */
extern T0* T50f54(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_32 */
extern T1 T679f31(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T679f47(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_32_type */
extern T0* T802f51(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_32_type */
extern T0* T87f54(TC* ac, T0* C);
/* ET_SYSTEM.integer_32_type */
extern T0* T50f53(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_16_convert_feature */
extern T0* T802f50(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_16_convert_feature */
extern T0* T87f53(TC* ac, T0* C);
/* ET_SYSTEM.integer_16_convert_feature */
extern T0* T50f52(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_16 */
extern T1 T679f30(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T679f46(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_16_type */
extern T0* T802f49(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_16_type */
extern T0* T87f52(TC* ac, T0* C);
/* ET_SYSTEM.integer_16_type */
extern T0* T50f51(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_8_convert_feature */
extern T0* T802f48(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_8_convert_feature */
extern T0* T87f51(TC* ac, T0* C);
/* ET_SYSTEM.integer_8_convert_feature */
extern T0* T50f50(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_8 */
extern T1 T679f29(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T679f45(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_8_type */
extern T0* T802f47(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_8_type */
extern T0* T87f50(TC* ac, T0* C);
/* ET_SYSTEM.integer_8_type */
extern T0* T50f49(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T678f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T678f36(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_negative */
extern T1 T678f15(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T678f35(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T678f34(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T678f33(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T678f32(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T678f48(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T678f31(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T678f47(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T678f30(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T678f46(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T678f29(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T678f45(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T677f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T677f36(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_negative */
extern T1 T677f15(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T677f35(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T677f34(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T677f33(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T677f32(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T677f48(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T677f31(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T677f47(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T677f30(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T677f46(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T677f29(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T677f45(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T676f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_64 */
extern T1 T676f36(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_negative */
extern T1 T676f15(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_32 */
extern T1 T676f35(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_16 */
extern T1 T676f34(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_8 */
extern T1 T676f33(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_64 */
extern T1 T676f32(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T676f48(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_32 */
extern T1 T676f31(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T676f47(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_16 */
extern T1 T676f30(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T676f46(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_8 */
extern T1 T676f29(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T676f45(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T675f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_64 */
extern T1 T675f38(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_negative */
extern T1 T675f53(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_32 */
extern T1 T675f37(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_16 */
extern T1 T675f36(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_8 */
extern T1 T675f35(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_64 */
extern T1 T675f34(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T675f48(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_32 */
extern T1 T675f33(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T675f25(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_16 */
extern T1 T675f32(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T675f47(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_8 */
extern T1 T675f31(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T675f46(TC* ac, T0* C);
/* ET_VERBATIM_STRING.manifest_constant_convert_feature */
extern T0* T674f40(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.string_32_convert_feature */
extern T0* T802f86(TC* ac, T0* C);
/* ET_ECF_SYSTEM.string_32_convert_feature */
extern T0* T87f89(TC* ac, T0* C);
/* ET_SYSTEM.string_32_convert_feature */
extern T0* T50f88(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_string_32 */
extern T1 T674f32(TC* ac, T0* C);
/* UC_UTF8_ROUTINES.is_string_32 */
extern T1 T167s52(TC* ac, T0* a1);
/* ET_VERBATIM_STRING.has_invalid_code */
extern T1 T674f37(TC* ac, T0* C);
/* ET_ECF_LIBRARY.string_32_type */
extern T0* T802f85(TC* ac, T0* C);
/* ET_ECF_SYSTEM.string_32_type */
extern T0* T87f88(TC* ac, T0* C);
/* ET_SYSTEM.string_32_type */
extern T0* T50f87(TC* ac, T0* C);
/* ET_ECF_LIBRARY.string_8_convert_feature */
extern T0* T802f84(TC* ac, T0* C);
/* ET_ECF_SYSTEM.string_8_convert_feature */
extern T0* T87f87(TC* ac, T0* C);
/* ET_SYSTEM.string_8_convert_feature */
extern T0* T50f86(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_string_8 */
extern T1 T674f31(TC* ac, T0* C);
/* UC_UTF8_ROUTINES.is_string_8 */
extern T1 T167s51(TC* ac, T0* a1);
/* ET_ECF_LIBRARY.string_8_type */
extern T0* T802f82(TC* ac, T0* C);
/* ET_ECF_SYSTEM.string_8_type */
extern T0* T87f85(TC* ac, T0* C);
/* ET_SYSTEM.string_8_type */
extern T0* T50f84(TC* ac, T0* C);
/* ET_VERBATIM_STRING.tokens */
extern T0* T674s47(TC* ac);
/* ET_SPECIAL_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T673f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SPECIAL_MANIFEST_STRING.is_string_32 */
extern T1 T673f29(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_string_8 */
extern T1 T673f28(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.tokens */
extern T0* T673s43(TC* ac);
/* ET_C3_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T671f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.character_32_convert_feature */
extern T0* T802f38(TC* ac, T0* C);
/* ET_ECF_SYSTEM.character_32_convert_feature */
extern T0* T87f41(TC* ac, T0* C);
/* ET_SYSTEM.character_32_convert_feature */
extern T0* T50f40(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_character_32 */
extern T1 T671f28(TC* ac, T0* C);
/* ET_ECF_LIBRARY.character_8_convert_feature */
extern T0* T802f36(TC* ac, T0* C);
/* ET_ECF_SYSTEM.character_8_convert_feature */
extern T0* T87f39(TC* ac, T0* C);
/* ET_SYSTEM.character_8_convert_feature */
extern T0* T50f38(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_character_8 */
extern T1 T671f27(TC* ac, T0* C);
/* ET_ECF_LIBRARY.character_8_type */
extern T0* T802f35(TC* ac, T0* C);
/* ET_ECF_SYSTEM.character_8_type */
extern T0* T87f38(TC* ac, T0* C);
/* ET_SYSTEM.character_8_type */
extern T0* T50f37(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.manifest_constant_convert_feature */
extern T0* T757f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUANTIFIER_EXPRESSION.manifest_constant_convert_feature */
extern T0* T613f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACROSS_EXPRESSION.manifest_constant_convert_feature */
extern T0* T339f37(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T756f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NAMED_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T755f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OLD_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T753f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_ADDRESS.manifest_constant_convert_feature */
extern T0* T741f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1033f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T764f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T763f44(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T762f40(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T761f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T760f45(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T759f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.manifest_constant_convert_feature */
extern T0* T376f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.manifest_constant_convert_feature */
extern T0* T630f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TUPLE.manifest_constant_convert_feature */
extern T0* T568f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_ARRAY.manifest_constant_convert_feature */
extern T0* T559f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.manifest_constant_convert_feature */
extern T0* T589f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T373f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T754f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OLD_EXPRESSION.manifest_constant_convert_feature */
extern T0* T752f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PREFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T751f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.manifest_constant_convert_feature */
extern T0* T750f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T749f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T748f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T745f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXPRESSION_ADDRESS.manifest_constant_convert_feature */
extern T0* T744f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT_ADDRESS.manifest_constant_convert_feature */
extern T0* T743f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CURRENT_ADDRESS.manifest_constant_convert_feature */
extern T0* T742f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.manifest_constant_convert_feature */
extern T0* T740f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T627f31(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T379f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INSPECT_EXPRESSION.manifest_constant_convert_feature */
extern T0* T530f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IF_EXPRESSION.manifest_constant_convert_feature */
extern T0* T509f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.manifest_constant_convert_feature */
extern T0* T436f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C2_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T686f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C2_CHARACTER_CONSTANT.is_character_32 */
extern T1 T686f26(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.has_invalid_code */
extern T1 T686f32(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_character_8 */
extern T1 T686f25(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T685f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C1_CHARACTER_CONSTANT.is_character_32 */
extern T1 T685f26(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.has_invalid_code */
extern T1 T685f32(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_character_8 */
extern T1 T685f25(TC* ac, T0* C);
/* ET_CURRENT.manifest_constant_convert_feature */
extern T0* T297f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT.manifest_constant_convert_feature */
extern T0* T318f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FALSE_CONSTANT.manifest_constant_convert_feature */
extern T0* T684f31(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VOID.manifest_constant_convert_feature */
extern T0* T327f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TRUE_CONSTANT.manifest_constant_convert_feature */
extern T0* T683f31(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T681f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T680f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T672f35(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_MANIFEST_STRING.is_string_32 */
extern T1 T672f27(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_invalid_code */
extern T1 T672f32(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_string_8 */
extern T1 T672f26(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.tokens */
extern T0* T672s42(TC* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe */
extern T0* T100f74(TC* ac, T0* C);
/* ET_TYPE_CHECKER.convert_feature */
extern T0* T864f20(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.context_named_type */
extern T0* T102f70(TC* ac, T0* C);
/* ET_CLASS.convert_from_feature */
extern T0* T70f208(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BRACED_TYPE_LIST.has_named_type_with_type_marks */
extern T1 T1086f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TOKEN_CONSTANTS.attached_separate_type_mark */
extern T0* T81s924(TC* ac);
/* ET_CONVERT_FEATURE_LIST.convert_feature */
extern T0* T433f4(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_PROCEDURE.convert_feature */
extern T0* T700f6(TC* ac, T0* C);
/* ET_CONVERT_FUNCTION.convert_feature */
extern T0* T699f5(TC* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.item */
extern T0* T433f5(TC* ac, T0* C, T6 a1);
/* ET_CLASS.context_is_type_separate */
extern T1 T70f207(TC* ac, T0* C);
/* ET_CLASS_TYPE.context_is_type_separate */
extern T1 T102f81(TC* ac, T0* C);
/* ET_CLASS_TYPE.context_is_type_non_separate */
extern T1 T102f79(TC* ac, T0* C);
/* ET_CLASS.convert_to_feature */
extern T0* T70f206(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context */
extern T1 T847f41(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context_with_type_marks */
extern T1 T847f37(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_argument_validity */
extern void T100f460(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T100f460ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_attachment_scope */
extern void T100f121(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].force_last */
extern void T882f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].force */
extern void T1323s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ATTACHMENT_SCOPE].fill_with */
extern void T1322f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ATTACHMENT_SCOPE].extend */
extern void T1322f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].resize */
extern void T882f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T1323s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T1322f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].new_capacity */
extern T6 T882f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].extendible */
extern T1 T882f8(TC* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.build_negated_scope */
extern void T881f60(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST_SCOPE_BUILDER.build_negated_scope */
extern void T875f65(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_KEYWORD.is_infix_or_else_symbol */
extern T1 T279f18(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_infix_or_else */
extern T1 T279f17(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.copy_scope */
extern void T880f13(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].append_last */
extern void T933f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].extend_last */
extern void T933f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].forth */
extern void T1390f14(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_forth */
extern void T933f69(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].add_traversing_cursor */
extern void T933f81(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_position */
extern void T1390f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].remove_traversing_cursor */
extern void T933f80(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].clashes_item */
extern T6 T933f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].put_last */
extern void T933f79(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].slots_put */
extern void T933f60(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].clashes_put */
extern void T933f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].slots_item */
extern T6 T933f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].compress */
extern void T933f82(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].hash_position */
extern T6 T933f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_storage_keep_head */
extern void T933f77(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_keep_head */
extern void T933f76(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].move_all_cursors */
extern void T933f83(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].key_storage_put */
extern void T933f78(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].key_storage_item */
extern T6 T933f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_item */
extern T6 T933f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_put */
extern void T933f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].search_position */
extern void T933f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_equality_tester */
extern T0* T933f24(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].item */
extern T6 T1390f5(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_item */
extern T6 T933f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].after */
extern T1 T1390f8(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].start */
extern void T1390f13(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_start */
extern void T933f68(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].cursor_off */
extern T1 T933f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].off */
extern T1 T1390f6(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].is_empty */
extern T1 T933f33(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].new_cursor */
extern T0* T933f37(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].make */
extern T0* T1390c9(TC* ac, T0* a1);
/* DS_HASH_SET [INTEGER_32].resize */
extern void T933f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].clashes_resize */
extern void T933f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].special_integer_ */
extern T0* T933s35(TC* ac);
/* DS_HASH_SET [INTEGER_32].key_storage_resize */
extern void T933f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_resize */
extern void T933f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].slots_resize */
extern void T933f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].new_modulus */
extern T6 T933f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].new_capacity */
extern T6 T933f17(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].extendible */
extern T1 T933f22(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_attachment_scope */
extern T0* T100f98(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].remove_last */
extern void T882f13(TC* ac, T0* C);
/* SPECIAL [ET_ATTACHMENT_SCOPE].keep_head */
extern void T1322f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ATTACHMENT_SCOPE].set_count */
extern void T1322f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].move_last_cursors_after */
extern void T882f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].set_next_cursor */
extern void T1324f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].set_after */
extern void T1324f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].last */
extern T0* T882f6(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.make */
extern T0* T880c11(TC* ac);
/* DS_HASH_SET [INTEGER_32].make */
extern T0* T933c43(TC* ac, T6 a1);
/* DS_HASH_SET [INTEGER_32].set_internal_cursor */
extern void T933f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].make_slots */
extern void T933f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_clashes */
extern void T933f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_key_storage */
extern void T933f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_item_storage */
extern void T933f51(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].is_empty */
extern T1 T882f10(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_infix_implies_symbol */
extern T1 T279f16(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_infix_implies */
extern T1 T279f15(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_infix_and_then_symbol */
extern T1 T279f14(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_infix_and_then */
extern T1 T279f13(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar1b_error */
extern void T63f494(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuar1b */
extern T0* T1445c1182(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuar1b_error */
extern void T42f494(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuar1a_error */
extern void T63f493(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuar1a */
extern T0* T1445c1181(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vuar1a_error */
extern void T42f493(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr4a_error */
extern void T63f492(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr4a */
extern T0* T1445c1180(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr4a_error */
extern void T42f492(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INFIX_OR_ELSE_OPERATOR.precursor_keyword */
extern T0* T747f20(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.precursor_keyword */
extern T0* T746f20(TC* ac, T0* C);
/* ET_FREE_OPERATOR.precursor_keyword */
extern T0* T300f29(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.precursor_keyword */
extern T0* T309f34(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.precursor_keyword */
extern T0* T324f107(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.precursor_keyword */
extern T0* T1859f6(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.precursor_keyword */
extern T0* T333f95(TC* ac, T0* C);
/* ET_IDENTIFIER.precursor_keyword */
extern T0* T303f67(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.precursor_keyword */
extern T0* T279f12(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_precursor */
extern T1 T747f19(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_precursor */
extern T1 T746f19(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_precursor */
extern T1 T300f28(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_precursor */
extern T1 T309f33(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_precursor */
extern T1 T324f106(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_precursor */
extern T1 T1859f5(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_precursor */
extern T1 T333f94(TC* ac, T0* C);
/* ET_IDENTIFIER.is_precursor */
extern T1 T303f66(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_precursor */
extern T1 T279f11(TC* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.set_arguments */
extern void T1862f9(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.set_arguments */
extern void T627f40(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_arguments */
extern void T740f37(TC* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T1033f36(TC* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_EXPRESSION.set_arguments */
extern void T1544f13(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.set_arguments */
extern void T373f32(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T379f33(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_arguments */
extern void T736f17(TC* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.set_arguments */
extern void T1034f15(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.set_arguments */
extern void T739f19(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_arguments */
extern void T737f19(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make */
extern T0* T1866c17(TC* ac, T0* a1, T6 a2, T6 a3);
/* ET_MANIFEST_TUPLE.make */
extern T0* T568c40(TC* ac);
/* ET_MANIFEST_TUPLE.make */
extern void T568f40p1(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.put_first */
extern void T1866f21(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T1866f16(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T1866f20(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T1866f20p1(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T1866s15(TC* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tuple_argument_position */
extern T6 T100f92(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_CAST_EXPRESSION.is_empty_actual_argument */
extern T1 T1870f17(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.is_empty_actual_argument */
extern T1 T980f18(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_empty_actual_argument */
extern T1 T2041f17(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_empty_actual_argument */
extern T1 T2040f18(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_empty_actual_argument */
extern T1 T2039f16(TC* ac, T0* C);
/* ET_IDENTIFIER.is_empty_actual_argument */
extern T1 T303f65(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T679f37(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T678f37(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T677f37(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T676f37(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T675f39(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_empty_actual_argument */
extern T1 T674f33(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T673f30(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T671f29(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_empty_actual_argument */
extern T1 T757f17(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_empty_actual_argument */
extern T1 T613f31(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_empty_actual_argument */
extern T1 T339f32(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T756f18(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_empty_actual_argument */
extern T1 T755f21(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_empty_actual_argument */
extern T1 T753f24(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_empty_actual_argument */
extern T1 T741f17(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T1033f18(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T764f29(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T763f37(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T762f33(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T761f31(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T760f38(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T759f34(TC* ac, T0* C);
/* ET_CALL_AGENT.is_empty_actual_argument */
extern T1 T376f22(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_empty_actual_argument */
extern T1 T630f24(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_empty_actual_argument */
extern T1 T568f24(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_empty_actual_argument */
extern T1 T559f24(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_empty_actual_argument */
extern T1 T589f18(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_empty_actual_argument */
extern T1 T373f20(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_empty_actual_argument */
extern T1 T754f20(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_empty_actual_argument */
extern T1 T752f17(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T751f20(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_empty_actual_argument */
extern T1 T750f18(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T749f18(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T748f17(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T745f20(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_empty_actual_argument */
extern T1 T744f17(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_empty_actual_argument */
extern T1 T743f17(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_empty_actual_argument */
extern T1 T742f17(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_empty_actual_argument */
extern T1 T740f22(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T627f22(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T379f21(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_empty_actual_argument */
extern T1 T530f20(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_empty_actual_argument */
extern T1 T509f23(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_empty_actual_argument */
extern T1 T436f27(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T686f27(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T685f27(TC* ac, T0* C);
/* ET_CURRENT.is_empty_actual_argument */
extern T1 T297f26(TC* ac, T0* C);
/* ET_RESULT.is_empty_actual_argument */
extern T1 T318f23(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_empty_actual_argument */
extern T1 T684f26(TC* ac, T0* C);
/* ET_VOID.is_empty_actual_argument */
extern T1 T327f22(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_empty_actual_argument */
extern T1 T683f26(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T681f27(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T680f27(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T672f28(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T1866f11(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T345f11(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.arguments */
extern T0* T2040f20(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.arguments */
extern T0* T436f8(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.arguments */
extern T0* T734f12(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.arguments */
extern T0* T731f12(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.arguments */
extern T0* T627f5(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.arguments */
extern T0* T740f3(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.arguments */
extern T0* T1033f3(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.arguments */
extern T0* T1034f2(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.arguments */
extern T0* T739f4(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.arguments */
extern T0* T737f2(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.name */
extern T0* T2040f1(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.name */
extern T0* T436f14(TC* ac, T0* C);
/* ET_AST_NULL_LEAF.column */
extern T6 T2238f3(TC* ac, T0* C);
/* ET_AST_NULL_LEAF.line */
extern T6 T2238f2(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.last_position */
extern T0* T436f12(TC* ac, T0* C);
/* ET_AST_NULL_LEAF.last_position */
extern T0* T2238f4(TC* ac, T0* C);
/* ET_CURRENT.last_position */
extern T0* T297f5(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.make */
extern T0* T807c11(TC* ac, T6 a1, T6 a2);
/* ET_COMPRESSED_POSITION.set_position */
extern void T807f13(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_SYMBOL.last_position */
extern T0* T282f14(TC* ac, T0* C);
/* UC_UTF8_ROUTINES.unicode_character_count */
extern T6 T167s29(TC* ac, T0* a1);
/* UC_UTF8_ROUTINES.unicode_substring_character_count */
extern T6 T167s33(TC* ac, T0* a1, T6 a2, T6 a3);
/* ET_IDENTIFIER.last_position */
extern T0* T303f40(TC* ac, T0* C);
/* ET_KEYWORD.last_position */
extern T0* T191f24(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.last_leaf */
extern T0* T436f13(TC* ac, T0* C);
/* ET_LIKE_FEATURE.last_leaf */
extern T0* T722f66(TC* ac, T0* C);
/* ET_IDENTIFIER.last_leaf */
extern T0* T303f31(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.last_leaf */
extern T0* T848f5(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.last_leaf */
extern T0* T725f5(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.last_leaf */
extern T0* T724f8(TC* ac, T0* C);
/* ET_LIKE_CURRENT.last_leaf */
extern T0* T199f6(TC* ac, T0* C);
/* ET_TUPLE_TYPE.last_leaf */
extern T0* T183f21(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.last_leaf */
extern T0* T2159f5(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_leaf */
extern T0* T81s1562(TC* ac);
/* ET_AST_NULL_LEAF.make */
extern T0* T2238c5(TC* ac);
/* ET_CONSTRAINED_FORMAL_PARAMETER.last_leaf */
extern T0* T691f81(TC* ac, T0* C);
/* ET_TYPE_CONSTRAINT_LIST.last_leaf */
extern T0* T641f10(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.last_leaf */
extern T0* T692f7(TC* ac, T0* C);
/* ET_CONSTRAINT_RENAME_LIST.last_leaf */
extern T0* T421f11(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.renames */
extern T0* T691f82(TC* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.last_leaf */
extern T0* T418f11(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.last_leaf */
extern T0* T500f83(TC* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.last_leaf */
extern T0* T1448f10(TC* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.last_leaf */
extern T0* T720f10(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.last_leaf */
extern T0* T185f13(TC* ac, T0* C);
/* ET_CLASS_TYPE.last_leaf */
extern T0* T102f23(TC* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T201f6(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T2158f5(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.last_leaf */
extern T0* T506f10(TC* ac, T0* C);
/* ET_CLASS.last_leaf */
extern T0* T70f77(TC* ac, T0* C);
/* ET_QUALIFIED_CALL.last_leaf */
extern T0* T732f3(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T345f10(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_create_feature_name */
extern T0* T81s1(TC* ac);
/* ET_QUALIFIED_CALL.name */
extern T0* T732f4(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.name */
extern T0* T734f13(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.last_position */
extern T0* T734f19(TC* ac, T0* C);
/* ET_RESULT.last_position */
extern T0* T318f34(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.last_leaf */
extern T0* T734f21(TC* ac, T0* C);
/* ET_RESULT.last_leaf */
extern T0* T318f31(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.name */
extern T0* T731f13(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.last_position */
extern T0* T731f18(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.last_leaf */
extern T0* T731f20(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.name */
extern T0* T627f11(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.precursor_keyword */
extern T0* T740f4(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.name */
extern T0* T1033f2(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.name */
extern T0* T1034f1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.name */
extern T0* T739f12(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.precursor_keyword */
extern T0* T737f3(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_vape_validity */
extern void T100f377(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vape1b_error */
extern void T63f491(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape1b */
extern T0* T1445c1179(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vape1_error */
extern T1 T63f116(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vape1b_error */
extern void T42f491(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vape1_error */
extern T1 T42f116(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuex2b_error */
extern void T63f427(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuex2b */
extern T0* T1445c1115(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vuex2b_error */
extern void T42f427(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EXTERNAL_PROCEDURE.is_exported_to */
extern T1 T714f81(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_PROCEDURE.is_exported_to */
extern T1 T713f70(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_exported_to */
extern T1 T712f73(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_PROCEDURE.is_exported_to */
extern T1 T711f71(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.is_exported_to */
extern T1 T710f70(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_FUNCTION.is_exported_to */
extern T1 T708f61(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_FUNCTION.is_exported_to */
extern T1 T707f64(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_FUNCTION.is_exported_to */
extern T1 T706f62(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNIQUE_ATTRIBUTE.is_exported_to */
extern T1 T705f63(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTANT_ATTRIBUTE.is_exported_to */
extern T1 T704f62(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTENDED_ATTRIBUTE.is_exported_to */
extern T1 T703f62(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTRIBUTE.is_exported_to */
extern T1 T702f57(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuta4ga_error */
extern void T63f490(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuta4ga */
extern T0* T1445c1178(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vuta4ga_error */
extern void T42f490(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vuta2a_error */
extern void T63f489(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuta2a */
extern T0* T1445c1177(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vuta2a_error */
extern void T42f489(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T379f37(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_EXPRESSION.make */
extern T0* T1544c11(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T736f20(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_INSTRUCTION.make */
extern T0* T1862c8(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_parenthesis_call_position */
extern void T100f355(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIS_SYMBOL.set_position */
extern void T1859f51(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_PARENTHESIS_SYMBOL.make */
extern T0* T1859c49(TC* ac);
/* ET_PARENTHESIS_SYMBOL.make_leaf */
extern void T1859f52(TC* ac, T0* C);
/* ET_IDENTIFIER.set_tuple_label */
extern void T303f129(TC* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn2a_error */
extern void T63f352(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn2a */
extern T0* T1445c1040(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T63f71(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn2a_error */
extern void T42f352(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T42f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_expression_validity */
extern void T100f356(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_call_type_validity */
extern void T100f449(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T100f449ot1(TC* ac, T0* a1);
extern T1 T100f449ot2(TC* ac, T0* a1);
extern T1 T100f449ot3(TC* ac, T0* a1);
/* ET_CLASS.is_type_separate */
extern T1 T70f176(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_separate */
extern T1 T725f14(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_separate */
extern T1 T724f17(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_separate */
extern T1 T722f13(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_separate */
extern T1 T183f44(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_separate */
extern T1 T102f44(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_separate */
extern T1 T199f10(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.convert_feature */
extern T0* T2041f4(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.convert_feature */
extern T0* T2040f5(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.convert_feature */
extern T0* T2039f3(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.target */
extern T0* T1033f19(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.set_index */
extern void T1544f12(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.parenthesis_call */
extern T0* T2041f24(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.parenthesis_call */
extern T0* T751f19(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.parenthesis_call */
extern T0* T745f19(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.parenthesis_call */
extern T0* T1544f8(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.parenthesis_call */
extern T0* T373f19(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.parenthesis_call */
extern T0* T379f5(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_parenthesis_call_validity */
extern void T100f269(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T100f269ot1(TC* ac, T0* a1);
extern T1 T100f269ot2(TC* ac, T0* a1);
extern T1 T100f269ot3(TC* ac, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.parenthesis_call */
extern T0* T1033f4(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.parenthesis_call */
extern T0* T1034f3(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.parenthesis_call */
extern T0* T736f4(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_expression_validity */
extern void T100f357(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE.has_attribute */
extern T1 T880f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].has */
extern T1 T933f28(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.is_stable_attribute */
extern T1 T710f69(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_stable_attribute */
extern T1 T708f60(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_stable_attribute */
extern T1 T707f63(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_stable_attribute */
extern T1 T706f61(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_stable_attribute */
extern T1 T705f62(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_stable_attribute */
extern T1 T704f61(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_stable_attribute */
extern T1 T703f61(TC* ac, T0* C);
/* ET_NOTE_LIST.has_tagged_note_term_value */
extern T1 T571f6(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NOTE_TERM_LIST.has_note_term_value */
extern T1 T583f4(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.has_note_term_value */
extern T1 T303f114(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.has_note_term_value */
extern T1 T679f59(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.is_plus */
extern T1 T324f131(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.string_ */
extern T0* T679s61(TC* ac);
/* ET_OCTAL_INTEGER_CONSTANT.has_note_term_value */
extern T1 T678f59(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.string_ */
extern T0* T678s61(TC* ac);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_note_term_value */
extern T1 T677f59(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.string_ */
extern T0* T677s61(TC* ac);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_note_term_value */
extern T1 T676f59(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.string_ */
extern T0* T676s61(TC* ac);
/* ET_REGULAR_INTEGER_CONSTANT.has_note_term_value */
extern T1 T675f59(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.string_ */
extern T0* T675s61(TC* ac);
/* ET_VERBATIM_STRING.has_note_term_value */
extern T1 T674f45(TC* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.string_ */
extern T0* T674s48(TC* ac);
/* ET_SPECIAL_MANIFEST_STRING.has_note_term_value */
extern T1 T673f41(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.string_ */
extern T0* T673s44(TC* ac);
/* ET_C3_CHARACTER_CONSTANT.has_note_term_value */
extern T1 T671f44(TC* ac, T0* C, T0* a1);
/* CHARACTER_32.as_lower */
extern T3 T3f16(TC* ac, volatile T3* C);
/* ET_CUSTOM_ATTRIBUTE.has_note_term_value */
extern T1 T690f5(TC* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.has_note_term_value */
extern T1 T686f44(TC* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.has_note_term_value */
extern T1 T685f43(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.has_note_term_value */
extern T1 T684f35(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.string_ */
extern T0* T684s37(TC* ac);
/* ET_TRUE_CONSTANT.has_note_term_value */
extern T1 T683f35(TC* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.string_ */
extern T0* T683s37(TC* ac);
/* ET_UNDERSCORED_REAL_CONSTANT.has_note_term_value */
extern T1 T681f37(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.string_ */
extern T0* T681s39(TC* ac);
/* ET_REGULAR_REAL_CONSTANT.has_note_term_value */
extern T1 T680f37(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.string_ */
extern T0* T680s39(TC* ac);
/* ET_REGULAR_MANIFEST_STRING.has_note_term_value */
extern T1 T672f40(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.string_ */
extern T0* T672s43(TC* ac);
/* ET_NOTE_LIST.string_ */
extern T0* T571s9(TC* ac);
/* ET_NOTE.note_clause */
extern T0* T689f2(TC* ac, T0* C);
/* ET_TAGGED_NOTE.note_clause */
extern T0* T688f3(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_stable_attribute */
extern T1 T702f56(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_expression */
extern void T100f450(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f450ot1(TC* ac, T0* a1);
extern T1 T100f450ot2(TC* ac, T0* a1);
extern T1 T100f450ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_like_argument_dynamic_types */
extern void T100f519(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_dynamic_types */
extern void T100f470(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_vape_validity */
extern void T100f388(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vape1a_error */
extern void T63f445(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape1a */
extern T0* T1445c1133(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vape1a_error */
extern void T42f445(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vucr0d_error */
extern void T63f480(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0d */
extern T0* T1445c1168(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vucr_error */
extern T1 T63f76(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vucr0d_error */
extern void T42f480(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vucr_error */
extern T1 T42f76(TC* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T1033f35(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T1034f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.target */
extern T0* T1034f9(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.set_seed */
extern void T747f44(TC* ac, T0* C, T6 a1);
/* ET_INFIX_AND_THEN_OPERATOR.set_seed */
extern void T746f44(TC* ac, T0* C, T6 a1);
/* ET_FREE_OPERATOR.set_seed */
extern void T300f62(TC* ac, T0* C, T6 a1);
/* ET_KEYWORD_OPERATOR.set_seed */
extern void T309f63(TC* ac, T0* C, T6 a1);
/* ET_SYMBOL_OPERATOR.set_seed */
extern void T324f157(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIS_SYMBOL.set_seed */
extern void T1859f50(TC* ac, T0* C, T6 a1);
/* ET_BRACKET_SYMBOL.set_seed */
extern void T333f133(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_query_call_expression_validity */
extern void T100f361(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_queries */
extern void T100f452(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].force_last */
extern void T869f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].force */
extern void T1297s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].fill_with */
extern void T1298f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].extend */
extern void T1298f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].resize */
extern void T869f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].aliased_resized_area */
extern T0* T1297s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].aliased_resized_area */
extern T0* T1298f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_capacity */
extern T6 T869f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].extendible */
extern T1 T869f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].first */
extern T0* T257f14(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.keep_best_overloaded_features */
extern void T100f352(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* ET_ALIASED_FEATURE_NAME.same_call_name */
extern T1 T715f4(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.same_call_name */
extern T1 T303f84(TC* ac, T0* C, T0* a1);
extern T1 T303f84ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_FUNCTION.extended_name */
extern T0* T710f20(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.extended_name */
extern T0* T708f18(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.extended_name */
extern T0* T707f20(TC* ac, T0* C);
/* ET_DO_FUNCTION.extended_name */
extern T0* T706f20(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.extended_name */
extern T0* T705f14(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.extended_name */
extern T0* T704f13(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.extended_name */
extern T0* T703f18(TC* ac, T0* C);
/* ET_ATTRIBUTE.extended_name */
extern T0* T702f11(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.extended_name */
extern T0* T714f18(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.extended_name */
extern T0* T713f3(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.extended_name */
extern T0* T712f18(TC* ac, T0* C);
/* ET_DO_PROCEDURE.extended_name */
extern T0* T711f1(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].keep_first */
extern void T257f38(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].keep_first */
extern void T258f38(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_features */
extern void T100f447(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].force_last */
extern void T870f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].force */
extern void T1300s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].fill_with */
extern void T1302f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].extend */
extern void T1302f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].resize */
extern void T870f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].aliased_resized_area */
extern T0* T1300s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].aliased_resized_area */
extern T0* T1302f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].new_capacity */
extern T6 T870f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].extendible */
extern T1 T870f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].swap */
extern void T257f36(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].replace */
extern void T257f35(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].swap */
extern void T258f36(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].replace */
extern void T258f35(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].has */
extern T1 T1301f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove */
extern void T1301f15(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].keep_head */
extern void T1331f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].set_count */
extern void T1331f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].move_left */
extern void T1301f21(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_cursors_left */
extern void T1301f20(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_position */
extern void T2055f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove_last */
extern void T1301f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_last_cursors_after */
extern void T1301f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_next_cursor */
extern void T2055f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_after */
extern void T2055f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].item */
extern T0* T1301f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].wipe_out */
extern void T1301f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_all_cursors_after */
extern void T1301f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].force_last */
extern void T1301f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].force */
extern void T1330s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FEATURE].fill_with */
extern void T1331f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].extend */
extern void T1331f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].resize */
extern void T1301f17(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].aliased_resized_area */
extern T0* T1330s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE].aliased_resized_area */
extern T0* T1331f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_capacity */
extern T6 T1301f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].extendible */
extern T1 T1301f9(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_features */
extern T0* T100f89(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].remove_last */
extern void T870f15(TC* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].keep_head */
extern void T1302f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].set_count */
extern void T1302f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].move_last_cursors_after */
extern void T870f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].set_next_cursor */
extern void T1303f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].set_after */
extern void T1303f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].last */
extern T0* T870f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].make */
extern T0* T1301c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].set_internal_cursor */
extern void T1301f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_cursor */
extern T0* T1301f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].make */
extern T0* T2055c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].make */
extern T0* T1330s2(TC* ac, T6 a1);
/* SPECIAL [ET_FEATURE].make_empty */
extern T0* T1331c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].default_create */
extern T0* T1330c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].is_empty */
extern T1 T870f9(TC* ac, T0* C);
/* ET_ECF_LIBRARY.detachable_any_type */
extern T0* T802f20(TC* ac, T0* C);
/* ET_ECF_SYSTEM.detachable_any_type */
extern T0* T87f23(TC* ac, T0* C);
/* ET_SYSTEM.detachable_any_type */
extern T0* T50f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].remove */
extern void T257f37(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_left */
extern void T257f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_left */
extern void T257f40(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_last */
extern void T257f39(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].move_last_cursors_after */
extern void T257f42(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove */
extern void T258f37(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_left */
extern void T258f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_left */
extern void T258f40(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_last */
extern void T258f39(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_last_cursors_after */
extern void T258f42(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.adapted_name */
extern T0* T100f87(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.renames */
extern T0* T1884f2(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].is_empty */
extern T1 T257f13(TC* ac, T0* C);
/* ET_TUPLE_TYPE.add_overloaded_queries */
extern void T183f135(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.add_overloaded_queries */
extern void T1884f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.add_overloaded_queries */
extern void T102f141(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.add_overloaded_queries */
extern void T70f338(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUERY_LIST.add_overloaded_features */
extern void T769f18(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T769f18ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_FUNCTION.overloaded_alias_names */
extern T0* T710f89(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_extended_name */
extern T0* T710f90(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_alias_names */
extern T0* T708f80(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_extended_name */
extern T0* T708f81(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_alias_names */
extern T0* T707f83(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_extended_name */
extern T0* T707f84(TC* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_alias_names */
extern T0* T706f81(TC* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_extended_name */
extern T0* T706f82(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_alias_names */
extern T0* T705f81(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_extended_name */
extern T0* T705f82(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_alias_names */
extern T0* T704f80(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_extended_name */
extern T0* T704f81(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_alias_names */
extern T0* T703f82(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_extended_name */
extern T0* T703f83(TC* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_alias_names */
extern T0* T702f77(TC* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_extended_name */
extern T0* T702f78(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_name */
extern T0* T710f88(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_name */
extern T0* T708f79(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_name */
extern T0* T707f82(TC* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_name */
extern T0* T706f80(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_name */
extern T0* T705f80(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_name */
extern T0* T704f79(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_name */
extern T0* T703f81(TC* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_name */
extern T0* T702f76(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_queries */
extern T0* T100f90(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].remove_last */
extern void T869f15(TC* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].keep_head */
extern void T1298f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].set_count */
extern void T1298f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].move_last_cursors_after */
extern void T869f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_next_cursor */
extern void T1299f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_after */
extern void T1299f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].last */
extern T0* T869f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].make */
extern T0* T257c15(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].set_internal_cursor */
extern void T257f22(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_cursor */
extern T0* T257f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].make */
extern T0* T1161c9(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].is_empty */
extern T1 T869f9(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.set_boolean_operator */
extern void T745f33(TC* ac, T0* C, T1 a1);
/* ET_PREFIX_EXPRESSION.set_boolean_operator */
extern void T751f33(TC* ac, T0* C, T1 a1);
/* ET_CLASS.is_boolean_class */
extern T1 T70f91(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.has_implementation_error */
extern T1 T100f81(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.has_validity_error */
extern T1 T714f29(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.has_validity_error */
extern T1 T712f29(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.has_validity_error */
extern T1 T710f31(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_validity_error */
extern T1 T708f28(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.has_validity_error */
extern T1 T707f31(TC* ac, T0* C);
/* ET_DO_FUNCTION.has_validity_error */
extern T1 T706f30(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.has_validity_error */
extern T1 T705f25(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.has_validity_error */
extern T1 T704f23(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.has_validity_error */
extern T1 T703f28(TC* ac, T0* C);
/* ET_ATTRIBUTE.has_validity_error */
extern T1 T702f21(TC* ac, T0* C);
/* ET_DO_PROCEDURE.has_validity_error */
extern T1 T711f28(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.has_validity_error */
extern T1 T713f26(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.postconditions */
extern T0* T714f6(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.postconditions */
extern T0* T712f7(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.postconditions */
extern T0* T710f8(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.postconditions */
extern T0* T708f7(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.postconditions */
extern T0* T707f9(TC* ac, T0* C);
/* ET_DO_FUNCTION.postconditions */
extern T0* T706f9(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.postconditions */
extern T0* T705f45(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.postconditions */
extern T0* T704f43(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.postconditions */
extern T0* T703f8(TC* ac, T0* C);
/* ET_ATTRIBUTE.postconditions */
extern T0* T702f41(TC* ac, T0* C);
/* ET_DO_PROCEDURE.postconditions */
extern T0* T711f17(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.postconditions */
extern T0* T713f15(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.preconditions */
extern T0* T714f5(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.preconditions */
extern T0* T712f4(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.preconditions */
extern T0* T710f7(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.preconditions */
extern T0* T708f6(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.preconditions */
extern T0* T707f6(TC* ac, T0* C);
/* ET_DO_FUNCTION.preconditions */
extern T0* T706f6(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.preconditions */
extern T0* T705f44(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.preconditions */
extern T0* T704f42(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.preconditions */
extern T0* T703f5(TC* ac, T0* C);
/* ET_ATTRIBUTE.preconditions */
extern T0* T702f40(TC* ac, T0* C);
/* ET_DO_PROCEDURE.preconditions */
extern T0* T711f16(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.preconditions */
extern T0* T713f14(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.implementation_feature */
extern T0* T714f20(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.implementation_feature */
extern T0* T712f20(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.implementation_feature */
extern T0* T710f22(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.implementation_feature */
extern T0* T708f20(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.implementation_feature */
extern T0* T707f22(TC* ac, T0* C);
/* ET_DO_FUNCTION.implementation_feature */
extern T0* T706f22(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.implementation_feature */
extern T0* T705f16(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.implementation_feature */
extern T0* T704f15(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.implementation_feature */
extern T0* T703f20(TC* ac, T0* C);
/* ET_ATTRIBUTE.implementation_feature */
extern T0* T702f13(TC* ac, T0* C);
/* ET_DO_PROCEDURE.implementation_feature */
extern T0* T711f7(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.implementation_feature */
extern T0* T713f1(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_orphan_actual_arguments_validity */
extern void T100f266(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_adapted_base_classes_validity */
extern void T100f265(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_adapted_base_classes */
extern T0* T100f80(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].remove_last */
extern void T885f15(TC* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].keep_head */
extern void T1336f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].set_count */
extern void T1336f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].move_last_cursors_after */
extern void T885f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].set_next_cursor */
extern void T1337f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].set_after */
extern void T1337f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].last */
extern T0* T885f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].make */
extern T0* T1290c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].set_internal_cursor */
extern void T1290f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].new_cursor */
extern T0* T1290f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS].make */
extern T0* T1775c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS].make */
extern T0* T1772s1(TC* ac, T6 a1);
/* SPECIAL [ET_ADAPTED_CLASS].make_empty */
extern T0* T1774c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS].default_create */
extern T0* T1772c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].is_empty */
extern T1 T885f9(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_validity */
extern void T100f264(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_expression_supplier */
extern void T100f350(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_system */
extern T0* T100f88(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.expression */
extern T0* T2041f3(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.expression */
extern T0* T751f3(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.left */
extern T0* T745f2(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.target */
extern T0* T1544f1(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.target */
extern T0* T373f2(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.target */
extern T0* T379f1(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_convert_to_expression */
extern void T857f467(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_to_expression_validity */
extern void T857f470(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_call_expression_validity */
extern void T857f163(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T857f163ot1(TC* ac, T0* a1);
extern T1 T857f163ot2(TC* ac, T0* a1);
extern T1 T857f163ot3(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.free_adapted_base_classes */
extern void T857f241(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_expression_validity */
extern void T857f240(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_tuple_label_expression */
extern void T857f323(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_tuple_label_parenthesis_call_validity */
extern void T857f239(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T857f239ot1(TC* ac, T0* a1);
extern T1 T857f239ot2(TC* ac, T0* a1);
extern T1 T857f239ot3(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_expression_validity */
extern void T857f318(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T857f318ot1(TC* ac, T0* a1);
extern T1 T857f318ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_instruction_validity */
extern void T857f317(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T857f317ot1(TC* ac, T0* a1);
extern T1 T857f317ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_instruction_validity */
extern void T857f394(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_call_instruction */
extern void T857f424(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_validity */
extern void T857f319(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.reset_fatal_error */
extern void T857f322(TC* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_actual_arguments_validity */
extern void T857f326(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T857f326ot1(TC* ac, T0* a1);
extern T1 T857f326ot2(TC* ac, T0* a1);
extern T1 T857f326ot3(TC* ac, T0* a1);
extern T1 T857f326ot4(TC* ac, T0* a1);
extern T1 T857f326ot5(TC* ac, T0* a1);
extern T1 T857f326ot6(TC* ac, T0* a1);
extern T1 T857f326ot7(TC* ac, T0* a1);
extern T1 T857f326ot8(TC* ac, T0* a1);
extern T1 T857f326ot9(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_converted_target_infix_expression_validity */
extern void T857f396(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.convert_expression */
extern T0* T857f58(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_builtin_conversion */
extern void T857f451(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_qualified_call_expression */
extern void T857f320(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_creation_expression */
extern void T857f415(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_creation_vape_validity */
extern void T857f437(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INVARIANTS.as_feature */
extern T0* T539f16(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.add_non_descendant_caller_clients_to */
extern void T857f365(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INVARIANTS.clients */
extern T0* T539f20(TC* ac, T0* C);
/* ET_INVARIANTS.is_feature */
extern T1 T539f15(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.current_universe */
extern T0* T857f64(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_actual_argument_validity */
extern void T857f395(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T857f395ot1(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.free_attachment_scope */
extern void T857f91(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.new_attachment_scope */
extern T0* T857f52(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.tuple_argument_position */
extern T6 T857f69(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_vape_validity */
extern void T857f325(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.set_parenthesis_call_position */
extern void T857f316(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_query_call_expression_validity */
extern void T857f238(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_query_call_type_validity */
extern void T857f321(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T857f321ot1(TC* ac, T0* a1);
extern T1 T857f321ot2(TC* ac, T0* a1);
extern T1 T857f321ot3(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_query_parenthesis_call_validity */
extern void T857f237(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T857f237ot1(TC* ac, T0* a1);
extern T1 T857f237ot2(TC* ac, T0* a1);
extern T1 T857f237ot3(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_expression_validity */
extern void T857f308(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_call_expression */
extern void T857f389(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_vape_validity */
extern void T857f269(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_dotnet_query_call_expression_validity */
extern void T857f236(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.free_overloaded_queries */
extern void T857f315(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.keep_best_overloaded_features */
extern void T857f314(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* ET_FEATURE_CHECKER.free_overloaded_features */
extern void T857f393(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.new_overloaded_features */
extern T0* T857f68(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.adapted_name */
extern T0* T857f63(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.new_overloaded_queries */
extern T0* T857f62(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.has_implementation_error */
extern T1 T857f54(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.has_validity_error */
extern T1 T539f8(TC* ac, T0* C);
/* ET_INVARIANTS.postconditions */
extern T0* T539f25(TC* ac, T0* C);
/* ET_INVARIANTS.preconditions */
extern T0* T539f24(TC* ac, T0* C);
/* ET_INVARIANTS.implementation_feature */
extern T0* T539f23(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_orphan_actual_arguments_validity */
extern void T857f235(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_adapted_base_classes_validity */
extern void T857f234(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.new_adapted_base_classes */
extern T0* T857f53(TC* ac, T0* C);
/* ET_C_GENERATOR.process_convert_to_expression */
extern void T114f1635(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_to_expression */
extern void T114f1638(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_expression */
extern void T114f883(TC* ac, T0* C, T0* a1);
extern T1 T114f883ot1(TC* ac, T0* a1);
extern T1 T114f883ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_separate_call_declaration */
extern void T114f845(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
extern T1 T114f845ot1(TC* ac, T0* a1);
extern T1 T114f845ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_separate_call_object_declaration */
extern void T114f887(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T114f887ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_separate_call_function_name */
extern void T114f918(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_separate_call_object_type_name */
extern void T114f917(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_separate_call_function_declaration */
extern void T114f886(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T114f886ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_separate_call_object_type_declaration */
extern void T114f885(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T114f885ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_temporary_variable_declarations */
extern void T114f759(TC* ac, T0* C);
/* ET_C_GENERATOR.reset_temp_variables */
extern void T114f815(TC* ac, T0* C);
/* DS_ARRAYED_LIST [BOOLEAN].wipe_out */
extern void T915f11(TC* ac, T0* C);
/* SPECIAL [BOOLEAN].keep_head */
extern void T155f11(TC* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].set_count */
extern void T155f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [BOOLEAN].move_all_cursors_after */
extern void T915f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [BOOLEAN].set_next_cursor */
extern void T1356f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [BOOLEAN].set_after */
extern void T1356f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T914f12(TC* ac, T0* C);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].keep_head */
extern void T1353f7(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].set_count */
extern void T1353f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T914f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T1355f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T1355f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [BOOLEAN].item */
extern T1 T915f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].item */
extern T0* T914f9(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_qualified_call_instruction */
extern void T114f884(TC* ac, T0* C, T0* a1);
extern T1 T114f884ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PRECURSOR.procedure_call */
extern T0* T860f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].value */
extern T0* T1276f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].item_storage_item */
extern T0* T1276f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].position_of_key */
extern T6 T1276f25(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.procedure_call */
extern T0* T845f30(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_named_procedure_call */
extern void T114f832(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_procedure_call */
extern void T114f867(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_inlined_procedure_call */
extern void T114f897(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.argument_type_set_in_feature */
extern T0* T114f343(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_C_GENERATOR.print_inlined_procedure_call */
extern void T114f896(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T114f896ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.free_inlining_operands */
extern void T114f943(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T114f943ot1(TC* ac, T0* a1);
extern T1 T114f943ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.mark_call_operands_unfrozen */
extern void T114f1172(TC* ac, T0* C);
extern T1 T114f1172ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.is_temp_variable_frozen */
extern T1 T114f342(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].resize */
extern void T927f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].aliased_resized_area */
extern T0* T1382s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION].aliased_resized_area */
extern T0* T1381f4(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_compound */
extern void T114f962(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_instruction */
extern void T114f1231(TC* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.process */
extern void T1034f13(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unqualified_call_instruction */
extern void T1131f42(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_actual_argument_list */
extern void T1131f98(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_instruction */
extern void T100f193(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_instruction_validity */
extern void T100f261(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuex1a_error */
extern void T63f420(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuex1a */
extern T0* T1445c1108(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T63f103(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex1a_error */
extern void T42f420(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T42f103(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn1c_error */
extern void T63f566(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn1c */
extern T0* T1445c1253(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vkcn1c_error */
extern void T42f566(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_instruction_validity */
extern void T100f293(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_instruction */
extern void T100f389(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f389ot1(TC* ac, T0* a1);
extern T1 T100f389ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_instruction_validity */
extern void T100f292(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuio0c_error */
extern void T63f579(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0c */
extern T0* T1445c1266(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T63f176(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuio0c_error */
extern void T42f579(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T42f176(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuio0a_error */
extern void T63f578(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0a */
extern T0* T1445c1265(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuio0a_error */
extern void T42f578(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuio0b_error */
extern void T63f577(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0b */
extern T0* T1445c1264(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuio0b_error */
extern void T42f577(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuac0c_error */
extern void T63f473(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0c */
extern T0* T1445c1161(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T63f124(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuac0c_error */
extern void T42f473(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T42f124(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.as_invariants */
extern T0* T714f63(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.as_invariants */
extern T0* T712f57(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.as_invariants */
extern T0* T710f68(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.as_invariants */
extern T0* T708f59(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.as_invariants */
extern T0* T707f62(TC* ac, T0* C);
/* ET_DO_FUNCTION.as_invariants */
extern T0* T706f60(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_invariants */
extern T0* T705f61(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_invariants */
extern T0* T704f60(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.as_invariants */
extern T0* T703f60(TC* ac, T0* C);
/* ET_ATTRIBUTE.as_invariants */
extern T0* T702f55(TC* ac, T0* C);
/* ET_DO_PROCEDURE.as_invariants */
extern T0* T711f55(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.as_invariants */
extern T0* T713f54(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_invariants */
extern T1 T714f62(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_invariants */
extern T1 T712f56(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_invariants */
extern T1 T710f67(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_invariants */
extern T1 T708f58(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_invariants */
extern T1 T707f61(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_invariants */
extern T1 T706f59(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_invariants */
extern T1 T705f60(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_invariants */
extern T1 T704f59(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_invariants */
extern T1 T703f59(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_invariants */
extern T1 T702f54(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_invariants */
extern T1 T711f54(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_invariants */
extern T1 T713f53(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvuac0a_error */
extern void T63f472(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0a */
extern T0* T1445c1160(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuac0a_error */
extern void T42f472(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuac0b_error */
extern void T63f471(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0b */
extern T0* T1445c1159(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuac0b_error */
extern void T42f471(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_parenthesis_call_validity */
extern void T100f387(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_identifier_parenthesis_call_validity */
extern void T100f469(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T100f469ot1(TC* ac, T0* a1);
extern T1 T100f469ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_validity */
extern void T100f444(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST_LIST.object_test */
extern T0* T668f8(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.object_tests */
extern T0* T714f14(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.object_tests */
extern T0* T712f15(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.object_tests */
extern T0* T710f16(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.object_tests */
extern T0* T708f15(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.object_tests */
extern T0* T707f17(TC* ac, T0* C);
/* ET_DO_FUNCTION.object_tests */
extern T0* T706f17(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.object_tests */
extern T0* T705f10(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.object_tests */
extern T0* T704f10(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.object_tests */
extern T0* T703f15(TC* ac, T0* C);
/* ET_ATTRIBUTE.object_tests */
extern T0* T702f8(TC* ac, T0* C);
/* ET_DO_PROCEDURE.object_tests */
extern T0* T711f11(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.object_tests */
extern T0* T713f12(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.object_tests */
extern T0* T764f3(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.object_tests */
extern T0* T763f4(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.object_tests */
extern T0* T762f4(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.object_tests */
extern T0* T761f3(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.object_tests */
extern T0* T760f6(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.object_tests */
extern T0* T759f6(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_closure_impl */
extern T0* T100f77(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_local */
extern void T100f508(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].found_item */
extern T0* T873f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].found */
extern T1 T873f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].search */
extern void T873f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].search_position */
extern void T873f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].hash_position */
extern T6 T873f32(TC* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.hash_code */
extern T6 T755f28(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.hash_code */
extern T6 T753f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_item */
extern T0* T873f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_item */
extern T6 T873f34(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_veen8b_error */
extern void T63f382(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen8b */
extern T0* T1445c1070(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen8_error */
extern T1 T63f89(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen8b_error */
extern void T42f382(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen8_error */
extern T1 T42f89(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen8a_error */
extern void T63f381(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen8a */
extern T0* T1445c1069(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen8a_error */
extern void T42f381(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST_SCOPE.object_test */
extern T0* T874f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].item */
extern T0* T1314f7(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.is_object_test_local */
extern T1 T303f10(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_inline_separate_argument_call_instruction_validity */
extern void T100f291(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuis0c_error */
extern void T63f576(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuis0c */
extern T0* T1445c1263(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuis_error */
extern T1 T63f175(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuis0c_error */
extern void T42f576(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuis_error */
extern T1 T42f175(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuis0a_error */
extern void T63f575(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuis0a */
extern T0* T1445c1262(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuis0a_error */
extern void T42f575(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuis0b_error */
extern void T63f574(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuis0b */
extern T0* T1445c1261(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuis0b_error */
extern void T42f574(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuas0c_error */
extern void T63f476(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuas0c */
extern T0* T1445c1164(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuas_error */
extern T1 T63f125(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuas0c_error */
extern void T42f476(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuas_error */
extern T1 T42f125(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuas0a_error */
extern void T63f475(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuas0a */
extern T0* T1445c1163(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuas0a_error */
extern void T42f475(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuas0b_error */
extern void T63f474(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuas0b */
extern T0* T1445c1162(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuas0b_error */
extern void T42f474(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_separate_argument_parenthesis_call_validity */
extern void T100f386(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_separate_argument_validity */
extern void T100f446(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.argument */
extern T0* T670f8(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.inline_separate_arguments */
extern T0* T714f16(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.inline_separate_arguments */
extern T0* T712f17(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.inline_separate_arguments */
extern T0* T710f18(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.inline_separate_arguments */
extern T0* T708f17(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.inline_separate_arguments */
extern T0* T707f19(TC* ac, T0* C);
/* ET_DO_FUNCTION.inline_separate_arguments */
extern T0* T706f19(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.inline_separate_arguments */
extern T0* T705f12(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.inline_separate_arguments */
extern T0* T704f12(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.inline_separate_arguments */
extern T0* T703f17(TC* ac, T0* C);
/* ET_ATTRIBUTE.inline_separate_arguments */
extern T0* T702f10(TC* ac, T0* C);
/* ET_DO_PROCEDURE.inline_separate_arguments */
extern T0* T711f22(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.inline_separate_arguments */
extern T0* T713f20(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.inline_separate_arguments */
extern T0* T764f5(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.inline_separate_arguments */
extern T0* T763f6(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.inline_separate_arguments */
extern T0* T762f6(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.inline_separate_arguments */
extern T0* T761f5(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.inline_separate_arguments */
extern T0* T760f8(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.inline_separate_arguments */
extern T0* T759f8(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_separate_argument */
extern void T100f510(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].found_item */
extern T0* T878f34(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].item_storage_item */
extern T0* T878f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].found */
extern T1 T878f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].search */
extern void T878f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].search_position */
extern void T878f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].hash_position */
extern T6 T878f23(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT.hash_code */
extern T6 T518f10(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].key_storage_item */
extern T0* T878f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].clashes_item */
extern T6 T878f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].slots_item */
extern T6 T878f25(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_veen10b_error */
extern void T63f386(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen10b */
extern T0* T1445c1074(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen10_error */
extern T1 T63f91(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen10b_error */
extern void T42f386(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen10_error */
extern T1 T42f91(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen10a_error */
extern void T63f385(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen10a */
extern T0* T1445c1073(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen10a_error */
extern void T42f385(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.inline_separate_argument */
extern T0* T879f3(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].item */
extern T0* T1320f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_iteration_item_call_instruction_validity */
extern void T100f290(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuic0c_error */
extern void T63f573(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0c */
extern T0* T1445c1260(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T63f174(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuic0c_error */
extern void T42f573(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T42f174(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuic0a_error */
extern void T63f572(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0a */
extern T0* T1445c1259(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuic0a_error */
extern void T42f572(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuic0b_error */
extern void T63f571(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0b */
extern T0* T1445c1258(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuic0b_error */
extern void T42f571(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_item_parenthesis_call_validity */
extern void T100f385(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_item_validity */
extern void T100f445(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ITERATION_COMPONENT_LIST.iteration_component */
extern T0* T669f8(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.iteration_components */
extern T0* T714f15(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.iteration_components */
extern T0* T712f16(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.iteration_components */
extern T0* T710f17(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.iteration_components */
extern T0* T708f16(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.iteration_components */
extern T0* T707f18(TC* ac, T0* C);
/* ET_DO_FUNCTION.iteration_components */
extern T0* T706f18(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.iteration_components */
extern T0* T705f11(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.iteration_components */
extern T0* T704f11(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.iteration_components */
extern T0* T703f16(TC* ac, T0* C);
/* ET_ATTRIBUTE.iteration_components */
extern T0* T702f9(TC* ac, T0* C);
/* ET_DO_PROCEDURE.iteration_components */
extern T0* T711f8(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.iteration_components */
extern T0* T713f9(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.iteration_components */
extern T0* T764f4(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.iteration_components */
extern T0* T763f5(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.iteration_components */
extern T0* T762f5(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.iteration_components */
extern T0* T761f4(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.iteration_components */
extern T0* T760f7(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.iteration_components */
extern T0* T759f7(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_iteration_item */
extern void T100f509(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUANTIFIER_EXPRESSION.unfolded_cursor_name */
extern T0* T613f2(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.unfolded_cursor_name */
extern T0* T339f3(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.unfolded_cursor_name */
extern T0* T624f2(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.unfolded_cursor_name */
extern T0* T342f3(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].found_item */
extern T0* T876f33(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].found */
extern T1 T876f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].search */
extern void T876f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].search_position */
extern void T876f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].hash_position */
extern T6 T876f35(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.hash_code */
extern T6 T342f24(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.hash_code */
extern T6 T624f25(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.hash_code */
extern T6 T339f39(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.hash_code */
extern T6 T613f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].slots_item */
extern T6 T876f37(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_veen9b_error */
extern void T63f384(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen9b */
extern T0* T1445c1072(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen9_error */
extern T1 T63f90(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen9b_error */
extern void T42f384(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen9_error */
extern T1 T42f90(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen9a_error */
extern void T63f383(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen9a */
extern T0* T1445c1071(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen9a_error */
extern void T42f383(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ITERATION_ITEM_SCOPE.iteration_component */
extern T0* T877f3(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].item */
extern T0* T1317f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_instruction_validity */
extern void T100f289(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuil0a_error */
extern void T63f570(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0a */
extern T0* T1445c1257(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T63f173(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuil0a_error */
extern void T42f570(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T42f173(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuil0b_error */
extern void T63f569(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0b */
extern T0* T1445c1256(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuil0b_error */
extern void T42f569(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvual0a_error */
extern void T63f470(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0a */
extern T0* T1445c1158(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvual_error */
extern T1 T63f123(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvual0a_error */
extern void T42f470(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvual_error */
extern T1 T42f123(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0b_error */
extern void T63f469(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0b */
extern T0* T1445c1157(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvual0b_error */
extern void T42f469(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_parenthesis_call_validity */
extern void T100f384(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_validity */
extern void T100f443(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable */
extern void T100f515(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_cap_dynamic_types */
extern void T100f520(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SYSTEM.attached_type */
extern T0* T95f64(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.attached_type_modifier */
extern T0* T81s595(TC* ac);
/* ET_NULL_ERROR_HANDLER.report_vevi0a_error */
extern void T63f421(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vevi0a */
extern T0* T1445c1109(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vevi_error */
extern T1 T63f78(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vevi0a_error */
extern void T42f421(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vevi_error */
extern T1 T42f78(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.has_local_variable */
extern T1 T880f8(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.locals */
extern T0* T714f61(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.locals */
extern T0* T712f5(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.locals */
extern T0* T710f66(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.locals */
extern T0* T708f57(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.locals */
extern T0* T707f7(TC* ac, T0* C);
/* ET_DO_FUNCTION.locals */
extern T0* T706f7(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.locals */
extern T0* T705f59(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.locals */
extern T0* T704f58(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.locals */
extern T0* T703f6(TC* ac, T0* C);
/* ET_ATTRIBUTE.locals */
extern T0* T702f53(TC* ac, T0* C);
/* ET_DO_PROCEDURE.locals */
extern T0* T711f10(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.locals */
extern T0* T713f52(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.locals */
extern T0* T764f31(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.locals */
extern T0* T763f10(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.locals */
extern T0* T762f10(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.locals */
extern T0* T761f33(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.locals */
extern T0* T760f12(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.locals */
extern T0* T759f12(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_veen2c_error */
extern void T63f390(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2c */
extern T0* T1445c1078(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen2_error */
extern T1 T63f93(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen2c_error */
extern void T42f390(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen2_error */
extern T1 T42f93(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2e_error */
extern void T63f389(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2e */
extern T0* T1445c1077(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2e_error */
extern void T42f389(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER.is_local */
extern T1 T303f34(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_instruction_validity */
extern void T100f288(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuia0a_error */
extern void T63f568(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0a */
extern T0* T1445c1255(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T63f172(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuia0a_error */
extern void T42f568(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T42f172(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuia0b_error */
extern void T63f567(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0b */
extern T0* T1445c1254(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuia0b_error */
extern void T42f567(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0a_error */
extern void T63f468(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0a */
extern T0* T1445c1156(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T63f122(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuaa0a_error */
extern void T42f468(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T42f122(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0b_error */
extern void T63f467(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0b */
extern T0* T1445c1155(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuaa0b_error */
extern void T42f467(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_parenthesis_call_validity */
extern void T100f383(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_validity */
extern void T100f442(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument */
extern void T100f514(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_ATTACHMENT_SCOPE.has_formal_argument */
extern T1 T880f7(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T764f11(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T763f2(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T762f2(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.formal_arguments */
extern T0* T761f11(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.formal_arguments */
extern T0* T760f2(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.formal_arguments */
extern T0* T759f2(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_instruction_validity */
extern void T100f247(TC* ac, T0* C, T0* a1);
extern T1 T100f247ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn1b_error */
extern void T63f509(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn1b */
extern T0* T1445c1197(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vkcn1b_error */
extern void T42f509(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_INSTRUCTION.parenthesis_call */
extern T0* T1862f4(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T100f267(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_procedures */
extern void T100f353(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].force_last */
extern void T868f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].force */
extern void T1294s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].fill_with */
extern void T1295f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].extend */
extern void T1295f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].resize */
extern void T868f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].aliased_resized_area */
extern T0* T1294s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].aliased_resized_area */
extern T0* T1295f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_capacity */
extern T6 T868f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].extendible */
extern T1 T868f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].first */
extern T0* T258f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].is_empty */
extern T1 T258f13(TC* ac, T0* C);
/* ET_TUPLE_TYPE.add_overloaded_procedures */
extern void T183f136(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.add_overloaded_procedures */
extern void T1884f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.add_overloaded_procedures */
extern void T102f142(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.add_overloaded_procedures */
extern void T70f339(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PROCEDURE_LIST.add_overloaded_features */
extern void T770f14(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T770f14ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_PROCEDURE.overloaded_alias_names */
extern T0* T714f87(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_extended_name */
extern T0* T714f88(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_alias_names */
extern T0* T713f78(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_extended_name */
extern T0* T713f79(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_alias_names */
extern T0* T712f81(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_extended_name */
extern T0* T712f82(TC* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_alias_names */
extern T0* T711f79(TC* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_extended_name */
extern T0* T711f80(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_name */
extern T0* T714f86(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_name */
extern T0* T713f77(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_name */
extern T0* T712f80(TC* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_name */
extern T0* T711f78(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_procedures */
extern T0* T100f86(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].remove_last */
extern void T868f15(TC* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].keep_head */
extern void T1295f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].set_count */
extern void T1295f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].move_last_cursors_after */
extern void T868f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_next_cursor */
extern void T1296f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_after */
extern void T1296f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].last */
extern T0* T868f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].make */
extern T0* T258c15(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].set_internal_cursor */
extern void T258f22(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_cursor */
extern T0* T258f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].make */
extern T0* T1164c9(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].is_empty */
extern T1 T868f9(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_unqualified_call_instruction */
extern void T857f447(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_instruction_validity */
extern void T857f452(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_instruction_validity */
extern void T857f461(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_unqualified_call_instruction */
extern void T857f462(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_instruction_validity */
extern void T857f460(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INVARIANTS.as_invariants */
extern T0* T539f22(TC* ac, T0* C);
/* ET_INVARIANTS.is_invariants */
extern T1 T539s21(TC* ac);
/* ET_FEATURE_CHECKER.check_object_test_local_parenthesis_call_validity */
extern void T857f388(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_identifier_parenthesis_call_validity */
extern void T857f422(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T857f422ot1(TC* ac, T0* a1);
extern T1 T857f422ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_object_test_local_validity */
extern void T857f226(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INVARIANTS.object_tests */
extern T0* T539f5(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.current_closure_impl */
extern T0* T857f56(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_object_test_local */
extern void T857f264(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_inline_separate_argument_call_instruction_validity */
extern void T857f459(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_inline_separate_argument_parenthesis_call_validity */
extern void T857f387(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_inline_separate_argument_validity */
extern void T857f228(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INVARIANTS.inline_separate_arguments */
extern T0* T539f7(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_inline_separate_argument */
extern void T857f268(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_iteration_item_call_instruction_validity */
extern void T857f458(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_iteration_item_parenthesis_call_validity */
extern void T857f386(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_iteration_item_validity */
extern void T857f227(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INVARIANTS.iteration_components */
extern T0* T539f6(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_iteration_item */
extern void T857f267(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_local_variable_call_instruction_validity */
extern void T857f457(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_local_variable_parenthesis_call_validity */
extern void T857f385(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_local_variable_validity */
extern void T857f225(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_variable */
extern void T857f274(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_INVARIANTS.locals */
extern T0* T539f19(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_instruction_validity */
extern void T857f456(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_formal_argument_parenthesis_call_validity */
extern void T857f384(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_validity */
extern void T857f224(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_formal_argument */
extern void T857f273(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_INVARIANTS.arguments */
extern T0* T539f17(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_qualified_call_instruction_validity */
extern void T857f391(TC* ac, T0* C, T0* a1);
extern T1 T857f391ot1(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T857f423(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.free_overloaded_procedures */
extern void T857f416(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.new_overloaded_procedures */
extern T0* T857f70(TC* ac, T0* C);
/* ET_C_GENERATOR.process_unqualified_call_instruction */
extern void T114f1427(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_instruction */
extern void T114f1451(TC* ac, T0* C, T0* a1);
extern T1 T114f1451ot1(TC* ac, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T1034f11(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.position */
extern T0* T1034f10(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.process */
extern void T527f12(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inline_separate_instruction */
extern void T1131f41(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_compound */
extern void T1131f24(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inline_separate_arguments */
extern void T1131f103(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inline_separate_argument */
extern void T1131f111(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inline_separate_instruction */
extern void T100f192(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_separate_instruction_validity */
extern void T100f260(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].remove_found_item */
extern void T878f45(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].unset_found_item */
extern void T878f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].remove_position */
extern void T878f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].key_storage_put */
extern void T878f53(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].item_storage_put */
extern void T878f49(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].key_storage_keep_head */
extern void T878f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].item_storage_keep_head */
extern void T878f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].clashes_put */
extern void T878f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].slots_put */
extern void T878f52(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].move_cursors_forth */
extern void T878f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].set_position */
extern void T1319f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].set_next_cursor */
extern void T1319f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].set_after */
extern void T1319f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].internal_set_key_equality_tester */
extern void T878f54(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.remove_inline_separate_arguments */
extern void T879f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].prune_last */
extern void T1320f15(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_instructions_validity */
extern void T100f163(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.add_inline_separate_argument */
extern void T879f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].force_last */
extern void T1320f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].resize */
extern void T1320f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].new_capacity */
extern T6 T1320f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].extendible */
extern T1 T1320f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_separate_arguments_validity */
extern void T100f287(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_separate_argument_declaration */
extern void T100f382(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inline_separate_argument_dynamic_types */
extern void T100f468(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].force_last */
extern void T878f46(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].resize */
extern void T878f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].clashes_resize */
extern void T878f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].special_integer_ */
extern T0* T878s33(TC* ac);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].key_storage_resize */
extern void T878f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].item_storage_resize */
extern void T878f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].slots_resize */
extern void T878f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].new_modulus */
extern T6 T878f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].new_capacity */
extern T6 T878f22(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_v1se2gf_error */
extern void T63f536(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2gf */
extern T0* T1445c1224(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_v1se2g_error */
extern T1 T63f152(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_v1se2gf_error */
extern void T42f536(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_v1se2g_error */
extern T1 T42f152(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_v1se2ge_error */
extern void T63f535(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2ge */
extern T0* T1445c1223(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_v1se2ge_error */
extern void T42f535(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_v1se2gd_error */
extern void T63f534(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2gd */
extern T0* T1445c1222(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_v1se2gd_error */
extern void T42f534(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].remove_last */
extern void T867f15(TC* ac, T0* C);
/* SPECIAL [ET_INLINE_AGENT].keep_head */
extern void T1292f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].set_count */
extern void T1292f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].move_last_cursors_after */
extern void T867f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_next_cursor */
extern void T1293f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_after */
extern void T1293f6(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_v1se2gc_error */
extern void T63f533(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2gc */
extern T0* T1445c1221(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_v1se2gc_error */
extern void T42f533(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_v1se2gb_error */
extern void T63f532(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2gb */
extern T0* T1445c1220(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_v1se2gb_error */
extern void T42f532(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].item */
extern T0* T867f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].force_last */
extern void T867f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].force */
extern void T1291s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].fill_with */
extern void T1292f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].extend */
extern void T1292f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].resize */
extern void T867f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].aliased_resized_area */
extern T0* T1291s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_AGENT].aliased_resized_area */
extern T0* T1292f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_capacity */
extern T6 T867f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].extendible */
extern T1 T867f10(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_v1se2ga_error */
extern void T63f531(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2ga */
extern T0* T1445c1219(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_v1se2ga_error */
extern void T42f531(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_v1se1ga_error */
extern void T63f530(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se1ga */
extern T0* T1445c1218(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_v1se1g_error */
extern T1 T63f151(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_v1se1ga_error */
extern void T42f530(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_v1se1g_error */
extern T1 T42f151(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_v1se3ga_error */
extern void T63f529(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_v1se3ga */
extern T0* T1445c1217(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_v1se3g_error */
extern T1 T63f150(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_v1se3ga_error */
extern void T42f529(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_v1se3g_error */
extern T1 T42f150(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_inline_separate_instruction */
extern void T857f361(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inline_separate_instruction_validity */
extern void T857f409(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_instructions_validity */
extern void T857f258(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inline_separate_arguments_validity */
extern void T857f435(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_inline_separate_argument_declaration */
extern void T857f445(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_inline_separate_instruction */
extern void T114f1403(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inline_separate_instruction */
extern void T114f1363(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_separate_argument_session_name */
extern void T114f964(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_separate_argument_name */
extern void T114f1232(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_inline_separate_argument_name */
extern void T114f903(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_assignment_operand */
extern void T114f1366(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.is_twin_needed_in_attachment */
extern T1 T114f620(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_expanded */
extern T1 T1814f9(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_expanded */
extern T1 T1050f9(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.has_expanded */
extern T1 T969f10(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_expanded */
extern T1 T1049f56(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_expanded */
extern T1 T1048f58(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_expanded */
extern T1 T924f10(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_expanded */
extern T1 T966f53(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_expanded */
extern T1 T894f56(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_expanded */
extern T1 T838f55(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_redefined_copy_routine */
extern T1 T1049f13(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_redefined_copy_routine */
extern T1 T1048f13(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_redefined_copy_routine */
extern T1 T966f16(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_redefined_copy_routine */
extern T1 T894f15(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_redefined_copy_routine */
extern T1 T838f15(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_expanded */
extern T1 T1814f7(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_expanded */
extern T1 T1050f8(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_expanded */
extern T1 T924f8(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].force_last */
extern void T933f44(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_INSTRUCTION.position */
extern T0* T527f5(TC* ac, T0* C);
/* ET_COMPOUND.position */
extern T0* T403f14(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.position */
extern T0* T624f24(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.position */
extern T0* T342f23(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.position */
extern T0* T382f15(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.position */
extern T0* T739f13(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.position */
extern T0* T737f13(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.position */
extern T0* T446f10(TC* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.position */
extern T0* T565f8(TC* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.is_empty */
extern T1 T565f10(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.position */
extern T0* T533f12(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.position */
extern T0* T512f13(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.position */
extern T0* T734f16(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.position */
extern T0* T731f15(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.position */
extern T0* T729f14(TC* ac, T0* C);
/* ET_VARIANT.position */
extern T0* T650f5(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.position */
extern T0* T556f12(TC* ac, T0* C);
/* ET_TAGGED_ASSERTION.position */
extern T0* T772f6(TC* ac, T0* C);
/* ET_CLASS_ASSERTION.position */
extern T0* T719f6(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.item */
extern T0* T556f11(TC* ac, T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.is_empty */
extern T1 T556f14(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.position */
extern T0* T728f10(TC* ac, T0* C);
/* ET_ASSIGNMENT.position */
extern T0* T727f5(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.position */
extern T0* T321f14(TC* ac, T0* C);
/* ET_COMPOUND.first */
extern T0* T403f13(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.is_null_position */
extern T1 T321f16(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.position */
extern T0* T524f8(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.position */
extern T0* T518f9(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.first */
extern T0* T524f13(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.is_empty */
extern T1 T524f12(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.process */
extern void T624f30(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_repeat_instruction */
extern void T1131f40(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_repeat_instruction */
extern void T100f191(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_repeat_instruction_validity */
extern void T100f259(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_instruction_validity */
extern void T100f286(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].remove_found_item */
extern void T876f65(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].remove_position */
extern void T876f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_storage_put */
extern void T876f73(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_storage_put */
extern void T876f69(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_storage_keep_head */
extern void T876f77(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_storage_keep_head */
extern void T876f76(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].clashes_put */
extern void T876f71(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].slots_put */
extern void T876f72(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].move_cursors_forth */
extern void T876f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].internal_set_key_equality_tester */
extern void T876f74(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_ITEM_SCOPE.remove_iteration_components */
extern void T877f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].prune_last */
extern void T1317f15(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_component_no_from_validity */
extern void T100f279(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.is_subset */
extern T1 T880f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].forth */
extern void T933f49(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].go_after */
extern void T933f84(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_go_after */
extern void T933f85(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].item_for_iteration */
extern T6 T933f23(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].after */
extern T1 T933f31(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_after */
extern T1 T933f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].start */
extern void T933f48(TC* ac, T0* C);
/* ET_COMPOUND.has_non_null_instruction */
extern T1 T403f15(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.loop_compound */
extern T0* T342f8(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.loop_compound */
extern T0* T624f7(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.loop_compound */
extern T0* T729f3(TC* ac, T0* C);
/* ET_KEYWORD_EXPRESSION.expression */
extern T0* T1450f1(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe_impl */
extern T0* T100f69(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.until_conditional */
extern T0* T342f7(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.until_conditional */
extern T0* T624f21(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.until_conditional */
extern T0* T729f2(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T100f369(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T100f369p1(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vave0a_error */
extern void T63f487(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vave0a */
extern T0* T1445c1175(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vave_error */
extern T1 T63f129(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vave0a_error */
extern void T42f487(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vave_error */
extern T1 T42f129(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.integer_type */
extern T0* T802f46(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_type */
extern T0* T87f49(TC* ac, T0* C);
/* ET_SYSTEM.integer_type */
extern T0* T50f48(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.variant_part */
extern T0* T342f12(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.variant_part */
extern T0* T624f23(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.variant_part */
extern T0* T729f6(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T100f368(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T100f368p1(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.assertion */
extern T0* T556f9(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.assertion */
extern T0* T303f56(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.assertion */
extern T0* T679f23(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.assertion */
extern T0* T678f23(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.assertion */
extern T0* T677f23(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.assertion */
extern T0* T676f23(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.assertion */
extern T0* T675f24(TC* ac, T0* C);
/* ET_VERBATIM_STRING.assertion */
extern T0* T674f26(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.assertion */
extern T0* T673f23(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.assertion */
extern T0* T671f21(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.assertion */
extern T0* T757f15(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.assertion */
extern T0* T613f27(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.assertion */
extern T0* T339f30(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.assertion */
extern T0* T756f16(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.assertion */
extern T0* T755f19(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.assertion */
extern T0* T753f22(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.assertion */
extern T0* T741f15(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T1033f16(TC* ac, T0* C);
/* ET_TAGGED_ASSERTION.assertion */
extern T0* T772f3(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T764f26(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T763f32(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T762f30(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.assertion */
extern T0* T761f28(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.assertion */
extern T0* T760f33(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.assertion */
extern T0* T759f31(TC* ac, T0* C);
/* ET_CALL_AGENT.assertion */
extern T0* T376f20(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.assertion */
extern T0* T630f19(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.assertion */
extern T0* T568f21(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.assertion */
extern T0* T559f20(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.assertion */
extern T0* T589f16(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.assertion */
extern T0* T373f17(TC* ac, T0* C);
/* ET_OBJECT_TEST.assertion */
extern T0* T754f18(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.assertion */
extern T0* T752f15(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.assertion */
extern T0* T751f17(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.assertion */
extern T0* T750f16(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.assertion */
extern T0* T749f15(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.assertion */
extern T0* T748f15(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.assertion */
extern T0* T745f17(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.assertion */
extern T0* T744f15(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.assertion */
extern T0* T743f15(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.assertion */
extern T0* T742f15(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.assertion */
extern T0* T740f20(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.assertion */
extern T0* T627f20(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T379f19(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.assertion */
extern T0* T530f18(TC* ac, T0* C);
/* ET_IF_EXPRESSION.assertion */
extern T0* T509f21(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.assertion */
extern T0* T436f25(TC* ac, T0* C);
/* ET_CLASS_ASSERTION.assertion */
extern T0* T719f3(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.assertion */
extern T0* T686f19(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.assertion */
extern T0* T685f19(TC* ac, T0* C);
/* ET_CURRENT.assertion */
extern T0* T297f24(TC* ac, T0* C);
/* ET_RESULT.assertion */
extern T0* T318f21(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.assertion */
extern T0* T684f20(TC* ac, T0* C);
/* ET_VOID.assertion */
extern T0* T327f20(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.assertion */
extern T0* T683f20(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.assertion */
extern T0* T681f21(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.assertion */
extern T0* T680f21(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.assertion */
extern T0* T672f21(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.invariant_part */
extern T0* T342f11(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.invariant_part */
extern T0* T624f22(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.invariant_part */
extern T0* T729f5(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.from_compound */
extern T0* T624f20(TC* ac, T0* C);
/* ET_ITERATION_ITEM_SCOPE.add_iteration_component */
extern void T877f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].force_last */
extern void T1317f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].resize */
extern void T1317f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].new_capacity */
extern T6 T1317f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].extendible */
extern T1 T1317f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_component_header_validity */
extern void T100f381(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_iteration_item_declaration */
extern void T100f467(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_INSTRUCTION.cursor_item_expression */
extern T0* T342f14(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.cursor_item_expression */
extern T0* T613f11(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.cursor_item_expression */
extern T0* T339f15(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.cursor_item_expression */
extern T0* T624f10(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.cursor_forth_instruction */
extern T0* T342f16(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.cursor_forth_instruction */
extern T0* T613f13(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.cursor_forth_instruction */
extern T0* T339f17(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.cursor_forth_instruction */
extern T0* T624f12(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.cursor_after_expression */
extern T0* T342f15(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.cursor_after_expression */
extern T0* T613f12(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.cursor_after_expression */
extern T0* T339f16(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.cursor_after_expression */
extern T0* T624f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].force_last */
extern void T876f66(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].resize */
extern void T876f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].clashes_resize */
extern void T876f81(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].special_integer_ */
extern T0* T876s41(TC* ac);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_storage_resize */
extern void T876f80(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_storage_resize */
extern void T876f79(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].slots_resize */
extern void T876f78(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].new_modulus */
extern T6 T876f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].new_capacity */
extern T6 T876f34(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_iteration_cursor_declaration */
extern void T100f466(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_INSTRUCTION.new_cursor_expression */
extern T0* T342f13(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.new_cursor_expression */
extern T0* T613f10(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.new_cursor_expression */
extern T0* T339f14(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.new_cursor_expression */
extern T0* T624f9(TC* ac, T0* C);
/* ET_ITERATION_ITEM_SCOPE.hidden_iteration_component */
extern T0* T877f5(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_voit2e_error */
extern void T63f486(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2e */
extern T0* T1445c1174(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_voit2_error */
extern T1 T63f128(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit2e_error */
extern void T42f486(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_voit2_error */
extern T1 T42f128(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE.hidden_object_test */
extern T0* T874f5(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_voit2d_error */
extern void T63f485(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2d */
extern T0* T1445c1173(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2d_error */
extern void T42f485(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2c_error */
extern void T63f484(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2c */
extern T0* T1445c1172(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2c_error */
extern void T42f484(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2b_error */
extern void T63f483(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2b */
extern T0* T1445c1171(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2b_error */
extern void T42f483(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2a_error */
extern void T63f482(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2a */
extern T0* T1445c1170(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2a_error */
extern void T42f482(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit1a_error */
extern void T63f481(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_voit1a */
extern T0* T1445c1169(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_voit1_error */
extern T1 T63f127(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit1a_error */
extern void T42f481(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_voit1_error */
extern T1 T42f127(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.iterable_detachable_separate_any_type */
extern T0* T802f56(TC* ac, T0* C);
/* ET_ECF_SYSTEM.iterable_detachable_separate_any_type */
extern T0* T87f59(TC* ac, T0* C);
/* ET_SYSTEM.iterable_detachable_separate_any_type */
extern T0* T50f58(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.iterable_expression */
extern T0* T342f5(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.iterable_expression */
extern T0* T613f6(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.iterable_expression */
extern T0* T339f6(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.iterable_expression */
extern T0* T624f5(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_repeat_instruction */
extern void T857f360(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_repeat_instruction_validity */
extern void T857f408(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_iteration_instruction_validity */
extern void T857f434(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_component_no_from_validity */
extern void T857f429(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_variant_validity */
extern void T857f312(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_invariant_validity */
extern void T857f311(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_iteration_component_header_validity */
extern void T857f310(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_iteration_item_declaration */
extern void T857f392(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_iteration_cursor_declaration */
extern void T857f390(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_repeat_instruction */
extern void T114f1405(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_repeat_instruction */
extern void T114f1431(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_instruction */
extern void T114f1452(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_operand */
extern void T114f870(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_cursor_name */
extern void T114f902(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_INSTRUCTION.process */
extern void T342f35(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_across_instruction */
extern void T1131f39(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_invariants */
extern void T1131f99(TC* ac, T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.process */
extern void T772f10(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_tagged_assertion */
extern void T1131f124(TC* ac, T0* C, T0* a1);
/* ET_CLASS_ASSERTION.process */
extern void T719f10(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_class_assertion */
extern void T1131f121(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_instruction */
extern void T100f565(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_instruction_validity */
extern void T100f572(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_across_instruction */
extern void T857f449(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_instruction_validity */
extern void T857f454(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_across_instruction */
extern void T114f1626(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_instruction */
extern void T114f1630(TC* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.process */
extern void T382f20(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_check_instruction */
extern void T1131f38(TC* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.assertion */
extern T0* T382f13(TC* ac, T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.item */
extern T0* T382f14(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_check_instruction */
extern void T100f566(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T100f573(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T100f573p1(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.set_code_unreachable */
extern void T880f25(TC* ac, T0* C, T1 a1);
/* ET_IDENTIFIER.is_false */
extern T1 T303f85(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_false */
extern T1 T679f57(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_false */
extern T1 T678f57(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_false */
extern T1 T677f57(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_false */
extern T1 T676f57(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_false */
extern T1 T675f57(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_false */
extern T1 T674f43(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_false */
extern T1 T673f39(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_false */
extern T1 T671f42(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_false */
extern T1 T757f23(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_false */
extern T1 T613f37(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_false */
extern T1 T339f38(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_false */
extern T1 T756f25(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_false */
extern T1 T755f27(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_false */
extern T1 T753f30(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_false */
extern T1 T741f23(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T1033f27(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_false */
extern T1 T530f26(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_false */
extern T1 T509f29(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_false */
extern T1 T436f35(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T764f39(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T763f45(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T762f41(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_false */
extern T1 T761f40(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_false */
extern T1 T760f46(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_false */
extern T1 T759f42(TC* ac, T0* C);
/* ET_CALL_AGENT.is_false */
extern T1 T376f31(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_false */
extern T1 T630f30(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_false */
extern T1 T568f30(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_false */
extern T1 T559f30(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_false */
extern T1 T589f24(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_false */
extern T1 T373f27(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_false */
extern T1 T754f26(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_false */
extern T1 T752f23(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_false */
extern T1 T751f28(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_false */
extern T1 T750f24(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_false */
extern T1 T749f25(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_false */
extern T1 T748f23(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_false */
extern T1 T745f28(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_false */
extern T1 T744f23(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_false */
extern T1 T743f23(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_false */
extern T1 T742f23(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_false */
extern T1 T740f28(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_false */
extern T1 T627f32(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T379f28(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_false */
extern T1 T686f41(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_false */
extern T1 T685f41(TC* ac, T0* C);
/* ET_CURRENT.is_false */
extern T1 T297f34(TC* ac, T0* C);
/* ET_RESULT.is_false */
extern T1 T318f33(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_false */
extern T1 T684f34(TC* ac, T0* C);
/* ET_VOID.is_false */
extern T1 T327f31(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_false */
extern T1 T683f34(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_false */
extern T1 T681f36(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_false */
extern T1 T680f36(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_false */
extern T1 T672f38(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_check_instruction */
extern void T857f450(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_check_instruction_validity */
extern void T857f455(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_check_instruction */
extern void T114f1627(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_check_instruction */
extern void T114f1631(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.process */
extern void T739f17(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_static_call_instruction */
extern void T1131f37(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_instruction */
extern void T100f190(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_instruction_validity */
extern void T100f258(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_parenthesis_call_validity */
extern void T100f285(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T100f285ot1(TC* ac, T0* a1);
extern T1 T100f285ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_query_call_expression_validity */
extern void T100f380(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_expression */
extern void T100f465(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T100f465ot1(TC* ac, T0* a1);
extern T1 T100f465ot2(TC* ac, T0* a1);
extern T1 T100f465ot3(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.type_id_feature_name */
extern T0* T81s925(TC* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.first */
extern T0* T1866f10(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.first */
extern T0* T345f16(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin_ise_runtime_new_tuple_instance_of */
extern T1 T860f49(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_ise_runtime_new_tuple_instance_of */
extern T1 T845f50(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_static */
extern void T1049f94(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_static */
extern void T1048f94(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_static */
extern void T894f90(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_static */
extern void T966f92(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_static */
extern void T838f88(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_feature_validity */
extern void T100f378(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T100f378ot1(TC* ac, T0* a1);
extern T1 T100f378ot2(TC* ac, T0* a1);
extern T1 T100f378ot3(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuno5a_error */
extern void T63f501(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuno5a */
extern T0* T1445c1189(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuno5_error */
extern T1 T63f135(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuno5a_error */
extern void T42f501(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuno5_error */
extern T1 T42f135(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_implicitly_static */
extern T1 T710f55(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T710f59(TC* ac, T0* C);
/* ET_FEATURE_LIST.item */
extern T0* T897f3(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T714f54(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T713f76(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T712f79(TC* ac, T0* C);
/* ET_DO_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T711f77(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T708f78(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T707f81(TC* ac, T0* C);
/* ET_DO_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T706f79(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T705f54(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T704f52(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T703f80(TC* ac, T0* C);
/* ET_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T702f75(TC* ac, T0* C);
/* ET_POSTCONDITIONS.is_instance_free */
extern T1 T601f12(TC* ac, T0* C);
/* ET_IDENTIFIER.is_instance_free */
extern T1 T303f80(TC* ac, T0* C);
/* ET_IDENTIFIER.is_feature_name */
extern T1 T303f39(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_instance_free */
extern T1 T339f36(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.is_instance_free */
extern T1 T556f13(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.iteration_expression */
extern T0* T339f24(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_instance_free */
extern T1 T1033f24(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.is_instance_free */
extern T1 T1866f12(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_instance_free */
extern T1 T345f17(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_instance_free */
extern T1 T2041f13(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_instance_free */
extern T1 T2040f14(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_instance_free */
extern T1 T2039f12(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_instance_free */
extern T1 T1870f10(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.is_instance_free */
extern T1 T980f14(TC* ac, T0* C);
/* ET_CALL_AGENT.is_instance_free */
extern T1 T376f29(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_instance_free */
extern T1 T1867f9(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_instance_free */
extern T1 T358f13(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.is_instance_free */
extern T1 T766f13(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_instance_free */
extern T1 T336f45(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.is_instance_free */
extern T1 T765f11(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_instance_free */
extern T1 T1580f8(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_instance_free */
extern T1 T373f25(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_instance_free */
extern T1 T379f26(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_instance_free */
extern T1 T530f24(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.is_instance_free */
extern T1 T656f9(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.is_instance_free */
extern T1 T653f9(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.item */
extern T0* T656f3(TC* ac, T0* C, T6 a1);
/* ET_INSPECT_EXPRESSION.expression */
extern T0* T530f17(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_instance_free */
extern T1 T509f27(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.is_instance_free */
extern T1 T452f9(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.is_instance_free */
extern T1 T449f10(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.conditional_expression */
extern T0* T449f5(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.item */
extern T0* T452f4(TC* ac, T0* C, T6 a1);
/* ET_IF_EXPRESSION.conditional_expression */
extern T0* T509f12(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_instance_free */
extern T1 T436f33(TC* ac, T0* C);
/* ET_CURRENT.is_instance_free */
extern T1 T297f32(TC* ac, T0* C);
/* ET_RESULT.is_instance_free */
extern T1 T318f30(TC* ac, T0* C);
/* ET_VOID.is_instance_free */
extern T1 T327f29(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_instance_free */
extern T1 T764f36(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_instance_free */
extern T1 T763f42(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_instance_free */
extern T1 T762f38(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_instance_free */
extern T1 T761f37(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_instance_free */
extern T1 T760f43(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_instance_free */
extern T1 T759f39(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_instance_free */
extern T1 T757f20(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_instance_free */
extern T1 T756f22(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_instance_free */
extern T1 T755f24(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_instance_free */
extern T1 T754f23(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_instance_free */
extern T1 T753f27(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_instance_free */
extern T1 T752f20(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_instance_free */
extern T1 T751f25(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_instance_free */
extern T1 T750f21(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_instance_free */
extern T1 T749f21(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_instance_free */
extern T1 T748f20(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_instance_free */
extern T1 T745f25(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_instance_free */
extern T1 T744f20(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_instance_free */
extern T1 T743f20(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_instance_free */
extern T1 T742f20(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_instance_free */
extern T1 T741f20(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_instance_free */
extern T1 T740f25(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_instance_free */
extern T1 T686f31(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_instance_free */
extern T1 T685f31(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_instance_free */
extern T1 T684f29(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_instance_free */
extern T1 T683f29(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_instance_free */
extern T1 T681f30(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_instance_free */
extern T1 T680f30(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_instance_free */
extern T1 T679f44(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_instance_free */
extern T1 T678f44(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_instance_free */
extern T1 T677f44(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_instance_free */
extern T1 T676f44(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_instance_free */
extern T1 T675f45(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_instance_free */
extern T1 T674f36(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_instance_free */
extern T1 T673f33(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_instance_free */
extern T1 T672f31(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_instance_free */
extern T1 T671f33(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_instance_free */
extern T1 T630f27(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_instance_free */
extern T1 T627f26(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_instance_free */
extern T1 T613f34(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.variant_part */
extern T0* T613f29(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.invariant_part */
extern T0* T613f28(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.until_conditional */
extern T0* T613f21(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_instance_free */
extern T1 T568f28(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_instance_free */
extern T1 T559f28(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.expression */
extern T0* T559f12(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.is_instance_free */
extern T1 T589f22(TC* ac, T0* C);
/* ET_POSTCONDITIONS.assertion */
extern T0* T601f10(TC* ac, T0* C, T6 a1);
/* ET_POSTCONDITIONS.item */
extern T0* T601f11(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T710f58(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T714f53(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T713f75(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T712f78(TC* ac, T0* C);
/* ET_DO_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T711f76(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T708f77(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T707f80(TC* ac, T0* C);
/* ET_DO_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T706f78(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T705f53(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T704f51(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T703f79(TC* ac, T0* C);
/* ET_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T702f74(TC* ac, T0* C);
/* ET_PRECONDITIONS.is_instance_free */
extern T1 T604f11(TC* ac, T0* C);
/* ET_PRECONDITIONS.assertion */
extern T0* T604f9(TC* ac, T0* C, T6 a1);
/* ET_PRECONDITIONS.item */
extern T0* T604f10(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.is_builtin_static */
extern T1 T710f57(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.string_ */
extern T0* T710s61(TC* ac);
/* ET_EXTERNAL_PROCEDURE.is_implicitly_static */
extern T1 T714f50(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_builtin_static */
extern T1 T714f52(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.string_ */
extern T0* T714s56(TC* ac);
/* ET_UNIQUE_ATTRIBUTE.is_implicitly_static */
extern T1 T705f51(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_implicitly_static */
extern T1 T704f49(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuno5b_error */
extern void T63f500(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuno5b */
extern T0* T1445c1188(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuno5b_error */
extern void T42f500(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.is_like_current */
extern T1 T848f49(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_like_current */
extern T1 T725f49(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_like_current */
extern T1 T724f52(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_like_current */
extern T1 T722f49(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_like_current */
extern T1 T183f77(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_like_current */
extern T1 T102f78(TC* ac, T0* C);
/* ET_LIKE_CURRENT.is_like_current */
extern T1 T199s46(TC* ac);
/* ET_NULL_ERROR_HANDLER.report_vuno3a_error */
extern void T63f499(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuno3a */
extern T0* T1445c1187(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuno3_error */
extern T1 T63f134(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuno3a_error */
extern void T42f499(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuno3_error */
extern T1 T42f134(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_supplier */
extern void T100f376(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.type */
extern T0* T627f10(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.set_parenthesis_call */
extern void T627f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_INSTRUCTION.set_parenthesis_call */
extern void T739f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_procedure_call_instruction_validity */
extern void T100f284(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_instruction */
extern void T100f379(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_procedure_call_instruction_validity */
extern void T100f283(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_type_validity */
extern void T100f194(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_type_validity */
extern void T864f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.type */
extern T0* T739f11(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_static_call_instruction */
extern void T857f359(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_instruction_validity */
extern void T857f407(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_parenthesis_call_validity */
extern void T857f244(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T857f244ot1(TC* ac, T0* a1);
extern T1 T857f244ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_static_query_call_expression_validity */
extern void T857f245(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_static_call_expression */
extern void T857f328(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_feature_validity */
extern void T857f327(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T857f327ot1(TC* ac, T0* a1);
extern T1 T857f327ot2(TC* ac, T0* a1);
extern T1 T857f327ot3(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_static_supplier */
extern void T857f324(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_static_supplier */
extern void T1141f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_procedure_call_instruction_validity */
extern void T857f433(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_static_call_instruction */
extern void T857f444(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_dotnet_procedure_call_instruction_validity */
extern void T857f432(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_type_validity */
extern void T857f242(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_static_call_instruction */
extern void T114f1426(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_instruction */
extern void T114f1450(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.process */
extern void T737f17(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_instruction */
extern void T1131f36(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_precursor_validity */
extern void T1131f102(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CLAUSE_LIST.item */
extern T0* T594f3(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3c_error */
extern void T63f614(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3c */
extern T0* T1445c1292(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.tokens */
extern T0* T1445s915(TC* ac);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T63f88(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr3c_error */
extern void T42f614(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T42f88(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_any_class */
extern T1 T70f160(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdpr3b_error */
extern void T63f613(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3b */
extern T0* T1445c1291(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3b_error */
extern void T42f613(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.is_deferred */
extern T1 T714f42(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_deferred */
extern T1 T713s42(TC* ac);
/* ET_ONCE_PROCEDURE.is_deferred */
extern T1 T712f41(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_deferred */
extern T1 T711f44(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_deferred */
extern T1 T710f62(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_deferred */
extern T1 T708s49(TC* ac);
/* ET_ONCE_FUNCTION.is_deferred */
extern T1 T707f52(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_deferred */
extern T1 T706f51(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_deferred */
extern T1 T705f56(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_deferred */
extern T1 T704f54(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_deferred */
extern T1 T703f55(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_deferred */
extern T1 T702f49(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.set_parent_type */
extern void T740f35(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_type */
extern void T737f22(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_seed */
extern void T279f27(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3a_error */
extern void T63f612(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vdpr3a */
extern T0* T1445c1290(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vdpr3a_error */
extern void T42f612(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_PARENT_FEATURE.same_version */
extern T1 T1561f16(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.version */
extern T6 T714f31(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.version */
extern T6 T713f28(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.version */
extern T6 T712f31(TC* ac, T0* C);
/* ET_DO_PROCEDURE.version */
extern T6 T711f30(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.version */
extern T6 T710f33(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.version */
extern T6 T708f30(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.version */
extern T6 T707f33(TC* ac, T0* C);
/* ET_DO_FUNCTION.version */
extern T6 T706f32(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.version */
extern T6 T705f26(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.version */
extern T6 T704f25(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.version */
extern T6 T703f30(TC* ac, T0* C);
/* ET_ATTRIBUTE.version */
extern T6 T702f23(TC* ac, T0* C);
/* ET_PARENT_FEATURE.is_deferred */
extern T1 T1561f15(TC* ac, T0* C);
/* ET_PARENT_FEATURE.has_undefine */
extern T1 T1561f19(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdpr2a_error */
extern void T63f611(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr2a */
extern T0* T1445c1289(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T63f192(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr2a_error */
extern void T42f611(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T42f192(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.error_handler */
extern T0* T1131f9(TC* ac, T0* C);
/* ET_PRECURSOR_CHECKER.set_fatal_error */
extern void T1131f110(TC* ac, T0* C);
/* ET_ECF_LIBRARY.has_master_class */
extern T1 T802f107(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.has_master_class */
extern T1 T87f155(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.has_master_class */
extern T1 T50f120(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.current_universe */
extern T0* T1131f8(TC* ac, T0* C);
/* ET_IDENTIFIER.class_name */
extern T0* T303f116(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_instruction */
extern void T100f189(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_instruction_validity */
extern void T100f257(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_parenthesis_call_validity */
extern void T100f282(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T100f282ot1(TC* ac, T0* a1);
extern T1 T100f282ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_query_expression_validity */
extern void T100f375(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_expression */
extern void T100f463(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.dynamic_precursor */
extern T0* T860f40(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FEATURE.dynamic_precursor */
extern T0* T845f43(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR_LIST.force_last */
extern void T861f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].force */
extern void T1874s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].fill_with */
extern void T1873f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].extend */
extern void T1873f8(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.fixed_array */
extern T0* T861f4(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].default_create */
extern T0* T1874c3(TC* ac);
/* ET_DYNAMIC_PRECURSOR_LIST.resize */
extern void T861f10(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T1874s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T1873f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.new_capacity */
extern T6 T861f6(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.capacity */
extern T6 T861f5(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.put_last */
extern void T861f8(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.make_with_capacity */
extern T0* T861c7(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].make */
extern T0* T1874s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].make_empty */
extern T0* T1873c5(TC* ac, T6 a1);
/* ET_DYNAMIC_PRECURSOR.make */
extern T0* T860c52(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PRECURSOR.make_feature */
extern void T860f62(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T860f62ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PRECURSOR.tokens */
extern T0* T860s46(TC* ac);
/* ET_DYNAMIC_PRECURSOR.empty_dynamic_type_sets */
extern T0* T860f45(TC* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.make */
extern T0* T858c15(TC* ac);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].make */
extern T0* T1284s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].make_empty */
extern T0* T1283c5(TC* ac, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0h_error */
extern void T63f444(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0h */
extern T0* T1445c1132(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vucr0h_error */
extern void T42f444(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_parenthesis_call */
extern void T740f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_INSTRUCTION.set_parenthesis_call */
extern void T737f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_procedure_instruction_validity */
extern void T100f281(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_instruction */
extern void T100f374(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3d_error */
extern void T63f380(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3d */
extern T0* T1445c1068(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr3d_error */
extern void T42f380(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE.first_precursor */
extern T0* T714f26(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.first_precursor */
extern T0* T712f26(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.first_precursor */
extern T0* T710f28(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.first_precursor */
extern T0* T708f25(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.first_precursor */
extern T0* T707f28(TC* ac, T0* C);
/* ET_DO_FUNCTION.first_precursor */
extern T0* T706f27(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.first_precursor */
extern T0* T705f22(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.first_precursor */
extern T0* T704f20(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.first_precursor */
extern T0* T703f25(TC* ac, T0* C);
/* ET_ATTRIBUTE.first_precursor */
extern T0* T702f18(TC* ac, T0* C);
/* ET_DO_PROCEDURE.first_precursor */
extern T0* T711f23(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.first_precursor */
extern T0* T713f21(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdpr3e_error */
extern void T63f379(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3e */
extern T0* T1445c1067(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3e_error */
extern void T42f379(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr1a_error */
extern void T63f517(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1a */
extern T0* T1445c1205(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T63f87(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr1a_error */
extern void T42f517(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T42f87(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_instruction */
extern void T857f358(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_instruction_validity */
extern void T857f406(TC* ac, T0* C, T0* a1);
extern T1 T857f406ot1(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_parenthesis_call_validity */
extern void T857f262(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T857f262ot1(TC* ac, T0* a1);
extern T1 T857f262ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_query_expression_validity */
extern void T857f263(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_SET [ET_QUERY].force_last */
extern void T1140f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].slots_put */
extern void T1140f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].clashes_put */
extern void T1140f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].slots_item */
extern T6 T1140f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].hash_position */
extern T6 T1140f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].resize */
extern void T1140f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].clashes_resize */
extern void T1140f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].special_integer_ */
extern T0* T1140s32(TC* ac);
/* DS_HASH_SET [ET_QUERY].key_storage_resize */
extern void T1140f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_resize */
extern void T1140f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].key_storage_item */
extern T0* T1140f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_item */
extern T0* T1140f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].clashes_item */
extern T6 T1140f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].slots_resize */
extern void T1140f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].new_modulus */
extern T6 T1140f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].new_capacity */
extern T6 T1140f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_put */
extern void T1140f56(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].search_position */
extern void T1140f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].key_equality_tester */
extern T0* T1140f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].unset_found_item */
extern void T1140f43(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_precursor_expression */
extern void T857f364(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_precursor_procedure_instruction_validity */
extern void T857f431(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [ET_PROCEDURE].force_last */
extern void T1139f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].slots_put */
extern void T1139f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].clashes_put */
extern void T1139f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].slots_item */
extern T6 T1139f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].hash_position */
extern T6 T1139f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].resize */
extern void T1139f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].clashes_resize */
extern void T1139f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].special_integer_ */
extern T0* T1139s32(TC* ac);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_resize */
extern void T1139f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_resize */
extern void T1139f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_item */
extern T0* T1139f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_item */
extern T0* T1139f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].clashes_item */
extern T6 T1139f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].slots_resize */
extern void T1139f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].new_modulus */
extern T6 T1139f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].new_capacity */
extern T6 T1139f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_put */
extern void T1139f56(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].search_position */
extern void T1139f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].key_equality_tester */
extern T0* T1139f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].unset_found_item */
extern void T1139f43(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_precursor_instruction */
extern void T857f443(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INVARIANTS.first_precursor */
extern T0* T539f14(TC* ac, T0* C);
/* ET_C_GENERATOR.process_precursor_instruction */
extern void T114f1425(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_instruction */
extern void T114f1449(TC* ac, T0* C, T0* a1);
/* ET_DEBUG_INSTRUCTION.process */
extern void T446f12(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_debug_instruction */
extern void T1131f35(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_debug_instruction */
extern void T100f188(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T100f256(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T100f256p1(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_debug_instruction */
extern void T857f357(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_debug_instruction_validity */
extern void T857f405(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_debug_instruction */
extern void T114f1401(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_debug_instruction */
extern void T114f1428(TC* ac, T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.process */
extern void T533f15(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inspect_instruction */
extern void T1131f34(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part_list */
extern void T1131f101(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part */
extern void T1131f109(TC* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.item */
extern T0* T662f9(TC* ac, T0* C, T6 a1);
/* ET_INSPECT_INSTRUCTION.expression */
extern T0* T533f11(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_instruction */
extern void T100f187(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_instruction_validity */
extern void T100f255(TC* ac, T0* C, T0* a1);
extern T1 T100f255ot1(TC* ac, T0* a1);
extern T1 T100f255ot2(TC* ac, T0* a1);
extern T1 T100f255ot3(TC* ac, T0* a1);
extern T1 T100f255ot4(TC* ac, T0* a1);
/* ET_ATTACHMENT_SCOPE.merge_scope */
extern void T880f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].remove */
extern void T933f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].remove_position */
extern void T933f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].move_cursors_forth */
extern void T933f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].internal_set_key_equality_tester */
extern void T933f74(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.upper */
extern T0* T303f88(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.upper */
extern T0* T1033f30(TC* ac, T0* C);
/* ET_CHOICE_RANGE.upper */
extern T0* T735f2(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.upper */
extern T0* T686f36(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.upper */
extern T0* T685f36(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.upper */
extern T0* T679f52(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.upper */
extern T0* T678f52(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.upper */
extern T0* T677f52(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.upper */
extern T0* T676f52(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.upper */
extern T0* T675f52(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.upper */
extern T0* T671f37(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.upper */
extern T0* T627f30(TC* ac, T0* C);
/* ET_IDENTIFIER.is_range */
extern T1 T303f86(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_range */
extern T1 T1033f28(TC* ac, T0* C);
/* ET_CHOICE_RANGE.is_range */
extern T1 T735s6(TC* ac);
/* ET_C2_CHARACTER_CONSTANT.is_range */
extern T1 T686f34(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_range */
extern T1 T685f34(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_range */
extern T1 T679f50(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_range */
extern T1 T678f50(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_range */
extern T1 T677f50(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_range */
extern T1 T676f50(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_range */
extern T1 T675f50(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_range */
extern T1 T671f35(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_range */
extern T1 T627f28(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.cast_type */
extern T0* T686f4(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.cast_type */
extern T0* T685f3(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.cast_type */
extern T0* T671f5(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vomb2a_error */
extern void T63f418(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vomb2a */
extern T0* T1445c1106(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T63f102(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb2a_error */
extern void T42f418(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T42f102(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.cast_type */
extern T0* T679f6(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.cast_type */
extern T0* T678f6(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.cast_type */
extern T0* T677f6(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.cast_type */
extern T0* T676f6(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.cast_type */
extern T0* T675f7(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vomb2b_error */
extern void T63f417(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vomb2b */
extern T0* T1445c1105(TC* ac, T0* a1, T0* a2, T0* a3);
extern T1 T1445f1105ot1(TC* ac, T0* a1);
extern T1 T1445f1105ot2(TC* ac, T0* a1);
/* ET_ERROR_HANDLER.report_vomb2b_error */
extern void T42f417(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.choice_constant */
extern T0* T100f85(TC* ac, T0* C, T0* a1);
extern T1 T100f85ot1(TC* ac, T0* a1);
extern T1 T100f85ot2(TC* ac, T0* a1);
extern T1 T100f85ot3(TC* ac, T0* a1);
extern T1 T100f85ot4(TC* ac, T0* a1);
extern T1 T100f85ot5(TC* ac, T0* a1);
extern T1 T100f85ot6(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.integer_choice_constant */
extern T0* T100f100(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_integer_constant */
extern T1 T674f42(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_integer_constant */
extern T1 T673f38(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_integer_constant */
extern T1 T684f33(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_integer_constant */
extern T1 T683f33(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_integer_constant */
extern T1 T681f35(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_integer_constant */
extern T1 T680f35(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_integer_constant */
extern T1 T672f37(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T686f40(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T685f40(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_constant */
extern T1 T679s56(TC* ac);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_constant */
extern T1 T678s56(TC* ac);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_constant */
extern T1 T677s56(TC* ac);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_constant */
extern T1 T676s56(TC* ac);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_constant */
extern T1 T675s56(TC* ac);
/* ET_C3_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T671f41(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.character_choice_constant */
extern T0* T100f99(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_character_constant */
extern T1 T674f41(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_character_constant */
extern T1 T673f37(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_character_constant */
extern T1 T684f32(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_character_constant */
extern T1 T683f32(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_character_constant */
extern T1 T681f34(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_character_constant */
extern T1 T680f34(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_character_constant */
extern T1 T672f36(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_character_constant */
extern T1 T686s39(TC* ac);
/* ET_C1_CHARACTER_CONSTANT.is_character_constant */
extern T1 T685s39(TC* ac);
/* ET_BINARY_INTEGER_CONSTANT.is_character_constant */
extern T1 T679f55(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T678f55(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T677f55(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_character_constant */
extern T1 T676f55(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_character_constant */
extern T1 T675f55(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_character_constant */
extern T1 T671s40(TC* ac);
/* ET_UNQUALIFIED_CALL_EXPRESSION.arguments_count */
extern T6 T1033f25(TC* ac, T0* C);
/* ET_IDENTIFIER.lower */
extern T0* T303f87(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.lower */
extern T0* T1033f29(TC* ac, T0* C);
/* ET_CHOICE_RANGE.lower */
extern T0* T735f1(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.lower */
extern T0* T686f35(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.lower */
extern T0* T685f35(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.lower */
extern T0* T679f51(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.lower */
extern T0* T678f51(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.lower */
extern T0* T677f51(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.lower */
extern T0* T676f51(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.lower */
extern T0* T675f51(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.lower */
extern T0* T671f36(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.lower */
extern T0* T627f29(TC* ac, T0* C);
/* ET_CHOICE_LIST.choice */
extern T0* T394f6(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.choice */
extern T0* T303f79(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.choice */
extern T0* T679f43(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.choice */
extern T0* T678f43(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.choice */
extern T0* T677f43(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.choice */
extern T0* T676f43(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.choice */
extern T0* T675f44(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.choice */
extern T0* T671f32(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.choice */
extern T0* T1033f23(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.choice */
extern T0* T627f25(TC* ac, T0* C);
/* ET_CHOICE_RANGE.choice */
extern T0* T735f5(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.choice */
extern T0* T686f30(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.choice */
extern T0* T685f30(TC* ac, T0* C);
/* ET_CHOICE_LIST.item */
extern T0* T394f7(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vomb1a_error */
extern void T63f416(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vomb1a */
extern T0* T1445c1104(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T63f101(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb1a_error */
extern void T42f416(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T42f101(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_inspect_instruction */
extern void T857f356(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inspect_instruction_validity */
extern void T857f404(TC* ac, T0* C, T0* a1);
extern T1 T857f404ot1(TC* ac, T0* a1);
extern T1 T857f404ot2(TC* ac, T0* a1);
extern T1 T857f404ot3(TC* ac, T0* a1);
extern T1 T857f404ot4(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.choice_constant */
extern T0* T857f61(TC* ac, T0* C, T0* a1);
extern T1 T857f61ot1(TC* ac, T0* a1);
extern T1 T857f61ot2(TC* ac, T0* a1);
extern T1 T857f61ot3(TC* ac, T0* a1);
extern T1 T857f61ot4(TC* ac, T0* a1);
extern T1 T857f61ot5(TC* ac, T0* a1);
extern T1 T857f61ot6(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.integer_choice_constant */
extern T0* T857f74(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.character_choice_constant */
extern T0* T857f73(TC* ac, T0* C);
/* ET_C_GENERATOR.process_inspect_instruction */
extern void T114f1404(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inspect_instruction */
extern void T114f1430(TC* ac, T0* C, T0* a1);
extern T1 T114f1430ot1(TC* ac, T0* a1);
extern T1 T114f1430ot2(TC* ac, T0* a1);
extern T1 T114f1430ot3(TC* ac, T0* a1);
extern T1 T114f1430ot4(TC* ac, T0* a1);
extern T1 T114f1430ot5(TC* ac, T0* a1);
extern T1 T114f1430ot6(TC* ac, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.value */
extern T11 T679f4(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.value */
extern T11 T678f4(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.value */
extern T11 T677f4(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.value */
extern T11 T676f4(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.value */
extern T11 T675f3(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_warning_message */
extern void T63f244(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_warning_message */
extern void T42f244(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_character_8 */
extern void T114f1260(TC* ac, T0* C, T2 a1);
/* UT_INTEGER_FORMATTER.put_octal_integer */
extern void T989s2(TC* ac, T0* a1, T6 a2);
/* ET_C_GENERATOR.integer_formatter_ */
extern T0* T114s331(TC* ac);
/* UT_INTEGER_FORMATTER.default_create */
extern T0* T989c1(TC* ac);
/* ET_C_GENERATOR.print_type_cast */
extern void T114f751(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_name */
extern void T114f770(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_32 */
extern void T229f11(TC* ac, T0* C, T10 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_64 */
extern void T229f12(TC* ac, T0* C, T11 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_32 */
extern void T912f12(TC* ac, T0* C, T10 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_64 */
extern void T912f13(TC* ac, T0* C, T11 a1);
/* ET_C3_CHARACTER_CONSTANT.value */
extern T3 T671f3(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.value */
extern T3 T686f2(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.value */
extern T3 T685f2(TC* ac, T0* C);
/* ET_C_GENERATOR.print_integer_value */
extern void T114f1264(TC* ac, T0* C, T11 a1, T1 a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.current_universe_impl */
extern T0* T114f322(TC* ac, T0* C);
/* INTEGER_32.abs */
extern T6 T6f34(TC* ac, volatile T6* C);
/* INTEGER_32.abs_ref */
extern T6 T6f35(TC* ac, volatile T6* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_32 */
extern T6 T679f42(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T678f42(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T677f42(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_32 */
extern T6 T676f42(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_32 */
extern T6 T675f15(TC* ac, T0* C);
/* ET_C_GENERATOR.choice_constant */
extern T0* T114f609(TC* ac, T0* C, T0* a1);
extern T1 T114f609ot1(TC* ac, T0* a1);
extern T1 T114f609ot2(TC* ac, T0* a1);
extern T1 T114f609ot3(TC* ac, T0* a1);
extern T1 T114f609ot4(TC* ac, T0* a1);
extern T1 T114f609ot5(TC* ac, T0* a1);
/* ET_WHEN_PART.position */
extern T0* T659f8(TC* ac, T0* C);
/* ET_CHOICE_LIST.position */
extern T0* T394f11(TC* ac, T0* C);
/* ET_CHOICE_RANGE.position */
extern T0* T735f10(TC* ac, T0* C);
/* ET_CHOICE_LIST.first */
extern T0* T394f13(TC* ac, T0* C);
/* ET_CHOICE_LIST.is_empty */
extern T1 T394f12(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.process */
extern void T512f17(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_if_instruction */
extern void T1131f33(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part_list */
extern void T1131f100(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART.process */
extern void T455f11(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part */
extern void T1131f120(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART.expression */
extern T0* T455f9(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.item */
extern T0* T458f9(TC* ac, T0* C, T6 a1);
/* ET_IF_INSTRUCTION.expression */
extern T0* T512f12(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_instruction */
extern void T100f186(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_instruction_validity */
extern void T100f254(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_if_instruction */
extern void T857f355(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_instruction_validity */
extern void T857f403(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_if_instruction */
extern void T114f1402(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_instruction */
extern void T114f1429(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART.position */
extern T0* T455f8(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.process */
extern void T734f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_instruction */
extern void T1131f32(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_instruction */
extern void T100f185(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_instruction_validity */
extern void T100f253(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkin5ga_error */
extern void T63f516(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkin5ga */
extern T0* T1445c1204(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vkin5g_error */
extern T1 T63f144(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkin5ga_error */
extern void T42f516(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vkin5g_error */
extern T1 T42f144(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_instruction_validity */
extern void T100f280(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc6d_error */
extern void T63f528(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6d */
extern T0* T1445c1216(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6d_error */
extern void T42f528(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_dotnet_creation_procedure_call_instruction_validity */
extern void T100f372(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_procedure_call_instruction_validity */
extern void T100f371(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5, T0* a6);
extern T1 T100f371ot1(TC* ac, T0* a1);
extern T1 T100f371ot2(TC* ac, T0* a1);
extern T1 T100f371ot3(TC* ac, T0* a1);
extern T1 T100f371ot4(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_instruction */
extern void T100f459(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_creation_dynamic_type */
extern void T100f523(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE.add_name */
extern void T880f17(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_attribute */
extern void T880f21(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_formal_argument */
extern void T880f20(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_local_variable */
extern void T880f19(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_detachable */
extern T1 T722f14(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_detachable */
extern T1 T183f45(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_detachable */
extern T1 T848f13(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_detachable */
extern T1 T102f45(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_detachable */
extern T1 T725f15(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable */
extern T1 T724f18(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_detachable */
extern T1 T199f11(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.type */
extern T0* T764f28(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.type */
extern T0* T763f36(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.type */
extern T0* T762f32(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.type */
extern T0* T761f30(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.type */
extern T0* T760f37(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.type */
extern T0* T759f33(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.add_result */
extern void T880f15(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_procedure_call_validity */
extern void T100f458(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_N.is_like_current */
extern T1 T1844f20(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_like_current */
extern T1 T691f49(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_like_current */
extern T1 T500f51(TC* ac, T0* C);
/* ET_CLASS.is_like_current */
extern T1 T70f218(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_creation_procedure_call_validity */
extern void T100f457(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_parameter_creation_vape_validity */
extern void T100f521(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vape2b_error */
extern void T63f537(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape2b */
extern T0* T1445c1225(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vape2b_error */
extern void T42f537(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_CLIENT.reset */
extern void T189f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vgcc8a_error */
extern void T63f520(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8a */
extern T0* T1445c1208(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T63f147(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc8a_error */
extern void T42f520(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T42f147(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_no_creation_procedure_call_validity */
extern void T100f456(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc1a_error */
extern void T63f519(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc1a */
extern T0* T1445c1207(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T63f146(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc1a_error */
extern void T42f519(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T42f146(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc5a_error */
extern void T63f518(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5a */
extern T0* T1445c1206(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T63f145(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc5a_error */
extern void T42f518(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T42f145(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_type_validity */
extern void T100f455(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TYPE_CHECKER.check_creation_type_validity */
extern void T864f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T864f25ot1(TC* ac, T0* a1);
extern T1 T864f25ot2(TC* ac, T0* a1);
extern T1 T864f25ot3(TC* ac, T0* a1);
extern T1 T864f25ot4(TC* ac, T0* a1);
extern T1 T864f25ot5(TC* ac, T0* a1);
/* ET_TYPE_CHECKER.ise_6_0_6_7358 */
extern T0* T864s18(TC* ac);
/* ET_TUPLE_TYPE.actual_parameters */
extern T0* T183f1(TC* ac, T0* C);
/* ET_CLASS.formal_parameters */
extern T0* T70f20(TC* ac, T0* C);
/* ET_CLASS_TYPE.actual_parameters */
extern T0* T102f4(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.is_type_valid */
extern T1 T100f91(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.set_class_interface_error_only */
extern void T864f39(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_create_supplier */
extern void T100f454(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc3a_error */
extern void T63f539(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc3a */
extern T0* T1445c1227(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.ast_position */
extern T0* T1445f127(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T63f154(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc3a_error */
extern void T42f539(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T42f154(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.shallow_named_type */
extern T0* T1844f16(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.shallow_named_type_with_type_mark */
extern T0* T1844f32(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T691f37(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T691f37ot1(TC* ac, T0* a1);
extern T1 T691f37ot2(TC* ac, T0* a1);
extern T1 T691f37ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T500f39(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T500f39ot1(TC* ac, T0* a1);
extern T1 T500f39ot2(TC* ac, T0* a1);
extern T1 T500f39ot3(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.shallow_named_type_with_type_mark */
extern T0* T722f56(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.shallow_named_type_with_type_mark */
extern T0* T725f56(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T725f56ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type_with_type_mark */
extern T0* T724f59(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T724f59ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.shallow_named_type_with_type_mark */
extern T0* T199f54(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_named_type_with_type_mark */
extern T0* T70f215(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_base_type_with_type_mark */
extern T0* T70f217(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type_with_type_mark */
extern T0* T848f54(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T848f54ot1(TC* ac, T0* a1);
extern T1 T848f54ot2(TC* ac, T0* a1);
extern T1 T848f54ot3(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.shallow_named_type_with_type_mark */
extern T0* T183f84(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_base_type_with_type_mark */
extern T0* T183f85(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_named_type_with_type_mark */
extern T0* T102f92(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_base_type_with_type_mark */
extern T0* T102f97(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type */
extern T0* T691f26(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_named_type */
extern T0* T500f25(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_named_type */
extern T0* T722f48(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_named_type */
extern T0* T725f48(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type */
extern T0* T724f51(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_named_type */
extern T0* T199f45(TC* ac, T0* C, T0* a1);
/* ET_CLASS.shallow_named_type */
extern T0* T70f205(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type */
extern T0* T848f48(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_named_type */
extern T0* T183f76(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_named_type */
extern T0* T102f77(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.first */
extern T0* T847f45(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_writable_validity */
extern void T100f276(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f276ot1(TC* ac, T0* a1);
extern T1 T100f276ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_assignment_target */
extern void T100f365(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vucr0c_error */
extern void T63f527(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0c */
extern T0* T1445c1215(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vucr0c_error */
extern void T42f527(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vjaw0a_error */
extern void T63f526(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0a */
extern T0* T1445c1214(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T63f148(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjaw0a_error */
extern void T42f526(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T42f148(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen0a_error */
extern void T63f525(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0a */
extern T0* T1445c1213(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen_error */
extern T1 T63f149(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen0a_error */
extern void T42f525(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen_error */
extern T1 T42f149(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen0b_error */
extern void T63f524(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0b */
extern T0* T1445c1212(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen0b_error */
extern void T42f524(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0b_error */
extern void T63f523(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0b */
extern T0* T1445c1211(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0b_error */
extern void T42f523(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0c_error */
extern void T63f522(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0c */
extern T0* T1445c1210(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0c_error */
extern void T42f522(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_assignment_target */
extern void T100f364(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_assignment_target */
extern void T100f363(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result */
extern void T100f453(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.result_index */
extern T6 T764f15(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.result_index */
extern T6 T763f17(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.result_index */
extern T6 T762f16(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.result_index */
extern T6 T761f17(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.result_index */
extern T6 T760f19(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.result_index */
extern T6 T759f18(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.detachable_type */
extern T0* T95f81(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.attached_result_index */
extern T6 T764f14(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.attached_result_index */
extern T6 T763f16(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.attached_result_index */
extern T6 T762f15(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.attached_result_index */
extern T6 T761f16(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.attached_result_index */
extern T6 T760f18(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.attached_result_index */
extern T6 T759f17(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_veen2a_error */
extern void T63f395(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2a */
extern T0* T1445c1083(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2a_error */
extern void T42f395(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2g_error */
extern void T63f412(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2g */
extern T0* T1445c1100(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2g_error */
extern void T42f412(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_INSTRUCTION.type */
extern T0* T734f14(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_create_instruction */
extern void T857f354(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_instruction_validity */
extern void T857f402(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_instruction_validity */
extern void T857f430(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_dotnet_creation_procedure_call_instruction_validity */
extern void T857f442(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_creation_procedure_call_instruction_validity */
extern void T857f441(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5, T0* a6);
extern T1 T857f441ot1(TC* ac, T0* a1);
extern T1 T857f441ot2(TC* ac, T0* a1);
extern T1 T857f441ot3(TC* ac, T0* a1);
extern T1 T857f441ot4(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_creation_instruction */
extern void T857f446(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INVARIANTS.type */
extern T0* T539f18(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_creation_procedure_call_validity */
extern void T857f414(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_formal_creation_procedure_call_validity */
extern void T857f413(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_formal_parameter_creation_vape_validity */
extern void T857f436(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_no_creation_procedure_call_validity */
extern void T857f412(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_creation_type_validity */
extern void T857f411(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.is_type_valid */
extern T1 T857f72(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_create_supplier */
extern void T857f410(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_create_supplier */
extern void T1141f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_writable_validity */
extern void T857f426(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T857f426ot1(TC* ac, T0* a1);
extern T1 T857f426ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_expression_supplier */
extern void T857f80(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_expression_supplier */
extern void T1141f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_attribute_assignment_target */
extern void T857f440(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_assignment_target */
extern void T857f439(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result_assignment_target */
extern void T857f438(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_create_instruction */
extern void T114f1423(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_instruction */
extern void T114f1448(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_instruction */
extern void T114f1459(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assign_result_to_once_value */
extern void T114f1374(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_value */
extern void T114f947(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_thread_value */
extern void T114f1181(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.once_prefixes */
extern T0* T114f537(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_once_per_thread */
extern T1 T860f36(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once_per_thread */
extern T1 T714f34(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once_per_thread */
extern T1 T713f33(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_once_per_thread */
extern T1 T712f33(TC* ac, T0* C);
/* ET_NOTE_LIST.has_note_term_with_tag */
extern T1 T571f7(TC* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.has_thread_key */
extern T1 T1838s3(TC* ac, T0* a1);
/* ET_DO_PROCEDURE.is_once_per_thread */
extern T1 T711f36(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once_per_thread */
extern T1 T710f45(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once_per_thread */
extern T1 T708f41(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_once_per_thread */
extern T1 T707f44(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_once_per_thread */
extern T1 T706f43(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once_per_thread */
extern T1 T705f39(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once_per_thread */
extern T1 T704f37(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once_per_thread */
extern T1 T703f43(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_once_per_thread */
extern T1 T702f35(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once_per_thread */
extern T1 T845f22(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_process_value */
extern void T114f1180(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_DYNAMIC_PRECURSOR.is_once_per_process */
extern T1 T860f31(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once_per_process */
extern T1 T714f33(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once_per_process */
extern T1 T713f32(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_once_per_process */
extern T1 T712f32(TC* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.has_process_key */
extern T1 T1838s2(TC* ac, T0* a1);
/* ET_DO_PROCEDURE.is_once_per_process */
extern T1 T711f35(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once_per_process */
extern T1 T710f44(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once_per_process */
extern T1 T708f40(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_once_per_process */
extern T1 T707f43(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_once_per_process */
extern T1 T706f42(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once_per_process */
extern T1 T705f38(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once_per_process */
extern T1 T704f36(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once_per_process */
extern T1 T703f42(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_once_per_process */
extern T1 T702f34(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once_per_process */
extern T1 T845f51(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_object_value */
extern void T114f1179(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_value_name */
extern void T114f807(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_onces_access */
extern void T114f1236(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_onces_name */
extern void T114f803(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_non_void_expression */
extern void T114f812(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_check_void_expression */
extern void T114f848(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.check_for_void_target_mode */
extern T1 T114f377(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_never_void */
extern T1 T2041f9(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_never_void */
extern T1 T2040s10(TC* ac);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_never_void */
extern T1 T2039f8(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_never_void */
extern T1 T1870f8(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_never_void */
extern T1 T339f23(TC* ac, T0* C);
/* ET_CALL_AGENT.is_never_void */
extern T1 T376s13(TC* ac);
/* ET_BRACKET_EXPRESSION.is_never_void */
extern T1 T373f11(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_never_void */
extern T1 T530f11(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_never_void */
extern T1 T509f15(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_never_void */
extern T1 T436s19(TC* ac);
/* ET_BINARY_INTEGER_CONSTANT.is_never_void */
extern T1 T679s14(TC* ac);
/* ET_OCTAL_INTEGER_CONSTANT.is_never_void */
extern T1 T678s14(TC* ac);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_never_void */
extern T1 T677s14(TC* ac);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_never_void */
extern T1 T676s14(TC* ac);
/* ET_VERBATIM_STRING.is_never_void */
extern T1 T674s19(TC* ac);
/* ET_SPECIAL_MANIFEST_STRING.is_never_void */
extern T1 T673s16(TC* ac);
/* ET_C3_CHARACTER_CONSTANT.is_never_void */
extern T1 T671s13(TC* ac);
/* ET_ITERATION_CURSOR.is_never_void */
extern T1 T757s7(TC* ac);
/* ET_QUANTIFIER_EXPRESSION.is_never_void */
extern T1 T613f18(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_never_void */
extern T1 T756s8(TC* ac);
/* ET_NAMED_OBJECT_TEST.is_never_void */
extern T1 T755f10(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_never_void */
extern T1 T753f13(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_never_void */
extern T1 T741s7(TC* ac);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T1033f6(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_never_void */
extern T1 T764s17(TC* ac);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_never_void */
extern T1 T763s19(TC* ac);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_never_void */
extern T1 T762s18(TC* ac);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_never_void */
extern T1 T761s19(TC* ac);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_never_void */
extern T1 T760s21(TC* ac);
/* ET_DO_FUNCTION_INLINE_AGENT.is_never_void */
extern T1 T759s20(TC* ac);
/* ET_STRIP_EXPRESSION.is_never_void */
extern T1 T630s11(TC* ac);
/* ET_MANIFEST_ARRAY.is_never_void */
extern T1 T559s11(TC* ac);
/* ET_PARENTHESIZED_EXPRESSION.is_never_void */
extern T1 T589f8(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_never_void */
extern T1 T754f8(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_never_void */
extern T1 T752f7(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_never_void */
extern T1 T751f6(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_never_void */
extern T1 T750s8(TC* ac);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_never_void */
extern T1 T749f7(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_never_void */
extern T1 T748f7(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_never_void */
extern T1 T745f7(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_never_void */
extern T1 T744s7(TC* ac);
/* ET_RESULT_ADDRESS.is_never_void */
extern T1 T743s7(TC* ac);
/* ET_CURRENT_ADDRESS.is_never_void */
extern T1 T742s7(TC* ac);
/* ET_PRECURSOR_EXPRESSION.is_never_void */
extern T1 T740f9(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_never_void */
extern T1 T627f8(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_never_void */
extern T1 T685s11(TC* ac);
/* ET_TRUE_CONSTANT.is_never_void */
extern T1 T683s12(TC* ac);
/* ET_UNDERSCORED_REAL_CONSTANT.is_never_void */
extern T1 T681s12(TC* ac);
/* ET_REGULAR_MANIFEST_STRING.is_never_void */
extern T1 T672s14(TC* ac);
/* ET_FALSE_CONSTANT.is_never_void */
extern T1 T684s12(TC* ac);
/* ET_C2_CHARACTER_CONSTANT.is_never_void */
extern T1 T686s11(TC* ac);
/* ET_REGULAR_REAL_CONSTANT.is_never_void */
extern T1 T680s13(TC* ac);
/* ET_REGULAR_INTEGER_CONSTANT.is_never_void */
extern T1 T675s16(TC* ac);
/* ET_VOID.is_never_void */
extern T1 T327f12(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T379f12(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_never_void */
extern T1 T568s15(TC* ac);
/* ET_DYNAMIC_INLINED_EXPRESSION.is_never_void */
extern T1 T980f6(TC* ac, T0* C);
/* ET_RESULT.is_never_void */
extern T1 T318f7(TC* ac, T0* C);
/* ET_CURRENT.is_never_void */
extern T1 T297s10(TC* ac);
/* ET_IDENTIFIER.is_never_void */
extern T1 T303f11(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.can_be_void */
extern T1 T1814f11(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.can_be_void */
extern T1 T1050f11(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.can_be_void */
extern T1 T969f7(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.can_be_void */
extern T1 T924f7(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.can_be_void */
extern T1 T1049f53(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.can_be_void */
extern T1 T1048f54(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.can_be_void */
extern T1 T966f60(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.can_be_void */
extern T1 T894f59(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.can_be_void */
extern T1 T838f26(TC* ac, T0* C);
/* ET_C_GENERATOR.once_kind */
extern T6 T114f398(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_real_64_class */
extern T1 T70f104(TC* ac, T0* C);
/* ET_CLASS.is_real_32_class */
extern T1 T70f103(TC* ac, T0* C);
/* ET_CLASS.is_pointer_class */
extern T1 T70f102(TC* ac, T0* C);
/* ET_CLASS.is_natural_64_class */
extern T1 T70f101(TC* ac, T0* C);
/* ET_CLASS.is_natural_32_class */
extern T1 T70f100(TC* ac, T0* C);
/* ET_CLASS.is_natural_16_class */
extern T1 T70f99(TC* ac, T0* C);
/* ET_CLASS.is_natural_8_class */
extern T1 T70f98(TC* ac, T0* C);
/* ET_CLASS.is_integer_64_class */
extern T1 T70f97(TC* ac, T0* C);
/* ET_CLASS.is_integer_32_class */
extern T1 T70f96(TC* ac, T0* C);
/* ET_CLASS.is_integer_16_class */
extern T1 T70f95(TC* ac, T0* C);
/* ET_CLASS.is_integer_8_class */
extern T1 T70f94(TC* ac, T0* C);
/* ET_CLASS.is_character_32_class */
extern T1 T70f93(TC* ac, T0* C);
/* ET_CLASS.is_character_8_class */
extern T1 T70f92(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].found_item */
extern T6 T939f26(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].item_storage_item */
extern T6 T939f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].found */
extern T1 T939f33(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].search */
extern void T939f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].search_position */
extern void T939f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].hash_position */
extern T6 T939f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].key_storage_item */
extern T0* T939f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].clashes_item */
extern T6 T939f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].slots_item */
extern T6 T939f27(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.is_result */
extern T1 T303f51(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_once */
extern T1 T860f29(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once */
extern T1 T714f32(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once */
extern T1 T713f31(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_once */
extern T1 T712s53(TC* ac);
/* ET_DO_PROCEDURE.is_once */
extern T1 T711f34(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once */
extern T1 T710f39(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once */
extern T1 T708f35(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_once */
extern T1 T707s38(TC* ac);
/* ET_DO_FUNCTION.is_once */
extern T1 T706f37(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once */
extern T1 T705f33(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once */
extern T1 T704f31(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once */
extern T1 T703f36(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_once */
extern T1 T702f29(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once */
extern T1 T845f47(TC* ac, T0* C);
/* ET_C_GENERATOR.print_adapted_creation_procedure_call */
extern void T114f1488(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_creation_procedure_call */
extern T0* T114f1488ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_creation_procedure_call */
extern void T114f843(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_creation_procedure_name */
extern void T114f880(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_adapted_expression_with_agent */
extern void T114f864(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_boxed_attribute_item_name */
extern void T114f782(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_cast */
extern void T114f846(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_name */
extern void T114f781(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_adapted_separate_creation_procedure_call */
extern void T114f1487(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_separate_creation_procedure_call */
extern T0* T114f1487ac1(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_separate_creation_procedure_call */
extern void T114f842(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BANG_INSTRUCTION.process */
extern void T731f23(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bang_instruction */
extern void T1131f31(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bang_instruction */
extern void T100f184(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bang_instruction_validity */
extern void T100f252(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bang_instruction */
extern void T857f353(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bang_instruction_validity */
extern void T857f401(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_bang_instruction */
extern void T114f1422(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_bang_instruction */
extern void T114f1447(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.process */
extern void T729f20(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_instruction */
extern void T1131f30(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.until_expression */
extern T0* T729f15(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_loop_instruction */
extern void T100f183(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_instruction_validity */
extern void T100f251(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_loop_instruction */
extern void T857f352(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_instruction_validity */
extern void T857f400(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_loop_instruction */
extern void T114f1421(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_loop_instruction */
extern void T114f1446(TC* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT_ATTEMPT.process */
extern void T728f12(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assignment_attempt */
extern void T1131f29(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment_attempt */
extern void T100f182(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_attempt_validity */
extern void T100f250(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment_attempt */
extern void T100f278(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_attempt_dynamic_types */
extern void T100f367(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjrv0a_error */
extern void T63f515(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vjrv0a */
extern T0* T1445c1203(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T63f143(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjrv0a_error */
extern void T42f515(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T42f143(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference */
extern T1 T847f44(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.newer_or_same_ise_version */
extern T1 T66f46(TC* ac, T0* C, T0* a1);
/* UT_VERSION.is_greater_equal */
extern T1 T56f15(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.newer_or_same_ise_version */
extern T1 T853f48(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_5_7_0 */
extern T0* T100s84(TC* ac);
/* ET_FEATURE_CHECKER.process_assignment_attempt */
extern void T857f351(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_attempt_validity */
extern void T857f399(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment_attempt */
extern void T857f428(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_5_7_0 */
extern T0* T857s71(TC* ac);
/* ET_C_GENERATOR.process_assignment_attempt */
extern void T114f1420(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment_attempt */
extern void T114f1445(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.wipe_out */
extern void T923f20(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE].keep_head */
extern void T1007s5(TC* ac, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].keep_head */
extern void T1006f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].set_count */
extern void T1006f9(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.free_standalone_type_set */
extern void T114f822(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset */
extern void T924f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].force_last */
extern void T925f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].force */
extern void T1379s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].fill_with */
extern void T1378f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].extend */
extern void T1378f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].resize */
extern void T925f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T1379s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T1378f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].new_capacity */
extern T6 T925f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].extendible */
extern T1 T925f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_never_void */
extern T1 T1814f3(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_never_void */
extern T1 T1050f3(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_never_void */
extern T1 T924f4(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset_with_types */
extern void T924f21(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.new_standalone_type_set */
extern T0* T114f319(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].remove_last */
extern void T925f13(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].keep_head */
extern void T1378f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].set_count */
extern void T1378f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].move_last_cursors_after */
extern void T925f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].set_next_cursor */
extern void T1380f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].set_after */
extern void T1380f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].last */
extern T0* T925f6(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make */
extern T0* T924c17(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].is_empty */
extern T1 T925f10(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.is_empty */
extern T1 T923f9(TC* ac, T0* C);
/* ET_ASSIGNMENT.process */
extern void T727f14(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assignment */
extern void T1131f28(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment */
extern void T100f181(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_validity */
extern void T100f249(TC* ac, T0* C, T0* a1);
extern T1 T100f249ot1(TC* ac, T0* a1);
extern T1 T100f249ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment */
extern void T100f277(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_dynamic_types */
extern void T100f366(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_name */
extern void T880f18(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_attribute */
extern void T880f24(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_formal_argument */
extern void T880f23(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_local_variable */
extern void T880f22(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjar0b_error */
extern void T63f514(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vjar0b */
extern T0* T1445c1202(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vjar_error */
extern T1 T63f142(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjar0b_error */
extern void T42f514(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vjar_error */
extern T1 T42f142(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_result */
extern void T880f16(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_type_attached */
extern T1 T722f72(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_attached */
extern T1 T848f68(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_attached */
extern T1 T725f71(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_attached */
extern T1 T724f74(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_attached */
extern T1 T199f66(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjar0a_error */
extern void T63f513(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vjar0a */
extern T0* T1445c1201(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vjar0a_error */
extern void T42f513(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ASSIGNMENT.set_source */
extern void T727f15(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment */
extern void T857f350(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_validity */
extern void T857f398(TC* ac, T0* C, T0* a1);
extern T1 T857f398ot1(TC* ac, T0* a1);
extern T1 T857f398ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment */
extern void T857f427(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_assignment */
extern void T114f1419(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment */
extern void T114f1364(TC* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.process */
extern void T726f21(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assigner_instruction */
extern void T1131f27(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assigner_instruction */
extern void T100f180(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assigner_instruction_validity */
extern void T100f248(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_setter */
extern void T100f274(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar3gb_error */
extern void T63f512(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vuar3gb */
extern T0* T1445c1200(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vuar3gb_error */
extern void T42f512(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vbac1a_error */
extern void T63f511(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vbac1a */
extern T0* T1445c1199(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T63f141(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac1a_error */
extern void T42f511(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T42f141(TC* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_source */
extern void T726f23(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac2a_error */
extern void T63f510(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vbac2a */
extern T0* T1445c1198(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T63f140(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac2a_error */
extern void T42f510(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T42f140(TC* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_name */
extern void T726f22(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.assigner */
extern T0* T710f5(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.assigner */
extern T0* T708f4(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.assigner */
extern T0* T707f4(TC* ac, T0* C);
/* ET_DO_FUNCTION.assigner */
extern T0* T706f4(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.assigner */
extern T0* T705f3(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.assigner */
extern T0* T704f4(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.assigner */
extern T0* T703f3(TC* ac, T0* C);
/* ET_ATTRIBUTE.assigner */
extern T0* T702f3(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_call_info */
extern void T100f273(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].force_last */
extern void T871f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].force */
extern void T1304s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].fill_with */
extern void T1306f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].extend */
extern void T1306f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].resize */
extern void T871f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].aliased_resized_area */
extern T0* T1304s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].aliased_resized_area */
extern T0* T1306f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].new_capacity */
extern T6 T871f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].extendible */
extern T1 T871f6(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_call_info */
extern T0* T100f82(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].remove_last */
extern void T871f15(TC* ac, T0* C);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].keep_head */
extern void T1306f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].set_count */
extern void T1306f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].move_last_cursors_after */
extern void T871f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].set_next_cursor */
extern void T1307f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].set_after */
extern void T1307f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].last */
extern T0* T871f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].is_empty */
extern T1 T871f9(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_assigner_instruction */
extern void T857f349(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assigner_instruction_validity */
extern void T857f397(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_tuple_label_setter */
extern void T857f425(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.free_call_info */
extern void T857f275(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.new_call_info */
extern T0* T857f57(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_assigner_instruction */
extern void T114f1418(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assigner_instruction */
extern void T114f1444(TC* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.process */
extern void T321f22(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_retry_instruction */
extern void T1131f26(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_retry_instruction */
extern void T100f564(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_retry_instruction_validity */
extern void T100f571(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vxrt0a_error */
extern void T63f587(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vxrt0a */
extern T0* T1445c1267(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T63f180(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vxrt0a_error */
extern void T42f587(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T42f180(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_retry_instruction */
extern void T857f448(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_retry_instruction_validity */
extern void T857f453(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_retry_instruction */
extern void T114f1625(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_retry_instruction */
extern void T114f1629(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.process */
extern void T736f19(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_qualified_call_instruction */
extern void T1131f25(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_instruction */
extern void T100f179(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_qualified_call_instruction */
extern void T857f348(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_qualified_call_instruction */
extern void T114f1424(TC* ac, T0* C, T0* a1);
/* ET_COMPOUND.item */
extern T0* T403f12(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.fill_inlining_operands */
extern void T114f942(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_EXPRESSION].force_last */
extern void T927f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].force */
extern void T1382s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].fill_with */
extern void T1381f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].extend */
extern void T1381f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_capacity */
extern T6 T927f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].extendible */
extern T1 T927f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_CALL_CONTEXT.set_target */
extern void T981f6(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.mark_call_operands_frozen */
extern void T114f1171(TC* ac, T0* C);
extern T1 T114f1171ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.new_call_context */
extern T0* T114f349(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].force_last */
extern void T945f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT].force */
extern void T1416s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].fill_with */
extern void T1415f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].extend */
extern void T1415f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].resize */
extern void T945f17(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT].aliased_resized_area */
extern T0* T1416s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].aliased_resized_area */
extern T0* T1415f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].new_capacity */
extern T6 T945f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].extendible */
extern T1 T945f9(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_CALL_CONTEXT.set_current_feature */
extern void T981f7(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_CALL_CONTEXT.tokens */
extern T0* T981s4(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].remove_last */
extern void T945f15(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].keep_head */
extern void T1415f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].set_count */
extern void T1415f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].move_last_cursors_after */
extern void T945f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT].set_next_cursor */
extern void T1417f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT].set_after */
extern void T1417f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].last */
extern T0* T945f7(TC* ac, T0* C);
/* ET_DYNAMIC_CALL_CONTEXT.make */
extern T0* T981c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].make */
extern T0* T927c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].set_internal_cursor */
extern void T927f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_cursor */
extern T0* T927f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].make */
extern T0* T1383c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].make */
extern T0* T1382s1(TC* ac, T6 a1);
/* SPECIAL [ET_EXPRESSION].make_empty */
extern T0* T1381c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].default_create */
extern T0* T1382c3(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].is_empty */
extern T1 T945f6(TC* ac, T0* C);
/* ET_C_GENERATOR.register_inlined_feature */
extern void T114f941(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].force */
extern void T947f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].slots_put */
extern void T947f60(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].clashes_put */
extern void T947f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].slots_item */
extern T6 T947f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].clashes_item */
extern T6 T947f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].hash_position */
extern T6 T947f18(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.hash_code */
extern T6 T860f44(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.hash_code */
extern T6 T845f39(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].resize */
extern void T947f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].clashes_resize */
extern void T947f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].special_integer_ */
extern T0* T947s34(TC* ac);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_storage_resize */
extern void T947f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_storage_resize */
extern void T947f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_storage_item */
extern T0* T947f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_storage_item */
extern T0* T947f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].slots_resize */
extern void T947f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].new_modulus */
extern T6 T947f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T947f17(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_storage_put */
extern void T947f57(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].search_position */
extern void T947f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_equality_tester */
extern T0* T947f31(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].unset_found_item */
extern void T947f46(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_inlined */
extern void T860f60(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_inlined */
extern void T845f57(TC* ac, T0* C, T1 a1);
/* ET_COMPOUND.is_empty */
extern T1 T403f11(TC* ac, T0* C);
/* ET_C_GENERATOR.is_inlinable_procedure */
extern T1 T114f385(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T114f385ot1(TC* ac, T0* a1);
/* ET_COMPOUND.has_inline_separate_instruction */
extern T1 T403f10(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1034f7(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.has_inline_separate_instruction */
extern T1 T527s10(TC* ac);
/* ET_REPEAT_INSTRUCTION.has_inline_separate_instruction */
extern T1 T624f19(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_inline_separate_instruction */
extern T1 T342f22(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_inline_separate_instruction */
extern T1 T382f12(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.has_inline_separate_instruction */
extern T1 T739f9(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.has_inline_separate_instruction */
extern T1 T737f10(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.has_inline_separate_instruction */
extern T1 T446f9(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.has_inline_separate_instruction */
extern T1 T533f10(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.has_inline_separate_instruction */
extern T1 T662f8(TC* ac, T0* C);
/* ET_WHEN_PART.has_inline_separate_instruction */
extern T1 T659f7(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.has_inline_separate_instruction */
extern T1 T512f11(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.has_inline_separate_instruction */
extern T1 T458f8(TC* ac, T0* C);
/* ET_ELSEIF_PART.has_inline_separate_instruction */
extern T1 T455f7(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.has_inline_separate_instruction */
extern T1 T734f11(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.has_inline_separate_instruction */
extern T1 T731f11(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.has_inline_separate_instruction */
extern T1 T729f13(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.has_inline_separate_instruction */
extern T1 T728f9(TC* ac, T0* C);
/* ET_ASSIGNMENT.has_inline_separate_instruction */
extern T1 T727f11(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.has_inline_separate_instruction */
extern T1 T726f11(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.has_inline_separate_instruction */
extern T1 T321f13(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.has_inline_separate_instruction */
extern T1 T736f12(TC* ac, T0* C);
/* ET_COMPOUND.has_typed_object_test */
extern T1 T403f9(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.has_typed_object_test */
extern T1 T1034f6(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.has_typed_object_test */
extern T1 T1866f8(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.has_typed_object_test */
extern T1 T2041f8(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.has_typed_object_test */
extern T1 T2040f9(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.has_typed_object_test */
extern T1 T2039f7(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.has_typed_object_test */
extern T1 T1870f7(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.has_typed_object_test */
extern T1 T980f12(TC* ac, T0* C);
/* ET_IDENTIFIER.has_typed_object_test */
extern T1 T303f55(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.has_typed_object_test */
extern T1 T679f22(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.has_typed_object_test */
extern T1 T678f22(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_typed_object_test */
extern T1 T677f22(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_typed_object_test */
extern T1 T676f22(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.has_typed_object_test */
extern T1 T675f23(TC* ac, T0* C);
/* ET_VERBATIM_STRING.has_typed_object_test */
extern T1 T674f25(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.has_typed_object_test */
extern T1 T673f22(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.has_typed_object_test */
extern T1 T671f20(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.has_typed_object_test */
extern T1 T757f14(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_typed_object_test */
extern T1 T613f26(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_typed_object_test */
extern T1 T613f26p1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_typed_object_test */
extern T1 T339f29(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_typed_object_test */
extern T1 T339f29p1(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.has_typed_object_test */
extern T1 T556f8(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.has_typed_object_test */
extern T1 T756f15(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.has_typed_object_test */
extern T1 T755f18(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.type */
extern T0* T755f13(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.has_typed_object_test */
extern T1 T753f21(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.type */
extern T0* T753f16(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.has_typed_object_test */
extern T1 T741f14(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.has_typed_object_test */
extern T1 T1033f15(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.has_typed_object_test */
extern T1 T764f25(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.has_typed_object_test */
extern T1 T1867f5(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.has_typed_object_test */
extern T1 T358f11(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.has_typed_object_test */
extern T1 T766f12(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.has_typed_object_test */
extern T1 T336f44(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.has_typed_object_test */
extern T1 T1580f3(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.has_typed_object_test */
extern T1 T763f31(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.has_typed_object_test */
extern T1 T762f29(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.has_typed_object_test */
extern T1 T761f27(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.has_typed_object_test */
extern T1 T760f32(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.has_typed_object_test */
extern T1 T759f30(TC* ac, T0* C);
/* ET_CALL_AGENT.has_typed_object_test */
extern T1 T376f19(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.has_typed_object_test */
extern T1 T765f10(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.has_typed_object_test */
extern T1 T630f18(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.has_typed_object_test */
extern T1 T568f20(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.has_typed_object_test */
extern T1 T559f19(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.has_typed_object_test */
extern T1 T589f15(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.has_typed_object_test */
extern T1 T373f16(TC* ac, T0* C);
/* ET_OBJECT_TEST.has_typed_object_test */
extern T1 T754f17(TC* ac, T0* C);
/* ET_OBJECT_TEST.type */
extern T0* T754f12(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.has_typed_object_test */
extern T1 T752f14(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.has_typed_object_test */
extern T1 T751f16(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.has_typed_object_test */
extern T1 T750f15(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.has_typed_object_test */
extern T1 T749f14(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.has_typed_object_test */
extern T1 T748f14(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.has_typed_object_test */
extern T1 T745f16(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.has_typed_object_test */
extern T1 T744f14(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.has_typed_object_test */
extern T1 T743f14(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.has_typed_object_test */
extern T1 T742f14(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.has_typed_object_test */
extern T1 T740f19(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.has_typed_object_test */
extern T1 T627f19(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.has_typed_object_test */
extern T1 T379f18(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.has_typed_object_test */
extern T1 T530f16(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.has_typed_object_test */
extern T1 T656f8(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.has_typed_object_test */
extern T1 T653f8(TC* ac, T0* C);
/* ET_IF_EXPRESSION.has_typed_object_test */
extern T1 T509f20(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.has_typed_object_test */
extern T1 T452f8(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.has_typed_object_test */
extern T1 T449f9(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.has_typed_object_test */
extern T1 T436f24(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.has_typed_object_test */
extern T1 T686f18(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.has_typed_object_test */
extern T1 T685f18(TC* ac, T0* C);
/* ET_CURRENT.has_typed_object_test */
extern T1 T297f23(TC* ac, T0* C);
/* ET_RESULT.has_typed_object_test */
extern T1 T318f20(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.has_typed_object_test */
extern T1 T684f19(TC* ac, T0* C);
/* ET_VOID.has_typed_object_test */
extern T1 T327f19(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.has_typed_object_test */
extern T1 T683f19(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.has_typed_object_test */
extern T1 T681f20(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.has_typed_object_test */
extern T1 T680f20(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_typed_object_test */
extern T1 T672f20(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.has_typed_object_test */
extern T1 T345f15(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.has_typed_object_test */
extern T1 T527f9(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.has_typed_object_test */
extern T1 T524f11(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.has_typed_object_test */
extern T1 T518f8(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_typed_object_test */
extern T1 T624f18(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_typed_object_test */
extern T1 T624f18p1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_typed_object_test */
extern T1 T342f21(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_typed_object_test */
extern T1 T342f21p1(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_typed_object_test */
extern T1 T382f11(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_typed_object_test */
extern T1 T382f11p1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.has_typed_object_test */
extern T1 T739f8(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.has_typed_object_test */
extern T1 T737f9(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.has_typed_object_test */
extern T1 T446f8(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.has_typed_object_test */
extern T1 T533f9(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.has_typed_object_test */
extern T1 T662f7(TC* ac, T0* C);
/* ET_WHEN_PART.has_typed_object_test */
extern T1 T659f6(TC* ac, T0* C);
/* ET_CHOICE_LIST.has_typed_object_test */
extern T1 T394f10(TC* ac, T0* C);
/* ET_CHOICE_RANGE.has_typed_object_test */
extern T1 T735f9(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.has_typed_object_test */
extern T1 T512f10(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.has_typed_object_test */
extern T1 T458f7(TC* ac, T0* C);
/* ET_ELSEIF_PART.has_typed_object_test */
extern T1 T455f6(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.has_typed_object_test */
extern T1 T734f10(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.has_typed_object_test */
extern T1 T731f10(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.has_typed_object_test */
extern T1 T729f12(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.has_typed_object_test */
extern T1 T728f8(TC* ac, T0* C);
/* ET_ASSIGNMENT.has_typed_object_test */
extern T1 T727f10(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.has_typed_object_test */
extern T1 T726f10(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.has_typed_object_test */
extern T1 T321f12(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.has_typed_object_test */
extern T1 T736f11(TC* ac, T0* C);
/* ET_COMPOUND.has_agent */
extern T1 T403f8(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.has_agent */
extern T1 T1034f5(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.has_agent */
extern T1 T1866f7(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.has_agent */
extern T1 T2041f7(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.has_agent */
extern T1 T2040f8(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.has_agent */
extern T1 T2039f6(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.has_agent */
extern T1 T1870f6(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.has_agent */
extern T1 T980f11(TC* ac, T0* C);
/* ET_IDENTIFIER.has_agent */
extern T1 T303f54(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.has_agent */
extern T1 T679f21(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.has_agent */
extern T1 T678f21(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_agent */
extern T1 T677f21(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_agent */
extern T1 T676f21(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.has_agent */
extern T1 T675f22(TC* ac, T0* C);
/* ET_VERBATIM_STRING.has_agent */
extern T1 T674f24(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.has_agent */
extern T1 T673f21(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.has_agent */
extern T1 T671f19(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.has_agent */
extern T1 T757f13(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_agent */
extern T1 T613f25(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_agent */
extern T1 T613f25p1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_agent */
extern T1 T339f28(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_agent */
extern T1 T339f28p1(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.has_agent */
extern T1 T556f7(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.has_agent */
extern T1 T756f14(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.has_agent */
extern T1 T755f17(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.has_agent */
extern T1 T753f20(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.has_agent */
extern T1 T741f13(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.has_agent */
extern T1 T1033f14(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.has_agent */
extern T1 T764s24(TC* ac);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.has_agent */
extern T1 T763s30(TC* ac);
/* ET_DO_PROCEDURE_INLINE_AGENT.has_agent */
extern T1 T762s28(TC* ac);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.has_agent */
extern T1 T761s26(TC* ac);
/* ET_ONCE_FUNCTION_INLINE_AGENT.has_agent */
extern T1 T760s31(TC* ac);
/* ET_DO_FUNCTION_INLINE_AGENT.has_agent */
extern T1 T759s29(TC* ac);
/* ET_CALL_AGENT.has_agent */
extern T1 T376s18(TC* ac);
/* ET_STRIP_EXPRESSION.has_agent */
extern T1 T630f17(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.has_agent */
extern T1 T568f19(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.has_agent */
extern T1 T559f18(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.has_agent */
extern T1 T589f14(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.has_agent */
extern T1 T373f15(TC* ac, T0* C);
/* ET_OBJECT_TEST.has_agent */
extern T1 T754f16(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.has_agent */
extern T1 T752f13(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.has_agent */
extern T1 T751f15(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.has_agent */
extern T1 T750f14(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.has_agent */
extern T1 T749f13(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.has_agent */
extern T1 T748f13(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.has_agent */
extern T1 T745f15(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.has_agent */
extern T1 T744f13(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.has_agent */
extern T1 T743f13(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.has_agent */
extern T1 T742f13(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.has_agent */
extern T1 T740f18(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.has_agent */
extern T1 T627f18(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.has_agent */
extern T1 T379f17(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.has_agent */
extern T1 T530f15(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.has_agent */
extern T1 T656f7(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.has_agent */
extern T1 T653f7(TC* ac, T0* C);
/* ET_IF_EXPRESSION.has_agent */
extern T1 T509f19(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.has_agent */
extern T1 T452f7(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.has_agent */
extern T1 T449f8(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.has_agent */
extern T1 T436f23(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.has_agent */
extern T1 T686f17(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.has_agent */
extern T1 T685f17(TC* ac, T0* C);
/* ET_CURRENT.has_agent */
extern T1 T297f22(TC* ac, T0* C);
/* ET_RESULT.has_agent */
extern T1 T318f19(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.has_agent */
extern T1 T684f18(TC* ac, T0* C);
/* ET_VOID.has_agent */
extern T1 T327f18(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.has_agent */
extern T1 T683f18(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.has_agent */
extern T1 T681f19(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.has_agent */
extern T1 T680f19(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_agent */
extern T1 T672f19(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.has_agent */
extern T1 T345f14(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.has_agent */
extern T1 T527f8(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.has_agent */
extern T1 T524f10(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.has_agent */
extern T1 T518f7(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_agent */
extern T1 T624f17(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_agent */
extern T1 T624f17p1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_agent */
extern T1 T342f20(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_agent */
extern T1 T342f20p1(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_agent */
extern T1 T382f10(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_agent */
extern T1 T382f10p1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.has_agent */
extern T1 T739f7(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.has_agent */
extern T1 T737f8(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.has_agent */
extern T1 T446f7(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.has_agent */
extern T1 T533f8(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.has_agent */
extern T1 T662f6(TC* ac, T0* C);
/* ET_WHEN_PART.has_agent */
extern T1 T659f5(TC* ac, T0* C);
/* ET_CHOICE_LIST.has_agent */
extern T1 T394f9(TC* ac, T0* C);
/* ET_CHOICE_RANGE.has_agent */
extern T1 T735f8(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.has_agent */
extern T1 T512f9(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.has_agent */
extern T1 T458f6(TC* ac, T0* C);
/* ET_ELSEIF_PART.has_agent */
extern T1 T455f5(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.has_agent */
extern T1 T734f9(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.has_agent */
extern T1 T731f9(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.has_agent */
extern T1 T729f11(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.has_agent */
extern T1 T728f7(TC* ac, T0* C);
/* ET_ASSIGNMENT.has_agent */
extern T1 T727f9(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.has_agent */
extern T1 T726f9(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.has_agent */
extern T1 T321f11(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.has_agent */
extern T1 T736f10(TC* ac, T0* C);
/* ET_COMPOUND.has_address_expression */
extern T1 T403f7(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.has_address_expression */
extern T1 T1034f4(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.has_address_expression */
extern T1 T1866f6(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.has_address_expression */
extern T1 T2041f6(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.has_address_expression */
extern T1 T2040f7(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.has_address_expression */
extern T1 T2039f5(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.has_address_expression */
extern T1 T1870f5(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.has_address_expression */
extern T1 T980f10(TC* ac, T0* C);
/* ET_IDENTIFIER.has_address_expression */
extern T1 T303f53(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.has_address_expression */
extern T1 T679f20(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.has_address_expression */
extern T1 T678f20(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_address_expression */
extern T1 T677f20(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_address_expression */
extern T1 T676f20(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.has_address_expression */
extern T1 T675f21(TC* ac, T0* C);
/* ET_VERBATIM_STRING.has_address_expression */
extern T1 T674f23(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.has_address_expression */
extern T1 T673f20(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.has_address_expression */
extern T1 T671f18(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.has_address_expression */
extern T1 T757f12(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_address_expression */
extern T1 T613f24(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_address_expression */
extern T1 T613f24p1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_address_expression */
extern T1 T339f27(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_address_expression */
extern T1 T339f27p1(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.has_address_expression */
extern T1 T556f6(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.has_address_expression */
extern T1 T756f13(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.has_address_expression */
extern T1 T755f16(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.has_address_expression */
extern T1 T753f19(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.has_address_expression */
extern T1 T741s12(TC* ac);
/* ET_UNQUALIFIED_CALL_EXPRESSION.has_address_expression */
extern T1 T1033f13(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.has_address_expression */
extern T1 T764f23(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.has_address_expression */
extern T1 T1867f4(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.has_address_expression */
extern T1 T358f10(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.has_address_expression */
extern T1 T766f11(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.has_address_expression */
extern T1 T336f43(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.has_address_expression */
extern T1 T1580f6(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.has_address_expression */
extern T1 T763f29(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.has_address_expression */
extern T1 T762f27(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.has_address_expression */
extern T1 T761f25(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.has_address_expression */
extern T1 T760f30(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.has_address_expression */
extern T1 T759f28(TC* ac, T0* C);
/* ET_CALL_AGENT.has_address_expression */
extern T1 T376f17(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.has_address_expression */
extern T1 T765f9(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.has_address_expression */
extern T1 T630f16(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.has_address_expression */
extern T1 T568f18(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.has_address_expression */
extern T1 T559f17(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.has_address_expression */
extern T1 T589f13(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.has_address_expression */
extern T1 T373f14(TC* ac, T0* C);
/* ET_OBJECT_TEST.has_address_expression */
extern T1 T754f15(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.has_address_expression */
extern T1 T752f12(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.has_address_expression */
extern T1 T751f14(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.has_address_expression */
extern T1 T750f13(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.has_address_expression */
extern T1 T749f12(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.has_address_expression */
extern T1 T748f12(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.has_address_expression */
extern T1 T745f14(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.has_address_expression */
extern T1 T744s12(TC* ac);
/* ET_RESULT_ADDRESS.has_address_expression */
extern T1 T743s12(TC* ac);
/* ET_CURRENT_ADDRESS.has_address_expression */
extern T1 T742s12(TC* ac);
/* ET_PRECURSOR_EXPRESSION.has_address_expression */
extern T1 T740f17(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.has_address_expression */
extern T1 T627f17(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.has_address_expression */
extern T1 T379f16(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.has_address_expression */
extern T1 T530f14(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.has_address_expression */
extern T1 T656f6(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.has_address_expression */
extern T1 T653f6(TC* ac, T0* C);
/* ET_IF_EXPRESSION.has_address_expression */
extern T1 T509f18(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.has_address_expression */
extern T1 T452f6(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.has_address_expression */
extern T1 T449f7(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.has_address_expression */
extern T1 T436f22(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.has_address_expression */
extern T1 T686f16(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.has_address_expression */
extern T1 T685f16(TC* ac, T0* C);
/* ET_CURRENT.has_address_expression */
extern T1 T297f21(TC* ac, T0* C);
/* ET_RESULT.has_address_expression */
extern T1 T318f18(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.has_address_expression */
extern T1 T684f17(TC* ac, T0* C);
/* ET_VOID.has_address_expression */
extern T1 T327f17(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.has_address_expression */
extern T1 T683f17(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.has_address_expression */
extern T1 T681f18(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.has_address_expression */
extern T1 T680f18(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_address_expression */
extern T1 T672f18(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.has_address_expression */
extern T1 T345f13(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.has_address_expression */
extern T1 T527f7(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.has_address_expression */
extern T1 T524f9(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.has_address_expression */
extern T1 T518f6(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_address_expression */
extern T1 T624f16(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_address_expression */
extern T1 T624f16p1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_address_expression */
extern T1 T342f19(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_address_expression */
extern T1 T342f19p1(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_address_expression */
extern T1 T382f9(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_address_expression */
extern T1 T382f9p1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.has_address_expression */
extern T1 T739f6(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.has_address_expression */
extern T1 T737f7(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.has_address_expression */
extern T1 T446f6(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.has_address_expression */
extern T1 T533f7(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.has_address_expression */
extern T1 T662f5(TC* ac, T0* C);
/* ET_WHEN_PART.has_address_expression */
extern T1 T659f4(TC* ac, T0* C);
/* ET_CHOICE_LIST.has_address_expression */
extern T1 T394f8(TC* ac, T0* C);
/* ET_CHOICE_RANGE.has_address_expression */
extern T1 T735f7(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.has_address_expression */
extern T1 T512f8(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.has_address_expression */
extern T1 T458f5(TC* ac, T0* C);
/* ET_ELSEIF_PART.has_address_expression */
extern T1 T455f4(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.has_address_expression */
extern T1 T734f8(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.has_address_expression */
extern T1 T731f8(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.has_address_expression */
extern T1 T729f10(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.has_address_expression */
extern T1 T728f6(TC* ac, T0* C);
/* ET_ASSIGNMENT.has_address_expression */
extern T1 T727f8(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.has_address_expression */
extern T1 T726f8(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.has_address_expression */
extern T1 T321f10(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.has_address_expression */
extern T1 T736f9(TC* ac, T0* C);
/* ET_COMPOUND.nested_instruction_count */
extern T6 T403f6(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.nested_instruction_count */
extern T6 T1034f8(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.nested_instruction_count */
extern T6 T527f6(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.nested_instruction_count */
extern T6 T624f15(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.nested_instruction_count */
extern T6 T342f18(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.nested_instruction_count */
extern T6 T382f8(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.nested_instruction_count */
extern T6 T739f10(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.nested_instruction_count */
extern T6 T737f12(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.nested_instruction_count */
extern T6 T446f5(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.nested_instruction_count */
extern T6 T533f6(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.nested_instruction_count */
extern T6 T662f4(TC* ac, T0* C);
/* ET_WHEN_PART.nested_instruction_count */
extern T6 T659f3(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.nested_instruction_count */
extern T6 T512f7(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.nested_instruction_count */
extern T6 T458f4(TC* ac, T0* C);
/* ET_ELSEIF_PART.nested_instruction_count */
extern T6 T455f3(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.nested_instruction_count */
extern T6 T734f20(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.nested_instruction_count */
extern T6 T731f19(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.nested_instruction_count */
extern T6 T729f9(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.nested_instruction_count */
extern T6 T728f5(TC* ac, T0* C);
/* ET_ASSIGNMENT.nested_instruction_count */
extern T6 T727f7(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.nested_instruction_count */
extern T6 T726f7(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.nested_instruction_count */
extern T6 T321f9(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.nested_instruction_count */
extern T6 T736f8(TC* ac, T0* C);
/* ET_C_GENERATOR.are_inlinable_call_operands */
extern T1 T114f588(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.is_inlinable_argument */
extern T1 T114f590(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_procedure_call */
extern void T114f895(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_procedure_call */
extern void T114f961(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_set_object_comparison_call */
extern void T114f1230(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_adapted_attribute_access */
extern void T114f889(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_boxed_attribute_access */
extern void T114f919(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_attribute_name */
extern void T114f783(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_boxed_attribute_item_access */
extern void T114f796(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_access */
extern void T114f756(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_builtin_special_procedure_call */
extern void T114f960(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_put_call */
extern void T114f1229(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_item_access */
extern void T114f773(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_item_name */
extern void T114f784(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_real_n_ref_procedure_call */
extern void T114f959(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_set_item_call */
extern void T114f1228(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_unboxed_expression */
extern void T114f1174(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_attribute_pointer_access */
extern void T114f795(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_attribute_pointer_name */
extern void T114f805(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_procedure_procedure_call */
extern void T114f958(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_fast_call_call */
extern void T114f1227(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_call_call */
extern void T114f1226(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_routine_call_call */
extern void T114f1233(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T114f1233ot1(TC* ac, T0* a1);
extern T1 T114f1233ot2(TC* ac, T0* a1);
extern T1 T114f1233ot3(TC* ac, T0* a1);
extern T1 T114f1233ot4(TC* ac, T0* a1);
extern T1 T114f1233ot5(TC* ac, T0* a1);
extern T1 T114f1233ot6(TC* ac, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.keep_first */
extern void T858f14(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.free_tuple_label */
extern void T114f1238(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.free_identifier */
extern void T114f899(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].force_last */
extern void T913f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].force */
extern void T1264s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].fill_with */
extern void T1265f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].extend */
extern void T1265f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].resize */
extern void T913f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].aliased_resized_area */
extern T0* T1264s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_IDENTIFIER].aliased_resized_area */
extern T0* T1265f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_capacity */
extern T6 T913f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].extendible */
extern T1 T913f9(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.free_qualified_call_expression */
extern void T114f871(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_target */
extern void T379f32(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].force_last */
extern void T920f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION].force */
extern void T1370s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].fill_with */
extern void T1369f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].extend */
extern void T1369f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].resize */
extern void T920f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1370s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1369f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].new_capacity */
extern T6 T920f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].extendible */
extern T1 T920f8(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_qualified_call_expression */
extern T0* T114f347(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.set_name */
extern void T379f34(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].remove_last */
extern void T920f13(TC* ac, T0* C);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].keep_head */
extern void T1369f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].set_count */
extern void T1369f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].move_last_cursors_after */
extern void T920f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION].set_next_cursor */
extern void T1371f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION].set_after */
extern void T1371f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].last */
extern T0* T920f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].is_empty */
extern T1 T920f10(TC* ac, T0* C);
/* ET_C_GENERATOR.new_tuple_label */
extern T0* T114f580(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_identifier */
extern T0* T114f587(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_name */
extern void T303f130(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.new_hash_code */
extern T6 T303f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].remove_last */
extern void T913f17(TC* ac, T0* C);
/* SPECIAL [ET_IDENTIFIER].keep_head */
extern void T1265f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].set_count */
extern void T1265f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].move_last_cursors_after */
extern void T913f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].set_next_cursor */
extern void T1352f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].set_after */
extern void T1352f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].last */
extern T0* T913f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].is_empty */
extern T1 T913f7(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_types */
extern void T924f19(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make_empty */
extern T0* T924c13(TC* ac, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.first */
extern T0* T839f4(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.result_type_set */
extern T0* T1048f52(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_procedure */
extern T1 T860f33(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_procedure */
extern T1 T845f33(TC* ac, T0* C);
/* ET_C_GENERATOR.conforming_type_set */
extern T0* T114f579(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_pointer_ref_procedure_call */
extern void T114f957(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_set_item_call */
extern void T114f1225(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_procedure_call */
extern void T114f956(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_free_call */
extern void T114f1224(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_c_call */
extern void T114f1237(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T1 a5);
/* ET_C_GENERATOR.print_builtin_ise_runtime_procedure_call */
extern void T114f955(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_unmark_object_call */
extern void T114f1223(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_unlock_marking_call */
extern void T114f1222(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_reference_field_at_call */
extern void T114f1221(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_reference_field_call */
extern void T114f1220(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_64_field_at_call */
extern void T114f1219(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_64_field_call */
extern void T114f1218(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_32_field_at_call */
extern void T114f1217(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_32_field_call */
extern void T114f1216(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pointer_field_at_call */
extern void T114f1215(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pointer_field_call */
extern void T114f1214(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_64_field_at_call */
extern void T114f1213(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_64_field_call */
extern void T114f1212(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_32_field_at_call */
extern void T114f1211(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_32_field_call */
extern void T114f1210(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_16_field_at_call */
extern void T114f1209(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_16_field_call */
extern void T114f1208(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_8_field_at_call */
extern void T114f1207(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_8_field_call */
extern void T114f1206(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_64_field_at_call */
extern void T114f1205(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_64_field_call */
extern void T114f1204(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_32_field_at_call */
extern void T114f1203(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_32_field_call */
extern void T114f1202(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_16_field_at_call */
extern void T114f1201(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_16_field_call */
extern void T114f1200(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_8_field_at_call */
extern void T114f1199(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_8_field_call */
extern void T114f1198(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_32_field_at_call */
extern void T114f1197(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_32_field_call */
extern void T114f1196(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_8_field_at_call */
extern void T114f1195(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_8_field_call */
extern void T114f1194(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_boolean_field_at_call */
extern void T114f1193(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_boolean_field_call */
extern void T114f1192(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_mark_object_call */
extern void T114f1191(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_lock_marking_call */
extern void T114f1190(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_exception_manager_procedure_call */
extern void T114f954(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_exception_manager_developer_raise_call */
extern void T114f1189(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_procedure_call */
extern void T114f953(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_set_item_call */
extern void T114f1188(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_procedure_call */
extern void T114f952(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_object_id_free_call */
extern void T114f1187(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_procedure_call */
extern void T114f951(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_cwin_local_free_call */
extern void T114f1186(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_procedure_call */
extern void T114f950(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_set_item_call */
extern void T114f1185(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_procedure_call */
extern void T114f949(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_set_item_call */
extern void T114f1184(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_procedure_call */
extern void T114f948(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_call */
extern void T114f1183(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T114f1183ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_minus */
extern void T114f1178(TC* ac, T0* C);
/* ET_C_GENERATOR.print_eif_any_type_name */
extern void T114f713(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_plus */
extern void T114f1175(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T1049f32(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T1048f32(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T966f49(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_item_nested_custom_standard_copy_routine */
extern T1 T966f52(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T966f49p1(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T894f49(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T894f49p1(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T838f42(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_special */
extern T1 T1049f42(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_special */
extern T1 T1048f42(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_special */
extern T1 T966s48(TC* ac);
/* ET_DYNAMIC_TUPLE_TYPE.is_special */
extern T1 T894f48(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_special */
extern T1 T838f41(TC* ac, T0* C);
/* ET_CLASS.is_type_class */
extern T1 T70f87(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_any_copy_call */
extern void T114f1182(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_tuple_label_setter_call */
extern void T114f866(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T114f866ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_attribute_tuple_item_access */
extern void T114f774(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_attribute_tuple_item_name */
extern void T114f804(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_procedure_target_expression */
extern void T114f916(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_separate_qualified_call_instruction */
extern void T114f915(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_procedure_target_operand */
extern void T114f914(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIS_INSTRUCTION.is_call_agent */
extern T1 T1862f7(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_call_agent */
extern T1 T726f16(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T736f7(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_call_agent */
extern T1 T935f6(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_tuple_label */
extern T1 T935f5(TC* ac, T0* C);
/* ET_C_GENERATOR.print_position */
extern void T114f913(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_escaped_string */
extern void T114f780(TC* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_INSTRUCTION.position */
extern T0* T1862f5(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.position */
extern T0* T726f13(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.position */
extern T0* T736f13(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.position */
extern T0* T935f4(TC* ac, T0* C);
/* ET_C_GENERATOR.line_generation_mode */
extern T1 T114f393(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.set_arguments */
extern void T935f10(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.set_name */
extern void T935f9(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.set_target */
extern void T935f8(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.set_index */
extern void T937f12(TC* ac, T0* C, T6 a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.set_arguments */
extern void T937f11(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.set_name */
extern void T937f10(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.set_target */
extern void T937f9(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.resize */
extern void T345f21(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T1173s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T1171f4(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.capacity */
extern T6 T345f8(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.wipe_out */
extern void T345f20(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].keep_head */
extern void T1173s4(TC* ac, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].keep_head */
extern void T1171f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].set_count */
extern void T1171f9(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.dedent */
extern void T114f758(TC* ac, T0* C);
/* ET_C_GENERATOR.print_separate_call_object_name */
extern void T114f882(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_and_then */
extern void T114f861(TC* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_region_access */
extern void T114f753(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_region_name */
extern void T114f802(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_current_name */
extern void T114f829(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_malloc_current */
extern void T114f881(TC* ac, T0* C, T0* a1);
extern T1 T114f881ot1(TC* ac, T0* a1);
/* ET_CLASS.same_syntactical_type */
extern T1 T70f248(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_type_with_type_marks */
extern T1 T70f244(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_syntactical_class_type_with_type_marks */
extern T1 T1844f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T691f70(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T691f70ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T500f72(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T500f72ot1(TC* ac, T0* a1);
/* ET_CLASS.same_syntactical_class_type_with_type_marks */
extern T1 T70f256(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T506f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T691f75(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T691f64(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T691f64ot1(TC* ac, T0* a1);
/* ET_LIKE_N.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1844f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T691f74(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T691f74ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T500f76(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T500f76ot1(TC* ac, T0* a1);
/* ET_CLASS.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T70f251(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T848f73(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T848f73ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T725f76(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T724f79(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T722f77(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T183f108(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T199f71(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T102f115(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type_with_type_marks */
extern T1 T848f65(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T848f65ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T725f63(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1844f37(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T691f73(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T691f73ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T500f75(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T500f75ot1(TC* ac, T0* a1);
/* ET_CLASS.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T70f250(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T848f72(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T848f72ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T725f75(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_attachment_marks_with_default */
extern T1 T725f85(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T724f78(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_attachment_marks_with_default */
extern T1 T724f88(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T722f76(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T183f107(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T199f70(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T102f110(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T724f66(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_type_with_type_marks */
extern T1 T722f63(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_syntactical_like_feature_with_type_marks */
extern T1 T1844f40(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T691f72(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T691f72ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T500f74(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T500f74ot1(TC* ac, T0* a1);
/* ET_CLASS.same_syntactical_like_feature_with_type_marks */
extern T1 T70f249(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T848f71(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T848f71ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T725f74(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T724f77(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_like_feature_with_type_marks */
extern T1 T722f75(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_attachment_marks_with_default */
extern T1 T722f86(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T183f106(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_like_feature_with_type_marks */
extern T1 T199f69(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T102f109(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_type_with_type_marks */
extern T1 T199f64(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_syntactical_like_current_with_type_marks */
extern T1 T1844f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T691f78(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T691f78ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T500f80(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T500f80ot1(TC* ac, T0* a1);
/* ET_CLASS.same_syntactical_like_current_with_type_marks */
extern T1 T70f263(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T848f79(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T848f79ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T725f82(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T724f85(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_like_current_with_type_marks */
extern T1 T722f83(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T183f122(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_like_current_with_type_marks */
extern T1 T199f79(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_attachment_marks_with_default */
extern T1 T199f82(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T102f129(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T183f101(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_syntactical_tuple_type_with_type_marks */
extern T1 T1844f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T691f71(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T691f71ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T500f73(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T500f73ot1(TC* ac, T0* a1);
/* ET_CLASS.same_syntactical_tuple_type_with_type_marks */
extern T1 T70f258(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T848f75(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T848f75ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T725f78(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T724f81(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_tuple_type_with_type_marks */
extern T1 T722f79(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T183f117(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACTUAL_PARAMETER_SUBLIST.same_syntactical_types */
extern T1 T2159f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T185f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_tuple_type_with_type_marks */
extern T1 T199f73(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T102f126(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_type_with_type_marks */
extern T1 T102f114(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T500f66(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T500f66ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T500f77(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T848f74(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T848f74ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T725f77(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T724f80(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_class_type_with_type_marks */
extern T1 T722f78(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T183f116(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_class_type_with_type_marks */
extern T1 T199f72(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T102f122(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T201f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T2158f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_type */
extern T1 T722f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_type */
extern T1 T183f93(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type */
extern T1 T848f53(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_type */
extern T1 T102f99(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_type */
extern T1 T725f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type */
extern T1 T724f58(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_type */
extern T1 T199f57(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.current_universe */
extern T0* T114f391(TC* ac, T0* C);
/* ET_C_GENERATOR.print_default_name */
extern void T114f752(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.mark_temp_variable_volatile */
extern void T114f901(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [BOOLEAN].replace */
extern void T915f12(TC* ac, T0* C, T1 a1, T6 a2);
/* ET_C_GENERATOR.print_comma */
extern void T114f750(TC* ac, T0* C);
/* ET_C_GENERATOR.print_result_name */
extern void T114f747(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assign_to */
extern void T114f785(TC* ac, T0* C);
/* ET_C_GENERATOR.indent */
extern void T114f745(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_empty */
extern T1 T1814f14(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_empty */
extern T1 T1050f10(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.is_empty */
extern T1 T969f18(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_empty */
extern T1 T924f5(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_empty */
extern T1 T1049f39(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_empty */
extern T1 T1048f39(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_empty */
extern T1 T966f38(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_empty */
extern T1 T894f36(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_empty */
extern T1 T838f28(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.arguments */
extern T0* T935f3(TC* ac, T0* C);
/* ET_C_GENERATOR.print_argument_name */
extern void T114f820(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.formal_argument */
extern T0* T114f317(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].put_last */
extern void T913f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].item */
extern T0* T913f6(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.add_separate_arguments */
extern void T2041f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_FROM_EXPRESSION.add_separate_arguments */
extern void T2040f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_BUILTIN_EXPRESSION.add_separate_arguments */
extern void T2039f23(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_CAST_EXPRESSION.add_separate_arguments */
extern void T1870f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BINARY_INTEGER_CONSTANT.add_separate_arguments */
extern void T679f70(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OCTAL_INTEGER_CONSTANT.add_separate_arguments */
extern void T678f70(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.add_separate_arguments */
extern void T677f70(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNDERSCORED_INTEGER_CONSTANT.add_separate_arguments */
extern void T676f70(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VERBATIM_STRING.add_separate_arguments */
extern void T674f56(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SPECIAL_MANIFEST_STRING.add_separate_arguments */
extern void T673f52(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C3_CHARACTER_CONSTANT.add_separate_arguments */
extern void T671f53(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ITERATION_CURSOR.add_separate_arguments */
extern void T757f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUANTIFIER_EXPRESSION.add_separate_arguments */
extern void T613f43(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_EXPRESSION.add_separate_arguments */
extern void T339f51(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.add_separate_arguments */
extern void T756f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NAMED_OBJECT_TEST.add_separate_arguments */
extern void T755f32(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OLD_OBJECT_TEST.add_separate_arguments */
extern void T753f35(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.add_separate_arguments */
extern void T741f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_EXPRESSION.add_separate_arguments */
extern void T1033f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.add_separate_arguments */
extern void T764f52(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.add_separate_arguments */
extern void T763f61(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.add_separate_arguments */
extern void T762f56(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.add_separate_arguments */
extern void T761f53(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_FUNCTION_INLINE_AGENT.add_separate_arguments */
extern void T760f62(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_FUNCTION_INLINE_AGENT.add_separate_arguments */
extern void T759f57(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CALL_AGENT.add_separate_arguments */
extern void T376f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_STRIP_EXPRESSION.add_separate_arguments */
extern void T630f35(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MANIFEST_TUPLE.add_separate_arguments */
extern void T568f38(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MANIFEST_ARRAY.add_separate_arguments */
extern void T559f36(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIZED_EXPRESSION.add_separate_arguments */
extern void T589f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BRACKET_EXPRESSION.add_separate_arguments */
extern void T373f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST.add_separate_arguments */
extern void T754f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.add_separate_arguments */
extern void T752f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.add_separate_arguments */
extern void T751f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MANIFEST_TYPE.add_separate_arguments */
extern void T750f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_EQUALITY_EXPRESSION.add_separate_arguments */
extern void T749f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EQUALITY_EXPRESSION.add_separate_arguments */
extern void T748f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.add_separate_arguments */
extern void T745f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.add_separate_arguments */
extern void T744f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.add_separate_arguments */
extern void T743f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.add_separate_arguments */
extern void T742f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_EXPRESSION.add_separate_arguments */
extern void T740f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_STATIC_CALL_EXPRESSION.add_separate_arguments */
extern void T627f36(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL_EXPRESSION.add_separate_arguments */
extern void T379f36(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INSPECT_EXPRESSION.add_separate_arguments */
extern void T530f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IF_EXPRESSION.add_separate_arguments */
extern void T509f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATE_EXPRESSION.add_separate_arguments */
extern void T436f41(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.add_separate_arguments */
extern void T685f52(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_RESULT.add_separate_arguments */
extern void T318f40(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TRUE_CONSTANT.add_separate_arguments */
extern void T683f46(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNDERSCORED_REAL_CONSTANT.add_separate_arguments */
extern void T681f48(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_REGULAR_MANIFEST_STRING.add_separate_arguments */
extern void T672f53(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_INLINED_EXPRESSION.add_separate_arguments */
extern void T980f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FALSE_CONSTANT.add_separate_arguments */
extern void T684f47(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.add_separate_arguments */
extern void T686f55(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_REGULAR_REAL_CONSTANT.add_separate_arguments */
extern void T680f50(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_REGULAR_INTEGER_CONSTANT.add_separate_arguments */
extern void T675f72(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VOID.add_separate_arguments */
extern void T327f38(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CURRENT.add_separate_arguments */
extern void T297f38(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.add_separate_arguments */
extern void T303f133(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].wipe_out */
extern void T913f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].move_all_cursors_after */
extern void T913f19(TC* ac, T0* C);
/* ET_C_GENERATOR.print_context_type_declaration */
extern void T114f748(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_separate_call_name */
extern void T114f878(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_type_declaration */
extern void T114f744(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_call_name_in_comment */
extern void T114f771(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* KL_STRING_ROUTINES.replaced_all_substrings */
extern T0* T108s17(TC* ac, T0* a1, T0* a2, T0* a3);
/* KL_STRING_ROUTINES.substring_index */
extern T6 T108s19(TC* ac, T0* a1, T0* a2, T6 a3);
extern T1 T108s19ot1(TC* ac, T0* a1);
/* STRING_8.substring_index */
extern T6 T17f32(TC* ac, T0* C, T0* a1, T6 a2);
/* STRING_8_SEARCHER.substring_index */
extern T6 T1017f2(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_8_SEARCHER.substring_index_with_deltas */
extern T6 T1017f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_8_SEARCHER.internal_initialize_deltas */
extern void T1017f6(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* STRING_8.string_searcher */
extern T0* T17f34(TC* ac, T0* C);
/* STRING_8_SEARCHER.make */
extern T0* T1017c5(TC* ac);
/* UC_UTF8_STRING.substring_index */
extern T6 T1066f34(TC* ac, T0* C, T0* a1, T6 a2);
/* UC_STRING.substring_index */
extern T6 T909f65(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.name */
extern T0* T935f2(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.put_integer */
extern void T950f43(TC* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.put_integer_64 */
extern void T950f52(TC* ac, T0* C, T7 a1);
/* ET_CREATE_INSTRUCTION.separate_target */
extern T0* T734f15(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.separate_target */
extern T0* T731f14(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.target */
extern T0* T935f1(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_scoop_region_passive */
extern T1 T2040f28(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.is_scoop_region_passive */
extern T1 T734f17(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.is_scoop_region_passive */
extern T1 T731f16(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_scoop_region_passive */
extern T1 T436f10(TC* ac, T0* C);
/* ET_C_GENERATOR.current_closure */
extern T0* T114f335(TC* ac, T0* C);
extern T1 T114f335ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_unfrozen */
extern void T114f844(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.wipe_out */
extern void T568f35(TC* ac, T0* C);
/* ET_C_GENERATOR.mark_expressions_unfrozen */
extern void T114f912(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_semicolon_newline */
extern void T114f786(TC* ac, T0* C);
/* KL_STRING_OUTPUT_STREAM.put_string */
extern void T912f8(TC* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.string_ */
extern T0* T912s3(TC* ac);
/* ET_C_GENERATOR.print_call_name */
extern void T114f828(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
extern T1 T114f828ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.dynamic_type_set_in_feature */
extern T0* T114f325(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.is_current */
extern T1 T1868f5(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.is_current */
extern T1 T766f9(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_current */
extern T1 T336f40(TC* ac, T0* C);
/* ET_CALL_AGENT.is_call_agent */
extern T1 T376s27(TC* ac);
/* ET_C_GENERATOR.register_polymorphic_called_features */
extern void T114f911(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_generated */
extern void T889f19(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_generated */
extern void T888f18(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_force_result_boxing */
extern void T888f17(TC* ac, T0* C, T1 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer */
extern void T912f9(TC* ac, T0* C, T6 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer_64 */
extern void T912f11(TC* ac, T0* C, T7 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.id */
extern T6 T1049f1(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.id */
extern T6 T1048f1(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.id */
extern T6 T966f1(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.id */
extern T6 T894f1(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.id */
extern T6 T838f4(TC* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_type_id_access */
extern void T114f821(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_type_id_name */
extern void T114f800(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_adapted_named_query_call */
extern void T114f831(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_named_query_call */
extern T0* T114f831ac1(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T114f831ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_typed_default_entity_value */
extern void T114f910(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_expression */
extern void T114f811(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_target_expression */
extern void T114f898(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_separate_qualified_call_expression */
extern void T114f909(TC* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.put_character */
extern void T912f7(TC* ac, T0* C, T2 a1);
/* ET_C_GENERATOR.print_temp_name */
extern void T114f749(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.new_temp_variable */
extern T0* T114f203(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [BOOLEAN].force_last */
extern void T915f13(TC* ac, T0* C, T1 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].force */
extern void T1231s4(TC* ac, T0* a1, T1 a2, T6 a3);
/* DS_ARRAYED_LIST [BOOLEAN].resize */
extern void T915f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].aliased_resized_area */
extern T0* T1231s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [BOOLEAN].aliased_resized_area */
extern T0* T155f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [BOOLEAN].new_capacity */
extern T6 T915f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [BOOLEAN].extendible */
extern T1 T915f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].force_last */
extern void T914f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE].force */
extern void T1354s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].fill_with */
extern void T1353f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].extend */
extern void T1353f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T914f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE].aliased_resized_area */
extern T0* T1354s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].aliased_resized_area */
extern T0* T1353f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T914f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].extendible */
extern T1 T914f7(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_temporary */
extern void T303f124(TC* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].replace */
extern void T914f11(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.same_declaration_types */
extern T1 T114f584(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_writable */
extern void T114f840(TC* ac, T0* C, T0* a1);
extern T1 T114f840ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_local_variable */
extern void T114f877(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_local_name */
extern void T114f904(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_inline_separate_argument */
extern void T114f876(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_item */
extern void T114f875(TC* ac, T0* C, T0* a1);
extern T1 T114f875ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_temporary_variable */
extern void T114f874(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.temp_variable_type */
extern T0* T114f388(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.is_temp_variable_known */
extern T1 T114f387(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_formal_argument */
extern void T114f873(TC* ac, T0* C, T0* a1);
extern T1 T114f873ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_indentation */
extern void T114f746(TC* ac, T0* C);
/* ET_C_GENERATOR.print_attachment_expression */
extern void T114f879(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_boxed_expression */
extern void T114f905(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_last_new */
extern void T827f56(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_put */
extern void T827f63(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_put */
extern void T827f60(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_put */
extern void T827f62(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_put */
extern void T827f61(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_item */
extern T6 T827f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].hash_position */
extern T6 T827f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].resize */
extern void T827f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_resize */
extern void T827f76(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].special_integer_ */
extern T0* T827s42(TC* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_resize */
extern void T827f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_resize */
extern void T827f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_resize */
extern void T827f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_modulus */
extern T6 T827f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_capacity */
extern T6 T827f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].found_item */
extern T0* T827f21(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].found */
extern T1 T827f39(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].search */
extern void T827f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].search_position */
extern void T827f59(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].sort */
extern void T239f20(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort */
extern void T982f3(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort_with_comparator */
extern void T982f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [INTEGER_32].subsort_with_comparator */
extern void T982f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [INTEGER_32].swap */
extern void T239f28(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].less_than */
extern T1 T1053f1(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].detachable_less_than */
extern T1 T1053f2(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].attached_less_than */
extern T1 T1053f3(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_C_GENERATOR.dynamic_type_id_sorter */
extern T0* T114f324(TC* ac, T0* C);
/* DS_QUICK_SORTER [INTEGER_32].make */
extern T0* T982c2(TC* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].make */
extern T0* T1053c4(TC* ac);
/* DS_ARRAYED_STACK [ET_EXPRESSION].force */
extern void T926f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].resize */
extern void T926f14(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].new_capacity */
extern T6 T926f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].extendible */
extern T1 T926f8(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.mark_temp_variable_frozen */
extern void T114f841(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_used */
extern void T114f908(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.is_temp_variable_free */
extern T1 T114f392(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_temporary */
extern T1 T303f33(TC* ac, T0* C);
/* ET_C_GENERATOR.print_adapted_query_call */
extern void T114f865(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_query_call */
extern T0* T114f865ac1(TC* ac, T0* a1, T0* a2, T0* a3, T1 a4);
extern T1 T114f865ot1(TC* ac, T0* a1);
extern T1 T114f865ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_query_call */
extern void T114f862(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T114f862ot1(TC* ac, T0* a1);
extern T1 T114f862ot2(TC* ac, T0* a1);
extern T1 T114f862ot3(TC* ac, T0* a1);
extern T1 T114f862ot4(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_inlined_query_call */
extern void T114f891(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T114f891ot1(TC* ac, T0* a1);
extern T1 T114f891ot2(TC* ac, T0* a1);
extern T1 T114f891ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.is_character_n */
extern T1 T1049f63(TC* ac, T0* C);
/* ET_CLASS.is_character_n_class */
extern T1 T70f108(TC* ac, T0* C);
/* ET_CLASS_CODES.is_character_n */
extern T1 T779s37(TC* ac, T8 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_character_n */
extern T1 T1048f63(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.is_character_n */
extern T1 T969f14(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_character_n */
extern T1 T966f35(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_character_n */
extern T1 T894f33(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_character_n */
extern T1 T838f52(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_real_n */
extern T1 T1049f62(TC* ac, T0* C);
/* ET_CLASS.is_real_n_class */
extern T1 T70f107(TC* ac, T0* C);
/* ET_CLASS_CODES.is_real_n */
extern T1 T779s36(TC* ac, T8 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_real_n */
extern T1 T1048f62(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.is_real_n */
extern T1 T969f13(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_real_n */
extern T1 T966f34(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_real_n */
extern T1 T894f32(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_real_n */
extern T1 T838f51(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_integer_n */
extern T1 T1049f61(TC* ac, T0* C);
/* ET_CLASS.is_integer_n_class */
extern T1 T70f106(TC* ac, T0* C);
/* ET_CLASS_CODES.is_integer_n */
extern T1 T779s35(TC* ac, T8 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_integer_n */
extern T1 T1048f61(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.is_integer_n */
extern T1 T969f12(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_integer_n */
extern T1 T966f33(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_integer_n */
extern T1 T894f31(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_integer_n */
extern T1 T838f50(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_query_call */
extern void T114f890(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_query_call */
extern void T114f940(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_runtime_name_call */
extern void T114f1170(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_type_id_call */
extern void T114f1169(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_expanded_call */
extern void T114f1168(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_deferred_call */
extern void T114f1167(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_attached_call */
extern void T114f1166(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_has_default_call */
extern void T114f1165(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable */
extern T1 T691f41(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_detachable */
extern T1 T500f43(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_detachable */
extern T1 T70f177(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_count_call */
extern void T114f1164(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_default_call */
extern void T114f1163(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_query_call */
extern void T114f939(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_object_comparison_call */
extern void T114f1162(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_count_call */
extern void T114f1161(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T114f1161ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_query_call */
extern void T114f938(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_item_call */
extern void T114f1160(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_element_size_call */
extern void T114f1159(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T114f1159ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_count_call */
extern void T114f1158(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_count_access */
extern void T114f755(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_count_name */
extern void T114f814(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_special_capacity_call */
extern void T114f1157(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_capacity_access */
extern void T114f754(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_capacity_name */
extern void T114f813(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_special_base_address_call */
extern void T114f1156(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_query_call */
extern void T114f937(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_positive_infinity_call */
extern void T114f1155(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_negative_infinity_call */
extern void T114f1154(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_nan_call */
extern void T114f1153(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_item_call */
extern void T114f1152(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_query_call */
extern void T114f936(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_real_call */
extern void T114f1151(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_integer_64_call */
extern void T114f1150(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_integer_call */
extern void T114f1149(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_to_double_call */
extern void T114f1148(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_quotient_call */
extern void T114f1147(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_product_call */
extern void T114f1146(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_power_call */
extern void T114f1145(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_plus_call */
extern void T114f1144(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_opposite_call */
extern void T114f1143(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_minus_call */
extern void T114f1142(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_positive_infinity_call */
extern void T114f1141(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_negative_infinity_call */
extern void T114f1140(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_nan_call */
extern void T114f1139(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_less_call */
extern void T114f1138(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_query_c_call */
extern void T114f1173(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T1 a4, T0* a5, T1 a6);
/* ET_C_GENERATOR.print_declaration_type_cast_from_c */
extern void T114f1234(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_declaration_type_cast */
extern void T114f854(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.is_boolean */
extern T1 T1049f70(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_boolean */
extern T1 T1048f71(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_boolean */
extern T1 T966f37(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_boolean */
extern T1 T894f35(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_boolean */
extern T1 T838f54(TC* ac, T0* C);
/* ET_C_GENERATOR.total_order_on_reals_mode */
extern T1 T114f400(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_minimum_number_call */
extern void T114f1137(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_maximum_number_call */
extern void T114f1136(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_is_less_equal_call */
extern void T114f1135(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_is_less_call */
extern void T114f1134(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_is_greater_equal_call */
extern void T114f1133(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_is_greater_call */
extern void T114f1132(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_is_equal_call */
extern void T114f1131(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_identity_call */
extern void T114f1130(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_floor_real_64_call */
extern void T114f1129(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_floor_real_32_call */
extern void T114f1128(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ceiling_real_64_call */
extern void T114f1127(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ceiling_real_32_call */
extern void T114f1126(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_query_call */
extern void T114f935(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_item_call */
extern void T114f1125(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_query_call */
extern void T114f934(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_to_integer_32_call */
extern void T114f1124(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_plus_call */
extern void T114f1123(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_is_default_pointer_call */
extern void T114f1122(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_ECF_LIBRARY.pointer_type */
extern T0* T802f68(TC* ac, T0* C);
/* ET_ECF_SYSTEM.pointer_type */
extern T0* T87f71(TC* ac, T0* C);
/* ET_SYSTEM.pointer_type */
extern T0* T50f70(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_pointer_hash_code_call */
extern void T114f1121(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_query_call */
extern void T114f933(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_wide_character_bytes_call */
extern void T114f1120(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_real_bytes_call */
extern void T114f1119(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_pointer_bytes_call */
extern void T114f1118(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_windows_call */
extern void T114f1117(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vxworks_call */
extern void T114f1116(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vms_call */
extern void T114f1115(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_unix_call */
extern void T114f1114(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_thread_capable_call */
extern void T114f1113(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.multithreaded_mode */
extern T1 T114f499(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_platform_is_scoop_capable_call */
extern void T114f1112(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.scoop_mode */
extern T1 T114f498(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_platform_is_mac_call */
extern void T114f1111(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_dotnet_call */
extern void T114f1110(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_64_bits_call */
extern void T114f1109(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_integer_bytes_call */
extern void T114f1108(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_double_bytes_call */
extern void T114f1107(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_character_bytes_call */
extern void T114f1106(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_boolean_bytes_call */
extern void T114f1105(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_query_call */
extern void T114f932(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_find_referers_call */
extern void T114f1104(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_query_call */
extern void T114f931(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_type_id_from_name_call */
extern void T114f1103(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_type_conforms_to_call */
extern void T114f1102(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_storable_version_of_type_call */
extern void T114f1101(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_at_offset_call */
extern void T114f1100(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_at_call */
extern void T114f1099(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_call */
extern void T114f1098(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_64_field_at_call */
extern void T114f1097(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_64_field_call */
extern void T114f1096(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_32_field_at_call */
extern void T114f1095(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_32_field_call */
extern void T114f1094(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_raw_reference_field_at_offset_call */
extern void T114f1093(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_raw_reference_field_at_call */
extern void T114f1092(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pointer_field_at_call */
extern void T114f1091(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pointer_field_call */
extern void T114f1090(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_persistent_field_count_of_type_call */
extern void T114f1089(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_once_objects_call */
extern void T114f1088(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_object_size_call */
extern void T114f1087(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_type_instance_of_call */
extern void T114f1086(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_tuple_instance_of_call */
extern void T114f1085(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_special_of_reference_instance_of_call */
extern void T114f1084(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_instance_of_call */
extern void T114f1083(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_64_field_at_call */
extern void T114f1082(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_64_field_call */
extern void T114f1081(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_32_field_at_call */
extern void T114f1080(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_32_field_call */
extern void T114f1079(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_16_field_at_call */
extern void T114f1078(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_16_field_call */
extern void T114f1077(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_8_field_at_call */
extern void T114f1076(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_8_field_call */
extern void T114f1075(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_tuple_type_call */
extern void T114f1074(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_tuple_call */
extern void T114f1073(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_type_call */
extern void T114f1072(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_or_basic_type_call */
extern void T114f1071(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_call */
extern void T114f1070(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_expanded_call */
extern void T114f1069(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_copy_semantics_item_call */
extern void T114f1068(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_call */
extern void T114f1067(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_object_marked_call */
extern void T114f1066(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_field_transient_of_type_call */
extern void T114f1065(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_field_expanded_of_type_call */
extern void T114f1064(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_expanded_call */
extern void T114f1063(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_copy_semantics_field_call */
extern void T114f1062(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_attached_type_call */
extern void T114f1061(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_64_field_at_call */
extern void T114f1060(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_64_field_call */
extern void T114f1059(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_32_field_at_call */
extern void T114f1058(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_32_field_call */
extern void T114f1057(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_16_field_at_call */
extern void T114f1056(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_16_field_call */
extern void T114f1055(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_8_field_at_call */
extern void T114f1054(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_8_field_call */
extern void T114f1053(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generic_parameter_count_call */
extern void T114f1052(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generator_8_of_type_call */
extern void T114f1051(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generator_of_type_call */
extern void T114f1050(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generating_type_8_of_type_call */
extern void T114f1049(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generating_type_of_type_call */
extern void T114f1048(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_type_of_type_call */
extern void T114f1047(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_static_type_of_type_call */
extern void T114f1046(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_offset_of_type_call */
extern void T114f1045(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_name_of_type_call */
extern void T114f1044(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_count_of_type_call */
extern void T114f1043(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_eif_gen_param_id_call */
extern void T114f1042(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_dynamic_type_at_offset_call */
extern void T114f1041(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_dynamic_type_call */
extern void T114f1040(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_detachable_type_call */
extern void T114f1039(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_compiler_version_call */
extern void T114f1038(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_check_assert_call */
extern void T114f1037(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_32_field_at_call */
extern void T114f1036(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_32_field_call */
extern void T114f1035(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_8_field_at_call */
extern void T114f1034(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_8_field_call */
extern void T114f1033(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_boolean_field_at_call */
extern void T114f1032(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_boolean_field_call */
extern void T114f1031(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_attached_type_call */
extern void T114f1030(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_query_call */
extern void T114f930(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_item_call */
extern void T114f1029(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_query_call */
extern void T114f929(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_64_call */
extern void T114f1028(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_32_call */
extern void T114f1027(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_call */
extern void T114f1026(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_double_call */
extern void T114f1025(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_character_32_call */
extern void T114f1024(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_character_8_call */
extern void T114f1023(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_quotient_call */
extern void T114f1022(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_product_call */
extern void T114f1021(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_power_call */
extern void T114f1020(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_plus_call */
extern void T114f1019(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_opposite_call */
extern void T114f1018(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_minus_call */
extern void T114f1017(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_is_less_call */
extern void T114f1016(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_integer_remainder_call */
extern void T114f1015(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_integer_quotient_call */
extern void T114f1014(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_identity_call */
extern void T114f1013(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_xor_call */
extern void T114f1012(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_shift_right_call */
extern void T114f1011(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_shift_left_call */
extern void T114f1010(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_or_call */
extern void T114f1009(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_not_call */
extern void T114f1008(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_and_call */
extern void T114f1007(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_64_call */
extern void T114f1006(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_32_call */
extern void T114f1005(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_16_call */
extern void T114f1004(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_8_call */
extern void T114f1003(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_64_call */
extern void T114f1002(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_32_call */
extern void T114f1001(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_16_call */
extern void T114f1000(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_8_call */
extern void T114f999(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_query_call */
extern void T114f928(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_object_id_call */
extern void T114f998(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_is_object_id_of_current_call */
extern void T114f997(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_id_object_call */
extern void T114f996(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_current_object_id_call */
extern void T114f995(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_query_call */
extern void T114f927(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_item_call */
extern void T114f994(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_fast_item_call */
extern void T114f993(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_query_call */
extern void T114f926(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_cwin_error_text_call */
extern void T114f992(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_character_size_call */
extern void T114f991(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_facility_call */
extern void T114f990(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_code_call */
extern void T114f989(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_call */
extern void T114f988(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_c_strlen_call */
extern void T114f987(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_query_call */
extern void T114f925(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_item_call */
extern void T114f986(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_query_call */
extern void T114f924(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_to_character_32_call */
extern void T114f985(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_to_character_8_call */
extern void T114f984(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_natural_32_code_call */
extern void T114f983(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_code_call */
extern void T114f982(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_query_call */
extern void T114f923(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_item_call */
extern void T114f981(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_query_call */
extern void T114f922(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_xor_call */
extern void T114f980(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_else_call */
extern void T114f979(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_call */
extern void T114f978(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_not_call */
extern void T114f977(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_implies_call */
extern void T114f976(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_then_call */
extern void T114f975(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_call */
extern void T114f974(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_query_call */
extern void T114f921(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_i_th_argument_string_call */
extern void T114f973(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_i_th_argument_pointer_call */
extern void T114f972(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_argument_count_call */
extern void T114f971(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_query_call */
extern void T114f920(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_twin_call */
extern void T114f970(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_call */
extern void T114f969(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call */
extern void T114f892(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call_with_reference */
extern void T114f945(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
extern T1 T114f945ot1(TC* ac, T0* a1);
extern T1 T114f945ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_times */
extern void T114f1177(TC* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_special_offset_access */
extern void T114f1176(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_offset_name */
extern void T114f1235(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call_with_expanded */
extern void T114f944(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_C_GENERATOR.print_equal_to */
extern void T114f858(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_redefined_is_equal_routine */
extern T1 T1049f12(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_redefined_is_equal_routine */
extern T1 T1048f12(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_redefined_is_equal_routine */
extern T1 T966f17(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_redefined_is_equal_routine */
extern T1 T894f17(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_redefined_is_equal_routine */
extern T1 T838f16(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T1049f30(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T1048f30(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T966f46(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_item_nested_custom_standard_is_equal_routine */
extern T1 T966f50(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T966f46p1(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T894f46(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T894f46p1(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T838f39(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T924f9(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T924f9p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T924f11(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T924f11p1(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_same_type_call */
extern void T114f968(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_is_equal_call */
extern void T114f863(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generator_call */
extern void T114f967(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generating_type_call */
extern void T114f966(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_deep_twin_call */
extern void T114f965(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].force_last */
extern void T930f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].slots_put */
extern void T930f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].clashes_put */
extern void T930f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T930f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].clashes_resize */
extern void T930f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].special_integer_ */
extern T0* T930s33(TC* ac);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].key_storage_resize */
extern void T930f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].item_storage_resize */
extern void T930f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].slots_resize */
extern void T930f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].new_modulus */
extern T6 T930f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T930f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].item_storage_put */
extern void T930f56(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].unset_found_item */
extern void T930f47(TC* ac, T0* C);
/* ET_C_GENERATOR.print_non_inlined_query_call */
extern void T114f888(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_DYNAMIC_PRECURSOR.is_attribute_with_self_initializing_code */
extern T1 T860f41(TC* ac, T0* C);
extern T1 T860f41ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.is_self_initializing */
extern T1 T1049s64(TC* ac);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_self_initializing */
extern T1 T1048s64(TC* ac);
/* ET_DYNAMIC_TUPLE_TYPE.is_self_initializing */
extern T1 T894s34(TC* ac);
/* ET_DYNAMIC_SPECIAL_TYPE.is_self_initializing */
extern T1 T966s36(TC* ac);
/* ET_DYNAMIC_PRIMARY_TYPE.is_self_initializing */
extern T1 T838s53(TC* ac);
/* ET_DYNAMIC_SECONDARY_TYPE.is_self_initializing */
extern T1 T969f15(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.has_self_initializing_code */
extern T1 T703f40(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_attribute_with_self_initializing_code */
extern T1 T845f41(TC* ac, T0* C);
extern T1 T845f41ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_once_value_name */
extern void T114f777(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].force_last */
extern void T941f43(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_put */
extern void T941f58(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_put */
extern void T941f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_put */
extern void T941f56(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_item */
extern T6 T941f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].hash_position */
extern T6 T941f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].resize */
extern void T941f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_resize */
extern void T941f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].special_integer_ */
extern T0* T941s37(TC* ac);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_resize */
extern void T941f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_resize */
extern void T941f63(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].aliased_resized_area */
extern T0* T1403s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTANT].aliased_resized_area */
extern T0* T1401f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_item */
extern T0* T941f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_item */
extern T6 T941f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_resize */
extern void T941f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_modulus */
extern T6 T941f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_capacity */
extern T6 T941f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_put */
extern void T941f54(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].force */
extern void T1403s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CONSTANT].fill_with */
extern void T1401f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].extend */
extern void T1401f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].search_position */
extern void T941f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].unset_found_item */
extern void T941f46(TC* ac, T0* C);
/* ET_C_GENERATOR.gobo_version_string_constant */
extern T0* T114f383(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.file_first_line */
extern T0* T152s19(TC* ac, T0* a1);
/* KL_UNIX_INPUT_FILE.close */
extern void T1061f36(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.old_close */
extern void T1061f37(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.default_pointer */
extern T14 T1061s21(TC* ac);
/* KL_UNIX_INPUT_FILE.file_close */
extern void T1061s41(TC* ac, T14 a1);
/* KL_UNIX_INPUT_FILE.read_line */
extern void T1061f35(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.read_character */
extern void T1061f40(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.old_read_character */
extern void T1061f43(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.file_gc */
extern T2 T1061s29(TC* ac, T14 a1);
/* KL_UNIX_INPUT_FILE.old_end_of_file */
extern T1 T1061f25(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.file_feof */
extern T1 T1061s31(TC* ac, T14 a1);
/* KL_UNIX_INPUT_FILE.string_ */
extern T0* T1061s27(TC* ac);
/* KL_UNIX_INPUT_FILE.is_open_read */
extern T1 T1061f13(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.old_is_open_read */
extern T1 T1061f26(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.open_read */
extern void T1061f34(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.is_closed */
extern T1 T1061f17(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.old_is_closed */
extern T1 T1061f22(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.old_open_read */
extern void T1061f39(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.open_read */
extern void T1061f39p1(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.file_open */
extern T14 T1061s24(TC* ac, T14 a1, T6 a2);
/* KL_UNIX_INPUT_FILE.internal_name_pointer */
extern T0* T1061f23(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.old_is_readable */
extern T1 T1061f16(TC* ac, T0* C);
/* FILE_INFO.is_readable */
extern T1 T166f8(TC* ac, T0* C);
/* FILE_INFO.file_eaccess */
extern T1 T166s6(TC* ac, T14 a1, T6 a2);
/* KL_UNIX_INPUT_FILE.buffered_file_info */
extern T0* T1061f28(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.set_buffer */
extern void T1061f44(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.old_exists */
extern T1 T1061f15(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.file_exists */
extern T1 T1061s30(TC* ac, T14 a1);
/* KL_UNIX_INPUT_FILE.string_name */
extern T0* T1061f12(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.new_input_file */
extern T0* T152s30(TC* ac, T0* a1);
/* KL_UNIX_INPUT_FILE.make */
extern T0* T1061c33(TC* ac, T0* a1);
/* KL_UNIX_INPUT_FILE.make */
extern void T1061f33p1(TC* ac, T0* C, T0* a1);
/* KL_UNIX_INPUT_FILE.old_make */
extern void T1061f38(TC* ac, T0* C, T0* a1);
/* KL_UNIX_INPUT_FILE.set_name */
extern void T1061f42(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.file_first_line */
extern T0* T151s19(TC* ac, T0* a1);
/* KL_WINDOWS_INPUT_FILE.close */
extern void T1060f36(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.old_close */
extern void T1060f37(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.default_pointer */
extern T14 T1060s21(TC* ac);
/* KL_WINDOWS_INPUT_FILE.file_close */
extern void T1060s41(TC* ac, T14 a1);
/* KL_WINDOWS_INPUT_FILE.read_line */
extern void T1060f35(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.read_character */
extern void T1060f40(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.old_read_character */
extern void T1060f43(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.file_gc */
extern T2 T1060s29(TC* ac, T14 a1);
/* KL_WINDOWS_INPUT_FILE.old_end_of_file */
extern T1 T1060f25(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.file_feof */
extern T1 T1060s31(TC* ac, T14 a1);
/* KL_WINDOWS_INPUT_FILE.string_ */
extern T0* T1060s27(TC* ac);
/* KL_WINDOWS_INPUT_FILE.is_open_read */
extern T1 T1060f13(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.old_is_open_read */
extern T1 T1060f26(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.open_read */
extern void T1060f34(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.is_closed */
extern T1 T1060f17(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.old_is_closed */
extern T1 T1060f22(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.old_open_read */
extern void T1060f39(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.open_read */
extern void T1060f39p1(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.file_open */
extern T14 T1060s24(TC* ac, T14 a1, T6 a2);
/* KL_WINDOWS_INPUT_FILE.internal_name_pointer */
extern T0* T1060f23(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.old_is_readable */
extern T1 T1060f16(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.buffered_file_info */
extern T0* T1060f28(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.set_buffer */
extern void T1060f44(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.old_exists */
extern T1 T1060f15(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.file_exists */
extern T1 T1060s30(TC* ac, T14 a1);
/* KL_WINDOWS_INPUT_FILE.string_name */
extern T0* T1060f12(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.new_input_file */
extern T0* T151s32(TC* ac, T0* a1);
/* KL_WINDOWS_INPUT_FILE.make */
extern T0* T1060c33(TC* ac, T0* a1);
/* KL_WINDOWS_INPUT_FILE.make */
extern void T1060f33p1(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_INPUT_FILE.old_make */
extern void T1060f38(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_INPUT_FILE.set_name */
extern void T1060f42(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_special_item */
extern T1 T860f38(TC* ac, T0* C);
/* ET_C_GENERATOR.print_adapted_once_function_call */
extern void T114f894(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_once_function_call */
extern T0* T114f894ac1(TC* ac, T0* a1, T0* a2, T6 a3, T6 a4);
/* Creation of agent #2 in feature ET_C_GENERATOR.print_adapted_once_function_call */
extern T0* T114f894ac2(TC* ac, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.register_once_feature */
extern void T114f946(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].force_last */
extern void T939f39(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].key_storage_put */
extern void T939f52(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].slots_put */
extern void T939f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].clashes_put */
extern void T939f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].resize */
extern void T939f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].clashes_resize */
extern void T939f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].special_integer_ */
extern T0* T939s32(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].key_storage_resize */
extern void T939f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].item_storage_resize */
extern void T939f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].slots_resize */
extern void T939f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].new_modulus */
extern T6 T939f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].new_capacity */
extern T6 T939f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].item_storage_put */
extern void T939f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].unset_found_item */
extern void T939f43(TC* ac, T0* C);
/* ET_C_GENERATOR.print_adapted_extended_attribute_call */
extern void T114f893(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_extended_attribute_call */
extern T0* T114f893ac1(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #2 in feature ET_C_GENERATOR.print_adapted_extended_attribute_call */
extern T0* T114f893ac2(TC* ac, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.is_inlinable_function */
extern T1 T114f384(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T114f384ot1(TC* ac, T0* a1);
extern T1 T114f384ot2(TC* ac, T0* a1);
extern T1 T114f384ot3(TC* ac, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.has_result */
extern T1 T1870f4(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.has_result */
extern T1 T980f9(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.has_result */
extern T1 T2041f5(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.has_result */
extern T1 T2040f24(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.has_result */
extern T1 T2039f20(TC* ac, T0* C);
/* ET_IDENTIFIER.has_result */
extern T1 T303f52(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.has_result */
extern T1 T679f19(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.has_result */
extern T1 T678f19(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_result */
extern T1 T677f19(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_result */
extern T1 T676f19(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.has_result */
extern T1 T675f20(TC* ac, T0* C);
/* ET_VERBATIM_STRING.has_result */
extern T1 T674f22(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.has_result */
extern T1 T673f19(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.has_result */
extern T1 T671f17(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.has_result */
extern T1 T757f11(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_result */
extern T1 T613f23(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_result */
extern T1 T613f23p1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_result */
extern T1 T339f26(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_result */
extern T1 T339f26p1(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.has_result */
extern T1 T556f10(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.has_result */
extern T1 T756f12(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.has_result */
extern T1 T755f15(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.has_result */
extern T1 T753f18(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.has_result */
extern T1 T741f11(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.has_result */
extern T1 T1033f12(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.has_result */
extern T1 T1866f9(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.has_result */
extern T1 T345f12(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.has_result */
extern T1 T764f22(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.has_result */
extern T1 T1867f3(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.has_result */
extern T1 T358f9(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.has_result */
extern T1 T766f10(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.has_result */
extern T1 T336f42(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.has_result */
extern T1 T1580f5(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.has_result */
extern T1 T763f28(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.has_result */
extern T1 T762f26(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.has_result */
extern T1 T761f24(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.has_result */
extern T1 T760f29(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.has_result */
extern T1 T759f27(TC* ac, T0* C);
/* ET_CALL_AGENT.has_result */
extern T1 T376f16(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.has_result */
extern T1 T765f8(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.has_result */
extern T1 T630f15(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.has_result */
extern T1 T568f17(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.has_result */
extern T1 T559f16(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.has_result */
extern T1 T589f12(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.has_result */
extern T1 T373f13(TC* ac, T0* C);
/* ET_OBJECT_TEST.has_result */
extern T1 T754f14(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.has_result */
extern T1 T752f11(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.has_result */
extern T1 T751f13(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.has_result */
extern T1 T750f12(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.has_result */
extern T1 T749f11(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.has_result */
extern T1 T748f11(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.has_result */
extern T1 T745f13(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.has_result */
extern T1 T744f11(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.has_result */
extern T1 T743s11(TC* ac);
/* ET_CURRENT_ADDRESS.has_result */
extern T1 T742f11(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.has_result */
extern T1 T740f16(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.has_result */
extern T1 T627f16(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.has_result */
extern T1 T530f13(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.has_result */
extern T1 T656f5(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.has_result */
extern T1 T653f5(TC* ac, T0* C);
/* ET_IF_EXPRESSION.has_result */
extern T1 T509f17(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.has_result */
extern T1 T452f5(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.has_result */
extern T1 T449f6(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.has_result */
extern T1 T436f21(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.has_result */
extern T1 T686f15(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.has_result */
extern T1 T685f15(TC* ac, T0* C);
/* ET_CURRENT.has_result */
extern T1 T297f20(TC* ac, T0* C);
/* ET_RESULT.has_result */
extern T1 T318s17(TC* ac);
/* ET_FALSE_CONSTANT.has_result */
extern T1 T684f16(TC* ac, T0* C);
/* ET_VOID.has_result */
extern T1 T327f16(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.has_result */
extern T1 T683f16(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.has_result */
extern T1 T681f17(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.has_result */
extern T1 T680f17(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_result */
extern T1 T672f17(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.has_result */
extern T1 T379f15(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.dynamic_type */
extern T0* T924f6(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.count */
extern T6 T1814f2(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.count */
extern T6 T924f2(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].put_last */
extern void T927f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].wipe_out */
extern void T927f13(TC* ac, T0* C);
/* SPECIAL [ET_EXPRESSION].keep_head */
extern void T1381f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION].set_count */
extern void T1381f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].move_all_cursors_after */
extern void T927f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_next_cursor */
extern void T1383f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_after */
extern void T1383f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].first */
extern T0* T927f6(TC* ac, T0* C);
/* ET_C_GENERATOR.mark_expressions_frozen */
extern void T114f907(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].item */
extern T0* T927f10(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.resize */
extern void T568f32(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.capacity */
extern T6 T568f11(TC* ac, T0* C);
/* ET_C_GENERATOR.fill_call_operands */
extern void T114f824(TC* ac, T0* C, T6 a1);
extern T1 T114f824ot1(TC* ac, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].prune */
extern void T926f12(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.mark_temp_variable_free */
extern void T114f757(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].i_th */
extern T0* T926f5(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_attachment_operand */
extern void T114f839(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T114f839ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_type_id_access */
extern void T114f792(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_type_declaration */
extern void T114f790(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_expanded_types */
extern void T924f22(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.free_twin_feature_name */
extern void T114f872(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.new_twin_feature_name */
extern T0* T114f346(TC* ac, T0* C);
/* ET_C_GENERATOR.print_target_operand */
extern void T114f906(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_TO_EXPRESSION.is_call_agent */
extern T1 T2041f21(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.is_call_agent */
extern T1 T1544f7(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_call_agent */
extern T1 T751f11(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_call_agent */
extern T1 T745f11(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_call_agent */
extern T1 T373f8(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T379f7(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.is_call_agent */
extern T1 T937f5(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.is_tuple_label */
extern T1 T937f6(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.has_field_access */
extern T1 T888f14(TC* ac, T0* C, T0* a1);
extern T1 T888f14ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.in_call_target */
extern T1 T114f344(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.query_call */
extern T0* T860f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].value */
extern T0* T1277f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].item_storage_item */
extern T0* T1277f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].position_of_key */
extern T6 T1277f25(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.query_call */
extern T0* T845f35(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T937f3(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.name */
extern T0* T937f2(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.target */
extern T0* T937f1(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.process */
extern void T2040f30(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_from_expression */
extern void T1131f116(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_from_expression */
extern void T881f64(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_from_expression */
extern void T875f70(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_from_expression */
extern void T100f579(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_from_expression_validity */
extern void T100f582(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_expression_validity */
extern void T100f475(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vgcc6b_error */
extern void T63f462(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6b */
extern T0* T1445c1150(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6b_error */
extern void T42f462(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_dotnet_creation_procedure_call_expression_validity */
extern void T100f527(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_procedure_call_expression_validity */
extern void T100f526(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
extern T1 T100f526ot1(TC* ac, T0* a1);
extern T1 T100f526ot2(TC* ac, T0* a1);
/* ET_CONVERT_FROM_EXPRESSION.type_position */
extern T0* T2040f27(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.type_position */
extern T0* T436f29(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.type */
extern T0* T436f28(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.creation_call */
extern T0* T2040f26(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_convert_from_expression */
extern void T857f466(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_from_expression_validity */
extern void T857f469(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_creation_expression_validity */
extern void T857f295(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_dotnet_creation_procedure_call_expression_validity */
extern void T857f375(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_FEATURE_CHECKER.check_creation_procedure_call_expression_validity */
extern void T857f374(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
extern T1 T857f374ot1(TC* ac, T0* a1);
extern T1 T857f374ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_convert_from_expression */
extern void T114f1634(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_from_expression */
extern void T114f1637(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_expression */
extern void T114f788(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.process */
extern void T2039f22(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_builtin_expression */
extern void T1131f115(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T881f63(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T875f69(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_builtin_expression */
extern void T100f578(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_builtin_expression_validity */
extern void T100f581(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.process_convert_builtin_expression */
extern void T857f465(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_builtin_expression_validity */
extern void T857f468(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_builtin_expression */
extern void T114f1633(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_builtin_expression */
extern void T114f1636(TC* ac, T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.process */
extern void T1870f23(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_cast_expression */
extern void T1131f107(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_infix_cast_expression */
extern void T881f61(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_cast_expression */
extern void T875f67(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_cast_expression */
extern void T100f569(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_cast_expression_validity */
extern void T100f576(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.process_infix_cast_expression */
extern void T857f463(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_cast_expression_validity */
extern void T857f464(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_cast_expression */
extern void T114f1628(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_cast_expression */
extern void T114f1632(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.process */
extern void T303f122(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_identifier */
extern void T1131f97(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_identifier */
extern void T100f349(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_identifier */
extern void T881f59(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_identifier */
extern void T875f64(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_identifier */
extern void T857f158(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_identifier */
extern void T114f1239(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_closed_operand */
extern void T114f1249(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_closed_operand_access */
extern void T114f853(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.is_agent_closed_operand */
extern T1 T303f38(TC* ac, T0* C);
/* ET_C_GENERATOR.print_agent_open_operand */
extern void T114f1248(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_open_operand_access */
extern void T114f850(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_open_target_operand */
extern void T114f1257(TC* ac, T0* C, T0* a1);
extern T1 T114f1257ot1(TC* ac, T0* a1);
extern T1 T114f1257ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_indentation_end_newline */
extern void T114f860(TC* ac, T0* C);
/* ET_C_GENERATOR.print_indentation_else_newline */
extern void T114f1261(TC* ac, T0* C);
/* ET_C_GENERATOR.print_then_newline */
extern void T114f859(TC* ac, T0* C);
/* ET_C_GENERATOR.print_indentation_if */
extern void T114f857(TC* ac, T0* C);
/* ET_IDENTIFIER.is_agent_open_operand */
extern T1 T303f37(TC* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_local */
extern void T114f1247(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test_local_name */
extern void T114f1256(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_EXPRESSION.process */
extern void T339f50(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_across_expression */
extern void T1131f86(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_expression */
extern void T100f338(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_expression_validity */
extern void T100f431(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_expression_validity */
extern void T100f517(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_iteration_expression */
extern void T100f550(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_constant_expression */
extern void T100f262(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].force_last */
extern void T859f49(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_put */
extern void T859f55(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].force */
extern void T1289s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].fill_with */
extern void T1288f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].extend */
extern void T1288f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_put */
extern void T859f54(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_put */
extern void T859f53(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_item */
extern T6 T859f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].hash_position */
extern T6 T859f24(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.hash_code */
extern T6 T969f27(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].resize */
extern void T859f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_resize */
extern void T859f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T859s31(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T859f58(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T1289s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T1288f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T859f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T859f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T859f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_resize */
extern void T859f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T859f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T859f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_put */
extern void T859f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].search_position */
extern void T859f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].unset_found_item */
extern void T859f37(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].found_item */
extern T6 T859f21(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_item */
extern T6 T859f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].found */
extern T1 T859f20(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].search */
extern void T859f48(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_across_expression */
extern void T881f58(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_across_expression */
extern void T875f63(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_across_expression */
extern void T857f157(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_expression_validity */
extern void T857f223(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_iteration_expression_validity */
extern void T857f232(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_iteration_expression */
extern void T857f313(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_across_expression */
extern void T114f1267(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_expression */
extern void T114f1314(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_expression */
extern void T114f1362(TC* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.process */
extern void T1033f32(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unqualified_call_expression */
extern void T1131f81(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_expression */
extern void T100f333(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_expression_validity */
extern void T100f427(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vkcn2c_error */
extern void T63f419(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn2c */
extern T0* T1445c1107(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vkcn2c_error */
extern void T42f419(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_expression_validity */
extern void T100f507(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuao0c_error */
extern void T63f479(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0c */
extern T0* T1445c1167(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T63f126(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuao0c_error */
extern void T42f479(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T42f126(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuao0a_error */
extern void T63f478(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0a */
extern T0* T1445c1166(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuao0a_error */
extern void T42f478(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuao0b_error */
extern void T63f477(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0b */
extern T0* T1445c1165(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuao0b_error */
extern void T42f477(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_inline_separate_argument_call_expression_validity */
extern void T100f506(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_iteration_item_call_expression_validity */
extern void T100f505(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_expression_validity */
extern void T100f504(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_expression_validity */
extern void T100f503(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T881f57(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T875f62(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unqualified_call_expression */
extern void T857f156(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_expression_validity */
extern void T857f222(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_expression_validity */
extern void T857f307(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_inline_separate_argument_call_expression_validity */
extern void T857f306(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_iteration_item_call_expression_validity */
extern void T857f305(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_local_variable_call_expression_validity */
extern void T857f304(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_expression_validity */
extern void T857f303(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_unqualified_call_expression */
extern void T114f1311(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_expression */
extern void T114f1361(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_function_call_expression */
extern void T114f1368(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T114f1368ot1(TC* ac, T0* a1);
extern T1 T114f1368ot2(TC* ac, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T1033f10(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_call_agent */
extern T1 T740f14(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_call_agent */
extern T1 T627f14(TC* ac, T0* C);
/* ET_C_GENERATOR.print_unqualified_constant_attribute_call_expression */
extern void T114f1367(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].replace */
extern void T927f15(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].is_empty */
extern T1 T927f11(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_unique_attribute */
extern T1 T860f42(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_unique_attribute */
extern T1 T845f46(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_constant_attribute */
extern T1 T860f43(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_constant_attribute */
extern T1 T845f45(TC* ac, T0* C);
/* ET_C_GENERATOR.print_unqualified_attribute_call_expression */
extern void T114f1373(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.is_attribute_with_no_self_initializing_code */
extern T1 T860f39(TC* ac, T0* C);
extern T1 T860f39ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_FEATURE.is_attribute_with_no_self_initializing_code */
extern T1 T845f44(TC* ac, T0* C);
extern T1 T845f44ot1(TC* ac, T0* a1);
/* ET_CALL_AGENT.process */
extern void T376f36(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_call_agent */
extern void T1131f74(TC* ac, T0* C, T0* a1);
extern T1 T1131f74ot1(TC* ac, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_argument_operand_list */
extern void T1131f108(TC* ac, T0* C, T0* a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.process */
extern void T766f17(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_typed_open_argument */
extern void T1131f123(TC* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.process */
extern void T336f53(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_question_mark_symbol */
extern void T1131f118(TC* ac, T0* C, T0* a1);
/* ET_AGENT_OPEN_TARGET.process */
extern void T765f15(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_open_target */
extern void T1131f122(TC* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.process */
extern void T1580f12(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_implicit_current_target */
extern void T1131f113(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_agent */
extern void T100f326(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_agent_validity */
extern void T100f420(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f420ot1(TC* ac, T0* a1);
extern T1 T100f420ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_call_agent_validity */
extern void T100f494(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgmc0g_error */
extern void T63f466(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vgmc0g */
extern T0* T1445c1154(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vgmc0g_error */
extern void T42f466(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_CALL_AGENT.is_procedure */
extern T1 T376f23(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vpca1b_error */
extern void T63f465(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca1b */
extern T0* T1445c1153(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T63f121(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca1b_error */
extern void T42f465(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T42f121(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_tuple_label_call_agent_validity */
extern void T100f540(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_call_agent */
extern void T100f556(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T100f556ot1(TC* ac, T0* a1);
extern T1 T100f556ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_query_call */
extern void T100f560(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.function_identity_any_type */
extern T0* T802f43(TC* ac, T0* C);
/* ET_ECF_SYSTEM.function_identity_any_type */
extern T0* T87f46(TC* ac, T0* C);
/* ET_SYSTEM.function_identity_any_type */
extern T0* T50f45(TC* ac, T0* C);
/* ET_ECF_LIBRARY.predicate_identity_type */
extern T0* T802f69(TC* ac, T0* C);
/* ET_ECF_SYSTEM.predicate_identity_type */
extern T0* T87f72(TC* ac, T0* C);
/* ET_SYSTEM.predicate_identity_type */
extern T0* T50f71(TC* ac, T0* C);
/* ET_ECF_LIBRARY.tuple_identity_type */
extern T0* T802f27(TC* ac, T0* C);
/* ET_ECF_SYSTEM.tuple_identity_type */
extern T0* T87f30(TC* ac, T0* C);
/* ET_SYSTEM.tuple_identity_type */
extern T0* T50f29(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_empty */
extern T1 T1867f6(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_empty */
extern T1 T358f12(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_query_call_agent_validity */
extern void T100f539(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_query_call_agent */
extern void T100f555(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_agent */
extern void T100f559(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T100f559ot1(TC* ac, T0* a1);
extern T1 T100f559ot2(TC* ac, T0* a1);
extern T1 T100f559ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_agent_closed_operands_dynamic_types */
extern void T100f562(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f562ot1(TC* ac, T0* a1);
/* ET_CALL_AGENT.target */
extern T0* T376f5(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.target */
extern T0* T764f13(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.target */
extern T0* T763f15(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.target */
extern T0* T762f14(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.target */
extern T0* T761f15(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.target */
extern T0* T760f17(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.target */
extern T0* T759f16(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_open_operand */
extern T1 T1870f19(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.is_open_operand */
extern T1 T980f20(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.is_open_operand */
extern T1 T1868s4(TC* ac);
/* ET_CONVERT_TO_EXPRESSION.is_open_operand */
extern T1 T2041f23(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_open_operand */
extern T1 T2040f23(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_open_operand */
extern T1 T2039f19(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.is_open_operand */
extern T1 T766s7(TC* ac);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T764f37(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T763f43(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T762f39(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T761f38(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T760f44(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T759f40(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_open_operand */
extern T1 T757f21(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_open_operand */
extern T1 T756f23(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_open_operand */
extern T1 T755f25(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_open_operand */
extern T1 T754f24(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_open_operand */
extern T1 T753f28(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_open_operand */
extern T1 T752f21(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_open_operand */
extern T1 T751f26(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_open_operand */
extern T1 T750f22(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T749f23(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T748f21(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_open_operand */
extern T1 T745f26(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_open_operand */
extern T1 T744f21(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_open_operand */
extern T1 T743f21(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_open_operand */
extern T1 T742f21(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_open_operand */
extern T1 T741f21(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_open_operand */
extern T1 T740f26(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_open_operand */
extern T1 T686f33(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_open_operand */
extern T1 T685f33(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_open_operand */
extern T1 T684f30(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_open_operand */
extern T1 T683f30(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_open_operand */
extern T1 T681f31(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_open_operand */
extern T1 T680f31(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_open_operand */
extern T1 T679f49(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T678f49(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T677f49(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_open_operand */
extern T1 T676f49(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_open_operand */
extern T1 T675f49(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_open_operand */
extern T1 T674f38(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_open_operand */
extern T1 T673f34(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_open_operand */
extern T1 T672f33(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_open_operand */
extern T1 T671f34(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_open_operand */
extern T1 T630f28(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_open_operand */
extern T1 T627f27(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_open_operand */
extern T1 T613f35(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_open_operand */
extern T1 T568f27(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_open_operand */
extern T1 T559f27(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_open_operand */
extern T1 T530f23(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_open_operand */
extern T1 T509f26(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_open_operand */
extern T1 T436f32(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T379f25(TC* ac, T0* C);
/* ET_CALL_AGENT.is_open_operand */
extern T1 T376f28(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_open_operand */
extern T1 T373f24(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_open_operand */
extern T1 T339f35(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_open_operand */
extern T1 T336s38(TC* ac);
/* ET_VOID.is_open_operand */
extern T1 T327f28(TC* ac, T0* C);
/* ET_IDENTIFIER.is_open_operand */
extern T1 T303f75(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T1033f21(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.is_open_operand */
extern T1 T765s5(TC* ac);
/* ET_PARENTHESIZED_EXPRESSION.is_open_operand */
extern T1 T589f20(TC* ac, T0* C);
/* ET_CURRENT.is_open_operand */
extern T1 T297f28(TC* ac, T0* C);
/* ET_RESULT.is_open_operand */
extern T1 T318f25(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_open_operand */
extern T1 T1580f4(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_arguments */
extern T0* T764f6(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_arguments */
extern T0* T763f7(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_arguments */
extern T0* T762f7(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_arguments */
extern T0* T761f6(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_arguments */
extern T0* T760f9(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_arguments */
extern T0* T759f9(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_agent_arguments_validity */
extern void T100f546(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T100f546ot1(TC* ac, T0* a1);
extern T1 T100f546ot2(TC* ac, T0* a1);
extern T1 T100f546ot3(TC* ac, T0* a1);
extern T1 T100f546ot4(TC* ac, T0* a1);
extern T1 T100f546ot5(TC* ac, T0* a1);
extern T1 T100f546ot6(TC* ac, T0* a1);
extern T1 T100f546ot7(TC* ac, T0* a1);
extern T1 T100f546ot8(TC* ac, T0* a1);
extern T1 T100f546ot9(TC* ac, T0* a1);
extern T1 T100f546ot10(TC* ac, T0* a1);
extern T1 T100f546ot11(TC* ac, T0* a1);
extern T1 T100f546ot12(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca5b_error */
extern void T63f507(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca5b */
extern T0* T1445c1195(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T63f138(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca5b_error */
extern void T42f507(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T42f138(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca5a_error */
extern void T63f506(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca5a */
extern T0* T1445c1194(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca5a_error */
extern void T42f506(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca4b_error */
extern void T63f505(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca4b */
extern T0* T1445c1193(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T63f137(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca4b_error */
extern void T42f505(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T42f137(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca4a_error */
extern void T63f504(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca4a */
extern T0* T1445c1192(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca4a_error */
extern void T42f504(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put */
extern void T358f16(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vpca3b_error */
extern void T63f503(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca3b */
extern T0* T1445c1191(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T63f136(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca3b_error */
extern void T42f503(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T42f136(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3a_error */
extern void T63f502(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpca3a */
extern T0* T1445c1190(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpca3a_error */
extern void T42f502(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.force_first */
extern void T185f34(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resize */
extern void T185f35(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1085s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1083f4(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.new_capacity */
extern T6 T185f21(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.capacity */
extern T6 T185f20(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_implicit_agent_open_arguments */
extern void T100f545(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CALL_AGENT.set_arguments */
extern void T376f40(TC* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.put_last */
extern void T1867f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].force */
extern void T2088s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].fill_with */
extern void T2087f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].extend */
extern void T2087f7(TC* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.fixed_array */
extern T0* T1867f8(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].default_create */
extern T0* T2088c2(TC* ac);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.make */
extern T0* T1868c6(TC* ac, T0* a1, T6 a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.make_with_capacity */
extern T0* T1867c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T2088s1(TC* ac, T6 a1);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make_empty */
extern T0* T2087c4(TC* ac, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vpca2a_error */
extern void T63f508(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vpca2a */
extern T0* T1445c1196(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T63f139(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca2a_error */
extern void T42f508(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T42f139(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_procedure_call_agent_validity */
extern void T100f538(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_procedure_call_agent */
extern void T100f554(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_LIBRARY.procedure_identity_type */
extern T0* T802f70(TC* ac, T0* C);
/* ET_ECF_SYSTEM.procedure_identity_type */
extern T0* T87f73(TC* ac, T0* C);
/* ET_SYSTEM.procedure_identity_type */
extern T0* T50f72(TC* ac, T0* C);
/* ET_CALL_AGENT.set_procedure */
extern void T376f39(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_agent_validity */
extern void T100f493(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_agent_validity */
extern void T100f537(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_agent_validity */
extern void T100f536(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_agent_validity */
extern void T100f535(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_agent_validity */
extern void T100f492(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpca1a_error */
extern void T63f464(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpca1a */
extern T0* T1445c1152(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpca1a_error */
extern void T42f464(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_agent_validity */
extern void T100f534(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_query_call_agent */
extern void T100f553(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_agent */
extern void T100f558(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T100f558ot1(TC* ac, T0* a1);
extern T1 T100f558ot2(TC* ac, T0* a1);
extern T1 T100f558ot3(TC* ac, T0* a1);
extern T1 T100f558ot4(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_call_agent_result_dynamic_types */
extern void T100f563(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_agent_validity */
extern void T100f533(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_procedure_call_agent */
extern void T100f552(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vucr0j_error */
extern void T63f463(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0j */
extern T0* T1445c1151(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0j_error */
extern void T42f463(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.is_qualified_call */
extern T1 T376f14(TC* ac, T0* C);
extern T1 T376f14ot1(TC* ac, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_call_agent */
extern void T881f56(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_call_agent */
extern void T875f61(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_agent */
extern void T857f155(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_agent_validity */
extern void T857f221(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T857f221ot1(TC* ac, T0* a1);
extern T1 T857f221ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_call_agent_validity */
extern void T857f302(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_tuple_label_call_agent_validity */
extern void T857f383(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_tuple_label_call_agent */
extern void T857f421(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_query_call_agent_validity */
extern void T857f382(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_qualified_query_call_agent */
extern void T857f420(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_agent_arguments_validity */
extern void T857f371(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T857f371ot1(TC* ac, T0* a1);
extern T1 T857f371ot2(TC* ac, T0* a1);
extern T1 T857f371ot3(TC* ac, T0* a1);
extern T1 T857f371ot4(TC* ac, T0* a1);
extern T1 T857f371ot5(TC* ac, T0* a1);
extern T1 T857f371ot6(TC* ac, T0* a1);
extern T1 T857f371ot7(TC* ac, T0* a1);
extern T1 T857f371ot8(TC* ac, T0* a1);
extern T1 T857f371ot9(TC* ac, T0* a1);
extern T1 T857f371ot10(TC* ac, T0* a1);
extern T1 T857f371ot11(TC* ac, T0* a1);
extern T1 T857f371ot12(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.set_implicit_agent_open_arguments */
extern void T857f370(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_typed_procedure_call_agent_validity */
extern void T857f381(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_qualified_procedure_call_agent */
extern void T857f419(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_call_agent_validity */
extern void T857f301(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_agent_validity */
extern void T857f380(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_query_call_agent_validity */
extern void T857f379(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_agent_validity */
extern void T857f378(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_call_agent_validity */
extern void T857f300(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_agent_validity */
extern void T857f377(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_query_call_agent */
extern void T857f418(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_agent_validity */
extern void T857f376(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_procedure_call_agent */
extern void T857f417(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_call_agent */
extern void T114f1269(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_agent */
extern void T114f1317(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent */
extern void T114f1365(TC* ac, T0* C, T0* a1);
extern T1 T114f1365ot1(TC* ac, T0* a1);
extern T1 T114f1365ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_agent_creation_name */
extern void T114f852(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_AGENT].force_last */
extern void T934f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].force */
extern void T1394s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_AGENT].fill_with */
extern void T1393f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT].extend */
extern void T1393f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].resize */
extern void T934f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].aliased_resized_area */
extern T0* T1394s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT].aliased_resized_area */
extern T0* T1393f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].new_capacity */
extern T6 T934f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].extendible */
extern T1 T934f8(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_qualified_call */
extern T1 T764s20(TC* ac);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_qualified_call */
extern T1 T763s23(TC* ac);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_qualified_call */
extern T1 T762s21(TC* ac);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_qualified_call */
extern T1 T761s22(TC* ac);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_qualified_call */
extern T1 T760s25(TC* ac);
/* ET_DO_FUNCTION_INLINE_AGENT.is_qualified_call */
extern T1 T759s23(TC* ac);
/* ET_C_GENERATOR.print_call_agent_body_declaration */
extern void T114f1316(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_target */
extern void T736f18(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_name */
extern void T736f16(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT.set_expression */
extern void T518f12(TC* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT.set_no_target_twin */
extern void T727f13(TC* ac, T0* C, T1 a1);
/* ET_BRACKET_EXPRESSION.process */
extern void T373f29(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bracket_expression */
extern void T1131f69(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.process */
extern void T1866f22(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unfolded_tuple_actual_argument_list */
extern void T1131f114(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.process */
extern void T345f27(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bracket_expression */
extern void T100f321(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bracket_expression_validity */
extern void T100f415(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_bracket_expression */
extern void T881f55(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_bracket_expression */
extern void T875f60(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bracket_expression */
extern void T857f154(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bracket_expression_validity */
extern void T857f220(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_bracket_expression */
extern void T114f1268(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_bracket_expression */
extern void T114f1315(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.process */
extern void T379f31(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_qualified_call_expression */
extern void T1131f56(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_expression */
extern void T100f308(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_qualified_call_expression */
extern void T881f54(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_qualified_call_expression */
extern void T875f59(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_qualified_call_expression */
extern void T857f153(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_qualified_call_expression */
extern void T114f1241(TC* ac, T0* C, T0* a1);
/* ET_INSPECT_EXPRESSION.process */
extern void T530f29(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inspect_expression */
extern void T1131f55(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_expression_list */
extern void T1131f105(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_expression */
extern void T1131f112(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_expression */
extern void T100f307(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_expression_validity */
extern void T100f402(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f402ot1(TC* ac, T0* a1);
extern T1 T100f402ot2(TC* ac, T0* a1);
extern T1 T100f402ot3(TC* ac, T0* a1);
extern T1 T100f402ot4(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_common_ancestor_types */
extern void T100f478(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].keep_first */
extern void T872f19(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_all_cursors_after */
extern void T872f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].item */
extern T0* T872f11(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inspect_expression */
extern void T100f479(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inspect_expression_dynamic_types */
extern void T100f529(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.update_common_ancestor_type_list */
extern void T100f476(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_TOKEN_CONSTANTS.detachable_separate_type_modifier */
extern T0* T81s923(TC* ac);
/* ET_TOKEN_CONSTANTS.detachable_type_modifier */
extern T0* T81s922(TC* ac);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove */
extern void T872f18(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_left */
extern void T872f21(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_cursors_left */
extern void T872f20(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_position */
extern void T1310f8(TC* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_inspect_expression */
extern void T881f53(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_inspect_expression */
extern void T875f58(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_inspect_expression */
extern void T857f152(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inspect_expression_validity */
extern void T857f219(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T857f219ot1(TC* ac, T0* a1);
extern T1 T857f219ot2(TC* ac, T0* a1);
extern T1 T857f219ot3(TC* ac, T0* a1);
extern T1 T857f219ot4(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.free_common_ancestor_types */
extern void T857f298(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_FEATURE_CHECKER.report_inspect_expression */
extern void T857f299(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.update_common_ancestor_type_list */
extern void T857f296(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_C_GENERATOR.process_inspect_expression */
extern void T114f1272(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inspect_expression */
extern void T114f1320(TC* ac, T0* C, T0* a1);
extern T1 T114f1320ot1(TC* ac, T0* a1);
extern T1 T114f1320ot2(TC* ac, T0* a1);
extern T1 T114f1320ot3(TC* ac, T0* a1);
extern T1 T114f1320ot4(TC* ac, T0* a1);
extern T1 T114f1320ot5(TC* ac, T0* a1);
extern T1 T114f1320ot6(TC* ac, T0* a1);
/* ET_IF_EXPRESSION.process */
extern void T509f32(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_if_expression */
extern void T1131f54(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_expression_list */
extern void T1131f104(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION.process */
extern void T449f12(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_expression */
extern void T1131f119(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_expression */
extern void T100f306(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_expression_validity */
extern void T100f401(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_if_expression */
extern void T100f477(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_if_expression_dynamic_types */
extern void T100f528(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_if_expression */
extern void T881f52(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_if_expression */
extern void T875f57(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_if_expression */
extern void T857f151(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_expression_validity */
extern void T857f218(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_if_expression */
extern void T857f297(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_if_expression */
extern void T114f1271(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_expression */
extern void T114f1319(TC* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.process */
extern void T436f40(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_expression */
extern void T1131f53(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_expression */
extern void T100f305(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_expression_validity */
extern void T100f400(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vkex4ga_error */
extern void T63f415(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkex4ga */
extern T0* T1445c1103(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vkex4g_error */
extern T1 T63f100(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkex4ga_error */
extern void T42f415(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vkex4g_error */
extern T1 T42f100(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_create_expression */
extern void T881f51(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_create_expression */
extern void T875f56(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_expression */
extern void T857f150(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_expression_validity */
extern void T857f217(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_create_expression */
extern void T114f1270(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_expression */
extern void T114f1318(TC* ac, T0* C, T0* a1);
/* ET_CURRENT.process */
extern void T297f37(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_current */
extern void T1131f50(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current */
extern void T100f302(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_validity */
extern void T100f397(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current */
extern void T100f474(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0f_error */
extern void T63f414(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0f */
extern T0* T1445c1102(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0f_error */
extern void T42f414(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_current */
extern void T881f50(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_current */
extern void T875f55(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current */
extern void T857f149(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_validity */
extern void T857f216(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_current */
extern void T857f294(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_current */
extern void T114f1265(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_current */
extern void T114f1312(TC* ac, T0* C, T0* a1);
extern T1 T114f1312ot1(TC* ac, T0* a1);
/* ET_RESULT.process */
extern void T318f39(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_result */
extern void T1131f49(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result */
extern void T100f301(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_validity */
extern void T100f396(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vevi0b_error */
extern void T63f413(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0b */
extern T0* T1445c1101(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0b_error */
extern void T42f413(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE.has_result */
extern T1 T880f6(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_veen2d_error */
extern void T63f393(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen2d */
extern T0* T1445c1081(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_veen2d_error */
extern void T42f393(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen2b_error */
extern void T63f392(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2b */
extern T0* T1445c1080(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2b_error */
extern void T42f392(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_result */
extern void T881f49(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_result */
extern void T875f54(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result */
extern void T857f148(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_validity */
extern void T857f215(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result */
extern void T857f293(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.process_result */
extern void T114f1266(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_result */
extern void T114f1313(TC* ac, T0* C, T0* a1);
/* ET_VOID.process */
extern void T327f34(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_void */
extern void T1131f47(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_void */
extern void T100f299(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_void_validity */
extern void T100f394(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_void_constant */
extern void T100f473(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_void */
extern void T881f48(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_void */
extern void T875f53(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_void */
extern void T857f147(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_void_validity */
extern void T857f214(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_void_constant */
extern void T857f292(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_void */
extern void T114f1240(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_void */
extern void T114f1250(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.process */
extern void T764f51(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure_inline_agent */
extern void T1131f80(TC* ac, T0* C, T0* a1);
extern T1 T1131f80ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure_inline_agent */
extern void T100f332(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_inline_agent_validity */
extern void T100f426(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpir3b_error */
extern void T63f411(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpir3b */
extern T0* T1445c1099(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T63f99(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir3b_error */
extern void T42f411(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T42f99(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_procedure_inline_agent_validity */
extern void T100f502(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_inline_agent */
extern void T100f548(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent */
extern void T100f557(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T100f557ot1(TC* ac, T0* a1);
extern T1 T100f557ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inline_agent_result_dynamic_types */
extern void T100f561(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T764f32(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T763f24(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T762f22(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.implicit_result */
extern T0* T761f14(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.implicit_result */
extern T0* T760f5(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.implicit_result */
extern T0* T759f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].last */
extern T0* T867f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].is_empty */
extern T1 T867f8(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_iteration_components_validity */
extern void T100f499(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_object_tests_validity */
extern void T100f498(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuot3b_error */
extern void T63f453(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot3b */
extern T0* T1445c1141(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T63f111(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot3b_error */
extern void T42f453(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T42f111(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_4_7_7252 */
extern T0* T100s72(TC* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_formal_arguments_validity */
extern void T100f495(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_argument_supplier */
extern void T100f542(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_formal_argument_declaration */
extern void T100f541(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.set_attached_index */
extern void T1446f13(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT.set_attached_index */
extern void T491f12(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_signature_type_validity */
extern void T100f174(TC* ac, T0* C, T0* a1);
extern T1 T100f174ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1i_error */
extern void T63f452(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1i */
extern T0* T1445c1140(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T63f118(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1i_error */
extern void T42f452(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T42f118(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.hidden_inline_separate_argument */
extern T0* T879f5(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1g_error */
extern void T63f451(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1g */
extern T0* T1445c1139(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1g_error */
extern void T42f451(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1e_error */
extern void T63f450(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1e */
extern T0* T1445c1138(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1e_error */
extern void T42f450(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1b_error */
extern void T63f449(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1b */
extern T0* T1445c1137(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1b_error */
extern void T42f449(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1a_error */
extern void T63f448(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1a */
extern T0* T1445c1136(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1a_error */
extern void T42f448(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vrfa0b_error */
extern void T63f447(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrfa0b */
extern T0* T1445c1135(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T63f48(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrfa0b_error */
extern void T42f447(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T42f48(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vred0c_error */
extern void T63f446(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0c */
extern T0* T1445c1134(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vred_error */
extern T1 T63f117(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vred0c_error */
extern void T42f446(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vred_error */
extern T1 T42f117(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0i_error */
extern void T63f408(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0i */
extern T0* T1445c1096(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0i_error */
extern void T42f408(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.hide_inline_separate_arguments */
extern void T879f8(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.count */
extern T6 T879f4(TC* ac, T0* C);
/* ET_ITERATION_ITEM_SCOPE.hide_iteration_components */
extern void T877f8(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_ITEM_SCOPE.count */
extern T6 T877f4(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.hide_object_tests */
extern void T874f9(TC* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T881f47(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T875f52(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure_inline_agent */
extern void T857f146(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_inline_agent_validity */
extern void T857f213(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_procedure_inline_agent_validity */
extern void T857f291(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_inline_agent */
extern void T857f373(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_inline_agent_iteration_components_validity */
extern void T857f288(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_inline_agent_object_tests_validity */
extern void T857f287(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.ise_6_4_7_7252 */
extern T0* T857s65(TC* ac);
/* ET_FEATURE_CHECKER.check_inline_agent_formal_arguments_validity */
extern void T857f283(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_argument_supplier */
extern void T857f367(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_argument_supplier */
extern void T1141f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_formal_argument_declaration */
extern void T857f366(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_signature_type_validity */
extern void T857f284(TC* ac, T0* C, T0* a1);
extern T1 T857f284ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_external_procedure_inline_agent */
extern void T114f1310(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent */
extern void T114f1360(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent_body_declaration */
extern void T114f1359(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.process */
extern void T763f60(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure_inline_agent */
extern void T1131f79(TC* ac, T0* C, T0* a1);
extern T1 T1131f79ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure_inline_agent */
extern void T100f331(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_inline_agent_validity */
extern void T100f425(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpir3a_error */
extern void T63f410(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpir3a */
extern T0* T1445c1098(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpir3a_error */
extern void T42f410(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_rescue_validity */
extern void T100f164(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_keys_validity */
extern void T100f169(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vvok2a_error */
extern void T63f443(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vvok2a */
extern T0* T1445c1131(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T63f115(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vvok2a_error */
extern void T42f443(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T42f115(TC* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_process_key */
extern T1 T1838s6(TC* ac, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_thread_key */
extern T1 T1838s5(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vvok1b_error */
extern void T63f442(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1b */
extern T0* T1445c1130(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER.note_term_value */
extern T0* T303f117(TC* ac, T0* C);
/* ET_CUSTOM_ATTRIBUTE.note_term_value */
extern T0* T690s8(TC* ac);
/* ET_C2_CHARACTER_CONSTANT.note_term_value */
extern T0* T686f47(TC* ac, T0* C);
/* CHARACTER_32.out */
extern T0* T3f17(TC* ac, volatile T3* C);
/* NATURAL_32.to_hex_string */
extern T0* T10f31(TC* ac, volatile T10* C);
/* NATURAL_32.to_hex_character */
extern T2 T10f34(TC* ac, volatile T10* C);
/* ET_C1_CHARACTER_CONSTANT.note_term_value */
extern T0* T685f46(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.note_term_value */
extern T0* T684f39(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.note_term_value */
extern T0* T683f39(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.note_term_value */
extern T0* T681f41(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.note_term_value */
extern T0* T680f41(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.note_term_value */
extern T0* T679f63(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.note_term_value */
extern T0* T678f63(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.note_term_value */
extern T0* T677f63(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.note_term_value */
extern T0* T676f63(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.note_term_value */
extern T0* T675f63(TC* ac, T0* C);
/* ET_VERBATIM_STRING.note_term_value */
extern T0* T674f50(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.note_term_value */
extern T0* T673f46(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.note_term_value */
extern T0* T672f45(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.note_term_value */
extern T0* T671f47(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T63f114(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vvok1b_error */
extern void T42f442(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T42f114(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vvok1a_error */
extern void T63f441(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1a */
extern T0* T1445c1129(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vvok1a_error */
extern void T42f441(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STANDARD_ONCE_KEYS.is_object_key */
extern T1 T1838s4(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.standard_once_keys */
extern T0* T100s75(TC* ac);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].wipe_out */
extern void T884f12(TC* ac, T0* C);
/* SPECIAL [ET_NOTE_TERM].keep_head */
extern void T1333f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NOTE_TERM].set_count */
extern void T1333f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].move_all_cursors_after */
extern void T884f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM].set_next_cursor */
extern void T1334f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM].set_after */
extern void T1334f6(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vvok2b_error */
extern void T63f440(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vvok2b */
extern T0* T1445c1128(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vvok2b_error */
extern void T42f440(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vvok1c_error */
extern void T63f439(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1c */
extern T0* T1445c1127(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vvok1c_error */
extern void T42f439(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].item */
extern T0* T884f7(TC* ac, T0* C, T6 a1);
/* ET_NOTE_LIST.append_tagged_note_terms_to_list */
extern void T571f15(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NOTE_TERM_LIST.append_note_terms_to_list */
extern void T583f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].force_last */
extern void T884f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM].force */
extern void T1332s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NOTE_TERM].fill_with */
extern void T1333f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NOTE_TERM].extend */
extern void T1333f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].resize */
extern void T884f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM].aliased_resized_area */
extern T0* T1332s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_NOTE_TERM].aliased_resized_area */
extern T0* T1333f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].new_capacity */
extern T6 T884f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].extendible */
extern T1 T884f8(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.note_term */
extern T0* T303f115(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.note_term */
extern T0* T679f60(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.note_term */
extern T0* T678f60(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.note_term */
extern T0* T677f60(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.note_term */
extern T0* T676f60(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.note_term */
extern T0* T675f60(TC* ac, T0* C);
/* ET_VERBATIM_STRING.note_term */
extern T0* T674f46(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.note_term */
extern T0* T673f42(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.note_term */
extern T0* T671f45(TC* ac, T0* C);
/* ET_CUSTOM_ATTRIBUTE.note_term */
extern T0* T690f7(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.note_term */
extern T0* T686f45(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.note_term */
extern T0* T685f44(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.note_term */
extern T0* T684f36(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.note_term */
extern T0* T683f36(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.note_term */
extern T0* T681f38(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.note_term */
extern T0* T680f38(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.note_term */
extern T0* T672f41(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_note */
extern T0* T763f34(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_locals_validity */
extern void T100f500(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_supplier */
extern void T100f544(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_variable_declaration */
extern void T100f543(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.set_attached_index */
extern void T1447f13(TC* ac, T0* C, T6 a1);
/* ET_LOCAL_VARIABLE.set_attached_index */
extern void T547f12(TC* ac, T0* C, T6 a1);
/* ET_LOCAL_COMMA_VARIABLE.set_index */
extern void T1447f12(TC* ac, T0* C, T6 a1);
/* ET_LOCAL_VARIABLE.set_index */
extern void T547f11(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_type_validity */
extern void T100f176(TC* ac, T0* C, T0* a1);
extern T1 T100f176ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1j_error */
extern void T63f461(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1j */
extern T0* T1445c1149(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1j_error */
extern void T42f461(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1h_error */
extern void T63f460(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1h */
extern T0* T1445c1148(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1h_error */
extern void T42f460(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1f_error */
extern void T63f459(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1f */
extern T0* T1445c1147(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1f_error */
extern void T42f459(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1d_error */
extern void T63f458(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1d */
extern T0* T1445c1146(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1d_error */
extern void T42f458(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1c_error */
extern void T63f457(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1c */
extern T0* T1445c1145(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1c_error */
extern void T42f457(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vrlv1b_error */
extern void T63f456(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv1b */
extern T0* T1445c1144(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T63f120(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv1b_error */
extern void T42f456(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T42f120(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv2b_error */
extern void T63f455(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv2b */
extern T0* T1445c1143(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T63f119(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv2b_error */
extern void T42f455(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T42f119(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vred0d_error */
extern void T63f454(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0d */
extern T0* T1445c1142(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0d_error */
extern void T42f454(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T881f46(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T875f51(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure_inline_agent */
extern void T857f145(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_inline_agent_validity */
extern void T857f212(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_rescue_validity */
extern void T857f259(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_keys_validity */
extern void T857f261(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.standard_once_keys */
extern T0* T857s67(TC* ac);
/* ET_FEATURE_CHECKER.check_inline_agent_locals_validity */
extern void T857f289(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_local_supplier */
extern void T857f369(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_local_supplier */
extern void T1141f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_local_variable_declaration */
extern void T857f368(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_local_type_validity */
extern void T857f345(TC* ac, T0* C, T0* a1);
extern T1 T857f345ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_once_procedure_inline_agent */
extern void T114f1309(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent */
extern void T114f1358(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_once_per_object */
extern T1 T763f22(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.standard_once_keys */
extern T0* T763s33(TC* ac);
/* ET_C_GENERATOR.print_once_procedure_inline_agent_body_declaration */
extern void T114f1357(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine_inline_agent_body_declaration */
extern void T114f1372(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_feature_body_declaration */
extern void T114f1376(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_inline_separate_argument_declarations */
extern void T114f1387(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_cursor_declarations */
extern void T114f1386(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test_local_declarations */
extern void T114f1385(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_default_entity_value */
extern void T114f833(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.compound */
extern T0* T712f6(TC* ac, T0* C);
/* ET_DO_PROCEDURE.compound */
extern T0* T711f12(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.compound */
extern T0* T707f8(TC* ac, T0* C);
/* ET_DO_FUNCTION.compound */
extern T0* T706f8(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.compound */
extern T0* T703f7(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.compound */
extern T0* T763f12(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.compound */
extern T0* T762f11(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.compound */
extern T0* T760f14(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.compound */
extern T0* T759f13(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_mutex_unlock */
extern void T114f1384(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex */
extern void T114f1392(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_process_mutex */
extern void T114f1400(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_object_mutex */
extern void T114f1399(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_mutex_name */
extern void T114f809(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_assign_completed_to_once_status */
extern void T114f1383(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_status */
extern void T114f1391(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_thread_status */
extern void T114f1398(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_process_status */
extern void T114f1397(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_object_status */
extern void T114f1396(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_status_name */
extern void T114f806(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_assign_called_to_thread_safe_once_status */
extern void T114f1382(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_thread_safe_once_per_process_status */
extern void T114f1390(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_assign_once_exception_to_thread_safe_once_exception */
extern void T114f1381(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_exception */
extern void T114f1388(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_thread_exception */
extern void T114f1395(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_process_exception */
extern void T114f1394(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_object_exception */
extern void T114f1393(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_exception_name */
extern void T114f808(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_thread_safe_once_per_process_exception */
extern void T114f1389(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_once_per_process */
extern T1 T763f27(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_once_per_process */
extern T1 T762f25(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_once_per_process */
extern T1 T760f28(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_note */
extern T0* T760f35(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.standard_once_keys */
extern T0* T760s34(TC* ac);
/* ET_DO_FUNCTION_INLINE_AGENT.is_once_per_process */
extern T1 T759f26(TC* ac, T0* C);
/* ET_C_GENERATOR.print_assign_last_exception_to_once_exception */
extern void T114f1380(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.reset_rescue_data */
extern void T114f1379(TC* ac, T0* C);
/* ET_C_GENERATOR.reset_volatile_data */
extern void T114f1378(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.rescue_clause */
extern T0* T712f8(TC* ac, T0* C);
/* ET_DO_PROCEDURE.rescue_clause */
extern T0* T711f9(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.rescue_clause */
extern T0* T707f10(TC* ac, T0* C);
/* ET_DO_FUNCTION.rescue_clause */
extern T0* T706f10(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.rescue_clause */
extern T0* T703f9(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.rescue_clause */
extern T0* T763f14(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.rescue_clause */
extern T0* T762f13(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.rescue_clause */
extern T0* T760f16(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.rescue_clause */
extern T0* T759f15(TC* ac, T0* C);
/* ET_C_GENERATOR.print_agent_trace_message_call */
extern void T114f1375(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_unindented_feature_info_message_call */
extern void T114f1377(TC* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.put_line */
extern void T912f6(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_inline_agent */
extern T1 T763s25(TC* ac);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_inline_agent */
extern T1 T762s23(TC* ac);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_inline_agent */
extern T1 T760s26(TC* ac);
/* ET_DO_FUNCTION_INLINE_AGENT.is_inline_agent */
extern T1 T759s24(TC* ac);
/* ET_DO_PROCEDURE_INLINE_AGENT.process */
extern void T762f55(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_procedure_inline_agent */
extern void T1131f78(TC* ac, T0* C, T0* a1);
extern T1 T1131f78ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure_inline_agent */
extern void T100f330(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_inline_agent_validity */
extern void T100f424(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T881f45(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T875f50(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure_inline_agent */
extern void T857f144(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_inline_agent_validity */
extern void T857f211(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_do_procedure_inline_agent */
extern void T114f1308(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent */
extern void T114f1356(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent_body_declaration */
extern void T114f1355(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.process */
extern void T761f52(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function_inline_agent */
extern void T1131f77(TC* ac, T0* C, T0* a1);
extern T1 T1131f77ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function_inline_agent */
extern void T100f329(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_inline_agent_validity */
extern void T100f423(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_inline_agent_validity */
extern void T100f501(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_query_inline_agent */
extern void T100f547(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_supplier */
extern void T100f497(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_declaration */
extern void T100f496(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_attached_result_index */
extern void T764f57(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_attached_result_index */
extern void T763f65(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_attached_result_index */
extern void T762f60(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_attached_result_index */
extern void T761f58(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_attached_result_index */
extern void T760f66(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_attached_result_index */
extern void T759f61(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_result_index */
extern void T764f56(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_result_index */
extern void T763f64(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_result_index */
extern void T762f59(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_result_index */
extern void T761f57(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_result_index */
extern void T760f65(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_result_index */
extern void T759f60(TC* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T881f44(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T875f49(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function_inline_agent */
extern void T857f143(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_inline_agent_validity */
extern void T857f210(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_query_inline_agent_validity */
extern void T857f290(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_query_inline_agent */
extern void T857f372(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_supplier */
extern void T857f286(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_result_supplier */
extern void T1141f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_declaration */
extern void T857f285(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_function_inline_agent */
extern void T114f1307(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent */
extern void T114f1354(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent_body_declaration */
extern void T114f1353(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.process */
extern void T760f61(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_function_inline_agent */
extern void T1131f76(TC* ac, T0* C, T0* a1);
extern T1 T1131f76ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function_inline_agent */
extern void T100f328(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_inline_agent_validity */
extern void T100f422(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vevi0d_error */
extern void T63f409(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0d */
extern T0* T1445c1097(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_SYMBOL.is_null_position */
extern T1 T1859f18(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vevi0d_error */
extern void T42f409(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T881f43(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T875f48(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function_inline_agent */
extern void T857f142(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_inline_agent_validity */
extern void T857f209(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_function_inline_agent */
extern void T114f1306(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent */
extern void T114f1352(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_once_per_object */
extern T1 T760f24(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_function_inline_agent_body_declaration */
extern void T114f1351(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.process */
extern void T759f56(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function_inline_agent */
extern void T1131f75(TC* ac, T0* C, T0* a1);
extern T1 T1131f75ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function_inline_agent */
extern void T100f327(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_inline_agent_validity */
extern void T100f421(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T881f42(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T875f47(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function_inline_agent */
extern void T857f141(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_inline_agent_validity */
extern void T857f208(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_do_function_inline_agent */
extern void T114f1305(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent */
extern void T114f1350(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent_body_declaration */
extern void T114f1349(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_CURSOR.process */
extern void T757f26(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_iteration_cursor */
extern void T1131f88(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_iteration_cursor */
extern void T100f340(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_cursor_validity */
extern void T100f433(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_iteration_cursor */
extern void T100f518(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_voit3a_error */
extern void T63f407(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_voit3a */
extern T0* T1445c1095(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_voit3_error */
extern T1 T63f98(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit3a_error */
extern void T42f407(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_voit3_error */
extern T1 T42f98(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_iteration_cursor */
extern void T881f41(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_iteration_cursor */
extern void T875f46(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_iteration_cursor */
extern void T857f140(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_iteration_cursor_validity */
extern void T857f207(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_iteration_cursor */
extern void T857f282(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_iteration_cursor */
extern void T114f1304(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_cursor */
extern void T114f1348(TC* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.process */
extern void T756f30(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_manifest_string */
extern void T1131f85(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_manifest_string */
extern void T100f337(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_manifest_string_validity */
extern void T100f430(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_manifest_string */
extern void T881f40(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_manifest_string */
extern void T875f45(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_manifest_string */
extern void T857f139(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_manifest_string_validity */
extern void T857f206(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_manifest_string */
extern void T114f1303(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_manifest_string */
extern void T114f1347(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inline_constant_name */
extern void T114f778(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].force_last */
extern void T942f60(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].key_storage_put */
extern void T942f66(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].force */
extern void T1407s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].fill_with */
extern void T1405f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].extend */
extern void T1405f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].slots_put */
extern void T942f65(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].clashes_put */
extern void T942f64(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].slots_item */
extern T6 T942f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].hash_position */
extern T6 T942f33(TC* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.hash_code */
extern T6 T756f26(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].resize */
extern void T942f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].clashes_resize */
extern void T942f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].special_integer_ */
extern T0* T942s37(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].key_storage_resize */
extern void T942f69(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T1407s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T1405f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].item_storage_resize */
extern void T942f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].key_storage_item */
extern T0* T942f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].clashes_item */
extern T6 T942f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].slots_resize */
extern void T942f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].new_modulus */
extern T6 T942f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].new_capacity */
extern T6 T942f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].item_storage_put */
extern void T942f62(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].search_position */
extern void T942f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].unset_found_item */
extern void T942f45(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.process */
extern void T755f31(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_named_object_test */
extern void T1131f84(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_named_object_test */
extern void T100f336(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_named_object_test_validity */
extern void T100f429(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_named_object_test */
extern void T100f516(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_named_object_test_dynamic_types */
extern void T100f549(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuot4b_error */
extern void T63f406(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuot4b */
extern T0* T1445c1094(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T63f97(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot4b_error */
extern void T42f406(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T42f97(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuot4a_error */
extern void T63f405(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuot4a */
extern T0* T1445c1093(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuot4a_error */
extern void T42f405(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_3_7_5660 */
extern T0* T100s97(TC* ac);
/* ET_NULL_ERROR_HANDLER.report_vuot1f_error */
extern void T63f404(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1f */
extern T0* T1445c1092(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T63f96(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot1f_error */
extern void T42f404(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T42f96(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuot1e_error */
extern void T63f403(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1e */
extern T0* T1445c1091(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1e_error */
extern void T42f403(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1d_error */
extern void T63f402(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1d */
extern T0* T1445c1090(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1d_error */
extern void T42f402(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1c_error */
extern void T63f401(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1c */
extern T0* T1445c1089(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1c_error */
extern void T42f401(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1b_error */
extern void T63f400(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1b */
extern T0* T1445c1088(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1b_error */
extern void T42f400(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1a_error */
extern void T63f399(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1a */
extern T0* T1445c1087(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1a_error */
extern void T42f399(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].force_last */
extern void T873f61(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_put */
extern void T873f67(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_put */
extern void T873f66(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_put */
extern void T873f65(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].resize */
extern void T873f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_resize */
extern void T873f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].special_integer_ */
extern T0* T873s37(TC* ac);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_resize */
extern void T873f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_resize */
extern void T873f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_resize */
extern void T873f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_modulus */
extern T6 T873f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T873f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_put */
extern void T873f63(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_named_object_test */
extern void T881f39(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_object_test */
extern void T881f38(TC* ac, T0* C, T0* a1);
extern T1 T881f38ot1(TC* ac, T0* a1);
extern T1 T881f38ot2(TC* ac, T0* a1);
extern T1 T881f38ot3(TC* ac, T0* a1);
/* ET_IDENTIFIER.unparenthesized_expression */
extern T0* T303f74(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T679f40(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T678f40(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T677f40(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T676f40(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T675f42(TC* ac, T0* C);
/* ET_VERBATIM_STRING.unparenthesized_expression */
extern T0* T674f34(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.unparenthesized_expression */
extern T0* T673f31(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T671f30(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.unparenthesized_expression */
extern T0* T757f18(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.unparenthesized_expression */
extern T0* T613f32(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.unparenthesized_expression */
extern T0* T339f33(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.unparenthesized_expression */
extern T0* T756f19(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.unparenthesized_expression */
extern T0* T755f22(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.unparenthesized_expression */
extern T0* T753f25(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.unparenthesized_expression */
extern T0* T741f18(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T1033f20(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T764f30(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T763f38(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T762f34(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T761f32(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T760f39(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T759f35(TC* ac, T0* C);
/* ET_CALL_AGENT.unparenthesized_expression */
extern T0* T376f24(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.unparenthesized_expression */
extern T0* T630f25(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.unparenthesized_expression */
extern T0* T568f25(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.unparenthesized_expression */
extern T0* T559f25(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.unparenthesized_expression */
extern T0* T589f19(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.unparenthesized_expression */
extern T0* T373f22(TC* ac, T0* C);
/* ET_OBJECT_TEST.unparenthesized_expression */
extern T0* T754f21(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.unparenthesized_expression */
extern T0* T752f18(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.unparenthesized_expression */
extern T0* T751f23(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.unparenthesized_expression */
extern T0* T750f19(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T749f19(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T748f18(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.unparenthesized_expression */
extern T0* T745f23(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.unparenthesized_expression */
extern T0* T744f18(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.unparenthesized_expression */
extern T0* T743f18(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.unparenthesized_expression */
extern T0* T742f18(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.unparenthesized_expression */
extern T0* T740f23(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T627f23(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T379f23(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.unparenthesized_expression */
extern T0* T530f21(TC* ac, T0* C);
/* ET_IF_EXPRESSION.unparenthesized_expression */
extern T0* T509f24(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.unparenthesized_expression */
extern T0* T436f30(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T686f28(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T685f28(TC* ac, T0* C);
/* ET_CURRENT.unparenthesized_expression */
extern T0* T297f27(TC* ac, T0* C);
/* ET_RESULT.unparenthesized_expression */
extern T0* T318f24(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.unparenthesized_expression */
extern T0* T684f27(TC* ac, T0* C);
/* ET_VOID.unparenthesized_expression */
extern T0* T327f23(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.unparenthesized_expression */
extern T0* T683f27(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.unparenthesized_expression */
extern T0* T681f28(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.unparenthesized_expression */
extern T0* T680f28(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.unparenthesized_expression */
extern T0* T672f29(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.expression */
extern T0* T753f9(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.expression */
extern T0* T755f4(TC* ac, T0* C);
/* ET_OBJECT_TEST.expression */
extern T0* T754f4(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_named_object_test */
extern void T875f44(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE.add_object_test */
extern void T874f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].force_last */
extern void T1314f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].resize */
extern void T1314f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T1314f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].extendible */
extern T1 T1314f8(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vuot1g_error */
extern void T63f599(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1g */
extern T0* T1445c1279(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1g_error */
extern void T42f599(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST_SCOPE_BUILDER.error_handler */
extern T0* T875f7(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.set_fatal_error */
extern void T875f66(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_named_object_test */
extern void T857f138(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_named_object_test_validity */
extern void T857f204(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_named_object_test */
extern void T857f279(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.ise_6_3_7_5660 */
extern T0* T857s59(TC* ac);
/* ET_C_GENERATOR.process_named_object_test */
extern void T114f1302(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test */
extern void T114f1346(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test_function_name */
extern void T114f819(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].force_last */
extern void T932f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].force */
extern void T1388s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST].fill_with */
extern void T1387f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST].extend */
extern void T1387f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].resize */
extern void T932f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].aliased_resized_area */
extern T0* T1388s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_OBJECT_TEST].aliased_resized_area */
extern T0* T1387f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].new_capacity */
extern T6 T932f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].extendible */
extern T1 T932f8(TC* ac, T0* C, T6 a1);
/* ET_NAMED_OBJECT_TEST.name */
extern T0* T755f1(TC* ac, T0* C);
/* ET_OBJECT_TEST.name */
extern T0* T754f11(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.name */
extern T0* T753f1(TC* ac, T0* C);
/* ET_OBJECT_TEST.process */
extern void T754f29(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_object_test */
extern void T1131f68(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_test */
extern void T100f320(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_validity */
extern void T100f414(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test */
extern void T100f487(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_type */
extern void T100f486(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_object_test */
extern void T875f43(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_object_test */
extern void T857f137(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_test_validity */
extern void T857f205(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_object_test */
extern void T857f281(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_object_test_type */
extern void T857f280(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_object_test */
extern void T114f1301(TC* ac, T0* C, T0* a1);
/* ET_OLD_OBJECT_TEST.process */
extern void T753f34(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_object_test */
extern void T1131f83(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_object_test */
extern void T100f335(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_old_object_test */
extern void T881f37(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_old_object_test */
extern void T875f42(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_object_test */
extern void T857f136(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_old_object_test */
extern void T114f1300(TC* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.process */
extern void T752f26(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_expression */
extern void T1131f67(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_expression */
extern void T100f319(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_old_expression_validity */
extern void T100f413(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vaol1a_error */
extern void T63f398(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vaol1a */
extern T0* T1445c1086(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T63f95(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vaol1a_error */
extern void T42f398(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T42f95(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_old_expression */
extern void T881f36(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_old_expression */
extern void T875f41(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_expression */
extern void T857f135(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_old_expression_validity */
extern void T857f203(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_old_expression */
extern void T114f1299(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_old_expression */
extern void T114f1345(TC* ac, T0* C, T0* a1);
/* ET_PREFIX_EXPRESSION.process */
extern void T751f30(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_prefix_expression */
extern void T1131f66(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_prefix_expression */
extern void T100f318(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_prefix_expression_validity */
extern void T100f412(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_prefix_expression */
extern void T881f35(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_prefix_expression */
extern void T875f40(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_prefix_expression */
extern void T857f134(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_prefix_expression_validity */
extern void T857f202(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_prefix_expression */
extern void T114f1298(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_prefix_expression */
extern void T114f1344(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TYPE.process */
extern void T750f26(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_type */
extern void T1131f65(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_type */
extern void T100f317(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_type_validity */
extern void T100f411(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_type */
extern void T100f485(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.type_identity_type */
extern T0* T802f94(TC* ac, T0* C);
/* ET_ECF_SYSTEM.type_identity_type */
extern T0* T87f97(TC* ac, T0* C);
/* ET_SYSTEM.type_identity_type */
extern T0* T50f96(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_type */
extern void T881f34(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_type */
extern void T875f39(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_type */
extern void T857f133(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_type_validity */
extern void T857f201(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_type */
extern void T857f278(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_manifest_type */
extern void T114f1297(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_type */
extern void T114f1343(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.process */
extern void T749f27(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_object_equality_expression */
extern void T1131f64(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_equality_expression */
extern void T100f316(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_equality_expression_validity */
extern void T100f410(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_equality_expression */
extern void T100f484(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_object_equality_expression_target_dynamic_types */
extern void T100f531(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_object_equality_expression */
extern void T1049f99(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.set_next */
extern void T2024f7(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_object_equality_expression */
extern void T1048f99(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_object_equality_expression */
extern void T894f95(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_object_equality_expression */
extern void T966f97(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.put_object_equality_expression */
extern void T838f93(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T2024c6(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vweq0b_error */
extern void T63f397(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0b */
extern T0* T1445c1085(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vweq_error */
extern T1 T63f94(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vweq0b_error */
extern void T42f397(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vweq_error */
extern T1 T42f94(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_left */
extern void T749f31(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_right */
extern void T749f30(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.name */
extern T0* T749f17(TC* ac, T0* C);
/* ET_IDENTIFIER.twin */
extern T0* T303f82(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_equal_feature_name */
extern T0* T81s756(TC* ac);
/* ET_OBJECT_EQUALITY_EXPRESSION.tokens */
extern T0* T749s22(TC* ac);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_object_equality_expression */
extern void T881f33(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_object_equality_expression */
extern void T875f38(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_object_equality_expression */
extern void T857f132(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_equality_expression_validity */
extern void T857f200(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_object_equality_expression */
extern void T857f277(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_object_equality_expression */
extern void T114f1296(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_equality_expression */
extern void T114f1342(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.free_object_equality_types */
extern void T114f766(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_TYPES.set_right */
extern void T965f6(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_TYPES.set_left */
extern void T965f5(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].force_last */
extern void T918f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].force */
extern void T1363s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].fill_with */
extern void T1364f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].extend */
extern void T1364f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].resize */
extern void T918f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].aliased_resized_area */
extern T0* T1363s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].aliased_resized_area */
extern T0* T1364f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].new_capacity */
extern T6 T918f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].extendible */
extern T1 T918f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].last */
extern T0* T917f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].is_empty */
extern T1 T917f10(TC* ac, T0* C);
/* ET_C_GENERATOR.print_equality_call */
extern void T114f1371(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_C_GENERATOR.print_equality_function_name */
extern void T114f823(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].force_last */
extern void T917f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES].force */
extern void T1361s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].fill_with */
extern void T1360f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].extend */
extern void T1360f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].resize */
extern void T917f17(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES].aliased_resized_area */
extern T0* T1361s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].aliased_resized_area */
extern T0* T1360f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].new_capacity */
extern T6 T917f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].extendible */
extern T1 T917f7(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_equality_call_with_one_object_equality */
extern void T114f856(TC* ac, T0* C, T1 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_equality_call_with_zero_object_equality */
extern void T114f855(TC* ac, T0* C, T1 a1, T0* a2, T0* a3);
/* ET_DYNAMIC_OBJECT_EQUALITY_TYPES.add_common_types_to_list */
extern void T965f4(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.add_common_types_to_list */
extern void T1814f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.add_common_types_to_list */
extern void T1050f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SECONDARY_TYPE.add_common_types_to_list */
extern void T969f36(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.add_common_types_to_list */
extern void T1049f97(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.add_common_types_to_list */
extern void T1048f97(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.add_common_types_to_list */
extern void T924f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.add_common_types_to_list */
extern void T966f95(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.add_common_types_to_list */
extern void T894f93(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.add_common_types_to_list */
extern void T838f91(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_EQUALITY_TYPES.add_common_types_to_list */
extern void T963f4(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.add_common_expanded_and_reference_types_to_lists */
extern void T1814f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET.add_common_expanded_and_reference_types_to_lists */
extern void T1050f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SECONDARY_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T969f35(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FUNCTION_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T1049f96(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T1048f96(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.add_common_expanded_and_reference_types_to_lists */
extern void T924f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T966f94(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T894f92(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRIMARY_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T838f90(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SYMBOL_OPERATOR.is_not_tilde */
extern T1 T324f100(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_not_tilde */
extern T1 T333f89(TC* ac, T0* C);
/* ET_SYMBOL.is_not_tilde */
extern T1 T282f86(TC* ac, T0* C);
/* ET_C_GENERATOR.new_object_equality_types */
extern T0* T114f614(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].remove_last */
extern void T918f15(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].keep_head */
extern void T1364f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].set_count */
extern void T1364f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].move_last_cursors_after */
extern void T918f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].set_next_cursor */
extern void T1365f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].set_after */
extern void T1365f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].last */
extern T0* T918f10(TC* ac, T0* C);
/* ET_DYNAMIC_OBJECT_EQUALITY_TYPES.make */
extern T0* T965c3(TC* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].is_empty */
extern T1 T918f9(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.process */
extern void T748f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_equality_expression */
extern void T1131f63(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_equality_expression */
extern void T100f315(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_equality_expression_validity */
extern void T100f409(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_equality_expression */
extern void T100f483(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_equality_expression_target_dynamic_types */
extern void T100f530(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_equality_expression */
extern void T1049f98(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.set_next */
extern void T2023f7(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_equality_expression */
extern void T1048f98(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_equality_expression */
extern void T894f94(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_equality_expression */
extern void T966f96(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.put_equality_expression */
extern void T838f92(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.make */
extern T0* T2023c6(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vweq0a_error */
extern void T63f396(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0a */
extern T0* T1445c1084(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vweq0a_error */
extern void T42f396(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EQUALITY_EXPRESSION.set_left */
extern void T748f29(TC* ac, T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.set_right */
extern void T748f28(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_equality_expression */
extern void T881f32(TC* ac, T0* C, T0* a1);
extern T1 T881f32ot1(TC* ac, T0* a1);
extern T1 T881f32ot2(TC* ac, T0* a1);
extern T1 T881f32ot3(TC* ac, T0* a1);
extern T1 T881f32ot4(TC* ac, T0* a1);
extern T1 T881f32ot5(TC* ac, T0* a1);
extern T1 T881f32ot6(TC* ac, T0* a1);
extern T1 T881f32ot7(TC* ac, T0* a1);
extern T1 T881f32ot8(TC* ac, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.unparenthesized_expression */
extern T0* T1870f14(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.unparenthesized_expression */
extern T0* T980f15(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.unparenthesized_expression */
extern T0* T2041f12(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.unparenthesized_expression */
extern T0* T2040f13(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.unparenthesized_expression */
extern T0* T2039f11(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_equal_symbol */
extern T1 T324f110(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_equal_symbol */
extern T1 T333f102(TC* ac, T0* C);
/* ET_SYMBOL.is_equal_symbol */
extern T1 T282f90(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_equality_expression */
extern void T875f37(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_equality_expression */
extern void T857f131(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_equality_expression_validity */
extern void T857f199(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_equality_expression */
extern void T857f276(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_equality_expression */
extern void T114f1295(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_equality_expression */
extern void T114f1341(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.free_equality_types */
extern void T114f767(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_TYPES.set_right */
extern void T963f6(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_TYPES.set_left */
extern void T963f5(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.is_not_equal */
extern T1 T324f99(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_not_equal */
extern T1 T333f88(TC* ac, T0* C);
/* ET_SYMBOL.is_not_equal */
extern T1 T282f85(TC* ac, T0* C);
/* ET_C_GENERATOR.new_equality_types */
extern T0* T114f613(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].remove_last */
extern void T917f18(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].keep_head */
extern void T1360f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].set_count */
extern void T1360f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].move_last_cursors_after */
extern void T917f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES].set_next_cursor */
extern void T1362f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES].set_after */
extern void T1362f6(TC* ac, T0* C);
/* ET_DYNAMIC_EQUALITY_TYPES.make */
extern T0* T963c3(TC* ac, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.process */
extern void T745f30(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_expression */
extern void T1131f62(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_expression */
extern void T100f314(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_expression_validity */
extern void T100f408(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_infix_expression */
extern void T881f31(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_expression */
extern void T875f36(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_expression */
extern void T857f130(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_expression_validity */
extern void T857f198(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_expression */
extern void T114f1294(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_expression */
extern void T114f1340(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_semistrict_infix_expression */
extern void T114f1370(TC* ac, T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.process */
extern void T744f26(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_expression_address */
extern void T1131f61(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_expression_address */
extern void T100f313(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_address_validity */
extern void T100f407(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_pointer_expression */
extern void T100f482(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_typed_pointer_expression */
extern void T100f481(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.typed_pointer_identity_type */
extern T0* T802f95(TC* ac, T0* C);
/* ET_ECF_SYSTEM.typed_pointer_identity_type */
extern T0* T87f98(TC* ac, T0* C);
/* ET_SYSTEM.typed_pointer_identity_type */
extern T0* T50f97(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_expression_address */
extern void T881f30(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_expression_address */
extern void T875f35(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_expression_address */
extern void T857f129(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expression_address_validity */
extern void T857f197(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_pointer_expression */
extern void T857f266(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_typed_pointer_expression */
extern void T857f265(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_expression_address */
extern void T114f1293(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_expression_address */
extern void T114f1339(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_address */
extern void T114f1336(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_address_routine_name */
extern void T114f1369(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.special_type */
extern T0* T1814f10(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.special_type */
extern T0* T1050f13(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.special_type */
extern T0* T969f26(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.special_type */
extern T0* T1049f67(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.special_type */
extern T0* T1048f67(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.special_type */
extern T0* T924f12(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.special_type */
extern T0* T966f66(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.special_type */
extern T0* T894f64(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.special_type */
extern T0* T838f63(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.is_empty */
extern T1 T839f9(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.process */
extern void T743f26(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_result_address */
extern void T1131f60(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result_address */
extern void T100f312(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_address_validity */
extern void T100f406(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen2f_error */
extern void T63f394(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2f */
extern T0* T1445c1082(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2f_error */
extern void T42f394(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_result_address */
extern void T881f29(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_result_address */
extern void T875f34(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result_address */
extern void T857f128(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_address_validity */
extern void T857f196(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_result_address */
extern void T114f1292(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_result_address */
extern void T114f1338(TC* ac, T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.process */
extern void T742f26(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_current_address */
extern void T1131f59(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current_address */
extern void T100f311(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_address_validity */
extern void T100f405(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vucr0g_error */
extern void T63f391(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0g */
extern T0* T1445c1079(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0g_error */
extern void T42f391(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_current_address */
extern void T881f28(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_current_address */
extern void T875f33(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current_address */
extern void T857f127(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_address_validity */
extern void T857f195(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_current_address */
extern void T114f1291(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_current_address */
extern void T114f1337(TC* ac, T0* C, T0* a1);
extern T1 T114f1337ot1(TC* ac, T0* a1);
/* ET_FEATURE_ADDRESS.process */
extern void T741f26(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_feature_address */
extern void T1131f82(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_feature_address */
extern void T100f334(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_address_validity */
extern void T100f428(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.local_name */
extern T0* T303f64(TC* ac, T0* C);
/* ET_IDENTIFIER.argument_name */
extern T0* T303f63(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_veen11a_error */
extern void T63f388(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen11a */
extern T0* T1445c1076(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen11_error */
extern T1 T63f92(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen11a_error */
extern void T42f388(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen11_error */
extern T1 T42f92(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_function_address */
extern void T100f513(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.set_address */
extern void T860f64(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_address */
extern void T845f64(TC* ac, T0* C, T1 a1);
/* ET_CLASS.is_base_type */
extern T1 T70f220(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_base_type */
extern T1 T691f51(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_base_type */
extern T1 T500f53(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_base_type */
extern T1 T848f46(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_base_type */
extern T1 T725f46(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_base_type */
extern T1 T724f49(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_base_type */
extern T1 T722f46(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_base_type */
extern T1 T183f74(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_base_type */
extern T1 T102f74(TC* ac, T0* C);
/* ET_LIKE_CURRENT.is_base_type */
extern T1 T199f43(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_address */
extern void T100f512(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vucr0e_error */
extern void T63f387(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0e */
extern T0* T1445c1075(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vucr0e_error */
extern void T42f387(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_address */
extern void T100f511(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.inline_separate_argument_name */
extern T0* T303f62(TC* ac, T0* C);
/* ET_IDENTIFIER.iteration_item_name */
extern T0* T303f61(TC* ac, T0* C);
/* ET_IDENTIFIER.object_test_local_name */
extern T0* T303f60(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_feature_address */
extern void T881f27(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_feature_address */
extern void T875f32(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_feature_address */
extern void T857f126(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_feature_address_validity */
extern void T857f194(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_function_address */
extern void T857f272(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_attribute_address */
extern void T857f271(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_address */
extern void T857f270(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_feature_address */
extern void T114f1290(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.process */
extern void T740f32(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_expression */
extern void T1131f58(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_expression */
extern void T100f310(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_expression_validity */
extern void T100f404(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdpr1b_error */
extern void T63f378(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1b */
extern T0* T1445c1066(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vdpr1b_error */
extern void T42f378(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_precursor_expression */
extern void T881f26(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_precursor_expression */
extern void T875f31(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_expression */
extern void T857f125(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_expression_validity */
extern void T857f193(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T857f193ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_precursor_expression */
extern void T114f1289(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_expression */
extern void T114f1335(TC* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.process */
extern void T686f51(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c2_character_constant */
extern void T1131f52(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c2_character_constant */
extern void T100f304(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c2_character_constant_validity */
extern void T100f399(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_character_constant_validity */
extern void T100f165(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C3_CHARACTER_CONSTANT.set_type */
extern void T671f56(TC* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.set_type */
extern void T686f56(TC* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.set_type */
extern void T685f55(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_32_constant */
extern void T100f196(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvwmc2b_error */
extern void T63f429(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvwmc2b */
extern T0* T1445c1117(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T1445f1117ot1(TC* ac, T0* a1);
extern T1 T1445f1117ot2(TC* ac, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.literal */
extern T2 T686f42(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.value_position */
extern T0* T686f43(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.value_position */
extern T0* T685f42(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.value_position */
extern T0* T671f43(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T63f110(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvwmc2b_error */
extern void T42f429(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T42f110(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_8_constant */
extern void T100f195(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0c_error */
extern void T63f428(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0c */
extern T0* T1445c1116(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.type_name */
extern T0* T1445f473(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T63f109(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwmq0c_error */
extern void T42f428(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T42f109(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c2_character_constant */
extern void T881f25(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c2_character_constant */
extern void T875f30(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c2_character_constant */
extern void T857f112(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c2_character_constant_validity */
extern void T857f180(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_character_constant_validity */
extern void T857f247(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_32_constant */
extern void T857f330(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_8_constant */
extern void T857f329(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c2_character_constant */
extern void T114f1246(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_character_constant */
extern void T114f1255(TC* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.process */
extern void T685f51(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c1_character_constant */
extern void T1131f51(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c1_character_constant */
extern void T100f303(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c1_character_constant_validity */
extern void T100f398(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c1_character_constant */
extern void T881f24(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c1_character_constant */
extern void T875f29(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c1_character_constant */
extern void T857f111(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c1_character_constant_validity */
extern void T857f179(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c1_character_constant */
extern void T114f1288(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.process */
extern void T684f43(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_false_constant */
extern void T1131f48(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_false_constant */
extern void T100f300(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_false_constant_validity */
extern void T100f395(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_boolean_constant */
extern void T100f472(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_false_constant */
extern void T881f23(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_false_constant */
extern void T875f28(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_false_constant */
extern void T857f110(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_false_constant_validity */
extern void T857f178(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_boolean_constant */
extern void T857f251(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_false_constant */
extern void T114f1245(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_false_constant */
extern void T114f1254(TC* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.process */
extern void T683f45(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_true_constant */
extern void T1131f46(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_true_constant */
extern void T100f298(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_true_constant_validity */
extern void T100f393(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_true_constant */
extern void T881f22(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_true_constant */
extern void T875f27(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_true_constant */
extern void T857f109(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_true_constant_validity */
extern void T857f177(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_true_constant */
extern void T114f1287(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_true_constant */
extern void T114f1334(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.process */
extern void T681f47(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_underscored_real_constant */
extern void T1131f45(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_real_constant */
extern void T100f297(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_real_constant_validity */
extern void T100f392(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_real_constant_validity */
extern void T100f471(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNDERSCORED_REAL_CONSTANT.set_type */
extern void T681f51(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_type */
extern void T680f51(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_64_constant */
extern void T100f525(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_32_constant */
extern void T100f524(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0b_error */
extern void T63f434(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0b */
extern T0* T1445c1122(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwmq0b_error */
extern void T42f434(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_real_constant */
extern void T881f21(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_real_constant */
extern void T875f26(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_real_constant */
extern void T857f108(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_real_constant_validity */
extern void T857f176(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_real_constant_validity */
extern void T857f250(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_real_64_constant */
extern void T857f344(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_real_32_constant */
extern void T857f343(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_real_constant */
extern void T114f1286(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_real_constant */
extern void T114f1333(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.is_negative */
extern T1 T681f13(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.process */
extern void T680f45(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_real_constant */
extern void T1131f44(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_real_constant */
extern void T100f296(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_real_constant_validity */
extern void T100f391(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_real_constant */
extern void T881f20(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_real_constant */
extern void T875f25(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_real_constant */
extern void T857f107(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_real_constant_validity */
extern void T857f175(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_real_constant */
extern void T114f1244(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_real_constant */
extern void T114f1253(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.is_negative */
extern T1 T680f32(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.process */
extern void T679f69(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_binary_integer_constant */
extern void T1131f96(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_binary_integer_constant */
extern void T100f348(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_binary_integer_constant_validity */
extern void T100f441(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_integer_constant_validity */
extern void T100f166(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BINARY_INTEGER_CONSTANT.set_type */
extern void T679f73(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_type */
extern void T678f73(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_type */
extern void T677f73(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_type */
extern void T676f73(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_type */
extern void T675f74(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.is_binary */
extern T1 T679s39(TC* ac);
/* ET_OCTAL_INTEGER_CONSTANT.is_binary */
extern T1 T678f39(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_binary */
extern T1 T677f39(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_binary */
extern T1 T676f39(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_binary */
extern T1 T675f41(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T679f38(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T678f38(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T677s38(TC* ac);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T676f38(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T675f40(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_64_constant */
extern void T100f204(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_32_constant */
extern void T100f203(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_16_constant */
extern void T100f202(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_8_constant */
extern void T100f201(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_64_constant */
extern void T100f200(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_32_constant */
extern void T100f199(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_16_constant */
extern void T100f198(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvwmc2a_error */
extern void T63f433(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvwmc2a */
extern T0* T1445c1121(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BINARY_INTEGER_CONSTANT.literal */
extern T0* T679f3(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.literal */
extern T0* T678f3(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.literal */
extern T0* T677f3(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.literal */
extern T0* T676f3(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.literal */
extern T0* T675f2(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.value_position */
extern T0* T679f58(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.value_position */
extern T0* T678f58(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.value_position */
extern T0* T677f58(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.value_position */
extern T0* T676f58(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.value_position */
extern T0* T675f58(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvwmc2a_error */
extern void T42f433(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_8_constant */
extern void T100f197(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0a_error */
extern void T63f432(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0a */
extern T0* T1445c1120(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwmq0a_error */
extern void T42f432(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_binary_integer_constant */
extern void T881f19(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_binary_integer_constant */
extern void T875f24(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_binary_integer_constant */
extern void T857f106(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_binary_integer_constant_validity */
extern void T857f174(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_integer_constant_validity */
extern void T857f249(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_64_constant */
extern void T857f342(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_32_constant */
extern void T857f341(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_16_constant */
extern void T857f340(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_8_constant */
extern void T857f339(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_64_constant */
extern void T857f338(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_32_constant */
extern void T857f337(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_16_constant */
extern void T857f336(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_8_constant */
extern void T857f335(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_binary_integer_constant */
extern void T114f1285(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_binary_integer_constant */
extern void T114f1332(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_integer_constant */
extern void T114f1259(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.process */
extern void T678f69(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_octal_integer_constant */
extern void T1131f95(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_octal_integer_constant */
extern void T100f347(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_octal_integer_constant_validity */
extern void T100f440(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_octal_integer_constant */
extern void T881f18(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_octal_integer_constant */
extern void T875f23(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_octal_integer_constant */
extern void T857f105(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_octal_integer_constant_validity */
extern void T857f173(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_octal_integer_constant */
extern void T114f1284(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_octal_integer_constant */
extern void T114f1331(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.process */
extern void T677f69(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_hexadecimal_integer_constant */
extern void T1131f94(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_hexadecimal_integer_constant */
extern void T100f346(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_hexadecimal_integer_constant_validity */
extern void T100f439(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T881f17(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T875f22(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_hexadecimal_integer_constant */
extern void T857f104(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_hexadecimal_integer_constant_validity */
extern void T857f172(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_hexadecimal_integer_constant */
extern void T114f1283(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_hexadecimal_integer_constant */
extern void T114f1330(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.process */
extern void T676f69(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_underscored_integer_constant */
extern void T1131f93(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_integer_constant */
extern void T100f345(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_integer_constant_validity */
extern void T100f438(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T881f16(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T875f21(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_integer_constant */
extern void T857f103(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_integer_constant_validity */
extern void T857f171(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_integer_constant */
extern void T114f1282(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_integer_constant */
extern void T114f1329(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.process */
extern void T675f67(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_integer_constant */
extern void T1131f92(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_integer_constant */
extern void T100f344(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_integer_constant_validity */
extern void T100f437(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_integer_constant */
extern void T881f15(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_integer_constant */
extern void T875f20(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_integer_constant */
extern void T857f102(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_integer_constant_validity */
extern void T857f170(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_integer_constant */
extern void T114f1243(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_integer_constant */
extern void T114f1252(TC* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.process */
extern void T674f55(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_verbatim_string */
extern void T1131f91(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_verbatim_string */
extern void T100f343(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_verbatim_string_validity */
extern void T100f436(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_string_validity */
extern void T100f167(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VERBATIM_STRING.set_type */
extern void T674f59(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_type */
extern void T673f55(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_type */
extern void T672f54(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_immutable_string_32_constant */
extern void T100f208(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_constant */
extern void T100f263(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_manifest_string_area_dynamic_type */
extern void T100f294(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.immutable_string_32_type */
extern T0* T802f45(TC* ac, T0* C);
/* ET_ECF_SYSTEM.immutable_string_32_type */
extern T0* T87f48(TC* ac, T0* C);
/* ET_SYSTEM.immutable_string_32_type */
extern T0* T50f47(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_32_constant */
extern void T100f207(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_immutable_string_8_constant */
extern void T100f206(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.immutable_string_8_type */
extern T0* T802f44(TC* ac, T0* C);
/* ET_ECF_SYSTEM.immutable_string_8_type */
extern T0* T87f47(TC* ac, T0* C);
/* ET_SYSTEM.immutable_string_8_type */
extern T0* T50f46(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvwmc2c_error */
extern void T63f431(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvwmc2c */
extern T0* T1445c1119(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VERBATIM_STRING.value_position */
extern T0* T674f44(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.value_position */
extern T0* T673f40(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.value_position */
extern T0* T672f39(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvwmc2c_error */
extern void T42f431(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_8_constant */
extern void T100f205(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0d_error */
extern void T63f430(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0d */
extern T0* T1445c1118(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwmq0d_error */
extern void T42f430(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VERBATIM_STRING.cast_type */
extern T0* T674f3(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.cast_type */
extern T0* T673f3(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.cast_type */
extern T0* T672f4(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_verbatim_string */
extern void T881f14(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_verbatim_string */
extern void T875f19(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_verbatim_string */
extern void T857f101(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_verbatim_string_validity */
extern void T857f169(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_manifest_string_validity */
extern void T857f248(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_immutable_string_32_constant */
extern void T857f334(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_32_constant */
extern void T857f333(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_immutable_string_8_constant */
extern void T857f332(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_8_constant */
extern void T857f331(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_verbatim_string */
extern void T114f1281(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_verbatim_string */
extern void T114f1328(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_string */
extern void T114f1258(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_utf8_as_escaped_string_8 */
extern void T114f1263(TC* ac, T0* C, T0* a1);
/* UT_INTEGER_FORMATTER.put_octal_natural_32 */
extern void T989s3(TC* ac, T0* a1, T10 a2);
/* ET_C_GENERATOR.print_utf8_as_escaped_string_32 */
extern void T114f1262(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.process */
extern void T673f51(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_special_manifest_string */
extern void T1131f90(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_special_manifest_string */
extern void T100f342(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_special_manifest_string_validity */
extern void T100f435(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_special_manifest_string */
extern void T881f13(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_special_manifest_string */
extern void T875f18(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_special_manifest_string */
extern void T857f100(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_special_manifest_string_validity */
extern void T857f168(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_special_manifest_string */
extern void T114f1280(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_special_manifest_string */
extern void T114f1327(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.process */
extern void T672f49(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_manifest_string */
extern void T1131f43(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_manifest_string */
extern void T100f295(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_manifest_string_validity */
extern void T100f390(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_manifest_string */
extern void T881f12(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_manifest_string */
extern void T875f17(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_manifest_string */
extern void T857f99(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_manifest_string_validity */
extern void T857f167(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_manifest_string */
extern void T114f1242(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_manifest_string */
extern void T114f1251(TC* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.process */
extern void T671f52(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c3_character_constant */
extern void T1131f89(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c3_character_constant */
extern void T100f341(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c3_character_constant_validity */
extern void T100f434(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c3_character_constant */
extern void T881f11(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c3_character_constant */
extern void T875f16(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c3_character_constant */
extern void T857f98(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c3_character_constant_validity */
extern void T857f166(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c3_character_constant */
extern void T114f1279(TC* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.process */
extern void T630f34(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_strip_expression */
extern void T1131f73(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_strip_expression */
extern void T100f325(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_strip_expression_validity */
extern void T100f419(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_strip_expression */
extern void T100f491(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwst2a_error */
extern void T63f358(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst2a */
extern T0* T1445c1046(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T63f75(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst2a_error */
extern void T42f358(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T42f75(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1a_error */
extern void T63f357(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vwst1a */
extern T0* T1445c1045(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T63f74(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst1a_error */
extern void T42f357(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T42f74(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1b_error */
extern void T63f356(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst1b */
extern T0* T1445c1044(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwst1b_error */
extern void T42f356(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.feature_name */
extern T0* T630f23(TC* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_strip_expression */
extern void T881f10(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_strip_expression */
extern void T875f15(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_strip_expression */
extern void T857f97(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_strip_expression_validity */
extern void T857f165(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_strip_expression */
extern void T857f246(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_strip_expression */
extern void T114f1278(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_strip_expression */
extern void T114f1326(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.process */
extern void T627f35(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_static_call_expression */
extern void T1131f57(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_expression */
extern void T100f309(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_expression_validity */
extern void T100f403(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_query_call_expression_validity */
extern void T100f480(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_static_call_expression */
extern void T881f9(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_static_call_expression */
extern void T875f14(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_expression */
extern void T857f96(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_expression_validity */
extern void T857f164(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_static_dotnet_query_call_expression_validity */
extern void T857f243(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_expression */
extern void T114f1277(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_expression */
extern void T114f1325(TC* ac, T0* C, T0* a1);
/* ET_QUANTIFIER_EXPRESSION.process */
extern void T613f42(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_quantifier_expression */
extern void T1131f87(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_quantifier_expression */
extern void T100f339(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_quantifier_expression_validity */
extern void T100f432(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_quantifier_expression */
extern void T881f8(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_quantifier_expression */
extern void T875f13(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_quantifier_expression */
extern void T857f95(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_quantifier_expression_validity */
extern void T857f162(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_quantifier_expression */
extern void T114f1276(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_quantifier_expression */
extern void T114f1324(TC* ac, T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.process */
extern void T589f27(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_parenthesized_expression */
extern void T1131f70(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_parenthesized_expression */
extern void T100f322(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_parenthesized_expression_validity */
extern void T100f416(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_parenthesized_expression */
extern void T881f7(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_parenthesized_expression */
extern void T875f12(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_parenthesized_expression */
extern void T857f94(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_parenthesized_expression_validity */
extern void T857f161(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_parenthesized_expression */
extern void T114f1275(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_parenthesized_expression */
extern void T114f1323(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.process */
extern void T568f37(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_tuple */
extern void T1131f72(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_tuple */
extern void T100f324(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_tuple_validity */
extern void T100f418(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f418ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_tuple */
extern void T100f490(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T100f490ot1(TC* ac, T0* a1);
/* ET_CLASS.context_named_type */
extern T0* T70f203(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_tuple */
extern void T881f6(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_tuple */
extern void T875f11(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_tuple */
extern void T857f93(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_tuple_validity */
extern void T857f160(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T857f160ot1(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_manifest_tuple */
extern void T857f231(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_manifest_tuple */
extern void T114f1274(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_tuple */
extern void T114f1322(TC* ac, T0* C, T0* a1);
extern T1 T114f1322ot1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].force_last */
extern void T938f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_put */
extern void T938f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_put */
extern void T938f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_item */
extern T6 T938f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].hash_position */
extern T6 T938f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].resize */
extern void T938f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_resize */
extern void T938f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].special_integer_ */
extern T0* T938s32(TC* ac);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_resize */
extern void T938f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_resize */
extern void T938f61(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T1398s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T1397f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_item */
extern T0* T938f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_item */
extern T0* T938f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_item */
extern T6 T938f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_resize */
extern void T938f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_modulus */
extern T6 T938f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_capacity */
extern T6 T938f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_put */
extern void T938f56(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].force */
extern void T1398s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].fill_with */
extern void T1397f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].extend */
extern void T1397f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].search_position */
extern void T938f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_equality_tester */
extern T0* T938f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].unset_found_item */
extern void T938f43(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.process */
extern void T559f35(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_array */
extern void T1131f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_array */
extern void T100f323(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_array_validity */
extern void T100f417(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_untyped_manifest_array_validity */
extern void T100f489(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f489ot1(TC* ac, T0* a1);
extern T1 T100f489ot2(TC* ac, T0* a1);
/* ET_CONVERT_FROM_EXPRESSION.expression */
extern T0* T2040f4(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.expression */
extern T0* T2039f2(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.put */
extern void T559f38(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_array */
extern void T100f532(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T100f532ot1(TC* ac, T0* a1);
/* ET_CLASS_TYPE.conforms_to_context */
extern T1 T102f75(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.conforms_to_context_with_type_marks */
extern T1 T102f91(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_manifest_array_validity */
extern void T100f488(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T100f488ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwma2a_error */
extern void T63f423(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vwma2a */
extern T0* T1445c1111(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vwma2_error */
extern T1 T63f105(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwma2a_error */
extern void T42f423(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vwma2_error */
extern T1 T42f105(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwma1a_error */
extern void T63f422(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwma1a */
extern T0* T1445c1110(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwma1_error */
extern T1 T63f104(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwma1a_error */
extern void T42f422(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwma1_error */
extern T1 T42f104(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_array */
extern void T881f5(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_array */
extern void T875f10(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_array */
extern void T857f92(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_array_validity */
extern void T857f159(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_untyped_manifest_array_validity */
extern void T857f230(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T857f230ot1(TC* ac, T0* a1);
extern T1 T857f230ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_manifest_array */
extern void T857f309(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_manifest_array_validity */
extern void T857f229(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T857f229ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_manifest_array */
extern void T114f1273(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_array */
extern void T114f1321(TC* ac, T0* C, T0* a1);
extern T1 T114f1321ot1(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.current_system */
extern T0* T857f51(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.build_scope */
extern void T875f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwbe0a_error */
extern void T63f241(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vwbe0a */
extern T0* T1445c930(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T63f26(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwbe0a_error */
extern void T42f241(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T42f26(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.named_type */
extern T0* T847f14(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.same_named_type */
extern T1 T847f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_expression_validity */
extern void T857f79(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TAGGED_ASSERTION.expression */
extern T0* T772f4(TC* ac, T0* C);
extern T1 T772f4ot1(TC* ac, T0* a1);
/* ET_CLASS_ASSERTION.expression */
extern T0* T719f4(TC* ac, T0* C);
/* ET_INVARIANTS.assertion */
extern T0* T539f12(TC* ac, T0* C, T6 a1);
/* ET_INVARIANTS.item */
extern T0* T539f13(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_SCOPE.count */
extern T6 T874f3(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.new_context */
extern T0* T857f66(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.boolean_type */
extern T0* T802f33(TC* ac, T0* C);
/* ET_ECF_SYSTEM.boolean_type */
extern T0* T87f36(TC* ac, T0* C);
/* ET_SYSTEM.boolean_type */
extern T0* T50f35(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.current_universe_impl */
extern T0* T857f50(TC* ac, T0* C);
/* ET_CLASS.same_as_base_class */
extern T1 T70f110(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.error_handler */
extern T0* T857f60(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.set_fatal_error */
extern void T857f78(TC* ac, T0* C);
/* ET_INVARIANTS.reset_validity_checked */
extern void T539f32(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.set_supplier_handler */
extern void T857f81(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.set_supplier_handler */
extern void T864f23(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_features_validity */
extern void T237f30(TC* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.check_procedure_validity */
extern void T237f36(TC* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_PROCEDURE].wipe_out */
extern void T1139f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].slots_wipe_out */
extern void T1139f51(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].clashes_wipe_out */
extern void T1139f50(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_wipe_out */
extern void T1139f49(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_wipe_out */
extern void T1139f48(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].move_all_cursors_after */
extern void T1139f47(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T1720f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_after */
extern void T1720f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].forth */
extern void T1139f37(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_forth */
extern void T1139f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].add_traversing_cursor */
extern void T1139f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_position */
extern void T1720f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].remove_traversing_cursor */
extern void T1139f52(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_procedure_validity */
extern void T237f40(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_FEATURE_CHECKER.check_precursor_feature_validity */
extern void T857f87(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_PROCEDURE].item_for_iteration */
extern T0* T1139f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_item */
extern T0* T1139f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].after */
extern T1 T1139f34(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_after */
extern T1 T1139f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].after */
extern T1 T1720f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].start */
extern void T1139f36(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_start */
extern void T1139f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].cursor_off */
extern T1 T1139f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].off */
extern T1 T1720f5(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].is_empty */
extern T1 T1139f21(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_feature_validity */
extern void T857f84(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.set_validity_error */
extern void T714f110(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.set_validity_error */
extern void T713f100(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.set_validity_error */
extern void T712f106(TC* ac, T0* C);
/* ET_DO_PROCEDURE.set_validity_error */
extern void T711f103(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_validity_error */
extern void T710f113(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_validity_error */
extern void T708f103(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.set_validity_error */
extern void T707f109(TC* ac, T0* C);
/* ET_DO_FUNCTION.set_validity_error */
extern void T706f106(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_validity_error */
extern void T705f101(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_validity_error */
extern void T704f98(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.set_validity_error */
extern void T703f106(TC* ac, T0* C);
/* ET_ATTRIBUTE.set_validity_error */
extern void T702f94(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_validity_checked */
extern void T714f109(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.set_validity_checked */
extern void T713f99(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.set_validity_checked */
extern void T712f105(TC* ac, T0* C);
/* ET_DO_PROCEDURE.set_validity_checked */
extern void T711f102(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_validity_checked */
extern void T710f112(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_validity_checked */
extern void T708f102(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.set_validity_checked */
extern void T707f108(TC* ac, T0* C);
/* ET_DO_FUNCTION.set_validity_checked */
extern void T706f105(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_validity_checked */
extern void T705f100(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_validity_checked */
extern void T704f97(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.set_validity_checked */
extern void T703f105(TC* ac, T0* C);
/* ET_ATTRIBUTE.set_validity_checked */
extern void T702f93(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.process */
extern void T714f108(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure */
extern void T1131f23(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_external_procedure */
extern void T1130f25(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_external_feature_validity */
extern void T1130f26(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_feature_validity */
extern void T1130f27(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbu1a_error */
extern void T63f609(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbu1a */
extern T0* T1445c1287(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T63f190(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbu1a_error */
extern void T42f609(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T42f190(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.error_handler */
extern T0* T1130f9(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.set_fatal_error */
extern void T1130f53(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.unknown_builtin_reported */
extern T1 T1130f8(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_ref_class_name */
extern T0* T81s975(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_real_n_feature_validity */
extern void T1130f52(TC* ac, T0* C, T0* a1, T8 a2);
/* ET_BUILTIN_FEATURE_CHECKER.check_expected_builtin_feature_validity */
extern void T1130f55(TC* ac, T0* C, T0* a1, T8 a2, T0* a3);
/* ET_BUILTIN_FEATURE_CHECKER.check_signature_validity */
extern void T1130f56(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvkbs0a_error */
extern void T63f610(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkbs0a */
extern T0* T1445c1288(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_N.to_text */
extern T0* T1844f29(TC* ac, T0* C);
/* ET_LIKE_N.append_to_string */
extern void T1844f44(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T63f191(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs0a_error */
extern void T42f610(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T42f191(TC* ac, T0* C, T0* a1);
/* ARRAY [ET_TYPE].item */
extern T0* T849f4(TC* ac, T0* C, T6 a1);
/* ARRAY [ET_TYPE].count */
extern T6 T849f5(TC* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].found_item */
extern T0* T1997f28(TC* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].item_storage_item */
extern T0* T1997f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].found */
extern T1 T1997f29(TC* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].search */
extern void T1997f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].search_position */
extern void T1997f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].hash_position */
extern T6 T1997f23(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_NAME_TESTER.test */
extern T1 T1115f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].key_storage_item */
extern T0* T1997f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].clashes_item */
extern T6 T1997f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].slots_item */
extern T6 T1997f26(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.truncated_to_real_feature_name */
extern T0* T81s1558(TC* ac);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_64_feature_name */
extern T0* T81s1556(TC* ac);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_feature_name */
extern T0* T81s1554(TC* ac);
/* ET_TOKEN_CONSTANTS.to_double_feature_name */
extern T0* T81s1501(TC* ac);
/* ET_TOKEN_CONSTANTS.quotient_feature_name */
extern T0* T81s1497(TC* ac);
/* ET_TOKEN_CONSTANTS.product_feature_name */
extern T0* T81s1495(TC* ac);
/* ET_TOKEN_CONSTANTS.power_feature_name */
extern T0* T81s1493(TC* ac);
/* ET_TOKEN_CONSTANTS.plus_feature_name */
extern T0* T81s1073(TC* ac);
/* ET_ECF_LIBRARY.string_type */
extern T0* T802f80(TC* ac, T0* C);
/* ET_ECF_SYSTEM.string_type */
extern T0* T87f83(TC* ac, T0* C);
/* ET_SYSTEM.string_type */
extern T0* T50f82(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.out_feature_name */
extern T0* T81s1071(TC* ac);
/* ET_TOKEN_CONSTANTS.opposite_feature_name */
extern T0* T81s1490(TC* ac);
/* ET_TOKEN_CONSTANTS.minus_feature_name */
extern T0* T81s1488(TC* ac);
/* ET_TOKEN_CONSTANTS.is_positive_infinity_feature_name */
extern T0* T81s1544(TC* ac);
/* ET_TOKEN_CONSTANTS.is_negative_infinity_feature_name */
extern T0* T81s1542(TC* ac);
/* ET_TOKEN_CONSTANTS.is_nan_feature_name */
extern T0* T81s1540(TC* ac);
/* ET_TOKEN_CONSTANTS.is_less_feature_name */
extern T0* T81s1486(TC* ac);
/* ET_TOKEN_CONSTANTS.ieee_minimum_number_feature_name */
extern T0* T81s1537(TC* ac);
/* ET_TOKEN_CONSTANTS.ieee_maximum_number_feature_name */
extern T0* T81s1535(TC* ac);
/* ET_TOKEN_CONSTANTS.ieee_is_less_equal_feature_name */
extern T0* T81s1533(TC* ac);
/* ET_TOKEN_CONSTANTS.ieee_is_less_feature_name */
extern T0* T81s1531(TC* ac);
/* ET_TOKEN_CONSTANTS.ieee_is_greater_equal_feature_name */
extern T0* T81s1529(TC* ac);
/* ET_TOKEN_CONSTANTS.ieee_is_greater_feature_name */
extern T0* T81s1527(TC* ac);
/* ET_TOKEN_CONSTANTS.ieee_is_equal_feature_name */
extern T0* T81s1525(TC* ac);
/* ET_TOKEN_CONSTANTS.identity_feature_name */
extern T0* T81s1480(TC* ac);
/* ET_TOKEN_CONSTANTS.floor_real_64_feature_name */
extern T0* T81s1522(TC* ac);
/* ET_TOKEN_CONSTANTS.floor_real_32_feature_name */
extern T0* T81s1520(TC* ac);
/* ET_TOKEN_CONSTANTS.ceiling_real_64_feature_name */
extern T0* T81s1518(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.register_builtin_feature */
extern void T1130f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T8 a4, T0* a5);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].force_last */
extern void T1997f36(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].key_storage_put */
extern void T1997f45(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].force */
extern void T1678s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].fill_with */
extern void T1676f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].extend */
extern void T1676f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].slots_put */
extern void T1997f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].clashes_put */
extern void T1997f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].resize */
extern void T1997f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].clashes_resize */
extern void T1997f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].special_integer_ */
extern T0* T1997s31(TC* ac);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].key_storage_resize */
extern void T1997f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1678s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1676f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].item_storage_resize */
extern void T1997f48(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].aliased_resized_area */
extern T0* T2149s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].aliased_resized_area */
extern T0* T2146f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].slots_resize */
extern void T1997f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].new_modulus */
extern T6 T1997f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].new_capacity */
extern T6 T1997f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].item_storage_put */
extern void T1997f41(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].force */
extern void T2149s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].fill_with */
extern void T2146f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].extend */
extern void T2146f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].unset_found_item */
extern void T1997f39(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_32_feature_name */
extern T0* T81s1516(TC* ac);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].force_last */
extern void T1705f43(TC* ac, T0* C, T0* a1, T8 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].key_storage_put */
extern void T1705f49(TC* ac, T0* C, T8 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].slots_put */
extern void T1705f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].clashes_put */
extern void T1705f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].slots_item */
extern T6 T1705f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].hash_position */
extern T6 T1705f23(TC* ac, T0* C, T8 a1);
/* NATURAL_8.hash_code */
extern T6 T8f29(TC* ac, volatile T8* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].resize */
extern void T1705f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].clashes_resize */
extern void T1705f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].special_integer_ */
extern T0* T1705s31(TC* ac);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].key_storage_resize */
extern void T1705f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].item_storage_resize */
extern void T1705f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].aliased_resized_area */
extern T0* T1996s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].aliased_resized_area */
extern T0* T1998f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].key_storage_item */
extern T8 T1705f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].clashes_item */
extern T6 T1705f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].slots_resize */
extern void T1705f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].new_modulus */
extern T6 T1705f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].new_capacity */
extern T6 T1705f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].item_storage_put */
extern void T1705f45(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].force */
extern void T1996s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].fill_with */
extern void T1998f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].extend */
extern void T1998f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].search_position */
extern void T1705f44(TC* ac, T0* C, T8 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].unset_found_item */
extern void T1705f40(TC* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].set_key_equality_tester */
extern void T1997f35(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.feature_name_tester */
extern T0* T1130s10(TC* ac);
/* ET_FEATURE_NAME_TESTER.default_create */
extern T0* T1115c2(TC* ac);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_map */
extern T0* T1997c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_with_equality_testers */
extern void T1997f38(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_sparse_container */
extern void T1997f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].set_internal_cursor */
extern void T1997f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].new_cursor */
extern T0* T1997f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make */
extern T0* T2150c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_slots */
extern void T1997f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_clashes */
extern void T1997f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_key_storage */
extern void T1997f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].make */
extern T0* T1678s1(TC* ac, T6 a1);
/* SPECIAL [ET_FEATURE_NAME].make_empty */
extern T0* T1676c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].default_create */
extern T0* T1678c3(TC* ac);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_item_storage */
extern void T1997f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].make */
extern T0* T2149s2(TC* ac, T6 a1);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].make_empty */
extern T0* T2146c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].default_create */
extern T0* T2149c3(TC* ac);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].found_item */
extern T0* T1705f20(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].item_storage_item */
extern T0* T1705f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].found */
extern T1 T1705f32(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].search */
extern void T1705f42(TC* ac, T0* C, T8 a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_real_n_ref_feature_validity */
extern void T1130f51(TC* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_TOKEN_CONSTANTS.set_item_feature_name */
extern T0* T81s1039(TC* ac);
/* ET_TOKEN_CONSTANTS.positive_infinity_feature_name */
extern T0* T81s1513(TC* ac);
/* ET_TOKEN_CONSTANTS.negative_infinity_feature_name */
extern T0* T81s1511(TC* ac);
/* ET_TOKEN_CONSTANTS.nan_feature_name */
extern T0* T81s1509(TC* ac);
/* ET_TOKEN_CONSTANTS.item_feature_name */
extern T0* T81s580(TC* ac);
/* ET_TOKEN_CONSTANTS.real_32_ref_class_name */
extern T0* T81s972(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_64_ref_class_name */
extern T0* T81s969(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_32_ref_class_name */
extern T0* T81s966(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_16_ref_class_name */
extern T0* T81s963(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_8_ref_class_name */
extern T0* T81s960(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_64_ref_class_name */
extern T0* T81s957(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_32_ref_class_name */
extern T0* T81s954(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_16_ref_class_name */
extern T0* T81s951(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_integer_n_feature_validity */
extern void T1130f50(TC* ac, T0* C, T0* a1, T8 a2);
/* ET_TOKEN_CONSTANTS.to_real_64_feature_name */
extern T0* T81s1507(TC* ac);
/* ET_TOKEN_CONSTANTS.to_real_32_feature_name */
extern T0* T81s1505(TC* ac);
/* ET_TOKEN_CONSTANTS.to_real_feature_name */
extern T0* T81s1503(TC* ac);
/* ET_TOKEN_CONSTANTS.to_character_32_feature_name */
extern T0* T81s1047(TC* ac);
/* ET_TOKEN_CONSTANTS.to_character_8_feature_name */
extern T0* T81s1045(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_remainder_feature_name */
extern T0* T81s1484(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_quotient_feature_name */
extern T0* T81s1482(TC* ac);
/* ET_TOKEN_CONSTANTS.bit_xor_feature_name */
extern T0* T81s1478(TC* ac);
/* ET_TOKEN_CONSTANTS.bit_shift_right_feature_name */
extern T0* T81s1476(TC* ac);
/* ET_TOKEN_CONSTANTS.bit_shift_left_feature_name */
extern T0* T81s1474(TC* ac);
/* ET_TOKEN_CONSTANTS.bit_or_feature_name */
extern T0* T81s1472(TC* ac);
/* ET_TOKEN_CONSTANTS.bit_not_feature_name */
extern T0* T81s1470(TC* ac);
/* ET_TOKEN_CONSTANTS.bit_and_feature_name */
extern T0* T81s1468(TC* ac);
/* ET_TOKEN_CONSTANTS.as_natural_64_feature_name */
extern T0* T81s1466(TC* ac);
/* ET_TOKEN_CONSTANTS.as_natural_32_feature_name */
extern T0* T81s1464(TC* ac);
/* ET_TOKEN_CONSTANTS.as_natural_16_feature_name */
extern T0* T81s1462(TC* ac);
/* ET_TOKEN_CONSTANTS.as_natural_8_feature_name */
extern T0* T81s1460(TC* ac);
/* ET_TOKEN_CONSTANTS.as_integer_64_feature_name */
extern T0* T81s1458(TC* ac);
/* ET_TOKEN_CONSTANTS.as_integer_32_feature_name */
extern T0* T81s1456(TC* ac);
/* ET_TOKEN_CONSTANTS.as_integer_16_feature_name */
extern T0* T81s1454(TC* ac);
/* ET_TOKEN_CONSTANTS.as_integer_8_feature_name */
extern T0* T81s1452(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_integer_n_ref_feature_validity */
extern void T1130f49(TC* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_TOKEN_CONSTANTS.integer_8_ref_class_name */
extern T0* T81s948(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_tuple_feature_validity */
extern void T1130f48(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_object_comparison_feature_name */
extern T0* T81s1449(TC* ac);
/* ET_ECF_LIBRARY.double_type */
extern T0* T802f39(TC* ac, T0* C);
/* ET_ECF_SYSTEM.double_type */
extern T0* T87f42(TC* ac, T0* C);
/* ET_SYSTEM.double_type */
extern T0* T50f41(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_real_64_feature_name */
extern T0* T81s1446(TC* ac);
/* ET_ECF_LIBRARY.real_type */
extern T0* T802f71(TC* ac, T0* C);
/* ET_ECF_SYSTEM.real_type */
extern T0* T87f74(TC* ac, T0* C);
/* ET_SYSTEM.real_type */
extern T0* T50f73(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_real_32_feature_name */
extern T0* T81s1444(TC* ac);
/* ET_TOKEN_CONSTANTS.put_pointer_feature_name */
extern T0* T81s1442(TC* ac);
/* ET_TOKEN_CONSTANTS.put_natural_64_feature_name */
extern T0* T81s1440(TC* ac);
/* ET_TOKEN_CONSTANTS.put_natural_32_feature_name */
extern T0* T81s1438(TC* ac);
/* ET_TOKEN_CONSTANTS.put_natural_16_feature_name */
extern T0* T81s1436(TC* ac);
/* ET_TOKEN_CONSTANTS.put_natural_8_feature_name */
extern T0* T81s1434(TC* ac);
/* ET_TOKEN_CONSTANTS.put_integer_64_feature_name */
extern T0* T81s1432(TC* ac);
/* ET_TOKEN_CONSTANTS.put_integer_32_feature_name */
extern T0* T81s1430(TC* ac);
/* ET_TOKEN_CONSTANTS.put_integer_16_feature_name */
extern T0* T81s1428(TC* ac);
/* ET_TOKEN_CONSTANTS.put_integer_8_feature_name */
extern T0* T81s1426(TC* ac);
/* ET_TOKEN_CONSTANTS.put_character_32_feature_name */
extern T0* T81s1424(TC* ac);
/* ET_TOKEN_CONSTANTS.put_character_8_feature_name */
extern T0* T81s1422(TC* ac);
/* ET_TOKEN_CONSTANTS.put_boolean_feature_name */
extern T0* T81s1420(TC* ac);
/* ET_TOKEN_CONSTANTS.real_64_item_feature_name */
extern T0* T81s1417(TC* ac);
/* ET_TOKEN_CONSTANTS.real_32_item_feature_name */
extern T0* T81s1415(TC* ac);
/* ET_TOKEN_CONSTANTS.pointer_item_feature_name */
extern T0* T81s584(TC* ac);
/* ET_TOKEN_CONSTANTS.object_comparison_feature_name */
extern T0* T81s1413(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_64_item_feature_name */
extern T0* T81s1411(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_32_item_feature_name */
extern T0* T81s1409(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_16_item_feature_name */
extern T0* T81s1407(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_8_item_feature_name */
extern T0* T81s1405(TC* ac);
/* ET_TOKEN_CONSTANTS.item_code_feature_name */
extern T0* T81s1403(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_64_item_feature_name */
extern T0* T81s1401(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_32_item_feature_name */
extern T0* T81s1399(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_16_item_feature_name */
extern T0* T81s1397(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_8_item_feature_name */
extern T0* T81s1395(TC* ac);
/* ET_TOKEN_CONSTANTS.count_feature_name */
extern T0* T81s578(TC* ac);
/* ET_TOKEN_CONSTANTS.character_32_item_feature_name */
extern T0* T81s1392(TC* ac);
/* ET_TOKEN_CONSTANTS.character_8_item_feature_name */
extern T0* T81s1390(TC* ac);
/* ET_TOKEN_CONSTANTS.boolean_item_feature_name */
extern T0* T81s1388(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_function_feature_validity */
extern void T1130f47(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.detachable_separate_formal_parameter_type */
extern T0* T1130f11(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.name */
extern T0* T691f8(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.name */
extern T0* T500f1(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.name */
extern T0* T848f1(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.fast_item_feature_name */
extern T0* T81s1386(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_procedure_feature_validity */
extern void T1130f46(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.fast_call_feature_name */
extern T0* T81s1384(TC* ac);
/* ET_TOKEN_CONSTANTS.call_feature_name */
extern T0* T81s757(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_platform_feature_validity */
extern void T1130f45(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_bytes_feature_name */
extern T0* T81s1382(TC* ac);
/* ET_TOKEN_CONSTANTS.real_bytes_feature_name */
extern T0* T81s1380(TC* ac);
/* ET_TOKEN_CONSTANTS.pointer_bytes_feature_name */
extern T0* T81s1378(TC* ac);
/* ET_TOKEN_CONSTANTS.is_windows_feature_name */
extern T0* T81s1376(TC* ac);
/* ET_TOKEN_CONSTANTS.is_vxworks_feature_name */
extern T0* T81s1374(TC* ac);
/* ET_TOKEN_CONSTANTS.is_vms_feature_name */
extern T0* T81s1372(TC* ac);
/* ET_TOKEN_CONSTANTS.is_unix_feature_name */
extern T0* T81s1370(TC* ac);
/* ET_TOKEN_CONSTANTS.is_thread_capable_feature_name */
extern T0* T81s1368(TC* ac);
/* ET_TOKEN_CONSTANTS.is_scoop_capable_feature_name */
extern T0* T81s1366(TC* ac);
/* ET_TOKEN_CONSTANTS.is_mac_feature_name */
extern T0* T81s1364(TC* ac);
/* ET_TOKEN_CONSTANTS.is_dotnet_feature_name */
extern T0* T81s1362(TC* ac);
/* ET_TOKEN_CONSTANTS.is_64_bits_feature_name */
extern T0* T81s1360(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_bytes_feature_name */
extern T0* T81s1358(TC* ac);
/* ET_TOKEN_CONSTANTS.double_bytes_feature_name */
extern T0* T81s1356(TC* ac);
/* ET_TOKEN_CONSTANTS.character_bytes_feature_name */
extern T0* T81s1354(TC* ac);
/* ET_TOKEN_CONSTANTS.boolean_bytes_feature_name */
extern T0* T81s1352(TC* ac);
/* ET_TOKEN_CONSTANTS.platform_class_name */
extern T0* T81s947(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_runtime_feature_validity */
extern void T1130f44(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.unmark_object_feature_name */
extern T0* T81s1349(TC* ac);
/* ET_TOKEN_CONSTANTS.unlock_marking_feature_name */
extern T0* T81s1347(TC* ac);
/* ET_TOKEN_CONSTANTS.set_reference_field_at_feature_name */
extern T0* T81s1346(TC* ac);
/* ET_TOKEN_CONSTANTS.set_reference_field_feature_name */
extern T0* T81s1345(TC* ac);
/* ET_TOKEN_CONSTANTS.set_real_64_field_at_feature_name */
extern T0* T81s1343(TC* ac);
/* ET_TOKEN_CONSTANTS.set_real_64_field_feature_name */
extern T0* T81s1341(TC* ac);
/* ET_TOKEN_CONSTANTS.set_real_32_field_at_feature_name */
extern T0* T81s1339(TC* ac);
/* ET_TOKEN_CONSTANTS.set_real_32_field_feature_name */
extern T0* T81s1337(TC* ac);
/* ET_TOKEN_CONSTANTS.set_pre_ecma_mapping_feature_name */
extern T0* T81s1335(TC* ac);
/* ET_TOKEN_CONSTANTS.set_pointer_field_at_feature_name */
extern T0* T81s1333(TC* ac);
/* ET_TOKEN_CONSTANTS.set_pointer_field_feature_name */
extern T0* T81s1331(TC* ac);
/* ET_TOKEN_CONSTANTS.set_natural_64_field_at_feature_name */
extern T0* T81s1329(TC* ac);
/* ET_TOKEN_CONSTANTS.set_natural_64_field_feature_name */
extern T0* T81s1327(TC* ac);
/* ET_TOKEN_CONSTANTS.set_natural_32_field_at_feature_name */
extern T0* T81s1325(TC* ac);
/* ET_TOKEN_CONSTANTS.set_natural_32_field_feature_name */
extern T0* T81s1323(TC* ac);
/* ET_TOKEN_CONSTANTS.set_natural_16_field_at_feature_name */
extern T0* T81s1321(TC* ac);
/* ET_TOKEN_CONSTANTS.set_natural_16_field_feature_name */
extern T0* T81s1319(TC* ac);
/* ET_TOKEN_CONSTANTS.set_natural_8_field_at_feature_name */
extern T0* T81s1317(TC* ac);
/* ET_TOKEN_CONSTANTS.set_natural_8_field_feature_name */
extern T0* T81s1315(TC* ac);
/* ET_TOKEN_CONSTANTS.set_integer_64_field_at_feature_name */
extern T0* T81s1313(TC* ac);
/* ET_TOKEN_CONSTANTS.set_integer_64_field_feature_name */
extern T0* T81s1311(TC* ac);
/* ET_TOKEN_CONSTANTS.set_integer_32_field_at_feature_name */
extern T0* T81s1309(TC* ac);
/* ET_TOKEN_CONSTANTS.set_integer_32_field_feature_name */
extern T0* T81s1307(TC* ac);
/* ET_TOKEN_CONSTANTS.set_integer_16_field_at_feature_name */
extern T0* T81s1305(TC* ac);
/* ET_TOKEN_CONSTANTS.set_integer_16_field_feature_name */
extern T0* T81s1303(TC* ac);
/* ET_TOKEN_CONSTANTS.set_integer_8_field_at_feature_name */
extern T0* T81s1301(TC* ac);
/* ET_TOKEN_CONSTANTS.set_integer_8_field_feature_name */
extern T0* T81s1299(TC* ac);
/* ET_TOKEN_CONSTANTS.set_character_32_field_at_feature_name */
extern T0* T81s1297(TC* ac);
/* ET_TOKEN_CONSTANTS.set_character_32_field_feature_name */
extern T0* T81s1295(TC* ac);
/* ET_TOKEN_CONSTANTS.set_character_8_field_at_feature_name */
extern T0* T81s1293(TC* ac);
/* ET_TOKEN_CONSTANTS.set_character_8_field_feature_name */
extern T0* T81s1291(TC* ac);
/* ET_TOKEN_CONSTANTS.set_boolean_field_at_feature_name */
extern T0* T81s1289(TC* ac);
/* ET_TOKEN_CONSTANTS.set_boolean_field_feature_name */
extern T0* T81s1287(TC* ac);
/* ET_TOKEN_CONSTANTS.mark_object_feature_name */
extern T0* T81s1285(TC* ac);
/* ET_TOKEN_CONSTANTS.lock_marking_feature_name */
extern T0* T81s1283(TC* ac);
/* ET_TOKEN_CONSTANTS.type_id_from_name_feature_name */
extern T0* T81s1281(TC* ac);
/* ET_TOKEN_CONSTANTS.type_conforms_to_feature_name */
extern T0* T81s1279(TC* ac);
/* ET_ECF_LIBRARY.detachable_string_8_type */
extern T0* T802f83(TC* ac, T0* C);
/* ET_ECF_SYSTEM.detachable_string_8_type */
extern T0* T87f86(TC* ac, T0* C);
/* ET_SYSTEM.detachable_string_8_type */
extern T0* T50f85(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.storable_version_of_type_feature_name */
extern T0* T81s1277(TC* ac);
/* ET_TOKEN_CONSTANTS.reference_field_at_offset_feature_name */
extern T0* T81s1276(TC* ac);
/* ET_TOKEN_CONSTANTS.reference_field_at_feature_name */
extern T0* T81s1275(TC* ac);
/* ET_TOKEN_CONSTANTS.reference_field_feature_name */
extern T0* T81s1274(TC* ac);
/* ET_TOKEN_CONSTANTS.real_64_field_at_feature_name */
extern T0* T81s1272(TC* ac);
/* ET_TOKEN_CONSTANTS.real_64_field_feature_name */
extern T0* T81s1270(TC* ac);
/* ET_TOKEN_CONSTANTS.real_32_field_at_feature_name */
extern T0* T81s1268(TC* ac);
/* ET_TOKEN_CONSTANTS.real_32_field_feature_name */
extern T0* T81s1266(TC* ac);
/* ET_TOKEN_CONSTANTS.raw_reference_field_at_offset_feature_name */
extern T0* T81s1264(TC* ac);
/* ET_TOKEN_CONSTANTS.raw_reference_field_at_feature_name */
extern T0* T81s1262(TC* ac);
/* ET_TOKEN_CONSTANTS.pre_ecma_mapping_status_feature_name */
extern T0* T81s1260(TC* ac);
/* ET_TOKEN_CONSTANTS.pointer_field_at_feature_name */
extern T0* T81s1258(TC* ac);
/* ET_TOKEN_CONSTANTS.pointer_field_feature_name */
extern T0* T81s1256(TC* ac);
/* ET_TOKEN_CONSTANTS.persistent_field_count_of_type_feature_name */
extern T0* T81s1254(TC* ac);
/* ET_ECF_LIBRARY.special_any_type */
extern T0* T802f77(TC* ac, T0* C);
/* ET_ECF_SYSTEM.special_any_type */
extern T0* T87f80(TC* ac, T0* C);
/* ET_SYSTEM.special_any_type */
extern T0* T50f79(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.once_objects_feature_name */
extern T0* T81s1252(TC* ac);
/* ET_TOKEN_CONSTANTS.object_size_feature_name */
extern T0* T81s1250(TC* ac);
/* ET_ECF_LIBRARY.type_detachable_any_type */
extern T0* T802f90(TC* ac, T0* C);
/* ET_ECF_SYSTEM.type_detachable_any_type */
extern T0* T87f93(TC* ac, T0* C);
/* ET_SYSTEM.type_detachable_any_type */
extern T0* T50f92(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_type_instance_of_feature_name */
extern T0* T81s1249(TC* ac);
/* ET_TOKEN_CONSTANTS.new_tuple_instance_of_feature_name */
extern T0* T81s1248(TC* ac);
/* ET_ECF_LIBRARY.special_detachable_any_type */
extern T0* T802f78(TC* ac, T0* C);
/* ET_ECF_SYSTEM.special_detachable_any_type */
extern T0* T87f81(TC* ac, T0* C);
/* ET_SYSTEM.special_detachable_any_type */
extern T0* T50f80(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_special_of_reference_instance_of_feature_name */
extern T0* T81s1247(TC* ac);
/* ET_TOKEN_CONSTANTS.new_instance_of_feature_name */
extern T0* T81s1246(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_64_field_at_feature_name */
extern T0* T81s1244(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_64_field_feature_name */
extern T0* T81s1242(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_32_field_at_feature_name */
extern T0* T81s1240(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_32_field_feature_name */
extern T0* T81s1238(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_16_field_at_feature_name */
extern T0* T81s1236(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_16_field_feature_name */
extern T0* T81s1234(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_8_field_at_feature_name */
extern T0* T81s1232(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_8_field_feature_name */
extern T0* T81s1230(TC* ac);
/* ET_TOKEN_CONSTANTS.is_tuple_type_feature_name */
extern T0* T81s1228(TC* ac);
/* ET_TOKEN_CONSTANTS.is_tuple_feature_name */
extern T0* T81s1226(TC* ac);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_type_feature_name */
extern T0* T81s1224(TC* ac);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_or_basic_type_feature_name */
extern T0* T81s1222(TC* ac);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_feature_name */
extern T0* T81s1220(TC* ac);
/* ET_TOKEN_CONSTANTS.is_special_of_expanded_feature_name */
extern T0* T81s1218(TC* ac);
/* ET_TOKEN_CONSTANTS.is_special_copy_semantics_item_feature_name */
extern T0* T81s1216(TC* ac);
/* ET_TOKEN_CONSTANTS.is_special_feature_name */
extern T0* T81s1214(TC* ac);
/* ET_TOKEN_CONSTANTS.is_object_marked_feature_name */
extern T0* T81s1212(TC* ac);
/* ET_TOKEN_CONSTANTS.is_field_transient_of_type_feature_name */
extern T0* T81s1210(TC* ac);
/* ET_TOKEN_CONSTANTS.is_field_expanded_of_type_feature_name */
extern T0* T81s1208(TC* ac);
/* ET_TOKEN_CONSTANTS.is_expanded_feature_name */
extern T0* T81s1016(TC* ac);
/* ET_TOKEN_CONSTANTS.is_copy_semantics_field_feature_name */
extern T0* T81s1205(TC* ac);
/* ET_TOKEN_CONSTANTS.is_attached_type_feature_name */
extern T0* T81s1203(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_64_field_at_feature_name */
extern T0* T81s1201(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_64_field_feature_name */
extern T0* T81s1199(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_32_field_at_feature_name */
extern T0* T81s1197(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_32_field_feature_name */
extern T0* T81s1195(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_16_field_at_feature_name */
extern T0* T81s1193(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_16_field_feature_name */
extern T0* T81s1191(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_8_field_at_feature_name */
extern T0* T81s1189(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_8_field_feature_name */
extern T0* T81s1187(TC* ac);
/* ET_TOKEN_CONSTANTS.in_assertion_feature_name */
extern T0* T81s1185(TC* ac);
/* ET_TOKEN_CONSTANTS.generic_parameter_count_feature_name */
extern T0* T81s1008(TC* ac);
/* ET_TOKEN_CONSTANTS.generator_8_of_type_feature_name */
extern T0* T81s1182(TC* ac);
/* ET_TOKEN_CONSTANTS.generator_of_type_feature_name */
extern T0* T81s1180(TC* ac);
/* ET_TOKEN_CONSTANTS.generating_type_8_of_type_feature_name */
extern T0* T81s1178(TC* ac);
/* ET_TOKEN_CONSTANTS.generating_type_of_type_feature_name */
extern T0* T81s1176(TC* ac);
/* ET_TOKEN_CONSTANTS.field_type_of_type_feature_name */
extern T0* T81s1174(TC* ac);
/* ET_TOKEN_CONSTANTS.field_static_type_of_type_feature_name */
extern T0* T81s1172(TC* ac);
/* ET_TOKEN_CONSTANTS.field_offset_of_type_feature_name */
extern T0* T81s1170(TC* ac);
/* ET_TOKEN_CONSTANTS.field_name_of_type_feature_name */
extern T0* T81s1168(TC* ac);
/* ET_TOKEN_CONSTANTS.field_count_of_type_feature_name */
extern T0* T81s1166(TC* ac);
/* ET_TOKEN_CONSTANTS.eif_gen_param_id_feature_name */
extern T0* T81s1164(TC* ac);
/* ET_TOKEN_CONSTANTS.dynamic_type_at_offset_feature_name */
extern T0* T81s1162(TC* ac);
/* ET_ECF_LIBRARY.any_type */
extern T0* T802f19(TC* ac, T0* C);
/* ET_ECF_SYSTEM.any_type */
extern T0* T87f22(TC* ac, T0* C);
/* ET_SYSTEM.any_type */
extern T0* T50f21(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.dynamic_type_feature_name */
extern T0* T81s1160(TC* ac);
/* ET_TOKEN_CONSTANTS.detachable_type_feature_name */
extern T0* T81s1158(TC* ac);
/* ET_TOKEN_CONSTANTS.compiler_version_feature_name */
extern T0* T81s1156(TC* ac);
/* ET_TOKEN_CONSTANTS.check_assert_feature_name */
extern T0* T81s1154(TC* ac);
/* ET_TOKEN_CONSTANTS.character_32_field_at_feature_name */
extern T0* T81s1152(TC* ac);
/* ET_TOKEN_CONSTANTS.character_32_field_feature_name */
extern T0* T81s1150(TC* ac);
/* ET_TOKEN_CONSTANTS.character_8_field_at_feature_name */
extern T0* T81s1148(TC* ac);
/* ET_TOKEN_CONSTANTS.character_8_field_feature_name */
extern T0* T81s1146(TC* ac);
/* ET_TOKEN_CONSTANTS.boolean_field_at_feature_name */
extern T0* T81s1144(TC* ac);
/* ET_TOKEN_CONSTANTS.boolean_field_feature_name */
extern T0* T81s1142(TC* ac);
/* ET_TOKEN_CONSTANTS.attached_type_feature_name */
extern T0* T81s1140(TC* ac);
/* ET_TOKEN_CONSTANTS.ise_runtime_class_name */
extern T0* T81s946(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_identified_routines_feature_validity */
extern void T1130f43(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.eif_object_id_free_feature_name */
extern T0* T81s1138(TC* ac);
/* ET_TOKEN_CONSTANTS.eif_object_id_feature_name */
extern T0* T81s1137(TC* ac);
/* ET_TOKEN_CONSTANTS.eif_is_object_id_of_current_feature_name */
extern T0* T81s1135(TC* ac);
/* ET_TOKEN_CONSTANTS.eif_id_object_feature_name */
extern T0* T81s1134(TC* ac);
/* ET_TOKEN_CONSTANTS.eif_current_object_id_feature_name */
extern T0* T81s1132(TC* ac);
/* ET_TOKEN_CONSTANTS.identified_routines_class_name */
extern T0* T81s945(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_exception_manager_feature_validity */
extern void T1130f42(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.developer_raise_feature_name */
extern T0* T81s1130(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_factory_feature_validity */
extern void T1130f41(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.exception_manager_type */
extern T0* T802f42(TC* ac, T0* C);
/* ET_ECF_SYSTEM.exception_manager_type */
extern T0* T87f45(TC* ac, T0* C);
/* ET_SYSTEM.exception_manager_type */
extern T0* T50f44(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_manager_feature_name */
extern T0* T81s1127(TC* ac);
/* ET_TOKEN_CONSTANTS.exception_manager_factory_class_name */
extern T0* T81s944(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_feature_validity */
extern void T1130f40(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_is_ignored_feature_name */
extern T0* T81s1124(TC* ac);
/* ET_ECF_LIBRARY.exception_type */
extern T0* T802f40(TC* ac, T0* C);
/* ET_ECF_SYSTEM.exception_type */
extern T0* T87f43(TC* ac, T0* C);
/* ET_SYSTEM.exception_type */
extern T0* T50f42(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raise_feature_name */
extern T0* T81s1122(TC* ac);
/* ET_TOKEN_CONSTANTS.ignore_feature_name */
extern T0* T81s1120(TC* ac);
/* ET_TOKEN_CONSTANTS.catch_feature_name */
extern T0* T81s1118(TC* ac);
/* ET_ECF_LIBRARY.detachable_type_exception_type */
extern T0* T802f91(TC* ac, T0* C);
/* ET_ECF_SYSTEM.detachable_type_exception_type */
extern T0* T87f94(TC* ac, T0* C);
/* ET_SYSTEM.detachable_type_exception_type */
extern T0* T50f93(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_of_code_feature_name */
extern T0* T81s1116(TC* ac);
/* ET_TOKEN_CONSTANTS.last_exception_feature_name */
extern T0* T81s592(TC* ac);
/* ET_TOKEN_CONSTANTS.is_raisable_feature_name */
extern T0* T81s1113(TC* ac);
/* ET_TOKEN_CONSTANTS.is_ignored_feature_name */
extern T0* T81s1111(TC* ac);
/* ET_TOKEN_CONSTANTS.is_ignorable_feature_name */
extern T0* T81s1109(TC* ac);
/* ET_ECF_LIBRARY.type_detachable_exception_type */
extern T0* T802f92(TC* ac, T0* C);
/* ET_ECF_SYSTEM.type_detachable_exception_type */
extern T0* T87f95(TC* ac, T0* C);
/* ET_SYSTEM.type_detachable_exception_type */
extern T0* T50f94(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_caught_feature_name */
extern T0* T81s1107(TC* ac);
/* ET_ECF_LIBRARY.detachable_exception_type */
extern T0* T802f41(TC* ac, T0* C);
/* ET_ECF_SYSTEM.detachable_exception_type */
extern T0* T87f44(TC* ac, T0* C);
/* ET_SYSTEM.detachable_exception_type */
extern T0* T50f43(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_from_code_feature_name */
extern T0* T81s1105(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_memory_feature_validity */
extern void T1130f39(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.free_feature_name */
extern T0* T81s1102(TC* ac);
/* ET_TOKEN_CONSTANTS.find_referers_feature_name */
extern T0* T81s1100(TC* ac);
/* ET_TOKEN_CONSTANTS.memory_class_name */
extern T0* T81s943(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_com_failure_feature_validity */
extern void T1130f38(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.cwin_local_free_feature_name */
extern T0* T81s1097(TC* ac);
/* ET_TOKEN_CONSTANTS.cwin_error_text_feature_name */
extern T0* T81s1095(TC* ac);
/* ET_TOKEN_CONSTANTS.character_size_feature_name */
extern T0* T81s1093(TC* ac);
/* ET_TOKEN_CONSTANTS.ccom_hresult_facility_feature_name */
extern T0* T81s1091(TC* ac);
/* ET_TOKEN_CONSTANTS.ccom_hresult_code_feature_name */
extern T0* T81s1089(TC* ac);
/* ET_TOKEN_CONSTANTS.ccom_hresult_feature_name */
extern T0* T81s1087(TC* ac);
/* ET_TOKEN_CONSTANTS.c_strlen_feature_name */
extern T0* T81s1085(TC* ac);
/* ET_TOKEN_CONSTANTS.com_failure_class_name */
extern T0* T81s942(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_arguments_32_feature_validity */
extern void T1130f37(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.i_th_argument_string_feature_name */
extern T0* T81s1082(TC* ac);
/* ET_TOKEN_CONSTANTS.i_th_argument_pointer_feature_name */
extern T0* T81s1080(TC* ac);
/* ET_TOKEN_CONSTANTS.argument_count_feature_name */
extern T0* T81s1078(TC* ac);
/* ET_TOKEN_CONSTANTS.arguments_32_class_name */
extern T0* T81s941(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_feature_validity */
extern void T1130f36(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.to_integer_32_feature_name */
extern T0* T81s1075(TC* ac);
/* ET_TOKEN_CONSTANTS.is_default_pointer_feature_name */
extern T0* T81s1069(TC* ac);
/* ET_TOKEN_CONSTANTS.hash_code_feature_name */
extern T0* T81s1067(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_ref_feature_validity */
extern void T1130f35(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.pointer_ref_class_name */
extern T0* T81s940(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_feature_validity */
extern void T1130f34(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.negated_feature_name */
extern T0* T81s1063(TC* ac);
/* ET_TOKEN_CONSTANTS.implication_feature_name */
extern T0* T81s1061(TC* ac);
/* ET_TOKEN_CONSTANTS.disjuncted_semistrict_feature_name */
extern T0* T81s1059(TC* ac);
/* ET_TOKEN_CONSTANTS.disjuncted_exclusive_feature_name */
extern T0* T81s1057(TC* ac);
/* ET_TOKEN_CONSTANTS.disjuncted_feature_name */
extern T0* T81s1055(TC* ac);
/* ET_TOKEN_CONSTANTS.conjuncted_semistrict_feature_name */
extern T0* T81s1053(TC* ac);
/* ET_TOKEN_CONSTANTS.conjuncted_feature_name */
extern T0* T81s1051(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_ref_feature_validity */
extern void T1130f33(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.boolean_ref_class_name */
extern T0* T81s939(TC* ac);
/* ET_TOKEN_CONSTANTS.character_32_ref_class_name */
extern T0* T81s936(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_character_n_feature_validity */
extern void T1130f32(TC* ac, T0* C, T0* a1, T8 a2);
/* ET_TOKEN_CONSTANTS.natural_32_code_feature_name */
extern T0* T81s1043(TC* ac);
/* ET_TOKEN_CONSTANTS.code_feature_name */
extern T0* T81s1041(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_character_n_ref_feature_validity */
extern void T1130f31(TC* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_BUILTIN_FEATURE_CHECKER.current_universe */
extern T0* T1130f7(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_ref_class_name */
extern T0* T81s933(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_special_feature_validity */
extern void T1130f30(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_count_feature_name */
extern T0* T81s1037(TC* ac);
/* ET_TOKEN_CONSTANTS.put_feature_name */
extern T0* T81s1035(TC* ac);
/* ET_TOKEN_CONSTANTS.make_empty_feature_name */
extern T0* T81s1033(TC* ac);
/* ET_TOKEN_CONSTANTS.extend_feature_name */
extern T0* T81s1031(TC* ac);
/* ET_TOKEN_CONSTANTS.element_size_feature_name */
extern T0* T81s1028(TC* ac);
/* ET_TOKEN_CONSTANTS.capacity_feature_name */
extern T0* T81s579(TC* ac);
/* ET_TOKEN_CONSTANTS.base_address_feature_name */
extern T0* T81s1024(TC* ac);
/* ET_TOKEN_CONSTANTS.like_current */
extern T0* T81s982(TC* ac);
/* ET_TOKEN_CONSTANTS.aliased_resized_area_feature_name */
extern T0* T81s1022(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_type_feature_validity */
extern void T1130f29(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.runtime_name_feature_name */
extern T0* T81s1018(TC* ac);
/* ET_TOKEN_CONSTANTS.is_deferred_feature_name */
extern T0* T81s1014(TC* ac);
/* ET_TOKEN_CONSTANTS.is_attached_feature_name */
extern T0* T81s1012(TC* ac);
/* ET_TOKEN_CONSTANTS.has_default_feature_name */
extern T0* T81s1010(TC* ac);
/* ET_TOKEN_CONSTANTS.generic_parameter_type_feature_name */
extern T0* T81s1006(TC* ac);
/* ET_TOKEN_CONSTANTS.default_feature_name */
extern T0* T81s1004(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_any_feature_validity */
extern void T1130f28(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.standard_copy_feature_name */
extern T0* T81s1001(TC* ac);
/* ET_TOKEN_CONSTANTS.copy_feature_name */
extern T0* T81s754(TC* ac);
/* ET_TOKEN_CONSTANTS.twin_feature_name */
extern T0* T81s755(TC* ac);
/* ET_TOKEN_CONSTANTS.tagged_out_feature_name */
extern T0* T81s997(TC* ac);
/* ET_TOKEN_CONSTANTS.standard_twin_feature_name */
extern T0* T81s995(TC* ac);
/* ET_TOKEN_CONSTANTS.standard_is_equal_feature_name */
extern T0* T81s993(TC* ac);
/* ET_TOKEN_CONSTANTS.same_type_feature_name */
extern T0* T81s991(TC* ac);
/* ET_TOKEN_CONSTANTS.is_deep_equal_feature_name */
extern T0* T81s988(TC* ac);
/* ET_TOKEN_CONSTANTS.generator_feature_name */
extern T0* T81s986(TC* ac);
/* ET_ECF_LIBRARY.type_detachable_like_current_type */
extern T0* T802f93(TC* ac, T0* C);
/* ET_ECF_SYSTEM.type_detachable_like_current_type */
extern T0* T87f96(TC* ac, T0* C);
/* ET_SYSTEM.type_detachable_like_current_type */
extern T0* T50f95(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generating_type_feature_name */
extern T0* T81s984(TC* ac);
/* ET_TOKEN_CONSTANTS.deep_twin_feature_name */
extern T0* T81s981(TC* ac);
/* ET_TOKEN_CONSTANTS.conforms_to_feature_name */
extern T0* T81s979(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.tokens */
extern T0* T1130s5(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.string_ */
extern T0* T1130s6(TC* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure */
extern void T100f144(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T100f156(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_procedure_validity */
extern void T100f173(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_reference */
extern void T100f245(TC* ac, T0* C, T0* a1);
extern T1 T100f245ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_procedure */
extern void T100f244(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_set_is_ignored */
extern void T100f243(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.argument_type_set */
extern T0* T100f79(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_raise */
extern void T100f242(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_ignore */
extern void T100f241(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_catch */
extern void T100f240(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_builtin_unknown */
extern T1 T714f79(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T100f156p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_components_validity */
extern void T100f161(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_tests_validity */
extern void T100f160(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuot3a_error */
extern void T63f435(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuot3a */
extern T0* T1445c1123(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vuot3a_error */
extern void T42f435(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_arguments_validity */
extern void T100f168(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_argument_supplier */
extern void T100f210(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument_declaration */
extern void T100f209(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_procedure */
extern void T114f1417(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure */
extern void T114f1443(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_address_routine */
extern void T114f1457(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.argument_type_set */
extern T0* T114f636(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_feature_name_comment */
extern void T114f1460(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_external_routine */
extern void T114f1456(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_C_GENERATOR.flush_to_cpp_file */
extern void T114f1486(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T950f42(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_append */
extern void T950f51(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T950f51p1(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_last */
extern void T827f51(TC* ac, T0* C, T0* a1, T0* a2);
/* INTEGER_64.out */
extern T0* T7f14(TC* ac, volatile T7* C);
/* STRING_8.append_integer_64 */
extern void T17f67(TC* ac, T0* C, T7 a1);
/* ET_C_GENERATOR.print_external_dllwin_body */
extern void T114f1485(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* DS_LINKED_LIST_CURSOR [STRING_8].forth */
extern void T910f9(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_forth */
extern void T220f25(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].add_traversing_cursor */
extern void T220f26(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T910f12(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T220f27(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set */
extern void T910f11(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [STRING_8].item */
extern T0* T910f6(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].start */
extern void T910f10(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_start */
extern void T220f24(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].cursor_off */
extern T1 T220f14(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].off */
extern T1 T910f7(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].new_cursor */
extern T0* T220f9(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].make */
extern T0* T910c8(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_external_cpp_body */
extern void T114f1484(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* DS_LINKED_LIST [STRING_8].item */
extern T0* T220f16(TC* ac, T0* C, T6 a1);
/* ST_SPLITTER.split */
extern T0* T109f6(TC* ac, T0* C, T0* a1);
/* ST_SPLITTER.do_split */
extern T0* T109f7(TC* ac, T0* C, T0* a1, T1 a2);
/* DS_LINKED_LIST [STRING_8].force_last */
extern void T220f19(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [STRING_8].put_right */
extern void T1103f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [STRING_8].make */
extern T0* T1103c3(TC* ac, T0* a1);
/* DS_HASH_SET [NATURAL_32].has */
extern T1 T911f25(TC* ac, T0* C, T10 a1);
/* DS_HASH_SET [NATURAL_32].search_position */
extern void T911f31(TC* ac, T0* C, T10 a1);
/* DS_HASH_SET [NATURAL_32].hash_position */
extern T6 T911f19(TC* ac, T0* C, T10 a1);
/* DS_HASH_SET [NATURAL_32].key_storage_item */
extern T10 T911f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].item_storage_item */
extern T10 T911f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].clashes_item */
extern T6 T911f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].key_equality_tester */
extern T0* T911f28(TC* ac, T0* C);
/* DS_HASH_SET [NATURAL_32].slots_item */
extern T6 T911f24(TC* ac, T0* C, T6 a1);
/* ST_SPLITTER.string_ */
extern T0* T109s5(TC* ac);
/* DS_LINKED_LIST [STRING_8].make */
extern T0* T220c18(TC* ac);
/* DS_LINKED_LIST [STRING_8].set_internal_cursor */
extern void T220f23(TC* ac, T0* C, T0* a1);
/* ST_SPLITTER.make_with_separators */
extern T0* T109c9(TC* ac, T0* a1);
/* ST_SPLITTER.set_separators */
extern void T109f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [NATURAL_32].put */
extern void T911f30(TC* ac, T0* C, T10 a1);
/* DS_HASH_SET [NATURAL_32].slots_put */
extern void T911f40(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [NATURAL_32].clashes_put */
extern void T911f39(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [NATURAL_32].item_storage_put */
extern void T911f38(TC* ac, T0* C, T10 a1, T6 a2);
/* DS_HASH_SET [NATURAL_32].unset_found_item */
extern void T911f36(TC* ac, T0* C);
/* DS_HASH_SET [NATURAL_32].make */
extern T0* T911c29(TC* ac, T6 a1);
/* DS_HASH_SET [NATURAL_32].set_internal_cursor */
extern void T911f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [NATURAL_32].new_cursor */
extern T0* T911f20(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [NATURAL_32].make */
extern T0* T1350c4(TC* ac, T0* a1);
/* DS_HASH_SET [NATURAL_32].make_slots */
extern void T911f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].new_modulus */
extern T6 T911f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].make_clashes */
extern void T911f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].make_key_storage */
extern void T911f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].make_item_storage */
extern void T911f32(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_external_c_struct_body */
extern void T114f1483(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* UC_UTF8_STRING.remove_head */
extern void T1066f110(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.keep_tail */
extern void T1066f112(TC* ac, T0* C, T6 a1);
/* UC_STRING.remove_head */
extern void T909f109(TC* ac, T0* C, T6 a1);
/* UC_STRING.keep_tail */
extern void T909f111(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_external_c_body */
extern void T114f1482(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T1 a7);
/* ET_C_GENERATOR.print_external_c_prototype */
extern void T114f1481(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_C_GENERATOR.print_external_builtin_body */
extern void T114f1480(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_body */
extern void T114f1493(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_tuple_procedure_body */
extern void T114f1531(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.fill_call_formal_arguments */
extern void T114f826(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_reference_body */
extern void T114f1594(TC* ac, T0* C, T0* a1);
extern T1 T114f1594ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_64_body */
extern void T114f1593(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_basic_expanded_item_body */
extern void T114f1608(TC* ac, T0* C, T0* a1);
extern T1 T114f1608ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_32_body */
extern void T114f1592(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_pointer_body */
extern void T114f1591(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_64_body */
extern void T114f1590(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_32_body */
extern void T114f1589(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_16_body */
extern void T114f1588(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_8_body */
extern void T114f1587(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_64_body */
extern void T114f1586(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_32_body */
extern void T114f1585(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_16_body */
extern void T114f1584(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_8_body */
extern void T114f1583(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_32_body */
extern void T114f1582(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_8_body */
extern void T114f1581(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_boolean_body */
extern void T114f1580(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_procedure_body */
extern void T114f1530(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_set_count_body */
extern void T114f1579(TC* ac, T0* C, T0* a1);
extern T1 T114f1579ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_reference_fields */
extern T1 T966f61(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_reference_fields */
extern T1 T1049f49(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_reference_fields */
extern T1 T1049f59(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_reference_fields */
extern T1 T1048f49(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_reference_fields */
extern T1 T1048f59(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_reference_fields */
extern T1 T894f60(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_reference_fields */
extern T1 T894f62(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_nested_reference_fields */
extern T1 T838f58(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_reference_fields */
extern T1 T838f61(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_reference_fields */
extern T1 T966f64(TC* ac, T0* C);
/* ET_C_GENERATOR.result_type_set_in_feature */
extern T0* T114f303(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_extend_body */
extern void T114f1578(TC* ac, T0* C, T0* a1);
extern T1 T114f1578ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_real_n_ref_procedure_body */
extern void T114f1529(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_procedure_body */
extern void T114f1528(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_procedure_call_body */
extern void T114f1577(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_ref_procedure_body */
extern void T114f1527(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_memory_procedure_body */
extern void T114f1526(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_runtime_procedure_body */
extern void T114f1525(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pre_ecma_mapping_body */
extern void T114f1576(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_exception_manager_procedure_body */
extern void T114f1524(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_ref_procedure_body */
extern void T114f1523(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_routines_procedure_body */
extern void T114f1522(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_procedure_body */
extern void T114f1521(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_set_is_ignored_body */
extern void T114f1575(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_raise_body */
extern void T114f1574(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_ignore_body */
extern void T114f1573(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_catch_body */
extern void T114f1572(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_com_failure_procedure_body */
extern void T114f1520(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_ref_procedure_body */
extern void T114f1519(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_ref_procedure_body */
extern void T114f1518(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_procedure_body */
extern void T114f1517(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_body */
extern void T114f1571(TC* ac, T0* C, T0* a1);
extern T1 T114f1571ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_body_with_no_special */
extern void T114f1607(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T114f1607ot1(TC* ac, T0* a1);
extern T1 T114f1607ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_custom_tuple_items */
extern void T114f1622(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_custom_attributes */
extern void T114f1620(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_assign_temp_variable_to_onces_attribute */
extern void T114f1617(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_DYNAMIC_FUNCTION_TYPE.has_once_per_object_routines */
extern T1 T1049f17(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_once_per_object_routines */
extern T1 T1048f17(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_once_per_object_routines */
extern T1 T894f18(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_once_per_object_routines */
extern T1 T838f17(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_once_per_object_routines */
extern T1 T966f18(TC* ac, T0* C);
/* ET_C_GENERATOR.print_assign_temp_variable_to_flags_attribute */
extern void T114f1616(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_flags_access */
extern void T114f1624(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_flags_name */
extern void T114f801(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_assign_onces_attribute_to_temp_variable */
extern void T114f1614(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_once_per_object_data_type_name */
extern void T114f799(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_assign_flags_attribute_to_temp_variable */
extern void T114f1613(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_body_with_special */
extern void T114f1604(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_custom_special_items */
extern void T114f1621(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.free_actual_argument_list */
extern void T114f1612(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].force_last */
extern void T921f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].force */
extern void T1372s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].fill_with */
extern void T1373f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].extend */
extern void T1373f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].resize */
extern void T921f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1372s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1373f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].new_capacity */
extern T6 T921f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].extendible */
extern T1 T921f6(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.force_first */
extern void T345f26(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.new_capacity */
extern T6 T345f18(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_actual_argument_list */
extern T0* T114f647(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].remove_last */
extern void T921f15(TC* ac, T0* C);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].keep_head */
extern void T1373f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].set_count */
extern void T1373f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].move_last_cursors_after */
extern void T921f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST].set_next_cursor */
extern void T1374f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST].set_after */
extern void T1374f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].last */
extern T0* T921f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].is_empty */
extern T1 T921f9(TC* ac, T0* C);
/* ET_C_GENERATOR.print_greater_than_or_equal */
extern void T114f1611(TC* ac, T0* C);
/* ET_C_GENERATOR.print_assign_temp_variable_to_special_capacity_attribute */
extern void T114f1619(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_assign_temp_variable_to_special_count_attribute */
extern void T114f1618(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_assign_special_capacity_attribute_to_temp_variable */
extern void T114f1615(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_greater_than */
extern void T114f1603(TC* ac, T0* C);
/* ET_C_GENERATOR.print_assign_special_count_attribute_to_temp_variable */
extern void T114f1610(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_builtin_any_copy_body */
extern void T114f1570(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_body */
extern void T114f1492(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_type_function_body */
extern void T114f1516(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_type_body */
extern void T114f1569(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type */
extern T0* T691f50(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T691f53(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T691f53ot1(TC* ac, T0* a1);
extern T1 T691f53ot2(TC* ac, T0* a1);
extern T1 T691f53ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type_with_type_mark */
extern T0* T848f55(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T848f55ot1(TC* ac, T0* a1);
extern T1 T848f55ot2(TC* ac, T0* a1);
extern T1 T848f55ot3(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_base_type_with_type_mark */
extern T0* T725f57(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T725f57ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type_with_type_mark */
extern T0* T724f60(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T724f60ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.shallow_base_type_with_type_mark */
extern T0* T722f57(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.shallow_base_type_with_type_mark */
extern T0* T199f55(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T500f59(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T500f59ot1(TC* ac, T0* a1);
extern T1 T500f59ot2(TC* ac, T0* a1);
extern T1 T500f59ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_base_type */
extern T0* T500f52(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type */
extern T0* T848f52(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_base_type */
extern T0* T725f52(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type */
extern T0* T724f55(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_base_type */
extern T0* T722f52(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_base_type */
extern T0* T199f49(TC* ac, T0* C, T0* a1);
/* ET_CLASS.shallow_base_type */
extern T0* T70f219(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_base_type */
extern T0* T183f79(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_base_type */
extern T0* T102f86(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_indentation_assign_to_result */
extern void T114f791(TC* ac, T0* C);
/* ET_C_GENERATOR.print_external_builtin_tuple_function_body */
extern void T114f1515(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern void T114f1568(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern T0* T114f1568ac1(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T114f1568ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_real_64_item_body */
extern void T114f1567(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_basic_expanded_item_body */
extern void T114f1606(TC* ac, T0* C, T0* a1);
extern T1 T114f1606ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_real_32_item_body */
extern void T114f1566(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_pointer_item_body */
extern void T114f1565(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_64_item_body */
extern void T114f1564(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_32_item_body */
extern void T114f1563(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_16_item_body */
extern void T114f1562(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_8_item_body */
extern void T114f1561(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_item_code_body */
extern void T114f1560(TC* ac, T0* C, T0* a1);
extern T1 T114f1560ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_64_item_body */
extern void T114f1559(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_32_item_body */
extern void T114f1558(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_16_item_body */
extern void T114f1557(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_8_item_body */
extern void T114f1556(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_32_item_body */
extern void T114f1555(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_8_item_body */
extern void T114f1554(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_boolean_item_body */
extern void T114f1553(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_function_body */
extern void T114f1514(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_aliased_resized_area_body */
extern void T114f1552(TC* ac, T0* C, T0* a1);
extern T1 T114f1552ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.free_result_expression */
extern void T114f1605(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_RESULT].force_last */
extern void T922f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].force */
extern void T1375s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_RESULT].fill_with */
extern void T1376f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].extend */
extern void T1376f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_RESULT].resize */
extern void T922f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].aliased_resized_area */
extern T0* T1375s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_RESULT].aliased_resized_area */
extern T0* T1376f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_RESULT].new_capacity */
extern T6 T922f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_RESULT].extendible */
extern T1 T922f6(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_result_expression */
extern T0* T114f646(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_RESULT].remove_last */
extern void T922f15(TC* ac, T0* C);
/* SPECIAL [ET_RESULT].keep_head */
extern void T1376f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_RESULT].set_count */
extern void T1376f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_RESULT].move_last_cursors_after */
extern void T922f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_RESULT].set_next_cursor */
extern void T1377f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_RESULT].set_after */
extern void T1377f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_RESULT].last */
extern T0* T922f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_RESULT].is_empty */
extern T1 T922f9(TC* ac, T0* C);
/* ET_C_GENERATOR.print_external_builtin_real_n_ref_function_body */
extern void T114f1513(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_real_n_function_body */
extern void T114f1512(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_real_n_out_body */
extern void T114f1551(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_ref_function_body */
extern void T114f1511(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_function_body */
extern void T114f1510(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_out_body */
extern void T114f1550(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_platform_function_body */
extern void T114f1509(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_memory_function_body */
extern void T114f1508(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_runtime_function_body */
extern void T114f1507(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pre_ecma_mapping_status_body */
extern void T114f1549(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_in_assertion_body */
extern void T114f1548(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_ref_function_body */
extern void T114f1506(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_function_body */
extern void T114f1505(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_routines_function_body */
extern void T114f1504(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_function_body */
extern void T114f1503(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_function_item_body */
extern void T114f1547(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_factory_function_body */
extern void T114f1502(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_factory_exception_manager_body */
extern void T114f1546(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_function_body */
extern void T114f1501(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_type_of_code_body */
extern void T114f1545(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_last_exception_body */
extern void T114f1544(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_raisable_body */
extern void T114f1543(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_ignored_body */
extern void T114f1542(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_ignorable_body */
extern void T114f1541(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_caught_body */
extern void T114f1540(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_exception_from_code_body */
extern void T114f1539(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_com_failure_function_body */
extern void T114f1500(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_ref_function_body */
extern void T114f1499(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_function_body */
extern void T114f1498(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_ref_function_body */
extern void T114f1497(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_function_body */
extern void T114f1496(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_arguments_32_function_body */
extern void T114f1495(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_function_body */
extern void T114f1494(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body */
extern void T114f1538(TC* ac, T0* C, T0* a1);
extern T1 T114f1538ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body_with_reference */
extern void T114f1602(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body_with_expanded */
extern void T114f1601(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body_with_special */
extern void T114f1600(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_any_tagged_out_body */
extern void T114f1537(TC* ac, T0* C, T0* a1);
extern T1 T114f1537ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body */
extern void T114f1536(TC* ac, T0* C, T0* a1);
extern T1 T114f1536ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body_with_no_special */
extern void T114f1599(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body_with_special */
extern void T114f1598(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_body */
extern void T114f1535(TC* ac, T0* C, T0* a1);
extern T1 T114f1535ot1(TC* ac, T0* a1);
extern T1 T114f1535ot2(TC* ac, T0* a1);
extern T1 T114f1535ot3(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_tuple_items */
extern void T114f1597(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_field */
extern void T114f1609(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.free_equality_expression */
extern void T114f1623(TC* ac, T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.set_operator */
extern void T748f31(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].force_last */
extern void T916f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].force */
extern void T1357s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EQUALITY_EXPRESSION].fill_with */
extern void T1358f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EQUALITY_EXPRESSION].extend */
extern void T1358f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].resize */
extern void T916f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T1357s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T1358f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].new_capacity */
extern T6 T916f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].extendible */
extern T1 T916f6(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_equality_expression */
extern T0* T114f648(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].remove_last */
extern void T916f15(TC* ac, T0* C);
/* SPECIAL [ET_EQUALITY_EXPRESSION].keep_head */
extern void T1358f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_EQUALITY_EXPRESSION].set_count */
extern void T1358f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].move_last_cursors_after */
extern void T916f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].set_next_cursor */
extern void T1359f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].set_after */
extern void T1359f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].last */
extern T0* T916f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].is_empty */
extern T1 T916f9(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.equal_symbol */
extern T0* T81s926(TC* ac);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_special_items */
extern void T114f1596(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_attributes */
extern void T114f1595(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_any_is_equal_body */
extern void T114f1534(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_is_deep_equal_body */
extern void T114f1533(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_conforms_to_body */
extern void T114f1532(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_function */
extern T1 T714f80(TC* ac, T0* C);
/* ET_C_GENERATOR.print_external_c_inline_body */
extern void T114f1479(TC* ac, T0* C, T0* a1);
/* KL_CHARACTER_ROUTINES.as_lower */
extern T2 T2028f1(TC* ac, T0* C, T2 a1);
/* ET_C_GENERATOR.character_ */
extern T0* T114s641(TC* ac);
/* KL_CHARACTER_ROUTINES.default_create */
extern T0* T2028c2(TC* ac);
/* UC_UTF8_STRING.has_substring */
extern T1 T1066f71(TC* ac, T0* C, T0* a1);
/* UC_STRING.has_substring */
extern T1 T909f71(TC* ac, T0* C, T0* a1);
/* STRING_8.has_substring */
extern T1 T17f23(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_c_includes */
extern void T114f1478(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_header_filename */
extern void T114f1491(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [STRING_8].force_last */
extern void T99f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].slots_put */
extern void T99f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].clashes_put */
extern void T99f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].slots_item */
extern T6 T99f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].hash_position */
extern T6 T99f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].resize */
extern void T99f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].clashes_resize */
extern void T99f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].special_integer_ */
extern T0* T99s33(TC* ac);
/* DS_HASH_SET [STRING_8].key_storage_resize */
extern void T99f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_resize */
extern void T99f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].key_storage_item */
extern T0* T99f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_item */
extern T0* T99f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].clashes_item */
extern T6 T99f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].slots_resize */
extern void T99f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_modulus */
extern T6 T99f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_capacity */
extern T6 T99f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_put */
extern void T99f48(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [STRING_8].search_position */
extern void T99f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].key_equality_tester */
extern T0* T99f24(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].unset_found_item */
extern void T99f47(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].remove */
extern void T99f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].remove_position */
extern void T99f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].key_storage_put */
extern void T99f74(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [STRING_8].key_storage_keep_head */
extern void T99f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_keep_head */
extern void T99f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].move_cursors_forth */
extern void T99f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_position */
extern void T854f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_next_cursor */
extern void T854f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_after */
extern void T854f10(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].internal_set_key_equality_tester */
extern void T99f70(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].has */
extern T1 T99f30(TC* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.right_adjust */
extern void T108s26(TC* ac, T0* a1);
/* KL_STRING_ROUTINES.left_adjust */
extern void T108s25(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_external_cpp_includes */
extern void T114f1477(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_cpp_header_filename */
extern void T114f1490(TC* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring */
extern T0* T107f231(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring_count */
extern T6 T107f307(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_feature_trace_message_call */
extern void T114f1475(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.recognizes */
extern T1 T107f76(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inline_routine_name */
extern void T114f1476(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T114f1476ot1(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure */
extern void T857f124(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_validity */
extern void T857f192(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_iteration_components_validity */
extern void T857f256(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_object_tests_validity */
extern void T857f255(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_formal_arguments_validity */
extern void T857f260(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_argument_supplier */
extern void T857f363(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_argument_supplier */
extern void T1141f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_formal_argument_declaration */
extern void T857f362(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.process */
extern void T713f98(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_procedure */
extern void T1131f12(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_deferred_procedure */
extern void T1130f24(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_procedure */
extern void T100f143(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_procedure_validity */
extern void T100f155(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_procedure */
extern void T114f1416(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_procedure */
extern void T114f1442(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_procedure */
extern void T857f123(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_procedure_validity */
extern void T857f191(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.process */
extern void T712f104(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure */
extern void T1131f22(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_once_procedure */
extern void T1130f23(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure */
extern void T100f142(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_validity */
extern void T100f154(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0b_error */
extern void T63f376(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vucr0b */
extern T0* T1445c1064(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vucr0b_error */
extern void T42f376(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_locals_validity */
extern void T100f162(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_supplier */
extern void T100f178(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable_declaration */
extern void T100f177(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle1a_error */
extern void T63f438(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle1a */
extern T0* T1445c1126(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T63f113(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle1a_error */
extern void T42f438(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T42f113(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle2a_error */
extern void T63f437(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle2a */
extern T0* T1445c1125(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T63f112(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle2a_error */
extern void T42f437(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T42f112(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0b_error */
extern void T63f436(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0b */
extern T0* T1445c1124(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vreg_error */
extern T1 T63f47(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vreg0b_error */
extern void T42f436(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vreg_error */
extern T1 T42f47(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_procedure */
extern void T114f1415(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure */
extern void T114f1441(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_procedure */
extern void T114f1458(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_feature */
extern void T114f1454(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_assign_called_to_once_status */
extern void T114f1474(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_status_is_completed */
extern void T114f1473(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_return_statement */
extern void T114f1472(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assign_result_to_thread_safe_once_value */
extern void T114f1471(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_thread_safe_once_per_process_value */
extern void T114f1489(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_assign_once_value_to_result */
extern void T114f1470(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex_lock */
extern void T114f1469(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex_try_lock */
extern void T114f1468(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_return_thread_safe_once_value */
extern void T114f1467(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_raise_thread_safe_once_exception_if_any */
extern void T114f1466(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_return_once_value */
extern void T114f1465(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_raise_once_exception_if_any */
extern void T114f1464(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_object_global_mutex_unlock */
extern void T114f1463(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_object_global_mutex_lock */
extern void T114f1462(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].value */
extern T6 T939f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].position_of_key */
extern T6 T939f35(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure */
extern void T857f122(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_validity */
extern void T857f190(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_locals_validity */
extern void T857f257(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_supplier */
extern void T857f347(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_local_supplier */
extern void T1141f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_variable_declaration */
extern void T857f346(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.process */
extern void T711f101(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_procedure */
extern void T1131f21(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_do_procedure */
extern void T1130f22(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure */
extern void T100f141(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T100f153(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_string_type_alive */
extern void T100f171(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T100f153p1(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_procedure */
extern void T114f1414(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure */
extern void T114f1440(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure */
extern void T857f121(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_validity */
extern void T857f189(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.process */
extern void T710f111(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function */
extern void T1131f20(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_external_function */
extern void T1130f21(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function */
extern void T100f140(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T100f152(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.result_type_set */
extern T0* T100f70(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_function_validity */
extern void T100f170(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_generic_parameter_type */
extern void T100f239(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_default */
extern void T100f238(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_reference_item */
extern void T100f237(TC* ac, T0* C, T0* a1);
extern T1 T100f237ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_item */
extern void T100f236(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_type_conforms_to */
extern void T100f235(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_type_conforms_to_feature */
extern void T95f116(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_storable_version_of_type */
extern void T100f234(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field_at_offset */
extern void T100f233(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field_at */
extern void T100f232(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field */
extern void T100f231(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_type_instance_of */
extern void T100f230(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_tuple_instance_of */
extern void T100f229(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_special_of_reference_instance_of */
extern void T100f228(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_instance_of */
extern void T100f227(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_object_id */
extern void T100f226(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_is_object_id_of_current */
extern void T100f225(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_id_object */
extern void T100f224(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_current_object_id */
extern void T100f223(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function_item */
extern void T100f222(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_factory_exception_manager */
extern void T100f221(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_type_of_code */
extern void T100f220(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_last_exception */
extern void T100f219(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_raisable */
extern void T100f218(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignored */
extern void T100f217(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignorable */
extern void T100f216(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_caught */
extern void T100f215(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_exception_from_code */
extern void T100f214(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function */
extern void T100f213(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_twin */
extern void T100f212(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_generating_type */
extern void T100f211(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_builtin_unknown */
extern T1 T710f82(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T100f152p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_supplier */
extern void T100f159(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_declaration */
extern void T100f158(TC* ac, T0* C, T0* a1);
extern T1 T100f158ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_extended_attribute_result_dynamic_types */
extern void T100f175(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_type_validity */
extern void T100f157(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_function */
extern void T114f1413(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function */
extern void T114f1439(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function */
extern void T857f120(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_validity */
extern void T857f188(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_result_supplier */
extern void T857f254(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_result_supplier */
extern void T1141f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_result_declaration */
extern void T857f253(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_query_type_validity */
extern void T857f252(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_FUNCTION.process */
extern void T708f101(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_function */
extern void T1131f19(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_deferred_function */
extern void T1130f20(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_function */
extern void T100f139(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_function_validity */
extern void T100f151(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_function */
extern void T114f1412(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_function */
extern void T114f1438(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_function */
extern void T857f119(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_function_validity */
extern void T857f187(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.process */
extern void T707f107(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_function */
extern void T1131f18(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_once_function */
extern void T1130f19(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function */
extern void T100f138(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_validity */
extern void T100f150(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd11ga_error */
extern void T63f377(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vffd11ga */
extern T0* T1445c1065(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vffd11g_error */
extern T1 T63f86(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd11ga_error */
extern void T42f377(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vffd11g_error */
extern T1 T42f86(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vevi0c_error */
extern void T63f375(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0c */
extern T0* T1445c1063(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0c_error */
extern void T42f375(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_once_function */
extern void T114f1411(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function */
extern void T114f1437(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_function */
extern void T114f1455(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function */
extern void T857f118(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_validity */
extern void T857f186(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.process */
extern void T706f104(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function */
extern void T1131f17(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_do_function */
extern void T1130f18(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function */
extern void T100f137(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_validity */
extern void T100f149(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function */
extern void T114f1410(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function */
extern void T114f1436(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function */
extern void T857f117(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_validity */
extern void T857f185(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.process */
extern void T705f99(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unique_attribute */
extern void T1131f16(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_unique_attribute */
extern void T1130f17(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unique_attribute */
extern void T100f136(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unique_attribute_validity */
extern void T100f148(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqui0a_error */
extern void T63f374(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqui0a */
extern T0* T1445c1062(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqui_error */
extern T1 T63f85(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqui0a_error */
extern void T42f374(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqui_error */
extern T1 T42f85(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_unique_attribute */
extern void T114f1409(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unique_attribute */
extern void T114f1435(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_wrapper */
extern void T114f1453(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.free_unqualified_call_expression */
extern void T114f1461(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].force_last */
extern void T919f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION].force */
extern void T1366s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].fill_with */
extern void T1367f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].extend */
extern void T1367f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].resize */
extern void T919f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1366s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1367f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].new_capacity */
extern T6 T919f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].extendible */
extern T1 T919f6(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_unqualified_call_expression */
extern T0* T114f635(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_name */
extern void T1033f39(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].remove_last */
extern void T919f15(TC* ac, T0* C);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].keep_head */
extern void T1367f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].set_count */
extern void T1367f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].move_last_cursors_after */
extern void T919f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION].set_next_cursor */
extern void T1368f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION].set_after */
extern void T1368f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].last */
extern T0* T919f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].is_empty */
extern T1 T919f9(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_unique_attribute */
extern void T857f116(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unique_attribute_validity */
extern void T857f184(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.process */
extern void T704f96(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_constant_attribute */
extern void T1131f15(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_constant_attribute */
extern void T1130f16(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_constant_attribute */
extern void T100f135(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_constant_attribute_validity */
extern void T100f147(TC* ac, T0* C, T0* a1);
extern T1 T100f147ot1(TC* ac, T0* a1);
extern T1 T100f147ot2(TC* ac, T0* a1);
extern T1 T100f147ot3(TC* ac, T0* a1);
extern T1 T100f147ot4(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc5a_error */
extern void T63f373(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc5a */
extern T0* T1445c1061(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T63f84(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc5a_error */
extern void T42f373(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T42f84(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.system_string_type */
extern T0* T802f89(TC* ac, T0* C);
/* ET_ECF_SYSTEM.system_string_type */
extern T0* T87f92(TC* ac, T0* C);
/* ET_SYSTEM.system_string_type */
extern T0* T50f91(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vqmc5b_error */
extern void T63f372(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vqmc5b */
extern T0* T1445c1060(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vqmc5b_error */
extern void T42f372(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vqmc4a_error */
extern void T63f371(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc4a */
extern T0* T1445c1059(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T63f83(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc4a_error */
extern void T42f371(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T42f83(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3a_error */
extern void T63f370(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc3a */
extern T0* T1445c1058(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T63f82(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc3a_error */
extern void T42f370(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T42f82(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3b_error */
extern void T63f369(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vqmc3b */
extern T0* T1445c1057(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vqmc3b_error */
extern void T42f369(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vqmc2a_error */
extern void T63f368(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc2a */
extern T0* T1445c1056(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T63f81(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc2a_error */
extern void T42f368(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T42f81(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc2b_error */
extern void T63f367(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vqmc2b */
extern T0* T1445c1055(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T1445f1055ot1(TC* ac, T0* a1);
extern T1 T1445f1055ot2(TC* ac, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc2b_error */
extern void T42f367(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vqmc1a_error */
extern void T63f366(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc1a */
extern T0* T1445c1054(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T63f80(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc1a_error */
extern void T42f366(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T42f80(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T679f28(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T678f28(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T677f28(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T676f28(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T675f30(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_boolean_constant */
extern T1 T674f30(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_boolean_constant */
extern T1 T673f27(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T671f26(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T686f24(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T685f24(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_boolean_constant */
extern T1 T684s25(TC* ac);
/* ET_TRUE_CONSTANT.is_boolean_constant */
extern T1 T683s25(TC* ac);
/* ET_UNDERSCORED_REAL_CONSTANT.is_boolean_constant */
extern T1 T681f26(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_boolean_constant */
extern T1 T680f26(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_boolean_constant */
extern T1 T672f25(TC* ac, T0* C);
/* ET_C_GENERATOR.process_constant_attribute */
extern void T114f1408(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_constant_attribute */
extern void T114f1434(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_constant_attribute */
extern void T857f115(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_constant_attribute_validity */
extern void T857f183(TC* ac, T0* C, T0* a1);
extern T1 T857f183ot1(TC* ac, T0* a1);
extern T1 T857f183ot2(TC* ac, T0* a1);
extern T1 T857f183ot3(TC* ac, T0* a1);
extern T1 T857f183ot4(TC* ac, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.process */
extern void T703f104(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_extended_attribute */
extern void T1131f14(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_extended_attribute */
extern void T1130f15(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_extended_attribute */
extern void T100f134(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_extended_attribute_validity */
extern void T100f146(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_v1ea1gd_error */
extern void T63f363(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_v1ea1gd */
extern T0* T1445c1051(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_v1ea1g_error */
extern T1 T63f77(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_v1ea1gd_error */
extern void T42f363(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_v1ea1g_error */
extern T1 T42f77(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_v1ea1gb_error */
extern void T63f362(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_v1ea1gb */
extern T0* T1445c1050(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_v1ea1gb_error */
extern void T42f362(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_v1ea1gc_error */
extern void T63f361(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_v1ea1gc */
extern T0* T1445c1049(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_v1ea1gc_error */
extern void T42f361(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_v1ea1ga_error */
extern void T63f360(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_v1ea1ga */
extern T0* T1445c1048(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_v1ea1ga_error */
extern void T42f360(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.is_type_non_separate */
extern T1 T848f44(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_non_separate */
extern T1 T725f44(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_non_separate */
extern T1 T724f47(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_non_separate */
extern T1 T722f44(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_non_separate */
extern T1 T199f41(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0a_error */
extern void T63f359(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vucr0a */
extern T0* T1445c1047(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vucr0a_error */
extern void T42f359(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwab0a_error */
extern void T63f365(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwab0a */
extern T0* T1445c1053(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.position */
extern T0* T703f74(TC* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.position */
extern T0* T715f5(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vwab_error */
extern T1 T63f79(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwab0a_error */
extern void T42f365(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwab_error */
extern T1 T42f79(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_self_initializing */
extern T1 T848f45(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_self_initializing_with_type_mark */
extern T1 T848f64(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_self_initializing */
extern T1 T725f45(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_self_initializing_with_type_mark */
extern T1 T725f62(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_self_initializing */
extern T1 T724f48(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_self_initializing_with_type_mark */
extern T1 T724f65(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_self_initializing */
extern T1 T722f45(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_self_initializing_with_type_mark */
extern T1 T722f62(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_self_initializing */
extern T1 T183f73(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_self_initializing_with_type_mark */
extern T1 T183f83(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_self_initializing */
extern T1 T102f73(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_self_initializing_with_type_mark */
extern T1 T102f90(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_self_initializing */
extern T1 T199f42(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_self_initializing_with_type_mark */
extern T1 T199f53(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vevi0e_error */
extern void T63f364(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0e */
extern T0* T1445c1052(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0e_error */
extern void T42f364(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_extended_attribute */
extern void T114f1407(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_extended_attribute */
extern void T114f1433(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute */
extern void T114f1432(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_extended_attribute */
extern void T857f114(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_extended_attribute_validity */
extern void T857f182(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.process */
extern void T702f92(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_attribute */
extern void T1131f13(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_attribute */
extern void T1130f14(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_attribute */
extern void T100f133(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_attribute_validity */
extern void T100f145(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_attribute */
extern void T114f1406(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_attribute */
extern void T857f113(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_attribute_validity */
extern void T857f181(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.build_preconditions_attachment_scope */
extern void T857f88(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].wipe_out */
extern void T883f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_wipe_out */
extern void T883f57(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_wipe_out */
extern void T883f56(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_wipe_out */
extern void T883f55(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_wipe_out */
extern void T883f54(TC* ac, T0* C);
/* SPECIAL [ET_ASSERTIONS].keep_head */
extern void T1326f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTIONS].set_count */
extern void T1326f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].unset_found_item */
extern void T883f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].move_all_cursors_after */
extern void T883f53(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].set_next_cursor */
extern void T1325f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].set_after */
extern void T1325f8(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].forth */
extern void T883f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_forth */
extern void T883f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].add_traversing_cursor */
extern void T883f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].set_position */
extern void T1325f10(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].remove_traversing_cursor */
extern void T883f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_item */
extern T6 T883f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].is_last */
extern T1 T883f25(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_is_last */
extern T1 T883f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].is_empty */
extern T1 T883f26(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_for_iteration */
extern T0* T883f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_item */
extern T0* T883f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_item */
extern T0* T883f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].start */
extern void T883f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_start */
extern void T883f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_off */
extern T1 T883f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].off */
extern T1 T1325f5(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.build_assertions_attachment_scope */
extern void T857f90(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].first */
extern T0* T883f20(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].force_last */
extern void T883f39(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_put */
extern void T883f50(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_put */
extern void T883f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_put */
extern void T883f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_item */
extern T6 T883f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].hash_position */
extern T6 T883f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].resize */
extern void T883f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_resize */
extern void T883f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].special_integer_ */
extern T0* T883s36(TC* ac);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_resize */
extern void T883f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_resize */
extern void T883f60(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].aliased_resized_area */
extern T0* T1329s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTIONS].aliased_resized_area */
extern T0* T1326f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_item */
extern T0* T883f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_resize */
extern void T883f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].new_modulus */
extern T6 T883f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].new_capacity */
extern T6 T883f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_put */
extern void T883f46(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].force */
extern void T1329s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ASSERTIONS].fill_with */
extern void T1326f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTIONS].extend */
extern void T1326f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].search_position */
extern void T883f45(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.add_precursors_with_preconditions_recursive */
extern void T857f89(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.other_precursors */
extern T0* T714f27(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.other_precursors */
extern T0* T713f22(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.other_precursors */
extern T0* T712f27(TC* ac, T0* C);
/* ET_DO_PROCEDURE.other_precursors */
extern T0* T711f24(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.other_precursors */
extern T0* T710f29(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.other_precursors */
extern T0* T708f26(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.other_precursors */
extern T0* T707f29(TC* ac, T0* C);
/* ET_DO_FUNCTION.other_precursors */
extern T0* T706f28(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.other_precursors */
extern T0* T705f23(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.other_precursors */
extern T0* T704f21(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.other_precursors */
extern T0* T703f26(TC* ac, T0* C);
/* ET_ATTRIBUTE.other_precursors */
extern T0* T702f19(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_preconditions_validity */
extern void T857f76(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECONDITIONS.set_validity_error */
extern void T604f22(TC* ac, T0* C);
/* ET_PRECONDITIONS.set_validity_checked */
extern void T604f21(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.feature_checker */
extern T0* T857f48(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.validity_checked */
extern T1 T714f28(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.validity_checked */
extern T1 T713f25(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.validity_checked */
extern T1 T712f28(TC* ac, T0* C);
/* ET_DO_PROCEDURE.validity_checked */
extern T1 T711f27(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.validity_checked */
extern T1 T710f30(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.validity_checked */
extern T1 T708f27(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.validity_checked */
extern T1 T707f30(TC* ac, T0* C);
/* ET_DO_FUNCTION.validity_checked */
extern T1 T706f29(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.validity_checked */
extern T1 T705f24(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.validity_checked */
extern T1 T704f22(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.validity_checked */
extern T1 T703f27(TC* ac, T0* C);
/* ET_ATTRIBUTE.validity_checked */
extern T1 T702f20(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_assertions_validity */
extern void T237f38(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_IMPLEMENTATION_CHECKER.flat_dbc_mode */
extern T1 T237f18(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_postconditions_validity */
extern void T857f86(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_POSTCONDITIONS.set_validity_error */
extern void T601f23(TC* ac, T0* C);
/* ET_POSTCONDITIONS.set_validity_checked */
extern void T601f22(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.set_precursor_procedures */
extern void T857f85(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_validity_checked */
extern void T714f107(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_validity_checked */
extern void T713f97(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_validity_checked */
extern void T712f103(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_validity_checked */
extern void T711f100(TC* ac, T0* C);
/* ET_PROCEDURE_LIST.item */
extern T0* T770f7(TC* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_query_validity */
extern void T237f35(TC* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_QUERY].wipe_out */
extern void T1140f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].slots_wipe_out */
extern void T1140f51(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].clashes_wipe_out */
extern void T1140f50(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].key_storage_wipe_out */
extern void T1140f49(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].item_storage_wipe_out */
extern void T1140f48(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].move_all_cursors_after */
extern void T1140f47(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_next_cursor */
extern void T1721f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_after */
extern void T1721f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].forth */
extern void T1140f37(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_forth */
extern void T1140f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].add_traversing_cursor */
extern void T1140f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_position */
extern void T1721f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].remove_traversing_cursor */
extern void T1140f52(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_query_validity */
extern void T237f39(TC* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_QUERY].item_for_iteration */
extern T0* T1140f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_item */
extern T0* T1140f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].after */
extern T1 T1140f34(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_after */
extern T1 T1140f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].after */
extern T1 T1721f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].start */
extern void T1140f36(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_start */
extern void T1140f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].cursor_off */
extern T1 T1140f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].off */
extern T1 T1721f5(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].is_empty */
extern T1 T1140f21(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.set_precursor_queries */
extern void T857f83(TC* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.reset_validity_checked */
extern void T601f21(TC* ac, T0* C);
/* ET_PRECONDITIONS.reset_validity_checked */
extern void T604f20(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_validity_checked */
extern void T710f110(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_validity_checked */
extern void T708f100(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_validity_checked */
extern void T707f106(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_validity_checked */
extern void T706f103(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_validity_checked */
extern void T705f98(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_validity_checked */
extern void T704f95(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_validity_checked */
extern void T703f103(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_validity_checked */
extern void T702f91(TC* ac, T0* C);
/* ET_SUPPLIER_BUILDER.set */
extern void T1141f6(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IMPLEMENTATION_CHECKER.suppliers_enabled */
extern T1 T237f16(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_signatures_validity */
extern void T237f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].wipe_out */
extern void T1114f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_wipe_out */
extern void T1114f65(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1114f64(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1114f63(TC* ac, T0* C);
/* SPECIAL [ET_FEATURE_NAME].keep_head */
extern void T1676f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME].set_count */
extern void T1676f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1114f62(TC* ac, T0* C);
/* SPECIAL [ET_FLATTENED_FEATURE].keep_head */
extern void T1673f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].set_count */
extern void T1673f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].unset_found_item */
extern void T1114f61(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1114f60(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_next_cursor */
extern void T1672f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_after */
extern void T1672f13(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].forth */
extern void T1114f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_forth */
extern void T1114f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1114f68(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_position */
extern void T1672f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1114f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_item */
extern T6 T1114f26(TC* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_signature_validity */
extern void T237f34(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_validity */
extern void T1127f12(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1703f10(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1704f11(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1704f12(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1703f12(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1704f13(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set */
extern void T1703f11(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_SIGNATURE_CHECKER.check_selected_signature_validity */
extern void T1127f15(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1127f15ot1(TC* ac, T0* a1);
extern T1 T1127f15ot2(TC* ac, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_actual_parameters_unfolded */
extern void T1127f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SIGNATURE_CHECKER.tokens */
extern T0* T1127s6(TC* ac);
/* ET_NULL_ERROR_HANDLER.report_vdrd2c_error */
extern void T63f564(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2c */
extern T0* T1445c1252(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T63f170(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd2c_error */
extern void T42f564(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T42f170(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2d_error */
extern void T63f563(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2d */
extern T0* T1445c1251(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.name */
extern T0* T1561f13(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdrd2d_error */
extern void T42f563(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1703f6(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1703f9(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1704f10(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1704f6(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1703f7(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1704f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1703c8(TC* ac, T0* a1);
/* ET_INHERITED_FEATURE.adapted_feature */
extern T0* T1564f12(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.adapted_feature */
extern T0* T1566f11(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_adapted_feature */
extern T0* T714f67(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_adapted_feature */
extern T0* T713f58(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_adapted_feature */
extern T0* T712f61(TC* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_adapted_feature */
extern T0* T711f59(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_adapted_feature */
extern T0* T710f74(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_adapted_feature */
extern T0* T708f65(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_adapted_feature */
extern T0* T707f68(TC* ac, T0* C);
/* ET_DO_FUNCTION.flattened_adapted_feature */
extern T0* T706f66(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_adapted_feature */
extern T0* T705f67(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_adapted_feature */
extern T0* T704f66(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_adapted_feature */
extern T0* T703f66(TC* ac, T0* C);
/* ET_ATTRIBUTE.flattened_adapted_feature */
extern T0* T702f61(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.is_adapted */
extern T1 T1564f17(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_adapted */
extern T1 T1566f16(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_adapted */
extern T1 T714f72(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_adapted */
extern T1 T713f63(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_adapted */
extern T1 T712f66(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_adapted */
extern T1 T711f64(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_adapted */
extern T1 T710f79(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_adapted */
extern T1 T708f70(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_adapted */
extern T1 T707f73(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_adapted */
extern T1 T706f71(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_adapted */
extern T1 T705f72(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_adapted */
extern T1 T704f71(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_adapted */
extern T1 T703f71(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_adapted */
extern T1 T702f66(TC* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_joined_signature_validity */
extern void T1127f14(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0b_error */
extern void T63f562(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_VALIDITY_ERROR.make_vdjr0b */
extern T0* T1445c1250(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T63f171(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr0b_error */
extern void T42f562(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T42f171(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr0a_error */
extern void T63f561(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0a */
extern T0* T1445c1249(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0a_error */
extern void T42f561(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0c_error */
extern void T63f560(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0c */
extern T0* T1445c1248(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0c_error */
extern void T42f560(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INHERITED_FEATURE.inherited_feature */
extern T0* T1564f16(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.inherited_feature */
extern T0* T1566f15(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_inherited_feature */
extern T0* T714f71(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_inherited_feature */
extern T0* T713f62(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_inherited_feature */
extern T0* T712f65(TC* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_inherited_feature */
extern T0* T711f63(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_inherited_feature */
extern T0* T710f78(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_inherited_feature */
extern T0* T708f69(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_inherited_feature */
extern T0* T707f72(TC* ac, T0* C);
/* ET_DO_FUNCTION.flattened_inherited_feature */
extern T0* T706f70(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_inherited_feature */
extern T0* T705f71(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_inherited_feature */
extern T0* T704f70(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_inherited_feature */
extern T0* T703f70(TC* ac, T0* C);
/* ET_ATTRIBUTE.flattened_inherited_feature */
extern T0* T702f65(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.is_inherited */
extern T1 T1564s15(TC* ac);
/* ET_REDECLARED_FEATURE.is_inherited */
extern T1 T1566f14(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_inherited */
extern T1 T714f70(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_inherited */
extern T1 T713f61(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_inherited */
extern T1 T712f64(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_inherited */
extern T1 T711f62(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_inherited */
extern T1 T710f77(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_inherited */
extern T1 T708f68(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_inherited */
extern T1 T707f71(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_inherited */
extern T1 T706f69(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_inherited */
extern T1 T705f70(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_inherited */
extern T1 T704f69(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_inherited */
extern T1 T703f69(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_inherited */
extern T1 T702f64(TC* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_redeclared_signature_validity */
extern void T1127f13(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1127f13ot1(TC* ac, T0* a1);
extern T1 T1127f13ot2(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd6b_error */
extern void T63f559(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6b */
extern T0* T1445c1247(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T63f65(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd6b_error */
extern void T42f559(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T42f65(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2a_error */
extern void T63f558(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2a */
extern T0* T1445c1246(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2a_error */
extern void T42f558(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd2b_error */
extern void T63f557(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2b */
extern T0* T1445c1245(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2b_error */
extern void T42f557(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INHERITED_FEATURE.redeclared_feature */
extern T0* T1564f14(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.redeclared_feature */
extern T0* T1566f13(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_redeclared_feature */
extern T0* T714f69(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_redeclared_feature */
extern T0* T713f60(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_redeclared_feature */
extern T0* T712f63(TC* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_redeclared_feature */
extern T0* T711f61(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_redeclared_feature */
extern T0* T710f76(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_redeclared_feature */
extern T0* T708f67(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_redeclared_feature */
extern T0* T707f70(TC* ac, T0* C);
/* ET_DO_FUNCTION.flattened_redeclared_feature */
extern T0* T706f68(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T705f69(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T704f68(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T703f68(TC* ac, T0* C);
/* ET_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T702f63(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.is_redeclared */
extern T1 T1564f13(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_redeclared */
extern T1 T1566s12(TC* ac);
/* ET_EXTERNAL_PROCEDURE.is_flattened_redeclared */
extern T1 T714f68(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_redeclared */
extern T1 T713f59(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_redeclared */
extern T1 T712f62(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_redeclared */
extern T1 T711f60(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_redeclared */
extern T1 T710f75(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_redeclared */
extern T1 T708f66(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_redeclared */
extern T1 T707f69(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_redeclared */
extern T1 T706f67(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_redeclared */
extern T1 T705f68(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_redeclared */
extern T1 T704f67(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_redeclared */
extern T1 T703f67(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_redeclared */
extern T1 T702f62(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_for_iteration */
extern T0* T1114f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_item */
extern T0* T1114f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_item */
extern T0* T1114f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T1114f35(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_after */
extern T1 T1114f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T1672f8(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].start */
extern void T1114f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_start */
extern void T1114f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_off */
extern T1 T1114f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].off */
extern T1 T1672f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].is_empty */
extern T1 T1114f31(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.resolve_feature_adaptations */
extern void T237f33(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.resolve_inherited_features */
extern void T237f37(TC* ac, T0* C, T0* a1);
extern T1 T237f37ot1(TC* ac, T0* a1);
/* ET_INHERITED_FEATURE.set_flattened_parent */
extern void T1564f33(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_flattened_feature */
extern void T1564f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found_item */
extern T0* T1114f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found */
extern T1 T1114f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search */
extern void T1114f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search_position */
extern void T1114f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].hash_position */
extern T6 T1114f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_item */
extern T0* T1114f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_item */
extern T6 T1114f23(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1122f23(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replication */
extern void T1122f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].wipe_out */
extern void T1690f45(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_wipe_out */
extern void T1690f57(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_wipe_out */
extern void T1690f56(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_wipe_out */
extern void T1690f55(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_wipe_out */
extern void T1690f54(TC* ac, T0* C);
/* SPECIAL [ET_REPLICABLE_FEATURE].keep_head */
extern void T1972f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].set_count */
extern void T1972f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].unset_found_item */
extern void T1690f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].move_all_cursors_after */
extern void T1690f52(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_next_cursor */
extern void T1971f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_after */
extern void T1971f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].forth */
extern void T1690f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_forth */
extern void T1690f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].add_traversing_cursor */
extern void T1690f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_position */
extern void T1971f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].remove_traversing_cursor */
extern void T1690f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_item */
extern T6 T1690f23(TC* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.selected_count */
extern T6 T1566f25(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.has_selected_feature */
extern T1 T1566f18(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.selected_feature */
extern T0* T1566f17(TC* ac, T0* C);
/* ET_PARENT_FEATURE.has_select */
extern T1 T1561f22(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.selected_count */
extern T6 T1564f27(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.has_selected_feature */
extern T1 T1564f19(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.selected_feature */
extern T0* T1564f18(TC* ac, T0* C);
/* ET_REPLICATED_FEATURE.selected_count */
extern T6 T1692f2(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replicated_feature */
extern void T1122f34(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vmrc2b_error */
extern void T63f555(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2b */
extern T0* T1445c1243(TC* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].after */
extern T1 T1979f4(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1979f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1694f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_position */
extern void T1979f13(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1694f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1979f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1694f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1979f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_item */
extern T0* T1694f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1979f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1694f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_after */
extern void T1979f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1694f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1979f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].before */
extern T1 T1979f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1694f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1979c9(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].first */
extern T0* T1694f7(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T63f168(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmrc2b_error */
extern void T42f555(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T42f168(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.add_replicated_feature */
extern void T1566f33(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].force_last */
extern void T1704f8(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].put_right */
extern void T2230f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].make */
extern T0* T2230c3(TC* ac, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1704c7(TC* ac);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].set_internal_cursor */
extern void T1704f9(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.add_replicated_feature */
extern void T1564f37(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_seed */
extern T1 T1561f23(TC* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_selected */
extern void T1566f35(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.set_selected */
extern void T1564f39(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.set_replicated */
extern void T1566f34(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.put */
extern void T1271f13(TC* ac, T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].resize_with_default */
extern void T1035s4(TC* ac, T0* a1, T6 a2, T6 a3, T6 a4);
/* ARRAY [INTEGER_32].conservative_resize_with_default */
extern void T940f18(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ET_FEATURE_IDS.integer_array_ */
extern T0* T1271s5(TC* ac);
/* KL_ARRAY_ROUTINES [INTEGER_32].default_create */
extern T0* T1035c2(TC* ac);
/* ET_FEATURE_IDS.make */
extern T0* T1271c9(TC* ac, T6 a1);
/* ET_INHERITED_FEATURE.set_replicated */
extern void T1564f38(TC* ac, T0* C, T6 a1);
/* ET_REPLICATED_FEATURE.first_feature */
extern T0* T1692f5(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].first */
extern T0* T1693f8(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmrc2a_error */
extern void T63f554(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2a */
extern T0* T1445c1242(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vmrc2a_error */
extern void T42f554(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1122f18(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1122f27(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].forth */
extern void T1693f16(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_forth */
extern void T1693f18(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].add_traversing_cursor */
extern void T1693f19(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set_next_cursor */
extern void T1975f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].remove_traversing_cursor */
extern void T1693f20(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set */
extern void T1975f8(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].put_last */
extern void T1694f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].force */
extern void T1977s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PARENT_FEATURE].fill_with */
extern void T1978f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_FEATURE].extend */
extern void T1978f7(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.seeded_feature */
extern T0* T1566f26(TC* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.seeded_feature */
extern T0* T1564f28(TC* ac, T0* C, T6 a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].item_for_iteration */
extern T0* T1693f7(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_item */
extern T0* T1693f10(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].after */
extern T1 T1693f6(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_after */
extern T1 T1693f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].start */
extern void T1693f15(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_start */
extern void T1693f17(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_off */
extern T1 T1693f11(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].off */
extern T1 T1975f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1694c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].set_internal_cursor */
extern void T1694f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].make */
extern T0* T1977s1(TC* ac, T6 a1);
/* SPECIAL [ET_PARENT_FEATURE].make_empty */
extern T0* T1978c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].default_create */
extern T0* T1977c2(TC* ac);
/* ET_REDECLARED_FEATURE.replicated_feature */
extern T0* T1566f23(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.replicated_feature */
extern T0* T1564f25(TC* ac, T0* C);
/* ET_REPLICATED_FEATURE.replicated_feature */
extern T0* T1692f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_for_iteration */
extern T6 T1690f33(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_key */
extern T6 T1690f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1690f32(TC* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.has_replication */
extern T1 T1566f22(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.has_replication */
extern T1 T1564f24(TC* ac, T0* C);
/* ET_REPLICATED_FEATURE.has_replication */
extern T1 T1692s3(TC* ac);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_for_iteration */
extern T0* T1690f26(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_item */
extern T0* T1690f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1690f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].after */
extern T1 T1690f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_after */
extern T1 T1690f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].after */
extern T1 T1971f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].start */
extern void T1690f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_start */
extern void T1690f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_off */
extern T1 T1690f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].off */
extern T1 T1971f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].is_empty */
extern T1 T1690f28(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.record_replicable_feature */
extern void T1122f33(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].force_new */
extern void T1690f48(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_put */
extern void T1690f63(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_put */
extern void T1690f59(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].force */
extern void T1974s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].fill_with */
extern void T1972f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].extend */
extern void T1972f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_put */
extern void T1690f62(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_put */
extern void T1690f61(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_item */
extern T6 T1690f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].hash_position */
extern T6 T1690f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].resize */
extern void T1690f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_resize */
extern void T1690f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1690s40(TC* ac);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_resize */
extern void T1690f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_resize */
extern void T1690f68(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T1974s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T1972f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_resize */
extern void T1690f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_modulus */
extern T6 T1690f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_capacity */
extern T6 T1690f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].replace_found_item */
extern void T1690f47(TC* ac, T0* C, T0* a1);
/* ET_REPLICATED_FEATURE.make */
extern T0* T1692c6(TC* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].make */
extern T0* T1693c12(TC* ac);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].set_internal_cursor */
extern void T1693f14(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].new_cursor */
extern T0* T1693f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].make */
extern T0* T1975c7(TC* ac, T0* a1);
/* ET_REDECLARED_FEATURE.first_feature */
extern T0* T1566f24(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.first_feature */
extern T0* T1564f26(TC* ac, T0* C);
/* ET_REPLICATED_FEATURE.put_feature */
extern void T1692f7(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].force_last */
extern void T1693f13(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].put_right */
extern void T1976f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].make */
extern T0* T1976c3(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found_item */
extern T0* T1690f35(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found */
extern T1 T1690f34(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search */
extern void T1690f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search_position */
extern void T1690f58(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1122f25(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vmss1a_error */
extern void T63f547(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmss1a */
extern T0* T1445c1235(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T63f161(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss1a_error */
extern void T42f547(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T42f161(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs1a_error */
extern void T63f546(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs1a */
extern T0* T1445c1234(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T63f160(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs1a_error */
extern void T42f546(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T42f160(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].wipe_out */
extern void T1689f49(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_wipe_out */
extern void T1689f62(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1689f61(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1689f60(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1689f59(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].unset_found_item */
extern void T1689f58(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1689f57(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_next_cursor */
extern void T1969f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_after */
extern void T1969f9(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].forth */
extern void T1689f48(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_forth */
extern void T1689f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1689f72(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_position */
extern void T1969f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1689f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_item */
extern T6 T1689f26(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdus1a_error */
extern void T63f545(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus1a */
extern T0* T1445c1233(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T63f159(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus1a_error */
extern void T42f545(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T42f159(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_for_iteration */
extern T0* T1689f40(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_key */
extern T0* T1689f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_item */
extern T0* T1689f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_for_iteration */
extern T1 T1689f38(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_item */
extern T1 T1689f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_item */
extern T1 T1689f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].after */
extern T1 T1689f37(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_after */
extern T1 T1689f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].after */
extern T1 T1969f4(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].start */
extern void T1689f47(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_start */
extern void T1689f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_off */
extern T1 T1689f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].off */
extern T1 T1969f7(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].is_empty */
extern T1 T1689f35(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].wipe_out */
extern void T1688f43(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_wipe_out */
extern void T1688f60(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_wipe_out */
extern void T1688f59(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1688f58(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1688f57(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].unset_found_item */
extern void T1688f50(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].move_all_cursors_after */
extern void T1688f56(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_next_cursor */
extern void T1968f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_after */
extern void T1968f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].forth */
extern void T1688f42(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_forth */
extern void T1688f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].add_traversing_cursor */
extern void T1688f74(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_position */
extern void T1968f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1688f73(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_item */
extern T6 T1688f22(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel2a_error */
extern void T63f544(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vlel2a */
extern T0* T1445c1232(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T63f158(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel2a_error */
extern void T42f544(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T42f158(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_for_iteration */
extern T0* T1688f31(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_item */
extern T0* T1688f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_item */
extern T0* T1688f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].after */
extern T1 T1688f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_after */
extern T1 T1688f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].after */
extern T1 T1968f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].start */
extern void T1688f41(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_start */
extern void T1688f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_off */
extern T1 T1688f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].off */
extern T1 T1968f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].wipe_out */
extern void T1136f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_wipe_out */
extern void T1136f57(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1136f56(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1136f55(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1136f54(TC* ac, T0* C);
/* SPECIAL [ET_RENAME].keep_head */
extern void T1712f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_RENAME].set_count */
extern void T1712f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].unset_found_item */
extern void T1136f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1136f52(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_next_cursor */
extern void T1711f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_after */
extern void T1711f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].forth */
extern void T1136f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_forth */
extern void T1136f68(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1136f75(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_position */
extern void T1711f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1136f74(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_item */
extern T6 T1136f23(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc1a_error */
extern void T63f543(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vhrc1a */
extern T0* T1445c1231(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T63f157(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc1a_error */
extern void T42f543(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T42f157(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_for_iteration */
extern T0* T1136f34(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_item */
extern T0* T1136f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_item */
extern T0* T1136f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].after */
extern T1 T1136f33(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_after */
extern T1 T1136f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].after */
extern T1 T1711f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].start */
extern void T1136f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_start */
extern void T1136f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_off */
extern T1 T1136f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].off */
extern T1 T1711f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].put_last_new */
extern void T1114f75(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_put */
extern void T1114f86(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_put */
extern void T1114f85(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].force */
extern void T1677s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].fill_with */
extern void T1673f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].extend */
extern void T1673f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_put */
extern void T1114f79(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_put */
extern void T1114f80(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].compress */
extern void T1114f84(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_keep_head */
extern void T1114f89(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_keep_head */
extern void T1114f88(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors */
extern void T1114f87(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1122f21(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_next */
extern void T1564f31(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.make */
extern T0* T1564c29(TC* ac, T0* a1);
/* ET_PARENT_FEATURE.other_seeds */
extern T0* T1561f12(TC* ac, T0* C);
/* ET_PARENT_FEATURE.first_seed */
extern T6 T1561f11(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.reset */
extern void T1564f30(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.put_parent_feature */
extern void T1566f30(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_IDS.cloned_object */
extern T0* T1271f4(TC* ac, T0* C);
/* ET_FEATURE_IDS.twin */
extern T0* T1271f3(TC* ac, T0* C);
/* ET_FEATURE_IDS.copy */
extern void T1271f12(TC* ac, T0* C, T0* a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].cloned_array */
extern T0* T1035s1(TC* ac, T0* a1);
/* ARRAY [INTEGER_32].twin */
extern T0* T940f9(TC* ac, T0* C);
/* ARRAY [INTEGER_32].copy */
extern void T940f19(TC* ac, T0* C, T0* a1);
/* SPECIAL [INTEGER_32].twin */
extern T0* T154f7(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.has_seed */
extern T1 T1566f21(TC* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.is_other_seeds_shared */
extern T1 T1566f20(TC* ac, T0* C);
/* ET_PARENT_FEATURE.set_merged_feature */
extern void T1561f33(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_has_other_effective */
extern void T1561f32(TC* ac, T0* C, T1 a1);
/* ET_PARENT_FEATURE.set_has_other_deferred */
extern void T1561f31(TC* ac, T0* C, T1 a1);
/* ET_INHERITED_FEATURE.put_parent_feature */
extern void T1564f34(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.has_seed */
extern T1 T1564f23(TC* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.is_other_seeds_shared */
extern T1 T1564f21(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].replace_found_item */
extern void T1114f76(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1122f20(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.set_next */
extern void T1566f29(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.make */
extern T0* T1566c27(TC* ac, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.reset */
extern void T1566f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INHERITED_FEATURE.immediate_feature */
extern T0* T1564f11(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.immediate_feature */
extern T0* T1566f10(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_immediate_feature */
extern T0* T714f66(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_immediate_feature */
extern T0* T713f57(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_immediate_feature */
extern T0* T712f60(TC* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_immediate_feature */
extern T0* T711f58(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_immediate_feature */
extern T0* T710f73(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_immediate_feature */
extern T0* T708f64(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_immediate_feature */
extern T0* T707f67(TC* ac, T0* C);
/* ET_DO_FUNCTION.flattened_immediate_feature */
extern T0* T706f65(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_immediate_feature */
extern T0* T705f66(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_immediate_feature */
extern T0* T704f65(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_immediate_feature */
extern T0* T703f65(TC* ac, T0* C);
/* ET_ATTRIBUTE.flattened_immediate_feature */
extern T0* T702f60(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.is_immediate */
extern T1 T1564f10(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_immediate */
extern T1 T1566f9(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_immediate */
extern T1 T714f65(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_immediate */
extern T1 T713f56(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_immediate */
extern T1 T712f59(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_immediate */
extern T1 T711f57(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_immediate */
extern T1 T710f72(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_immediate */
extern T1 T708f63(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_immediate */
extern T1 T707f66(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_immediate */
extern T1 T706f64(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_immediate */
extern T1 T705f65(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_immediate */
extern T1 T704f64(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_immediate */
extern T1 T703f64(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_immediate */
extern T1 T702f59(TC* ac, T0* C);
/* ET_PARENT_FEATURE.set_select_name */
extern void T1561f28(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_redefine_name */
extern void T1561f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].replace_found_item */
extern void T1689f46(TC* ac, T0* C, T1 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_put */
extern void T1689f54(TC* ac, T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_item */
extern T1 T1689f25(TC* ac, T0* C);
/* ET_PARENT_FEATURE.set_undefine_name */
extern void T1561f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_key */
extern T0* T1689f21(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found */
extern T1 T1689f42(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search */
extern void T1689f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search_position */
extern void T1689f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].hash_position */
extern T6 T1689f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_item */
extern T6 T1689f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_found_item */
extern void T1688f40(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_position */
extern void T1688f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_put */
extern void T1688f72(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_put */
extern void T1688f67(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_keep_head */
extern void T1688f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_keep_head */
extern void T1688f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_put */
extern void T1688f63(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_put */
extern void T1688f62(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].move_cursors_forth */
extern void T1688f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].search_position */
extern void T1688f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1688f68(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_equality_tester */
extern T0* T1688f33(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_item */
extern T6 T1688f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].hash_position */
extern T6 T1688f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_item */
extern T0* T1688f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].found_item */
extern T0* T1688f21(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].found */
extern T1 T1688f17(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].search */
extern void T1688f39(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.set_prefix */
extern void T716f57(TC* ac, T0* C);
/* ET_ALIAS_NAME.set_prefix */
extern void T364f110(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefixable */
extern T1 T716f14(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefixable */
extern T1 T364f12(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix */
extern T1 T364f10(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_prefixable */
extern T1 T710f37(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_prefixable */
extern T1 T708f33(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_prefixable */
extern T1 T707f36(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_prefixable */
extern T1 T706f35(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_prefixable */
extern T1 T705f31(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_prefixable */
extern T1 T704f29(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_prefixable */
extern T1 T703f34(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_prefixable */
extern T1 T702f27(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.set_infix */
extern void T716f58(TC* ac, T0* C);
/* ET_ALIAS_NAME.set_infix */
extern void T364f111(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infixable */
extern T1 T716f15(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infixable */
extern T1 T364f13(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix */
extern T1 T364f11(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_infixable */
extern T1 T710f38(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_infixable */
extern T1 T708f34(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_infixable */
extern T1 T707f37(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_infixable */
extern T1 T706f36(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_infixable */
extern T1 T705f32(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_infixable */
extern T1 T704f30(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_infixable */
extern T1 T703f35(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_infixable */
extern T1 T702f28(TC* ac, T0* C);
/* ET_ALIAS_NAME_LIST.item */
extern T0* T367f4(TC* ac, T0* C, T6 a1);
/* ET_PARENT_FEATURE.set_new_name */
extern void T1561f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_found_item */
extern void T1136f47(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_position */
extern void T1136f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_put */
extern void T1136f65(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_put */
extern void T1136f64(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_RENAME].force */
extern void T1715s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_RENAME].fill_with */
extern void T1712f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].extend */
extern void T1712f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_keep_head */
extern void T1136f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_keep_head */
extern void T1136f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_put */
extern void T1136f60(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_put */
extern void T1136f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_cursors_forth */
extern void T1136f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search_position */
extern void T1136f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1136f70(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_item */
extern T6 T1136f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].hash_position */
extern T6 T1136f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_item */
extern T0* T1136f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found_item */
extern T0* T1136f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found */
extern T1 T1136f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search */
extern void T1136f45(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1122f19(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_next */
extern void T1561f30(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.make */
extern T0* T1561c24(TC* ac, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.reset */
extern void T1561f29(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].resize */
extern void T1114f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_resize */
extern void T1114f83(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].special_integer_ */
extern T0* T1114s43(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_resize */
extern void T1114f82(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_resize */
extern void T1114f81(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1677s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1673f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_resize */
extern void T1114f78(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_modulus */
extern T6 T1114f37(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_select_table */
extern void T1122f32(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss2a_error */
extern void T63f553(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vmss2a */
extern T0* T1445c1241(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T63f167(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss2a_error */
extern void T42f553(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T42f167(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].put_new */
extern void T1689f51(TC* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_put */
extern void T1689f69(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_put */
extern void T1689f64(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_put */
extern void T1689f65(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.feature_name */
extern T0* T195f6(TC* ac, T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.item */
extern T0* T195f7(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].resize */
extern void T1689f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_resize */
extern void T1689f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].special_integer_ */
extern T0* T1689s39(TC* ac);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_resize */
extern void T1689f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_resize */
extern void T1689f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_resize */
extern void T1689f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_modulus */
extern T6 T1689f24(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_redefine_table */
extern void T1122f31(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs3a_error */
extern void T63f552(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdrs3a */
extern T0* T1445c1240(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T63f166(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs3a_error */
extern void T42f552(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T42f166(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_undefine_table */
extern void T1122f30(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus4a_error */
extern void T63f551(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdus4a */
extern T0* T1445c1239(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T63f165(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus4a_error */
extern void T42f551(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T42f165(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].is_empty */
extern T1 T1688f32(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_export_table */
extern void T1122f29(TC* ac, T0* C, T0* a1);
extern T1 T1122f29ot1(TC* ac, T0* a1);
extern T1 T1122f29ot2(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vlel3a_error */
extern void T63f550(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel3a */
extern T0* T1445c1238(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T63f164(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel3a_error */
extern void T42f550(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T42f164(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].put_new */
extern void T1688f45(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.feature_name */
extern T0* T483f5(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_EXPORT.item */
extern T0* T483f6(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].resize */
extern void T1688f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_resize */
extern void T1688f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].special_integer_ */
extern T0* T1688s35(TC* ac);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_resize */
extern void T1688f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_resize */
extern void T1688f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_resize */
extern void T1688f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].new_modulus */
extern T6 T1688f36(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel1a_error */
extern void T63f549(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel1a */
extern T0* T1445c1237(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ALL_EXPORT.position */
extern T0* T697f4(TC* ac, T0* C);
/* ET_CLIENTS.position */
extern T0* T267f13(TC* ac, T0* C);
/* ET_CLIENT.position */
extern T0* T189f5(TC* ac, T0* C);
/* ET_CLIENTS.first */
extern T0* T267f15(TC* ac, T0* C);
/* ET_CLIENTS.is_empty */
extern T1 T267f14(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T63f163(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel1a_error */
extern void T42f549(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T42f163(TC* ac, T0* C, T0* a1);
/* ET_EXPORT_LIST.item */
extern T0* T194f6(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].is_empty */
extern T1 T1136f30(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_rename_table */
extern void T1122f28(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc2a_error */
extern void T63f548(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc2a */
extern T0* T1445c1236(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T63f162(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc2a_error */
extern void T42f548(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T42f162(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.same_extended_feature_name */
extern T1 T303f81(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.is_empty */
extern T1 T367f7(TC* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.same_extended_feature_name */
extern T1 T715f3(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.same_alias_names */
extern T1 T367f8(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.has_alias_name */
extern T1 T367f10(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.head_has_alias_name */
extern T1 T367f5(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_ALIAS_FREE_NAME.same_alias_name */
extern T1 T716f17(TC* ac, T0* C, T0* a1);
extern T1 T716f17ot1(TC* ac, T0* a1);
/* ET_ALIAS_NAME.same_alias_name */
extern T1 T364f15(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.first */
extern T0* T367f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].put_new */
extern void T1136f46(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_RENAME_LIST.rename_pair */
extern T0* T193f6(TC* ac, T0* C, T6 a1);
/* ET_RENAME_LIST.item */
extern T0* T193f7(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].resize */
extern void T1136f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_resize */
extern void T1136f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].special_integer_ */
extern T0* T1136s35(TC* ac);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_resize */
extern void T1136f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_resize */
extern void T1136f61(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].aliased_resized_area */
extern T0* T1715s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME].aliased_resized_area */
extern T0* T1712f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_resize */
extern void T1136f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_modulus */
extern T6 T1136f21(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1122f24(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn0a_error */
extern void T63f542(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0a */
extern T0* T1445c1230(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T63f58(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn0a_error */
extern void T42f542(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T42f58(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.flattened_feature */
extern T0* T1564f3(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.flattened_feature */
extern T0* T1566f2(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_feature */
extern T0* T714f64(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_feature */
extern T0* T713f55(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_feature */
extern T0* T712f58(TC* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_feature */
extern T0* T711f56(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_feature */
extern T0* T710f71(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_feature */
extern T0* T708f62(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_feature */
extern T0* T707f65(TC* ac, T0* C);
/* ET_DO_FUNCTION.flattened_feature */
extern T0* T706f63(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_feature */
extern T0* T705f64(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_feature */
extern T0* T704f63(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_feature */
extern T0* T703f63(TC* ac, T0* C);
/* ET_ATTRIBUTE.flattened_feature */
extern T0* T702f58(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1123f20(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].wipe_out */
extern void T1698f36(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1698f45(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1698f44(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1698f43(TC* ac, T0* C);
/* SPECIAL [ET_DOTNET_FEATURE].keep_head */
extern void T1980f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].set_count */
extern void T1980f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1698f42(TC* ac, T0* C);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].keep_head */
extern void T1983f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].set_count */
extern void T1983f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].unset_found_item */
extern void T1698f41(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1698f40(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_next_cursor */
extern void T1986f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_after */
extern void T1986f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].wipe_out */
extern void T1696f33(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1696f47(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1696f46(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1696f45(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1696f44(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].unset_found_item */
extern void T1696f41(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1696f43(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1981f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_after */
extern void T1981f7(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_any_features */
extern void T1123f23(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1123f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].has */
extern T1 T1114f36(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1123f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_system */
extern T0* T1123f15(TC* ac, T0* C);
/* ET_ECF_LIBRARY.system_object_parents */
extern T0* T802f88(TC* ac, T0* C);
/* ET_ECF_SYSTEM.system_object_parents */
extern T0* T87f91(TC* ac, T0* C);
/* ET_SYSTEM.system_object_parents */
extern T0* T50f90(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_universe */
extern T0* T1123f13(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features_from_parents */
extern void T1123f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1123f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1123f14(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1123f25(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].forth */
extern void T1700f15(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_forth */
extern void T1700f17(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].add_traversing_cursor */
extern void T1700f18(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1988f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].remove_traversing_cursor */
extern void T1700f19(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set */
extern void T1988f8(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].item_for_iteration */
extern T0* T1700f7(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_item */
extern T0* T1700f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].after */
extern T1 T1700f6(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_after */
extern T1 T1700f8(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].start */
extern void T1700f14(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_start */
extern void T1700f16(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_off */
extern T1 T1700f10(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].off */
extern T1 T1988f6(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found_item */
extern T0* T1698f24(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1698f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found */
extern T1 T1698f29(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search */
extern void T1698f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search_position */
extern void T1698f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].hash_position */
extern T6 T1698f22(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.test */
extern T1 T1695f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1698f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_item */
extern T6 T1698f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_item */
extern T6 T1698f23(TC* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_feature */
extern void T1123f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1123f18(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found_item */
extern T0* T1696f24(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1696f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found */
extern T1 T1696f26(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search */
extern void T1696f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search_position */
extern void T1696f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].hash_position */
extern T6 T1696f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1696f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_item */
extern T6 T1696f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_equality_tester */
extern T0* T1696f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_item */
extern T6 T1696f20(TC* ac, T0* C, T6 a1);
/* ET_PARENT_LIST.has_conforming_parent */
extern T1 T181f10(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1123f21(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_feature */
extern void T1123f24(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].force_last */
extern void T1696f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_put */
extern void T1696f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_put */
extern void T1696f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_capacity */
extern T6 T1696f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_put */
extern void T1696f55(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].force */
extern void T1982s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].fill_with */
extern void T1980f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].extend */
extern void T1980f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].force_last_new */
extern void T1698f38(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_put */
extern void T1698f51(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_put */
extern void T1698f50(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].force */
extern void T1987s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].fill_with */
extern void T1983f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].extend */
extern void T1983f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_put */
extern void T1698f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_put */
extern void T1698f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].resize */
extern void T1698f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_resize */
extern void T1698f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1698s32(TC* ac);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_resize */
extern void T1698f55(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T1982s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T1980f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_resize */
extern void T1698f54(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T1987s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T1983f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_resize */
extern void T1698f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_modulus */
extern T6 T1698f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_capacity */
extern T6 T1698f21(TC* ac, T0* C, T6 a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].make */
extern T0* T1700c11(TC* ac);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1700f13(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1700f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1988c7(TC* ac, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].force_last */
extern void T1700f12(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].put_right */
extern void T1989f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].make */
extern T0* T1989c3(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].force_last_new */
extern void T1114f77(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_capacity */
extern T6 T1114f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].resize */
extern void T1696f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_resize */
extern void T1696f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1696s27(TC* ac);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_resize */
extern void T1696f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_resize */
extern void T1696f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_resize */
extern void T1696f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_modulus */
extern T6 T1696f28(TC* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_parents_validity */
extern void T237f28(TC* ac, T0* C);
/* ET_PARENT_CHECKER3.check_parents_validity */
extern void T1138f7(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.pre_action */
extern void T237f27(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.report_class_postponed */
extern void T66f110(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_class_postponed */
extern void T853f112(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.process_parent_class */
extern void T237f26(TC* ac, T0* C, T0* a1);
/* ET_PARENT_LIST.parent */
extern T0* T181f7(TC* ac, T0* C, T6 a1);
/* ET_PARENT.parent */
extern T0* T180f10(TC* ac, T0* C);
/* ET_PARENT_LIST.item */
extern T0* T181f9(TC* ac, T0* C, T6 a1);
/* ET_CLASS.parents */
extern T0* T70f159(TC* ac, T0* C, T6 a1);
/* ET_CLASS.implicit_parent_clause */
extern T0* T70f175(TC* ac, T0* C);
/* ET_ECF_LIBRARY.any_parents */
extern T0* T802f23(TC* ac, T0* C);
/* ET_ECF_SYSTEM.any_parents */
extern T0* T87f26(TC* ac, T0* C);
/* ET_SYSTEM.any_parents */
extern T0* T50f25(TC* ac, T0* C);
/* ET_CLASS.parents_count */
extern T6 T70f158(TC* ac, T0* C);
/* ET_CLASS.has_explicit_conforming_parent */
extern T1 T70f174(TC* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.has_conforming_parent */
extern T1 T594f5(TC* ac, T0* C);
/* ET_CLASS.set_checking_implementation */
extern void T70f321(TC* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.set_fatal_error */
extern void T237f24(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_implementation_error */
extern void T70f273(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.make */
extern T0* T237c19(TC* ac, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.make_with_feature_checker */
extern void T237f20(TC* ac, T0* C, T0* a1);
/* ET_SUPPLIER_BUILDER.make */
extern T0* T1141c5(TC* ac);
/* ET_SUPPLIER_BUILDER.dummy_suppliers */
extern T0* T1141f4(TC* ac, T0* C);
/* ET_SUPPLIER_BUILDER.tokens */
extern T0* T1141s3(TC* ac);
/* DS_HASH_SET [ET_QUERY].make */
extern T0* T1140c35(TC* ac, T6 a1);
/* DS_HASH_SET [ET_QUERY].set_internal_cursor */
extern void T1140f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].new_cursor */
extern T0* T1140f33(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_QUERY].make */
extern T0* T1721c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_QUERY].make_slots */
extern void T1140f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_clashes */
extern void T1140f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_key_storage */
extern void T1140f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_item_storage */
extern void T1140f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make */
extern T0* T1139c35(TC* ac, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].set_internal_cursor */
extern void T1139f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].new_cursor */
extern T0* T1139f33(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].make */
extern T0* T1720c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].make_slots */
extern void T1139f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_clashes */
extern void T1139f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_key_storage */
extern void T1139f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_item_storage */
extern void T1139f39(TC* ac, T0* C, T6 a1);
/* ET_PARENT_CHECKER3.make */
extern T0* T1138c6(TC* ac, T0* a1);
/* ET_PARENT_CHECKER3.make */
extern void T1138f6p1(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.tokens */
extern T0* T1138s4(TC* ac);
/* ET_SIGNATURE_CHECKER.make */
extern T0* T1127c10(TC* ac, T0* a1);
/* ET_SIGNATURE_CHECKER.make */
extern void T1127f10p1(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1123c19(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_key_equality_tester */
extern void T1698f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_map */
extern T0* T1698c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_with_equality_testers */
extern void T1698f39(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_sparse_container */
extern void T1698f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1698f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1698f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1986c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_slots */
extern void T1698f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_clashes */
extern void T1698f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_key_storage */
extern void T1698f58(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].make */
extern T0* T1982s1(TC* ac, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].make_empty */
extern T0* T1980c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].default_create */
extern T0* T1982c3(TC* ac);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_item_storage */
extern void T1698f57(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T1987s2(TC* ac, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make_empty */
extern T0* T1983c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].default_create */
extern T0* T1987c3(TC* ac);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_equality_tester */
extern void T1696f32(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.make */
extern T0* T1695c2(TC* ac);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make */
extern T0* T1696c31(TC* ac, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1696f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1696f25(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1981c6(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_slots */
extern void T1696f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_clashes */
extern void T1696f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_key_storage */
extern void T1696f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_item_storage */
extern void T1696f37(TC* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1123f19p1(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1123s12(TC* ac);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1122c22(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_map */
extern T0* T1690c42(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1690f49(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_sparse_container */
extern void T1690f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].set_internal_cursor */
extern void T1690f75(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_cursor */
extern T0* T1690f39(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T1971c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_slots */
extern void T1690f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_clashes */
extern void T1690f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_key_storage */
extern void T1690f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_item_storage */
extern void T1690f71(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].make */
extern T0* T1974s2(TC* ac, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].make_empty */
extern T0* T1972c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].default_create */
extern T0* T1974c3(TC* ac);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1689f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_map */
extern T0* T1689c43(TC* ac, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1689f52(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_sparse_container */
extern void T1689f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].set_internal_cursor */
extern void T1689f77(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_cursor */
extern T0* T1689f41(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1969c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_slots */
extern void T1689f76(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_clashes */
extern void T1689f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_key_storage */
extern void T1689f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_item_storage */
extern void T1689f73(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].make */
extern T0* T1231s1(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].default_create */
extern T0* T1231c3(TC* ac);
/* DS_HASH_SET [ET_FEATURE_NAME].set_equality_tester */
extern void T1688f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make */
extern T0* T1688c37(TC* ac, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].set_internal_cursor */
extern void T1688f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].new_cursor */
extern T0* T1688f20(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].make */
extern T0* T1968c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_slots */
extern void T1688f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_clashes */
extern void T1688f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_key_storage */
extern void T1688f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_item_storage */
extern void T1688f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1136f42(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.feature_name_tester */
extern T0* T1122s17(TC* ac);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_map */
extern T0* T1136c41(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1136f51(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_sparse_container */
extern void T1136f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].set_internal_cursor */
extern void T1136f80(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_cursor */
extern T0* T1136f39(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1711c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_slots */
extern void T1136f79(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_clashes */
extern void T1136f78(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_key_storage */
extern void T1136f77(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_item_storage */
extern void T1136f76(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].make */
extern T0* T1715s2(TC* ac, T6 a1);
/* SPECIAL [ET_RENAME].make_empty */
extern T0* T1712c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].default_create */
extern T0* T1715c3(TC* ac);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1122f22p1(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1122s16(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1114f45(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.feature_name_tester */
extern T0* T237s13(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_map */
extern T0* T1114c44(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1114f54(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_sparse_container */
extern void T1114f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_internal_cursor */
extern void T1114f73(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T1114f38(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1672c9(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_slots */
extern void T1114f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_clashes */
extern void T1114f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_key_storage */
extern void T1114f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_item_storage */
extern void T1114f69(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].make */
extern T0* T1677s1(TC* ac, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].make_empty */
extern T0* T1673c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].default_create */
extern T0* T1677c3(TC* ac);
/* ET_IMPLEMENTATION_CHECKER.make_class_processor */
extern void T237f21(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.tokens */
extern T0* T237s14(TC* ac);
/* ET_FEATURE_CHECKER.make */
extern T0* T857c75(TC* ac, T0* a1);
/* ET_ADAPTED_BASE_CLASS_CHECKER.make */
extern T0* T886c9(TC* ac, T0* a1);
/* ET_ADAPTED_BASE_CLASS_CHECKER.make */
extern void T886f9p1(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].make */
extern T0* T885c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].set_internal_cursor */
extern void T885f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].new_cursor */
extern T0* T885f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].make */
extern T0* T1337c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].make */
extern T0* T1335s1(TC* ac, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].make_empty */
extern T0* T1336c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].default_create */
extern T0* T1335c3(TC* ac);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].make */
extern T0* T884c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].set_internal_cursor */
extern void T884f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].new_cursor */
extern T0* T884f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM].make */
extern T0* T1334c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM].make */
extern T0* T1332s1(TC* ac, T6 a1);
/* SPECIAL [ET_NOTE_TERM].make_empty */
extern T0* T1333c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM].default_create */
extern T0* T1332c3(TC* ac);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_map */
extern T0* T883c38(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_with_equality_testers */
extern void T883f43(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_sparse_container */
extern void T883f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].set_internal_cursor */
extern void T883f69(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].new_cursor */
extern T0* T883f35(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].make */
extern T0* T1325c7(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_slots */
extern void T883f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_clashes */
extern void T883f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_key_storage */
extern void T883f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_item_storage */
extern void T883f65(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].make */
extern T0* T1329s2(TC* ac, T6 a1);
/* SPECIAL [ET_ASSERTIONS].make_empty */
extern T0* T1326c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].default_create */
extern T0* T1329c3(TC* ac);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].make */
extern T0* T882c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].set_internal_cursor */
extern void T882f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].new_cursor */
extern T0* T882f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].make */
extern T0* T1324c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].make */
extern T0* T1323s1(TC* ac, T6 a1);
/* SPECIAL [ET_ATTACHMENT_SCOPE].make_empty */
extern T0* T1322c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].default_create */
extern T0* T1323c3(TC* ac);
/* ET_ATTACHMENT_SCOPE_BUILDER.make */
extern T0* T881c3(TC* ac);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.make */
extern T0* T879c6(TC* ac);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].make */
extern T0* T1320c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].set_internal_cursor */
extern void T1320f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].new_cursor */
extern T0* T1320f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT].make */
extern T0* T1778c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_map */
extern T0* T878c35(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_with_equality_testers */
extern void T878f36(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_sparse_container */
extern void T878f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].set_internal_cursor */
extern void T878f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].new_cursor */
extern T0* T878f24(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make */
extern T0* T1319c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_slots */
extern void T878f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_clashes */
extern void T878f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_key_storage */
extern void T878f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_item_storage */
extern void T878f38(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T1309s1(TC* ac, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].make_empty */
extern T0* T1308c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].default_create */
extern T0* T1309c3(TC* ac);
/* ET_ITERATION_ITEM_SCOPE.make */
extern T0* T877c6(TC* ac);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].make */
extern T0* T1317c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].set_internal_cursor */
extern void T1317f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].new_cursor */
extern T0* T1317f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT].make */
extern T0* T1777c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_map */
extern T0* T876c43(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_with_equality_testers */
extern void T876f47(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_sparse_container */
extern void T876f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].set_internal_cursor */
extern void T876f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].new_cursor */
extern T0* T876f29(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make */
extern T0* T1315c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_slots */
extern void T876f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_clashes */
extern void T876f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_key_storage */
extern void T876f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_item_storage */
extern void T876f59(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.make */
extern T0* T875c8(TC* ac, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.tokens */
extern T0* T875s6(TC* ac);
/* ET_OBJECT_TEST_SCOPE.make */
extern T0* T874c6(TC* ac);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].make */
extern T0* T1314c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T1314f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T1314f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].make */
extern T0* T1776c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_map */
extern T0* T873c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_with_equality_testers */
extern void T873f43(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_sparse_container */
extern void T873f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T873f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T873f26(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make */
extern T0* T1311c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_slots */
extern void T873f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_clashes */
extern void T873f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_key_storage */
extern void T873f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_item_storage */
extern void T873f55(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T872c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].set_internal_cursor */
extern void T872f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_cursor */
extern T0* T872f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T1310c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].make */
extern T0* T871c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].set_internal_cursor */
extern void T871f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].new_cursor */
extern T0* T871f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].make */
extern T0* T1307c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].make */
extern T0* T1304s1(TC* ac, T6 a1);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].make_empty */
extern T0* T1306c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].default_create */
extern T0* T1304c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T870c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].set_internal_cursor */
extern void T870f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].new_cursor */
extern T0* T870f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T1303c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T1300s1(TC* ac, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].make_empty */
extern T0* T1302c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].default_create */
extern T0* T1300c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T869c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].set_internal_cursor */
extern void T869f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_cursor */
extern T0* T869f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T1299c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T1297s1(TC* ac, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].make_empty */
extern T0* T1298c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].default_create */
extern T0* T1297c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T868c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].set_internal_cursor */
extern void T868f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_cursor */
extern T0* T868f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T1296c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T1294s1(TC* ac, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].make_empty */
extern T0* T1295c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].default_create */
extern T0* T1294c3(TC* ac);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].make */
extern T0* T867c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].set_internal_cursor */
extern void T867f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_cursor */
extern T0* T867f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].make */
extern T0* T1293c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].make */
extern T0* T1291s1(TC* ac, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].make_empty */
extern T0* T1292c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].default_create */
extern T0* T1291c3(TC* ac);
/* ET_INVARIANTS.implementation_class */
extern T0* T539f1(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.dummy_feature */
extern T0* T857f49(TC* ac, T0* C);
/* ET_TYPE_CHECKER.make */
extern T0* T864c22(TC* ac, T0* a1);
/* ET_TYPE_CHECKER.dummy_feature */
extern T0* T864f17(TC* ac, T0* C);
/* ET_TYPE_CHECKER.make */
extern void T864f22p1(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.make */
extern void T857f75p1(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.error_handler */
extern T0* T237f15(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.process_none_class */
extern void T237f23(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.process_class */
extern void T235f33(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.internal_process_class */
extern void T235f35(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_features */
extern void T235f38(TC* ac, T0* C);
extern T1 T235f38ot1(TC* ac, T0* a1);
extern T1 T235f38ot2(TC* ac, T0* a1);
/* ET_FEATURE_FLATTENER.check_kernel_features_validity */
extern void T235f49(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_special_item_seed */
extern void T87f268(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_special_item_seed */
extern void T50f209(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iteration_cursor_forth_seed */
extern void T87f267(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iteration_cursor_forth_seed */
extern void T50f208(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.forth_feature_name */
extern T0* T81s761(TC* ac);
/* ET_ECF_SYSTEM.set_iteration_cursor_after_seed */
extern void T87f266(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iteration_cursor_after_seed */
extern void T50f207(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.after_feature_name */
extern T0* T81s760(TC* ac);
/* ET_ECF_SYSTEM.set_iteration_cursor_item_seed */
extern void T87f265(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iteration_cursor_item_seed */
extern void T50f206(TC* ac, T0* C, T6 a1);
/* ET_CLASS.is_iteration_cursor_class */
extern T1 T70f167(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_iterable_new_cursor_seed */
extern void T87f264(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iterable_new_cursor_seed */
extern void T50f205(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.new_cursor_feature_name */
extern T0* T81s759(TC* ac);
/* ET_CLASS.is_iterable_class */
extern T1 T70f166(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_dispose_seed */
extern void T87f263(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_dispose_seed */
extern void T50f204(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.dispose_feature_name */
extern T0* T81s758(TC* ac);
/* ET_CLASS.is_disposable_class */
extern T1 T70f165(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_function_item_seed */
extern void T87f262(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_function_item_seed */
extern void T50f203(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_routine_call_seed */
extern void T87f261(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_routine_call_seed */
extern void T50f202(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_is_equal_seed */
extern void T87f260(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_is_equal_seed */
extern void T50f201(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe5a_error */
extern void T63f230(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe5a */
extern T0* T1445c927(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T63f22(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe5a_error */
extern void T42f230(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T42f22(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_twin_seed */
extern void T87f259(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_twin_seed */
extern void T50f200(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.is_query */
extern T1 T714f74(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_query */
extern T1 T712f68(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_query */
extern T1 T711f66(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_query */
extern T1 T710f81(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_query */
extern T1 T708f72(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_query */
extern T1 T707f75(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_query */
extern T1 T706f73(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_query */
extern T1 T705f74(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_query */
extern T1 T704f73(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_query */
extern T1 T703f73(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_query */
extern T1 T702f68(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_query */
extern T1 T713f65(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_copy_seed */
extern void T87f258(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_copy_seed */
extern void T50f199(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe1a_error */
extern void T63f228(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe1a */
extern T0* T1445c925(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T63f20(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe1a_error */
extern void T42f228(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T42f20(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe4a_error */
extern void T63f232(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe4a */
extern T0* T1445c929(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T63f24(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe4a_error */
extern void T42f232(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T42f24(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_default_create_seed */
extern void T87f257(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_default_create_seed */
extern void T50f198(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.current_system */
extern T0* T235f27(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.tokens */
extern T0* T235s21(TC* ac);
/* ET_FEATURE_FLATTENER.check_convert_validity */
extern void T235f48(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_creators_validity */
extern void T235f47(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcp2a_error */
extern void T63f296(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp2a */
extern T0* T1445c983(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T63f56(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp2a_error */
extern void T42f296(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T42f56(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp2b_error */
extern void T63f295(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp2b */
extern T0* T1445c982(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp2b_error */
extern void T42f295(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6a_error */
extern void T63f294(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcc6a */
extern T0* T1445c981(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcc6a_error */
extern void T42f294(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcp3b_error */
extern void T63f293(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3b */
extern T0* T1445c980(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T63f54(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp3b_error */
extern void T42f293(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T42f54(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp3a_error */
extern void T63f292(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3a */
extern T0* T1445c979(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3a_error */
extern void T42f292(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.feature_name */
extern T0* T82f8(TC* ac, T0* C, T6 a1);
/* ET_CREATOR.item */
extern T0* T82f10(TC* ac, T0* C, T6 a1);
/* ET_CREATOR_LIST.item */
extern T0* T80f6(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp1a_error */
extern void T63f291(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp1a */
extern T0* T1445c978(TC* ac, T0* a1, T0* a2);
/* ET_CREATOR.position */
extern T0* T82f12(TC* ac, T0* C);
/* ET_CREATOR.first */
extern T0* T82f15(TC* ac, T0* C);
/* ET_CREATOR.clients_clause */
extern T0* T82f14(TC* ac, T0* C);
extern T1 T82f14ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T63f53(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp1a_error */
extern void T42f291(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T42f53(TC* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.first */
extern T0* T80f4(TC* ac, T0* C);
/* ET_CREATOR_LIST.is_empty */
extern T1 T80f3(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_assigners_validity */
extern void T235f46(TC* ac, T0* C);
extern T1 T235f46ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac4a_error */
extern void T63f290(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_VALIDITY_ERROR.make_vfac4a */
extern T0* T1445c977(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_NULL_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T63f52(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac4a_error */
extern void T42f290(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T42f52(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac3a_error */
extern void T63f289(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfac3a */
extern T0* T1445c976(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T63f51(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac3a_error */
extern void T42f289(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T42f51(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac2a_error */
extern void T63f288(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfac2a */
extern T0* T1445c975(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T63f50(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac2a_error */
extern void T42f288(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T42f50(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1b_error */
extern void T63f287(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1b */
extern T0* T1445c974(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T63f49(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac1b_error */
extern void T42f287(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T42f49(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1a_error */
extern void T63f286(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1a */
extern T0* T1445c973(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfac1a_error */
extern void T42f286(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcch2a_error */
extern void T63f282(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.set_ise_reported */
extern void T1445f969(TC* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vcch2a */
extern T0* T1445c968(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T63f45(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch2a_error */
extern void T42f282(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T42f45(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1a_error */
extern void T63f281(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1a */
extern T0* T1445c967(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T63f44(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch1a_error */
extern void T42f281(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T42f44(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1b_error */
extern void T63f280(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1b */
extern T0* T1445c966(TC* ac, T0* a1, T0* a2);
/* ET_INHERITED_FEATURE.name */
extern T0* T1564f22(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vcch1b_error */
extern void T42f280(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].go_after */
extern void T1114f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_go_after */
extern void T1114f59(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_has_deferred_features */
extern void T70f317(TC* ac, T0* C, T1 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].wipe_out */
extern void T1117f39(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_wipe_out */
extern void T1117f52(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_wipe_out */
extern void T1117f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1117f50(TC* ac, T0* C);
/* SPECIAL [ET_ALIAS_NAME].keep_head */
extern void T1578f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ALIAS_NAME].set_count */
extern void T1578f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1117f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].unset_found_item */
extern void T1117f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].move_all_cursors_after */
extern void T1117f48(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_next_cursor */
extern void T1680f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_after */
extern void T1680f7(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_signature_validity */
extern void T235f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].force_last_new */
extern void T1117f38(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_put */
extern void T1117f47(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_put */
extern void T1117f46(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_put */
extern void T1117f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_put */
extern void T1117f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_item */
extern T6 T1117f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].hash_position */
extern T6 T1117f28(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.hash_code */
extern T6 T364f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].resize */
extern void T1117f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_resize */
extern void T1117f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].special_integer_ */
extern T0* T1117s33(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_resize */
extern void T1117f56(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].aliased_resized_area */
extern T0* T1579s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ALIAS_NAME].aliased_resized_area */
extern T0* T1578f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_resize */
extern void T1117f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_item */
extern T0* T1117f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_item */
extern T6 T1117f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_resize */
extern void T1117f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_modulus */
extern T6 T1117f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_capacity */
extern T6 T1117f27(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1f_error */
extern void T63f279(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1f */
extern T0* T1445c965(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ALIAS_FREE_NAME.alias_lower_name */
extern T0* T716f20(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.alias_name */
extern T0* T716f50(TC* ac, T0* C);
/* ET_ALIAS_NAME.alias_lower_name */
extern T0* T364f17(TC* ac, T0* C);
/* ET_ALIAS_NAME.alias_name */
extern T0* T364f77(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.position */
extern T0* T716f19(TC* ac, T0* C);
/* ET_ALIAS_NAME.position */
extern T0* T364f16(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T63f41(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav1f_error */
extern void T42f279(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T42f41(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1c_error */
extern void T63f278(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1c */
extern T0* T1445c964(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1c_error */
extern void T42f278(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav3b_error */
extern void T63f277(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav3b */
extern T0* T1445c963(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfav3_error */
extern T1 T63f40(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav3b_error */
extern void T42f277(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfav3_error */
extern T1 T42f40(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav2b_error */
extern void T63f276(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav2b */
extern T0* T1445c962(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T63f39(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav2b_error */
extern void T42f276(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T42f39(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1g_error */
extern void T63f275(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1g */
extern T0* T1445c961(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1g_error */
extern void T42f275(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1d_error */
extern void T63f274(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1d */
extern T0* T1445c960(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1d_error */
extern void T42f274(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav3c_error */
extern void T63f273(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav3c */
extern T0* T1445c959(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav3c_error */
extern void T42f273(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav2c_error */
extern void T63f272(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav2c */
extern T0* T1445c958(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav2c_error */
extern void T42f272(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1h_error */
extern void T63f271(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1h */
extern T0* T1445c957(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1h_error */
extern void T42f271(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1e_error */
extern void T63f270(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1e */
extern T0* T1445c956(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1e_error */
extern void T42f270(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav3d_error */
extern void T63f269(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav3d */
extern T0* T1445c955(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav3d_error */
extern void T42f269(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav2d_error */
extern void T63f268(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav2d */
extern T0* T1445c954(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav2d_error */
extern void T42f268(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found_key */
extern T0* T1117f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found_item */
extern T0* T1117f23(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_item */
extern T0* T1117f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found */
extern T1 T1117f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search */
extern void T1117f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search_position */
extern void T1117f41(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_TESTER.test */
extern T1 T1118f1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.set_redeclared_signatures_checked */
extern void T70f316(TC* ac, T0* C, T1 a1);
/* ET_FEATURE_FLATTENER.check_anchored_signatures */
extern void T235f44(TC* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.check_signatures */
extern void T1126f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].wipe_out */
extern void T1701f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].wipe_out */
extern void T1435f15(TC* ac, T0* C);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].keep_head */
extern void T1790f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].set_count */
extern void T1790f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].move_all_cursors_after */
extern void T1435f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].set_next_cursor */
extern void T1792f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].set_after */
extern void T1792f6(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].wipe_out */
extern void T1990f34(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_wipe_out */
extern void T1990f44(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_wipe_out */
extern void T1990f43(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_wipe_out */
extern void T1990f42(TC* ac, T0* C);
/* SPECIAL [ET_LIKE_FEATURE].keep_head */
extern void T1991f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_LIKE_FEATURE].set_count */
extern void T1991f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_wipe_out */
extern void T1990f41(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].move_all_cursors_after */
extern void T1990f39(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].set_next_cursor */
extern void T2145f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].set_after */
extern void T2145f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].wipe_out */
extern void T1702f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].move_all_cursors_after */
extern void T1702f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_next_cursor */
extern void T1993f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_after */
extern void T1993f10(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtat2a_error */
extern void T63f556(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat2a */
extern T0* T1445c1244(TC* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].forth */
extern void T1993f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_forth */
extern void T1702f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_position */
extern void T1993f15(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].add_traversing_cursor */
extern void T1702f19(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].remove_traversing_cursor */
extern void T1702f20(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].go_after */
extern void T1993f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_go_after */
extern void T1702f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].off */
extern T1 T1993f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].before */
extern T1 T1993f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].item */
extern T0* T1993f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_item */
extern T0* T1702f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].after */
extern T1 T1993f4(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].start */
extern void T1993f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_start */
extern void T1702f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].new_cursor */
extern T0* T1702f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].make */
extern T0* T1993c9(TC* ac, T0* a1);
/* ET_ERROR_HANDLER.report_vtat2a_error */
extern void T42f556(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1126f6(TC* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1126f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].is_empty */
extern T1 T1702f6(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].sort */
extern void T1701f11(TC* ac, T0* C);
/* ARRAY [BOOLEAN].item */
extern T1 T1436f4(TC* ac, T0* C, T6 a1);
/* ARRAY [BOOLEAN].put */
extern void T1436f6(TC* ac, T0* C, T1 a1, T6 a2);
/* ARRAY [BOOLEAN].make_filled */
extern T0* T1436c5(TC* ac, T1 a1, T6 a2, T6 a3);
/* ARRAY [BOOLEAN].make_filled_area */
extern void T1436f7(TC* ac, T0* C, T1 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].item */
extern T0* T1702f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].make */
extern T0* T1702c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].set_internal_cursor */
extern void T1702f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].make */
extern T0* T1992s1(TC* ac, T6 a1);
/* SPECIAL [ET_LIKE_FEATURE].make_empty */
extern T0* T1991c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].default_create */
extern T0* T1992c3(TC* ac);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].cloned_object */
extern T0* T1435f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].twin */
extern T0* T1435f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].copy */
extern void T1435f16(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].resized_area */
extern T0* T1790f4(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].copy_data */
extern void T1790f10(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].force */
extern void T1790f14(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].move_data */
extern void T1790f13(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].overlapping_move */
extern void T1790f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].non_overlapping_move */
extern void T1790f15(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].make_empty */
extern T0* T1790c6(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].new_cursor */
extern T0* T1435f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T1792c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].set_internal_cursor */
extern void T1435f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].valid_cursor */
extern T1 T1435f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].cloned_object */
extern T0* T239f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].twin */
extern T0* T239f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].copy */
extern void T239f29(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_cursor */
extern T0* T239f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].make */
extern T0* T1142c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].set_internal_cursor */
extern void T239f25(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].valid_cursor */
extern T1 T239f15(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_parenthesisable */
extern T1 T714f44(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_parenthesisable */
extern T1 T713f44(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_parenthesisable */
extern T1 T712f43(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_parenthesisable */
extern T1 T711f46(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_frozen */
extern T1 T714f43(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_frozen */
extern T1 T713f43(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_frozen */
extern T1 T712f42(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_frozen */
extern T1 T711f45(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vffd7b_error */
extern void T63f267(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7b */
extern T0* T1445c953(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd7_error */
extern T1 T63f43(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd7b_error */
extern void T42f267(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd7_error */
extern T1 T42f43(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.has_formal_types */
extern T1 T848f19(TC* ac, T0* C, T0* a1);
extern T1 T848f19ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_formal_types */
extern T1 T691f47(TC* ac, T0* C, T0* a1);
extern T1 T691f47ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.has_formal_types */
extern T1 T500f49(TC* ac, T0* C, T0* a1);
extern T1 T500f49ot1(TC* ac, T0* a1);
/* ET_CLASS.has_formal_types */
extern T1 T70f226(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_types */
extern T1 T506f20(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.has_formal_types */
extern T1 T725f19(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_formal_types */
extern T1 T724f27(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.has_formal_types */
extern T1 T722f23(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.has_formal_types */
extern T1 T183f65(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_formal_types */
extern T1 T2159f9(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.has_formal_types */
extern T1 T185f18(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.has_formal_types */
extern T1 T102f64(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T201f10(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T2158f9(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.has_formal_types */
extern T1 T199f35(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7a_error */
extern void T63f266(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7a */
extern T0* T1445c952(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd7a_error */
extern void T42f266(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.has_unqualified_anchored_type */
extern T1 T848f18(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.has_unqualified_anchored_type */
extern T1 T725f18(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_unqualified_anchored_type */
extern T1 T724f26(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_unqualified_anchored_type */
extern T1 T691f54(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.has_unqualified_anchored_type */
extern T1 T500f56(TC* ac, T0* C);
/* ET_CLASS.has_unqualified_anchored_type */
extern T1 T70f227(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_unqualified_anchored_type */
extern T1 T506f19(TC* ac, T0* C);
/* ET_LIKE_FEATURE.has_unqualified_anchored_type */
extern T1 T722f22(TC* ac, T0* C);
/* ET_TUPLE_TYPE.has_unqualified_anchored_type */
extern T1 T183f64(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_unqualified_anchored_type */
extern T1 T2159f8(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_unqualified_anchored_type */
extern T1 T185f17(TC* ac, T0* C);
/* ET_CLASS_TYPE.has_unqualified_anchored_type */
extern T1 T102f63(TC* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_unqualified_anchored_type */
extern T1 T201f9(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_unqualified_anchored_type */
extern T1 T2158f8(TC* ac, T0* C);
/* ET_LIKE_CURRENT.has_unqualified_anchored_type */
extern T1 T199f34(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav5a_error */
extern void T63f265(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav5a */
extern T0* T1445c951(TC* ac, T0* a1, T0* a2);
/* ET_ALIAS_FREE_NAME.lower_name */
extern T0* T716f21(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.name */
extern T0* T716f51(TC* ac, T0* C);
/* ET_ALIAS_NAME.lower_name */
extern T0* T364f18(TC* ac, T0* C);
/* ET_ALIAS_NAME.name */
extern T0* T364f78(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vfav5_error */
extern T1 T63f42(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav5a_error */
extern void T42f265(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vfav5_error */
extern T1 T42f42(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.is_prefix */
extern T1 T716f12(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix */
extern T1 T716f13(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav1k_error */
extern void T63f264(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1k */
extern T0* T1445c950(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1k_error */
extern void T42f264(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1b_error */
extern void T63f263(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1b */
extern T0* T1445c949(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1b_error */
extern void T42f263(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4d_error */
extern void T63f262(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4d */
extern T0* T1445c948(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T63f38(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav4d_error */
extern void T42f262(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T42f38(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1a_error */
extern void T63f261(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1a */
extern T0* T1445c947(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1a_error */
extern void T42f261(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4c_error */
extern void T63f260(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4c */
extern T0* T1445c946(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4c_error */
extern void T42f260(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav3a_error */
extern void T63f259(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav3a */
extern T0* T1445c945(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav3a_error */
extern void T42f259(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION.is_parenthesisable */
extern T1 T710f36(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_parenthesisable */
extern T1 T708f32(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_parenthesisable */
extern T1 T707f35(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_parenthesisable */
extern T1 T706f34(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_parenthesisable */
extern T1 T705f30(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_parenthesisable */
extern T1 T704f28(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_parenthesisable */
extern T1 T703f33(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_parenthesisable */
extern T1 T702f26(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav4b_error */
extern void T63f258(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4b */
extern T0* T1445c944(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4b_error */
extern void T42f258(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2a_error */
extern void T63f257(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2a */
extern T0* T1445c943(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2a_error */
extern void T42f257(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION.is_bracketable */
extern T1 T710f35(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_bracketable */
extern T1 T708f31(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_bracketable */
extern T1 T707f34(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_bracketable */
extern T1 T706f33(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_bracketable */
extern T1 T705f29(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_bracketable */
extern T1 T704f27(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_bracketable */
extern T1 T703f32(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_bracketable */
extern T1 T702f25(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav4a_error */
extern void T63f256(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4a */
extern T0* T1445c942(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4a_error */
extern void T42f256(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vffd4a_error */
extern void T63f255(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd4a */
extern T0* T1445c941(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T63f37(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd4a_error */
extern void T42f255(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T42f37(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_frozen */
extern T1 T710f63(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_frozen */
extern T1 T708f53(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_frozen */
extern T1 T707f57(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_frozen */
extern T1 T706f55(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_frozen */
extern T1 T705f27(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_frozen */
extern T1 T704f55(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_frozen */
extern T1 T703f56(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_frozen */
extern T1 T702f50(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T235f43(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_type */
extern void T1125f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.check_signature_vtct_validity */
extern void T235f42(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_vtct_validity */
extern void T1127f11(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.resolve_identifier_signature */
extern void T235f41(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrfa0a_error */
extern void T63f285(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrfa0a */
extern T0* T1445c972(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vrfa0a_error */
extern void T42f285(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item */
extern T0* T1114f39(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0a_error */
extern void T63f284(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0a */
extern T0* T1445c971(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vreg0a_error */
extern void T42f284(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort */
extern void T1563f3(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort_with_comparator */
extern void T1563f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ET_SEEDED_PROCEDURE_COMPARATOR.less_than */
extern T1 T1830f1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.procedure_sorter */
extern T0* T235f26(TC* ac, T0* C);
/* DS_QUICK_SORTER [ET_PROCEDURE].make */
extern T0* T1563c2(TC* ac, T0* a1);
/* ET_SEEDED_PROCEDURE_COMPARATOR.make */
extern T0* T1830c2(TC* ac);
/* DS_QUICK_SORTER [ET_QUERY].subsort */
extern void T1562f3(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_QUERY].subsort_with_comparator */
extern void T1562f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ET_SEEDED_QUERY_COMPARATOR.less_than */
extern T1 T1827f1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.query_sorter */
extern T0* T235f25(TC* ac, T0* C);
/* DS_QUICK_SORTER [ET_QUERY].make */
extern T0* T1562c2(TC* ac, T0* a1);
/* ET_SEEDED_QUERY_COMPARATOR.make */
extern T0* T1827c2(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].back */
extern void T1114f47(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_back */
extern void T1114f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_before */
extern void T1672f10(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.flatten_feature */
extern void T235f40(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_inherited_feature */
extern void T235f52(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2b_error */
extern void T63f303(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2b */
extern T0* T1445c990(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.alias_lower_names */
extern T0* T1445f185(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T63f60(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr2b_error */
extern void T42f303(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T42f60(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn2b_error */
extern void T63f302(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2b */
extern T0* T1445c989(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T63f59(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn2b_error */
extern void T42f302(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T42f59(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2a_error */
extern void T63f301(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2a */
extern T0* T1445c988(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr2a_error */
extern void T42f301(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn2a_error */
extern void T63f300(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2a */
extern T0* T1445c987(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn2a_error */
extern void T42f300(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE.set_other_seeds */
extern void T714f123(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_seeds */
extern void T713f113(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_seeds */
extern void T712f119(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_seeds */
extern void T711f116(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_seeds */
extern void T710f125(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_seeds */
extern void T708f115(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_seeds */
extern void T707f121(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_seeds */
extern void T706f118(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_seeds */
extern void T705f113(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_seeds */
extern void T704f110(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_other_seeds */
extern void T703f118(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_seeds */
extern void T702f106(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.process_replicated_seeds */
extern void T235f54(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_REDECLARED_FEATURE.set_other_seeds */
extern void T1566f32(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_other_seeds */
extern void T1564f36(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.set_first_seed */
extern void T1566f31(TC* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.set_first_seed */
extern void T1564f35(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.replace */
extern void T1271f10(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.first */
extern T6 T1271f8(TC* ac, T0* C);
/* ET_FEATURE_IDS.remove */
extern void T1271f11(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.id */
extern T6 T714f30(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.id */
extern T6 T713f27(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.id */
extern T6 T712f30(TC* ac, T0* C);
/* ET_DO_PROCEDURE.id */
extern T6 T711f29(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.id */
extern T6 T710f32(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.id */
extern T6 T708f29(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.id */
extern T6 T707f32(TC* ac, T0* C);
/* ET_DO_FUNCTION.id */
extern T6 T706f31(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.id */
extern T6 T705f19(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.id */
extern T6 T704f24(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.id */
extern T6 T703f29(TC* ac, T0* C);
/* ET_ATTRIBUTE.id */
extern T6 T702f22(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.renamed_feature */
extern T0* T714f83(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.renamed_feature */
extern T0* T713f72(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.renamed_feature */
extern T0* T712f75(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.renamed_feature */
extern T0* T711f73(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.renamed_feature */
extern T0* T710f85(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.renamed_feature */
extern T0* T708f74(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.renamed_feature */
extern T0* T707f77(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.renamed_feature */
extern T0* T706f75(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.renamed_feature */
extern T0* T705f76(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.renamed_feature */
extern T0* T704f75(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.renamed_feature */
extern T0* T703f76(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.renamed_feature */
extern T0* T702f70(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.extended_name */
extern T0* T1561f21(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_other_precursors */
extern void T714f122(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_precursors */
extern void T713f112(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_precursors */
extern void T712f118(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_precursors */
extern void T711f115(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_precursors */
extern void T710f124(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_precursors */
extern void T708f114(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_precursors */
extern void T707f120(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_precursors */
extern void T706f117(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_precursors */
extern void T705f112(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_precursors */
extern void T704f109(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_other_precursors */
extern void T703f117(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_precursors */
extern void T702f105(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_first_precursor */
extern void T714f121(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_first_precursor */
extern void T713f111(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_first_precursor */
extern void T712f117(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_first_precursor */
extern void T711f114(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_first_precursor */
extern void T710f123(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_first_precursor */
extern void T708f113(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_first_precursor */
extern void T707f119(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_first_precursor */
extern void T706f116(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_precursor */
extern void T705f111(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_precursor */
extern void T704f108(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_precursor */
extern void T703f116(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_precursor */
extern void T702f104(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_class */
extern void T714f120(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_class */
extern void T713f110(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_class */
extern void T712f116(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_class */
extern void T711f113(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_class */
extern void T710f122(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_class */
extern void T708f112(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_class */
extern void T707f118(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_class */
extern void T706f115(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_class */
extern void T705f110(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_class */
extern void T704f107(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_implementation_class */
extern void T703f115(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_class */
extern void T702f103(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_feature */
extern void T714f119(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_feature */
extern void T713f109(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_feature */
extern void T712f115(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_feature */
extern void T711f112(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_feature */
extern void T710f121(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_feature */
extern void T708f111(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_feature */
extern void T707f117(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_feature */
extern void T706f114(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_feature */
extern void T705f109(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_feature */
extern void T704f106(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_implementation_feature */
extern void T703f114(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_feature */
extern void T702f102(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_postconditions */
extern void T714f118(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_postconditions */
extern void T713f108(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_postconditions */
extern void T712f114(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_postconditions */
extern void T711f111(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_postconditions */
extern void T710f120(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_postconditions */
extern void T708f110(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_postconditions */
extern void T707f116(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_postconditions */
extern void T706f113(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_postconditions */
extern void T705f108(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_postconditions */
extern void T704f105(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_postconditions */
extern void T703f113(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_postconditions */
extern void T702f101(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_preconditions */
extern void T714f117(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_preconditions */
extern void T713f107(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_preconditions */
extern void T712f113(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_preconditions */
extern void T711f110(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_preconditions */
extern void T710f119(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_preconditions */
extern void T708f109(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_preconditions */
extern void T707f115(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_preconditions */
extern void T706f112(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_preconditions */
extern void T705f107(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_preconditions */
extern void T704f104(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_preconditions */
extern void T703f112(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_preconditions */
extern void T702f100(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.undefined_feature */
extern T0* T714f82(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.undefined_feature */
extern T0* T713f71(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.undefined_feature */
extern T0* T712f74(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.undefined_feature */
extern T0* T711f72(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.undefined_feature */
extern T0* T710f84(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.undefined_feature */
extern T0* T708f73(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.undefined_feature */
extern T0* T707f76(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.undefined_feature */
extern T0* T706f74(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.undefined_feature */
extern T0* T705f75(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.obsolete_message */
extern T0* T705f79(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.undefined_feature */
extern T0* T704f74(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.obsolete_message */
extern T0* T704f78(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.undefined_feature */
extern T0* T703f75(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.undefined_feature */
extern T0* T702f69(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.obsolete_message */
extern T0* T702f73(TC* ac, T0* C);
/* ET_PARENT_FEATURE.alias_names */
extern T0* T1561f20(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].wipe_out */
extern void T1132f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_wipe_out */
extern void T1132f60(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_wipe_out */
extern void T1132f59(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_wipe_out */
extern void T1132f58(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_wipe_out */
extern void T1132f57(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].unset_found_item */
extern void T1132f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].move_all_cursors_after */
extern void T1132f56(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_next_cursor */
extern void T1706f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_after */
extern void T1706f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].forth */
extern void T1132f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_forth */
extern void T1132f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].add_traversing_cursor */
extern void T1132f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_position */
extern void T1706f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove_traversing_cursor */
extern void T1132f70(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_item */
extern T6 T1132f23(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_LIST.put_first */
extern void T897f6(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_LIST.fixed_array */
extern T0* T897f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_for_iteration */
extern T0* T1132f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_item */
extern T0* T1132f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1132f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].after */
extern T1 T1132f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_after */
extern T1 T1132f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].after */
extern T1 T1706f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].start */
extern void T1132f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_start */
extern void T1132f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_off */
extern T1 T1132f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].off */
extern T1 T1706f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].is_empty */
extern T1 T1132f33(TC* ac, T0* C);
/* ET_FEATURE_LIST.make_with_capacity */
extern T0* T897c5(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove */
extern void T1132f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove_position */
extern void T1132f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_put */
extern void T1132f52(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_put */
extern void T1132f48(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_keep_head */
extern void T1132f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_keep_head */
extern void T1132f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_put */
extern void T1132f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_put */
extern void T1132f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].move_cursors_forth */
extern void T1132f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].internal_set_key_equality_tester */
extern void T1132f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_item */
extern T6 T1132f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].hash_position */
extern T6 T1132f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1132f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].search_position */
extern void T1132f47(TC* ac, T0* C, T6 a1);
/* ET_CLIENTS.same_clients */
extern T1 T267f16(TC* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.same_clients */
extern T1 T182f12(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.clients */
extern T0* T1561f18(TC* ac, T0* C);
/* ET_PARENT_FEATURE.has_rename */
extern T1 T1561f17(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmfn0c_error */
extern void T63f299(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0c */
extern T0* T1445c986(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0c_error */
extern void T42f299(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].force_last */
extern void T1132f40(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].resize */
extern void T1132f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_resize */
extern void T1132f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1132s36(TC* ac);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_resize */
extern void T1132f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_resize */
extern void T1132f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_resize */
extern void T1132f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_modulus */
extern T6 T1132f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_capacity */
extern T6 T1132f22(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_no_redeclaration_validity */
extern void T235f57(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs4a_error */
extern void T63f314(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdrs4a */
extern T0* T1445c1002(TC* ac, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.feature_lower_name */
extern T0* T1445f137(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T63f63(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs4a_error */
extern void T42f314(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T42f63(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_redefine */
extern T1 T1561f14(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_redefine_clause_validity */
extern void T235f60(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2b_error */
extern void T63f328(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2b */
extern T0* T1445c1016(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T63f68(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs2b_error */
extern void T42f328(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T42f68(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2a_error */
extern void T63f327(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2a */
extern T0* T1445c1015(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs2a_error */
extern void T42f327(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.check_undefine_clause_validity */
extern void T235f59(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2b_error */
extern void T63f326(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2b */
extern T0* T1445c1014(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T63f67(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus2b_error */
extern void T42f326(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T42f67(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2a_error */
extern void T63f325(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2a */
extern T0* T1445c1013(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdus2a_error */
extern void T42f325(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdus3a_error */
extern void T63f324(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus3a */
extern T0* T1445c1012(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T63f66(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus3a_error */
extern void T42f324(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T42f66(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_rename_clause_validity */
extern void T235f58(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1p_error */
extern void T63f323(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1p */
extern T0* T1445c1011(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.upper_name */
extern T0* T183f105(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vfav1p_error */
extern void T42f323(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1n_error */
extern void T63f322(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1n */
extern T0* T1445c1010(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1n_error */
extern void T42f322(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav4h_error */
extern void T63f321(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4h */
extern T0* T1445c1009(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4h_error */
extern void T42f321(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.is_infixable */
extern T1 T714f77(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_infixable */
extern T1 T713f68(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_infixable */
extern T1 T712f71(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_infixable */
extern T1 T711f69(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav1m_error */
extern void T63f320(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1m */
extern T0* T1445c1008(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1m_error */
extern void T42f320(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav4g_error */
extern void T63f319(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4g */
extern T0* T1445c1007(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4g_error */
extern void T42f319(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.is_prefixable */
extern T1 T714f76(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_prefixable */
extern T1 T713f67(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_prefixable */
extern T1 T712f70(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_prefixable */
extern T1 T711f68(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav3e_error */
extern void T63f318(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav3e */
extern T0* T1445c1006(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav3e_error */
extern void T42f318(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav4f_error */
extern void T63f317(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4f */
extern T0* T1445c1005(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4f_error */
extern void T42f317(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vfav2e_error */
extern void T63f316(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav2e */
extern T0* T1445c1004(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav2e_error */
extern void T42f316(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EXTERNAL_PROCEDURE.is_bracketable */
extern T1 T714f75(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_bracketable */
extern T1 T713f66(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_bracketable */
extern T1 T712f69(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_bracketable */
extern T1 T711f67(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav4e_error */
extern void T63f315(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4e */
extern T0* T1445c1003(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4e_error */
extern void T42f315(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INHERITED_FEATURE.is_replicated */
extern T1 T1564f20(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T235f29(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].wipe_out */
extern void T1120f14(TC* ac, T0* C);
/* SPECIAL [ET_CLIENT_LIST].keep_head */
extern void T1682f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_LIST].set_count */
extern void T1682f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_all_cursors_after */
extern void T1120f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_next_cursor */
extern void T1683f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_after */
extern void T1683f6(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.aggregated_clients */
extern T0* T235f31(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_FEATURE_FLATTENER.aggregated_clients */
extern T0* T235f31ac1(TC* ac, T0* a1);
/* PREDICATE [TUPLE [ET_CLASS]].set_rout_disp_final */
extern void T78f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].wipe_out */
extern void T1121f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_wipe_out */
extern void T1121f66(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_wipe_out */
extern void T1121f65(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_wipe_out */
extern void T1121f64(TC* ac, T0* C);
/* SPECIAL [ET_CLASS].keep_head */
extern void T775f7(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLASS].set_count */
extern void T775f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_wipe_out */
extern void T1121f63(TC* ac, T0* C);
/* SPECIAL [ET_CLIENT].keep_head */
extern void T1687f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT].set_count */
extern void T1687f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].unset_found_item */
extern void T1121f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].move_all_cursors_after */
extern void T1121f62(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_next_cursor */
extern void T1685f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_after */
extern void T1685f13(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].back */
extern void T1121f52(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_back */
extern void T1121f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].add_traversing_cursor */
extern void T1121f72(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_position */
extern void T1685f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].remove_traversing_cursor */
extern void T1121f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_before */
extern void T1685f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_item */
extern T6 T1121f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_for_iteration */
extern T0* T1121f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_item */
extern T0* T1121f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_item */
extern T0* T1121f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].before */
extern T1 T1121f21(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_before */
extern T1 T1121f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].before */
extern T1 T1685f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].finish */
extern void T1121f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_finish */
extern void T1121f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_off */
extern T1 T1121f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].off */
extern T1 T1685f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].is_empty */
extern T1 T1121f36(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].for_all */
extern T1 T1887f6(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].forth */
extern void T2089f8(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_forth */
extern void T1887f12(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].forth */
extern void T1685f17(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_forth */
extern void T1121f75(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].go_after */
extern void T2089f7(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_go_after */
extern void T1887f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].go_after */
extern void T1685f16(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_go_after */
extern void T1121f74(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].item */
extern T0* T2089f4(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_item */
extern T0* T1887f7(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].key */
extern T0* T1685f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_key */
extern T0* T1121f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_item */
extern T0* T1121f35(TC* ac, T0* C, T6 a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].after */
extern T1 T2089f3(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].after */
extern T1 T1685f8(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].start */
extern void T2089f6(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_start */
extern void T1887f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].start */
extern void T1685f15(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_start */
extern void T1121f73(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].new_cursor */
extern T0* T1887f4(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].make */
extern T0* T2089c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_cursor */
extern T0* T1121f33(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].make */
extern T0* T1685c10(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].keys */
extern T0* T1121f39(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].make */
extern T0* T1887c8(TC* ac, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].set_internal_cursor */
extern void T1887f9(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].new_cursor_with_table_cursor */
extern T0* T1887f5(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].make_with_table_cursor */
extern T0* T2089c9(TC* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].force */
extern void T1121f50(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_put */
extern void T1121f59(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_put */
extern void T1121f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_put */
extern void T1121f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_item */
extern T6 T1121f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].hash_position */
extern T6 T1121f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].resize */
extern void T1121f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_resize */
extern void T1121f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].special_integer_ */
extern T0* T1121s38(TC* ac);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_resize */
extern void T1121f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_resize */
extern void T1121f68(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].aliased_resized_area */
extern T0* T1686s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT].aliased_resized_area */
extern T0* T1687f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_resize */
extern void T1121f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_modulus */
extern T6 T1121f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_capacity */
extern T6 T1121f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_put */
extern void T1121f55(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].force */
extern void T1686s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLIENT].fill_with */
extern void T1687f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT].extend */
extern void T1687f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].search_position */
extern void T1121f54(TC* ac, T0* C, T0* a1);
/* ET_CLIENTS.is_none */
extern T1 T267f12(TC* ac, T0* C);
/* ET_CLIENT_LIST.is_none */
extern T1 T182f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].item */
extern T0* T1120f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].first */
extern T0* T1120f7(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.add_inherited_clients_to_list */
extern void T235f61(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_EXPORT.clients */
extern T0* T483f9(TC* ac, T0* C, T0* a1);
/* ET_ALL_EXPORT.clients */
extern T0* T697f7(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.has_feature_name */
extern T1 T483f8(TC* ac, T0* C, T0* a1);
/* ET_ALL_EXPORT.has_feature_name */
extern T1 T697f6(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.is_all */
extern T1 T483f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].force_last */
extern void T1120f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].force */
extern void T1681s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLIENT_LIST].fill_with */
extern void T1682f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT_LIST].extend */
extern void T1682f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].resize */
extern void T1120f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1681s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1682f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].new_capacity */
extern T6 T1120f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].extendible */
extern T1 T1120f9(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.flatten_redeclared_feature */
extern void T235f51(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_precursor_validity */
extern void T235f56(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_feature_validity */
extern void T1131f11(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd3b_error */
extern void T63f298(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3b */
extern T0* T1445c985(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_POSTCONDITIONS.position */
extern T0* T601f14(TC* ac, T0* C);
/* ET_POSTCONDITIONS.first */
extern T0* T601f16(TC* ac, T0* C);
/* ET_POSTCONDITIONS.is_empty */
extern T1 T601f15(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T63f57(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd3b_error */
extern void T42f298(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T42f57(TC* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.is_ensure_then */
extern T1 T601f13(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd3a_error */
extern void T63f297(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3a */
extern T0* T1445c984(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.position */
extern T0* T604f13(TC* ac, T0* C);
/* ET_PRECONDITIONS.first */
extern T0* T604f15(TC* ac, T0* C);
/* ET_PRECONDITIONS.is_empty */
extern T1 T604f14(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdrd3a_error */
extern void T42f297(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.is_require_else */
extern T1 T604f12(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.redeclared_clients */
extern T0* T235f28(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_redeclaration_validity */
extern void T235f55(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd6a_error */
extern void T63f313(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6a */
extern T0* T1445c1001(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd6a_error */
extern void T42f313(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4b_error */
extern void T63f312(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4b */
extern T0* T1445c1000(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T63f64(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd4b_error */
extern void T42f312(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T42f64(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd4c_error */
extern void T63f311(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4c */
extern T0* T1445c999(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4c_error */
extern void T42f311(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn0b_error */
extern void T63f310(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_ge_reported */
extern void T1445f998(TC* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vmfn0b */
extern T0* T1445c997(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0b_error */
extern void T42f310(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4a_error */
extern void T63f309(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4a */
extern T0* T1445c996(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4a_error */
extern void T42f309(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrs4b_error */
extern void T63f308(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs4b */
extern T0* T1445c995(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs4b_error */
extern void T42f308(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.ise_19_01_0 */
extern T0* T235s30(TC* ac);
/* ET_NULL_ERROR_HANDLER.report_vdrd5a_error */
extern void T63f307(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd5a */
extern T0* T1445c994(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T63f62(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd5a_error */
extern void T42f307(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T42f62(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7c_error */
extern void T63f306(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7c */
extern T0* T1445c993(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.first_alias_name */
extern T0* T1445f196(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T63f61(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd7c_error */
extern void T42f306(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T42f61(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7a_error */
extern void T63f305(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7a */
extern T0* T1445c992(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7a_error */
extern void T42f305(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd7b_error */
extern void T63f304(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7b */
extern T0* T1445c991(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7b_error */
extern void T42f304(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE.same_version */
extern T1 T714f85(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.same_version */
extern T1 T713f74(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.same_version */
extern T1 T712f77(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.same_version */
extern T1 T711f75(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.same_version */
extern T1 T710f87(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.same_version */
extern T1 T708f76(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.same_version */
extern T1 T707f79(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.same_version */
extern T1 T706f77(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.same_version */
extern T1 T705f78(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.same_version */
extern T1 T704f77(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.same_version */
extern T1 T703f78(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.same_version */
extern T1 T702f72(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.is_replicated */
extern T1 T1566f19(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_dotnet */
extern T1 T714f84(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_dotnet */
extern T1 T712f76(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_dotnet */
extern T1 T711f74(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_dotnet */
extern T1 T710f86(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_dotnet */
extern T1 T708f75(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_dotnet */
extern T1 T707f78(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_dotnet */
extern T1 T706f76(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_dotnet */
extern T1 T705f77(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_dotnet */
extern T1 T704f76(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_dotnet */
extern T1 T703f77(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_dotnet */
extern T1 T702f71(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_dotnet */
extern T1 T713f73(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_builtin_feature_validity */
extern void T235f53(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_feature_validity */
extern void T1130f13(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss3a_error */
extern void T63f283(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmss3a */
extern T0* T1445c970(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T63f46(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss3a_error */
extern void T42f283(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T42f46(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_immediate_feature */
extern void T235f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T1114f21(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_before */
extern T1 T1114f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T1672f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].finish */
extern void T1114f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_finish */
extern void T1114f55(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_feature_adaptations */
extern void T235f39(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_parents_validity */
extern void T235f37(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.check_parents_validity */
extern void T1128f10(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_formal_parameters_validity */
extern void T235f36(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.check_formal_parameters_validity */
extern void T1129f9(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_constraint_validity */
extern void T1129f10(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.set_fatal_error */
extern void T235f34(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_flattening_error */
extern void T70f271(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.make */
extern T0* T235c32(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_map */
extern T0* T1132c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1132f45(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_sparse_container */
extern void T1132f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].set_internal_cursor */
extern void T1132f76(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_cursor */
extern T0* T1132f35(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].make */
extern T0* T1706c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_slots */
extern void T1132f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_clashes */
extern void T1132f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_key_storage */
extern void T1132f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_item_storage */
extern void T1132f72(TC* ac, T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.make */
extern T0* T1131c10(TC* ac, T0* a1);
/* ET_PRECURSOR_CHECKER.dummy_feature */
extern T0* T1131f6(TC* ac, T0* C);
/* ET_PRECURSOR_CHECKER.current_system */
extern T0* T1131f7(TC* ac, T0* C);
/* ET_PRECURSOR_CHECKER.make */
extern void T1131f10p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.tokens */
extern T0* T1131s5(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.make */
extern T0* T1130c12(TC* ac, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.make */
extern void T1130f12p1(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_map */
extern T0* T1705c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_with_equality_testers */
extern void T1705f34(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_sparse_container */
extern void T1705f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].set_internal_cursor */
extern void T1705f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].new_cursor */
extern T0* T1705f24(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make */
extern T0* T1995c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_slots */
extern void T1705f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_clashes */
extern void T1705f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_key_storage */
extern void T1705f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_item_storage */
extern void T1705f36(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].make */
extern T0* T1996s1(TC* ac, T6 a1);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].make_empty */
extern T0* T1998c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].default_create */
extern T0* T1996c3(TC* ac);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern T0* T1129c8(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern void T1129f8p1(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.tokens */
extern T0* T1129s5(TC* ac);
/* ET_PARENT_CHECKER2.make */
extern T0* T1128c9(TC* ac, T0* a1);
/* ET_PARENT_CHECKER2.make */
extern void T1128f9p1(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.tokens */
extern T0* T1128s5(TC* ac);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern T0* T1126c8(TC* ac, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].make_default */
extern T0* T1701c10(TC* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].make */
extern void T1701f14(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T1435c11(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T1791s1(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].default_create */
extern T0* T1791c3(TC* ac);
/* DS_ARRAYED_LIST [INTEGER_32].make */
extern void T239f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].make */
extern T0* T239c17(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_map */
extern T0* T1990c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_with_equality_testers */
extern void T1990f38(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_sparse_container */
extern void T1990f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].set_internal_cursor */
extern void T1990f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].new_cursor */
extern T0* T1990f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].make */
extern T0* T2145c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_slots */
extern void T1990f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_clashes */
extern void T1990f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_key_storage */
extern void T1990f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_item_storage */
extern void T1990f55(TC* ac, T0* C, T6 a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern void T1126f8p1(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1126s7(TC* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern T0* T1125c6(TC* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern void T1125f6p1(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.tokens */
extern T0* T1125s4(TC* ac);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern T0* T1124c7(TC* ac, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.tokens */
extern T0* T1124s5(TC* ac);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_map */
extern T0* T1121c41(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_with_equality_testers */
extern void T1121f42(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_sparse_container */
extern void T1121f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].set_internal_cursor */
extern void T1121f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_slots */
extern void T1121f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_clashes */
extern void T1121f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_key_storage */
extern void T1121f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_item_storage */
extern void T1121f44(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].make */
extern T0* T1686s1(TC* ac, T6 a1);
/* SPECIAL [ET_CLIENT].make_empty */
extern T0* T1687c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].default_create */
extern T0* T1686c3(TC* ac);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].make */
extern T0* T1120c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].set_internal_cursor */
extern void T1120f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].new_cursor */
extern T0* T1120f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].make */
extern T0* T1683c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].make */
extern T0* T1681s1(TC* ac, T6 a1);
/* SPECIAL [ET_CLIENT_LIST].make_empty */
extern T0* T1682c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].default_create */
extern T0* T1681c3(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_key_equality_tester */
extern void T1117f36(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.alias_name_tester */
extern T0* T235s24(TC* ac);
/* ET_ALIAS_NAME_TESTER.default_create */
extern T0* T1118c2(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_map */
extern T0* T1117c35(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_with_equality_testers */
extern void T1117f40(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_sparse_container */
extern void T1117f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_internal_cursor */
extern void T1117f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T1117f32(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1680c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_slots */
extern void T1117f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_clashes */
extern void T1117f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_key_storage */
extern void T1117f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_item_storage */
extern void T1117f58(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.feature_name_tester */
extern T0* T235s22(TC* ac);
/* ET_FEATURE_FLATTENER.make */
extern void T235f32p1(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.error_handler */
extern T0* T235f23(TC* ac, T0* C);
/* ET_CLASS.set_features_flattened */
extern void T70f315(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.process_class */
extern void T234f14(TC* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.internal_process_class */
extern void T234f16(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1a_error */
extern void T63f247(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1a */
extern T0* T1445c933(TC* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].after */
extern T1 T777f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].forth */
extern void T777f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_forth */
extern void T69f38(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].add_traversing_cursor */
extern void T69f39(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_next_cursor */
extern void T777f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_traversing_cursor */
extern void T69f40(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].item */
extern T0* T777f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_item */
extern T0* T69f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].start */
extern void T777f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_start */
extern void T69f37(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_after */
extern void T777f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].off */
extern T1 T777f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].before */
extern T1 T777f8(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T63f30(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr1a_error */
extern void T42f247(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T42f30(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].first */
extern T0* T69f13(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.set_parents_inheritance_error */
extern void T234f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].wipe_out */
extern void T1110f13(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].wipe_out */
extern void T1666f35(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_wipe_out */
extern void T1666f46(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_wipe_out */
extern void T1666f45(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_wipe_out */
extern void T1666f44(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_wipe_out */
extern void T1666f43(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].unset_found_item */
extern void T1666f42(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].move_all_cursors_after */
extern void T1666f41(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_next_cursor */
extern void T1963f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_after */
extern void T1963f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].wipe_out */
extern void T69f27(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_all_cursors_after */
extern void T69f21(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].reset */
extern void T1110f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].is_empty */
extern T1 T69f10(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.check_parents_validity */
extern void T234f20(TC* ac, T0* C);
/* ET_PARENT_CHECKER1.check_parents_validity */
extern void T1112f9(TC* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.check_formal_parameters_validity */
extern void T234f19(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameters_validity */
extern void T1113f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].wipe_out */
extern void T1669f12(TC* ac, T0* C);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].keep_head */
extern void T1964f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].set_count */
extern void T1964f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].move_all_cursors_after */
extern void T1669f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT].set_next_cursor */
extern void T1966f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT].set_after */
extern void T1966f6(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_constraint_base_types */
extern void T1113f28(TC* ac, T0* C, T0* a1);
extern T1 T1113f28ot1(TC* ac, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.put_first */
extern void T1671f15(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.fixed_array */
extern T0* T1671f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT].default_create */
extern T0* T1965c3(TC* ac);
/* ET_BASE_TYPE_CONSTRAINT_LIST.make_with_capacity */
extern T0* T1671c14(TC* ac, T0* a1, T6 a2);
/* ET_BASE_TYPE_CONSTRAINT_LIST.make_empty_with_capacity */
extern void T1671f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT].make */
extern T0* T1965s1(TC* ac, T6 a1);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].make_empty */
extern T0* T1964c5(TC* ac, T6 a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.tokens */
extern T0* T1671s5(TC* ac);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].item */
extern T0* T1669f6(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint_base_types */
extern void T691f89(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].first */
extern T0* T1669f10(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.base_type_constraint */
extern T0* T1113f19(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ET_FORMAL_PARAMETER_CHECKER1.tokens */
extern T0* T1113s14(TC* ac);
/* ET_FORMAL_PARAMETER_CHECKER1.set_recursive_formal_constraints */
extern void T1113f27(TC* ac, T0* C, T0* a1);
extern T1 T1113f27ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_recursive_formal_constraints */
extern void T691f88(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [NATURAL_32].item */
extern T10 T1670f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [NATURAL_32].replace */
extern void T1670f12(TC* ac, T0* C, T10 a1, T6 a2);
/* ET_FORMAL_PARAMETER_CHECKER1.add_n_flags_to_list */
extern void T1113f30(TC* ac, T0* C, T10 a1, T6 a2, T0* a3);
/* DS_ARRAYED_LIST [NATURAL_32].force_last */
extern void T1670f13(TC* ac, T0* C, T10 a1);
/* DS_ARRAYED_LIST [NATURAL_32].resize */
extern void T1670f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [NATURAL_32].new_capacity */
extern T6 T1670f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [NATURAL_32].extendible */
extern T1 T1670f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [NATURAL_32].wipe_out */
extern void T1670f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [NATURAL_32].move_all_cursors_after */
extern void T1670f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [NATURAL_32].set_next_cursor */
extern void T1967f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [NATURAL_32].set_after */
extern void T1967f6(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.propagate_recursive_formal_dependencies */
extern void T1113f26(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_validity */
extern void T1113f25(TC* ac, T0* C, T0* a1);
extern T1 T1113f25ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg2a_error */
extern void T63f541(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg2a */
extern T0* T1445c1229(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T63f156(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg2a_error */
extern void T42f541(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T42f156(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg1a_error */
extern void T63f540(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg1a */
extern T0* T1445c1228(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T63f155(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg1a_error */
extern void T42f540(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T42f155(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.initalize_base_type_dependencies */
extern void T1113f23(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_CHECKER1.initalize_formal_dependencies */
extern void T1113f22(TC* ac, T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.set_ancestors */
extern void T234f18(TC* ac, T0* C);
/* ET_CLASS.set_conforming_ancestors */
extern void T70f314(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_ancestors */
extern void T70f313(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].wipe_out */
extern void T1111f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_wipe_out */
extern void T1111f54(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_wipe_out */
extern void T1111f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_wipe_out */
extern void T1111f52(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_wipe_out */
extern void T1111f51(TC* ac, T0* C);
/* SPECIAL [ET_BASE_TYPE].keep_head */
extern void T1186f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE].set_count */
extern void T1186f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].unset_found_item */
extern void T1111f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].move_all_cursors_after */
extern void T1111f49(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_next_cursor */
extern void T1667f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_after */
extern void T1667f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].forth */
extern void T1111f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_forth */
extern void T1111f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].add_traversing_cursor */
extern void T1111f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_position */
extern void T1667f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].remove_traversing_cursor */
extern void T1111f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_item */
extern T6 T1111f39(TC* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_LIST.put_last */
extern void T778f8(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].force */
extern void T1187s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].fill_with */
extern void T1186f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].extend */
extern void T1186f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_for_iteration */
extern T0* T1111f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_item */
extern T0* T1111f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_item */
extern T0* T1111f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].after */
extern T1 T1111f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_after */
extern T1 T1111f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].after */
extern T1 T1667f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].start */
extern void T1111f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_start */
extern void T1111f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_off */
extern T1 T1111f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].off */
extern T1 T1667f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].is_empty */
extern T1 T1111f24(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_parent_to_ancestors */
extern void T234f23(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_CLASS_TYPE.resolved_formal_parameters */
extern T0* T102f100(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T102f123(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T201f16(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type */
extern T0* T183f121(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters */
extern T0* T183f120(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T183f123(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T2158f15(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T691f77(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T500f79(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1448f9(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type */
extern T0* T848f78(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type */
extern T0* T725f81(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type */
extern T0* T724f84(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type */
extern T0* T722f82(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T720f9(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type */
extern T0* T199f76(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T102f128(TC* ac, T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type */
extern T0* T70f261(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T691f76(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T691f80(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T691f80ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.type_with_type_mark */
extern T0* T725f83(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_with_type_mark */
extern T0* T724f86(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_right_brace */
extern void T724f104(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_left_brace */
extern void T724f103(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.type_with_type_mark */
extern T0* T722f84(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.set_type_mark */
extern void T722f105(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.twin */
extern T0* T722f88(TC* ac, T0* C);
/* ET_LIKE_CURRENT.type_with_type_mark */
extern T0* T199f83(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.set_current_keyword */
extern void T199f97(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T500f78(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T500f82(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T500f82ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters */
extern T0* T848f77(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T848f81(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T848f81ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters */
extern T0* T725f80(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T725f86(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters */
extern T0* T724f83(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T724f89(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_formal_parameters */
extern T0* T722f81(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type_mark */
extern T0* T722f87(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_formal_parameters */
extern T0* T199f75(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type_mark */
extern T0* T199f81(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.resolved_formal_parameters */
extern T0* T70f260(TC* ac, T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type_mark */
extern T0* T70f264(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_SUBLIST.resolved_formal_parameters */
extern T0* T2159f15(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T506f26(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T185f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].force_new */
extern void T1111f45(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_put */
extern void T1111f60(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_put */
extern void T1111f59(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_put */
extern void T1111f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_put */
extern void T1111f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_item */
extern T6 T1111f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].hash_position */
extern T6 T1111f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].resize */
extern void T1111f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_resize */
extern void T1111f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].special_integer_ */
extern T0* T1111s38(TC* ac);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_resize */
extern void T1111f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_resize */
extern void T1111f65(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].aliased_resized_area */
extern T0* T1187s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_BASE_TYPE].aliased_resized_area */
extern T0* T1186f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_item */
extern T0* T1111f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_resize */
extern void T1111f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_modulus */
extern T6 T1111f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_capacity */
extern T6 T1111f35(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvagp0a_error */
extern void T63f254(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvagp0a */
extern T0* T1445c940(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T63f36(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvagp0a_error */
extern void T42f254(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T42f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].found_item */
extern T0* T1111f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].found */
extern T1 T1111f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].search */
extern void T1111f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].search_position */
extern void T1111f55(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr2a_error */
extern void T63f253(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr2a */
extern T0* T1445c939(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr2_error */
extern T1 T63f35(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr2a_error */
extern void T42f253(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr2_error */
extern T1 T42f35(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_frozen */
extern T1 T70f225(TC* ac, T0* C);
/* ET_CLASS.has_frozen_mark */
extern T1 T70f255(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvhso2a_error */
extern void T63f252(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso2a */
extern T0* T1445c938(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T63f34(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso2a_error */
extern void T42f252(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T42f34(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso1a_error */
extern void T63f250(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso1a */
extern T0* T1445c936(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T63f32(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso1a_error */
extern void T42f250(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T42f32(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhay0a_error */
extern void T63f249(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vhay0a */
extern T0* T1445c935(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhay_error */
extern T1 T63f31(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhay0a_error */
extern void T42f249(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vhay_error */
extern T1 T42f31(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1b_error */
extern void T63f248(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1b */
extern T0* T1445c934(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr1b_error */
extern void T42f248(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_LIST.is_conforming */
extern T1 T181f8(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.current_system */
extern T0* T234f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].item */
extern T0* T69f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].sort */
extern void T1110f12(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_class_to_sorter */
extern void T234f17(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.system_object_type */
extern T0* T802f87(TC* ac, T0* C);
/* ET_ECF_SYSTEM.system_object_type */
extern T0* T87f90(TC* ac, T0* C);
/* ET_SYSTEM.system_object_type */
extern T0* T50f89(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.current_universe */
extern T0* T234f11(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_parents_to_sorter */
extern void T234f22(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force_relation */
extern void T1110f15(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put_indexed_relation */
extern void T1110f19(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].count */
extern T6 T1110f8(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].index_of */
extern T6 T1110f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found_item */
extern T6 T1666f33(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_item */
extern T6 T1666f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found */
extern T1 T1666f23(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search */
extern void T1666f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search_position */
extern void T1666f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].hash_position */
extern T6 T1666f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_item */
extern T0* T1666f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_item */
extern T6 T1666f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_item */
extern T6 T1666f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force */
extern void T1110f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put */
extern void T1110f18(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].put_new */
extern void T1666f37(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_put */
extern void T1666f54(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_put */
extern void T1666f53(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_put */
extern void T1666f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_put */
extern void T1666f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].resize */
extern void T1666f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_resize */
extern void T1666f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].special_integer_ */
extern T0* T1666s29(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_resize */
extern void T1666f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_resize */
extern void T1666f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_resize */
extern void T1666f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_modulus */
extern T6 T1666f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].capacity */
extern T6 T1110f9(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has */
extern T1 T1110f7(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].has */
extern T1 T1666f21(TC* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.set_fatal_error */
extern void T234f15(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_ancestors_error */
extern void T70f270(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.make */
extern T0* T234c13(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern T0* T1113c20(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [NATURAL_32].make */
extern T0* T1670c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [NATURAL_32].set_internal_cursor */
extern void T1670f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [NATURAL_32].new_cursor */
extern T0* T1670f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [NATURAL_32].make */
extern T0* T1967c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].make */
extern T0* T1669c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].set_internal_cursor */
extern void T1669f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].new_cursor */
extern T0* T1669f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT].make */
extern T0* T1966c5(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern void T1113f20p1(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.make */
extern T0* T1112c8(TC* ac, T0* a1);
/* ET_PARENT_CHECKER1.tokens */
extern T0* T1112s5(TC* ac);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_map */
extern T0* T1111c40(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_with_equality_testers */
extern void T1111f46(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_sparse_container */
extern void T1111f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].set_internal_cursor */
extern void T1111f72(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_cursor */
extern T0* T1111f37(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].make */
extern T0* T1667c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_slots */
extern void T1111f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_clashes */
extern void T1111f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_key_storage */
extern void T1111f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_item_storage */
extern void T1111f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make_default */
extern T0* T1110c11(TC* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make */
extern void T1110f16(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_map */
extern T0* T1666c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_with_equality_testers */
extern void T1666f40(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_sparse_container */
extern void T1666f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].set_internal_cursor */
extern void T1666f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_cursor */
extern T0* T1666f32(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].make */
extern T0* T1963c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_slots */
extern void T1666f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_clashes */
extern void T1666f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_key_storage */
extern void T1666f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_item_storage */
extern void T1666f56(TC* ac, T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.make */
extern void T234f13p1(TC* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.tokens */
extern T0* T234s9(TC* ac);
/* ET_ANCESTOR_BUILDER.error_handler */
extern T0* T234f10(TC* ac, T0* C);
/* ET_CLASS.set_ancestors_built */
extern void T70f312(TC* ac, T0* C);
/* ET_PROVIDER_CHECKER.process_class */
extern void T233f7(TC* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.internal_process_class */
extern void T233f9(TC* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.check_cluster_dependence_constraints */
extern void T233f10(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gcdep_error */
extern void T63f246(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLUSTER_ERROR.make_gcdep */
extern T0* T2006c25(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].forth */
extern void T2142f12(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_forth */
extern void T1943f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].add_traversing_cursor */
extern void T1943f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_next_cursor */
extern void T2142f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_position */
extern void T2142f10(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].remove_traversing_cursor */
extern void T1943f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_after */
extern void T2142f13(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_item */
extern T6 T1943f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].key */
extern T0* T2142f4(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_key */
extern T0* T1943f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_item */
extern T0* T1943f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].after */
extern T1 T2142f6(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].start */
extern void T2142f11(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_start */
extern void T1943f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_off */
extern T1 T1943f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].off */
extern T1 T2142f8(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].new_cursor */
extern T0* T1943f29(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].make */
extern T0* T2142c9(TC* ac, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].is_empty */
extern T1 T1943f23(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T63f29(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcdep_error */
extern void T42f246(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T42f29(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcpro_error */
extern void T63f245(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLUSTER_ERROR.make_gcpro */
extern T0* T2006c24(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T63f28(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcpro_error */
extern void T42f245(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T42f28(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T1 T1559f10(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1559f10ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* Creation of agent #2 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1559f10ac2(TC* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1559f10ac3(TC* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1559f10ac4(TC* ac, T0* a1, T0* a2);
extern T1 T1559f10ot1(TC* ac, T0* a1);
/* PREDICATE [TUPLE [STRING_8]].set_rout_disp_final */
extern void T2082f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* PREDICATE [TUPLE [LX_WILDCARD]].set_rout_disp_final */
extern void T2079f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.matches_pathname */
extern T1 T1559f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* LX_DFA_WILDCARD.recognizes */
extern T1 T1942f15(TC* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.longest_end_position */
extern T6 T1942f16(TC* ac, T0* C, T0* a1, T6 a2);
/* LX_DFA_WILDCARD.set_subject */
extern void T1942f22(TC* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.is_compiled */
extern T1 T1942f18(TC* ac, T0* C);
/* ET_ECF_LIBRARY.full_name */
extern T0* T802f104(TC* ac, T0* C, T2 a1);
/* ET_ECF_LIBRARY.relative_name */
extern T0* T802f105(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_DOTNET_ASSEMBLY.name */
extern T0* T824f5(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.name */
extern T0* T207f5(TC* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.name */
extern T0* T826f17(TC* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.name */
extern T0* T821f15(TC* ac, T0* C);
/* ET_ECF_CLUSTER.parent */
extern T0* T89f31(TC* ac, T0* C);
/* ET_CLUSTER.parent */
extern T0* T67f13(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.parent */
extern T0* T262f18(TC* ac, T0* C);
/* ET_NONE_GROUP.parent */
extern T0* T198f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].there_exists */
extern T1 T169f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.full_name */
extern T0* T89f64(TC* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.relative_name */
extern T0* T89f67(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_CLUSTER.relative_name */
extern T0* T89f67p1(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.relative_name */
extern T0* T87f156(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_CLUSTER.full_name */
extern T0* T67f28(TC* ac, T0* C, T2 a1);
/* ET_CLUSTER.relative_name */
extern T0* T67f30(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_CLUSTER.relative_name */
extern T0* T67f30p1(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.relative_name */
extern T0* T50f121(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.full_name */
extern T0* T262f17(TC* ac, T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.relative_name */
extern T0* T262f20(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.full_name */
extern T0* T198f16(TC* ac, T0* C, T2 a1);
/* ET_NONE_GROUP.relative_name */
extern T0* T198f19(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_ */
extern T0* T1559s15(TC* ac);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].there_exists */
extern T1 T1943f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_item */
extern T0* T1943f30(TC* ac, T0* C, T6 a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.group_pathname */
extern T0* T1559f13(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.replace_backslashes */
extern void T1559f18(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.absolute_pathname */
extern T0* T89f44(TC* ac, T0* C);
/* ET_ECF_CLUSTER.file_system */
extern T0* T89s45(TC* ac);
/* ET_ECF_CLUSTER.unix_file_system */
extern T0* T89s49(TC* ac);
/* ET_ECF_CLUSTER.windows_file_system */
extern T0* T89s46(TC* ac);
/* ET_ECF_CLUSTER.operating_system */
extern T0* T89s61(TC* ac);
/* ET_ECF_CLUSTER.full_pathname */
extern T0* T89f47(TC* ac, T0* C);
/* ET_ECF_LIBRARY.filename */
extern T0* T802f2(TC* ac, T0* C);
/* ET_ECF_SYSTEM_CONFIG.filename */
extern T0* T801f2(TC* ac, T0* C);
/* ET_ECF_SYSTEM.filename */
extern T0* T87f2(TC* ac, T0* C);
/* ET_ECF_SETTINGS.value */
extern T0* T90f6(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.is_relative_pathname */
extern T1 T152s18(TC* ac, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname_from_file_system */
extern T0* T152f16(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.any_ */
extern T0* T152s28(TC* ac);
/* KL_WINDOWS_FILE_SYSTEM.pathname_from_file_system */
extern T0* T151f16(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.any_ */
extern T0* T151s30(TC* ac);
/* ET_ECF_VARIABLES.interpreted_string */
extern T0* T92f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_VARIABLES.expanded_string */
extern T0* T92f9(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_VARIABLES.value */
extern T0* T92f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_VARIABLES.string_ */
extern T0* T92s5(TC* ac);
/* UC_UTF8_STRING.has */
extern T1 T1066f68(TC* ac, T0* C, T2 a1);
/* UC_STRING.has */
extern T1 T909f68(TC* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.execution_environment */
extern T0* T89s60(TC* ac);
/* ET_CLUSTER.absolute_pathname */
extern T0* T67f29(TC* ac, T0* C);
/* ET_CLUSTER.file_system */
extern T0* T67s34(TC* ac);
/* ET_CLUSTER.unix_file_system */
extern T0* T67s37(TC* ac);
/* ET_CLUSTER.windows_file_system */
extern T0* T67s36(TC* ac);
/* ET_CLUSTER.operating_system */
extern T0* T67s35(TC* ac);
/* ET_CLUSTER.full_pathname */
extern T0* T67f33(TC* ac, T0* C);
/* ET_CLUSTER.execution_environment */
extern T0* T67s32(TC* ac);
/* ET_UNKNOWN_GROUP.absolute_pathname */
extern T0* T262f19(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.file_system */
extern T0* T262s24(TC* ac);
/* ET_UNKNOWN_GROUP.unix_file_system */
extern T0* T262s28(TC* ac);
/* ET_UNKNOWN_GROUP.windows_file_system */
extern T0* T262s27(TC* ac);
/* ET_UNKNOWN_GROUP.operating_system */
extern T0* T262s26(TC* ac);
/* ET_UNKNOWN_GROUP.full_pathname */
extern T0* T262f23(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.pathname */
extern T0* T262f25(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.execution_environment */
extern T0* T262s22(TC* ac);
/* ET_NONE_GROUP.absolute_pathname */
extern T0* T198f18(TC* ac, T0* C);
/* ET_NONE_GROUP.file_system */
extern T0* T198s23(TC* ac);
/* ET_NONE_GROUP.unix_file_system */
extern T0* T198s27(TC* ac);
/* ET_NONE_GROUP.windows_file_system */
extern T0* T198s26(TC* ac);
/* ET_NONE_GROUP.operating_system */
extern T0* T198s25(TC* ac);
/* ET_NONE_GROUP.full_pathname */
extern T0* T198f22(TC* ac, T0* C);
/* ET_NONE_GROUP.pathname */
extern T0* T198f24(TC* ac, T0* C);
/* ET_NONE_GROUP.execution_environment */
extern T0* T198s21(TC* ac);
/* ET_CLASS.first_non_override_overridden_class */
extern T0* T70f157(TC* ac, T0* C);
/* ET_CLASS.master_class_in_universe */
extern T0* T70f173(TC* ac, T0* C);
/* ET_PROVIDER_CHECKER.scm_mapped_cluster */
extern T0* T233f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.scm_write_mapping_recursive */
extern T0* T89f56(TC* ac, T0* C);
/* ET_CLUSTER.scm_write_mapping_recursive */
extern T0* T67f17(TC* ac, T0* C);
/* ET_PROVIDER_CHECKER.set_fatal_error */
extern void T233f8(TC* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.make */
extern T0* T233c6(TC* ac, T0* a1);
/* ET_PROVIDER_CHECKER.tokens */
extern T0* T233s3(TC* ac);
/* ET_PROVIDER_CHECKER.error_handler */
extern T0* T233f4(TC* ac, T0* C);
/* ET_AST_NULL_PROCESSOR.process_class */
extern void T238f2(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.process_class */
extern void T236f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove */
extern void T1133f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_position */
extern void T1133f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_put */
extern void T1133f49(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].key_storage_keep_head */
extern void T1133f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_keep_head */
extern void T1133f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].move_cursors_forth */
extern void T1133f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_position */
extern void T1709f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_next_cursor */
extern void T1709f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_after */
extern void T1709f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].internal_set_key_equality_tester */
extern void T1133f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].last */
extern T0* T1133f17(TC* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].is_empty */
extern T1 T1133f28(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.internal_process_class */
extern void T236f16(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.check_constraint_creations_validity */
extern void T236f20(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creation_validity */
extern void T236f23(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vggc3b_error */
extern void T63f335(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vggc3b */
extern T0* T1445c1023(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.types_to_text */
extern T0* T1884f5(TC* ac, T0* C);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.append_types_to_string */
extern void T1884f18(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.types_to_text */
extern T0* T1671f12(TC* ac, T0* C);
/* ET_BASE_TYPE_CONSTRAINT_LIST.append_types_to_string */
extern void T1671f17(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vggc3_error */
extern T1 T63f70(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vggc3b_error */
extern void T42f335(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vggc3_error */
extern T1 T42f70(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vggc3a_error */
extern void T63f334(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vggc3a */
extern T0* T1445c1022(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vggc3a_error */
extern void T42f334(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vggc3c_error */
extern void T63f333(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vggc3c */
extern T0* T1445c1021(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vggc3c_error */
extern void T42f333(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vggc3d_error */
extern void T63f332(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vggc3d */
extern T0* T1445c1020(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vggc3d_error */
extern void T42f332(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vgcp3c_error */
extern void T63f331(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3c */
extern T0* T1445c1019(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3c_error */
extern void T42f331(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INTERFACE_CHECKER.check_constraint_renamings_validity */
extern void T236f19(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_renaming_validity */
extern void T236f22(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T236f22ot1(TC* ac, T0* a1);
extern T1 T236f22ot2(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].wipe_out */
extern void T1137f39(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].slots_wipe_out */
extern void T1137f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].clashes_wipe_out */
extern void T1137f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1137f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1137f47(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].unset_found_item */
extern void T1137f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].move_all_cursors_after */
extern void T1137f45(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME].set_next_cursor */
extern void T1719f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME].set_after */
extern void T1719f7(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_not_renamed_names_validity */
extern void T236f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1t_error */
extern void T63f351(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav1t */
extern T0* T1445c1039(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav1t_error */
extern void T42f351(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav1s_error */
extern void T63f350(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav1s */
extern T0* T1445c1038(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav1s_error */
extern void T42f350(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav3g_error */
extern void T63f349(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav3g */
extern T0* T1445c1037(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav3g_error */
extern void T42f349(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav2g_error */
extern void T63f348(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav2g */
extern T0* T1445c1036(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav2g_error */
extern void T42f348(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].found_key */
extern T0* T1137f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].key_storage_item */
extern T0* T1137f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].found_item */
extern T0* T1137f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].item_storage_item */
extern T0* T1137f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].found */
extern T1 T1137f26(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].search */
extern void T1137f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].search_position */
extern void T1137f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].hash_position */
extern T6 T1137f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].clashes_item */
extern T6 T1137f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].slots_item */
extern T6 T1137f24(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vggc2f_error */
extern void T63f347(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vggc2f */
extern T0* T1445c1035(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vggc2_error */
extern T1 T63f69(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vggc2f_error */
extern void T42f347(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vggc2_error */
extern T1 T42f69(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].has */
extern T1 T1136f29(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.check_constraint_renamed_names_validity */
extern void T236f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vggc2e_error */
extern void T63f346(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vggc2e */
extern T0* T1445c1034(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vggc2e_error */
extern void T42f346(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1r_error */
extern void T63f345(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav1r */
extern T0* T1445c1033(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav1r_error */
extern void T42f345(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav4l_error */
extern void T63f344(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav4l */
extern T0* T1445c1032(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav4l_error */
extern void T42f344(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1q_error */
extern void T63f343(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav1q */
extern T0* T1445c1031(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav1q_error */
extern void T42f343(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav4k_error */
extern void T63f342(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav4k */
extern T0* T1445c1030(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav4k_error */
extern void T42f342(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav3f_error */
extern void T63f341(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav3f */
extern T0* T1445c1029(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav3f_error */
extern void T42f341(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav4j_error */
extern void T63f340(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav4j */
extern T0* T1445c1028(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav4j_error */
extern void T42f340(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].put_new */
extern void T1137f41(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].key_storage_put */
extern void T1137f58(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].item_storage_put */
extern void T1137f57(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].slots_put */
extern void T1137f52(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].clashes_put */
extern void T1137f53(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vfav2f_error */
extern void T63f339(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav2f */
extern T0* T1445c1027(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav2f_error */
extern void T42f339(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].item */
extern T0* T1137f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].has */
extern T1 T1137f29(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav4i_error */
extern void T63f338(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav4i */
extern T0* T1445c1026(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav4i_error */
extern void T42f338(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vggc2a_error */
extern void T63f337(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vggc2a */
extern T0* T1445c1025(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vggc2a_error */
extern void T42f337(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vggc2d_error */
extern void T63f336(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vggc2d */
extern T0* T1445c1024(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vggc2d_error */
extern void T42f336(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].resize */
extern void T1137f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].clashes_resize */
extern void T1137f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].special_integer_ */
extern T0* T1137s32(TC* ac);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].key_storage_resize */
extern void T1137f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].item_storage_resize */
extern void T1137f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].slots_resize */
extern void T1137f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].new_modulus */
extern T6 T1137f34(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vggc2c_error */
extern void T63f330(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vggc2c */
extern T0* T1445c1018(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.tuple_keyword */
extern T0* T183f4(TC* ac, T0* C);
/* ET_CLASS_TYPE.name */
extern T0* T102f2(TC* ac, T0* C);
/* ET_CLASS.name */
extern T0* T70f1(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vggc2c_error */
extern void T42f330(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vggc2b_error */
extern void T63f329(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vggc2b */
extern T0* T1445c1017(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vggc2b_error */
extern void T42f329(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INTERFACE_CHECKER.resolve_signatures_unfolded_tuple_actual_parameters */
extern void T236f18(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T236f21(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_type */
extern void T1135f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INTERFACE_CHECKER.check_qualified_anchored_signatures_validity */
extern void T236f17(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_signatures_validity */
extern void T1134f15(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.set_fatal_error */
extern void T236f15(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_interface_error */
extern void T70f272(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.make */
extern T0* T236c13(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].set_key_equality_tester */
extern void T1137f38(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.alias_name_tester */
extern T0* T236s11(TC* ac);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_map */
extern T0* T1137c37(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_with_equality_testers */
extern void T1137f44(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_sparse_container */
extern void T1137f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].set_internal_cursor */
extern void T1137f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].new_cursor */
extern T0* T1137f35(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME].make */
extern T0* T1719c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_slots */
extern void T1137f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_clashes */
extern void T1137f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_key_storage */
extern void T1137f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_item_storage */
extern void T1137f60(TC* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.feature_name_tester */
extern T0* T236s9(TC* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern T0* T1135c6(TC* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern void T1135f6p1(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.tokens */
extern T0* T1135s4(TC* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.set_classes_to_be_processed */
extern void T1134f14(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern T0* T1134c13(TC* ac, T0* a1);
/* ET_ADAPTED_BASE_CLASS_CHECKER.set_feature_flattening_error_only */
extern void T886f10(TC* ac, T0* C, T1 a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern void T1134f13p1(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].make */
extern T0* T1133c32(TC* ac, T6 a1);
/* DS_HASH_SET [ET_CLASS].set_internal_cursor */
extern void T1133f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].new_cursor */
extern T0* T1133f29(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].make */
extern T0* T1709c6(TC* ac, T0* a1);
/* DS_HASH_SET [ET_CLASS].make_slots */
extern void T1133f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_clashes */
extern void T1133f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_key_storage */
extern void T1133f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_item_storage */
extern void T1133f34(TC* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.make */
extern void T236f13p1(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.tokens */
extern T0* T236s10(TC* ac);
/* ET_INTERFACE_CHECKER.error_handler */
extern T0* T236f12(TC* ac, T0* C);
/* ET_CLASS.set_interface_checked */
extern void T70f318(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].force_last */
extern void T840f35(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].key_storage_put */
extern void T840f43(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].slots_put */
extern void T840f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].clashes_put */
extern void T840f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].slots_item */
extern T6 T840f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].hash_position */
extern T6 T840f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].resize */
extern void T840f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].clashes_resize */
extern void T840f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].special_integer_ */
extern T0* T840s30(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].key_storage_resize */
extern void T840f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].item_storage_resize */
extern void T840f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].key_storage_item */
extern T0* T840f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].clashes_item */
extern T6 T840f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].slots_resize */
extern void T840f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].new_modulus */
extern T6 T840f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].new_capacity */
extern T6 T840f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].item_storage_put */
extern void T840f39(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].search_position */
extern void T840f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].unset_found_item */
extern void T840f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].found_item */
extern T0* T840f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].item_storage_item */
extern T0* T840f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].found */
extern T1 T840f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].search */
extern void T840f34(TC* ac, T0* C, T0* a1);
/* ET_CLASS.append_canonical_to_string */
extern void T70f309(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_canonical_to_string */
extern void T506f31(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_canonical_actual_parameter_to_string */
extern void T691f95(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_canonical_to_string */
extern void T691f96(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T691f98(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.reference_keyword */
extern T0* T81s844(TC* ac);
/* ET_TOKEN_CONSTANTS.expanded_keyword */
extern T0* T81s843(TC* ac);
/* ET_FORMAL_PARAMETER.append_canonical_actual_parameter_to_string */
extern void T500f89(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_canonical_to_string */
extern void T500f90(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T500f91(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_canonical_to_string */
extern void T183f126(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_canonical_to_string */
extern void T2159f24(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.append_canonical_to_string */
extern void T1448f13(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.append_canonical_to_string */
extern void T1448f13p1(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_canonical_to_string */
extern void T848f88(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_unaliased_to_string */
extern void T848f89(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_canonical_to_string */
extern void T725f93(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_unaliased_to_string */
extern void T725f94(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_canonical_to_string */
extern void T724f97(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_canonical_to_string */
extern void T722f97(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_unaliased_to_string */
extern void T722f98(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_canonical_to_string */
extern void T199f90(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_unaliased_to_string */
extern void T199f91(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.tokens */
extern T0* T1448s7(TC* ac);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type_mark */
extern T0* T691f6(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.type_mark */
extern T0* T500f4(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type_mark */
extern T0* T848f2(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.type_mark */
extern T0* T725f2(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_mark */
extern T0* T724f2(TC* ac, T0* C);
/* ET_LIKE_FEATURE.type_mark */
extern T0* T722f2(TC* ac, T0* C);
/* ET_LIKE_CURRENT.type_mark */
extern T0* T199f1(TC* ac, T0* C);
/* ET_CLASS.class_mark */
extern T0* T70f36(TC* ac, T0* C);
/* ET_TUPLE_TYPE.type_mark */
extern T0* T183f2(TC* ac, T0* C);
/* ET_CLASS_TYPE.type_mark */
extern T0* T102f1(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.append_canonical_actual_parameter_to_string */
extern void T848f86(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_canonical_actual_parameter_to_string */
extern void T725f91(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_canonical_actual_parameter_to_string */
extern void T724f96(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_canonical_actual_parameter_to_string */
extern void T722f96(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.append_canonical_to_string */
extern void T720f13(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.append_canonical_to_string */
extern void T720f13p1(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.tokens */
extern T0* T720s7(TC* ac);
/* ET_LIKE_CURRENT.append_canonical_actual_parameter_to_string */
extern void T199f89(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_canonical_actual_parameter_to_string */
extern void T183f129(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_canonical_actual_parameter_to_string */
extern void T102f135(TC* ac, T0* C, T0* a1);
/* ET_CLASS.append_canonical_actual_parameter_to_string */
extern void T70f323(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_canonical_to_string */
extern void T185f30(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_canonical_to_string */
extern void T102f132(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_canonical_to_string */
extern void T201f19(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_canonical_to_string */
extern void T2158f21(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.type_name_buffer */
extern T0* T95f66(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_dynamic_primary_type */
extern T0* T95f65(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.register_dynamic_type */
extern void T95f101(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.propagate_conforming_ancestors */
extern void T95f111(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.null_system_processor */
extern T0* T81s600(TC* ac);
/* ET_SYSTEM_PROCESSOR.make_null */
extern void T66f51(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.make_null */
extern T0* T66c51(TC* ac);
/* ET_SYSTEM_PROCESSOR.set_qualified_anchored_types_cycle_detection_enabled_only */
extern void T66f58(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_unknown_builtin_reported_only */
extern void T66f57(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_preparse_shallow_mode_only */
extern void T66f56(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_default_keyword_usage_only */
extern void T66f55(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_use_detachable_keyword_only */
extern void T66f63(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_attached_keyword_only */
extern void T66f62(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_reference_keyword_only */
extern void T66f61(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_note_keyword_only */
extern void T66f60(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_attribute_keyword_only */
extern void T66f59(TC* ac, T0* C, T1 a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.make */
extern T0* T241c3(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.null_error_handler */
extern T0* T81s64(TC* ac);
/* ET_NULL_ERROR_HANDLER.make_null */
extern T0* T63c193(TC* ac);
/* ET_NULL_ERROR_HANDLER.make_null */
extern void T63f193p1(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.null_output_stream */
extern T0* T63s25(TC* ac);
/* KL_NULL_TEXT_OUTPUT_STREAM.make */
extern T0* T229c3(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.null_ast_processor */
extern T0* T81s63(TC* ac);
/* ET_AST_NULL_PROCESSOR.make */
extern T0* T238c1(TC* ac);
/* ET_TOKEN_CONSTANTS.default_ast_factory */
extern T0* T81s62(TC* ac);
/* ET_AST_FACTORY.make */
extern T0* T65c374(TC* ac);
/* ET_SYSTEM_PROCESSOR.tokens */
extern T0* T66s42(TC* ac);
/* DS_ARRAYED_LIST [INTEGER_32].make_default */
extern T0* T239c16(TC* ac);
/* DS_ARRAYED_LIST [INTEGER_32].default_capacity */
extern T6 T239f7(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.conforming_ancestors */
extern T0* T1049f11(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforming_ancestors */
extern T0* T1048f11(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.conforming_ancestors */
extern T0* T894f11(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.conforming_ancestors */
extern T0* T966f11(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.conforming_ancestors */
extern T0* T838f11(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_next_type */
extern void T1049f79(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_next_type */
extern void T1048f79(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_next_type */
extern void T894f76(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_next_type */
extern void T966f78(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_next_type */
extern void T838f75(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_index */
extern void T70f308(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_hash_code */
extern void T1049f78(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_hash_code */
extern void T1048f78(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_hash_code */
extern void T894f75(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_hash_code */
extern void T966f77(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_hash_code */
extern void T838f74(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].force_last */
extern void T116f19(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T116f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T116f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].extendible */
extern T1 T116f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.make */
extern T0* T838c68(TC* ac, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T930c37(TC* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T930f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T930f18(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T976c9(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].make_slots */
extern void T930f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].make_clashes */
extern void T930f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].make_key_storage */
extern void T930f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].make_item_storage */
extern void T930f43(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.empty_features */
extern T0* T838f45(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.make */
extern T0* T839c14(TC* ac);
/* ET_DYNAMIC_SYSTEM.new_predicate_type */
extern T0* T95f72(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.make */
extern T0* T1049c72(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_FUNCTION_TYPE.make_type */
extern void T1049f93(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.empty_features */
extern T0* T1049f65(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.empty_dynamic_type_sets */
extern T0* T95f73(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_function_type */
extern T0* T95f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.new_procedure_type */
extern T0* T95f70(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.make */
extern T0* T1048c72(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.make_type */
extern void T1048f93(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.empty_features */
extern T0* T1048f65(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_type_type */
extern T0* T95f69(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.new_tuple_type */
extern T0* T95f68(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.make */
extern T0* T894c69(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.make_type */
extern void T894f83(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.empty_features */
extern T0* T894f55(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_special_type */
extern T0* T95f67(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.make */
extern T0* T966c71(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.make_type */
extern void T966f85(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.empty_features */
extern T0* T966f58(TC* ac, T0* C);
/* ET_TUPLE_TYPE.same_as_base_class */
extern T1 T183f12(TC* ac, T0* C);
/* ET_CLASS_TYPE.same_as_base_class */
extern T1 T102f12(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T691f18(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T691f18ot1(TC* ac, T0* a1);
extern T1 T691f18ot2(TC* ac, T0* a1);
extern T1 T691f18ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T500f17(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T500f17ot1(TC* ac, T0* a1);
extern T1 T500f17ot2(TC* ac, T0* a1);
extern T1 T500f17ot3(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.base_type_with_type_mark */
extern T0* T722f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_with_type_mark */
extern T0* T848f11(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T848f11ot1(TC* ac, T0* a1);
extern T1 T848f11ot2(TC* ac, T0* a1);
extern T1 T848f11ot3(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_type_with_type_mark */
extern T0* T725f13(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T725f13ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_with_type_mark */
extern T0* T724f16(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T724f16ot1(TC* ac, T0* a1);
/* ET_CLASS.base_type_with_type_mark */
extern T0* T70f149(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.named_types */
extern T0* T506f6(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_type_with_type_mark */
extern T0* T199f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T847f21(TC* ac, T0* C, T0* a1);
extern T1 T847f21ot1(TC* ac, T0* a1);
/* ET_LIKE_N.base_type_with_type_mark */
extern T0* T1844f6(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_base_type_with_type_mark */
extern T0* T183f39(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_base_type_with_type_mark */
extern T0* T70f153(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_with_type_mark */
extern T0* T102f39(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_type_with_type_mark */
extern T0* T183f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_SUBLIST.named_types */
extern T0* T2159f16(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T691f57(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T500f58(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1448f4(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_with_type */
extern T0* T848f33(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_parameter_with_type */
extern T0* T725f35(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_parameter_with_type */
extern T0* T724f36(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_parameter_with_type */
extern T0* T722f25(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T720f5(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_parameter_with_type */
extern T0* T199f28(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_with_type */
extern T0* T183f53(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_with_type */
extern T0* T102f52(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_parameter_with_type */
extern T0* T70f182(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.named_types */
extern T0* T185f7(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_type_with_type_mark */
extern T0* T102f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T201f2(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T2158f16(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.next_type */
extern T0* T1049f16(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.next_type */
extern T0* T1048f16(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.next_type */
extern T0* T894f21(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.next_type */
extern T0* T966f21(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.next_type */
extern T0* T838f19(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded */
extern T1 T691f39(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_expanded */
extern T1 T500f41(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_expanded */
extern T1 T722f11(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded */
extern T1 T848f10(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_expanded */
extern T1 T725f12(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded */
extern T1 T724f15(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_expanded */
extern T1 T70f148(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_expanded */
extern T1 T199f8(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_expanded */
extern T1 T183f8(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_expanded */
extern T1 T102f125(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_tuple_class */
extern T1 T70f121(TC* ac, T0* C);
/* ET_CLASS.is_generic */
extern T1 T70f120(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_class */
extern T0* T691f38(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.base_class */
extern T0* T500f40(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_class */
extern T0* T722f10(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.base_class */
extern T0* T848f9(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_class */
extern T0* T725f11(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_class */
extern T0* T724f14(TC* ac, T0* C, T0* a1);
/* ET_CLASS.base_class_in_context */
extern T0* T70f147(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_class */
extern T0* T199f7(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_class_in_context */
extern T0* T183f6(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_class_in_context */
extern T0* T102f118(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.implicit_detachable_non_separate_type_mark */
extern T0* T81s596(TC* ac);
/* ET_DYNAMIC_SYSTEM.tokens */
extern T0* T95s75(TC* ac);
/* ET_DYNAMIC_SECONDARY_TYPE.base_type */
extern T0* T969f9(TC* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_index */
extern void T1446f11(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT.set_index */
extern void T491f10(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_index */
extern void T303f123(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_COMMA_ARGUMENT.name */
extern T0* T1446f8(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT.name */
extern T0* T491f8(TC* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.put_last */
extern void T858f11(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.type */
extern T0* T1446f7(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT.type */
extern T0* T491f7(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.argument_type_set */
extern T0* T860f26(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.argument_type_set */
extern T0* T845f25(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.formal_argument */
extern T0* T497f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.make_with_capacity */
extern T0* T858c9(TC* ac, T6 a1);
/* ET_EXTERNAL_PROCEDURE.arguments */
extern T0* T714f1(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.arguments */
extern T0* T712f1(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.arguments */
extern T0* T710f1(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.arguments */
extern T0* T708f1(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.arguments */
extern T0* T707f1(TC* ac, T0* C);
/* ET_DO_FUNCTION.arguments */
extern T0* T706f1(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments */
extern T0* T705f49(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments */
extern T0* T704f47(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.arguments */
extern T0* T703f51(TC* ac, T0* C);
/* ET_ATTRIBUTE.arguments */
extern T0* T702f45(TC* ac, T0* C);
/* ET_DO_PROCEDURE.arguments */
extern T0* T711f3(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.arguments */
extern T0* T713f5(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.set_never_void */
extern void T1814f16(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_never_void */
extern void T924f16(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.set_never_void */
extern void T1050f16(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_never_void */
extern void T1049f80(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_never_void */
extern void T1048f80(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_never_void */
extern void T894f77(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_never_void */
extern void T966f79(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.set_never_void */
extern void T969f31(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.set_never_void */
extern void T838f76(TC* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T842f10(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T100f76(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.make */
extern T0* T1050c15(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type */
extern void T1050f20(TC* ac, T0* C, T0* a1);
extern T1 T1050f20ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.alive_conforming_descendants */
extern T0* T842f12(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].force_last_new */
extern void T862f44(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_put */
extern void T862f54(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_put */
extern void T862f53(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].slots_put */
extern void T862f52(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].clashes_put */
extern void T862f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].slots_item */
extern T6 T862f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].hash_position */
extern T6 T862f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].resize */
extern void T862f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].clashes_resize */
extern void T862f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T862s36(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T862f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T862f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T862f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].slots_resize */
extern void T862f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T862f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T862f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].unset_found_item */
extern void T862f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].found_item */
extern T0* T862f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].found */
extern T1 T862f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].search */
extern void T862f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].search_position */
extern void T862f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_map_default */
extern T0* T862c40(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_map */
extern void T862f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T862f55(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T862f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T862f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T862f38(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make */
extern T0* T1636c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_slots */
extern void T862f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_clashes */
extern void T862f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_key_storage */
extern void T862f64(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].make */
extern T0* T1289s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].make_empty */
extern T0* T1288c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].default_create */
extern T0* T1289c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_item_storage */
extern void T862f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].default_capacity */
extern T6 T862f30(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.alive_conforming_descendants */
extern T0* T100f68(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.object_id_dynamic_type_set */
extern T0* T842f11(TC* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.mark_type_alive */
extern void T842f17(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.current_system */
extern T0* T842f9(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_alive */
extern void T1049f73(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_alive */
extern void T1048f73(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_alive */
extern void T894f70(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_alive */
extern void T966f72(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.set_alive */
extern void T838f69(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_type_alive */
extern void T100f104(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.primary_type */
extern T0* T1049f47(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.primary_type */
extern T0* T1048f47(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.primary_type */
extern T0* T894f52(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.primary_type */
extern T0* T966f55(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.primary_type */
extern T0* T838f30(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.primary_type */
extern T0* T969f1(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.dynamic_type */
extern T0* T95f61(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.set_attached_type */
extern void T1049f77(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_attached_type */
extern void T1048f77(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_attached_type */
extern void T894f73(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_attached_type */
extern void T966f75(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_attached_type */
extern void T838f72(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_attached_separate_type */
extern void T1049f75(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_attached_separate_type */
extern void T1048f75(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_attached_separate_type */
extern void T894f72(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_attached_separate_type */
extern void T966f74(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_attached_separate_type */
extern void T838f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_separate_type */
extern void T1049f74(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_separate_type */
extern void T1048f74(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_separate_type */
extern void T894f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_separate_type */
extern void T966f73(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_separate_type */
extern void T838f70(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.make */
extern T0* T969c29(TC* ac, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.base_type */
extern T0* T1049f3(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.base_type */
extern T0* T1048f3(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.base_type */
extern T0* T966f3(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.base_type */
extern T0* T894f3(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.base_type */
extern T0* T838f5(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_unique_attribute */
extern T1 T714f39(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_unique_attribute */
extern T1 T712f38(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_unique_attribute */
extern T1 T710f48(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_unique_attribute */
extern T1 T708f44(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_unique_attribute */
extern T1 T707f47(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_unique_attribute */
extern T1 T706f46(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_unique_attribute */
extern T1 T705f42(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_unique_attribute */
extern T1 T704f40(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_unique_attribute */
extern T1 T703f46(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_unique_attribute */
extern T1 T702f38(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_unique_attribute */
extern T1 T711f42(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_unique_attribute */
extern T1 T713f39(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_constant_attribute */
extern T1 T714f38(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_constant_attribute */
extern T1 T712f37(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_constant_attribute */
extern T1 T710f47(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_constant_attribute */
extern T1 T708f43(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_constant_attribute */
extern T1 T707f46(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_constant_attribute */
extern T1 T706f45(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_constant_attribute */
extern T1 T705f41(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_constant_attribute */
extern T1 T704f39(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_constant_attribute */
extern T1 T703f45(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_constant_attribute */
extern T1 T702f37(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_constant_attribute */
extern T1 T711f41(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_constant_attribute */
extern T1 T713f38(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.type */
extern T0* T714f37(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.type */
extern T0* T712f36(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.type */
extern T0* T710f53(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.type */
extern T0* T708f48(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.type */
extern T0* T707f51(TC* ac, T0* C);
/* ET_DO_FUNCTION.type */
extern T0* T706f50(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.type */
extern T0* T705f48(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.type */
extern T0* T704f46(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.type */
extern T0* T703f50(TC* ac, T0* C);
/* ET_ATTRIBUTE.type */
extern T0* T702f44(TC* ac, T0* C);
/* ET_DO_PROCEDURE.type */
extern T0* T711f40(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.type */
extern T0* T713f37(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.tokens */
extern T0* T845s32(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_map */
extern T0* T1276c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_with_equality_testers */
extern void T1276f35(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_sparse_container */
extern void T1276f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].set_internal_cursor */
extern void T1276f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].new_cursor */
extern T0* T1276f22(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make */
extern T0* T1762c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_slots */
extern void T1276f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_clashes */
extern void T1276f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_key_storage */
extern void T1276f38(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].make */
extern T0* T1764s1(TC* ac, T6 a1);
/* SPECIAL [ET_CALL_NAME].make_empty */
extern T0* T1760c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].default_create */
extern T0* T1764c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_item_storage */
extern void T1276f37(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].make */
extern T0* T1763s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].make_empty */
extern T0* T1758c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].default_create */
extern T0* T1763c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_map */
extern T0* T1277c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_with_equality_testers */
extern void T1277f36(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_sparse_container */
extern void T1277f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].set_internal_cursor */
extern void T1277f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].new_cursor */
extern T0* T1277f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make */
extern T0* T1768c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_slots */
extern void T1277f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_clashes */
extern void T1277f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_key_storage */
extern void T1277f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_item_storage */
extern void T1277f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL].make */
extern T0* T1767s2(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL].make_empty */
extern T0* T1765c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL].default_create */
extern T0* T1767c3(TC* ac);
/* ET_DYNAMIC_FEATURE.empty_dynamic_type_sets */
extern T0* T845f31(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_static */
extern T1 T714f36(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_static */
extern T1 T714f36p1(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.has_static_mark */
extern T1 T714f51(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.has_class_postcondition_recursive */
extern T1 T714f55(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.has_class_postcondition_recursive */
extern T1 T713f36(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.has_class_postcondition_recursive */
extern T1 T712f51(TC* ac, T0* C);
/* ET_DO_PROCEDURE.has_class_postcondition_recursive */
extern T1 T711f38(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.has_class_postcondition_recursive */
extern T1 T710f60(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_class_postcondition_recursive */
extern T1 T708f52(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.has_class_postcondition_recursive */
extern T1 T707f56(TC* ac, T0* C);
/* ET_DO_FUNCTION.has_class_postcondition_recursive */
extern T1 T706f54(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T705f55(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T704f53(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T703f54(TC* ac, T0* C);
/* ET_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T702f48(TC* ac, T0* C);
/* ET_POSTCONDITIONS.has_class_assertion */
extern T1 T601f7(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_class_assertion */
extern T1 T530f19(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_class_assertion */
extern T1 T509f22(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_class_assertion */
extern T1 T436f26(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_class_assertion */
extern T1 T379f20(TC* ac, T0* C);
/* ET_CALL_AGENT.is_class_assertion */
extern T1 T376f21(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_class_assertion */
extern T1 T373f18(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_class_assertion */
extern T1 T339f31(TC* ac, T0* C);
/* ET_VOID.is_class_assertion */
extern T1 T327f21(TC* ac, T0* C);
/* ET_RESULT.is_class_assertion */
extern T1 T318f22(TC* ac, T0* C);
/* ET_IDENTIFIER.is_class_assertion */
extern T1 T303f59(TC* ac, T0* C);
/* ET_CURRENT.is_class_assertion */
extern T1 T297f25(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_class_assertion */
extern T1 T1033f17(TC* ac, T0* C);
/* ET_TAGGED_ASSERTION.is_class_assertion */
extern T1 T772f5(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_class_assertion */
extern T1 T764f27(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_class_assertion */
extern T1 T763f35(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_class_assertion */
extern T1 T762f31(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_class_assertion */
extern T1 T761f29(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_class_assertion */
extern T1 T760f36(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_class_assertion */
extern T1 T759f32(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_class_assertion */
extern T1 T757f16(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_class_assertion */
extern T1 T756f17(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_class_assertion */
extern T1 T755f20(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_class_assertion */
extern T1 T754f19(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_class_assertion */
extern T1 T753f23(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_class_assertion */
extern T1 T752f16(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_class_assertion */
extern T1 T751f18(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_class_assertion */
extern T1 T750f17(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_class_assertion */
extern T1 T749f16(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_class_assertion */
extern T1 T748f16(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_class_assertion */
extern T1 T745f18(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_class_assertion */
extern T1 T744f16(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_class_assertion */
extern T1 T743f16(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_class_assertion */
extern T1 T742f16(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_class_assertion */
extern T1 T741f16(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_class_assertion */
extern T1 T740f21(TC* ac, T0* C);
/* ET_CLASS_ASSERTION.is_class_assertion */
extern T1 T719s5(TC* ac);
/* ET_C2_CHARACTER_CONSTANT.is_class_assertion */
extern T1 T686f23(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_class_assertion */
extern T1 T685f23(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_class_assertion */
extern T1 T684f24(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_class_assertion */
extern T1 T683f24(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_class_assertion */
extern T1 T681f25(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_class_assertion */
extern T1 T680f25(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_class_assertion */
extern T1 T679f27(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_class_assertion */
extern T1 T678f27(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_class_assertion */
extern T1 T677f27(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_class_assertion */
extern T1 T676f27(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_class_assertion */
extern T1 T675f29(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_class_assertion */
extern T1 T674f28(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_class_assertion */
extern T1 T673f25(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_class_assertion */
extern T1 T672f23(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_class_assertion */
extern T1 T671f25(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_class_assertion */
extern T1 T630f22(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_class_assertion */
extern T1 T627f21(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_class_assertion */
extern T1 T613f30(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_class_assertion */
extern T1 T568f23(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_class_assertion */
extern T1 T559f23(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_class_assertion */
extern T1 T589f17(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_static */
extern T1 T712f35(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.has_static_mark */
extern T1 T712f50(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_static */
extern T1 T710f46(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_static */
extern T1 T710f46p1(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.has_static_mark */
extern T1 T710f56(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_static */
extern T1 T708f42(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_static_mark */
extern T1 T708f51(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_static */
extern T1 T707f45(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.has_static_mark */
extern T1 T707f55(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_static */
extern T1 T706f44(TC* ac, T0* C);
/* ET_DO_FUNCTION.has_static_mark */
extern T1 T706f53(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_static */
extern T1 T705f40(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_static */
extern T1 T705f40p1(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.has_static_mark */
extern T1 T705f52(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_static */
extern T1 T704f38(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_static */
extern T1 T704f38p1(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.has_static_mark */
extern T1 T704f50(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_static */
extern T1 T703f44(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.has_static_mark */
extern T1 T703f53(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_static */
extern T1 T702f36(TC* ac, T0* C);
/* ET_ATTRIBUTE.has_static_mark */
extern T1 T702f47(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_static */
extern T1 T711f39(TC* ac, T0* C);
/* ET_DO_PROCEDURE.has_static_mark */
extern T1 T711f50(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_static */
extern T1 T713f35(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.has_static_mark */
extern T1 T713f48(TC* ac, T0* C);
/* ET_DO_PROCEDURE.make */
extern T0* T711c81(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.tokens */
extern T0* T711s31(TC* ac);
/* ET_DYNAMIC_FUNCTION_TYPE.base_class */
extern T0* T1049f2(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.base_class */
extern T0* T1048f2(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.base_class */
extern T0* T966f2(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.base_class */
extern T0* T894f2(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.base_class */
extern T0* T838f7(TC* ac, T0* C);
/* ET_IDENTIFIER.make */
extern T0* T303c118(TC* ac, T0* a1);
/* ET_C_GENERATOR.close_cpp_file */
extern void T114f709(TC* ac, T0* C);
/* ET_C_GENERATOR.close_c_file */
extern void T114f708(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.delete_file */
extern void T152s38(TC* ac, T0* a1);
/* KL_TEXT_INPUT_FILE.delete */
extern void T43f76(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_delete */
extern void T43f79(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_unlink */
extern void T43s81(TC* ac, T14 a1);
/* KL_WINDOWS_FILE_SYSTEM.delete_file */
extern void T151s41(TC* ac, T0* a1);
/* ET_C_GENERATOR.include_file */
extern void T114f707(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.report_cannot_read_error */
extern void T114f710(TC* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T229f9(TC* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T229f9p1(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.read_string */
extern void T43f77(TC* ac, T0* C, T6 a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T912f10(TC* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T912f10p1(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T950f44(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T950f44p1(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T943f34(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].slots_wipe_out */
extern void T943f43(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].clashes_wipe_out */
extern void T943f42(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].key_storage_wipe_out */
extern void T943f41(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].item_storage_wipe_out */
extern void T943f40(TC* ac, T0* C);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].keep_head */
extern void T1408f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].set_count */
extern void T1408f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].unset_found_item */
extern void T943f39(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T943f38(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T1410f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T1410f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].wipe_out */
extern void T942f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].slots_wipe_out */
extern void T942f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].clashes_wipe_out */
extern void T942f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].key_storage_wipe_out */
extern void T942f47(TC* ac, T0* C);
/* SPECIAL [ET_INLINE_CONSTANT].keep_head */
extern void T1405f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].set_count */
extern void T1405f7(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].item_storage_wipe_out */
extern void T942f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].move_all_cursors_after */
extern void T942f44(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].set_next_cursor */
extern void T1404f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].set_after */
extern void T1404f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].wipe_out */
extern void T941f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_wipe_out */
extern void T941f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_wipe_out */
extern void T941f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_wipe_out */
extern void T941f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_wipe_out */
extern void T941f47(TC* ac, T0* C);
/* SPECIAL [ET_CONSTANT].keep_head */
extern void T1401f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CONSTANT].set_count */
extern void T1401f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].move_all_cursors_after */
extern void T941f45(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_next_cursor */
extern void T1400f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_after */
extern void T1400f9(TC* ac, T0* C);
/* ARRAY [INTEGER_32].fill_with */
extern void T940f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].wipe_out */
extern void T939f37(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].slots_wipe_out */
extern void T939f47(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].clashes_wipe_out */
extern void T939f46(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].key_storage_wipe_out */
extern void T939f45(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].item_storage_wipe_out */
extern void T939f44(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].move_all_cursors_after */
extern void T939f42(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE].set_next_cursor */
extern void T1399f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE].set_after */
extern void T1399f7(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].wipe_out */
extern void T948f46(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_wipe_out */
extern void T948f58(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_wipe_out */
extern void T948f57(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_wipe_out */
extern void T948f56(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_wipe_out */
extern void T948f55(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].unset_found_item */
extern void T948f54(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].move_all_cursors_after */
extern void T948f53(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_next_cursor */
extern void T1422f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_after */
extern void T1422f9(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].wipe_out */
extern void T99f45(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].slots_wipe_out */
extern void T99f63(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].clashes_wipe_out */
extern void T99f62(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].key_storage_wipe_out */
extern void T99f61(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].item_storage_wipe_out */
extern void T99f60(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].move_all_cursors_after */
extern void T99f59(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].is_empty */
extern T1 T99f31(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].forth */
extern void T948f45(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_forth */
extern void T948f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].add_traversing_cursor */
extern void T948f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_position */
extern void T1422f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].remove_traversing_cursor */
extern void T948f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_item */
extern T6 T948f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_for_iteration */
extern T0* T948f30(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_key */
extern T0* T948f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_item */
extern T0* T948f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_for_iteration */
extern T1 T948f21(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_item */
extern T1 T948f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_item */
extern T1 T948f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].after */
extern T1 T948f35(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_after */
extern T1 T948f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].after */
extern T1 T1422f4(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].start */
extern void T948f44(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_start */
extern void T948f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_off */
extern T1 T948f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].off */
extern T1 T1422f7(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].is_empty */
extern T1 T948f31(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].forth */
extern void T99f75(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_forth */
extern void T99f76(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].add_traversing_cursor */
extern void T99f69(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].remove_traversing_cursor */
extern void T99f68(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_runtime_file */
extern void T114f706(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [STRING_8].item_for_iteration */
extern T0* T99f20(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_item */
extern T0* T99f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].after */
extern T1 T99f34(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_after */
extern T1 T99f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].after */
extern T1 T854f4(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].start */
extern void T99f42(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_start */
extern void T99f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].cursor_off */
extern T1 T99f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].off */
extern T1 T854f8(TC* ac, T0* C);
/* ET_C_GENERATOR.print_end_extern_c */
extern void T114f705(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_main_function */
extern void T114f704(TC* ac, T0* C);
/* ET_C_GENERATOR.print_show_console_call */
extern void T114f787(TC* ac, T0* C);
/* ET_C_GENERATOR.temp_variable */
extern T0* T114f217(TC* ac, T0* C);
/* ET_C_GENERATOR.print_types_array */
extern void T114f703(TC* ac, T0* C);
extern T1 T114f703ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_SYSTEM.is_new_instance_type */
extern T1 T95f62(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.runtime_name_to_text */
extern T0* T183f29(TC* ac, T0* C);
/* ET_TUPLE_TYPE.append_runtime_name_to_string */
extern void T183f128(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_runtime_name_to_string */
extern void T2159f26(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_runtime_name_to_string */
extern void T691f93(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_runtime_name_to_string */
extern void T500f88(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_runtime_name_to_string */
extern void T848f85(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_runtime_name_to_string */
extern void T725f90(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_runtime_name_to_string */
extern void T724f94(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_runtime_name_to_string */
extern void T722f94(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_runtime_name_to_string */
extern void T199f88(TC* ac, T0* C, T0* a1);
/* ET_CLASS.append_runtime_name_to_string */
extern void T70f311(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_runtime_name_to_string */
extern void T506f33(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_runtime_name_to_string */
extern void T102f134(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_runtime_name_to_string */
extern void T201f21(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_runtime_name_to_string */
extern void T2158f23(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_runtime_name_to_string */
extern void T185f33(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.runtime_name_to_text */
extern T0* T102f29(TC* ac, T0* C);
/* ET_CLASS.runtime_name_to_text */
extern T0* T70f113(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_tuple */
extern T1 T1049f50(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_tuple */
extern T1 T1048f50(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_tuple */
extern T1 T894s61(TC* ac);
/* ET_DYNAMIC_SPECIAL_TYPE.is_tuple */
extern T1 T966f62(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_tuple */
extern T1 T838f59(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.type_id */
extern T6 T1049f46(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.type_id */
extern T6 T1048f46(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.type_id */
extern T6 T894f51(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.type_id */
extern T6 T966f54(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.type_id */
extern T6 T838f46(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.type_id */
extern T6 T969f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T116f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T116f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T1008f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T1008f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].sort */
extern void T116f14(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE].sort */
extern void T968f3(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE].sort_with_comparator */
extern void T968f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE].subsort_with_comparator */
extern void T968f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].swap */
extern void T116f22(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].replace */
extern void T116f21(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID.less_than */
extern T1 T970f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].is_empty */
extern T1 T116f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].append_last */
extern void T116f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].extend_last */
extern void T116f18(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].forth */
extern void T976f14(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].cursor_forth */
extern void T930f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].add_traversing_cursor */
extern void T930f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T976f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].set_position */
extern void T976f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].remove_traversing_cursor */
extern void T930f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T976f10(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].item */
extern T0* T976f5(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].cursor_item */
extern T0* T930f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].after */
extern T1 T976f8(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].start */
extern void T976f13(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].cursor_start */
extern void T930f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].cursor_off */
extern T1 T930f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].off */
extern T1 T976f6(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].is_empty */
extern T1 T930f21(TC* ac, T0* C);
/* DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T968c2(TC* ac, T0* a1);
/* ET_C_GENERATOR.dynamic_primary_type_comparator */
extern T0* T114s225(TC* ac);
/* ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID.make */
extern T0* T970c2(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T116c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T116f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T116f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T1008c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].found_item */
extern T0* T943f28(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].item_storage_item */
extern T0* T943f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].found */
extern T1 T943f29(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].search */
extern void T943f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].search_position */
extern void T943f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].hash_position */
extern T6 T943f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].key_storage_item */
extern T0* T943f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].clashes_item */
extern T6 T943f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].slots_item */
extern T6 T943f21(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_dynamic_type_id_set_constants */
extern void T114f702(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].forth */
extern void T827f54(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_forth */
extern void T827f71(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.occurrences */
extern T6 T1066f37(TC* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.code_occurrences */
extern T6 T1066f57(TC* ac, T0* C, T6 a1);
/* UC_STRING.occurrences */
extern T6 T909f28(TC* ac, T0* C, T2 a1);
/* UC_STRING.code_occurrences */
extern T6 T909f50(TC* ac, T0* C, T6 a1);
/* STRING_8.occurrences */
extern T6 T17f42(TC* ac, T0* C, T2 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_for_iteration */
extern T0* T827f38(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_for_iteration */
extern T0* T827f37(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].after */
extern T1 T827f36(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_after */
extern T1 T827f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].after */
extern T1 T951f4(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].start */
extern void T827f53(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_start */
extern void T827f70(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_init_const_function */
extern void T114f701(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].forth */
extern void T942f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_forth */
extern void T942f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].add_traversing_cursor */
extern void T942f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].set_position */
extern void T1404f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].remove_traversing_cursor */
extern void T942f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].item_for_iteration */
extern T0* T942f20(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_item */
extern T0* T942f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].item_storage_item */
extern T0* T942f36(TC* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.constant */
extern T0* T756f20(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].key_for_iteration */
extern T0* T942f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_key */
extern T0* T942f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].after */
extern T1 T942f21(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_after */
extern T1 T942f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].after */
extern T1 T1404f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].start */
extern void T942f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_start */
extern void T942f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_off */
extern T1 T942f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].off */
extern T1 T1404f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].is_empty */
extern T1 T942f23(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].forth */
extern void T941f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_forth */
extern void T941f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].add_traversing_cursor */
extern void T941f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_position */
extern void T1400f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].remove_traversing_cursor */
extern void T941f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_for_iteration */
extern T0* T941f23(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_item */
extern T0* T941f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_item */
extern T0* T941f20(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_once_status_name */
extern void T114f779(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].has */
extern T1 T939f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_for_iteration */
extern T0* T941f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_key */
extern T0* T941f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].after */
extern T1 T941f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_after */
extern T1 T941f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].after */
extern T1 T1400f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].start */
extern void T941f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_start */
extern void T941f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_off */
extern T1 T941f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].off */
extern T1 T1400f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].is_empty */
extern T1 T941f28(TC* ac, T0* C);
/* ET_C_GENERATOR.print_constants_declaration */
extern void T114f700(TC* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_functions */
extern void T114f699(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T931f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].slots_wipe_out */
extern void T931f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].clashes_wipe_out */
extern void T931f52(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].key_storage_wipe_out */
extern void T931f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].item_storage_wipe_out */
extern void T931f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].unset_found_item */
extern void T931f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T931f48(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T1385f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T1385f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].forth */
extern void T931f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].cursor_forth */
extern void T931f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].add_traversing_cursor */
extern void T931f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].set_position */
extern void T1385f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].remove_traversing_cursor */
extern void T931f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].clashes_item */
extern T6 T931f24(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_deep_twin_polymorphic_call_function */
extern void T114f776(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].wipe_out */
extern void T928f35(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].slots_wipe_out */
extern void T928f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].clashes_wipe_out */
extern void T928f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].key_storage_wipe_out */
extern void T928f47(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].item_storage_wipe_out */
extern void T928f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].unset_found_item */
extern void T928f39(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].move_all_cursors_after */
extern void T928f45(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].set_next_cursor */
extern void T1384f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].set_after */
extern void T1384f7(TC* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_binary_search_polymorphic_call */
extern void T114f838(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_adapted_deep_twin_call */
extern void T114f837(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_deep_twin_call */
extern T0* T114f837ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_deep_twin_call */
extern void T114f869(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].item */
extern T0* T928f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].item_storage_item */
extern T0* T928f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].search_position */
extern void T928f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].hash_position */
extern T6 T928f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].key_storage_item */
extern T6 T928f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].clashes_item */
extern T6 T928f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].slots_item */
extern T6 T928f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].force_last */
extern void T928f36(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].key_storage_put */
extern void T928f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].slots_put */
extern void T928f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].clashes_put */
extern void T928f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].resize */
extern void T928f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].clashes_resize */
extern void T928f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].special_integer_ */
extern T0* T928s31(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].key_storage_resize */
extern void T928f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].item_storage_resize */
extern void T928f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].slots_resize */
extern void T928f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].new_modulus */
extern T6 T928f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].new_capacity */
extern T6 T928f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].item_storage_put */
extern void T928f43(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].item_for_iteration */
extern T0* T931f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].cursor_item */
extern T0* T931f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].item_storage_item */
extern T0* T931f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].after */
extern T1 T931f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].cursor_after */
extern T1 T931f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].after */
extern T1 T1385f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].start */
extern void T931f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].cursor_start */
extern void T931f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].cursor_off */
extern T1 T931f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].off */
extern T1 T1385f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].is_empty */
extern T1 T931f22(TC* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_function */
extern void T114f775(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f775ac1(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #2 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f775ac2(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #3 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f775ac3(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #4 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f775ac4(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #5 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f775ac5(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #6 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f775ac6(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #7 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f775ac7(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #8 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f775ac8(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #9 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f775ac9(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #10 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f775ac10(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #11 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f775ac11(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #12 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f775ac12(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T114f775ot1(TC* ac, T0* a1);
extern T1 T114f775ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_attribute_special_indexed_item_access */
extern void T114f835(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_set_deep_twined_attribute */
extern void T114f836(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_deep_twined_attribute */
extern void T114f868(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].force_last_new */
extern void T931f44(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].key_storage_put */
extern void T931f59(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].item_storage_put */
extern void T931f58(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].slots_put */
extern void T931f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].clashes_put */
extern void T931f56(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].slots_item */
extern T6 T931f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].hash_position */
extern T6 T931f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T931f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].clashes_resize */
extern void T931f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].special_integer_ */
extern T0* T931s37(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].key_storage_resize */
extern void T931f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].item_storage_resize */
extern void T931f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].key_storage_item */
extern T0* T931f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].slots_resize */
extern void T931f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].new_modulus */
extern T6 T931f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T931f34(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.force_last */
extern void T929f12(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.fixed_array */
extern T0* T929f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].default_create */
extern T0* T1379c3(TC* ac);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.resize */
extern void T929f10(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.new_capacity */
extern T6 T929f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.capacity */
extern T6 T929f6(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].found_item */
extern T0* T931f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].found */
extern T1 T931f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].search */
extern void T931f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].search_position */
extern void T931f54(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_reference_attributes */
extern T1 T1049f44(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_reference_attributes */
extern T1 T1048f44(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_reference_attributes */
extern T1 T894f57(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_reference_attributes */
extern T1 T966f63(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_nested_reference_attributes */
extern T1 T838f60(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].wipe_out */
extern void T938f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_wipe_out */
extern void T938f51(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_wipe_out */
extern void T938f50(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_wipe_out */
extern void T938f49(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_wipe_out */
extern void T938f48(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].keep_head */
extern void T1397f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].set_count */
extern void T1397f7(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].move_all_cursors_after */
extern void T938f47(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_next_cursor */
extern void T1396f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_after */
extern void T1396f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].forth */
extern void T938f37(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_forth */
extern void T938f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].add_traversing_cursor */
extern void T938f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_position */
extern void T1396f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].remove_traversing_cursor */
extern void T938f52(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_tuple_function */
extern void T114f698(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_for_iteration */
extern T0* T938f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_item */
extern T0* T938f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T938f34(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_after */
extern T1 T938f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T1396f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].start */
extern void T938f36(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_start */
extern void T938f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_off */
extern T1 T938f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].off */
extern T1 T1396f5(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].is_empty */
extern T1 T938f21(TC* ac, T0* C);
/* ET_C_GENERATOR.print_big_manifest_array_function */
extern void T114f697(TC* ac, T0* C, T0* a1);
extern T1 T114f697ot1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T930f40(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].slots_wipe_out */
extern void T930f55(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].clashes_wipe_out */
extern void T930f54(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].key_storage_wipe_out */
extern void T930f53(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].item_storage_wipe_out */
extern void T930f52(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T930f51(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].forth */
extern void T930f39(TC* ac, T0* C);
/* ET_C_GENERATOR.print_manifest_array_function */
extern void T114f696(TC* ac, T0* C, T0* a1);
extern T1 T114f696ot1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].item_for_iteration */
extern T0* T930f17(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].after */
extern T1 T930f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].cursor_after */
extern T1 T930f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].start */
extern void T930f38(TC* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_procedure_call_functions */
extern void T114f695(TC* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_call_function */
extern void T114f772(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T114f772ot1(TC* ac, T0* a1);
extern T1 T114f772ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_binary_search_polymorphic_calls */
extern void T114f834(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T6 a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.set_polymorphic_call_argument_type_sets */
extern void T114f830(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T114f830ot1(TC* ac, T0* a1);
extern T1 T114f830ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_static_type */
extern void T924f18(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.put_last */
extern void T929f11(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_call_agent */
extern T1 T889f10(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_call_agent */
extern T1 T888f12(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.force_result_boxing */
extern T1 T889f12(TC* ac, T0* C);
/* ET_C_GENERATOR.print_call_name_comment */
extern void T114f827(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T114f827ot1(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].force_last_new */
extern void T928f34(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].has */
extern T1 T928f25(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.static_feature */
extern T0* T889f11(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.static_feature */
extern T0* T888f13(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_empty */
extern T1 T726f19(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_dynamic_type_sets */
extern void T860f54(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.set_target_type */
extern void T860f53(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.set_target_type */
extern void T845f53(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.same_declared_signature */
extern T1 T114f215(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T114f215ot1(TC* ac, T0* a1);
extern T1 T114f215ot2(TC* ac, T0* a1);
extern T1 T114f215ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.procedure_calls */
extern T0* T1049f20(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.procedure_calls */
extern T0* T1048f20(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.procedure_calls */
extern T0* T894f23(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.procedure_calls */
extern T0* T966f23(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.procedure_calls */
extern T0* T838f22(TC* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_tuple_label_call_functions */
extern void T114f694(TC* ac, T0* C);
extern T1 T114f694ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_polymorphic_query_call_functions */
extern void T114f693(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.query_calls */
extern T0* T1049f19(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.query_calls */
extern T0* T1048f19(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.query_calls */
extern T0* T894f22(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.query_calls */
extern T0* T966f22(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.query_calls */
extern T0* T838f21(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].wipe_out */
extern void T947f39(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].slots_wipe_out */
extern void T947f54(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].clashes_wipe_out */
extern void T947f53(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_storage_wipe_out */
extern void T947f52(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_storage_wipe_out */
extern void T947f51(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_FEATURE].keep_head */
extern void T1272f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_FEATURE].set_count */
extern void T1272f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].move_all_cursors_after */
extern void T947f50(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T1419f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].set_after */
extern void T1419f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].forth */
extern void T947f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].cursor_forth */
extern void T947f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].add_traversing_cursor */
extern void T947f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].set_position */
extern void T1419f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].remove_traversing_cursor */
extern void T947f61(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_name_in_comment */
extern void T114f692(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_routine_name */
extern void T114f691(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T114f691ot1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_for_iteration */
extern T0* T947f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].cursor_item */
extern T0* T947f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].after */
extern T1 T947f35(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].cursor_after */
extern T1 T947f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].after */
extern T1 T1419f4(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].start */
extern void T947f37(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].cursor_start */
extern void T947f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].cursor_off */
extern T1 T947f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].off */
extern T1 T1419f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].is_empty */
extern T1 T947f27(TC* ac, T0* C);
/* ET_C_GENERATOR.print_feature */
extern void T114f690(TC* ac, T0* C, T0* a1);
extern T1 T114f690ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.free_call_contexts */
extern void T114f769(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].wipe_out */
extern void T945f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].move_all_cursors_after */
extern void T945f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].item */
extern T0* T945f11(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.free_inlined_operands */
extern void T114f768(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].wipe_out */
extern void T944f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].move_all_cursors_after */
extern void T944f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].item */
extern T0* T944f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].wipe_out */
extern void T917f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].move_all_cursors_after */
extern void T917f16(TC* ac, T0* C);
/* ET_C_GENERATOR.print_equality_function */
extern void T114f765(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_C_GENERATOR.print_equality_function_body */
extern void T114f825(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].item */
extern T0* T917f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].wipe_out */
extern void T932f11(TC* ac, T0* C);
/* SPECIAL [ET_OBJECT_TEST].keep_head */
extern void T1387f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_TEST].set_count */
extern void T1387f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].move_all_cursors_after */
extern void T932f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].set_next_cursor */
extern void T1389f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].set_after */
extern void T1389f6(TC* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_function */
extern void T114f764(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].item */
extern T0* T932f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].wipe_out */
extern void T934f11(TC* ac, T0* C);
/* SPECIAL [ET_AGENT].keep_head */
extern void T1393f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT].set_count */
extern void T1393f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].move_all_cursors_after */
extern void T934f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_next_cursor */
extern void T1395f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_after */
extern void T1395f6(TC* ac, T0* C);
/* ET_C_GENERATOR.print_agent_declaration */
extern void T114f763(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T114f763ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_agent_object_declaration */
extern void T114f818(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T6 a4, T6 a5);
/* ET_C_GENERATOR.print_agent_function_name */
extern void T114f849(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_agent_function_declaration */
extern void T114f817(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T6 a4, T6 a5);
/* ET_C_GENERATOR.print_agent_body_declaration */
extern void T114f851(TC* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.implicit_result */
extern T0* T376f6(TC* ac, T0* C);
/* ET_C_GENERATOR.agent_closed_operand */
extern T0* T114f316(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_agent_closed_operand */
extern void T303f126(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.agent_open_operand */
extern T0* T114f315(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_agent_open_operand */
extern void T303f125(TC* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_AGENT].item */
extern T0* T934f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_semistrict */
extern T1 T860f50(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.is_semistrict */
extern T1 T845f40(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].remove_last */
extern void T946f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].move_last_cursors_after */
extern void T946f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T1418f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_after */
extern void T1418f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].last */
extern T0* T946f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].is_empty */
extern T1 T946f10(TC* ac, T0* C);
/* ET_C_GENERATOR.register_called_feature */
extern void T114f689(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].force_last */
extern void T946f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].resize */
extern void T946f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T946f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].extendible */
extern T1 T946f8(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].remove */
extern void T947f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].remove_position */
extern void T947f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_storage_put */
extern void T947f67(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_storage_keep_head */
extern void T947f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_storage_keep_head */
extern void T947f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].move_cursors_forth */
extern void T947f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].internal_set_key_equality_tester */
extern void T947f63(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.set_generated */
extern void T860f56(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_generated */
extern void T845f56(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_once_per_object_data_dispose_functions */
extern void T114f688(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_object_data_dispose_function */
extern void T114f762(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_data_allocation_functions */
extern void T114f687(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_object_data_allocation_function */
extern void T114f761(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_allocation_functions */
extern void T114f686(TC* ac, T0* C);
/* ET_C_GENERATOR.print_object_allocation_function */
extern void T114f760(TC* ac, T0* C, T0* a1);
extern T1 T114f760ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_dispose_registration */
extern void T114f816(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T114f816ot1(TC* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].force_last_new */
extern void T943f36(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].key_storage_put */
extern void T943f49(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].item_storage_put */
extern void T943f48(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].force */
extern void T1411s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].fill_with */
extern void T1408f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].extend */
extern void T1408f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].slots_put */
extern void T943f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].clashes_put */
extern void T943f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T943f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].clashes_resize */
extern void T943f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].special_integer_ */
extern T0* T943s31(TC* ac);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].key_storage_resize */
extern void T943f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].item_storage_resize */
extern void T943f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T1411s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T1408f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].slots_resize */
extern void T943f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].new_modulus */
extern T6 T943f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T943f32(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_new_immutable_string_32_function */
extern void T114f685(TC* ac, T0* C);
/* ET_C_GENERATOR.print_new_immutable_string_8_function */
extern void T114f684(TC* ac, T0* C);
/* ET_C_GENERATOR.print_new_string_32_function */
extern void T114f683(TC* ac, T0* C);
/* ET_C_GENERATOR.print_new_string_8_function */
extern void T114f682(TC* ac, T0* C);
/* KL_STRING_OUTPUT_STREAM.put_new_line */
extern void T912f5(TC* ac, T0* C);
/* ET_C_GENERATOR.print_default_declarations */
extern void T114f681(TC* ac, T0* C);
/* ET_C_GENERATOR.print_default_declaration */
extern void T114f743(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_default_object_value */
extern void T114f810(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T114f810ot1(TC* ac, T0* a1);
extern T1 T114f810ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_default_attribute_value */
extern void T114f847(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.flush_to_c_file */
extern void T114f680(TC* ac, T0* C);
/* ET_C_GENERATOR.print_types */
extern void T114f679(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_data_struct */
extern void T114f742(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_once_per_object_data_struct_name */
extern void T114f798(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_struct */
extern void T114f741(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_struct_name */
extern void T114f797(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_struct */
extern void T114f740(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T114f740ot1(TC* ac, T0* a1);
extern T1 T114f740ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_struct_name */
extern void T114f789(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].has_cycle */
extern T1 T962f8(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].sort */
extern void T962f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].put_last */
extern void T116f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].reset */
extern void T962f20(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_object_data_type_definition */
extern void T114f739(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_definition */
extern void T114f738(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_type_definition */
extern void T114f737(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_pointer_function */
extern void T114f736(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_region_access */
extern void T114f794(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_attribute_flags_access */
extern void T114f793(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_function */
extern void T114f735(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].force_relation */
extern void T962f14(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].put_indexed_relation */
extern void T962f19(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].count */
extern T6 T962f10(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].index_of */
extern T6 T962f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].found_item */
extern T6 T1434f20(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].item_storage_item */
extern T6 T1434f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].found */
extern T1 T1434f30(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].search */
extern void T1434f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].search_position */
extern void T1434f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].hash_position */
extern T6 T1434f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].key_storage_item */
extern T0* T1434f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].clashes_item */
extern T6 T1434f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].slots_item */
extern T6 T1434f29(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_type_definition */
extern void T114f734(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_pointer_type_definition */
extern void T114f733(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_64_type_definition */
extern void T114f732(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_32_type_definition */
extern void T114f731(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_64_type_definition */
extern void T114f730(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_32_type_definition */
extern void T114f729(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_16_type_definition */
extern void T114f728(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_8_type_definition */
extern void T114f727(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_64_type_definition */
extern void T114f726(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_32_type_definition */
extern void T114f725(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_16_type_definition */
extern void T114f724(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_8_type_definition */
extern void T114f723(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_32_type_definition */
extern void T114f722(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_8_type_definition */
extern void T114f721(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boolean_type_definition */
extern void T114f720(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].force */
extern void T962f13(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].put */
extern void T962f18(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].put_new */
extern void T1434f36(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].key_storage_put */
extern void T1434f48(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].item_storage_put */
extern void T1434f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].slots_put */
extern void T1434f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].clashes_put */
extern void T1434f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].unset_found_item */
extern void T1434f40(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T1434f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].clashes_resize */
extern void T1434f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].special_integer_ */
extern T0* T1434s26(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].key_storage_resize */
extern void T1434f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].item_storage_resize */
extern void T1434f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].slots_resize */
extern void T1434f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].new_modulus */
extern T6 T1434f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].capacity */
extern T6 T962f7(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].has */
extern T1 T962f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].has */
extern T1 T1434f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].make_default */
extern T0* T962c12(TC* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].make */
extern void T962f16(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T962c16(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_map */
extern T0* T1434c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_with_equality_testers */
extern void T1434f39(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_sparse_container */
extern void T1434f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T1434f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T1434f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T1789c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_slots */
extern void T1434f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_clashes */
extern void T1434f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_key_storage */
extern void T1434f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_item_storage */
extern void T1434f50(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_aliased_double_type_definition */
extern void T114f719(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_aliased_real_type_definition */
extern void T114f718(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_aliased_natural_type_definition */
extern void T114f717(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_aliased_integer_type_definition */
extern void T114f716(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_aliased_wide_character_type_definition */
extern void T114f715(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_aliased_character_type_definition */
extern void T114f714(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_start_extern_c */
extern void T114f678(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_runtime_header_file */
extern void T114f677(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_C_GENERATOR.include_runtime_c_file */
extern void T114f712(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].force_last */
extern void T948f48(TC* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_put */
extern void T948f63(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_put */
extern void T948f62(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_put */
extern void T948f61(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_item */
extern T6 T948f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].hash_position */
extern T6 T948f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].resize */
extern void T948f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_resize */
extern void T948f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].special_integer_ */
extern T0* T948s40(TC* ac);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_resize */
extern void T948f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_resize */
extern void T948f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_resize */
extern void T948f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_modulus */
extern T6 T948f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_capacity */
extern T6 T948f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_put */
extern void T948f59(TC* ac, T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].search_position */
extern void T948f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].replace */
extern void T948f47(TC* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item */
extern T1 T948f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].has */
extern T1 T948f33(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.same_named_type_with_type_marks */
extern T1 T102f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TOKEN_CONSTANTS.implicit_detachable_type_mark */
extern T0* T81s603(TC* ac);
/* ET_C_GENERATOR.tokens */
extern T0* T114s171(TC* ac);
/* ET_ECF_LIBRARY.character_32_type */
extern T0* T802f37(TC* ac, T0* C);
/* ET_ECF_SYSTEM.character_32_type */
extern T0* T87f40(TC* ac, T0* C);
/* ET_SYSTEM.character_32_type */
extern T0* T50f39(TC* ac, T0* C);
/* ET_ECF_LIBRARY.character_type */
extern T0* T802f34(TC* ac, T0* C);
/* ET_ECF_SYSTEM.character_type */
extern T0* T87f37(TC* ac, T0* C);
/* ET_SYSTEM.character_type */
extern T0* T50f36(TC* ac, T0* C);
/* ET_CLASS.universe */
extern T0* T70f83(TC* ac, T0* C);
/* ET_C_GENERATOR.use_scoop */
extern T1 T114f625(TC* ac, T0* C);
/* ET_C_GENERATOR.use_threads */
extern T1 T114f397(TC* ac, T0* C);
/* ET_C_GENERATOR.exception_trace_mode */
extern T1 T114f353(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.put_character */
extern void T950f38(TC* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.old_put_character */
extern void T950f48(TC* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.file_pc */
extern void T950s56(TC* ac, T14 a1, T2 a2);
/* ET_C_GENERATOR.trace_mode */
extern T1 T114f348(TC* ac, T0* C);
/* ET_C_GENERATOR.generate_ids */
extern void T114f676(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_id */
extern void T860f58(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_id */
extern void T845f62(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_static */
extern T1 T1049f21(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_static */
extern T1 T1048f21(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_static */
extern T1 T894f24(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_static */
extern T1 T966f24(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_static */
extern T1 T838f23(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_id */
extern void T1049f82(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_id */
extern void T1048f82(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_id */
extern void T894f84(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_id */
extern void T966f86(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_id */
extern void T838f83(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.sort_types */
extern void T114f711(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].put_relation */
extern void T962f17(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].new_iterator */
extern T0* T930f34(TC* ac, T0* C);
/* ET_C_GENERATOR.open_cpp_file */
extern void T114f675(TC* ac, T0* C);
/* ET_C_GENERATOR.open_c_file */
extern void T114f674(TC* ac, T0* C);
/* ET_C_GENERATOR.generate_external_configuration */
extern void T114f664(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.add_to_library_paths */
extern void T114f673(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.add_windows_libs_to_library_paths */
extern void T114f672(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.generate_external_c_files */
extern void T114f671(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].item */
extern T0* T958f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].item_storage_item */
extern T0* T958f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].search_position */
extern void T958f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].hash_position */
extern T6 T958f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].key_storage_item */
extern T0* T958f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].clashes_item */
extern T6 T958f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].slots_item */
extern T6 T958f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].has */
extern T1 T958f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].force_last */
extern void T958f34(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].key_storage_put */
extern void T958f42(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].slots_put */
extern void T958f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].clashes_put */
extern void T958f40(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].resize */
extern void T958f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].clashes_resize */
extern void T958f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].special_integer_ */
extern T0* T958s30(TC* ac);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].key_storage_resize */
extern void T958f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].item_storage_resize */
extern void T958f45(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [STRING_8, detachable STRING_8]].aliased_resized_area */
extern T0* T1432s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [TUPLE [STRING_8, detachable STRING_8]].aliased_resized_area */
extern T0* T1430f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].slots_resize */
extern void T958f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].new_modulus */
extern T6 T958f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].new_capacity */
extern T6 T958f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].item_storage_put */
extern void T958f38(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [TUPLE [STRING_8, detachable STRING_8]].force */
extern void T1432s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [TUPLE [STRING_8, detachable STRING_8]].fill_with */
extern void T1430f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [TUPLE [STRING_8, detachable STRING_8]].extend */
extern void T1430f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].unset_found_item */
extern void T958f37(TC* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].make */
extern T0* T958c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].make_with_equality_testers */
extern void T958f36(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].make_sparse_container */
extern void T958f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].set_internal_cursor */
extern void T958f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].new_cursor */
extern T0* T958f29(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [TUPLE [STRING_8, detachable STRING_8], STRING_8].make */
extern T0* T1433c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].make_slots */
extern void T958f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].make_clashes */
extern void T958f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].make_key_storage */
extern void T958f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].make_item_storage */
extern void T958f48(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [STRING_8, detachable STRING_8]].make */
extern T0* T1432s2(TC* ac, T6 a1);
/* SPECIAL [TUPLE [STRING_8, detachable STRING_8]].make_empty */
extern T0* T1430c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [STRING_8, detachable STRING_8]].default_create */
extern T0* T1432c3(TC* ac);
/* DS_HASH_SET [STRING_8].make_equal */
extern T0* T99c38(TC* ac, T6 a1);
/* DS_HASH_SET [STRING_8].make */
extern void T99f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make */
extern T0* T99c40(TC* ac, T6 a1);
/* DS_HASH_SET [STRING_8].set_internal_cursor */
extern void T99f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].new_cursor */
extern T0* T99f22(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].make */
extern T0* T854c9(TC* ac, T0* a1);
/* DS_HASH_SET [STRING_8].make_slots */
extern void T99f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_clashes */
extern void T99f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_key_storage */
extern void T99f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_item_storage */
extern void T99f52(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].sort */
extern void T169f39(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [STRING_8].sort */
extern void T956f3(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [STRING_8].sort_with_comparator */
extern void T956f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [STRING_8].subsort_with_comparator */
extern void T956f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [STRING_8].swap */
extern void T169f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].replace */
extern void T169f41(TC* ac, T0* C, T0* a1, T6 a2);
/* UC_STRING_COMPARATOR.less_than */
extern T1 T957f1(TC* ac, T0* C, T0* a1, T0* a2);
/* UC_STRING_COMPARATOR.string_ */
extern T0* T957s2(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].item */
extern T0* T955f9(TC* ac, T0* C, T6 a1);
/* DS_QUICK_SORTER [STRING_8].make */
extern T0* T956c2(TC* ac, T0* a1);
/* UC_STRING_COMPARATOR.default_create */
extern T0* T957c3(TC* ac);
/* KL_DIRECTORY.close */
extern void T954f40(TC* ac, T0* C);
/* KL_DIRECTORY.old_close */
extern void T954f43(TC* ac, T0* C);
/* KL_DIRECTORY.default_pointer */
extern T14 T954s24(TC* ac);
/* KL_DIRECTORY.dir_close */
extern void T954s48(TC* ac, T14 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].force_last */
extern void T955f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [STRING_8]].force */
extern void T1428s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [STRING_8]].fill_with */
extern void T1427f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [STRING_8]].extend */
extern void T1427f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].resize */
extern void T955f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [STRING_8]].aliased_resized_area */
extern T0* T1428s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [STRING_8]].aliased_resized_area */
extern T0* T1427f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].new_capacity */
extern T6 T955f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].extendible */
extern T1 T955f7(TC* ac, T0* C, T6 a1);
/* KL_DIRECTORY.read_entry */
extern void T954f39(TC* ac, T0* C);
/* KL_DIRECTORY.last_entry_8 */
extern T0* T954f21(TC* ac, T0* C);
/* FILE_INFO.pointer_to_file_name_8 */
extern T0* T166f15(TC* ac, T0* C, T14 a1);
/* C_STRING.string_8 */
extern T0* T31f6(TC* ac, T0* C);
/* C_STRING.make_shared_from_pointer */
extern T0* T31c17(TC* ac, T14 a1);
/* FILE_INFO.utf_16_to_multi_byte */
extern T6 T166s19(TC* ac, T14 a1, T14 a2, T6 a3);
/* KL_DIRECTORY.last_entry_32 */
extern T0* T954f20(TC* ac, T0* C);
/* FILE_INFO.pointer_to_file_name_32 */
extern T0* T166f16(TC* ac, T0* C, T14 a1);
/* FILE_INFO.pointer_length_in_bytes */
extern T6 T166f20(TC* ac, T0* C, T14 a1);
/* FILE_INFO.c_pointer_length_in_bytes */
extern T11 T166f21(TC* ac, T0* C, T14 a1);
/* KL_DIRECTORY.readentry */
extern void T954f46(TC* ac, T0* C);
/* KL_DIRECTORY.eif_dir_next */
extern T14 T954s28(TC* ac, T14 a1);
/* KL_DIRECTORY.is_open_read */
extern T1 T954f14(TC* ac, T0* C);
/* KL_DIRECTORY.is_closed */
extern T1 T954f31(TC* ac, T0* C);
/* KL_DIRECTORY.open_read */
extern void T954f38(TC* ac, T0* C);
/* KL_DIRECTORY.old_open_read */
extern void T954f45(TC* ac, T0* C);
/* KL_DIRECTORY.dir_open */
extern T14 T954s25(TC* ac, T14 a1);
/* KL_DIRECTORY.old_is_readable */
extern T1 T954f18(TC* ac, T0* C);
/* KL_DIRECTORY.eif_dir_is_readable */
extern T1 T954s32(TC* ac, T14 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].make */
extern T0* T955c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].set_internal_cursor */
extern void T955f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].new_cursor */
extern T0* T955f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [STRING_8]].make */
extern T0* T1429c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [STRING_8]].make */
extern T0* T1428s1(TC* ac, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [STRING_8]].make_empty */
extern T0* T1427c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [STRING_8]].default_create */
extern T0* T1428c3(TC* ac);
/* ET_C_GENERATOR.add_to_include_paths */
extern void T114f670(TC* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.set_case_insensitive */
extern void T107f342(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.generate_boehm_gc_c_files */
extern void T114f663(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.report_undefined_environment_variable_error */
extern void T114f668(TC* ac, T0* C, T0* a1);
/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR.make */
extern T0* T952c8(TC* ac, T0* a1);
/* ET_C_GENERATOR.c_config */
extern T0* T114f168(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].forth */
extern void T951f19(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_forth */
extern void T949f83(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].start */
extern void T951f18(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_start */
extern void T949f82(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.parse_file */
extern void T1052f185(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.parse */
extern void T1052f189(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_pop_last_value */
extern void T1052f202(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_push_error_value */
extern void T1052f201(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_do_action */
extern void T1052f200(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.is_defined */
extern T1 T1052f140(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].has */
extern T1 T827f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].force */
extern void T827f86(TC* ac, T0* C, T0* a1, T0* a2);
/* UT_CONFIG_PARSER.process_include */
extern void T1052f214(TC* ac, T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.make */
extern T0* T1655c8(TC* ac, T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].put */
extern void T1653f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].force */
extern void T1961s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [YY_BUFFER].fill_with */
extern void T1960f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [YY_BUFFER].extend */
extern void T1960f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [INTEGER_32].put */
extern void T245f14(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.execution_environment */
extern T0* T1052s166(TC* ac);
/* DS_ARRAYED_STACK [YY_BUFFER].is_full */
extern T1 T1653f5(TC* ac, T0* C);
/* UT_CONFIG_PARSER.undefine_value */
extern void T1052f213(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove */
extern void T827f87(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove_position */
extern void T827f88(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_keep_head */
extern void T827f92(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_keep_head */
extern void T827f91(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_cursors_forth */
extern void T827f90(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].internal_set_key_equality_tester */
extern void T827f89(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.ignored */
extern T1 T1052f137(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_push_last_value */
extern void T1052f199(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.accept */
extern void T1052f198(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_do_error_action */
extern void T1052f196(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.report_error */
extern void T1052f212(TC* ac, T0* C, T0* a1);
extern T1 T1052f212ot1(TC* ac, T0* a1);
/* UT_SYNTAX_ERROR.make */
extern T0* T1654c8(TC* ac, T0* a1, T6 a2);
/* XM_EIFFEL_INPUT_STREAM.name */
extern T0* T1629f5(TC* ac, T0* C);
/* KL_STRING_INPUT_STREAM.name */
extern T0* T1794f6(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.name */
extern T0* T43f1(TC* ac, T0* C);
/* KL_STDIN_FILE.name */
extern T0* T244s9(TC* ac);
/* UT_CONFIG_PARSER.report_eof_expected_error */
extern void T1052f211(TC* ac, T0* C);
/* UT_CONFIG_PARSER.read_token */
extern void T1052f195(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_execute_action */
extern void T1052f210(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_set_beginning_of_line */
extern void T1052f219(TC* ac, T0* C);
/* YY_FILE_BUFFER.set_beginning_of_line */
extern void T1109f26(TC* ac, T0* C, T1 a1);
/* YY_BUFFER.set_beginning_of_line */
extern void T261f17(TC* ac, T0* C, T1 a1);
/* UT_CONFIG_PARSER.text_item */
extern T2 T1052f165(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.text_substring */
extern T0* T1052f159(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.substring */
extern T0* T1574f7(TC* ac, T0* C, T6 a1, T6 a2);
/* UT_CONFIG_PARSER.text_count */
extern T6 T1052f158(TC* ac, T0* C);
/* UT_CONFIG_PARSER.string_ */
extern T0* T1052s154(TC* ac);
/* UT_CONFIG_PARSER.text */
extern T0* T1052f153(TC* ac, T0* C);
/* UT_CONFIG_PARSER.set_start_condition */
extern void T1052f217(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_execute_eof_action */
extern void T1052f209(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.terminate */
extern void T1052f218(TC* ac, T0* C);
/* UT_CONFIG_PARSER.wrap */
extern T1 T1052f132(TC* ac, T0* C);
extern T1 T1052f132ot1(TC* ac, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.close */
extern void T1629f32(TC* ac, T0* C);
/* KL_STDIN_FILE.close */
extern void T244f13(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.is_closable */
extern T1 T1629f6(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_closable */
extern T1 T43f42(TC* ac, T0* C);
/* KL_STDIN_FILE.is_closable */
extern T1 T244f10(TC* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].remove */
extern void T1653f10(TC* ac, T0* C);
/* SPECIAL [YY_BUFFER].keep_head */
extern void T1960f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [YY_BUFFER].set_count */
extern void T1960f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].item */
extern T0* T1653f7(TC* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].is_empty */
extern T1 T1653f6(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_refill_input_buffer */
extern void T1052f208(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_set_content */
extern void T1052f205(TC* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.fill */
extern void T1109f23(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.fill_from_stream */
extern T6 T1574f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T1629f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T1629f8p1(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_CHARACTER_BUFFER.put */
extern void T1574f13(TC* ac, T0* C, T2 a1, T6 a2);
/* XM_EIFFEL_INPUT_STREAM.last_character */
extern T2 T1629f7(TC* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].item */
extern T2 T1946f4(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.last_character */
extern T2 T43f8(TC* ac, T0* C);
/* KL_STDIN_FILE.last_character */
extern T2 T244f4(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.end_of_input */
extern T1 T1629f22(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_character */
extern void T1629f33(TC* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].remove */
extern void T1946f6(TC* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].wipe_out */
extern void T1946f8(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.noqueue_read_character */
extern void T1629f35(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_read_character */
extern void T1629f37(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.append_character */
extern void T1629f38(TC* ac, T0* C, T6 a1);
/* DS_LINKED_QUEUE [CHARACTER_8].force */
extern void T1946f7(TC* ac, T0* C, T2 a1);
/* DS_LINKABLE [CHARACTER_8].put_right */
extern void T2143f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [CHARACTER_8].make */
extern T0* T2143c3(TC* ac, T2 a1);
/* UC_UTF8_ROUTINES.append_code_to_utf8 */
extern void T167s58(TC* ac, T0* a1, T6 a2);
/* XM_EIFFEL_INPUT_STREAM.utf8 */
extern T0* T1629s25(TC* ac);
/* XM_EIFFEL_INPUT_STREAM.string_ */
extern T0* T1629s9(TC* ac);
/* XM_EIFFEL_INPUT_STREAM.utf8_buffer */
extern T0* T1629f28(TC* ac, T0* C);
/* UC_UTF16_ROUTINES.surrogate */
extern T6 T1947s7(TC* ac, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_low_surrogate */
extern T1 T1947s6(TC* ac, T6 a1);
/* UC_UTF16_ROUTINES.least_10_bits */
extern T6 T1947s5(TC* ac, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_high_surrogate */
extern T1 T1947s4(TC* ac, T6 a1);
/* UC_UTF16_ROUTINES.is_surrogate */
extern T1 T1947s3(TC* ac, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.utf16 */
extern T0* T1629s23(TC* ac);
/* UC_UTF16_ROUTINES.default_create */
extern T0* T1947c16(TC* ac);
/* XM_EIFFEL_INPUT_STREAM.least_significant */
extern T6 T1629f27(TC* ac, T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.most_significant */
extern T6 T1629f26(TC* ac, T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.latin1_read_character */
extern void T1629f36(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_detect_read_character */
extern void T1629f34(TC* ac, T0* C);
/* UC_UTF16_ROUTINES.is_endian_detection_character_least_first */
extern T1 T1947s2(TC* ac, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_most_first */
extern T1 T1947s1(TC* ac, T6 a1, T6 a2);
/* KL_STDIN_FILE.read_character */
extern void T244f14(TC* ac, T0* C);
/* CONSOLE.read_character */
extern void T1644f34(TC* ac, T0* C);
/* CONSOLE.console_readchar */
extern T2 T1644s19(TC* ac, T14 a1);
/* YY_FILE_BUFFER.compact_left */
extern void T1109f27(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.move_left */
extern void T1574f17(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* YY_FILE_BUFFER.resize */
extern void T1109f28(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.resize */
extern void T1574f16(TC* ac, T0* C, T6 a1);
/* YY_FILE_BUFFER.default_capacity */
extern T6 T1109f15(TC* ac, T0* C);
/* YY_FILE_BUFFER.set_index */
extern void T1109f22(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_null_trans_state */
extern T6 T1052f131(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_previous_state */
extern T6 T1052f130(TC* ac, T0* C);
/* UT_CONFIG_PARSER.fatal_error */
extern void T1052f207(TC* ac, T0* C, T0* a1);
/* UT_MESSAGE.make */
extern T0* T106c8(TC* ac, T0* a1);
/* UT_CONFIG_PARSER.report_invalid_unicode_character_error */
extern void T1052f206(TC* ac, T0* C, T10 a1);
/* UT_CONFIG_PARSER.yy_at_beginning_of_line */
extern T6 T1052f99(TC* ac, T0* C);
/* UT_CONFIG_PARSER.special_integer_ */
extern T0* T1052s105(TC* ac);
/* UT_CONFIG_PARSER.yy_init_value_stacks */
extern void T1052f194(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_clear_all */
extern void T1052f203(TC* ac, T0* C);
/* UT_CONFIG_PARSER.clear_all */
extern void T1052f215(TC* ac, T0* C);
/* UT_CONFIG_PARSER.clear_stacks */
extern void T1052f220(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_clear_value_stacks */
extern void T1052f221(TC* ac, T0* C);
/* UT_CONFIG_PARSER.abort */
extern void T1052f197(TC* ac, T0* C);
/* UT_CONFIG_PARSER.set_input_buffer */
extern void T1052f188(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_load_input_buffer */
extern void T1052f193(TC* ac, T0* C);
/* YY_FILE_BUFFER.set_position */
extern void T1109f25(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* YY_BUFFER.set_position */
extern void T261f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UT_CONFIG_PARSER.new_file_buffer */
extern T0* T1052f104(TC* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.make */
extern T0* T1109c24(TC* ac, T0* a1);
/* YY_FILE_BUFFER.make_with_size */
extern void T1109f17(TC* ac, T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.make_with_size */
extern T0* T1109c17(TC* ac, T0* a1, T6 a2);
/* YY_FILE_BUFFER.set_file */
extern void T1109f18(TC* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.set_file_with_size */
extern void T1109f19(TC* ac, T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.flush */
extern void T1109f20(TC* ac, T0* C);
/* YY_FILE_BUFFER.new_default_buffer */
extern T0* T1109f13(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.console_application_mode */
extern T1 T114f583(TC* ac, T0* C);
/* UT_CONFIG_PARSER.define_value */
extern void T1052f184(TC* ac, T0* C, T0* a1, T0* a2);
/* UT_CONFIG_PARSER.make */
extern T0* T1052c183(TC* ac, T0* a1);
/* DS_ARRAYED_STACK [INTEGER_32].make */
extern T0* T245c8(TC* ac, T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].make */
extern T0* T1653c8(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].make */
extern T0* T1961s1(TC* ac, T6 a1);
/* SPECIAL [YY_BUFFER].make_empty */
extern T0* T1960c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].default_create */
extern T0* T1961c2(TC* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_key_equality_tester */
extern void T827f48(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.string_equality_tester */
extern T0* T1052s97(TC* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern void T827f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern T0* T827c47(TC* ac, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_with_equality_testers */
extern void T827f57(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_sparse_container */
extern void T827f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_internal_cursor */
extern void T827f83(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_slots */
extern void T827f82(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_clashes */
extern void T827f81(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_key_storage */
extern void T827f80(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_item_storage */
extern void T827f79(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.make_parser_skeleton */
extern void T1052f187(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_build_parser_tables */
extern void T1052f192(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yycheck_template */
extern T0* T1052f82(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yyfixed_array */
extern T0* T1052f178(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].to_special */
extern T0* T263s3(TC* ac, T0* a1);
/* UT_CONFIG_PARSER.yytable_template */
extern T0* T1052f139(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yypgoto_template */
extern T0* T1052f138(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yypact_template */
extern T0* T1052f136(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yydefgoto_template */
extern T0* T1052f133(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yydefact_template */
extern T0* T1052f127(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yytypes2_template */
extern T0* T1052f126(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yytypes1_template */
extern T0* T1052f123(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yyr1_template */
extern T0* T1052f119(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yytranslate_template */
extern T0* T1052f116(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yytranslate_template_2 */
extern void T1052f223(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yyarray_subcopy */
extern void T1052f225(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* KL_ARRAY_ROUTINES [INTEGER_32].subcopy */
extern void T1035s3(TC* ac, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ARRAY [INTEGER_32].subcopy */
extern void T940f17(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* UT_CONFIG_PARSER.integer_array_ */
extern T0* T1052s182(TC* ac);
/* UT_CONFIG_PARSER.yytranslate_template_1 */
extern void T1052f222(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_create_value_stacks */
extern void T1052f191(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ANY].make */
extern T0* T271s1(TC* ac, T6 a1);
/* SPECIAL [detachable ANY].make_empty */
extern T0* T272c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ANY].default_create */
extern T0* T271c3(TC* ac);
/* UT_CONFIG_PARSER.make_scanner */
extern void T1052f186(TC* ac, T0* C);
/* UT_CONFIG_PARSER.make_with_buffer */
extern void T1052f190(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T1052f204(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T1052f204p1(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_build_tables */
extern void T1052f216(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_accept_template */
extern T0* T1052f173(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_fixed_array */
extern T0* T1052f181(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_meta_template */
extern T0* T1052f172(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_ec_template */
extern T0* T1052f171(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_ec_template_1 */
extern void T1052f224(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_array_subcopy */
extern void T1052f226(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* UT_CONFIG_PARSER.yy_def_template */
extern T0* T1052f170(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_base_template */
extern T0* T1052f169(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_chk_template */
extern T0* T1052f168(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_nxt_template */
extern T0* T1052f167(TC* ac, T0* C);
/* UT_CONFIG_PARSER.empty_buffer */
extern T0* T1052f83(TC* ac, T0* C);
/* YY_BUFFER.make */
extern T0* T261c12(TC* ac, T0* a1);
/* YY_BUFFER.make_from_buffer */
extern void T261f15(TC* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.fill_from_string */
extern void T1574f12(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_CHARACTER_BUFFER.fill_from_substring */
extern void T1574f18(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* YY_BUFFER.new_default_buffer */
extern T0* T261f11(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.put_new */
extern void T949f59(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_STRING_HASH_TABLE.set_key_equality_tester */
extern void T949f58(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.string_equality_tester */
extern T0* T114s169(TC* ac);
/* DS_STRING_HASH_TABLE.make_map */
extern T0* T949c56(TC* ac, T6 a1);
/* UC_UTF8_STRING.hash_code */
extern T6 T1066f13(TC* ac, T0* C);
/* UC_UTF8_STRING.string */
extern T0* T1066f38(TC* ac, T0* C);
/* UC_UTF8_STRING.hash_code */
extern T6 T1066f13p1(TC* ac, T0* C);
/* UC_STRING.hash_code */
extern T6 T909f14(TC* ac, T0* C);
/* UC_STRING.string */
extern T0* T909f42(TC* ac, T0* C);
/* UC_STRING.hash_code */
extern T6 T909f14p1(TC* ac, T0* C);
/* STRING_8.hash_code */
extern T6 T17f37(TC* ac, T0* C);
/* ET_C_GENERATOR.current_system */
extern T0* T114f172(TC* ac, T0* C);
/* ET_C_GENERATOR.c_compiler_used */
extern T0* T114f166(TC* ac, T0* C);
/* ET_C_GENERATOR.set_split_threshold */
extern void T114f658(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.set_split_mode */
extern void T114f657(TC* ac, T0* C, T1 a1);
/* GEC.no_split */
extern T1 T26f63(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.parameter */
extern T1 T58f12(TC* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].last */
extern T1 T225f7(TC* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].is_empty */
extern T1 T225f6(TC* ac, T0* C);
/* ET_C_GENERATOR.set_finalize_mode */
extern void T114f656(TC* ac, T0* C, T1 a1);
/* GEC.is_finalize */
extern T1 T26f59(TC* ac, T0* C);
/* ET_C_GENERATOR.set_scoop_exceptions_stop_when_dirty */
extern void T114f655(TC* ac, T0* C, T1 a1);
/* GEC.scoop_exceptions_stop_when_dirty */
extern T1 T26f62(TC* ac, T0* C);
/* ET_C_GENERATOR.set_use_boehm_gc */
extern void T114f654(TC* ac, T0* C, T1 a1);
/* GEC.use_boehm_gc */
extern T1 T26f61(TC* ac, T0* C);
/* ET_C_GENERATOR.make */
extern T0* T114c653(TC* ac, T0* a1, T0* a2);
/* ET_C_GENERATOR.make_external_regexps */
extern void T114f662(TC* ac, T0* C);
/* ET_C_GENERATOR.make_volatile_data */
extern void T114f661(TC* ac, T0* C);
/* ET_C_GENERATOR.make_rescue_data */
extern void T114f660(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].set_key_equality_tester */
extern void T948f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make */
extern T0* T948c42(TC* ac, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_with_equality_testers */
extern void T948f50(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_sparse_container */
extern void T948f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].set_internal_cursor */
extern void T948f75(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_cursor */
extern T0* T948f39(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].make */
extern T0* T1422c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_slots */
extern void T948f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_clashes */
extern void T948f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_key_storage */
extern void T948f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_item_storage */
extern void T948f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].set_equality_tester */
extern void T99f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].make */
extern T0* T947c36(TC* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].set_internal_cursor */
extern void T947f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T947f33(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].make */
extern T0* T1419c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].make_slots */
extern void T947f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].make_clashes */
extern void T947f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].make_key_storage */
extern void T947f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].make_item_storage */
extern void T947f42(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].make */
extern T0* T946c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].set_internal_cursor */
extern void T946f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T946f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].make */
extern T0* T1418c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].make */
extern T0* T945c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].set_internal_cursor */
extern void T945f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].new_cursor */
extern T0* T945f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT].make */
extern T0* T1417c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT].make */
extern T0* T1416s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].make_empty */
extern T0* T1415c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT].default_create */
extern T0* T1416c3(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].make */
extern T0* T944c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].set_internal_cursor */
extern void T944f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].new_cursor */
extern T0* T944f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION].make */
extern T0* T1414c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION].make */
extern T0* T1413s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].make_empty */
extern T0* T1412c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION].default_create */
extern T0* T1413c3(TC* ac);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_map */
extern T0* T943c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_with_equality_testers */
extern void T943f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_sparse_container */
extern void T943f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T943f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T943f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T1410c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_slots */
extern void T943f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_clashes */
extern void T943f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_key_storage */
extern void T943f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_item_storage */
extern void T943f55(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].make */
extern T0* T1411s2(TC* ac, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].make_empty */
extern T0* T1408c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].default_create */
extern T0* T1411c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_map */
extern T0* T942c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_with_equality_testers */
extern void T942f43(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_sparse_container */
extern void T942f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].set_internal_cursor */
extern void T942f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].new_cursor */
extern T0* T942f29(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make */
extern T0* T1404c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_slots */
extern void T942f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_clashes */
extern void T942f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_key_storage */
extern void T942f56(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].make */
extern T0* T1407s1(TC* ac, T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].make_empty */
extern T0* T1405c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].default_create */
extern T0* T1407c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_item_storage */
extern void T942f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_map */
extern T0* T941c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_with_equality_testers */
extern void T941f44(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_sparse_container */
extern void T941f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].set_internal_cursor */
extern void T941f70(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T941f36(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T1400c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_slots */
extern void T941f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_clashes */
extern void T941f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_key_storage */
extern void T941f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_item_storage */
extern void T941f66(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].make */
extern T0* T1403s2(TC* ac, T6 a1);
/* SPECIAL [ET_CONSTANT].make_empty */
extern T0* T1401c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].default_create */
extern T0* T1403c3(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_map */
extern T0* T939c36(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_with_equality_testers */
extern void T939f41(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_sparse_container */
extern void T939f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].set_internal_cursor */
extern void T939f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].new_cursor */
extern T0* T939f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE].make */
extern T0* T1399c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_slots */
extern void T939f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_clashes */
extern void T939f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_key_storage */
extern void T939f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_item_storage */
extern void T939f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T938c35(TC* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].set_internal_cursor */
extern void T938f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_cursor */
extern T0* T938f33(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T1396c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_slots */
extern void T938f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_clashes */
extern void T938f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_key_storage */
extern void T938f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_item_storage */
extern void T938f39(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T1398s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make_empty */
extern T0* T1397c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].default_create */
extern T0* T1398c3(TC* ac);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.make */
extern T0* T937c8(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.make */
extern T0* T935c7(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_AGENT].make */
extern T0* T934c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].set_internal_cursor */
extern void T934f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].new_cursor */
extern T0* T934f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].make */
extern T0* T1395c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].make */
extern T0* T1394s1(TC* ac, T6 a1);
/* SPECIAL [ET_AGENT].make_empty */
extern T0* T1393c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].default_create */
extern T0* T1394c3(TC* ac);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].make */
extern T0* T932c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].set_internal_cursor */
extern void T932f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].new_cursor */
extern T0* T932f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].make */
extern T0* T1389c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].make */
extern T0* T1388s1(TC* ac, T6 a1);
/* SPECIAL [ET_OBJECT_TEST].make_empty */
extern T0* T1387c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].default_create */
extern T0* T1388c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_map */
extern T0* T931c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_with_equality_testers */
extern void T931f45(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_sparse_container */
extern void T931f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T931f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T931f36(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T1385c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_slots */
extern void T931f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_clashes */
extern void T931f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_key_storage */
extern void T931f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_item_storage */
extern void T931f67(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T1379s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make_empty */
extern T0* T1378c5(TC* ac, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.make_with_capacity */
extern T0* T929c9(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_map */
extern T0* T928c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_with_equality_testers */
extern void T928f38(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_sparse_container */
extern void T928f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].set_internal_cursor */
extern void T928f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].new_cursor */
extern T0* T928f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make */
extern T0* T1384c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_slots */
extern void T928f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_clashes */
extern void T928f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_key_storage */
extern void T928f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_item_storage */
extern void T928f55(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].make */
extern T0* T926c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T925c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].set_internal_cursor */
extern void T925f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].new_cursor */
extern T0* T925f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T1380c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_RESULT].make */
extern T0* T922c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_RESULT].set_internal_cursor */
extern void T922f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_RESULT].new_cursor */
extern T0* T922f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_RESULT].make */
extern T0* T1377c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].make */
extern T0* T1375s1(TC* ac, T6 a1);
/* SPECIAL [ET_RESULT].make_empty */
extern T0* T1376c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].default_create */
extern T0* T1375c3(TC* ac);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T921c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].set_internal_cursor */
extern void T921f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].new_cursor */
extern T0* T921f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T1374c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T1372s1(TC* ac, T6 a1);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].make_empty */
extern T0* T1373c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T1372c3(TC* ac);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T920c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].set_internal_cursor */
extern void T920f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].new_cursor */
extern T0* T920f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T1371c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T1370s1(TC* ac, T6 a1);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].make_empty */
extern T0* T1369c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION].default_create */
extern T0* T1370c3(TC* ac);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].make */
extern T0* T919c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].set_internal_cursor */
extern void T919f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].new_cursor */
extern T0* T919f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION].make */
extern T0* T1368c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION].make */
extern T0* T1366s1(TC* ac, T6 a1);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].make_empty */
extern T0* T1367c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION].default_create */
extern T0* T1366c3(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].make */
extern T0* T918c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].set_internal_cursor */
extern void T918f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].new_cursor */
extern T0* T918f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].make */
extern T0* T1365c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].make */
extern T0* T1363s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].make_empty */
extern T0* T1364c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].default_create */
extern T0* T1363c3(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].make */
extern T0* T917c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].set_internal_cursor */
extern void T917f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].new_cursor */
extern T0* T917f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES].make */
extern T0* T1362c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES].make */
extern T0* T1361s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].make_empty */
extern T0* T1360c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES].default_create */
extern T0* T1361c3(TC* ac);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].make */
extern T0* T916c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].set_internal_cursor */
extern void T916f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].new_cursor */
extern T0* T916f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].make */
extern T0* T1359c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].make */
extern T0* T1357s1(TC* ac, T6 a1);
/* SPECIAL [ET_EQUALITY_EXPRESSION].make_empty */
extern T0* T1358c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].default_create */
extern T0* T1357c3(TC* ac);
/* DS_ARRAYED_LIST [BOOLEAN].make */
extern T0* T915c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [BOOLEAN].set_internal_cursor */
extern void T915f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [BOOLEAN].new_cursor */
extern T0* T915f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [BOOLEAN].make */
extern T0* T1356c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T914c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T914f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T914f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T1355c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T1354s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].make_empty */
extern T0* T1353c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE].default_create */
extern T0* T1354c3(TC* ac);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].make */
extern T0* T913c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].set_internal_cursor */
extern void T913f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_cursor */
extern T0* T913f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].make */
extern T0* T1352c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].make */
extern T0* T1264s2(TC* ac, T6 a1);
/* SPECIAL [ET_IDENTIFIER].make_empty */
extern T0* T1265c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].default_create */
extern T0* T1264c3(TC* ac);
/* KL_STRING_OUTPUT_STREAM.make */
extern T0* T912c4(TC* ac, T0* a1);
/* ET_C_GENERATOR.null_output_stream */
extern T0* T114s173(TC* ac);
/* ET_CLASS_TYPE.same_named_type */
extern T1 T102f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.unknown_class */
extern T0* T81s2(TC* ac);
/* ET_CLASS.make_unknown */
extern T0* T70c268(TC* ac);
/* GEC.tokens */
extern T0* T26s37(TC* ac);
/* ET_DYNAMIC_SYSTEM.compile */
extern void T95f90(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.compile_system */
extern void T95f93(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.build_dynamic_type_sets */
extern void T95f97(TC* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T842f20(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T100f107(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_validity */
extern void T100f111(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_call_validity */
extern void T100f116(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_target_validity */
extern void T100f118(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f118ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_catcall_error */
extern void T100f122(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_catcall_error */
extern void T63f233(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_catcall_error */
extern void T42f233(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.append_catcall_error_message */
extern void T100f123(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.position */
extern T0* T889f9(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.position */
extern T0* T888f11(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.position */
extern T0* T1544f10(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.string_ */
extern T0* T100s67(TC* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.shared_error_message */
extern T0* T100f66(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_feature_dynamic_type_sets */
extern void T100f110(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.wipe_out */
extern void T858f12(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].wipe_out */
extern void T859f34(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T859f41(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T859f40(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T859f39(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_TYPE].keep_head */
extern void T1288f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].set_count */
extern void T1288f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T859f38(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T859f36(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T1287f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].set_after */
extern void T1287f7(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_built */
extern void T860f57(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_built */
extern void T845f61(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_validity */
extern void T100f114(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_preconditions_attachment_scope */
extern void T100f117(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_assertions_attachment_scope */
extern void T100f120(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.add_precursors_with_preconditions_recursive */
extern void T100f119(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_feature_validity */
extern void T100f113(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.is_precursor */
extern T1 T845f42(TC* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T842f16(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T100f103(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T842f15(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T100f102(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_assertion */
extern void T842f19(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_assertion */
extern void T100f106(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_debug */
extern void T842f18(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_debug */
extern void T100f105(TC* ac, T0* C, T1 a1);
/* ET_CLASS.is_creation_directly_exported_to */
extern T1 T70f150(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR_LIST.is_directly_exported_to */
extern T1 T80f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.is_directly_exported_to */
extern T1 T82f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvsrc5a_error */
extern void T63f225(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_system_error */
extern void T63f236(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc5a */
extern T0* T1442c32(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T63f17(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc5a_error */
extern void T42f225(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_system_error */
extern void T42f236(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T42f17(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vsrc1a_error */
extern void T63f224(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_vsrc1a */
extern T0* T1442c31(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T63f16(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vsrc1a_error */
extern void T42f224(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T42f16(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc4a_error */
extern void T63f201(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc4a */
extern T0* T1442c28(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T63f12(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc4a_error */
extern void T42f201(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T42f12(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc6a_error */
extern void T63f223(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_ERROR.make_gvsrc6a */
extern T0* T1442c30(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T63f15(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc6a_error */
extern void T42f223(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T42f15(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc3a_error */
extern void T63f222(TC* ac, T0* C);
/* ET_SYSTEM_ERROR.make_gvsrc3a */
extern T0* T1442c29(TC* ac);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T63f14(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc3a_error */
extern void T42f222(TC* ac, T0* C);
/* ET_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T42f14(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile_kernel */
extern void T95f95(TC* ac, T0* C, T0* a1);
extern T1 T95f95ot1(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.set_exception_data_feature_name */
extern T0* T81s594(TC* ac);
/* ET_TOKEN_CONSTANTS.once_raise_feature_name */
extern T0* T81s593(TC* ac);
/* ET_TOKEN_CONSTANTS.init_exception_manager_feature_name */
extern T0* T81s591(TC* ac);
/* ET_TOKEN_CONSTANTS.set_rout_disp_final_feature_name */
extern T0* T81s590(TC* ac);
/* ET_TOKEN_CONSTANTS.rout_disp_feature_name */
extern T0* T81s589(TC* ac);
/* ET_TOKEN_CONSTANTS.closed_operands_feature_name */
extern T0* T81s588(TC* ac);
/* ET_TOKEN_CONSTANTS.to_pointer_feature_name */
extern T0* T81s585(TC* ac);
/* ET_DYNAMIC_SYSTEM.ise_6_0_6_7057 */
extern T0* T95s79(TC* ac);
/* ET_TOKEN_CONSTANTS.upper_feature_name */
extern T0* T81s583(TC* ac);
/* ET_TOKEN_CONSTANTS.lower_feature_name */
extern T0* T81s582(TC* ac);
/* ET_TOKEN_CONSTANTS.area_feature_name */
extern T0* T81s581(TC* ac);
/* ET_NULL_ERROR_HANDLER.report_gvkfe6a_error */
extern void T63f231(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkfe6a */
extern T0* T1445c928(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T63f23(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe6a_error */
extern void T42f231(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T42f23(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe3a_error */
extern void T63f229(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvkfe3a */
extern T0* T1445c926(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T63f21(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe3a_error */
extern void T42f229(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T42f21(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe2a_error */
extern void T63f227(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe2a */
extern T0* T1445c924(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T63f19(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe2a_error */
extern void T42f227(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T42f19(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvknl1a_error */
extern void T63f226(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvknl1a */
extern T0* T1442c33(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T63f18(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvknl1a_error */
extern void T42f226(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T42f18(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.compile_degree_6 */
extern void T66f73(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_6_metrics */
extern void T66f82(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.class_count_recursive */
extern T6 T87f145(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.class_count_recursive */
extern T0* T87f145ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.class_count_recursive */
extern T0* T87f145ac2(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_CLASS]].set_rout_disp_final */
extern void T75f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* KL_AGENT_ROUTINES [ET_CLASS].call */
extern void T1506s2(TC* ac, T0* a1, T0* a2);
/* UT_COUNTER.increment */
extern void T1505f3(TC* ac, T0* C);
/* ET_ECF_SYSTEM.classes_do_recursive */
extern void T87f228(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_recursive */
extern T0* T87f228ac1(TC* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T824f159(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T824f159p1(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].forth */
extern void T1076f12(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_forth */
extern void T177f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].add_traversing_cursor */
extern void T177f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_next_cursor */
extern void T1076f16(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_position */
extern void T1076f15(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].remove_traversing_cursor */
extern void T177f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_after */
extern void T1076f14(TC* ac, T0* C);
/* ET_MASTER_CLASS.is_mapped */
extern T1 T188f38(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].item */
extern T0* T1076f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_item */
extern T0* T177f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].after */
extern T1 T1076f4(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].start */
extern void T1076f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_start */
extern void T177f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_off */
extern T1 T177f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].off */
extern T1 T1076f8(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].is_empty */
extern T1 T177f35(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T207f159(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T207f159p1(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.classes_do_all */
extern void T203f160(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.classes_do_all */
extern void T802f187(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.classes_do_all */
extern void T87f249(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.classes_do_all */
extern void T50f192(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.universes_do_recursive */
extern void T87f231(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].do_all */
extern void T187f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_item */
extern T0* T187f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].clashes_item */
extern T6 T187f22(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.add_universe_recursive */
extern void T87f239(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T87f239ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T87f239ac2(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T209f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T824f153(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T824f153ac1(TC* ac, T0* a1);
/* ET_DOTNET_ASSEMBLIES.do_all */
extern void T1260f7(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T207f153(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T207f153ac1(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_LIBRARY]].set_rout_disp_final */
extern void T205f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_LIBRARY.add_universe_recursive */
extern void T802f193(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T802f193ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T802f193ac2(TC* ac, T0* a1);
/* ET_LIBRARY.add_universe_recursive */
extern void T203f154(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_universe_recursive */
extern T0* T203f154ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.add_universe_recursive */
extern T0* T203f154ac2(TC* ac, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_all */
extern void T174f7(TC* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_all */
extern void T173f7(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].force_last */
extern void T187f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].slots_put */
extern void T187f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_UNIVERSE].clashes_put */
extern void T187f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_UNIVERSE].slots_item */
extern T6 T187f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].hash_position */
extern T6 T187f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].resize */
extern void T187f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].clashes_resize */
extern void T187f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].special_integer_ */
extern T0* T187s27(TC* ac);
/* DS_HASH_SET [ET_UNIVERSE].key_storage_resize */
extern void T187f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_resize */
extern void T187f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].key_storage_item */
extern T0* T187f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].slots_resize */
extern void T187f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].new_modulus */
extern T6 T187f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].new_capacity */
extern T6 T187f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_put */
extern void T187f46(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_UNIVERSE].search_position */
extern void T187f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].key_equality_tester */
extern T0* T187f19(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].unset_found_item */
extern void T187f44(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].has */
extern T1 T187f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].make */
extern T0* T187c36(TC* ac, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].set_internal_cursor */
extern void T187f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].new_cursor */
extern T0* T187f21(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].make */
extern T0* T1087c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].make_slots */
extern void T187f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_clashes */
extern void T187f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_key_storage */
extern void T187f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_item_storage */
extern void T187f40(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.initial_universes_capacity */
extern T6 T87f152(TC* ac, T0* C);
/* ET_ECF_SYSTEM.class_actions */
extern T0* T87s159(TC* ac);
/* KL_AGENT_ROUTINES [ET_CLASS].default_create */
extern T0* T1506c1(TC* ac);
/* UT_COUNTER.make */
extern T0* T1505c2(TC* ac, T6 a1);
/* ET_ECF_SYSTEM.preparse_recursive */
extern void T87f230(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.build_scm_write_mappings */
extern void T87f234(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.build_scm_write_mappings */
extern T0* T87f234ac1(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_CLUSTER]].set_rout_disp_final */
extern void T1521f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_SYSTEM.build_scm_write_mapping */
extern void T87f242(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_scm_write_mapping */
extern void T89f90(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern void T87f241(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern T0* T87f241ac1(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_INTERNAL_UNIVERSE]].set_rout_disp_final */
extern void T1516f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_LIBRARY.clusters_do_explicit */
extern void T802f199(TC* ac, T0* C, T0* a1);
/* ET_CLUSTERS.do_explicit */
extern void T94f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.do_recursive */
extern void T829f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].item */
extern T0* T1635f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].item */
extern T0* T837f7(TC* ac, T0* C, T6 a1);
/* ET_LIBRARY.clusters_do_explicit */
extern void T203f168(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.clusters_do_explicit */
extern void T87f289(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.internal_universes_do_recursive */
extern void T87f235(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].do_all */
extern void T1523f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_item */
extern T0* T1523f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_item */
extern T6 T1523f22(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.add_internal_universe_recursive */
extern void T87f243(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.add_internal_universe_recursive */
extern T0* T87f243ac1(TC* ac, T0* a1);
/* ET_ECF_LIBRARY.add_internal_universe_recursive */
extern void T802f196(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_internal_universe_recursive */
extern T0* T802f196ac1(TC* ac, T0* a1);
/* ET_LIBRARY.add_internal_universe_recursive */
extern void T203f157(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_internal_universe_recursive */
extern T0* T203f157ac1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].force_last */
extern void T1523f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_put */
extern void T1523f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_put */
extern void T1523f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_item */
extern T6 T1523f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].hash_position */
extern T6 T1523f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].resize */
extern void T1523f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_resize */
extern void T1523f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].special_integer_ */
extern T0* T1523s27(TC* ac);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_storage_resize */
extern void T1523f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_resize */
extern void T1523f45(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1933s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1934f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_storage_item */
extern T0* T1523f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_resize */
extern void T1523f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_modulus */
extern T6 T1523f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_capacity */
extern T6 T1523f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_put */
extern void T1523f40(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].force */
extern void T1933s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INTERNAL_UNIVERSE].fill_with */
extern void T1934f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTERNAL_UNIVERSE].extend */
extern void T1934f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].search_position */
extern void T1523f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_equality_tester */
extern T0* T1523f19(TC* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].unset_found_item */
extern void T1523f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].has */
extern T1 T1523f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make */
extern T0* T1523c30(TC* ac, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].set_internal_cursor */
extern void T1523f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_cursor */
extern T0* T1523f21(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE].make */
extern T0* T1931c4(TC* ac, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_slots */
extern void T1523f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_clashes */
extern void T1523f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_key_storage */
extern void T1523f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_item_storage */
extern void T1523f34(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].make */
extern T0* T1933s1(TC* ac, T6 a1);
/* SPECIAL [ET_INTERNAL_UNIVERSE].make_empty */
extern T0* T1934c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].default_create */
extern T0* T1933c3(TC* ac);
/* ET_ECF_SYSTEM.build_scm_read_mappings */
extern void T87f233(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.build_scm_read_mappings */
extern T0* T87f233ac1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.build_scm_read_mapping */
extern void T87f240(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_scm_read_mapping */
extern void T89f89(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.check_master_class_validity */
extern void T853f111(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.check_master_class_validity */
extern T0* T853f111ac1(TC* ac, T0* a1);
/* ET_MASTER_CLASS.process */
extern void T188f72(TC* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.process_master_class */
extern void T238f4(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.process_master_class */
extern void T232f8(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.check_master_class_validity */
extern void T232f9(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.check_overriding_classes_validity */
extern void T232f12(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0d_error */
extern void T63f583(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_universe_error */
extern void T63f605(TC* ac, T0* C, T0* a1);
/* ET_UNIVERSE_ERROR.make_vscn0d */
extern T0* T2152c21(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_MASTER_CLASS.upper_name */
extern T0* T188f49(TC* ac, T0* C);
/* ET_LIBRARY.full_lower_name */
extern T0* T203f99(TC* ac, T0* C, T2 a1);
/* ET_LIBRARY.relative_lower_name */
extern T0* T203f103(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.string_ */
extern T0* T203s97(TC* ac);
/* ET_LIBRARY.lower_name */
extern T0* T203f105(TC* ac, T0* C);
/* ET_ECF_LIBRARY.full_lower_name */
extern T0* T802f118(TC* ac, T0* C, T2 a1);
/* ET_ECF_SYSTEM.full_lower_name */
extern T0* T87f166(TC* ac, T0* C, T2 a1);
/* ET_SYSTEM.full_lower_name */
extern T0* T50f138(TC* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.kind_name */
extern T0* T207f100(TC* ac, T0* C);
/* ET_LIBRARY.kind_name */
extern T0* T203f101(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.kind_name */
extern T0* T824f97(TC* ac, T0* C);
/* ET_ECF_LIBRARY.kind_name */
extern T0* T802f117(TC* ac, T0* C);
/* ET_ECF_SYSTEM.kind_name */
extern T0* T87f165(TC* ac, T0* C);
/* ET_SYSTEM.kind_name */
extern T0* T50f137(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vscn_error */
extern T1 T63f178(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vscn0d_error */
extern void T42f583(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_universe_error */
extern void T42f605(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vscn_error */
extern T1 T42f178(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.current_universe */
extern T0* T232f6(TC* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.error_handler */
extern T0* T232f5(TC* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.set_fatal_error */
extern void T232f13(TC* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.check_intrinsic_classes_validity */
extern void T232f11(TC* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.check_overridden_class_validity */
extern void T232f14(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0c_error */
extern void T63f585(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNIVERSE_ERROR.make_vscn0c */
extern T0* T2152c23(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_CLUSTER.kind_name */
extern T0* T89f68(TC* ac, T0* C);
/* ET_CLUSTER.kind_name */
extern T0* T67f39(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.kind_name */
extern T0* T262f30(TC* ac, T0* C);
/* ET_NONE_GROUP.kind_name */
extern T0* T198f29(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vscn0c_error */
extern void T42f585(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vscn0b_error */
extern void T63f584(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNIVERSE_ERROR.make_vscn0b */
extern T0* T2152c22(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vscn0b_error */
extern void T42f584(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MASTER_CLASS.actual_intrinsic_class */
extern T0* T188f34(TC* ac, T0* C);
/* ET_CLASS.actual_intrinsic_class */
extern T0* T70f197(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0a_error */
extern void T63f582(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNIVERSE_ERROR.make_vscn0a */
extern T0* T2152c20(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vscn0a_error */
extern void T42f582(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_MASTER_CLASS_CHECKER.reset_fatal_error */
extern void T232f10(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern void T87f247(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T87f247ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T87f247ac2(TC* ac, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T824f163(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].go_after */
extern void T1076f13(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_go_after */
extern void T177f64(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T207f163(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_until */
extern void T203f164(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.master_classes_do_until */
extern void T802f189(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_until */
extern void T87f253(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.master_classes_do_until */
extern void T50f195(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T824f161(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].do_all */
extern void T177f60(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T207f161(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.master_classes_do_all */
extern void T203f162(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.master_classes_do_all */
extern void T802f184(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.master_classes_do_all */
extern void T87f244(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.master_classes_do_all */
extern void T50f194(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.universes_do_recursive_until */
extern void T87f232(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_UNIVERSE].forth */
extern void T187f56(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_forth */
extern void T187f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].add_traversing_cursor */
extern void T187f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_next_cursor */
extern void T1087f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_position */
extern void T1087f10(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].remove_traversing_cursor */
extern void T187f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_after */
extern void T1087f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].item_for_iteration */
extern T0* T187f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_item */
extern T0* T187f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].go_after */
extern void T187f55(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_go_after */
extern void T187f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].cursor_off */
extern T1 T187f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].off */
extern T1 T1087f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].after */
extern T1 T187f28(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_after */
extern T1 T187f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].after */
extern T1 T1087f4(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].start */
extern void T187f54(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_start */
extern void T187f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].is_empty */
extern T1 T187f34(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.check_master_class_validity */
extern void T66f109(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_PROCESSOR.check_master_class_validity */
extern T0* T66f109ac1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.preparse_recursive */
extern void T87f230p1(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T87f230p1ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T87f230p1ac2(TC* ac);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T87f230p1ac3(TC* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T87f230p1ac4(TC* ac, T0* a1);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T87f230p1ac5(TC* ac, T0* a1);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T87f230p1ac6(TC* ac, T0* a1);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T87f230p1ac7(TC* ac);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T87f230p1ac8(TC* ac);
/* ET_ECF_LIBRARY.import_classes */
extern void T802f195(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T802f195ac1(TC* ac);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T802f195ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T802f195ac3(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T1526f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.export_classes */
extern void T826f39(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_imported_class */
extern void T188f88(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_imported_class */
extern T1 T188f48(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].has */
extern T1 T1091f13(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.master_class */
extern T0* T203f92(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item */
extern T0* T827f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].key */
extern T0* T1076f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_key */
extern T0* T177f37(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_hidden */
extern T1 T89f13(TC* ac, T0* C);
/* ET_CLUSTER.is_hidden */
extern T1 T67f38(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_hidden */
extern T1 T262f29(TC* ac, T0* C);
/* ET_NONE_GROUP.is_hidden */
extern T1 T198f28(TC* ac, T0* C);
/* PROCEDURE [TUPLE [ET_ADAPTED_LIBRARY]].set_rout_disp_final */
extern void T805f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_LIBRARY.export_classes */
extern void T821f36(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_unknown_imported_classes */
extern void T188f70(TC* ac, T0* C);
/* ET_MASTER_CLASS.remove_imported_class */
extern void T188f81(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.is_declared_locally */
extern T1 T188f33(TC* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_adapted */
extern void T174f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].do_all */
extern void T1069f11(TC* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_adapted */
extern void T173f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].do_all */
extern void T1068f11(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.import_classes */
extern void T203f156(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_LIBRARY.import_classes */
extern T0* T203f156ac1(TC* ac);
/* Creation of agent #2 in feature ET_LIBRARY.import_classes */
extern T0* T203f156ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.import_classes */
extern T0* T203f156ac3(TC* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.import_classes */
extern void T824f156(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.import_kernel_class */
extern void T824f168(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.master_class */
extern T0* T824f91(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.tokens */
extern T0* T824s101(TC* ac);
/* ET_ECF_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T824f167(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.native_array_class_name */
extern T0* T81s1561(TC* ac);
/* ET_DOTNET_ASSEMBLY.import_classes */
extern void T207f156(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_kernel_class */
extern void T207f167(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.master_class */
extern T0* T207f91(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.tokens */
extern T0* T207s98(TC* ac);
/* ET_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T207f166(TC* ac, T0* C);
/* ET_ECF_LIBRARY.preparse */
extern void T802f194(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.preparse */
extern void T802f194p1(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.preparse */
extern T0* T802f194p1ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.preparse */
extern T0* T802f194p1ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.preparse */
extern T0* T802f194p1ac3(TC* ac);
/* Creation of agent #4 in feature ET_ECF_LIBRARY.preparse */
extern T0* T802f194p1ac4(TC* ac, T0* a1);
/* ET_MASTER_CLASS.remove_unknown_local_classes */
extern void T188f69(TC* ac, T0* C);
/* ET_MASTER_CLASS.remove_local_ignored_class */
extern void T188f80(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_first */
extern void T69f32(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].delete */
extern void T69f31(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_local_non_override_class */
extern void T188f79(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_local_override_class */
extern void T188f78(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove */
extern void T69f28(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].move_left */
extern void T69f35(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_cursors_left */
extern void T69f34(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_last */
extern void T69f33(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_last_cursors_after */
extern void T69f36(TC* ac, T0* C);
/* ET_MASTER_CLASS.reset_local_modified_classes */
extern void T188f68(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T188f68ac1(TC* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T188f68ac2(TC* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T188f68ac3(TC* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T188f68ac4(TC* ac, T0* a1, T0* a2);
/* Creation of agent #5 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T188f68ac5(TC* ac);
/* ET_MASTER_CLASS.reset_local_modified_class */
extern void T188f73(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.file_time_stamp */
extern T6 T152s34(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.file_time_stamp */
extern T6 T151s37(TC* ac, T0* a1);
/* ET_MASTER_CLASS.file_system */
extern T0* T188s31(TC* ac);
/* ET_MASTER_CLASS.unix_file_system */
extern T0* T188s41(TC* ac);
/* ET_MASTER_CLASS.windows_file_system */
extern T0* T188s40(TC* ac);
/* ET_MASTER_CLASS.operating_system */
extern T0* T188s39(TC* ac);
/* ET_CLASS.reset_after_parsed_and_errors */
extern void T70f324(TC* ac, T0* C);
/* ET_CLASS.reset_after_parsed */
extern void T70f325(TC* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.reset */
extern void T433f10(TC* ac, T0* C);
/* ET_CONVERT_PROCEDURE.reset */
extern void T700f10(TC* ac, T0* C);
/* ET_BRACED_TYPE_LIST.reset */
extern void T1086f12(TC* ac, T0* C);
/* ET_LIKE_FEATURE.reset */
extern void T722f102(TC* ac, T0* C);
/* ET_TUPLE_TYPE.reset */
extern void T183f132(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.reset */
extern void T2159f27(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset */
extern void T691f94(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_constraint_creation_procedures */
extern void T691f91(TC* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.reset */
extern void T418f14(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_constraint_base_types */
extern void T691f97(TC* ac, T0* C);
/* ET_TYPE_CONSTRAINT_LIST.reset */
extern void T641f17(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.reset */
extern void T692f11(TC* ac, T0* C);
/* ET_CONSTRAINT_RENAME_LIST.reset */
extern void T421f14(TC* ac, T0* C);
/* ET_RENAME.reset */
extern void T696f7(TC* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.reset */
extern void T715f7(TC* ac, T0* C);
/* ET_ALIAS_NAME_LIST.reset */
extern void T367f13(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.reset */
extern void T716f59(TC* ac, T0* C);
/* ET_ALIAS_NAME.reset */
extern void T364f112(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset */
extern void T500f92(TC* ac, T0* C);
/* ET_CLASS.reset_type */
extern void T70f336(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset */
extern void T185f36(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reset */
extern void T848f91(TC* ac, T0* C);
/* ET_CLASS_TYPE.reset */
extern void T102f138(TC* ac, T0* C);
extern T1 T102f138ot1(TC* ac, T0* a1);
extern T1 T102f138ot2(TC* ac, T0* a1);
extern T1 T102f138ot3(TC* ac, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T201f22(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T2158f24(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset */
extern void T725f97(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset */
extern void T724f100(TC* ac, T0* C);
/* ET_LIKE_CURRENT.reset */
extern void T199f95(TC* ac, T0* C);
/* ET_IDENTIFIER.reset */
extern void T303f137(TC* ac, T0* C);
/* ET_CONVERT_FUNCTION.reset */
extern void T699f9(TC* ac, T0* C);
/* ET_CREATOR_LIST.reset */
extern void T80f11(TC* ac, T0* C);
/* ET_CREATOR.reset */
extern void T82f19(TC* ac, T0* C);
/* ET_INVARIANTS.reset */
extern void T539f36(TC* ac, T0* C);
/* ET_INVARIANTS.reset */
extern void T539f36p1(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.reset */
extern void T679f74(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.reset */
extern void T678f74(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.reset */
extern void T677f74(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.reset */
extern void T676f74(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.reset */
extern void T675f75(TC* ac, T0* C);
/* ET_VERBATIM_STRING.reset */
extern void T674f60(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.reset */
extern void T673f56(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.reset */
extern void T671f57(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.reset */
extern void T757f29(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.reset */
extern void T613f46(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.reset */
extern void T613f46p1(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.reset_unfolded_form */
extern void T613f47(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset */
extern void T339f54(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset */
extern void T339f54p1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset_unfolded_form */
extern void T339f55(TC* ac, T0* C);
/* ET_VARIANT.reset */
extern void T650f8(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.reset */
extern void T556f18(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.reset */
extern void T756f33(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.reset */
extern void T755f35(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.reset */
extern void T753f37(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.reset */
extern void T741f29(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T1033f37(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T1033f37p1(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset_arguments */
extern void T1033f38(TC* ac, T0* C);
extern T1 T1033f38ot1(TC* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.reset */
extern void T1866f19(TC* ac, T0* C);
extern T1 T1866f19ot1(TC* ac, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.reset */
extern void T2041f30(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.reset */
extern void T2040f33(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.reset */
extern void T2039f25(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.reset */
extern void T1870f24(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.reset */
extern void T980f29(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.reset */
extern void T345f25(TC* ac, T0* C);
extern T1 T345f25ot1(TC* ac, T0* a1);
/* ET_TAGGED_ASSERTION.reset */
extern void T772f9(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.reset */
extern void T764f58(TC* ac, T0* C);
extern T1 T764f58ot1(TC* ac, T0* a1);
/* ET_POSTCONDITIONS.reset */
extern void T601f24(TC* ac, T0* C);
/* ET_POSTCONDITIONS.reset */
extern void T601f24p1(TC* ac, T0* C);
/* ET_PRECONDITIONS.reset */
extern void T604f23(TC* ac, T0* C);
/* ET_PRECONDITIONS.reset */
extern void T604f23p1(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset */
extern void T497f14(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT.reset */
extern void T491f13(TC* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.reset */
extern void T1446f14(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.reset */
extern void T358f17(TC* ac, T0* C);
extern T1 T358f17ot1(TC* ac, T0* a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.reset */
extern void T766f16(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.reset */
extern void T336f52(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.reset */
extern void T1580f11(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T763f66(TC* ac, T0* C);
/* ET_COMPOUND.reset */
extern void T403f20(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T1034f16(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T1034f16p1(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset_arguments */
extern void T1034f17(TC* ac, T0* C);
extern T1 T1034f17ot1(TC* ac, T0* a1);
/* ET_INLINE_SEPARATE_INSTRUCTION.reset */
extern void T527f13(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.reset */
extern void T524f17(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.reset */
extern void T518f13(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.reset */
extern void T624f31(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.reset */
extern void T624f31p1(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.reset_unfolded_form */
extern void T624f32(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset */
extern void T342f36(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset */
extern void T342f36p1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset_unfolded_form */
extern void T342f37(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T382f21(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T382f21p1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T739f20(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T739f20p1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset_arguments */
extern void T739f21(TC* ac, T0* C);
extern T1 T739f21ot1(TC* ac, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.reset */
extern void T737f20(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.reset_arguments */
extern void T737f21(TC* ac, T0* C);
extern T1 T737f21ot1(TC* ac, T0* a1);
/* ET_DEBUG_INSTRUCTION.reset */
extern void T446f13(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.reset */
extern void T533f16(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.reset */
extern void T662f12(TC* ac, T0* C);
/* ET_WHEN_PART.reset */
extern void T659f10(TC* ac, T0* C);
/* ET_CHOICE_LIST.reset */
extern void T394f17(TC* ac, T0* C);
/* ET_CHOICE_RANGE.reset */
extern void T735f12(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.reset */
extern void T512f18(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.reset */
extern void T458f12(TC* ac, T0* C);
/* ET_ELSEIF_PART.reset */
extern void T455f12(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.reset */
extern void T734f26(TC* ac, T0* C);
/* ET_QUALIFIED_CALL.reset */
extern void T732f6(TC* ac, T0* C);
/* ET_QUALIFIED_CALL.reset_arguments */
extern void T732f7(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.reset */
extern void T731f24(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.reset */
extern void T729f21(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.reset */
extern void T728f13(TC* ac, T0* C);
/* ET_ASSIGNMENT.reset */
extern void T727f16(TC* ac, T0* C);
extern T1 T727f16ot1(TC* ac, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.reset */
extern void T726f24(TC* ac, T0* C);
extern T1 T726f24ot1(TC* ac, T0* a1);
/* ET_RETRY_INSTRUCTION.reset */
extern void T321f23(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T736f21(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T736f21p1(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T736f21p0(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset_arguments */
extern void T736f22(TC* ac, T0* C);
extern T1 T736f22ot1(TC* ac, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.reset */
extern void T553f14(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE.reset */
extern void T547f13(TC* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.reset */
extern void T1447f14(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T763f66p1(TC* ac, T0* C);
extern T1 T763f66p1ot1(TC* ac, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T762f61(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T762f61p1(TC* ac, T0* C);
extern T1 T762f61p1ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.reset */
extern void T761f59(TC* ac, T0* C);
extern T1 T761f59ot1(TC* ac, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T760f67(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T760f67p1(TC* ac, T0* C);
extern T1 T760f67p1ot1(TC* ac, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T759f62(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T759f62p1(TC* ac, T0* C);
extern T1 T759f62p1ot1(TC* ac, T0* a1);
/* ET_CALL_AGENT.reset */
extern void T376f41(TC* ac, T0* C);
extern T1 T376f41ot1(TC* ac, T0* a1);
/* ET_AGENT_OPEN_TARGET.reset */
extern void T765f14(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.reset */
extern void T630f37(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.reset */
extern void T568f39(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.reset */
extern void T559f39(TC* ac, T0* C);
extern T1 T559f39ot1(TC* ac, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.reset */
extern void T589f30(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.reset */
extern void T373f33(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.reset_arguments */
extern void T373f34(TC* ac, T0* C);
extern T1 T373f34ot1(TC* ac, T0* a1);
/* ET_BRACKET_SYMBOL.reset */
extern void T333f135(TC* ac, T0* C);
/* ET_OBJECT_TEST.reset */
extern void T754f32(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.reset */
extern void T752f29(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.reset */
extern void T751f34(TC* ac, T0* C);
/* ET_FREE_OPERATOR.reset */
extern void T300f63(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.reset */
extern void T309f64(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.reset */
extern void T324f159(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.reset */
extern void T750f29(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.reset */
extern void T749f32(TC* ac, T0* C);
extern T1 T749f32ot1(TC* ac, T0* a1);
extern T1 T749f32ot2(TC* ac, T0* a1);
/* ET_EQUALITY_EXPRESSION.reset */
extern void T748f30(TC* ac, T0* C);
extern T1 T748f30ot1(TC* ac, T0* a1);
extern T1 T748f30ot2(TC* ac, T0* a1);
/* ET_INFIX_EXPRESSION.reset */
extern void T745f36(TC* ac, T0* C);
extern T1 T745f36ot1(TC* ac, T0* a1);
extern T1 T745f36ot2(TC* ac, T0* a1);
extern T1 T745f36ot3(TC* ac, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.reset */
extern void T747f45(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.reset */
extern void T746f45(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.reset */
extern void T744f29(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.reset */
extern void T743f29(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.reset */
extern void T742f29(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.reset */
extern void T740f38(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.reset_arguments */
extern void T740f39(TC* ac, T0* C);
extern T1 T740f39ot1(TC* ac, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T627f41(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T627f41p1(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset_arguments */
extern void T627f42(TC* ac, T0* C);
extern T1 T627f42ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T379f38(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T379f38p1(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T379f38p0(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset_arguments */
extern void T379f39(TC* ac, T0* C);
extern T1 T379f39ot1(TC* ac, T0* a1);
/* ET_INSPECT_EXPRESSION.reset */
extern void T530f32(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.reset */
extern void T656f12(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.reset */
extern void T653f11(TC* ac, T0* C);
/* ET_IF_EXPRESSION.reset */
extern void T509f35(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.reset */
extern void T452f12(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.reset */
extern void T449f13(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.reset */
extern void T436f42(TC* ac, T0* C);
/* ET_CLASS_ASSERTION.reset */
extern void T719f9(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.reset */
extern void T686f57(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.reset */
extern void T685f56(TC* ac, T0* C);
/* ET_CURRENT.reset */
extern void T297f43(TC* ac, T0* C);
/* ET_RESULT.reset */
extern void T318f42(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.reset */
extern void T684f48(TC* ac, T0* C);
/* ET_VOID.reset */
extern void T327f39(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.reset */
extern void T683f48(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.reset */
extern void T681f52(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.reset */
extern void T680f52(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.reset */
extern void T672f55(TC* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.reset */
extern void T594f8(TC* ac, T0* C);
/* ET_PARENT_LIST.reset */
extern void T181f14(TC* ac, T0* C);
/* ET_PARENT.reset */
extern void T180f12(TC* ac, T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.reset */
extern void T195f10(TC* ac, T0* C);
/* ET_EXPORT_LIST.reset */
extern void T194f9(TC* ac, T0* C);
/* ET_FEATURE_EXPORT.reset */
extern void T483f13(TC* ac, T0* C);
/* ET_ALL_EXPORT.reset */
extern void T697f9(TC* ac, T0* C);
/* ET_RENAME_LIST.reset */
extern void T193f10(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset */
extern void T506f34(TC* ac, T0* C);
/* ET_PROCEDURE_LIST.reset */
extern void T770f11(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset */
extern void T714f113(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_features_flattened */
extern void T714f114(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T714f124(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset_qualified_anchored_types */
extern void T497f15(TC* ac, T0* C);
/* ET_LIKE_FEATURE.reset_qualified_anchored_types */
extern void T722f104(TC* ac, T0* C);
/* ET_TUPLE_TYPE.reset_qualified_anchored_types */
extern void T183f138(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.reset_qualified_anchored_types */
extern void T2159f28(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T691f101(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T500f97(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T185f37(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reset_qualified_anchored_types */
extern void T848f93(TC* ac, T0* C);
/* ET_CLASS_TYPE.reset_qualified_anchored_types */
extern void T102f146(TC* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T201f23(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T2158f25(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T506f37(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset_qualified_anchored_types */
extern void T725f99(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset_qualified_anchored_types */
extern void T724f102(TC* ac, T0* C);
/* ET_LIKE_CURRENT.reset_qualified_anchored_types */
extern void T199f98(TC* ac, T0* C);
/* ET_CLASS.reset_qualified_anchored_types */
extern void T70f343(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_interface_checked */
extern void T714f115(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset */
extern void T713f103(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_features_flattened */
extern void T713f104(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T713f114(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_interface_checked */
extern void T713f105(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset */
extern void T712f109(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T712f110(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T712f120(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T712f111(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T712f111p1(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset */
extern void T711f106(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T711f107(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T711f117(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T711f108(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T711f108p1(TC* ac, T0* C);
/* ET_QUERY_LIST.reset */
extern void T769f15(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T710f116(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T710f116p1(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_features_flattened */
extern void T710f117(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_signature_qualified_anchored_types */
extern void T710f126(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_interface_checked */
extern void T710f118(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T708f106(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T708f106p1(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_features_flattened */
extern void T708f107(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_signature_qualified_anchored_types */
extern void T708f116(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_interface_checked */
extern void T708f108(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T707f112(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T707f112p1(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T707f113(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_signature_qualified_anchored_types */
extern void T707f122(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T707f114(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T707f114p1(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset */
extern void T706f109(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset */
extern void T706f109p1(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T706f110(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_signature_qualified_anchored_types */
extern void T706f119(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_interface_checked */
extern void T706f111(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_interface_checked */
extern void T706f111p1(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T705f104(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T705f104p1(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_features_flattened */
extern void T705f105(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T705f114(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_interface_checked */
extern void T705f106(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T704f101(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T704f101p1(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_features_flattened */
extern void T704f102(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T704f111(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_interface_checked */
extern void T704f103(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset */
extern void T703f109(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset */
extern void T703f109p1(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_features_flattened */
extern void T703f110(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T703f119(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T703f111(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T703f111p1(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset */
extern void T702f97(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset */
extern void T702f97p1(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_after_features_flattened */
extern void T702f98(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T702f107(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_after_interface_checked */
extern void T702f99(TC* ac, T0* C);
/* ET_MASTER_CLASS.local_ignored_classes_do_if */
extern void T188f77(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_CLASS].do_if */
extern void T69f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_ignored_classes_do_all */
extern void T188f76(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].do_all */
extern void T69f29(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_non_override_classes_do_all */
extern void T188f75(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_override_classes_do_all */
extern void T188f74(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.process */
extern void T89f91(TC* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.process_cluster */
extern void T238f3(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.process_cluster */
extern void T231f184(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster */
extern void T231f185(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T231f185ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T231f185ac2(TC* ac, T0* a1);
/* ET_CLASS.is_in_group */
extern T1 T70f196(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_clusters */
extern void T231f189(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].remove */
extern void T1635f15(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].keep_head */
extern void T1955f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].set_count */
extern void T1955f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_left */
extern void T1635f18(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_cursors_left */
extern void T1635f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_position */
extern void T1957f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].remove_last */
extern void T1635f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_last_cursors_after */
extern void T1635f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_next_cursor */
extern void T1957f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_after */
extern void T1957f7(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.build_dependant_constraint */
extern void T231f188(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_dependant_constraint */
extern void T89f95(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_dependant_constraint */
extern void T829f12(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make */
extern T0* T1559c17(TC* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].set_key_equality_tester */
extern void T1943f35(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_equality_tester */
extern T0* T1559s7(TC* ac);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_map */
extern T0* T1943c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_with_equality_testers */
extern void T1943f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_sparse_container */
extern void T1943f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].set_internal_cursor */
extern void T1943f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].unset_found_item */
extern void T1943f38(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_slots */
extern void T1943f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].new_modulus */
extern T6 T1943f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_clashes */
extern void T1943f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_key_storage */
extern void T1943f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_item_storage */
extern void T1943f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].make */
extern T0* T2141s1(TC* ac, T6 a1);
/* SPECIAL [LX_WILDCARD].make_empty */
extern T0* T2138c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].default_create */
extern T0* T2141c2(TC* ac);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make_with_pathnames */
extern T0* T1559c16(TC* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].put_last */
extern void T1943f36(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_put */
extern void T1943f44(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_put */
extern void T1943f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_put */
extern void T1943f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_item */
extern T6 T1943f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].compress */
extern void T1943f41(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].hash_position */
extern T6 T1943f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_wipe_out */
extern void T1943f50(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_wipe_out */
extern void T1943f49(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_keep_head */
extern void T1943f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_keep_head */
extern void T1943f47(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].keep_head */
extern void T2138f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].set_count */
extern void T2138f8(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].move_all_cursors */
extern void T1943f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_put */
extern void T1943f40(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].force */
extern void T2141s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_WILDCARD].fill_with */
extern void T2138f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_WILDCARD].extend */
extern void T2138f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].search_position */
extern void T1943f39(TC* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.compile */
extern void T1942f19(TC* ac, T0* C, T0* a1, T1 a2);
/* LX_DFA_WILDCARD.compile */
extern T0* T1942c19(TC* ac, T0* a1, T1 a2);
/* LX_FULL_DFA.make */
extern T0* T2136c38(TC* ac, T0* a1);
/* LX_FULL_DFA.build */
extern void T2136f41(TC* ac, T0* C);
/* LX_FULL_DFA.build_accept_table */
extern void T2136f47(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].first */
extern T0* T2175f6(TC* ac, T0* C);
/* LX_FULL_DFA.build_nxt_table */
extern void T2136f46(TC* ac, T0* C);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].target */
extern T0* T2214f7(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].value */
extern T0* T2278f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].item_storage_item */
extern T0* T2278f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].position_of_key */
extern T6 T2278f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].clashes_item */
extern T6 T2278f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].key_storage_item */
extern T6 T2278f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].hash_position */
extern T6 T2278f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].slots_item */
extern T6 T2278f23(TC* ac, T0* C, T6 a1);
/* LX_DFA_STATE.is_accepting */
extern T1 T2206f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].is_empty */
extern T1 T2175f11(TC* ac, T0* C);
/* LX_FULL_DFA.build_transitions */
extern void T2136f45(TC* ac, T0* C, T0* a1);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].set_target */
extern void T2214f9(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].force_new */
extern void T2278f46(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].key_storage_put */
extern void T2278f52(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].item_storage_put */
extern void T2278f48(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].force */
extern void T2275s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_DFA_STATE].fill_with */
extern void T2274f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_DFA_STATE].extend */
extern void T2274f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].slots_put */
extern void T2278f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].clashes_put */
extern void T2278f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].resize */
extern void T2278f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].clashes_resize */
extern void T2278f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].special_integer_ */
extern T0* T2278s34(TC* ac);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].key_storage_resize */
extern void T2278f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].item_storage_resize */
extern void T2278f54(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].aliased_resized_area */
extern T0* T2275s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [LX_DFA_STATE].aliased_resized_area */
extern T0* T2274f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].slots_resize */
extern void T2278f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].new_modulus */
extern T6 T2278f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].new_capacity */
extern T6 T2278f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].unset_found_item */
extern void T2278f42(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].replace_found_item */
extern void T2278f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].found */
extern T1 T2278f20(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].search */
extern void T2278f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].search_position */
extern void T2278f47(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.previous_symbol */
extern T6 T2209f4(TC* ac, T0* C, T6 a1);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].item */
extern T0* T2262f4(TC* ac, T0* C, T6 a1);
/* LX_FULL_DFA.new_state */
extern T0* T2136f37(TC* ac, T0* C, T0* a1);
/* LX_DFA_STATE.set_id */
extern void T2206f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].put_last */
extern void T2208f9(TC* ac, T0* C, T0* a1);
/* LX_DFA_STATE.is_equal */
extern T1 T2206f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].is_equal */
extern T1 T2207f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].any_ */
extern T0* T2207s17(TC* ac);
/* LX_DFA_STATE.any_ */
extern T0* T2206s14(TC* ac);
/* LX_DFA_STATE.new_state */
extern T0* T2206f9(TC* ac, T0* C, T6 a1);
/* LX_DFA_STATE.make */
extern T0* T2206c16(TC* ac, T0* a1, T6 a2, T6 a3);
extern T1 T2206f16ot1(TC* ac, T0* a1);
/* LX_RULE.set_useful */
extern void T2192f22(TC* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [LX_RULE].sort */
extern void T2175f17(TC* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_RULE].sort */
extern void T2267f3(TC* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_RULE].sort_with_comparator */
extern void T2267f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_BUBBLE_SORTER [LX_RULE].subsort_with_comparator */
extern void T2267f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [LX_RULE].replace */
extern void T2175f22(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].less_than */
extern T1 T2291f1(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].detachable_less_than */
extern T1 T2291f2(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].attached_less_than */
extern T1 T2291f3(TC* ac, T0* C, T0* a1, T0* a2);
/* LX_RULE.is_less */
extern T1 T2192f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].item */
extern T0* T2175f10(TC* ac, T0* C, T6 a1);
/* LX_DFA_STATE.rule_sorter */
extern T0* T2206f7(TC* ac, T0* C);
/* DS_BUBBLE_SORTER [LX_RULE].make */
extern T0* T2267c2(TC* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].make */
extern T0* T2291c4(TC* ac);
/* DS_ARRAYED_LIST [LX_NFA_STATE].sort */
extern void T2207f25(TC* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].sort */
extern void T2265f3(TC* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].sort_with_comparator */
extern void T2265f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].subsort_with_comparator */
extern void T2265f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [LX_NFA_STATE].replace */
extern void T2207f22(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].less_than */
extern T1 T2294f1(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].detachable_less_than */
extern T1 T2294f2(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].attached_less_than */
extern T1 T2294f3(TC* ac, T0* C, T0* a1, T0* a2);
/* LX_NFA_STATE.is_less */
extern T1 T2217f9(TC* ac, T0* C, T0* a1);
/* LX_DFA_STATE.bubble_sorter */
extern T0* T2206f8(TC* ac, T0* C);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].make */
extern T0* T2265c2(TC* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].make */
extern T0* T2294c4(TC* ac);
/* DS_ARRAYED_LIST [LX_NFA_STATE].last */
extern T0* T2207f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].is_empty */
extern T1 T2207f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].force_last */
extern void T2175f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].force */
extern void T2239s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_RULE].fill_with */
extern void T2205f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_RULE].extend */
extern void T2205f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].resize */
extern void T2175f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].aliased_resized_area */
extern T0* T2239s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [LX_RULE].aliased_resized_area */
extern T0* T2205f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].new_capacity */
extern T6 T2175f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].extendible */
extern T1 T2175f8(TC* ac, T0* C, T6 a1);
/* LX_NFA_STATE.is_accepting_head */
extern T1 T2217f6(TC* ac, T0* C);
/* LX_NFA_STATE.has_transition */
extern T1 T2217f8(TC* ac, T0* C);
/* LX_NFA_STATE.is_accepting */
extern T1 T2217f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].has */
extern T1 T2207f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].force_last */
extern void T2207f23(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].force */
extern void T2271s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_NFA_STATE].fill_with */
extern void T2269f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_NFA_STATE].extend */
extern void T2269f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].resize */
extern void T2207f28(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].aliased_resized_area */
extern T0* T2271s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [LX_NFA_STATE].aliased_resized_area */
extern T0* T2269f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].new_capacity */
extern T6 T2207f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].extendible */
extern T1 T2207f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].make */
extern T0* T2175c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].set_internal_cursor */
extern void T2175f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].new_cursor */
extern T0* T2175f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_RULE].make */
extern T0* T2240c4(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].make */
extern T0* T2239s1(TC* ac, T6 a1);
/* SPECIAL [LX_RULE].make_empty */
extern void T2205f7(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_RULE].make_empty */
extern T0* T2205c7(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].default_create */
extern T0* T2239c3(TC* ac);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].make */
extern T0* T2214c8(TC* ac, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_map */
extern T0* T2278c35(TC* ac, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_with_equality_testers */
extern void T2278f36(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_sparse_container */
extern void T2278f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].set_internal_cursor */
extern void T2278f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].new_cursor */
extern T0* T2278f27(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_DFA_STATE, INTEGER_32].make */
extern T0* T2303c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_slots */
extern void T2278f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_clashes */
extern void T2278f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_key_storage */
extern void T2278f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_item_storage */
extern void T2278f38(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].make */
extern T0* T2275s1(TC* ac, T6 a1);
/* SPECIAL [LX_DFA_STATE].make_empty */
extern T0* T2274c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].default_create */
extern T0* T2275c3(TC* ac);
/* LX_DFA_STATE.maximum_symbol */
extern T6 T2206f13(TC* ac, T0* C);
/* LX_DFA_STATE.minimum_symbol */
extern T6 T2206f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put_last */
extern void T2207f20(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].target */
extern T0* T2259f2(TC* ac, T0* C);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].target */
extern T0* T2258f2(TC* ac, T0* C);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].target */
extern T0* T2255f1(TC* ac, T0* C);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T2259f3(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T2258f3(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.has */
extern T1 T2179f13(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.added */
extern T1 T2179f17(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.index_in_chunk */
extern T6 T2179f12(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.chunk */
extern T0* T2179f11(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.chunk_index */
extern T6 T2179f14(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.masks */
extern T0* T2179f10(TC* ac, T0* C);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T2255f2(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].item */
extern T0* T2207f13(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].make */
extern T0* T2207c19(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].set_internal_cursor */
extern void T2207f26(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].new_cursor */
extern T0* T2207f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].make */
extern T0* T2272c9(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].make */
extern T0* T2271s1(TC* ac, T6 a1);
/* SPECIAL [LX_NFA_STATE].make_empty */
extern T0* T2269c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].default_create */
extern T0* T2271c3(TC* ac);
/* LX_SYMBOL_PARTITIONS.is_representative */
extern T1 T2209f8(TC* ac, T0* C, T6 a1);
/* LX_DFA_STATE.partition */
extern void T2206f18(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].record */
extern void T2259f5(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T2209f13(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T2209f13p1(TC* ac, T0* C, T6 a1);
/* DS_BILINKABLE [INTEGER_32].forget_left */
extern void T2263f7(TC* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].forget_right */
extern void T2263f6(TC* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].put_right */
extern void T2263f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].attach_left */
extern void T2263f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].force */
extern void T933f86(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].record */
extern void T2258f5(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.add */
extern void T2209f12(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.add */
extern void T2209f12p1(TC* ac, T0* C, T0* a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].record */
extern void T2255f4(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T2209f11(TC* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T2209f11p1(TC* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.new_lower */
extern T6 T2209f9(TC* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].put_left */
extern void T2263f9(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].attach_right */
extern void T2263f10(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].put */
extern void T2263f8(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.lower */
extern T6 T2209f7(TC* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.upper */
extern T6 T2209f6(TC* ac, T0* C);
/* LX_FULL_DFA.resize */
extern void T2136f50(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].resize */
extern void T2208f10(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.capacity */
extern T6 T2209f5(TC* ac, T0* C);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].count */
extern T6 T2262f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_DFA_STATE].item */
extern T0* T2208f7(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.make */
extern T0* T2209c10(TC* ac, T6 a1, T6 a2);
/* LX_SYMBOL_PARTITIONS.make */
extern void T2209f10p1(TC* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].put */
extern void T2262f7(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].make_filled */
extern T0* T2262c6(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].make_filled_area */
extern void T2262f8(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].make_filled */
extern T0* T2264c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].fill_with */
extern void T2264f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].extend */
extern void T2264f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].make_empty */
extern void T2264f6(TC* ac, T0* C, T6 a1);
/* DS_BILINKABLE [INTEGER_32].make */
extern T0* T2263c4(TC* ac, T6 a1);
/* LX_FULL_DFA.put_eob_state */
extern void T2136f40(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].force_first */
extern void T2175f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].put */
extern void T2175f18(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [LX_RULE].move_cursors_right */
extern void T2175f21(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_RULE].set_position */
extern void T2240f5(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].move_right */
extern void T2175f20(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [LX_RULE].put_last */
extern void T2175f19(TC* ac, T0* C, T0* a1);
/* LX_RULE.make_default */
extern T0* T2192c14(TC* ac, T6 a1);
/* LX_RULE.dummy_action */
extern T0* T2192f11(TC* ac, T0* C);
/* LX_ACTION.make */
extern T0* T2261c2(TC* ac, T0* a1);
/* LX_RULE.dummy_pattern */
extern T0* T2192f12(TC* ac, T0* C);
/* LX_NFA.make_epsilon */
extern T0* T2190c6(TC* ac, T1 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put_first */
extern void T2207f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put */
extern void T2207f27(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [LX_NFA_STATE].move_cursors_right */
extern void T2207f31(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_position */
extern void T2272f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].move_right */
extern void T2207f30(TC* ac, T0* C, T6 a1, T6 a2);
/* LX_NFA_STATE.set_transition */
extern void T2217f11(TC* ac, T0* C, T0* a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].make */
extern T0* T2255c3(TC* ac, T0* a1);
/* LX_NFA_STATE.make */
extern T0* T2217c10(TC* ac, T1 a1);
/* LX_FULL_DFA.initialize */
extern void T2136f39(TC* ac, T0* C, T0* a1);
/* LX_FULL_DFA.initialize_dfa */
extern void T2136f44(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* LX_FULL_DFA.put_start_condition */
extern void T2136f49(TC* ac, T0* C, T0* a1);
/* LX_NFA.start_state */
extern T0* T2190f4(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].first */
extern T0* T2207f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA].item */
extern T0* T2215f7(TC* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.item */
extern T0* T2176f9(TC* ac, T0* C, T6 a1);
/* LX_FULL_DFA.set_nfa_state_ids */
extern void T2136f48(TC* ac, T0* C, T0* a1);
/* LX_NFA_STATE.set_id */
extern void T2217f14(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].force */
extern void T2216f35(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_put */
extern void T2216f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_put */
extern void T2216f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_put */
extern void T2216f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_item */
extern T6 T2216f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_item */
extern T6 T2216f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].hash_position */
extern T6 T2216f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].resize */
extern void T2216f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_resize */
extern void T2216f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].special_integer_ */
extern T0* T2216s31(TC* ac);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_resize */
extern void T2216f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_resize */
extern void T2216f46(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].aliased_resized_area */
extern T0* T2189s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [LX_NFA].aliased_resized_area */
extern T0* T2191f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_item */
extern T6 T2216f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_resize */
extern void T2216f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_modulus */
extern T6 T2216f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_capacity */
extern T6 T2216f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_put */
extern void T2216f39(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_NFA].force */
extern void T2189s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_NFA].fill_with */
extern void T2191f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_NFA].extend */
extern void T2191f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].search_position */
extern void T2216f36(TC* ac, T0* C, T6 a1);
/* KL_EQUALITY_TESTER [INTEGER_32].test */
extern T1 T1285f1(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].unset_found_item */
extern void T2216f38(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item */
extern T0* T2216f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_item */
extern T0* T2216f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].has */
extern T1 T2216f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make */
extern T0* T2216c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_with_equality_testers */
extern void T2216f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_sparse_container */
extern void T2216f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].set_internal_cursor */
extern void T2216f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_cursor */
extern T0* T2216f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32].make */
extern T0* T2281c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_slots */
extern void T2216f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_clashes */
extern void T2216f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_key_storage */
extern void T2216f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_item_storage */
extern void T2216f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].make */
extern T0* T2189s1(TC* ac, T6 a1);
/* SPECIAL [LX_NFA].make_empty */
extern T0* T2191c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].default_create */
extern T0* T2189c3(TC* ac);
/* KL_EQUALITY_TESTER [INTEGER_32].default_create */
extern T0* T1285c2(TC* ac);
/* DS_ARRAYED_LIST [LX_DFA_STATE].make */
extern T0* T2208c8(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].set_internal_cursor */
extern void T2208f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].new_cursor */
extern T0* T2208f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE].make */
extern T0* T2276c3(TC* ac, T0* a1);
/* LX_EQUIVALENCE_CLASSES.to_array */
extern T0* T2194f6(TC* ac, T0* C, T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.lower */
extern T6 T2194f5(TC* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.upper */
extern T6 T2194f4(TC* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.built */
extern T1 T2194f3(TC* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.new_lower */
extern T6 T2194f7(TC* ac, T0* C);
/* LX_FULL_DFA.build_eof_rules */
extern void T2136f43(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable LX_RULE].put */
extern void T2211f5(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [detachable LX_RULE].make_filled */
extern T0* T2211c4(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable LX_RULE].make_filled_area */
extern void T2211f6(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable LX_RULE].make_filled */
extern T0* T2212c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable LX_RULE].fill_with */
extern void T2212f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable LX_RULE].extend */
extern void T2212f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable LX_RULE].make_empty */
extern void T2212f6(TC* ac, T0* C, T6 a1);
/* LX_FULL_DFA.build_rules */
extern void T2136f42(TC* ac, T0* C, T0* a1);
/* ARRAY [LX_RULE].put */
extern void T2204f5(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [LX_RULE].make_filled */
extern T0* T2204c4(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [LX_RULE].make_filled_area */
extern void T2204f6(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_RULE].make_filled */
extern T0* T2205c5(TC* ac, T0* a1, T6 a2);
/* KL_ARRAY_ROUTINES [LX_RULE].make_empty_with_lower */
extern T0* T2210s1(TC* ac, T6 a1);
/* ARRAY [LX_RULE].make_from_array */
extern T0* T2204c8(TC* ac, T0* a1);
/* ARRAY [LX_RULE].set_area */
extern void T2204f10(TC* ac, T0* C, T0* a1);
/* KL_ARRAY [LX_RULE].new_rebase */
extern void T2277f5(TC* ac, T0* C, T6 a1);
/* KL_ARRAY [LX_RULE].make_empty */
extern T0* T2277c4(TC* ac);
/* KL_ARRAY [LX_RULE].make_empty_area */
extern void T2277f6(TC* ac, T0* C, T6 a1);
/* ARRAY [LX_RULE].make_empty */
extern T0* T2204c7(TC* ac);
/* ARRAY [LX_RULE].make_empty_area */
extern void T2204f9(TC* ac, T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [LX_RULE].default_create */
extern T0* T2210c2(TC* ac);
/* LX_START_CONDITIONS.names */
extern T0* T2176f7(TC* ac, T0* C);
/* LX_START_CONDITIONS.first */
extern T0* T2176f6(TC* ac, T0* C);
/* KL_ARRAY_ROUTINES [STRING_8].make_empty_with_lower */
extern T0* T2241s1(TC* ac, T6 a1);
/* ARRAY [STRING_8].make_from_array */
extern T0* T34c11(TC* ac, T0* a1);
/* ARRAY [STRING_8].set_area */
extern void T34f13(TC* ac, T0* C, T0* a1);
/* KL_ARRAY [STRING_8].new_rebase */
extern void T2301f5(TC* ac, T0* C, T6 a1);
/* KL_ARRAY [STRING_8].make_empty */
extern T0* T2301c4(TC* ac);
/* KL_ARRAY [STRING_8].make_empty_area */
extern void T2301f6(TC* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].make_empty */
extern T0* T34c10(TC* ac);
/* ARRAY [STRING_8].make_empty_area */
extern void T34f12(TC* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.string_array_routines */
extern T0* T2176s11(TC* ac);
/* KL_ARRAY_ROUTINES [STRING_8].default_create */
extern T0* T2241c2(TC* ac);
/* LX_WILDCARD_PARSER.parse_string */
extern void T2134f247(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.parse */
extern void T2134f251(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_pop_last_value */
extern void T2134f264(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_push_error_value */
extern void T2134f263(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_do_action */
extern void T2134f262(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.twin */
extern T0* T2179f21(TC* ac, T0* C);
/* LX_SYMBOL_CLASS.copy */
extern void T2179f30(TC* ac, T0* C, T0* a1);
/* SPECIAL [NATURAL_64].twin */
extern T0* T1342f7(TC* ac, T0* C);
/* LX_SYMBOL_CLASS.chunk_of_ones */
extern T0* T2179f20(TC* ac, T0* C);
/* SPECIAL [detachable SPECIAL [NATURAL_64]].make_filled */
extern T0* T2250c5(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable SPECIAL [NATURAL_64]].fill_with */
extern void T2250f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable SPECIAL [NATURAL_64]].extend */
extern void T2250f9(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable SPECIAL [NATURAL_64]].make_empty */
extern void T2250f8(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.remove_symbol_class */
extern void T2179f29(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.add_symbol_class */
extern void T2179f28(TC* ac, T0* C, T0* a1);
/* SPECIAL [NATURAL_64].filled_with */
extern T1 T1342f6(TC* ac, T0* C, T11 a1, T6 a2, T6 a3);
/* LX_SYMBOL_CLASS.attached_other_sets */
extern T0* T2179f19(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.append_character_set_to_character_class */
extern T0* T2134f188(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* LX_SYMBOL_CLASS.add_symbol */
extern void T2179f26(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.attached_chunk */
extern T0* T2179f18(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_negative_range_in_character_class_error */
extern void T2134f304(TC* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.make */
extern T0* T2237c8(TC* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.filename */
extern T0* T2134f209(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T2187s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T2188f4(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_character_to_character_class */
extern T0* T2134f187(TC* ac, T0* C, T6 a1, T0* a2);
/* LX_WILDCARD_PARSER.new_character_class */
extern T0* T2134f186(TC* ac, T0* C);
/* LX_SYMBOL_CLASS.make */
extern T0* T2179c25(TC* ac, T6 a1, T6 a2);
/* LX_SYMBOL_CLASS.set_negated */
extern void T2179f27(TC* ac, T0* C, T1 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].force */
extern void T2182f37(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].key_storage_put */
extern void T2182f47(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [STRING_32].force */
extern void T2185s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [STRING_32].fill_with */
extern void T2186f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [STRING_32].extend */
extern void T2186f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].slots_put */
extern void T2182f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].clashes_put */
extern void T2182f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].slots_item */
extern T6 T2182f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].clashes_item */
extern T6 T2182f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].hash_position */
extern T6 T2182f22(TC* ac, T0* C, T0* a1);
/* STRING_32.hash_code */
extern T6 T18f21(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].resize */
extern void T2182f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].clashes_resize */
extern void T2182f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].special_integer_ */
extern T0* T2182s32(TC* ac);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].key_storage_resize */
extern void T2182f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_32].aliased_resized_area */
extern T0* T2185s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [STRING_32].aliased_resized_area */
extern T0* T2186f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].item_storage_resize */
extern void T2182f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].key_storage_item */
extern T0* T2182f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].slots_resize */
extern void T2182f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].new_modulus */
extern T6 T2182f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].new_capacity */
extern T6 T2182f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].item_storage_put */
extern void T2182f43(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].search_position */
extern void T2182f42(TC* ac, T0* C, T0* a1);
/* KL_EQUALITY_TESTER [STRING_32].test */
extern T1 T2183f1(TC* ac, T0* C, T0* a1, T0* a2);
/* STRING_32.is_equal */
extern T1 T18f20(TC* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_32].same_items */
extern T1 T16f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].unset_found_item */
extern void T2182f41(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].force_new */
extern void T2181f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].item_storage_put */
extern void T2181f50(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [LX_SYMBOL_CLASS].slots_put */
extern void T2181f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [LX_SYMBOL_CLASS].clashes_put */
extern void T2181f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [LX_SYMBOL_CLASS].slots_item */
extern T6 T2181f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].hash_position */
extern T6 T2181f19(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.hash_code */
extern T6 T2179f22(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].clashes_item */
extern T6 T2181f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].resize */
extern void T2181f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].clashes_resize */
extern void T2181f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].special_integer_ */
extern T0* T2181s30(TC* ac);
/* DS_HASH_SET [LX_SYMBOL_CLASS].key_storage_resize */
extern void T2181f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].item_storage_resize */
extern void T2181f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].key_storage_item */
extern T0* T2181f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].item_storage_item */
extern T0* T2181f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].slots_resize */
extern void T2181f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].new_modulus */
extern T6 T2181f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].new_capacity */
extern T6 T2181f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].unset_found_item */
extern void T2181f44(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].found_item */
extern T0* T2181f24(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].found */
extern T1 T2181f26(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].search */
extern void T2181f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].search_position */
extern void T2181f46(TC* ac, T0* C, T0* a1);
/* KL_EQUALITY_TESTER [LX_SYMBOL_CLASS].test */
extern T1 T2246f1(TC* ac, T0* C, T0* a1, T0* a2);
/* LX_SYMBOL_CLASS.is_equal */
extern T1 T2179f24(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.same_symbol_class */
extern T1 T2179f23(TC* ac, T0* C, T0* a1);
/* SPECIAL [NATURAL_64].same_items */
extern T1 T1342f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* DS_HASH_SET [LX_SYMBOL_CLASS].key_equality_tester */
extern T0* T2181f27(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].force */
extern void T2187s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_SYMBOL_CLASS].fill_with */
extern void T2188f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_SYMBOL_CLASS].extend */
extern void T2188f10(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_nfa_from_character_class */
extern T0* T2134f184(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_symbol_class_nfa */
extern T0* T2134f238(TC* ac, T0* C, T0* a1);
/* LX_NFA.make_symbol_class */
extern T0* T2190c12(TC* ac, T0* a1, T1 a2);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].make */
extern T0* T2258c4(TC* ac, T0* a1, T0* a2);
/* DS_HASH_SET [LX_SYMBOL_CLASS].force */
extern void T2181f39(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_nfa_from_utf8_character_class */
extern T0* T2134f240(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_nfa_from_unions_of_concatenations_of_symbol_classes */
extern T0* T2134f244(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].item */
extern T0* T2236f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].first */
extern T0* T2236f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].item */
extern T0* T2235f10(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].force_new */
extern void T2178f36(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].key_storage_put */
extern void T2178f44(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].item_storage_put */
extern void T2178f43(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].force */
extern void T2248s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].fill_with */
extern void T2245f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].extend */
extern void T2245f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].slots_put */
extern void T2178f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].clashes_put */
extern void T2178f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].slots_item */
extern T6 T2178f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].hash_position */
extern T6 T2178f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].clashes_item */
extern T6 T2178f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].resize */
extern void T2178f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].clashes_resize */
extern void T2178f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].special_integer_ */
extern T0* T2178s31(TC* ac);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].key_storage_resize */
extern void T2178f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].item_storage_resize */
extern void T2178f47(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].aliased_resized_area */
extern T0* T2248s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].aliased_resized_area */
extern T0* T2245f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].key_storage_item */
extern T0* T2178f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].slots_resize */
extern void T2178f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].new_modulus */
extern T6 T2178f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].new_capacity */
extern T6 T2178f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].unset_found_item */
extern void T2178f39(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].is_empty */
extern T1 T2235f6(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.append_concatenations_of_symbol_classes_from_utf8_n_byte_character_class */
extern void T2134f313(TC* ac, T0* C, T0* a1, T6 a2, T0* a3, T0* a4);
/* DS_HASH_SET [INTEGER_32].new_iterator */
extern T0* T933f39(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].is_equal */
extern T1 T933f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].same_equality_tester */
extern T1 T933f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].any_ */
extern T0* T933s40(TC* ac);
/* ARRAY [detachable DS_HASH_SET [INTEGER_32]].put */
extern void T2233f6(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [detachable DS_HASH_SET [INTEGER_32]].item */
extern T0* T2233f4(TC* ac, T0* C, T6 a1);
/* ARRAY [detachable DS_HASH_SET [INTEGER_32]].make_filled */
extern T0* T2233c5(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable DS_HASH_SET [INTEGER_32]].make_filled_area */
extern void T2233f7(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable DS_HASH_SET [INTEGER_32]].make_filled */
extern T0* T2234c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable DS_HASH_SET [INTEGER_32]].fill_with */
extern void T2234f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_HASH_SET [INTEGER_32]].extend */
extern void T2234f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable DS_HASH_SET [INTEGER_32]].make_empty */
extern void T2234f6(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_concatenations_of_symbol_classes_from_utf8_2_byte_character_class */
extern void T2134f312(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ARRAY [detachable LX_SYMBOL_CLASS].put */
extern void T2231f6(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [detachable LX_SYMBOL_CLASS].item */
extern T0* T2231f4(TC* ac, T0* C, T6 a1);
/* ARRAY [detachable LX_SYMBOL_CLASS].make_filled */
extern T0* T2231c5(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable LX_SYMBOL_CLASS].make_filled_area */
extern void T2231f7(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable LX_SYMBOL_CLASS].make_filled */
extern T0* T2232c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable LX_SYMBOL_CLASS].fill_with */
extern void T2232f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable LX_SYMBOL_CLASS].extend */
extern void T2232f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable LX_SYMBOL_CLASS].make_empty */
extern void T2232f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].force_last */
extern void T2235f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].force */
extern void T2298s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].fill_with */
extern void T2297f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].extend */
extern void T2297f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].resize */
extern void T2235f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].aliased_resized_area */
extern T0* T2298s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].aliased_resized_area */
extern T0* T2297f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].new_capacity */
extern T6 T2235f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].extendible */
extern T1 T2235f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].put_last */
extern void T2236f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].make */
extern T0* T2236c9(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].set_internal_cursor */
extern void T2236f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].new_cursor */
extern T0* T2236f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_SYMBOL_CLASS].make */
extern T0* T2300c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].make */
extern T0* T2187s1(TC* ac, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].make_empty */
extern T0* T2188c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].default_create */
extern T0* T2187c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].make */
extern T0* T2235c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].set_internal_cursor */
extern void T2235f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].new_cursor */
extern T0* T2235f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].make */
extern T0* T2299c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].make */
extern T0* T2298s1(TC* ac, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].make_empty */
extern T0* T2297c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].default_create */
extern T0* T2298c3(TC* ac);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].found_item */
extern T0* T2178f33(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].item_storage_item */
extern T0* T2178f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].found */
extern T1 T2178f21(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].search */
extern void T2178f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].search_position */
extern void T2178f38(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.question_character_class */
extern T0* T2134f183(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].force_new */
extern void T2182f39(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].found_item */
extern T0* T2182f28(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].item_storage_item */
extern T0* T2182f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].found */
extern T1 T2182f34(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].search */
extern void T2182f38(TC* ac, T0* C, T0* a1);
/* LX_NFA.build_optional */
extern void T2190f11(TC* ac, T0* C);
/* LX_NFA_STATE.set_epsilon_transition */
extern void T2217f12(TC* ac, T0* C, T0* a1);
/* LX_NFA.final_state */
extern T0* T2190f5(TC* ac, T0* C);
/* LX_NFA.build_positive_closure */
extern void T2190f10(TC* ac, T0* C);
/* LX_NFA.build_closure */
extern void T2190f9(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.new_nfa_from_character */
extern T0* T2134f182(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.new_symbol_nfa */
extern T0* T2134f239(TC* ac, T0* C, T6 a1);
/* LX_NFA.make_symbol */
extern T0* T2190c13(TC* ac, T6 a1, T1 a2);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].make */
extern T0* T2259c4(TC* ac, T6 a1, T0* a2);
/* STRING_32.append_integer */
extern void T18f41(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_character_to_string */
extern T0* T2134f181(TC* ac, T0* C, T6 a1, T0* a2);
/* STRING_8.item_code */
extern T6 T17f48(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.new_epsilon_nfa */
extern T0* T2134f179(TC* ac, T0* C);
/* DS_ARRAYED_STACK [BOOLEAN].item */
extern T1 T2184f5(TC* ac, T0* C);
/* LX_NFA.build_concatenation */
extern void T2190f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].append_last */
extern void T2207f24(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].extend_last */
extern void T2207f29(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].forth */
extern void T2272f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_forth */
extern void T2207f33(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].add_traversing_cursor */
extern void T2207f34(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_next_cursor */
extern void T2272f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].remove_traversing_cursor */
extern void T2207f35(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].item */
extern T0* T2272f4(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_item */
extern T0* T2207f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].after */
extern T1 T2272f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].start */
extern void T2272f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_start */
extern void T2207f32(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_after */
extern void T2272f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].off */
extern T1 T2272f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].before */
extern T1 T2272f8(TC* ac, T0* C);
/* LX_NFA.build_union */
extern void T2190f7(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.report_unrecognized_rule_error */
extern void T2134f279(TC* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.make */
extern T0* T2195c8(TC* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_rule */
extern void T2134f278(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.add_nfa_to_all */
extern void T2176f13(TC* ac, T0* C, T0* a1, T1 a2);
/* LX_START_CONDITION.add_nfa */
extern void T2213f7(TC* ac, T0* C, T0* a1, T1 a2);
/* LX_START_CONDITION.put_nfa */
extern void T2213f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].force_last */
extern void T2215f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].resize */
extern void T2215f13(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].new_capacity */
extern T6 T2215f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].extendible */
extern T1 T2215f8(TC* ac, T0* C, T6 a1);
/* LX_START_CONDITION.put_bol_nfa */
extern void T2213f8(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.add_nfa_to_non_exclusive */
extern void T2176f15(TC* ac, T0* C, T0* a1, T1 a2);
/* LX_START_CONDITIONS.is_empty */
extern T1 T2176f8(TC* ac, T0* C);
/* LX_DESCRIPTION.set_bol_needed */
extern void T2135f40(TC* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_variable_trail_context */
extern void T2135f39(TC* ac, T0* C, T1 a1);
/* LX_RULE.set_column_count */
extern void T2192f21(TC* ac, T0* C, T6 a1);
/* LX_RULE.set_line_count */
extern void T2192f20(TC* ac, T0* C, T6 a1);
/* LX_RULE.set_trail_count */
extern void T2192f19(TC* ac, T0* C, T6 a1);
/* LX_RULE.set_head_count */
extern void T2192f18(TC* ac, T0* C, T6 a1);
/* LX_RULE.set_trail_context */
extern void T2192f17(TC* ac, T0* C, T1 a1);
/* LX_RULE.set_line_nb */
extern void T2192f16(TC* ac, T0* C, T6 a1);
/* LX_RULE.set_pattern */
extern void T2192f15(TC* ac, T0* C, T0* a1);
/* LX_NFA.set_accepted_rule */
extern void T2190f14(TC* ac, T0* C, T0* a1);
/* LX_NFA_STATE.set_accepted_rule */
extern void T2217f13(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.check_options */
extern void T2134f277(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.report_full_and_variable_trailing_context_error */
extern void T2134f296(TC* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.make */
extern T0* T2202c8(TC* ac);
/* LX_WILDCARD_PARSER.report_full_and_reject_error */
extern void T2134f295(TC* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.make */
extern T0* T2201c8(TC* ac);
/* LX_WILDCARD_PARSER.report_full_and_meta_equiv_classes_error */
extern void T2134f294(TC* ac, T0* C);
/* LX_FULL_AND_META_ERROR.make */
extern T0* T2200c8(TC* ac);
/* LX_WILDCARD_PARSER.build_equiv_classes */
extern void T2134f276(TC* ac, T0* C);
/* LX_DESCRIPTION.set_equiv_classes */
extern void T2135f38(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.convert_to_equivalence */
extern void T2179f33(TC* ac, T0* C, T0* a1);
/* LX_EQUIVALENCE_CLASSES.equivalence_class */
extern T6 T2194f9(TC* ac, T0* C, T6 a1);
/* LX_EQUIVALENCE_CLASSES.is_representative */
extern T1 T2194f8(TC* ac, T0* C, T6 a1);
/* LX_EQUIVALENCE_CLASSES.build */
extern void T2194f12(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].forth */
extern void T2193f11(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].cursor_forth */
extern void T2181f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].add_traversing_cursor */
extern void T2181f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].set_next_cursor */
extern void T2193f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].set_position */
extern void T2193f13(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].remove_traversing_cursor */
extern void T2181f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].set_after */
extern void T2193f12(TC* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.add */
extern void T2194f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].item */
extern T0* T2193f5(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].cursor_item */
extern T0* T2181f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].after */
extern T1 T2193f7(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].start */
extern void T2193f10(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].cursor_start */
extern void T2181f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].cursor_off */
extern T1 T2181f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].off */
extern T1 T2193f8(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].is_empty */
extern T1 T2181f33(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].new_cursor */
extern T0* T2181f25(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].make */
extern T0* T2193c9(TC* ac, T0* a1);
/* LX_EQUIVALENCE_CLASSES.make */
extern T0* T2194c10(TC* ac, T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.initialize */
extern void T2194f13(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.set_maximum_symbol_equivalence_class */
extern void T2134f275(TC* ac, T0* C);
/* LX_SYMBOL_CLASS.set_maximum_symbol_equivalence_class */
extern void T2179f32(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable SPECIAL [NATURAL_64]].upper */
extern T6 T2250f4(TC* ac, T0* C);
/* LX_DESCRIPTION.set_maximum_symbol */
extern void T2135f37(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_push_last_value */
extern void T2134f261(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.accept */
extern void T2134f260(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_do_error_action */
extern void T2134f258(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_error */
extern void T2134f274(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.report_eof_expected_error */
extern void T2134f273(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.read_token */
extern void T2134f257(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_execute_action */
extern void T2134f272(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.character_text */
extern T0* T2134f208(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.unicode_text_item */
extern T3 T2134f221(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.text */
extern T0* T2134f241(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.substring */
extern T0* T265f14(TC* ac, T0* C, T6 a1, T6 a2);
/* LX_WILDCARD_PARSER.text_count */
extern T6 T2134f227(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.report_bad_character_error */
extern void T2134f293(TC* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.make */
extern T0* T2199c8(TC* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.report_bad_character_class_error */
extern void T2134f292(TC* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.make */
extern T0* T2198c8(TC* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_unicode_character */
extern void T2134f291(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.process_character */
extern void T2134f299(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_invalid_character_error */
extern void T2134f282(TC* ac, T0* C, T0* a1);
/* LX_INVALID_UNICODE_CHARACTER_ERROR.make */
extern T0* T2196c8(TC* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.report_character_out_of_range_error */
extern void T2134f301(TC* ac, T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.make */
extern T0* T2203c8(TC* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.process_hexadecimal_character */
extern void T2134f290(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.process_octal_character */
extern void T2134f289(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.process_escaped_character */
extern void T2134f288(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.report_missing_quote_error */
extern void T2134f287(TC* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.make */
extern T0* T2197c8(TC* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_single_character */
extern void T2134f286(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.text_item */
extern T2 T2134f201(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.less */
extern void T2134f285(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_set_line_column */
extern void T2134f298(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.character_class_with_name */
extern T0* T2134f195(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.unicode_text */
extern T0* T2134f194(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.unicode_substring */
extern T0* T265f13(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.unicode_substring */
extern T0* T1574f10(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.append_unicode_substring_to_string */
extern void T1574f19(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* STRING_32.append_substring_general */
extern void T18f42(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* LX_WILDCARD_PARSER.set_start_condition */
extern void T2134f284(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_execute_eof_action */
extern void T2134f271(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.terminate */
extern void T2134f283(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.wrap */
extern T1 T2134f165(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_refill_input_buffer */
extern void T2134f270(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_set_content */
extern void T2134f267(TC* ac, T0* C, T0* a1);
/* YY_UNICODE_BUFFER.fill */
extern void T1144f15(TC* ac, T0* C);
/* YY_UNICODE_BUFFER.set_index */
extern void T1144f13(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_null_trans_state */
extern T6 T2134f164(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_previous_state */
extern T6 T2134f163(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.fatal_error */
extern void T2134f269(TC* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_character */
extern void T39f9(TC* ac, T0* C, T2 a1);
/* KL_STDERR_FILE.console */
extern T0* T39s1(TC* ac);
/* STD_FILES.error */
extern T0* T1019s2(TC* ac);
/* CONSOLE.make_open_stderr */
extern T0* T1644c21(TC* ac, T0* a1);
/* KL_STDERR_FILE.io */
extern T0* T39s3(TC* ac);
/* LX_WILDCARD_PARSER.std */
extern T0* T2134s189(TC* ac);
/* LX_WILDCARD_PARSER.report_invalid_unicode_character_error */
extern void T2134f268(TC* ac, T0* C, T10 a1);
/* LX_WILDCARD_PARSER.yy_at_beginning_of_line */
extern T6 T2134f132(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.special_integer_ */
extern T0* T2134s129(TC* ac);
/* LX_WILDCARD_PARSER.yy_init_value_stacks */
extern void T2134f256(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_clear_all */
extern void T2134f265(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.clear_all */
extern void T2134f280(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.clear_stacks */
extern void T2134f297(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_clear_value_stacks */
extern void T2134f300(TC* ac, T0* C);
/* SPECIAL [LX_NFA].keep_head */
extern void T2191f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_NFA].set_count */
extern void T2191f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].keep_head */
extern void T2188f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].set_count */
extern void T2188f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_32].keep_head */
extern void T2186f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_32].set_count */
extern void T2186f9(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.abort */
extern void T2134f259(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.set_input_buffer */
extern void T2134f250(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_load_input_buffer */
extern void T2134f255(TC* ac, T0* C);
/* YY_UNICODE_BUFFER.set_position */
extern void T1144f14(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* LX_WILDCARD_PARSER.new_unicode_string_buffer */
extern T0* T2134f147(TC* ac, T0* C, T0* a1);
/* YY_UNICODE_BUFFER.make */
extern T0* T1144c12(TC* ac, T0* a1);
/* YY_UNICODE_BUFFER.make_from_buffer */
extern void T1144f16(TC* ac, T0* C, T0* a1);
/* KL_UNICODE_CHARACTER_BUFFER.fill_from_string */
extern void T265f22(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_UNICODE_CHARACTER_BUFFER.fill_from_substring */
extern void T265f23(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* YY_UNICODE_BUFFER.new_default_buffer */
extern T0* T1144f11(TC* ac, T0* C, T6 a1);
/* KL_UNICODE_CHARACTER_BUFFER.make */
extern T0* T265c15(TC* ac, T6 a1);
/* STRING_32.make_filled */
extern T0* T18c37(TC* ac, T3 a1, T6 a2);
/* STRING_32.fill_character */
extern void T18f40(TC* ac, T0* C, T3 a1);
/* LX_WILDCARD_PARSER.make_from_description */
extern T0* T2134c246(TC* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make */
extern T0* T2178c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_with_equality_testers */
extern void T2178f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_sparse_container */
extern void T2178f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].set_internal_cursor */
extern void T2178f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].new_cursor */
extern T0* T2178f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make */
extern T0* T2249c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_slots */
extern void T2178f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_clashes */
extern void T2178f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_key_storage */
extern void T2178f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_item_storage */
extern void T2178f50(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].make */
extern T0* T2248s2(TC* ac, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].make_empty */
extern T0* T2245c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].default_create */
extern T0* T2248c3(TC* ac);
/* KL_EQUALITY_TESTER [LX_SYMBOL_CLASS].default_create */
extern T0* T2246c2(TC* ac);
/* LX_ACTION_FACTORY.make */
extern T0* T2177c1(TC* ac);
/* LX_START_CONDITIONS.make */
extern void T2176f12(TC* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.make */
extern T0* T2176c12(TC* ac, T6 a1);
/* LX_START_CONDITIONS.set_internal_cursor */
extern void T2176f16(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.new_cursor */
extern T0* T2176f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION].make */
extern T0* T2244c4(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].make */
extern T0* T2243s1(TC* ac, T6 a1);
/* SPECIAL [LX_START_CONDITION].make_empty */
extern T0* T2242c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].default_create */
extern T0* T2243c2(TC* ac);
/* LX_WILDCARD_PARSER.make_parser_skeleton */
extern void T2134f249(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_build_parser_tables */
extern void T2134f254(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yycheck_template */
extern T0* T2134f178(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yyfixed_array */
extern T0* T2134f232(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yytable_template */
extern T0* T2134f177(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yypgoto_template */
extern T0* T2134f176(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yypact_template */
extern T0* T2134f174(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yydefgoto_template */
extern T0* T2134f173(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yydefact_template */
extern T0* T2134f172(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yytypes2_template */
extern T0* T2134f171(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yytypes1_template */
extern T0* T2134f169(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yyr1_template */
extern T0* T2134f160(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template */
extern T0* T2134f159(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template_2 */
extern void T2134f303(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yyarray_subcopy */
extern void T2134f314(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* LX_WILDCARD_PARSER.integer_array_ */
extern T0* T2134s245(TC* ac);
/* LX_WILDCARD_PARSER.yytranslate_template_1 */
extern void T2134f302(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_create_value_stacks */
extern void T2134f253(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [STRING_32].make */
extern T0* T2185s1(TC* ac, T6 a1);
/* SPECIAL [STRING_32].make_empty */
extern T0* T2186c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_32].default_create */
extern T0* T2185c3(TC* ac);
/* LX_WILDCARD_PARSER.make_lex_scanner_from_description */
extern void T2134f248(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_STACK [BOOLEAN].force */
extern void T2184f9(TC* ac, T0* C, T1 a1);
/* DS_ARRAYED_STACK [BOOLEAN].resize */
extern void T2184f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [BOOLEAN].new_capacity */
extern T6 T2184f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [BOOLEAN].extendible */
extern T1 T2184f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [BOOLEAN].make */
extern T0* T2184c8(TC* ac, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make */
extern void T2181f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make */
extern T0* T2181c36(TC* ac, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].set_internal_cursor */
extern void T2181f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make_slots */
extern void T2181f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make_clashes */
extern void T2181f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make_key_storage */
extern void T2181f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make_item_storage */
extern void T2181f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].set_key_equality_tester */
extern void T2182f36(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.string_32_equality_tester */
extern T0* T2134s143(TC* ac);
/* KL_EQUALITY_TESTER [STRING_32].default_create */
extern T0* T2183c2(TC* ac);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_map */
extern T0* T2182c35(TC* ac, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_with_equality_testers */
extern void T2182f40(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_sparse_container */
extern void T2182f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].set_internal_cursor */
extern void T2182f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].new_cursor */
extern T0* T2182f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_32].make */
extern T0* T2254c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_slots */
extern void T2182f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_clashes */
extern void T2182f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_key_storage */
extern void T2182f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_item_storage */
extern void T2182f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make_equal */
extern T0* T2181c35(TC* ac, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].set_key_equality_tester */
extern void T2180f21(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.string_equality_tester */
extern T0* T2134s126(TC* ac);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_map */
extern T0* T2180c20(TC* ac, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_with_equality_testers */
extern void T2180f22(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_sparse_container */
extern void T2180f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].set_internal_cursor */
extern void T2180f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].new_cursor */
extern T0* T2180f17(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_32, STRING_8].make */
extern T0* T2252c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].unset_found_item */
extern void T2180f28(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_slots */
extern void T2180f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].new_modulus */
extern T6 T2180f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_clashes */
extern void T2180f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_key_storage */
extern void T2180f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_item_storage */
extern void T2180f24(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.make_with_buffer */
extern void T2134f252(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_initialize */
extern void T2134f266(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_initialize */
extern void T2134f266p1(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_build_tables */
extern void T2134f281(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_accept_template */
extern T0* T2134f218(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_fixed_array */
extern T0* T2134f242(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_meta_template */
extern T0* T2134f217(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_ec_template */
extern T0* T2134f216(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_ec_template_1 */
extern void T2134f311(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_array_subcopy */
extern void T2134f315(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* LX_WILDCARD_PARSER.yy_def_template */
extern T0* T2134f215(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_base_template */
extern T0* T2134f214(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_chk_template */
extern T0* T2134f213(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_chk_template_3 */
extern void T2134f310(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_chk_template_2 */
extern void T2134f309(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_chk_template_1 */
extern void T2134f308(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_nxt_template */
extern T0* T2134f212(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_nxt_template_3 */
extern void T2134f307(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_nxt_template_2 */
extern void T2134f306(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_nxt_template_1 */
extern void T2134f305(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.empty_buffer */
extern T0* T2134f139(TC* ac, T0* C);
/* LX_DESCRIPTION.set_case_insensitive */
extern void T2135f36(TC* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_full_table */
extern void T2135f35(TC* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_meta_equiv_classes_used */
extern void T2135f34(TC* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_equiv_classes_used */
extern void T2135f33(TC* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.make */
extern T0* T2135c32(TC* ac);
/* LX_START_CONDITIONS.make_with_initial */
extern T0* T2176c14(TC* ac, T6 a1);
/* LX_START_CONDITIONS.put_first */
extern void T2176f17(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.put */
extern void T2176f18(TC* ac, T0* C, T0* a1, T6 a2);
/* LX_START_CONDITIONS.move_cursors_right */
extern void T2176f21(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION].set_position */
extern void T2244f5(TC* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.move_right */
extern void T2176f20(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].force */
extern void T2243s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_START_CONDITION].fill_with */
extern void T2242f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_START_CONDITION].extend */
extern void T2242f7(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.put_last */
extern void T2176f19(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITION.make */
extern T0* T2213c6(TC* ac, T0* a1, T6 a2, T1 a3);
/* DS_ARRAYED_LIST [LX_NFA].make */
extern T0* T2215c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].set_internal_cursor */
extern void T2215f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].new_cursor */
extern T0* T2215f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA].make */
extern T0* T2279c3(TC* ac, T0* a1);
/* UT_ERROR_HANDLER.make_null */
extern T0* T160c12(TC* ac);
/* UT_ERROR_HANDLER.null_output_stream */
extern T0* T160s6(TC* ac);
/* LX_DFA_WILDCARD.wipe_out */
extern void T1942f20(TC* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.file_system */
extern T0* T1559s9(TC* ac);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.unix_file_system */
extern T0* T1559s12(TC* ac);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.windows_file_system */
extern T0* T1559s11(TC* ac);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.execution_environment */
extern T0* T1559s8(TC* ac);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.operating_system */
extern T0* T1559s6(TC* ac);
/* ET_EIFFEL_PREPARSER.current_system */
extern T0* T231f62(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].make_from_linear */
extern T0* T169c40(TC* ac, T0* a1);
/* ST_SPLITTER.make */
extern T0* T109c11(TC* ac);
/* ET_EIFFEL_PREPARSER.build_provider_constraint */
extern void T231f187(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PREPARSER.build_provider_constraint */
extern T0* T231f187ac1(TC* ac, T0* a1, T0* a2);
extern T1 T231f187ot1(TC* ac, T0* a1);
/* ET_ECF_CLUSTER.set_provider_constraint */
extern void T89f94(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_provider_constraint */
extern void T829f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.universes_do_all */
extern void T802f179(TC* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_all */
extern void T174f10(TC* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.universes_do_all */
extern void T173f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.universes_do_all */
extern void T87f256(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.add_universe_full_name */
extern void T231f193(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.full_name */
extern T0* T824f95(TC* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.relative_name */
extern T0* T824f100(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_DOTNET_ASSEMBLY.full_name */
extern T0* T207f94(TC* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.relative_name */
extern T0* T207f97(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.full_name */
extern T0* T203f95(TC* ac, T0* C, T2 a1);
/* ET_LIBRARY.relative_name */
extern T0* T203f96(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.full_name */
extern T0* T50f131(TC* ac, T0* C, T2 a1);
/* ET_ECF_SYSTEM.full_name */
extern T0* T87f148(TC* ac, T0* C, T2 a1);
/* ET_NULL_ERROR_HANDLER.report_gcaaa_error */
extern void T63f581(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaaa */
extern T0* T2006c26(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T63f177(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaaa_error */
extern void T42f581(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T42f177(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.add_recursive_cluster */
extern void T89f93(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.add_subcluster */
extern void T89f96(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_parent */
extern void T89f98(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.put_last */
extern void T829f6(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].force_last */
extern void T1635f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].force */
extern void T1956s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_CLUSTER].fill_with */
extern void T1955f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_CLUSTER].extend */
extern void T1955f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].resize */
extern void T1635f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T1956s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T1955f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].new_capacity */
extern T6 T1635f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].extendible */
extern T1 T1635f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.set_subclusters */
extern void T89f97(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_parent */
extern void T829f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.make_empty */
extern T0* T829c9(TC* ac);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].make */
extern T0* T1635c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].set_internal_cursor */
extern void T1635f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].new_cursor */
extern T0* T1635f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].make */
extern T0* T1957c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].make */
extern T0* T1956s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].make_empty */
extern T0* T1955c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].default_create */
extern T0* T1956c3(TC* ac);
/* ET_ECF_CLUSTER.new_recursive_cluster */
extern T0* T89f63(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_overridden_group */
extern void T89f88(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_provider_groups */
extern void T89f84(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_visible_classes */
extern void T89f83(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_class_options */
extern void T89f80(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_options */
extern void T89f79(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_class_mappings */
extern void T89f82(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_class_renamings */
extern void T89f81(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_classname_prefix */
extern void T89f74(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_use_obsolete_syntax */
extern void T89f71(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_hidden */
extern void T89f73(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_read_only */
extern void T89f75(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_override */
extern void T89f87(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_implicit */
extern void T89f103(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_recursive */
extern void T89f76(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_file_rules */
extern void T89f102(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.make_relative */
extern T0* T89c101(TC* ac, T0* a1, T0* a2, T0* a3);
/* UT_VERSION.is_less_equal */
extern T1 T56f16(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.ecf_1_4_0 */
extern T0* T89s57(TC* ac);
/* ET_ECF_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T89f70(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T829f10(TC* ac, T0* C, T1 a1);
/* KL_UNIX_FILE_SYSTEM.directory_exists */
extern T1 T152s13(TC* ac, T0* a1);
/* KL_UNIX_FILE_SYSTEM.tmp_directory */
extern T0* T152s26(TC* ac);
/* KL_WINDOWS_FILE_SYSTEM.directory_exists */
extern T1 T151s13(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_directory */
extern T0* T151s28(TC* ac);
/* ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T89f55(TC* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.is_included */
extern T1 T1461f3(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_FILE_RULES.is_included */
extern T0* T1461f3ac1(TC* ac, T0* a1);
/* PREDICATE [TUPLE [ET_ECF_FILE_RULE]].set_rout_disp_final */
extern void T2163f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_FILE_RULE.is_included */
extern T1 T1482f9(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_FILE_RULE.is_included */
extern T0* T1482f9ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_FILE_RULE.is_included */
extern T0* T1482f9ac2(TC* ac, T0* a1);
/* PREDICATE [TUPLE [RX_PCRE_REGULAR_EXPRESSION]].set_rout_disp_final */
extern void T2225f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* RX_PCRE_REGULAR_EXPRESSION.matches */
extern T1 T107f306(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].there_exists */
extern T1 T1916f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].item */
extern T0* T1916f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].for_all */
extern T1 T1904f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].item */
extern T0* T1904f10(TC* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.implicit_relative_name */
extern T0* T89f50(TC* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T89f55p1(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_file */
extern void T231f186(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.reset */
extern void T231f192(TC* ac, T0* C);
/* YY_FILE_BUFFER.set_end_of_file */
extern void T1109f21(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T231f192p1(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T231f192p0(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T231f192p2(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.current_position */
extern T0* T231f61(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.read_token */
extern void T231f191(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_action */
extern void T231f198(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.more */
extern void T231f204(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.is_verbatim_string_closer */
extern T1 T231f116(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.report_syntax_error */
extern void T231f199(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.set_start_condition */
extern void T231f202(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.unicode_text_item */
extern T3 T231f113(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.utf8_text_substring */
extern T0* T231f111(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.append_utf8_text_substring_to_string */
extern void T231f205(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PREPARSER.set_syntax_error */
extern void T231f201(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.text_count */
extern T6 T231f109(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_reference_keyword */
extern T1 T231f108(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_note_keyword */
extern T1 T231f107(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_detachable_keyword */
extern T1 T231f106(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_attribute_keyword */
extern T1 T231f105(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.ast_factory */
extern T0* T231f104(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_attached_keyword */
extern T1 T231f100(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_line_column */
extern void T231f203(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_eof_action */
extern void T231f197(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.terminate */
extern void T231f200(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.wrap */
extern T1 T231f92(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_refill_input_buffer */
extern void T231f196(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_content */
extern void T231f142(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_null_trans_state */
extern T6 T231f91(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_previous_state */
extern T6 T231f90(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.fatal_error */
extern void T231f195(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.report_invalid_unicode_character_error */
extern void T231f194(TC* ac, T0* C, T10 a1);
/* ET_EIFFEL_PREPARSER.special_integer_ */
extern T0* T231s60(TC* ac);
/* ET_EIFFEL_PREPARSER.yy_at_beginning_of_line */
extern T6 T231f72(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_load_input_buffer */
extern void T231f140(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.tmp_file */
extern T0* T231f58(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.shared_file */
extern T0* T231f129(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.preparse_class */
extern void T231f190(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ECF_LIBRARY.classes_in_group */
extern T0* T802f109(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T802f109ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T802f109ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T802f109ac3(TC* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.initial_classes_in_group_capacity */
extern T6 T802f113(TC* ac, T0* C);
/* ET_ECF_SYSTEM.classes_in_group */
extern T0* T87f161(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T87f161ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T87f161ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T87f161ac3(TC* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.initial_classes_in_group_capacity */
extern T6 T87f163(TC* ac, T0* C);
/* ET_SYSTEM.classes_in_group */
extern T0* T50f133(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.classes_in_group */
extern T0* T50f133ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM.classes_in_group */
extern T0* T50f133ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_SYSTEM.classes_in_group */
extern T0* T50f133ac3(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM.initial_classes_in_group_capacity */
extern T6 T50f135(TC* ac, T0* C);
/* ET_MASTER_CLASS.local_classes_do_if */
extern void T188f84(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_non_override_classes_do_if */
extern void T188f87(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_override_classes_do_if */
extern void T188f86(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.current_universe */
extern T0* T231f57(TC* ac, T0* C);
/* DS_CELL [detachable ET_CLASS].put */
extern void T1822f3(TC* ac, T0* C, T0* a1);
/* DS_CELL [detachable ET_CLASS].make */
extern T0* T1822c2(TC* ac, T0* a1);
/* ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T89f48(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T89f48p1(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.has_eiffel_extension */
extern T1 T89f51(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.reset */
extern void T954f41(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_directory */
extern T0* T231f56(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.shared_directory */
extern T0* T231f127(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.file_system */
extern T0* T231s55(TC* ac);
/* ET_EIFFEL_PREPARSER.unix_file_system */
extern T0* T231s126(TC* ac);
/* ET_EIFFEL_PREPARSER.windows_file_system */
extern T0* T231s125(TC* ac);
/* ET_EIFFEL_PREPARSER.operating_system */
extern T0* T231s124(TC* ac);
/* ET_EIFFEL_PREPARSER.execution_environment */
extern T0* T231s112(TC* ac);
/* ET_EIFFEL_PREPARSER.error_handler */
extern T0* T231f103(TC* ac, T0* C);
/* ET_ECF_CLUSTER.set_preparsed */
extern void T89f92(TC* ac, T0* C, T1 a1);
/* ET_CLUSTERS.do_all */
extern void T94f5(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_preparsing_status */
extern void T63f580(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.kind_lower_name */
extern T0* T802f119(TC* ac, T0* C);
/* ET_LIBRARY.kind_lower_name */
extern T0* T203f98(TC* ac, T0* C);
/* ET_ECF_CLUSTER.kind_lower_name */
extern T0* T89f66(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_preparsing_status */
extern void T42f580(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.preparse */
extern void T203f155(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.preparse */
extern void T203f155p1(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.preparse */
extern T0* T203f155p1ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.preparse */
extern T0* T203f155p1ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.preparse */
extern T0* T203f155p1ac3(TC* ac);
/* Creation of agent #4 in feature ET_LIBRARY.preparse */
extern T0* T203f155p1ac4(TC* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.preparse */
extern void T824f155(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.preparse */
extern void T207f155(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLIES.put_last */
extern void T1260f6(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].force_last */
extern void T1755f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].force */
extern void T1928s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DOTNET_ASSEMBLY].fill_with */
extern void T1929f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_ASSEMBLY].extend */
extern void T1929f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].resize */
extern void T1755f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1928s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1929f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1755f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].extendible */
extern T1 T1755f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_LIBRARY.dotnet_assemblies_do_if */
extern void T802f198(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_if */
extern void T174f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.dotnet_assemblies_do_if */
extern void T203f167(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.dotnet_assemblies_do_if */
extern void T87f288(TC* ac, T0* C, T0* a1, T0* a2);
/* PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T1513f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_DOTNET_ASSEMBLY.is_consumable */
extern T1 T824f96(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.is_consumable */
extern T1 T207f95(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].force_last */
extern void T1512f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_put */
extern void T1512f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_put */
extern void T1512f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_item */
extern T6 T1512f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].hash_position */
extern T6 T1512f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].resize */
extern void T1512f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_resize */
extern void T1512f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].special_integer_ */
extern T0* T1512s26(TC* ac);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_storage_resize */
extern void T1512f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_resize */
extern void T1512f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_storage_item */
extern T0* T1512f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_item */
extern T0* T1512f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_item */
extern T6 T1512f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_resize */
extern void T1512f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_modulus */
extern T6 T1512f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1512f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_put */
extern void T1512f40(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].search_position */
extern void T1512f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_equality_tester */
extern T0* T1512f24(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].unset_found_item */
extern void T1512f37(TC* ac, T0* C);
/* ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern void T87f238(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac1(TC* ac);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac3(TC* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac4(TC* ac);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac5(TC* ac);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac6(TC* ac);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac7(TC* ac);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac8(TC* ac);
/* Creation of agent #9 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac9(TC* ac);
/* Creation of agent #10 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac10(TC* ac);
/* Creation of agent #11 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac11(TC* ac);
/* Creation of agent #12 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac12(TC* ac);
/* Creation of agent #13 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac13(TC* ac);
/* Creation of agent #14 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac14(TC* ac);
/* Creation of agent #15 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac15(TC* ac);
/* Creation of agent #16 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac16(TC* ac);
/* Creation of agent #17 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac17(TC* ac);
/* Creation of agent #18 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac18(TC* ac);
/* Creation of agent #19 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac19(TC* ac);
/* Creation of agent #20 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac20(TC* ac);
/* Creation of agent #21 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac21(TC* ac);
/* Creation of agent #22 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac22(TC* ac);
/* Creation of agent #23 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac23(TC* ac, T0* a1);
/* Creation of agent #24 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac24(TC* ac);
/* Creation of agent #25 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac25(TC* ac, T0* a1);
/* Creation of agent #26 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac26(TC* ac);
/* Creation of agent #27 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac27(TC* ac, T0* a1);
/* Creation of agent #28 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac28(TC* ac);
/* Creation of agent #29 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac29(TC* ac, T0* a1);
/* Creation of agent #30 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac30(TC* ac);
/* Creation of agent #31 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac31(TC* ac, T1 a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.process_class */
extern void T1530f6(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.internal_process_class */
extern void T1530f8(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_providers_validity */
extern void T1530f10(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].go_after */
extern void T1167f15(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_go_after */
extern void T260f73(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_interface_error */
extern T1 T188f36(TC* ac, T0* C);
/* ET_MASTER_CLASS.interface_checked */
extern T1 T188f35(TC* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_suppliers_validity */
extern void T1530f9(TC* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.set_fatal_error */
extern void T1530f7(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.error_handler */
extern T0* T1530f4(TC* ac, T0* C);
/* ET_CLASS.unset_implementation_error */
extern void T70f333(TC* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.process_class */
extern void T1529f8(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.internal_process_class */
extern void T1529f10(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_parents_validity */
extern void T1529f13(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_type_validity */
extern void T1938f3(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_formal_parameters_validity */
extern void T1529f12(TC* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.check_qualified_anchored_signatures_validity */
extern void T1529f11(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_signatures_validity */
extern void T1937f6(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_feature_signatures_validity */
extern void T1937f7(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.set_fatal_error */
extern void T1529f9(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.error_handler */
extern T0* T1529f6(TC* ac, T0* C);
/* ET_CLASS.unset_interface_error */
extern void T70f332(TC* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.process_class */
extern void T1528f7(TC* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.internal_process_class */
extern void T1528f9(TC* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_signatures_validity */
extern void T1528f12(TC* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_feature_signatures_validity */
extern void T1528f13(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_type_validity */
extern void T1936f3(TC* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_parents_validity */
extern void T1528f11(TC* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_formal_parameters_validity */
extern void T1528f10(TC* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.set_fatal_error */
extern void T1528f8(TC* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.error_handler */
extern T0* T1528f5(TC* ac, T0* C);
/* ET_CLASS.unset_flattening_error */
extern void T70f331(TC* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.process_class */
extern void T1527f7(TC* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.internal_process_class */
extern void T1527f9(TC* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_parents_validity */
extern void T1527f11(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_type_validity */
extern void T1935f3(TC* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_formal_parameters_validity */
extern void T1527f10(TC* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.set_fatal_error */
extern void T1527f8(TC* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.error_handler */
extern T0* T1527f5(TC* ac, T0* C);
/* ET_CLASS.unset_ancestors_error */
extern void T70f330(TC* ac, T0* C);
/* ET_CLASS.not_implementation_checked */
extern T1 T70f187(TC* ac, T0* C);
/* ET_CLASS.reset_after_interface_checked */
extern void T70f328(TC* ac, T0* C);
/* ET_PROCEDURE_LIST.reset_after_interface_checked */
extern void T770f13(TC* ac, T0* C);
/* ET_QUERY_LIST.reset_after_interface_checked */
extern void T769f17(TC* ac, T0* C);
/* ET_CLASS.reset_after_features_flattened */
extern void T70f327(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_constraint_creation_procedures */
extern void T506f36(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_constraint_creation_procedures */
extern void T500f94(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_constraint_renames */
extern void T506f35(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_constraint_renames */
extern void T691f90(TC* ac, T0* C);
/* ET_CLASS_TYPE.reset_renames */
extern void T102f139(TC* ac, T0* C);
/* ET_TUPLE_TYPE.reset_renames */
extern void T183f133(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reset_renames */
extern void T848f92(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset_renames */
extern void T725f98(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset_renames */
extern void T724f101(TC* ac, T0* C);
/* ET_LIKE_FEATURE.reset_renames */
extern void T722f103(TC* ac, T0* C);
/* ET_LIKE_CURRENT.reset_renames */
extern void T199f96(TC* ac, T0* C);
/* ET_TYPE_CONSTRAINT_LIST.reset_renames */
extern void T641f16(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.reset_renames */
extern void T692f10(TC* ac, T0* C);
/* ET_CLASS.reset_renames */
extern void T70f335(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_constraint_renames */
extern void T500f93(TC* ac, T0* C);
/* ET_PROCEDURE_LIST.reset_after_features_flattened */
extern void T770f12(TC* ac, T0* C);
/* ET_QUERY_LIST.reset_after_features_flattened */
extern void T769f16(TC* ac, T0* C);
/* ET_CLASS.reset_after_ancestors_built */
extern void T70f326(TC* ac, T0* C);
/* ET_MASTER_CLASS.local_classes_do_unless_actual */
extern void T188f71(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_non_override_classes_do_unless_actual */
extern void T188f83(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_override_classes_do_unless_actual */
extern void T188f82(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.make */
extern T0* T1530c5(TC* ac, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.tokens */
extern T0* T1530s3(TC* ac);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern T0* T1529c7(TC* ac, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.make */
extern T0* T1938c2(TC* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.make */
extern T0* T1937c5(TC* ac, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.tokens */
extern T0* T1937s4(TC* ac);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern void T1529f7p1(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.tokens */
extern T0* T1529s5(TC* ac);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern T0* T1528c6(TC* ac, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.make */
extern T0* T1936c2(TC* ac);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern void T1528f6p1(TC* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.tokens */
extern T0* T1528s4(TC* ac);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern T0* T1527c6(TC* ac, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.make */
extern T0* T1935c2(TC* ac);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern void T1527f6p1(TC* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.tokens */
extern T0* T1527s4(TC* ac);
/* ET_ECF_SYSTEM.classes_do_if_recursive */
extern void T87f246(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_if_recursive */
extern T0* T87f246ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T824f158(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T824f158p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T207f158(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T207f158p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.classes_do_if */
extern void T203f159(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.classes_do_if */
extern void T802f186(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_if */
extern void T87f248(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.classes_do_if */
extern void T50f191(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_recursive */
extern void T87f245(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_recursive */
extern T0* T87f245ac1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.classes_modified_recursive */
extern T1 T87f151(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T87f151ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T87f151ac2(TC* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T87f151ac3(TC* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T87f151ac4(TC* ac, T0* a1);
/* PREDICATE [TUPLE].set_rout_disp_final */
extern void T1801f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* PREDICATE [TUPLE [ET_MASTER_CLASS]].set_rout_disp_final */
extern void T1800f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* KL_AGENT_ROUTINES [ANY].call */
extern void T1797s2(TC* ac, T0* a1, T0* a2);
/* UT_TRISTATE.set_true */
extern void T1796f4(TC* ac, T0* C);
/* UT_TRISTATE.is_true */
extern T1 T1796f2(TC* ac, T0* C);
/* ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern void T87f251(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T87f251ac1(TC* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T87f251ac2(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T824f165(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T207f165(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIBRARY.master_classes_do_if_until */
extern void T203f166(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.master_classes_do_if_until */
extern void T802f191(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.master_classes_do_if_until */
extern void T87f255(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SYSTEM.master_classes_do_if_until */
extern void T50f197(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T824f164(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].do_if */
extern void T177f61(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T207f164(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_if */
extern void T203f165(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.master_classes_do_if */
extern void T802f190(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_if */
extern void T87f254(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.master_classes_do_if */
extern void T50f196(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.any_actions */
extern T0* T87s146(TC* ac);
/* KL_AGENT_ROUTINES [ANY].default_create */
extern T0* T1797c1(TC* ac);
/* UT_TRISTATE.make_false */
extern T0* T1796c3(TC* ac);
/* UT_TRISTATE.set_false */
extern void T1796f5(TC* ac, T0* C);
/* ET_ECF_SYSTEM.import_classes */
extern void T87f237(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T87f237ac1(TC* ac);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T87f237ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T87f237ac3(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.preparse */
extern void T87f236(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.preparse */
extern T0* T87f236ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.preparse */
extern T0* T87f236ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.preparse */
extern T0* T87f236ac3(TC* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.preparse */
extern T0* T87f236ac4(TC* ac, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_recursive */
extern void T173f9(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_LIBRARIES.do_recursive */
extern T0* T173f9ac1(TC* ac, T0* a1);
/* ET_ECF_LIBRARY.add_library_recursive */
extern void T802f197(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_library_recursive */
extern T0* T802f197ac1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].force_last */
extern void T1547f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].slots_put */
extern void T1547f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_LIBRARY].clashes_put */
extern void T1547f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_LIBRARY].slots_item */
extern T6 T1547f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].hash_position */
extern T6 T1547f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].resize */
extern void T1547f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].clashes_resize */
extern void T1547f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].special_integer_ */
extern T0* T1547s27(TC* ac);
/* DS_HASH_SET [ET_LIBRARY].key_storage_resize */
extern void T1547f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_resize */
extern void T1547f45(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].aliased_resized_area */
extern T0* T1940s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_LIBRARY].aliased_resized_area */
extern T0* T1941f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].key_storage_item */
extern T0* T1547f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_item */
extern T0* T1547f17(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].clashes_item */
extern T6 T1547f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].slots_resize */
extern void T1547f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].new_modulus */
extern T6 T1547f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].new_capacity */
extern T6 T1547f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_put */
extern void T1547f40(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].force */
extern void T1940s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LIBRARY].fill_with */
extern void T1941f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIBRARY].extend */
extern void T1941f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].search_position */
extern void T1547f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].key_equality_tester */
extern T0* T1547f25(TC* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].unset_found_item */
extern void T1547f36(TC* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].has */
extern T1 T1547f18(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.add_library_recursive */
extern void T203f158(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_library_recursive */
extern T0* T203f158ac1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].do_all */
extern void T1547f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].make */
extern T0* T1547c30(TC* ac, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].set_internal_cursor */
extern void T1547f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].new_cursor */
extern T0* T1547f24(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_LIBRARY].make */
extern T0* T1939c4(TC* ac, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].make_slots */
extern void T1547f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_clashes */
extern void T1547f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_key_storage */
extern void T1547f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_item_storage */
extern void T1547f32(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].make */
extern T0* T1940s1(TC* ac, T6 a1);
/* SPECIAL [ET_LIBRARY].make_empty */
extern T0* T1941c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].default_create */
extern T0* T1940c3(TC* ac);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern void T174f8(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern T0* T174f8ac1(TC* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T824f157(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T824f157ac1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].has */
extern T1 T1512f29(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T207f157(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T207f157ac1(TC* ac, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assemblies */
extern void T241f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.consume */
extern void T824f154(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assembly */
extern void T241f6(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.consume */
extern void T207f154(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T1260f2(TC* ac, T0* C, T6 a1);
/* ET_DOTNET_ASSEMBLIES.count */
extern T6 T1260f3(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].do_all */
extern void T1512f32(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLIES.make_empty */
extern T0* T1260c5(TC* ac);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].make */
extern T0* T1755c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1755f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1755f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY].make */
extern T0* T2005c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].make */
extern T0* T1928s1(TC* ac, T6 a1);
/* SPECIAL [ET_DOTNET_ASSEMBLY].make_empty */
extern T0* T1929c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].default_create */
extern T0* T1928c3(TC* ac);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make */
extern T0* T1512c30(TC* ac, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1512f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1512f17(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY].make */
extern T0* T1927c4(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_slots */
extern void T1512f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_clashes */
extern void T1512f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_key_storage */
extern void T1512f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_item_storage */
extern void T1512f33(TC* ac, T0* C, T6 a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T174f3(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_6 */
extern void T853f60(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_6_metrics */
extern void T853f72(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile */
extern void T66f72(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_PROCESSOR.compile */
extern T0* T66f72ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM_PROCESSOR.compile */
extern T0* T66f72ac2(TC* ac, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_marked_classes */
extern void T66f81(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_degree_3 */
extern void T66f85(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_3_metrics */
extern void T66f97(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_metrics */
extern void T66f105(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.report_processor_metrics */
extern void T66f106(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM_PROCESSOR.report_processed_class_count_stack */
extern void T66f107(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.total_processed_class_count */
extern T6 T66f40(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_implementation_internal_error */
extern void T66f96(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.check_implementation_validity */
extern void T66f95(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.reset_processed_class_count */
extern void T66f104(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.reset_total_processed_class_count */
extern void T66f103(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.compile_degree_4 */
extern void T66f84(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_4_metrics */
extern void T66f94(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_interface_internal_error */
extern void T66f93(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.check_interface_validity */
extern void T66f92(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_flattening_internal_error */
extern void T66f91(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.flatten_features */
extern void T66f90(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_ancestors_internal_error */
extern void T66f89(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.build_ancestors */
extern void T66f88(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_degree_5 */
extern void T66f83(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_PROCESSOR.check_provider_validity */
extern void T66f87(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_degree_5_2 */
extern void T66f86(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_PROCESSOR.report_degree_5_2_metrics */
extern void T66f102(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_syntax_internal_error */
extern void T66f101(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.parse_classes */
extern void T66f100(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.remove_unmarked_classes */
extern void T66f99(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].keep_first */
extern void T69f20(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].replace */
extern void T69f19(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_CLASS.is_marked */
extern T1 T70f73(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.parse_marked_classes */
extern void T66f98(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.nested_benchmark_start_time */
extern T0* T66f43(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.compile_classes */
extern void T66f79(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile */
extern void T853f59(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.compile */
extern T0* T853f59ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM_MULTIPROCESSOR.compile */
extern T0* T853f59ac2(TC* ac, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_marked_classes */
extern void T853f71(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_3 */
extern void T853f84(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_3_metrics */
extern void T853f99(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_metrics */
extern void T853f107(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.report_processor_metrics_recursive */
extern void T853f108(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.report_processor_metrics */
extern void T853f109(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_processed_class_count_stack */
extern void T853f110(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.total_processed_class_count */
extern T6 T853f43(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR].item */
extern T0* T1280f7(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM_MULTIPROCESSOR.total_processed_class_count_recursive */
extern T6 T853f42(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.set_implementation_internal_error */
extern void T853f98(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.check_implementation_validity */
extern void T853f97(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.check_implementation_validity */
extern T0* T853f97ac1(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.check_implementation_validity */
extern void T853f97p1(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.reset_processed_class_count */
extern void T853f106(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.reset_total_processed_class_count */
extern void T853f105(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_4 */
extern void T853f83(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_4_metrics */
extern void T853f96(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_interface_internal_error */
extern void T853f95(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.check_interface_validity */
extern void T853f94(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flattening_internal_error */
extern void T853f93(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.flatten_features */
extern void T853f92(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_ancestors_internal_error */
extern void T853f91(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.build_ancestors */
extern void T853f90(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_5 */
extern void T853f82(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_MULTIPROCESSOR.check_provider_validity */
extern void T853f89(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_5_2 */
extern void T853f88(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_5_2_metrics */
extern void T853f104(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_syntax_internal_error */
extern void T853f103(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.parse_classes */
extern void T853f102(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.parse_classes */
extern T0* T853f102ac1(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.parse_classes */
extern void T853f102p1(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.remove_unmarked_classes */
extern void T853f101(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.parse_marked_classes */
extern void T853f100(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.parse_marked_classes */
extern T0* T853f100ac1(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.parse_marked_classes */
extern void T853f100p1(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.nested_benchmark_start_time */
extern T0* T853f47(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.compile_classes */
extern void T853f69(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.tokens */
extern T0* T853s40(TC* ac);
/* ET_DYNAMIC_SYSTEM.activate_dynamic_type_set_builder */
extern void T95f94(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.compile_all */
extern void T95f92(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.compile_all */
extern T0* T95f92ac1(TC* ac, T0* a1);
/* ET_DYNAMIC_SYSTEM.mark_all_features */
extern void T95f96(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.classes_do_recursive_until */
extern void T87f229(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T87f229ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T87f229ac2(TC* ac, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_until */
extern void T824f160(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_until */
extern void T207f160(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.classes_do_until */
extern void T203f161(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.classes_do_until */
extern void T802f188(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_until */
extern void T87f250(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.classes_do_until */
extern void T50f193(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.compile_all */
extern void T66f70(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_PROCESSOR.compile_all */
extern T0* T66f70ac1(TC* ac, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_all */
extern void T853f57(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.compile_all */
extern T0* T853f57ac1(TC* ac, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_dynamic_type_set_builder */
extern void T95f89(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern T0* T100c101(TC* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_map */
extern T0* T859c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T859f35(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T859f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T859f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T859f25(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].make */
extern T0* T1287c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_slots */
extern void T859f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_clashes */
extern void T859f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_key_storage */
extern void T859f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_item_storage */
extern void T859f43(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_feature */
extern T0* T100f93(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_feature */
extern T0* T100f96(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_type */
extern T0* T100f73(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make_feature_checker */
extern void T100f108(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern void T100f108p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_new_instance_types */
extern void T95f88(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_catcall_warning_mode */
extern void T95f87(TC* ac, T0* C, T1 a1);
/* GEC.catcall_warning_mode */
extern T1 T26f52(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_catcall_error_mode */
extern void T95f86(TC* ac, T0* C, T1 a1);
/* GEC.catcall_error_mode */
extern T1 T26f51(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_full_class_checking */
extern void T95f85(TC* ac, T0* C, T1 a1);
/* INTEGER_32.is_greater */
extern T1 T6f4(TC* ac, volatile T6* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.make */
extern T0* T95c84(TC* ac, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.make */
extern T0* T95f84ac1(TC* ac, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.make */
extern T0* T842c14(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make */
extern T0* T840c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_with_equality_testers */
extern void T840f36(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_sparse_container */
extern void T840f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].set_internal_cursor */
extern void T840f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].new_cursor */
extern T0* T840f29(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make */
extern T0* T1275c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_slots */
extern void T840f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_clashes */
extern void T840f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_key_storage */
extern void T840f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_item_storage */
extern void T840f49(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.make_basic_types */
extern void T95f91(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_flat_dbc_mode */
extern void T66f69(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_dbc_mode_only */
extern void T66f78(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flat_dbc_mode */
extern void T853f56(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flat_dbc_mode_only */
extern void T853f68(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_mode */
extern void T66f68(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_mode_only */
extern void T66f77(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flat_mode */
extern void T853f55(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flat_mode_only */
extern void T853f67(TC* ac, T0* C, T1 a1);
/* GEC.is_gelint */
extern T1 T26f50(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.benchmark_start_time */
extern T0* T66f39(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.benchmark_start_time */
extern T0* T853f45(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_metrics_shown */
extern void T66f67(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_metrics_shown_only */
extern void T66f76(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_metrics_shown */
extern void T853f54(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_metrics_shown_only */
extern void T853f66(TC* ac, T0* C, T1 a1);
/* GEC.is_metrics */
extern T1 T26f49(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_nested_benchmark_shown */
extern void T66f66(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_nested_benchmark_shown_only */
extern void T66f75(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_nested_benchmark_shown */
extern void T853f53(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_nested_benchmark_shown_only */
extern void T853f65(TC* ac, T0* C, T1 a1);
/* GEC.is_nested_benchmark */
extern T1 T26f48(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_benchmark_shown */
extern void T66f65(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_benchmark_shown_only */
extern void T66f74(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_benchmark_shown */
extern void T853f52(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_benchmark_shown_only */
extern void T853f64(TC* ac, T0* C, T1 a1);
/* GEC.is_silent */
extern T1 T26f38(TC* ac, T0* C);
/* GEC.is_no_benchmark */
extern T1 T26f47(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_ise_version */
extern void T66f48(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_ise_version_only */
extern void T66f52(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_ecma_version_only */
extern void T66f64(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_ise_version */
extern void T853f51(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_ise_version_only */
extern void T853f63(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_default_keyword_usage_only */
extern void T853f81(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.set_ecma_version_only */
extern void T853f80(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_detachable_keyword_only */
extern void T853f79(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_attached_keyword_only */
extern void T853f78(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_reference_keyword_only */
extern void T853f77(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_note_keyword_only */
extern void T853f76(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_attribute_keyword_only */
extern void T853f75(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_error_handler */
extern void T66f50(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_error_handler_only */
extern void T66f54(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_error_handler */
extern void T853f50(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_error_handler_only */
extern void T853f62(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR_FACTORY.new_system_processor */
extern T0* T98s1(TC* ac, T6 a1);
/* ET_SYSTEM_PROCESSOR.make */
extern T0* T66c47(TC* ac);
/* ET_TOKEN_CONSTANTS.standard_error_handler */
extern T0* T81s61(TC* ac);
/* ET_EIFFEL_PARSER.make */
extern T0* T68c1063(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.make_parser_skeleton */
extern void T68f1066(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_build_parser_tables */
extern void T68f1072(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yycheck_template */
extern T0* T68f732(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yyfixed_array */
extern T0* T68f1022(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_44 */
extern void T68f2246(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyarray_subcopy */
extern void T68f2300(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.integer_array_ */
extern T0* T68s1040(TC* ac);
/* ET_EIFFEL_PARSER.yycheck_template_43 */
extern void T68f2245(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_42 */
extern void T68f2244(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_41 */
extern void T68f2243(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_40 */
extern void T68f2242(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_39 */
extern void T68f2241(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_38 */
extern void T68f2240(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_37 */
extern void T68f2239(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_36 */
extern void T68f2238(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_35 */
extern void T68f2237(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_34 */
extern void T68f2236(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_33 */
extern void T68f2235(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_32 */
extern void T68f2234(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_31 */
extern void T68f2233(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_30 */
extern void T68f2232(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_29 */
extern void T68f2231(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_28 */
extern void T68f2230(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_27 */
extern void T68f2229(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_26 */
extern void T68f2228(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_25 */
extern void T68f2227(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_24 */
extern void T68f2226(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_23 */
extern void T68f2225(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_22 */
extern void T68f2224(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_21 */
extern void T68f2223(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_20 */
extern void T68f2222(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_19 */
extern void T68f2221(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_18 */
extern void T68f2220(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_17 */
extern void T68f2219(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_16 */
extern void T68f2218(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_15 */
extern void T68f2217(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_14 */
extern void T68f2216(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_13 */
extern void T68f2215(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_12 */
extern void T68f2214(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_11 */
extern void T68f2213(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_10 */
extern void T68f2212(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_9 */
extern void T68f2211(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_8 */
extern void T68f2210(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_7 */
extern void T68f2209(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_6 */
extern void T68f2208(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_5 */
extern void T68f2207(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_4 */
extern void T68f2206(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_3 */
extern void T68f2205(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_2 */
extern void T68f2204(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_1 */
extern void T68f2203(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template */
extern T0* T68f731(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yytable_template_44 */
extern void T68f2202(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_43 */
extern void T68f2201(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_42 */
extern void T68f2200(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_41 */
extern void T68f2199(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_40 */
extern void T68f2198(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_39 */
extern void T68f2197(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_38 */
extern void T68f2196(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_37 */
extern void T68f2195(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_36 */
extern void T68f2194(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_35 */
extern void T68f2193(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_34 */
extern void T68f2192(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_33 */
extern void T68f2191(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_32 */
extern void T68f2190(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_31 */
extern void T68f2189(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_30 */
extern void T68f2188(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_29 */
extern void T68f2187(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_28 */
extern void T68f2186(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_27 */
extern void T68f2185(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_26 */
extern void T68f2184(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_25 */
extern void T68f2183(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_24 */
extern void T68f2182(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_23 */
extern void T68f2181(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_22 */
extern void T68f2180(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_21 */
extern void T68f2179(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_20 */
extern void T68f2178(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_19 */
extern void T68f2177(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_18 */
extern void T68f2176(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_17 */
extern void T68f2175(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_16 */
extern void T68f2174(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_15 */
extern void T68f2173(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_14 */
extern void T68f2172(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_13 */
extern void T68f2171(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_12 */
extern void T68f2170(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_11 */
extern void T68f2169(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_10 */
extern void T68f2168(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_9 */
extern void T68f2167(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_8 */
extern void T68f2166(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_7 */
extern void T68f2165(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_6 */
extern void T68f2164(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_5 */
extern void T68f2163(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_4 */
extern void T68f2162(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_3 */
extern void T68f2161(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_2 */
extern void T68f2160(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_1 */
extern void T68f2159(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template */
extern T0* T68f730(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yypgoto_template_2 */
extern void T68f2158(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template_1 */
extern void T68f2157(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template */
extern T0* T68f729(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yypact_template_10 */
extern void T68f2156(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_9 */
extern void T68f2155(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_8 */
extern void T68f2154(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_7 */
extern void T68f2153(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_6 */
extern void T68f2152(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_5 */
extern void T68f2151(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_4 */
extern void T68f2150(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_3 */
extern void T68f2149(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_2 */
extern void T68f2148(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_1 */
extern void T68f2147(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template */
extern T0* T68f728(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yydefgoto_template_2 */
extern void T68f2146(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template_1 */
extern void T68f2145(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template */
extern T0* T68f727(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yydefact_template_10 */
extern void T68f2144(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_9 */
extern void T68f2143(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_8 */
extern void T68f2142(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_7 */
extern void T68f2141(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_6 */
extern void T68f2140(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_5 */
extern void T68f2139(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_4 */
extern void T68f2138(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_3 */
extern void T68f2137(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_2 */
extern void T68f2136(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_1 */
extern void T68f2135(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes2_template */
extern T0* T68f726(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template */
extern T0* T68f724(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template_10 */
extern void T68f2134(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_9 */
extern void T68f2133(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_8 */
extern void T68f2132(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_7 */
extern void T68f2131(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_6 */
extern void T68f2130(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_5 */
extern void T68f2129(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_4 */
extern void T68f2128(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_3 */
extern void T68f2127(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_2 */
extern void T68f2126(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_1 */
extern void T68f2125(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template */
extern T0* T68f722(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yyr1_template_5 */
extern void T68f2124(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_4 */
extern void T68f2123(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_3 */
extern void T68f2122(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_2 */
extern void T68f2121(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_1 */
extern void T68f2120(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytranslate_template */
extern T0* T68f712(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yytranslate_template_2 */
extern void T68f2119(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytranslate_template_1 */
extern void T68f2118(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_create_value_stacks */
extern void T68f1071(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].make */
extern T0* T664s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_WRITABLE].make_empty */
extern T0* T666c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].default_create */
extern T0* T664c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].make */
extern T0* T661s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].make_empty */
extern T0* T663c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].default_create */
extern T0* T661c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].make */
extern T0* T658s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].make_empty */
extern T0* T660c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].default_create */
extern T0* T658c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST].make */
extern T0* T655s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].make_empty */
extern T0* T657c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST].default_create */
extern T0* T655c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION].make */
extern T0* T652s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].make_empty */
extern T0* T654c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION].default_create */
extern T0* T652c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].make */
extern T0* T649s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_VARIANT].make_empty */
extern T0* T651c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].default_create */
extern T0* T649c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].make */
extern T0* T646s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].make_empty */
extern T0* T648c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].default_create */
extern T0* T646c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].make */
extern T0* T643s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].make_empty */
extern T0* T645c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].default_create */
extern T0* T643c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST].make */
extern T0* T640s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].make_empty */
extern T0* T642c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST].default_create */
extern T0* T640c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM].make */
extern T0* T637s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].make_empty */
extern T0* T639c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM].default_create */
extern T0* T637c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT].make */
extern T0* T634s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].make_empty */
extern T0* T636c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT].default_create */
extern T0* T634c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE].make */
extern T0* T632s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_TYPE].make_empty */
extern T0* T633c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE].default_create */
extern T0* T632c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].make */
extern T0* T629s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].make_empty */
extern T0* T631c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].default_create */
extern T0* T629c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].make */
extern T0* T626s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].make_empty */
extern T0* T628c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].default_create */
extern T0* T626c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION].make */
extern T0* T623s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].make_empty */
extern T0* T625c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION].default_create */
extern T0* T623c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].make */
extern T0* T621s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].make_empty */
extern T0* T622c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].default_create */
extern T0* T621c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].make */
extern T0* T618s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].make_empty */
extern T0* T620c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].default_create */
extern T0* T618c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUERY].make */
extern T0* T615s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_QUERY].make_empty */
extern T0* T617c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUERY].default_create */
extern T0* T615c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION].make */
extern T0* T612s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].make_empty */
extern T0* T614c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION].default_create */
extern T0* T612c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make */
extern T0* T609s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make_empty */
extern T0* T611c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].default_create */
extern T0* T609c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].make */
extern T0* T606s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_PROCEDURE].make_empty */
extern T0* T608c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].default_create */
extern T0* T606c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].make */
extern T0* T603s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_PRECONDITIONS].make_empty */
extern T0* T605c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].default_create */
extern T0* T603c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].make */
extern T0* T600s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].make_empty */
extern T0* T602c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].default_create */
extern T0* T600c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].make */
extern T0* T598s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].make_empty */
extern T0* T599c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].default_create */
extern T0* T598c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].make */
extern T0* T596s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].make_empty */
extern T0* T597c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].default_create */
extern T0* T596c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].make */
extern T0* T593s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].make_empty */
extern T0* T595c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].default_create */
extern T0* T593c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].make */
extern T0* T591s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_PARENT].make_empty */
extern T0* T592c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].default_create */
extern T0* T591c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T588s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].make_empty */
extern T0* T590c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].default_create */
extern T0* T588c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].make */
extern T0* T585s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].make_empty */
extern T0* T587c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].default_create */
extern T0* T585c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST].make */
extern T0* T582s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].make_empty */
extern T0* T584c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST].default_create */
extern T0* T582c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM].make */
extern T0* T579s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].make_empty */
extern T0* T581c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM].default_create */
extern T0* T579c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM].make */
extern T0* T576s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM].make_empty */
extern T0* T578c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM].default_create */
extern T0* T576c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM].make */
extern T0* T573s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_NOTE_ITEM].make_empty */
extern T0* T575c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM].default_create */
extern T0* T573c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST].make */
extern T0* T570s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_NOTE_LIST].make_empty */
extern T0* T572c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST].default_create */
extern T0* T570c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].make */
extern T0* T567s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].make_empty */
extern T0* T569c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].default_create */
extern T0* T567c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].make */
extern T0* T564s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].make_empty */
extern T0* T566c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].default_create */
extern T0* T564c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].make */
extern T0* T561s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].make_empty */
extern T0* T563c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T561c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].make */
extern T0* T558s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].make_empty */
extern T0* T560c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].default_create */
extern T0* T558c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].make */
extern T0* T555s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].make_empty */
extern T0* T557c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].default_create */
extern T0* T555c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T552s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].make_empty */
extern T0* T554c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].default_create */
extern T0* T552c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T549s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].make_empty */
extern T0* T551c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T549c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].make */
extern T0* T546s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].make_empty */
extern T0* T548c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].default_create */
extern T0* T546c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].make */
extern T0* T543s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].make_empty */
extern T0* T545c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].default_create */
extern T0* T543c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T541s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].make_empty */
extern T0* T542c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].default_create */
extern T0* T541c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].make */
extern T0* T538s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].make_empty */
extern T0* T540c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].default_create */
extern T0* T538c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].make */
extern T0* T535s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].make_empty */
extern T0* T537c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].default_create */
extern T0* T535c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].make */
extern T0* T532s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].make_empty */
extern T0* T534c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].default_create */
extern T0* T532c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION].make */
extern T0* T529s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].make_empty */
extern T0* T531c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION].default_create */
extern T0* T529c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION].make */
extern T0* T526s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].make_empty */
extern T0* T528c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION].default_create */
extern T0* T526c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS].make */
extern T0* T523s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].make_empty */
extern T0* T525c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS].default_create */
extern T0* T523c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].make */
extern T0* T520s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].make_empty */
extern T0* T522c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].default_create */
extern T0* T520c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT].make */
extern T0* T517s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].make_empty */
extern T0* T519c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT].default_create */
extern T0* T517c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].make */
extern T0* T514s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INLINE_AGENT].make_empty */
extern T0* T516c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].default_create */
extern T0* T514c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].make */
extern T0* T511s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].make_empty */
extern T0* T513c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].default_create */
extern T0* T511c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].make */
extern T0* T508s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_IF_EXPRESSION].make_empty */
extern T0* T510c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].default_create */
extern T0* T508c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].make */
extern T0* T505s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].make_empty */
extern T0* T507c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].default_create */
extern T0* T505c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T502s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].make_empty */
extern T0* T504c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T502c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].make */
extern T0* T499s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].make_empty */
extern T0* T501c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].default_create */
extern T0* T499c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T496s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].make_empty */
extern T0* T498c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].default_create */
extern T0* T496c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T493s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].make_empty */
extern T0* T495c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T493c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].make */
extern T0* T490s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].make_empty */
extern T0* T492c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].default_create */
extern T0* T490c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].make */
extern T0* T487s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].make_empty */
extern T0* T489c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].default_create */
extern T0* T487c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].make */
extern T0* T485s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME].make_empty */
extern T0* T486c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].default_create */
extern T0* T485c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].make */
extern T0* T482s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].make_empty */
extern T0* T484c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].default_create */
extern T0* T482c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].make */
extern T0* T479s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].make_empty */
extern T0* T481c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].default_create */
extern T0* T479c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].make */
extern T0* T477s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].make_empty */
extern T0* T478c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].default_create */
extern T0* T477c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].make */
extern T0* T474s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].make_empty */
extern T0* T476c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].default_create */
extern T0* T474c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].make */
extern T0* T471s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].make_empty */
extern T0* T473c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].default_create */
extern T0* T471c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].make */
extern T0* T468s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].make_empty */
extern T0* T470c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].default_create */
extern T0* T468c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].make */
extern T0* T465s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION].make_empty */
extern T0* T467c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].default_create */
extern T0* T465c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].make */
extern T0* T463s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].make_empty */
extern T0* T464c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].default_create */
extern T0* T463c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].make */
extern T0* T460s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_EXPORT].make_empty */
extern T0* T462c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].default_create */
extern T0* T460c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].make */
extern T0* T457s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].make_empty */
extern T0* T459c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].default_create */
extern T0* T457c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].make */
extern T0* T454s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].make_empty */
extern T0* T456c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].default_create */
extern T0* T454c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].make */
extern T0* T451s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].make_empty */
extern T0* T453c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].default_create */
extern T0* T451c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].make */
extern T0* T448s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].make_empty */
extern T0* T450c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].default_create */
extern T0* T448c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].make */
extern T0* T445s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].make_empty */
extern T0* T447c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].default_create */
extern T0* T445c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].make */
extern T0* T443s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].make_empty */
extern T0* T444c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].default_create */
extern T0* T443c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].make */
extern T0* T441s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CREATOR].make_empty */
extern T0* T442c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].default_create */
extern T0* T441c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].make */
extern T0* T438s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CREATION_REGION].make_empty */
extern T0* T440c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].default_create */
extern T0* T438c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].make */
extern T0* T435s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].make_empty */
extern T0* T437c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].default_create */
extern T0* T435c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].make */
extern T0* T432s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].make_empty */
extern T0* T434c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].default_create */
extern T0* T432c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].make */
extern T0* T429s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].make_empty */
extern T0* T431c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T429c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].make */
extern T0* T426s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].make_empty */
extern T0* T428c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].default_create */
extern T0* T426c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T423s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].make_empty */
extern T0* T425c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].default_create */
extern T0* T423c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST].make */
extern T0* T420s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].make_empty */
extern T0* T422c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST].default_create */
extern T0* T420c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].make */
extern T0* T417s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].make_empty */
extern T0* T419c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].default_create */
extern T0* T417c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T414s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T416c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T414c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T411s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T413c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T411c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].make */
extern T0* T408s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CONSTANT].make_empty */
extern T0* T410c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].default_create */
extern T0* T408c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].make */
extern T0* T405s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].make_empty */
extern T0* T407c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].default_create */
extern T0* T405c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].make */
extern T0* T402s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].make_empty */
extern T0* T404c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].default_create */
extern T0* T402c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].make */
extern T0* T400s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].make_empty */
extern T0* T401c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].default_create */
extern T0* T400c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].make */
extern T0* T398s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].make_empty */
extern T0* T399c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].default_create */
extern T0* T398c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].make */
extern T0* T396s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CLASS].make_empty */
extern T0* T397c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].default_create */
extern T0* T396c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].make */
extern T0* T393s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].make_empty */
extern T0* T395c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].default_create */
extern T0* T393c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].make */
extern T0* T390s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].make_empty */
extern T0* T392c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].default_create */
extern T0* T390c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].make */
extern T0* T387s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].make_empty */
extern T0* T389c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].default_create */
extern T0* T387c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].make */
extern T0* T384s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CHOICE].make_empty */
extern T0* T386c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].default_create */
extern T0* T384c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].make */
extern T0* T381s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].make_empty */
extern T0* T383c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].default_create */
extern T0* T381c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T378s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].make_empty */
extern T0* T380c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].default_create */
extern T0* T378c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].make */
extern T0* T375s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].make_empty */
extern T0* T377c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].default_create */
extern T0* T375c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].make */
extern T0* T372s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].make_empty */
extern T0* T374c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].default_create */
extern T0* T372c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].make */
extern T0* T369s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].make_empty */
extern T0* T371c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].default_create */
extern T0* T369c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST].make */
extern T0* T366s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].make_empty */
extern T0* T368c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST].default_create */
extern T0* T366c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].make */
extern T0* T363s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME].make_empty */
extern T0* T365c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].default_create */
extern T0* T363c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].make */
extern T0* T360s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].make_empty */
extern T0* T362c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].default_create */
extern T0* T360c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T357s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make_empty */
extern T0* T359c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].default_create */
extern T0* T357c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T354s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make_empty */
extern T0* T356c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T354c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T351s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].make_empty */
extern T0* T353c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].default_create */
extern T0* T351c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T349s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T350c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T349c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T347s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T348c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T347c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T344s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].make_empty */
extern T0* T346c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T344c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].make */
extern T0* T341s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].make_empty */
extern T0* T343c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].default_create */
extern T0* T341c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].make */
extern T0* T338s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].make_empty */
extern T0* T340c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].default_create */
extern T0* T338c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].make */
extern T0* T335s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].make_empty */
extern T0* T337c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].default_create */
extern T0* T335c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].make */
extern T0* T332s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].make_empty */
extern T0* T334c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].default_create */
extern T0* T332c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].make */
extern T0* T329s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].make_empty */
extern T0* T331c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].default_create */
extern T0* T329c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].make */
extern T0* T326s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_VOID].make_empty */
extern T0* T328c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].default_create */
extern T0* T326c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].make */
extern T0* T323s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].make_empty */
extern T0* T325c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].default_create */
extern T0* T323c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].make */
extern T0* T320s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].make_empty */
extern T0* T322c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].default_create */
extern T0* T320c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].make */
extern T0* T317s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_RESULT].make_empty */
extern T0* T319c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].default_create */
extern T0* T317c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].make */
extern T0* T314s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].make_empty */
extern T0* T316c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].default_create */
extern T0* T314c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].make */
extern T0* T311s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].make_empty */
extern T0* T313c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].default_create */
extern T0* T311c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].make */
extern T0* T308s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].make_empty */
extern T0* T310c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].default_create */
extern T0* T308c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].make */
extern T0* T305s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].make_empty */
extern T0* T307c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].default_create */
extern T0* T305c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].make */
extern T0* T302s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_IDENTIFIER].make_empty */
extern T0* T304c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].default_create */
extern T0* T302c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].make */
extern T0* T299s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].make_empty */
extern T0* T301c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].default_create */
extern T0* T299c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].make */
extern T0* T296s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CURRENT].make_empty */
extern T0* T298c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].default_create */
extern T0* T296c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].make */
extern T0* T293s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].make_empty */
extern T0* T295c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].default_create */
extern T0* T293c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].make */
extern T0* T290s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_BREAK].make_empty */
extern T0* T292c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].default_create */
extern T0* T290c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].make */
extern T0* T287s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].make_empty */
extern T0* T289c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].default_create */
extern T0* T287c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].make */
extern T0* T284s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_POSITION].make_empty */
extern T0* T286c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].default_create */
extern T0* T284c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].make */
extern T0* T281s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_SYMBOL].make_empty */
extern T0* T283c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].default_create */
extern T0* T281c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].make */
extern T0* T278s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].make_empty */
extern T0* T280c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].default_create */
extern T0* T278c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].make */
extern T0* T275s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].make_empty */
extern T0* T277c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].default_create */
extern T0* T275c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].make */
extern T0* T273s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_KEYWORD].make_empty */
extern T0* T274c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].default_create */
extern T0* T273c3(TC* ac);
/* ET_EIFFEL_PARSER.make_eiffel_scanner */
extern void T68f1065(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.make_with_buffer */
extern void T68f1070(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T68f1089(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T68f1089p1(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_build_tables */
extern void T68f1112(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_acclist_template */
extern T0* T68f807(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_fixed_array */
extern T0* T68f1028(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_5 */
extern void T68f2299(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_array_subcopy */
extern void T68f2301(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.yy_acclist_template_4 */
extern void T68f2298(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_3 */
extern void T68f2297(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_2 */
extern void T68f2296(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_1 */
extern void T68f2295(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template */
extern T0* T68f806(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_accept_template_3 */
extern void T68f2294(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template_2 */
extern void T68f2293(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template_1 */
extern void T68f2292(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_meta_template */
extern T0* T68f805(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template */
extern T0* T68f804(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template_6 */
extern void T68f2291(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_5 */
extern void T68f2290(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_4 */
extern void T68f2289(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_3 */
extern void T68f2288(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_2 */
extern void T68f2287(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_1 */
extern void T68f2286(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template */
extern T0* T68f803(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_def_template_3 */
extern void T68f2285(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template_2 */
extern void T68f2284(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template_1 */
extern void T68f2283(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template */
extern T0* T68f802(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_base_template_3 */
extern void T68f2282(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template_2 */
extern void T68f2281(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template_1 */
extern void T68f2280(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template */
extern T0* T68f801(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_chk_template_17 */
extern void T68f2279(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_16 */
extern void T68f2278(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_15 */
extern void T68f2277(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_14 */
extern void T68f2276(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_13 */
extern void T68f2275(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_12 */
extern void T68f2274(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_11 */
extern void T68f2273(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_10 */
extern void T68f2272(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_9 */
extern void T68f2271(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_8 */
extern void T68f2270(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_7 */
extern void T68f2269(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_6 */
extern void T68f2268(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_5 */
extern void T68f2267(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_4 */
extern void T68f2266(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_3 */
extern void T68f2265(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_2 */
extern void T68f2264(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_1 */
extern void T68f2263(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template */
extern T0* T68f800(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_nxt_template_14 */
extern void T68f2262(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_13 */
extern void T68f2261(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_12 */
extern void T68f2260(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_11 */
extern void T68f2259(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_10 */
extern void T68f2258(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_9 */
extern void T68f2257(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_8 */
extern void T68f2256(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_7 */
extern void T68f2255(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_6 */
extern void T68f2254(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_5 */
extern void T68f2253(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_4 */
extern void T68f2252(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_3 */
extern void T68f2251(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_2 */
extern void T68f2250(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_1 */
extern void T68f2249(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.empty_buffer */
extern T0* T68f740(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T259c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].set_internal_cursor */
extern void T259f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_cursor */
extern T0* T259f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T1166c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].make */
extern T0* T256c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].set_internal_cursor */
extern void T256f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_cursor */
extern T0* T256f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].make */
extern T0* T1159c5(TC* ac, T0* a1);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].make */
extern T0* T255c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST].make */
extern T0* T1156s1(TC* ac, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].make_empty */
extern T0* T1155c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST].default_create */
extern T0* T1156c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].make */
extern T0* T254c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].make */
extern T0* T1154s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].make_empty */
extern T0* T1153c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].default_create */
extern T0* T1154c3(TC* ac);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].make */
extern T0* T253c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST].make */
extern T0* T1152s1(TC* ac, T6 a1);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].make_empty */
extern T0* T1151c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST].default_create */
extern T0* T1152c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].make */
extern T0* T252c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST].make */
extern T0* T1150s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].make_empty */
extern T0* T1149c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST].default_create */
extern T0* T1150c3(TC* ac);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].make */
extern T0* T251c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST].make */
extern T0* T1148s1(TC* ac, T6 a1);
/* SPECIAL [ET_OBJECT_TEST_LIST].make_empty */
extern T0* T1147c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST].default_create */
extern T0* T1148c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T250c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T1146s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].make_empty */
extern T0* T1145c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].default_create */
extern T0* T1146c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].make */
extern T0* T249c8(TC* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].make */
extern T0* T248c8(TC* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T247c9(TC* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T246c9(TC* ac, T6 a1);
/* YY_UNICODE_FILE_BUFFER.make_with_size */
extern T0* T243c22(TC* ac, T0* a1, T6 a2);
/* YY_UNICODE_FILE_BUFFER.new_default_buffer */
extern T0* T243f16(TC* ac, T0* C, T6 a1);
/* KL_STANDARD_FILES.input */
extern T0* T38s3(TC* ac);
/* KL_STDIN_FILE.make */
extern T0* T244c12(TC* ac);
/* ET_EIFFEL_PARSER.std */
extern T0* T68s707(TC* ac);
/* ET_EIFFEL_PARSER.make */
extern void T68f1063p1(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.make */
extern T0* T232c7(TC* ac, T0* a1);
/* ET_MASTER_CLASS_CHECKER.tokens */
extern T0* T232s4(TC* ac);
/* ET_EIFFEL_PREPARSER.make */
extern T0* T231c136(TC* ac, T0* a1);
/* ET_EIFFEL_PREPARSER.make_eiffel_scanner */
extern void T231f137(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.make_with_buffer */
extern void T231f138(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T231f139(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T231f139p1(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_build_tables */
extern void T231f141(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template */
extern T0* T231f87(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_fixed_array */
extern T0* T231f96(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_4 */
extern void T231f173(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_array_subcopy */
extern void T231f183(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PREPARSER.integer_array_ */
extern T0* T231s102(TC* ac);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_3 */
extern void T231f172(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_2 */
extern void T231f171(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_1 */
extern void T231f170(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template */
extern T0* T231f85(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_accept_template_3 */
extern void T231f169(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template_2 */
extern void T231f168(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template_1 */
extern void T231f167(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_meta_template */
extern T0* T231f80(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template */
extern T0* T231f74(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template_6 */
extern void T231f166(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_5 */
extern void T231f165(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_4 */
extern void T231f164(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_3 */
extern void T231f163(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_2 */
extern void T231f162(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_1 */
extern void T231f161(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template */
extern T0* T231f71(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_def_template_6 */
extern void T231f160(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_5 */
extern void T231f159(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_4 */
extern void T231f158(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_3 */
extern void T231f157(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_2 */
extern void T231f156(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_1 */
extern void T231f155(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template */
extern T0* T231f63(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_base_template_3 */
extern void T231f154(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template_2 */
extern void T231f153(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template_1 */
extern void T231f152(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template */
extern T0* T231f59(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template_9 */
extern void T231f151(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_8 */
extern void T231f150(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_7 */
extern void T231f149(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_6 */
extern void T231f148(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_5 */
extern void T231f147(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_4 */
extern void T231f146(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_3 */
extern void T231f145(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_2 */
extern void T231f144(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_1 */
extern void T231f143(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template */
extern T0* T231f94(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_9 */
extern void T231f182(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_8 */
extern void T231f181(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_7 */
extern void T231f180(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_6 */
extern void T231f179(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_5 */
extern void T231f178(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_4 */
extern void T231f177(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_3 */
extern void T231f176(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_2 */
extern void T231f175(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_1 */
extern void T231f174(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.empty_buffer */
extern T0* T231f83(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.std */
extern T0* T231s95(TC* ac);
/* ET_SYSTEM_MULTIPROCESSOR.make */
extern T0* T853c49(TC* ac, T6 a1);
/* ET_SYSTEM_MULTIPROCESSOR.make_single */
extern void T853f61(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.make_null_single */
extern void T853f73(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.set_qualified_anchored_types_cycle_detection_enabled_only */
extern void T853f87(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_unknown_builtin_reported_only */
extern void T853f86(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_preparse_shallow_mode_only */
extern void T853f85(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR].put_last */
extern void T1280f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR].force */
extern void T1770s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_SYSTEM_PROCESSOR].fill_with */
extern void T1769f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYSTEM_PROCESSOR].extend */
extern void T1769f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR].make */
extern T0* T1280c8(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR].set_internal_cursor */
extern void T1280f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR].new_cursor */
extern T0* T1280f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_SYSTEM_PROCESSOR].make */
extern T0* T1771c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR].make */
extern T0* T1770s1(TC* ac, T6 a1);
/* SPECIAL [ET_SYSTEM_PROCESSOR].make_empty */
extern T0* T1769c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR].default_create */
extern T0* T1770c2(TC* ac);
/* GEC.thread_count */
extern T6 T26f46(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.set_verbose */
extern void T63f196(TC* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.set_verbose */
extern void T42f196(TC* ac, T0* C, T1 a1);
/* GEC.is_verbose */
extern T1 T26f45(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.set_ise */
extern void T63f195(TC* ac, T0* C);
/* ET_ERROR_HANDLER.set_ise */
extern void T42f195(TC* ac, T0* C);
/* GEC.parse_ecf_file */
extern void T26f78(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.to_boolean */
extern T1 T1066f69(TC* ac, T0* C);
/* UC_STRING.to_boolean */
extern T1 T909f69(TC* ac, T0* C);
/* STRING_8.to_boolean */
extern T1 T17f47(TC* ac, T0* C);
/* UC_UTF8_STRING.is_boolean */
extern T1 T1066f66(TC* ac, T0* C);
/* UC_STRING.is_boolean */
extern T1 T909f67(TC* ac, T0* C);
/* STRING_8.is_boolean */
extern T1 T17f46(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_root_creation */
extern void T87f227(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_system_name */
extern void T87f170(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_root_type */
extern void T87f226(TC* ac, T0* C, T0* a1);
/* ET_CLUSTERS.put_last */
extern void T94f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].force_last */
extern void T837f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].force */
extern void T1267s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLUSTER].fill_with */
extern void T1268f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLUSTER].extend */
extern void T1268f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].resize */
extern void T837f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].aliased_resized_area */
extern T0* T1267s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_CLUSTER].aliased_resized_area */
extern T0* T1268f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].new_capacity */
extern T6 T837f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].extendible */
extern T1 T837f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.make */
extern T0* T89c69(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR_HANDLER.has_error */
extern T1 T86f5(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_file */
extern void T85f221(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.parse_file */
extern T0* T85f221ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM_PARSER.parse_file */
extern T0* T85f221ac2(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* PROCEDURE [TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8]].set_rout_disp_final */
extern void T788f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_SYSTEM_PARSER.build_system */
extern void T85f224(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.build_system */
extern T0* T85f224ac1(TC* ac);
/* ET_ECF_ADAPTED_LIBRARY.propagate_read_only */
extern void T821f35(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_read_only */
extern void T802f127(TC* ac, T0* C, T1 a1);
/* ET_LIBRARY.set_read_only */
extern void T203f169(TC* ac, T0* C, T1 a1);
/* DS_CELL [detachable ET_ECF_SYSTEM].put */
extern void T781f3(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].wipe_out */
extern void T793f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_wipe_out */
extern void T793f45(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_wipe_out */
extern void T793f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_wipe_out */
extern void T793f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_wipe_out */
extern void T793f42(TC* ac, T0* C);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].keep_head */
extern void T1194f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].set_count */
extern void T1194f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].unset_found_item */
extern void T793f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].move_all_cursors_after */
extern void T793f40(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_next_cursor */
extern void T1197f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_after */
extern void T1197f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].wipe_out */
extern void T791f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_wipe_out */
extern void T791f55(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_wipe_out */
extern void T791f54(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_wipe_out */
extern void T791f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_wipe_out */
extern void T791f52(TC* ac, T0* C);
/* SPECIAL [ET_ECF_LIBRARY].keep_head */
extern void T1190f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_LIBRARY].set_count */
extern void T1190f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].unset_found_item */
extern void T791f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].move_all_cursors_after */
extern void T791f50(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_next_cursor */
extern void T1189f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_after */
extern void T1189f9(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_dotnet_assemblies */
extern void T85f228(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].force_last_new */
extern void T793f38(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_put */
extern void T793f51(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_put */
extern void T793f50(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].force */
extern void T1198s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].fill_with */
extern void T1194f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].extend */
extern void T1194f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_put */
extern void T793f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_put */
extern void T793f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_item */
extern T6 T793f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].hash_position */
extern T6 T793f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].resize */
extern void T793f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_resize */
extern void T793f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].special_integer_ */
extern T0* T793s32(TC* ac);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_resize */
extern void T793f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_resize */
extern void T793f54(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1198s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1194f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_item */
extern T0* T793f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_item */
extern T6 T793f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_resize */
extern void T793f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_modulus */
extern T6 T793f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_capacity */
extern T6 T793f21(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_dotnet_assembly */
extern T0* T780f2(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.make */
extern T0* T824c105(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.make_from_system */
extern void T824f106(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.set_kernel_types */
extern void T824f110(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T824f152(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T824f151(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_type_type */
extern void T824f150(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_system_string_type */
extern void T824f149(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_system_object_type */
extern void T824f148(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_type */
extern void T824f147(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_32_type */
extern void T824f146(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_8_type */
extern void T824f145(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_special_type */
extern void T824f144(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_routine_type */
extern void T824f143(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_64_type */
extern void T824f142(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_32_type */
extern void T824f141(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_type */
extern void T824f140(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_procedure_type */
extern void T824f139(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_predicate_type */
extern void T824f138(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_pointer_type */
extern void T824f137(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T824f136(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T824f135(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T824f134(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T824f133(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_type */
extern void T824f132(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_iterable_type */
extern void T824f131(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T824f130(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T824f129(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T824f128(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T824f127(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T824f126(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_type */
extern void T824f125(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T824f124(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_immutable_string_8_type */
extern void T824f123(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_function_type */
extern void T824f122(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T824f121(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_exception_type */
extern void T824f120(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_type */
extern void T824f119(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_32_type */
extern void T824f118(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_8_type */
extern void T824f117(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_type */
extern void T824f116(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_boolean_type */
extern void T824f115(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_array_type */
extern void T824f114(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_tuple_type */
extern void T824f113(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_none_type */
extern void T824f112(TC* ac, T0* C);
/* ET_MASTER_CLASS.add_first_imported_class */
extern void T188f65(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].force_first */
extern void T1091f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].put */
extern void T1091f23(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_cursors_right */
extern void T1091f30(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_right */
extern void T1091f29(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].put_last */
extern void T1091f28(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_any_type */
extern void T824f111(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.make_adapted */
extern void T824f109(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T824f90(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T824f108(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.initialize */
extern void T824f107(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T824s89(TC* ac);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_dotnet_assembly */
extern void T826f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].found_item */
extern T0* T793f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_item */
extern T0* T793f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].found */
extern T1 T793f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].search */
extern void T793f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].search_position */
extern void T793f46(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.operating_system */
extern T0* T85s26(TC* ac);
/* ET_ECF_SYSTEM_PARSER.full_filename */
extern T0* T85f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.windows_file_system */
extern T0* T85s19(TC* ac);
/* ET_ECF_SYSTEM_PARSER.file_system */
extern T0* T85s18(TC* ac);
/* ET_ECF_SYSTEM_PARSER.unix_file_system */
extern T0* T85s34(TC* ac);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.pathname */
extern T0* T826f22(TC* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T174f4(TC* ac, T0* C, T6 a1);
/* ET_ECF_TARGET.fill_class_mappings */
extern void T88f58(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.set_class_mapping */
extern void T87f274(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.set_mapped_class */
extern void T188f85(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_class_mapping */
extern void T802f183(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_iterator */
extern T0* T827f43(TC* ac, T0* C);
/* ET_ECF_TARGET.fill_options */
extern void T88f57(TC* ac, T0* C, T0* a1);
extern T1 T88f57ot1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.set_trace_mode */
extern void T87f273(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_obsolete_routine_type_mode */
extern void T87f272(TC* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_obsolete_routine_type_mode */
extern void T802f182(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_obsolete_iteration_mode */
extern void T87f271(TC* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_obsolete_iteration_mode */
extern void T802f181(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_implicit_attachment_type_mark */
extern void T87f270(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_implicit_attachment_type_mark */
extern void T802f180(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.tokens */
extern T0* T88s30(TC* ac);
/* ET_ECF_OPTIONS.value */
extern T0* T1042f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.fill_capabilities */
extern void T88f64(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_target_type_attachment_mode */
extern void T87f286(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_attachment_type_conformance_mode */
extern void T87f285(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_scoop_mode */
extern void T87f284(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_multithreaded_mode */
extern void T87f283(TC* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.string_ */
extern T0* T88s31(TC* ac);
/* ET_ECF_CAPABILITIES.support_value */
extern T0* T91f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.use_value */
extern T0* T91f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].found_item */
extern T0* T835f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].item_storage_item */
extern T0* T835f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].found */
extern T1 T835f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].search */
extern void T835f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].search_position */
extern void T835f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].hash_position */
extern T6 T835f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].key_storage_item */
extern T0* T835f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].clashes_item */
extern T6 T835f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].slots_item */
extern T6 T835f23(TC* ac, T0* C, T6 a1);
/* ET_ECF_TARGET.fill_settings */
extern void T88f63(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_inlining_size */
extern void T87f282(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_inlining_mode */
extern void T87f281(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_line_generation_mode */
extern void T87f280(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_total_order_on_reals_mode */
extern void T87f279(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_executable_name */
extern void T87f278(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_exception_trace_mode */
extern void T87f277(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_check_for_void_target_mode */
extern void T87f276(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_console_application_mode */
extern void T87f275(TC* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.fill_root */
extern void T88f62(TC* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.fill_root */
extern void T1488f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_ALL_CLASSES.fill_root */
extern void T1489f2(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.unset_root_type */
extern void T87f287(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].forth */
extern void T791f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_forth */
extern void T791f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].add_traversing_cursor */
extern void T791f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_position */
extern void T1189f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].remove_traversing_cursor */
extern void T791f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_item */
extern T6 T791f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_for_iteration */
extern T0* T791f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_item */
extern T0* T791f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_item */
extern T0* T791f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].after */
extern T1 T791f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_after */
extern T1 T791f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].after */
extern T1 T1189f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].start */
extern void T791f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_start */
extern void T791f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_off */
extern T1 T791f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].off */
extern T1 T1189f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].is_empty */
extern T1 T791f23(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_libraries */
extern void T85f227(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.parse_libraries */
extern T0* T85f227ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.build_library */
extern void T85f231(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_CELL [detachable ET_ECF_LIBRARY].put */
extern void T820f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_library */
extern T0* T85f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].force_last_new */
extern void T791f46(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_put */
extern void T791f61(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_put */
extern void T791f60(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].force */
extern void T1193s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_LIBRARY].fill_with */
extern void T1190f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_LIBRARY].extend */
extern void T1190f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_put */
extern void T791f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_put */
extern void T791f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_item */
extern T6 T791f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].hash_position */
extern T6 T791f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].resize */
extern void T791f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_resize */
extern void T791f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].special_integer_ */
extern T0* T791s38(TC* ac);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_resize */
extern void T791f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_resize */
extern void T791f66(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T1193s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T1190f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_item */
extern T0* T791f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_resize */
extern void T791f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_modulus */
extern T6 T791f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_capacity */
extern T6 T791f36(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM_PARSER.fill_system_config */
extern void T85f232(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f232ot1(TC* ac, T0* a1);
extern T1 T85f232ot2(TC* ac, T0* a1);
/* ET_ECF_LIBRARY.set_library_target */
extern void T802f129(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_library_target */
extern void T801f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_library_target */
extern void T87f225(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eltm_error */
extern void T86f37(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_error */
extern void T86f31(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_error_message */
extern void T86f32(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_error_message */
extern void T86f32p1(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.message */
extern T0* T86f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.default_message */
extern T0* T828f9(TC* ac, T0* C);
/* ET_ECF_ERROR.message */
extern T0* T828f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.arguments */
extern T0* T828s6(TC* ac);
/* ET_ECF_ERROR.string_ */
extern T0* T828s8(TC* ac);
/* ET_ECF_ERROR.make_eltm */
extern T0* T828c105(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.filename */
extern T0* T828f14(TC* ac, T0* C);
/* ET_ECF_ERROR.default_message_template */
extern T0* T828f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.add_dependent_universes */
extern void T828f116(TC* ac, T0* C, T0* a1);
extern T1 T828f116ot1(TC* ac, T0* a1);
/* ET_ECF_TARGET.parent_path */
extern T0* T88f32(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].put_last */
extern void T1634f16(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT].force */
extern void T1953s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET_PARENT].fill_with */
extern void T1952f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET_PARENT].extend */
extern void T1952f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].make */
extern void T1634f13(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].make */
extern T0* T1634c13(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].set_internal_cursor */
extern void T1634f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].new_cursor */
extern T0* T1634f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET_PARENT].make */
extern T0* T1954c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT].make */
extern T0* T1953s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_TARGET_PARENT].make_empty */
extern T0* T1952c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT].default_create */
extern T0* T1953c3(TC* ac);
/* ET_ECF_ERROR.add_parent_path */
extern void T828f117(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].item */
extern T0* T1634f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].force_last */
extern void T1634f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].resize */
extern void T1634f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT].aliased_resized_area */
extern T0* T1953s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_TARGET_PARENT].aliased_resized_area */
extern T0* T1952f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].new_capacity */
extern T6 T1634f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].extendible */
extern T1 T1634f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].make_default */
extern T0* T1634c11(TC* ac);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].default_capacity */
extern T6 T1634f8(TC* ac, T0* C);
/* ET_ECF_LIBRARY.library */
extern T0* T802f12(TC* ac, T0* C);
/* ET_ECF_SYSTEM_CONFIG.universe */
extern T0* T801f3(TC* ac, T0* C);
/* ET_ECF_SYSTEM.universe */
extern T0* T87f14(TC* ac, T0* C);
/* ET_ECF_TARGETS.target_by_name */
extern T0* T816f2(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.string_ */
extern T0* T816s6(TC* ac);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].item */
extern T0* T1631f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_etam_error */
extern void T86f36(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_etam */
extern T0* T828c104(TC* ac, T0* a1, T0* a2);
/* ET_ECF_TARGETS.is_empty */
extern T1 T816f5(TC* ac, T0* C);
/* ET_ECF_TARGETS.count */
extern T6 T816f3(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].forth */
extern void T1045f12(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_forth */
extern void T1622f15(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].add_traversing_cursor */
extern void T1622f19(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_next_cursor */
extern void T1045f17(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_traversing_cursor */
extern void T1622f20(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set */
extern void T1045f15(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_ECF_LIBRARY.set_uuid */
extern void T802f128(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_uuid */
extern void T801f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_uuid */
extern void T87f224(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eatb_error */
extern void T86f35(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatb */
extern T0* T828c103(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.attribute_value */
extern T0* T85f53(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_POSITION_TABLE.item */
extern T0* T786f2(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].forth */
extern void T1626f11(TC* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_forth */
extern void T1627f12(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].add_traversing_cursor */
extern void T1627f13(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_next_cursor */
extern void T1626f14(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].remove_traversing_cursor */
extern void T1627f14(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set */
extern void T1626f12(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].go_after */
extern void T1626f10(TC* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_go_after */
extern void T1627f11(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_after */
extern void T1626f13(TC* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_off */
extern T1 T1627f6(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].off */
extern T1 T1626f7(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].item */
extern T0* T1626f6(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].start */
extern void T1626f9(TC* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_start */
extern void T1627f10(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].new_cursor */
extern T0* T1627f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T1626c8(TC* ac, T0* a1);
/* XM_POSITION_TABLE.has */
extern T1 T786f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.is_false */
extern T1 T85f52(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_read_only */
extern void T801f18(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_read_only */
extern void T87f223(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM_PARSER.is_true */
extern T1 T85f51(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_targets */
extern void T802f126(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_targets */
extern void T801f17(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_targets */
extern void T87f222(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_targets */
extern T0* T85f48(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_ECF_TARGETS.put_last */
extern void T816f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].force_last */
extern void T1631f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].force */
extern void T1255s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET].fill_with */
extern void T1253f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET].extend */
extern void T1253f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].resize */
extern void T1631f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].aliased_resized_area */
extern T0* T1255s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_TARGET].aliased_resized_area */
extern T0* T1253f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].new_capacity */
extern T6 T1631f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].extendible */
extern T1 T1631f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_targets */
extern T0* T780f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.make */
extern T0* T816c8(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].put_last */
extern void T1631f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].make */
extern T0* T1631c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].set_internal_cursor */
extern void T1631f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].new_cursor */
extern T0* T1631f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET].make */
extern T0* T1948c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].make */
extern T0* T1255s2(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_TARGET].make_empty */
extern T0* T1253c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].default_create */
extern T0* T1255c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_target */
extern T0* T85f80(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
extern T1 T85f80ot1(TC* ac, T0* a1);
extern T1 T85f80ot2(TC* ac, T0* a1);
/* ET_ECF_TARGET.set_notes */
extern void T88f55(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_post_compile_actions */
extern void T88f54(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_pre_compile_actions */
extern void T88f53(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_resources */
extern void T88f52(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_objects */
extern void T88f51(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_makes */
extern void T88f50(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_linker_flags */
extern void T88f49(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_libraries */
extern void T88f48(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_includes */
extern void T88f47(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_cflags */
extern void T88f46(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_namespaces */
extern void T88f45(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_class_mappings */
extern void T88f44(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_file_rules */
extern void T88f43(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_dotnet_assemblies */
extern void T88f42(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_libraries */
extern void T88f41(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_clusters */
extern void T88f40(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.adapt_target_options */
extern void T85f253(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.adapt_options */
extern void T85f255(TC* ac, T0* C, T0* a1);
/* ET_ECF_OPTIONS.set_primary_value */
extern void T1042f15(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_value */
extern T0* T1042f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_SETTINGS.primary_value */
extern T0* T90f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.adapt_capabilities */
extern void T85f252(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ecf_1_5_0 */
extern T0* T85s76(TC* ac);
/* ET_ECF_CAPABILITIES.set_primary_use_value */
extern void T91f14(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_CAPABILITIES.set_primary_use_value_id */
extern void T91f15(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].force_last */
extern void T835f42(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].key_storage_put */
extern void T835f50(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].slots_put */
extern void T835f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].clashes_put */
extern void T835f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].resize */
extern void T835f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].clashes_resize */
extern void T835f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].special_integer_ */
extern T0* T835s29(TC* ac);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].key_storage_resize */
extern void T835f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].item_storage_resize */
extern void T835f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].slots_resize */
extern void T835f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].new_modulus */
extern T6 T835f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].new_capacity */
extern T6 T835f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].item_storage_put */
extern void T835f46(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].unset_found_item */
extern void T835f44(TC* ac, T0* C);
/* ET_ECF_CAPABILITIES.set_primary_support_value */
extern void T91f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ecf_1_11_0 */
extern T0* T85s62(TC* ac);
/* ET_ECF_CAPABILITIES.primary_use_value */
extern T0* T91f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.primary_use_value_id */
extern T0* T91f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.primary_support_value */
extern T0* T91f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_abstract */
extern void T88f39(TC* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.set_version */
extern void T88f38(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_version */
extern T0* T85f126(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_VERSION.set_copyright */
extern void T1473f14(TC* ac, T0* C, T0* a1);
/* ET_ECF_VERSION.set_company */
extern void T1473f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_VERSION.set_product */
extern void T1473f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_VERSION.make_major */
extern T0* T1473c11(TC* ac, T6 a1);
/* ET_ECF_VERSION.make_major_minor */
extern T0* T1473c10(TC* ac, T6 a1, T6 a2);
/* ET_ECF_ERROR_HANDLER.report_eats_error */
extern void T86f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eats */
extern T0* T828c107(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_VERSION.make_major_minor_release */
extern T0* T1473c9(TC* ac, T6 a1, T6 a2, T6 a3);
/* ET_ECF_VERSION.make */
extern T0* T1473c8(TC* ac, T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_ECF_ERROR_HANDLER.report_eati_error */
extern void T86f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eati */
extern T0* T828c106(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_variable */
extern void T85f251(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_VARIABLES.set_primary_value */
extern void T92f21(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_VARIABLES.primary_value */
extern T0* T92f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_setting */
extern void T85f250(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SETTINGS.set_primary_value */
extern void T90f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.set_root */
extern void T88f37(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_root */
extern T0* T85f122(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ROOT_CLASS.set_cluster_name */
extern void T1488f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.set_creation_procedure_name */
extern void T1488f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_root_class */
extern T0* T780f26(TC* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.make */
extern T0* T1488c4(TC* ac, T0* a1);
/* ET_ECF_AST_FACTORY.new_root_all_classes */
extern T0* T780f25(TC* ac, T0* C);
/* ET_ECF_ROOT_ALL_CLASSES.make */
extern T0* T1489c1(TC* ac);
/* ET_ECF_TARGET.set_precompiled_library */
extern void T88f36(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_adapted_precompiled_library */
extern T0* T85f120(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_adapted_precompiled_library */
extern T0* T85f120ac1(TC* ac, T0* a1);
extern T1 T85f120ot1(TC* ac, T0* a1);
extern T1 T85f120ot2(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_ECF_OPTIONS]].set_rout_disp_final */
extern void T1487f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_conditions */
extern void T1471f29(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_visible_classes */
extern void T1471f28(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_class_renamings */
extern void T1471f27(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_class_options */
extern void T1471f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].do_all */
extern void T1484f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].item_storage_item */
extern T0* T1484f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].clashes_item */
extern T6 T1484f28(TC* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_options */
extern void T1471f25(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_use_application_options */
extern void T1471f24(TC* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_read_only */
extern void T1471f23(TC* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_classname_prefix */
extern void T1471f22(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_eifgens_location */
extern void T1471f21(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_visible_classes */
extern T0* T85f150(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].force_last */
extern void T1485f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS].force */
extern void T1922s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_VISIBLE_CLASS].fill_with */
extern void T1923f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_VISIBLE_CLASS].extend */
extern void T1923f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].resize */
extern void T1485f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS].aliased_resized_area */
extern T0* T1922s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_VISIBLE_CLASS].aliased_resized_area */
extern T0* T1923f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].new_capacity */
extern T6 T1485f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].extendible */
extern T1 T1485f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_visible_classes */
extern T0* T780f44(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].make */
extern T0* T1485c9(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].set_internal_cursor */
extern void T1485f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].new_cursor */
extern T0* T1485f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_VISIBLE_CLASS].make */
extern T0* T1924c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS].make */
extern T0* T1922s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_VISIBLE_CLASS].make_empty */
extern T0* T1923c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS].default_create */
extern T0* T1922c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_visible_class */
extern T0* T85f182(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_VISIBLE_CLASS.set_new_feature_name */
extern void T1492f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_VISIBLE_CLASS.set_new_class_name */
extern void T1492f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_VISIBLE_CLASS.set_feature_name */
extern void T1492f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_visible_class */
extern T0* T780f47(TC* ac, T0* C, T0* a1);
/* ET_ECF_VISIBLE_CLASS.make */
extern T0* T1492c5(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_renamings */
extern T0* T85f148(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_renaming */
extern void T85f256(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR_HANDLER.report_eatd_error */
extern void T86f47(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatd */
extern T0* T828c115(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_class_renamings */
extern T0* T780f43(TC* ac, T0* C);
/* ET_ECF_AST_FACTORY.case_insensitive_string_equality_tester */
extern T0* T780s55(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_options */
extern T0* T85f146(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_AST_FACTORY.new_options */
extern T0* T780f42(TC* ac, T0* C);
/* ET_ECF_OPTIONS.make */
extern T0* T1042c14(TC* ac);
/* Creation of agent #1 in feature ET_ECF_OPTIONS.make */
extern T0* T1042f14ac1(TC* ac, T0* a1);
/* FUNCTION [TUPLE [STRING_8], INTEGER_32].set_rout_disp_final */
extern void T832f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_hash_function */
extern void T827f50(TC* ac, T0* C, T0* a1);
/* KL_AGENT_HASH_FUNCTION [STRING_8].make */
extern T0* T830c3(TC* ac, T0* a1);
/* ET_ECF_OPTIONS.string_ */
extern T0* T1042s10(TC* ac);
/* ET_ECF_OPTIONS.case_insensitive_string_equality_tester */
extern T0* T1042s9(TC* ac);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_description */
extern void T1471f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_class_options */
extern T0* T85f145(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].force_last */
extern void T1484f37(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].key_storage_put */
extern void T1484f46(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].slots_put */
extern void T1484f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].clashes_put */
extern void T1484f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].slots_item */
extern T6 T1484f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].hash_position */
extern T6 T1484f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].resize */
extern void T1484f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].clashes_resize */
extern void T1484f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].special_integer_ */
extern T0* T1484s31(TC* ac);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].key_storage_resize */
extern void T1484f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].item_storage_resize */
extern void T1484f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS].aliased_resized_area */
extern T0* T1920s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_OPTIONS].aliased_resized_area */
extern T0* T1917f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].key_storage_item */
extern T0* T1484f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].slots_resize */
extern void T1484f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].new_modulus */
extern T6 T1484f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].new_capacity */
extern T6 T1484f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].item_storage_put */
extern void T1484f42(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS].force */
extern void T1920s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_OPTIONS].fill_with */
extern void T1917f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_OPTIONS].extend */
extern void T1917f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].search_position */
extern void T1484f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].unset_found_item */
extern void T1484f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].found_item */
extern T0* T1484f25(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].found */
extern T1 T1484f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].search */
extern void T1484f36(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_class_options */
extern T0* T780f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].set_key_equality_tester */
extern void T1484f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_map */
extern T0* T1484c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_with_equality_testers */
extern void T1484f39(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_sparse_container */
extern void T1484f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].set_internal_cursor */
extern void T1484f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].new_cursor */
extern T0* T1484f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8].make */
extern T0* T1921c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_slots */
extern void T1484f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_clashes */
extern void T1484f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_key_storage */
extern void T1484f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_item_storage */
extern void T1484f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS].make */
extern T0* T1920s2(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_OPTIONS].make_empty */
extern T0* T1917c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS].default_create */
extern T0* T1920c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_conditions */
extern T0* T85f143(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T85f143ot1(TC* ac, T0* a1);
extern T1 T85f143ot2(TC* ac, T0* a1);
/* ET_ECF_ORED_CONDITIONS.put_last */
extern void T1490f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].force_last */
extern void T1925f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS].force */
extern void T2127s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ANDED_CONDITIONS].fill_with */
extern void T2128f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ANDED_CONDITIONS].extend */
extern void T2128f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].resize */
extern void T1925f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS].aliased_resized_area */
extern T0* T2127s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ANDED_CONDITIONS].aliased_resized_area */
extern T0* T2128f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].new_capacity */
extern T6 T1925f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].extendible */
extern T1 T1925f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_ored_conditions */
extern T0* T780f40(TC* ac, T0* C, T0* a1);
/* ET_ECF_ORED_CONDITIONS.make */
extern T0* T1490c6(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].put_last */
extern void T1925f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].make */
extern T0* T1925c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].set_internal_cursor */
extern void T1925f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].new_cursor */
extern T0* T1925f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ANDED_CONDITIONS].make */
extern T0* T2129c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS].make */
extern T0* T2127s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_ANDED_CONDITIONS].make_empty */
extern T0* T2128c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS].default_create */
extern T0* T2127c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_condition */
extern T0* T85f181(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f181ot1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_version_condition */
extern T0* T85f199(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabj_error */
extern void T86f46(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabj */
extern T0* T828c114(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.make */
extern T0* T1503c7(TC* ac, T0* a1, T0* a2);
/* ET_ECF_COMPILER_VERSION_CONDITION.make */
extern T0* T1502c7(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabi_error */
extern void T86f45(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabi */
extern T0* T828c113(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabh_error */
extern void T86f44(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR.make_eabh */
extern T0* T828c112(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR_HANDLER.report_eabg_error */
extern void T86f43(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabg */
extern T0* T828c111(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabf_error */
extern void T86f42(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabf */
extern T0* T828c110(TC* ac, T0* a1, T0* a2, T0* a3);
/* UT_VERSION.make_major_minor_revision */
extern T0* T56c21(TC* ac, T6 a1, T6 a2, T6 a3);
/* UT_VERSION.make_major_minor */
extern T0* T56c18(TC* ac, T6 a1, T6 a2);
/* UT_VERSION.make_major */
extern T0* T56c17(TC* ac, T6 a1);
/* ET_ECF_SYSTEM_PARSER.new_platform_condition */
extern T0* T85f198(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eatn_error */
extern void T86f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatn */
extern T0* T828c109(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_platform_condition */
extern T0* T780f54(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_PLATFORM_CONDITION.make */
extern T0* T1500c9(TC* ac, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.make_excluded */
extern T0* T1500c8(TC* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eatx_error */
extern void T86f40(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatx */
extern T0* T828c108(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.new_multithreaded_condition */
extern T0* T85f196(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_concurrency_condition */
extern T0* T780f49(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_CONCURRENCY_CONDITION.make */
extern T0* T1495c18(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.make_excluded */
extern T0* T1495c17(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_dynamic_runtime_condition */
extern T0* T85f194(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_dynamic_runtime_condition */
extern T0* T780f53(TC* ac, T0* C, T1 a1);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.make */
extern T0* T1499c5(TC* ac, T1 a1);
/* ET_ECF_SYSTEM_PARSER.new_dotnet_condition */
extern T0* T85f192(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_dotnet_condition */
extern T0* T780f52(TC* ac, T0* C, T1 a1);
/* ET_ECF_DOTNET_CONDITION.make */
extern T0* T1498c5(TC* ac, T1 a1);
/* ET_ECF_SYSTEM_PARSER.new_custom_condition */
extern T0* T85f190(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_custom_condition */
extern T0* T780f51(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_ECF_CUSTOM_CONDITION.make */
extern T0* T1497c13(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CUSTOM_CONDITION.make_excluded */
extern T0* T1497c12(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_void_safety_condition */
extern T0* T85f188(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_void_safety_condition */
extern T0* T780f50(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_VOID_SAFETY_CONDITION.make */
extern T0* T1496c18(TC* ac, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.make_excluded */
extern T0* T1496c17(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_concurrency_condition */
extern T0* T85f186(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ANDED_CONDITIONS.put_last */
extern void T1491f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].force_last */
extern void T1926f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM].force */
extern void T2130s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_CONDITION_ITEM].fill_with */
extern void T2131f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_CONDITION_ITEM].extend */
extern void T2131f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].resize */
extern void T1926f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM].aliased_resized_area */
extern T0* T2130s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_CONDITION_ITEM].aliased_resized_area */
extern T0* T2131f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].new_capacity */
extern T6 T1926f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].extendible */
extern T1 T1926f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM_PARSER.new_build_condition */
extern T0* T85f184(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_build_condition */
extern T0* T780f48(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_BUILD_CONDITION.make */
extern T0* T1494c8(TC* ac, T0* a1);
/* ET_ECF_BUILD_CONDITION.make_excluded */
extern T0* T1494c7(TC* ac, T0* a1);
/* ET_ECF_AST_FACTORY.new_anded_conditions */
extern T0* T780f46(TC* ac, T0* C);
/* ET_ECF_ANDED_CONDITIONS.make_empty */
extern T0* T1491c6(TC* ac);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].make */
extern T0* T1926c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].set_internal_cursor */
extern void T1926f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].new_cursor */
extern T0* T1926f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION_ITEM].make */
extern T0* T2132c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM].make */
extern T0* T2130s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_CONDITION_ITEM].make_empty */
extern T0* T2131c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM].default_create */
extern T0* T2130c3(TC* ac);
/* ET_ECF_AST_FACTORY.new_adapted_precompiled_library */
extern T0* T780f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.make */
extern T0* T1471c19(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.make_adapted_library */
extern void T1471f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.default_read_only_value */
extern T1 T1471f18(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_library */
extern T0* T81s917(TC* ac);
/* ET_LIBRARY.make */
extern T0* T203c106(TC* ac, T0* a1, T0* a2);
/* ET_LIBRARY.make_from_system */
extern void T203f107(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.set_kernel_types */
extern void T203f111(TC* ac, T0* C);
/* ET_LIBRARY.set_wide_character_type */
extern void T203f153(TC* ac, T0* C);
/* ET_LIBRARY.tokens */
extern T0* T203s100(TC* ac);
/* ET_LIBRARY.set_typed_pointer_type */
extern void T203f152(TC* ac, T0* C);
/* ET_LIBRARY.set_type_type */
extern void T203f151(TC* ac, T0* C);
/* ET_LIBRARY.set_system_string_type */
extern void T203f150(TC* ac, T0* C);
/* ET_LIBRARY.set_system_object_type */
extern void T203f149(TC* ac, T0* C);
/* ET_LIBRARY.set_string_type */
extern void T203f148(TC* ac, T0* C);
/* ET_LIBRARY.set_string_32_type */
extern void T203f147(TC* ac, T0* C);
/* ET_LIBRARY.set_string_8_type */
extern void T203f146(TC* ac, T0* C);
/* ET_LIBRARY.set_special_type */
extern void T203f145(TC* ac, T0* C);
/* ET_LIBRARY.set_routine_type */
extern void T203f144(TC* ac, T0* C);
/* ET_LIBRARY.set_real_64_type */
extern void T203f143(TC* ac, T0* C);
/* ET_LIBRARY.set_real_32_type */
extern void T203f142(TC* ac, T0* C);
/* ET_LIBRARY.set_real_type */
extern void T203f141(TC* ac, T0* C);
/* ET_LIBRARY.set_procedure_type */
extern void T203f140(TC* ac, T0* C);
/* ET_LIBRARY.set_predicate_type */
extern void T203f139(TC* ac, T0* C);
/* ET_LIBRARY.set_pointer_type */
extern void T203f138(TC* ac, T0* C);
/* ET_LIBRARY.set_natural_64_type */
extern void T203f137(TC* ac, T0* C);
/* ET_LIBRARY.set_natural_32_type */
extern void T203f136(TC* ac, T0* C);
/* ET_LIBRARY.set_natural_16_type */
extern void T203f135(TC* ac, T0* C);
/* ET_LIBRARY.set_natural_8_type */
extern void T203f134(TC* ac, T0* C);
/* ET_LIBRARY.set_natural_type */
extern void T203f133(TC* ac, T0* C);
/* ET_LIBRARY.set_iterable_type */
extern void T203f132(TC* ac, T0* C);
/* ET_LIBRARY.set_ise_exception_manager_type */
extern void T203f131(TC* ac, T0* C);
/* ET_LIBRARY.set_integer_64_type */
extern void T203f130(TC* ac, T0* C);
/* ET_LIBRARY.set_integer_32_type */
extern void T203f129(TC* ac, T0* C);
/* ET_LIBRARY.set_integer_16_type */
extern void T203f128(TC* ac, T0* C);
/* ET_LIBRARY.set_integer_8_type */
extern void T203f127(TC* ac, T0* C);
/* ET_LIBRARY.set_integer_type */
extern void T203f126(TC* ac, T0* C);
/* ET_LIBRARY.set_immutable_string_32_type */
extern void T203f125(TC* ac, T0* C);
/* ET_LIBRARY.set_immutable_string_8_type */
extern void T203f124(TC* ac, T0* C);
/* ET_LIBRARY.set_function_type */
extern void T203f123(TC* ac, T0* C);
/* ET_LIBRARY.set_exception_manager_type */
extern void T203f122(TC* ac, T0* C);
/* ET_LIBRARY.set_exception_type */
extern void T203f121(TC* ac, T0* C);
/* ET_LIBRARY.set_double_type */
extern void T203f120(TC* ac, T0* C);
/* ET_LIBRARY.set_character_32_type */
extern void T203f119(TC* ac, T0* C);
/* ET_LIBRARY.set_character_8_type */
extern void T203f118(TC* ac, T0* C);
/* ET_LIBRARY.set_character_type */
extern void T203f117(TC* ac, T0* C);
/* ET_LIBRARY.set_boolean_type */
extern void T203f116(TC* ac, T0* C);
/* ET_LIBRARY.set_array_type */
extern void T203f115(TC* ac, T0* C);
/* ET_LIBRARY.set_tuple_type */
extern void T203f114(TC* ac, T0* C);
/* ET_LIBRARY.set_none_type */
extern void T203f113(TC* ac, T0* C);
/* ET_LIBRARY.set_any_type */
extern void T203f112(TC* ac, T0* C);
/* ET_LIBRARY.make_adapted */
extern void T203f110(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.default_read_only_value */
extern T1 T203f91(TC* ac, T0* C);
/* ET_LIBRARY.set_unknown_kernel_types */
extern void T203f109(TC* ac, T0* C);
/* ET_LIBRARY.initialize */
extern void T203f108(TC* ac, T0* C);
/* ET_LIBRARY.initialize */
extern void T203f108p1(TC* ac, T0* C);
/* ET_LIBRARY.class_name_tester */
extern T0* T203s90(TC* ac);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.tokens */
extern T0* T1471s17(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_actions */
extern T0* T85f117(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].force_last */
extern void T1470f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ACTION].force */
extern void T1913s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ACTION].fill_with */
extern void T1914f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ACTION].extend */
extern void T1914f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].resize */
extern void T1470f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ACTION].aliased_resized_area */
extern T0* T1913s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ACTION].aliased_resized_area */
extern T0* T1914f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].new_capacity */
extern T6 T1470f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].extendible */
extern T1 T1470f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_actions */
extern T0* T780f23(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].make */
extern T0* T1470c9(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].set_internal_cursor */
extern void T1470f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].new_cursor */
extern T0* T1470f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ACTION].make */
extern T0* T1915c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ACTION].make */
extern T0* T1913s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_ACTION].make_empty */
extern T0* T1914c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ACTION].default_create */
extern T0* T1913c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_action */
extern T0* T85f141(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f141ot1(TC* ac, T0* a1);
extern T1 T85f141ot2(TC* ac, T0* a1);
/* ET_ECF_ACTION.set_conditions */
extern void T1483f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_ACTION.set_working_directory */
extern void T1483f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_ACTION.set_must_succeed */
extern void T1483f8(TC* ac, T0* C, T1 a1);
/* ET_ECF_ACTION.set_description */
extern void T1483f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_action */
extern T0* T780f39(TC* ac, T0* C, T0* a1);
/* ET_ECF_ACTION.make */
extern T0* T1483c6(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_options */
extern void T85f249(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T85f249ot1(TC* ac, T0* a1);
extern T1 T85f249ot2(TC* ac, T0* a1);
/* ET_ECF_OPTIONS.set_description */
extern void T1042f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_warning */
extern void T85f263(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_OPTIONS.set_primary_warning_value */
extern void T1042f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_warning_value */
extern T0* T1042f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.ecf_1_21_0 */
extern T0* T85s67(TC* ac);
/* ET_ECF_LIBRARY.ecf_version */
extern T0* T802f4(TC* ac, T0* C);
/* ET_ECF_SYSTEM_CONFIG.ecf_version */
extern T0* T801f5(TC* ac, T0* C);
/* ET_ECF_SYSTEM.ecf_version */
extern T0* T87f105(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.add_debug */
extern void T85f262(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_OPTIONS.set_primary_debug_value */
extern void T1042f18(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_debug_value */
extern T0* T1042f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_assertions */
extern void T85f261(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T85f261ot1(TC* ac, T0* a1);
/* ET_ECF_OPTIONS.set_primary_assertion_value */
extern void T1042f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_assertion_value */
extern T0* T1042f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_mappings */
extern T0* T85f114(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_mapping */
extern void T85f254(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_class_mappings */
extern T0* T780f22(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_adapted_libraries */
extern T0* T85f112(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ADAPTED_LIBRARIES.put_last */
extern void T1459f6(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].force_last */
extern void T1902f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].force */
extern void T2092s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].fill_with */
extern void T2091f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].extend */
extern void T2091f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].resize */
extern void T1902f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T2092s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T2091f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].new_capacity */
extern T6 T1902f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].extendible */
extern T1 T1902f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_adapted_libraries */
extern T0* T780f21(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.make */
extern T0* T1459c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].put_last */
extern void T1902f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1902c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].set_internal_cursor */
extern void T1902f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].new_cursor */
extern T0* T1902f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T2093c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T2092s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].make_empty */
extern T0* T2091c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].default_create */
extern T0* T2092c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_adapted_library */
extern T0* T85f140(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_adapted_library */
extern T0* T85f140ac1(TC* ac, T0* a1);
extern T1 T85f140ot1(TC* ac, T0* a1);
extern T1 T85f140ot2(TC* ac, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_notes */
extern void T821f32(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_conditions */
extern void T821f31(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_visible_classes */
extern void T821f30(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_class_renamings */
extern void T821f29(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_class_options */
extern void T821f28(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_options */
extern void T821f27(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_use_application_options */
extern void T821f26(TC* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_LIBRARY.set_read_only */
extern void T821f25(TC* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_LIBRARY.set_classname_prefix */
extern void T821f24(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_description */
extern void T821f23(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_adapted_library */
extern T0* T780f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_LIBRARY.make */
extern T0* T821c22(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_LIBRARY.make_adapted_library */
extern void T821f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_LIBRARY.default_read_only_value */
extern T1 T821f18(TC* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.tokens */
extern T0* T821s17(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_override_clusters */
extern T0* T85f110(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_AST_FACTORY.new_clusters */
extern T0* T780f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.make */
extern T0* T829c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].put_last */
extern void T1635f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_override_cluster */
extern T0* T85f139(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_override_cluster */
extern T0* T85f139ac1(TC* ac, T0* a1);
extern T1 T85f139ot1(TC* ac, T0* a1);
extern T1 T85f139ot2(TC* ac, T0* a1);
/* ET_ECF_CLUSTER.set_conditions */
extern void T89f85(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_conditioned_file_rules */
extern void T89f78(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_conditioned_subclusters */
extern void T89f77(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_provider_groups */
extern T0* T85f170(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_provider_group */
extern void T85f257(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_provider_groups */
extern T0* T780f45(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_overridden_group */
extern T0* T85f177(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.set_description */
extern void T89f72(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_cluster */
extern T0* T780f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.new_file_rules */
extern T0* T85f108(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_FILE_RULES.put_last */
extern void T1461f5(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].force_last */
extern void T1904f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].force */
extern void T2097s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_FILE_RULE].fill_with */
extern void T2098f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_FILE_RULE].extend */
extern void T2098f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].resize */
extern void T1904f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T2097s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T2098f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].new_capacity */
extern T6 T1904f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].extendible */
extern T1 T1904f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_file_rules */
extern T0* T780f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.make */
extern T0* T1461c4(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].put_last */
extern void T1904f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].make */
extern T0* T1904c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].set_internal_cursor */
extern void T1904f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].new_cursor */
extern T0* T1904f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE].make */
extern T0* T2099c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].make */
extern T0* T2097s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_FILE_RULE].make_empty */
extern T0* T2098c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].default_create */
extern T0* T2097c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_file_rule */
extern T0* T85f138(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f138ot1(TC* ac, T0* a1);
/* ET_ECF_FILE_RULE.set_description */
extern void T1482f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULE.set_conditions */
extern void T1482f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_file_rule */
extern T0* T780f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_FILE_RULE.make */
extern T0* T1482c11(TC* ac, T0* a1, T0* a2);
/* ET_ECF_FILE_RULE.compiled_regexp */
extern T0* T1482f7(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].forth */
extern void T854f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].put_last */
extern void T1916f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].force */
extern void T2124s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].fill_with */
extern void T2125f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].extend */
extern void T2125f7(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_compiled */
extern T1 T107f308(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].item */
extern T0* T854f6(TC* ac, T0* C);
/* ET_ECF_FILE_RULE.operating_system */
extern T0* T1482s8(TC* ac);
/* DS_HASH_SET_CURSOR [STRING_8].start */
extern void T854f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1916c9(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].set_internal_cursor */
extern void T1916f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].new_cursor */
extern T0* T1916f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T2126c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T2124s1(TC* ac, T6 a1);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].make_empty */
extern T0* T2125c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].default_create */
extern T0* T2124c2(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_resources */
extern T0* T85f106(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_RESOURCES.put_last */
extern void T1469f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].force_last */
extern void T1912f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE].force */
extern void T2121s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_RESOURCE].fill_with */
extern void T2122f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_RESOURCE].extend */
extern void T2122f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].resize */
extern void T1912f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE].aliased_resized_area */
extern T0* T2121s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_RESOURCE].aliased_resized_area */
extern T0* T2122f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].new_capacity */
extern T6 T1912f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].extendible */
extern T1 T1912f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_resources */
extern T0* T780f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCES.make */
extern T0* T1469c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].put_last */
extern void T1912f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].make */
extern T0* T1912c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].set_internal_cursor */
extern void T1912f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].new_cursor */
extern T0* T1912f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_RESOURCE].make */
extern T0* T2123c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE].make */
extern T0* T2121s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_RESOURCE].make_empty */
extern T0* T2122c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE].default_create */
extern T0* T2121c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_resource */
extern T0* T85f137(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f137ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCE.set_conditions */
extern void T1481f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCE.set_description */
extern void T1481f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_resource */
extern T0* T780f36(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCE.make */
extern T0* T1481c9(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_objects */
extern T0* T85f104(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_OBJECTS.put_last */
extern void T1468f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].force_last */
extern void T1911f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].force */
extern void T2118s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].fill_with */
extern void T2119f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].extend */
extern void T2119f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].resize */
extern void T1911f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T2118s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T2119f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].new_capacity */
extern T6 T1911f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].extendible */
extern T1 T1911f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_objects */
extern T0* T780f18(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECTS.make */
extern T0* T1468c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].put_last */
extern void T1911f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1911c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].set_internal_cursor */
extern void T1911f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].new_cursor */
extern T0* T1911f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T2120c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T2118s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].make_empty */
extern T0* T2119c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].default_create */
extern T0* T2118c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_object */
extern T0* T85f136(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f136ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_OBJECT.set_conditions */
extern void T1480f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECT.set_description */
extern void T1480f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_object */
extern T0* T780f35(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECT.make */
extern T0* T1480c9(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_makes */
extern T0* T85f102(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_MAKES.put_last */
extern void T1467f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].force_last */
extern void T1910f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE].force */
extern void T2115s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_MAKE].fill_with */
extern void T2116f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_MAKE].extend */
extern void T2116f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].resize */
extern void T1910f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE].aliased_resized_area */
extern T0* T2115s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_MAKE].aliased_resized_area */
extern T0* T2116f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].new_capacity */
extern T6 T1910f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].extendible */
extern T1 T1910f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_makes */
extern T0* T780f17(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_MAKES.make */
extern T0* T1467c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].put_last */
extern void T1910f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].make */
extern T0* T1910c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].set_internal_cursor */
extern void T1910f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].new_cursor */
extern T0* T1910f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_MAKE].make */
extern T0* T2117c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE].make */
extern T0* T2115s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_MAKE].make_empty */
extern T0* T2116c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE].default_create */
extern T0* T2115c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_make */
extern T0* T85f135(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f135ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_MAKE.set_conditions */
extern void T1479f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_MAKE.set_description */
extern void T1479f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_make */
extern T0* T780f34(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_MAKE.make */
extern T0* T1479c9(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_linker_flags */
extern T0* T85f100(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_LINKER_FLAGS.put_last */
extern void T1466f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].force_last */
extern void T1909f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG].force */
extern void T2112s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG].fill_with */
extern void T2113f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG].extend */
extern void T2113f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].resize */
extern void T1909f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG].aliased_resized_area */
extern T0* T2112s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG].aliased_resized_area */
extern T0* T2113f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].new_capacity */
extern T6 T1909f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].extendible */
extern T1 T1909f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_linker_flags */
extern T0* T780f16(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAGS.make */
extern T0* T1466c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].put_last */
extern void T1909f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].make */
extern T0* T1909c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].set_internal_cursor */
extern void T1909f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].new_cursor */
extern T0* T1909f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LINKER_FLAG].make */
extern T0* T2114c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG].make */
extern T0* T2112s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG].make_empty */
extern T0* T2113c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG].default_create */
extern T0* T2112c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_linker_flag */
extern T0* T85f134(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f134ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAG.set_conditions */
extern void T1478f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAG.set_description */
extern void T1478f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_linker_flag */
extern T0* T780f33(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAG.make */
extern T0* T1478c5(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_libraries */
extern T0* T85f98(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_LIBRARIES.put_last */
extern void T1465f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].force_last */
extern void T1908f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].force */
extern void T2109s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].fill_with */
extern void T2110f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].extend */
extern void T2110f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].resize */
extern void T1908f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T2109s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T2110f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].new_capacity */
extern T6 T1908f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].extendible */
extern T1 T1908f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_libraries */
extern T0* T780f15(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARIES.make */
extern T0* T1465c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].put_last */
extern void T1908f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1908c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].set_internal_cursor */
extern void T1908f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].new_cursor */
extern T0* T1908f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T2111c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T2109s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].make_empty */
extern T0* T2110c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].default_create */
extern T0* T2109c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_library */
extern T0* T85f133(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f133ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.set_conditions */
extern void T1477f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.set_description */
extern void T1477f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_library */
extern T0* T780f32(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.make */
extern T0* T1477c9(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_includes */
extern T0* T85f96(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_INCLUDES.put_last */
extern void T1464f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].force_last */
extern void T1907f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].force */
extern void T2106s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].fill_with */
extern void T2107f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].extend */
extern void T2107f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].resize */
extern void T1907f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T2106s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T2107f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].new_capacity */
extern T6 T1907f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].extendible */
extern T1 T1907f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_includes */
extern T0* T780f14(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDES.make */
extern T0* T1464c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].put_last */
extern void T1907f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1907c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].set_internal_cursor */
extern void T1907f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].new_cursor */
extern T0* T1907f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T2108c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T2106s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].make_empty */
extern T0* T2107c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].default_create */
extern T0* T2106c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_include */
extern T0* T85f132(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f132ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDE.set_conditions */
extern void T1476f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDE.set_description */
extern void T1476f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_include */
extern T0* T780f31(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDE.make */
extern T0* T1476c9(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_cflags */
extern T0* T85f94(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_CFLAGS.put_last */
extern void T1463f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].force_last */
extern void T1906f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG].force */
extern void T2103s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_CFLAG].fill_with */
extern void T2104f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_CFLAG].extend */
extern void T2104f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].resize */
extern void T1906f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG].aliased_resized_area */
extern T0* T2103s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_CFLAG].aliased_resized_area */
extern T0* T2104f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].new_capacity */
extern T6 T1906f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].extendible */
extern T1 T1906f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_cflags */
extern T0* T780f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_CFLAGS.make */
extern T0* T1463c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].put_last */
extern void T1906f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].make */
extern T0* T1906c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].set_internal_cursor */
extern void T1906f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].new_cursor */
extern T0* T1906f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_CFLAG].make */
extern T0* T2105c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG].make */
extern T0* T2103s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_CFLAG].make_empty */
extern T0* T2104c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG].default_create */
extern T0* T2103c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_cflag */
extern T0* T85f131(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f131ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_CFLAG.set_conditions */
extern void T1475f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_CFLAG.set_description */
extern void T1475f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_cflag */
extern T0* T780f30(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_CFLAG.make */
extern T0* T1475c5(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_namespaces */
extern T0* T85f92(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_NAMESPACES.put_last */
extern void T1462f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].force_last */
extern void T1905f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NAMESPACE].force */
extern void T2100s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_NAMESPACE].fill_with */
extern void T2101f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_NAMESPACE].extend */
extern void T2101f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].resize */
extern void T1905f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NAMESPACE].aliased_resized_area */
extern T0* T2100s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_NAMESPACE].aliased_resized_area */
extern T0* T2101f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].new_capacity */
extern T6 T1905f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].extendible */
extern T1 T1905f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_namespaces */
extern T0* T780f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_NAMESPACES.make */
extern T0* T1462c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].put_last */
extern void T1905f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].make */
extern T0* T1905c9(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].set_internal_cursor */
extern void T1905f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].new_cursor */
extern T0* T1905f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_NAMESPACE].make */
extern T0* T2102c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NAMESPACE].make */
extern T0* T2100s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_NAMESPACE].make_empty */
extern T0* T2101c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NAMESPACE].default_create */
extern T0* T2100c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_namespace */
extern T0* T85f130(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f130ot1(TC* ac, T0* a1);
extern T1 T85f130ot2(TC* ac, T0* a1);
/* ET_ECF_NAMESPACE.set_notes */
extern void T1474f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_NAMESPACE.set_class_renamings */
extern void T1474f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_NAMESPACE.set_classname_prefix */
extern void T1474f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_NAMESPACE.set_description */
extern void T1474f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_namespace */
extern T0* T780f29(TC* ac, T0* C, T0* a1);
/* ET_ECF_NAMESPACE.make */
extern T0* T1474c6(TC* ac, T0* a1);
/* ET_ECF_TARGET.set_description */
extern void T88f35(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_clusters */
extern T0* T85f90(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_SYSTEM_PARSER.new_cluster */
extern T0* T85f129(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_cluster */
extern T0* T85f129ac1(TC* ac, T0* a1);
extern T1 T85f129ot1(TC* ac, T0* a1);
extern T1 T85f129ot2(TC* ac, T0* a1);
/* ET_ECF_CLUSTER.set_notes */
extern void T89f86(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_capabilities */
extern void T85f248(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T85f248ot1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assemblies */
extern T0* T85f87(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T1460f6(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T1903f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T2095s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T2094f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T2094f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T1903f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T2095s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T2094f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1903f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T1903f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_adapted_dotnet_assemblies */
extern T0* T780f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.make */
extern T0* T1460c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].put_last */
extern void T1903f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1903c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1903f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1903f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T2096c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T2095s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T2094c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T2095c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assembly */
extern T0* T85f128(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assembly */
extern T0* T85f128ac1(TC* ac, T0* a1);
extern T1 T85f128ot1(TC* ac, T0* a1);
extern T1 T85f128ot2(TC* ac, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_notes */
extern void T826f36(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_conditions */
extern void T826f35(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_class_renamings */
extern void T826f34(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_class_options */
extern void T826f33(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_options */
extern void T826f32(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_read_only */
extern void T826f31(TC* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T826f30(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_version */
extern void T826f29(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_name */
extern void T826f28(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_key */
extern void T826f27(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_culture */
extern void T826f26(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_description */
extern void T826f25(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_adapted_dotnet_assembly */
extern T0* T780f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make */
extern T0* T826c24(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make_adapted_dotnet_assembly */
extern void T826f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T826f20(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_dotnet_assembly */
extern T0* T81s918(TC* ac);
/* ET_DOTNET_ASSEMBLY.make */
extern T0* T207c105(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.make_from_system */
extern void T207f106(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.set_kernel_types */
extern void T207f110(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T207f152(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T207f151(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_type_type */
extern void T207f150(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_system_string_type */
extern void T207f149(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_system_object_type */
extern void T207f148(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_type */
extern void T207f147(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_32_type */
extern void T207f146(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_8_type */
extern void T207f145(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_special_type */
extern void T207f144(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_routine_type */
extern void T207f143(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_64_type */
extern void T207f142(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_32_type */
extern void T207f141(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_type */
extern void T207f140(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_procedure_type */
extern void T207f139(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_predicate_type */
extern void T207f138(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_pointer_type */
extern void T207f137(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T207f136(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T207f135(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T207f134(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T207f133(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_type */
extern void T207f132(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_iterable_type */
extern void T207f131(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T207f130(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T207f129(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T207f128(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T207f127(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T207f126(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_type */
extern void T207f125(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T207f124(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_immutable_string_8_type */
extern void T207f123(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_function_type */
extern void T207f122(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T207f121(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_exception_type */
extern void T207f120(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_double_type */
extern void T207f119(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_32_type */
extern void T207f118(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_8_type */
extern void T207f117(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_type */
extern void T207f116(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_boolean_type */
extern void T207f115(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_array_type */
extern void T207f114(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_tuple_type */
extern void T207f113(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_none_type */
extern void T207f112(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_any_type */
extern void T207f111(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.make_adapted */
extern void T207f109(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T207f90(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T207f108(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.initialize */
extern void T207f107(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T207s89(TC* ac);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.tokens */
extern T0* T826s19(TC* ac);
/* ET_ECF_TARGET.set_parent */
extern void T88f34(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.execution_environment */
extern T0* T88s29(TC* ac);
/* ET_ECF_VARIABLES.set_secondary_variables */
extern void T92f22(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET_PARENT.make */
extern T0* T813c4(TC* ac, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.set_secondary_options */
extern void T1042f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.set_secondary_capabilities */
extern void T91f17(TC* ac, T0* C, T0* a1);
/* ET_ECF_SETTINGS.set_secondary_settings */
extern void T90f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_target */
extern T0* T780f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.make */
extern T0* T88c33(TC* ac, T0* a1, T0* a2);
/* ET_ECF_CAPABILITIES.make */
extern T0* T91c13(TC* ac);
/* Creation of agent #1 in feature ET_ECF_CAPABILITIES.make */
extern T0* T91f13ac1(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].set_hash_function */
extern void T835f41(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.string_ */
extern T0* T91s8(TC* ac);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].set_key_equality_tester */
extern void T835f40(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.case_insensitive_string_equality_tester */
extern T0* T91s4(TC* ac);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_map */
extern T0* T835c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_with_equality_testers */
extern void T835f43(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_sparse_container */
extern void T835f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].set_internal_cursor */
extern void T835f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].new_cursor */
extern T0* T835f28(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].make */
extern T0* T1266c10(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_slots */
extern void T835f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_clashes */
extern void T835f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_key_storage */
extern void T835f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_item_storage */
extern void T835f56(TC* ac, T0* C, T6 a1);
/* ET_ECF_SETTINGS.make */
extern T0* T90c7(TC* ac);
/* Creation of agent #1 in feature ET_ECF_SETTINGS.make */
extern T0* T90f7ac1(TC* ac, T0* a1);
/* ET_ECF_SETTINGS.string_ */
extern T0* T90s3(TC* ac);
/* ET_ECF_SETTINGS.case_insensitive_string_equality_tester */
extern T0* T90s5(TC* ac);
/* ET_ECF_VARIABLES.make */
extern T0* T92c20(TC* ac);
/* Creation of agent #1 in feature ET_ECF_VARIABLES.make */
extern T0* T92f20ac1(TC* ac, T0* a1);
/* ET_ECF_VARIABLES.case_insensitive_string_equality_tester */
extern T0* T92s4(TC* ac);
/* ET_ECF_VARIABLES.execution_environment */
extern T0* T92s3(TC* ac);
/* ET_ECF_LIBRARY.set_notes */
extern void T802f125(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_notes */
extern void T801f16(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_notes */
extern void T87f221(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_notes */
extern T0* T85f46(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].force_last */
extern void T1043f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT].force */
extern void T1648s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_NOTE_ELEMENT].fill_with */
extern void T1649f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_NOTE_ELEMENT].extend */
extern void T1649f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].resize */
extern void T1043f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT].aliased_resized_area */
extern T0* T1648s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_NOTE_ELEMENT].aliased_resized_area */
extern T0* T1649f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].new_capacity */
extern T6 T1043f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].extendible */
extern T1 T1043f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_notes */
extern T0* T780f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].make */
extern void T1043f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].make */
extern T0* T1043c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].set_internal_cursor */
extern void T1043f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].new_cursor */
extern T0* T1043f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_NOTE_ELEMENT].make */
extern T0* T1650c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT].make */
extern T0* T1648s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_NOTE_ELEMENT].make_empty */
extern T0* T1649c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT].default_create */
extern T0* T1648c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_note_element */
extern T0* T85f79(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f79ot1(TC* ac, T0* a1);
extern T1 T85f79ot2(TC* ac, T0* a1);
/* ET_ECF_NOTE_ELEMENT.set_content */
extern void T1458f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_NOTE_ELEMENT.add_element */
extern void T1458f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_NOTE_ELEMENT.add_attribute */
extern void T1458f8(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_note */
extern T0* T780f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_NOTE_ELEMENT.make */
extern T0* T1458c7(TC* ac, T0* a1);
/* Creation of agent #1 in feature ET_ECF_NOTE_ELEMENT.make */
extern T0* T1458f7ac1(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].make_default */
extern T0* T1043c14(TC* ac);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].default_capacity */
extern T6 T1043f9(TC* ac, T0* C);
/* ET_ECF_NOTE_ELEMENT.string_ */
extern T0* T1458s6(TC* ac);
/* ET_ECF_NOTE_ELEMENT.case_insensitive_string_equality_tester */
extern T0* T1458s5(TC* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map_default */
extern T0* T827c93(TC* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].default_capacity */
extern T6 T827f45(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_description */
extern void T802f124(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_description */
extern void T801f15(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_description */
extern void T87f220(TC* ac, T0* C, T0* a1);
/* XM_ELEMENT.text */
extern T0* T785f14(TC* ac, T0* C);
extern T1 T785f14ot1(TC* ac, T0* a1);
/* XM_ELEMENT.string_ */
extern T0* T785s15(TC* ac);
/* ET_ECF_SYSTEM_PARSER.string_ */
extern T0* T85s20(TC* ac);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].item */
extern T0* T1045f8(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].start */
extern void T1045f11(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_start */
extern void T1622f14(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_off */
extern T1 T1622f6(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].off */
extern T1 T1045f9(TC* ac, T0* C);
/* XM_ELEMENT.new_cursor */
extern T0* T785f6(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].new_cursor */
extern T0* T1622f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].make */
extern T0* T1045c10(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_options */
extern T0* T85s43(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_options_1_0_0 */
extern T0* T85s78(TC* ac);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_0_0 */
extern void T85s247(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_5_0 */
extern void T85s246(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_9_0 */
extern void T85s245(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_11_0 */
extern void T85s244(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_15_0 */
extern void T85s243(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_18_0 */
extern void T85s242(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_21_0 */
extern void T85s241(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_22_0 */
extern void T85s240(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_latest */
extern void T85s260(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_options_1_5_0 */
extern T0* T85s77(TC* ac);
/* ET_ECF_SYSTEM_PARSER.default_options_1_9_0 */
extern T0* T85s75(TC* ac);
/* ET_ECF_SYSTEM_PARSER.ecf_1_9_0 */
extern T0* T85s74(TC* ac);
/* ET_ECF_SYSTEM_PARSER.default_options_1_11_0 */
extern T0* T85s73(TC* ac);
/* ET_ECF_SYSTEM_PARSER.default_options_1_15_0 */
extern T0* T85s72(TC* ac);
/* ET_ECF_SYSTEM_PARSER.ecf_1_15_0 */
extern T0* T85s71(TC* ac);
/* ET_ECF_SYSTEM_PARSER.default_options_1_18_0 */
extern T0* T85s70(TC* ac);
/* ET_ECF_SYSTEM_PARSER.ecf_1_18_0 */
extern T0* T85s69(TC* ac);
/* ET_ECF_SYSTEM_PARSER.default_options_1_21_0 */
extern T0* T85s68(TC* ac);
/* ET_ECF_SYSTEM_PARSER.default_options_1_22_0 */
extern T0* T85s66(TC* ac);
/* ET_ECF_SYSTEM_PARSER.ecf_1_22_0 */
extern T0* T85s65(TC* ac);
/* ET_ECF_SYSTEM_PARSER.default_capabilities */
extern T0* T85s42(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_0_0 */
extern T0* T85s64(TC* ac);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_0_0 */
extern void T85s239(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_11_0 */
extern void T85s238(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_13_0 */
extern void T85s237(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_16_0 */
extern void T85s236(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_latest */
extern void T85s259(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_11_0 */
extern T0* T85s63(TC* ac);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_13_0 */
extern T0* T85s61(TC* ac);
/* ET_ECF_SYSTEM_PARSER.ecf_1_13_0 */
extern T0* T85s60(TC* ac);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_16_0 */
extern T0* T85s59(TC* ac);
/* ET_ECF_SYSTEM_PARSER.ecf_1_16_0 */
extern T0* T85s58(TC* ac);
/* ET_ECF_SYSTEM_PARSER.default_settings */
extern T0* T85s41(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_settings_1_0_0 */
extern T0* T85s57(TC* ac);
/* ET_ECF_SYSTEM_PARSER.set_default_settings_1_0_0 */
extern void T85s235(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_settings_1_20_0 */
extern void T85s234(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_settings_latest */
extern void T85s258(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_settings_1_20_0 */
extern T0* T85s56(TC* ac);
/* ET_ECF_SYSTEM_PARSER.ecf_1_20_0 */
extern T0* T85s55(TC* ac);
/* ET_ECF_SYSTEM_PARSER.ecf_latest */
extern T0* T85s40(TC* ac);
/* UT_VERSION.make_latest */
extern T0* T56c20(TC* ac);
/* ET_ECF_LIBRARY.set_ecf_version */
extern void T802f123(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_ecf_version */
extern void T801f14(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_ecf_version */
extern void T87f219(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.ecf_version */
extern T0* T85f39(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_ecf_namespace */
extern void T802f122(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_ecf_namespace */
extern void T801f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_ecf_namespace */
extern void T87f218(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eate_error */
extern void T86f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eate */
extern T0* T828c102(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.attribute_name */
extern T0* T85f24(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].found_item */
extern T0* T791f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].found */
extern T1 T791f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].search */
extern void T791f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].search_position */
extern void T791f56(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eatm_error */
extern void T86f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eatm */
extern T0* T828c101(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_library */
extern T0* T780f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.make */
extern T0* T802c121(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.make_library */
extern void T802f130(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.make_from_system */
extern void T802f131(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.set_kernel_types */
extern void T802f135(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_wide_character_type */
extern void T802f177(TC* ac, T0* C);
/* ET_ECF_LIBRARY.tokens */
extern T0* T802s102(TC* ac);
/* ET_ECF_LIBRARY.set_typed_pointer_type */
extern void T802f176(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_type_type */
extern void T802f175(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_system_string_type */
extern void T802f174(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_system_object_type */
extern void T802f173(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_type */
extern void T802f172(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_32_type */
extern void T802f171(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_8_type */
extern void T802f170(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_special_type */
extern void T802f169(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_routine_type */
extern void T802f168(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_64_type */
extern void T802f167(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_32_type */
extern void T802f166(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_type */
extern void T802f165(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_procedure_type */
extern void T802f164(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_predicate_type */
extern void T802f163(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_pointer_type */
extern void T802f162(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_64_type */
extern void T802f161(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_32_type */
extern void T802f160(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_16_type */
extern void T802f159(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_8_type */
extern void T802f158(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_type */
extern void T802f157(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_iterable_type */
extern void T802f156(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_ise_exception_manager_type */
extern void T802f155(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_64_type */
extern void T802f154(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_32_type */
extern void T802f153(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_16_type */
extern void T802f152(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_8_type */
extern void T802f151(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_type */
extern void T802f150(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_immutable_string_32_type */
extern void T802f149(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_immutable_string_8_type */
extern void T802f148(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_function_type */
extern void T802f147(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_exception_manager_type */
extern void T802f146(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_exception_type */
extern void T802f145(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_double_type */
extern void T802f144(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_32_type */
extern void T802f143(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_8_type */
extern void T802f142(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_type */
extern void T802f141(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_boolean_type */
extern void T802f140(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_array_type */
extern void T802f139(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_tuple_type */
extern void T802f138(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_none_type */
extern void T802f137(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_any_type */
extern void T802f136(TC* ac, T0* C);
/* ET_ECF_LIBRARY.make_adapted */
extern void T802f134(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.default_read_only_value */
extern T1 T802f103(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_unknown_kernel_types */
extern void T802f133(TC* ac, T0* C);
/* ET_ECF_LIBRARY.initialize */
extern void T802f132(TC* ac, T0* C);
/* ET_ECF_LIBRARY.initialize */
extern void T802f132p1(TC* ac, T0* C);
/* ET_ECF_LIBRARY.class_name_tester */
extern T0* T802s120(TC* ac);
/* XM_ELEMENT.attribute_by_name */
extern T0* T785f5(TC* ac, T0* C, T0* a1);
extern T1 T785f5ot1(TC* ac, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].go_after */
extern void T1045f13(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_go_after */
extern void T1622f16(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_after */
extern void T1045f16(TC* ac, T0* C);
/* XM_ELEMENT.attribute_same_name */
extern T1 T785f7(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_string */
extern T1 T785f8(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.string_equality_tester */
extern T0* T785s9(TC* ac);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].forth */
extern void T818f11(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_forth */
extern void T817f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].add_traversing_cursor */
extern void T817f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].set_next_cursor */
extern void T818f15(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].set_position */
extern void T818f14(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].remove_traversing_cursor */
extern void T817f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].set_after */
extern void T818f13(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clashes_item */
extern T6 T817f29(TC* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_eadp_error */
extern void T86f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eadp */
extern T0* T828c100(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ANDED_CONDITIONS.is_capability_supported */
extern T1 T1491f5(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ANDED_CONDITIONS.is_capability_supported */
extern T1 T1491f5p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_PLATFORM_CONDITION.is_capability_supported */
extern T1 T1500f5(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_capability_supported */
extern T1 T1499f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_CONDITION.is_capability_supported */
extern T1 T1498f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CUSTOM_CONDITION.is_capability_supported */
extern T1 T1497f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_VOID_SAFETY_CONDITION.is_capability_supported */
extern T1 T1496f5(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_VOID_SAFETY_CONDITION.is_capability_supported */
extern T0* T1496f5ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_VOID_SAFETY_CONDITION.is_capability_supported */
extern T0* T1496f5ac2(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [STRING_8]].set_rout_disp_final */
extern void T2018f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* DS_HASH_SET [STRING_8].go_after */
extern void T99f80(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_go_after */
extern void T99f83(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].put_last */
extern void T99f79(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].compress */
extern void T99f82(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].move_all_cursors */
extern void T99f84(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_LINKED_LIST [STRING_8].do_all */
extern void T220f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].append_last */
extern void T99f78(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].extend_last */
extern void T99f81(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].extendible */
extern T1 T99f37(TC* ac, T0* C, T6 a1);
/* ET_ECF_VOID_SAFETY_CONDITION.supported_void_safety_capability_values */
extern T0* T1496s9(TC* ac);
/* Creation of agent #1 in feature ET_ECF_VOID_SAFETY_CONDITION.supported_void_safety_capability_values */
extern T0* T1496s9ac1(TC* ac, T0* a1);
/* DS_HASH_SET [STRING_8].set_hash_function */
extern void T99f77(TC* ac, T0* C, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.string_ */
extern T0* T1496s7(TC* ac);
/* ET_ECF_VOID_SAFETY_CONDITION.case_insensitive_string_equality_tester */
extern T0* T1496s8(TC* ac);
/* ET_ECF_CONCURRENCY_CONDITION.is_capability_supported */
extern T1 T1495f5(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.is_capability_supported */
extern T0* T1495f5ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_CONCURRENCY_CONDITION.is_capability_supported */
extern T0* T1495f5ac2(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.supported_concurrency_capability_values */
extern T0* T1495s9(TC* ac);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.supported_concurrency_capability_values */
extern T0* T1495s9ac1(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.string_ */
extern T0* T1495s7(TC* ac);
/* ET_ECF_CONCURRENCY_CONDITION.case_insensitive_string_equality_tester */
extern T0* T1495s8(TC* ac);
/* ET_ECF_BUILD_CONDITION.is_capability_supported */
extern T1 T1494f5(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_capability_supported */
extern T1 T1503f5(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_capability_supported */
extern T1 T1502f5(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_PLATFORM_CONDITION.is_capability_aware */
extern T1 T1500f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_capability_aware */
extern T1 T1499f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_CONDITION.is_capability_aware */
extern T1 T1498f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.is_capability_aware */
extern T1 T1497f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.is_capability_aware */
extern T1 T1496f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.is_capability_aware */
extern T1 T1495f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_BUILD_CONDITION.is_capability_aware */
extern T1 T1494f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_capability_aware */
extern T1 T1503f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_capability_aware */
extern T1 T1502f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].item */
extern T0* T1926f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_ORED_CONDITIONS.is_capability_supported */
extern T1 T1490f5(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].item */
extern T0* T1925f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_ORED_CONDITIONS.is_capability_supported */
extern T1 T1490f5p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CAPABILITIES.is_capability_supported */
extern T1 T91f9(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].found_item */
extern T0* T2020f24(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].item_storage_item */
extern T0* T2020f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].found */
extern T1 T2020f25(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].search */
extern void T2020f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].search_position */
extern void T2020f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].hash_position */
extern T6 T2020f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].key_storage_item */
extern T0* T2020f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].clashes_item */
extern T6 T2020f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].slots_item */
extern T6 T2020f23(TC* ac, T0* C, T6 a1);
/* ET_ECF_CAPABILITIES.capability_order */
extern T0* T91f12(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_CAPABILITIES.capability_order */
extern T0* T91f12ac1(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].put_last */
extern void T2020f36(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].key_storage_put */
extern void T2020f44(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].slots_put */
extern void T2020f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].clashes_put */
extern void T2020f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].compress */
extern void T2020f41(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].slots_wipe_out */
extern void T2020f50(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].clashes_wipe_out */
extern void T2020f49(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].key_storage_keep_head */
extern void T2020f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].item_storage_keep_head */
extern void T2020f47(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]].keep_head */
extern void T2170f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]].set_count */
extern void T2170f8(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].move_all_cursors */
extern void T2020f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].set_position */
extern void T2174f6(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].item_storage_put */
extern void T2020f40(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]].force */
extern void T2173s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]].fill_with */
extern void T2170f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]].extend */
extern void T2170f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].unset_found_item */
extern void T2020f39(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].put_last */
extern void T1029f60(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].compress */
extern void T1029f61(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_wipe_out */
extern void T1029f66(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_wipe_out */
extern void T1029f65(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_keep_head */
extern void T1029f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_keep_head */
extern void T1029f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].move_all_cursors */
extern void T1029f62(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8].set_position */
extern void T1647f6(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_hash_function */
extern void T1029f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].set_hash_function */
extern void T2020f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].set_key_equality_tester */
extern void T2020f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_map */
extern T0* T2020c32(TC* ac, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_with_equality_testers */
extern void T2020f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_sparse_container */
extern void T2020f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].set_internal_cursor */
extern void T2020f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].new_cursor */
extern T0* T2020f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make */
extern T0* T2174c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_slots */
extern void T2020f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].new_modulus */
extern T6 T2020f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_clashes */
extern void T2020f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_key_storage */
extern void T2020f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_item_storage */
extern void T2020f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]].make */
extern T0* T2173s1(TC* ac, T6 a1);
/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]].make_empty */
extern T0* T2170c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]].default_create */
extern T0* T2173c2(TC* ac);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].key */
extern T0* T818f8(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_key */
extern T0* T817f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].key_storage_item */
extern T0* T817f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].after */
extern T1 T818f4(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].new_iterator */
extern T0* T817f23(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].start */
extern void T818f12(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_start */
extern void T817f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_off */
extern T1 T817f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].off */
extern T1 T818f9(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].is_empty */
extern T1 T817f35(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].new_cursor */
extern T0* T817f25(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].make */
extern T0* T818c10(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.valid_capabilities_latest */
extern T0* T85s28(TC* ac);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.valid_capabilities_latest */
extern T0* T85s28ac1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.void_safety_detection_capability_value_regexp */
extern T0* T85s37(TC* ac);
/* ET_ECF_SYSTEM_PARSER.concurrency_capability_value_regexp */
extern T0* T85s36(TC* ac);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].force_last */
extern void T817f44(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].key_storage_put */
extern void T817f52(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].slots_put */
extern void T817f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clashes_put */
extern void T817f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].slots_item */
extern T6 T817f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].hash_position */
extern T6 T817f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].resize */
extern void T817f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clashes_resize */
extern void T817f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].special_integer_ */
extern T0* T817s30(TC* ac);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].key_storage_resize */
extern void T817f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].item_storage_resize */
extern void T817f55(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].aliased_resized_area */
extern T0* T1258s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].aliased_resized_area */
extern T0* T1259f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].slots_resize */
extern void T817f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].new_modulus */
extern T6 T817f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].new_capacity */
extern T6 T817f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].item_storage_put */
extern void T817f48(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].force */
extern void T1258s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].fill_with */
extern void T1259f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].extend */
extern void T1259f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].search_position */
extern void T817f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].unset_found_item */
extern void T817f46(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.catcall_detection_capability_value_regexp */
extern T0* T85s35(TC* ac);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].set_hash_function */
extern void T817f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].set_key_equality_tester */
extern void T817f42(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].internal_set_equality_tester */
extern void T1257f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.case_insensitive_string_equality_tester */
extern T0* T85s14(TC* ac);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_map */
extern T0* T817c41(TC* ac, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_with_equality_testers */
extern void T817f45(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_sparse_container */
extern void T817f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].set_internal_cursor */
extern void T817f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_slots */
extern void T817f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_clashes */
extern void T817f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_key_storage */
extern void T817f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_item_storage */
extern void T817f58(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].make */
extern T0* T1258s2(TC* ac, T6 a1);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].make_empty */
extern T0* T1259c6(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].default_create */
extern T0* T1258c3(TC* ac);
/* ET_ECF_ERROR_HANDLER.report_eabw_error */
extern void T86f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabw */
extern T0* T828c99(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.set_library */
extern void T821f34(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabv_error */
extern void T86f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabv */
extern T0* T828c98(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.pathname */
extern T0* T821f20(TC* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.library */
extern T0* T173f4(TC* ac, T0* C, T6 a1);
/* ET_ADAPTED_LIBRARIES.count */
extern T6 T173f3(TC* ac, T0* C);
/* DS_CELL [detachable ET_ECF_LIBRARY].make */
extern T0* T820c2(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.build_ise_eiffel_to_gobo_uuid_mappings */
extern void T85f230(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].put */
extern void T827f49(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.uuid_from_ecf_file */
extern T0* T85f31(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.uuid_from_ecf_file */
extern T0* T85f31ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.build_config */
extern void T85f233(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_SYSTEM_PARSER.new_redirection_config */
extern T0* T85f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_REDIRECTION_CONFIG.set_ecf_version */
extern void T1047f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_REDIRECTION_CONFIG.set_ecf_namespace */
extern void T1047f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_REDIRECTION_CONFIG.set_message */
extern void T1047f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_REDIRECTION_CONFIG.set_uuid */
extern void T1047f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_redirection_config */
extern T0* T780f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_REDIRECTION_CONFIG.make */
extern T0* T1047c8(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_system_config */
extern T0* T780f3(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_CONFIG.make */
extern T0* T801c12(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_CELL [detachable ET_ECF_CONFIG].put */
extern void T1038f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_system_config */
extern T0* T85f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_CELL [detachable ET_ECF_CONFIG].make */
extern T0* T1038c2(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.make */
extern T0* T87c167(TC* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.make_system */
extern void T87f168(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_kernel_types */
extern void T87f173(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_wide_character_type */
extern void T87f215(TC* ac, T0* C);
/* ET_ECF_SYSTEM.tokens */
extern T0* T87s153(TC* ac);
/* ET_ECF_SYSTEM.set_typed_pointer_type */
extern void T87f214(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_type_type */
extern void T87f213(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_string_type */
extern void T87f212(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_object_type */
extern void T87f211(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_type */
extern void T87f210(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_32_type */
extern void T87f209(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_8_type */
extern void T87f208(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_special_type */
extern void T87f207(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_routine_type */
extern void T87f206(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_64_type */
extern void T87f205(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_32_type */
extern void T87f204(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_type */
extern void T87f203(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_procedure_type */
extern void T87f202(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_predicate_type */
extern void T87f201(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_pointer_type */
extern void T87f200(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_64_type */
extern void T87f199(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_32_type */
extern void T87f198(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_16_type */
extern void T87f197(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_8_type */
extern void T87f196(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_type */
extern void T87f195(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_iterable_type */
extern void T87f194(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_ise_exception_manager_type */
extern void T87f193(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_64_type */
extern void T87f192(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_32_type */
extern void T87f191(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_16_type */
extern void T87f190(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_8_type */
extern void T87f189(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_type */
extern void T87f188(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_immutable_string_32_type */
extern void T87f187(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_immutable_string_8_type */
extern void T87f186(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_function_type */
extern void T87f185(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_exception_manager_type */
extern void T87f184(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_exception_type */
extern void T87f183(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_double_type */
extern void T87f182(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_32_type */
extern void T87f181(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_8_type */
extern void T87f180(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_type */
extern void T87f179(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_boolean_type */
extern void T87f178(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_array_type */
extern void T87f177(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_tuple_type */
extern void T87f176(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_none_type */
extern void T87f175(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_any_type */
extern void T87f174(TC* ac, T0* C);
/* ET_ECF_SYSTEM.make_adapted */
extern void T87f172(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.default_read_only_value */
extern T1 T87f154(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_unknown_kernel_types */
extern void T87f171(TC* ac, T0* C);
/* ET_ECF_SYSTEM.initialize */
extern void T87f169(TC* ac, T0* C);
/* ET_ECF_SYSTEM.initialize */
extern void T87f169p1(TC* ac, T0* C);
/* ET_ECF_SYSTEM.class_name_tester */
extern T0* T87s149(TC* ac);
/* ET_ECF_SYSTEM_PARSER.execution_environment */
extern T0* T85s25(TC* ac);
/* ET_ECF_SYSTEM_PARSER.select_target */
extern void T85f226(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.select_target */
extern T0* T85f226ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.build_system_config */
extern void T85f229(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_CELL [detachable ET_ECF_SYSTEM_CONFIG].put */
extern void T814f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.fill_universe */
extern void T88f56(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T88f56ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAGS.fill_external_linker_flags */
extern void T1466f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_LINKER_FLAGS.fill_external_linker_flags */
extern T0* T1466f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG]].set_rout_disp_final */
extern void T2069f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_LINKER_FLAG.fill_external_linker_flags */
extern void T1478f8(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LINKER_FLAG.add_external_value */
extern void T1478f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LINKER_FLAG.is_enabled */
extern T1 T1478f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_ANDED_CONDITIONS.is_enabled */
extern T1 T1491f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T1 T1500f3(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T0* T1500f3ac1(TC* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST [STRING_8].there_exists */
extern T1 T220f17(TC* ac, T0* C, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.string_ */
extern T0* T1500s7(TC* ac);
/* ET_ECF_PLATFORM_CONDITION.operating_system */
extern T0* T1500s6(TC* ac);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_enabled */
extern T1 T1499f2(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_CONDITION.is_enabled */
extern T1 T1498f2(TC* ac, T0* C, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.is_enabled */
extern T1 T1497f5(TC* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.compile_case_sensitive */
extern T0* T1942c21(TC* ac, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.string_ */
extern T0* T1497s8(TC* ac);
/* ET_ECF_VOID_SAFETY_CONDITION.is_enabled */
extern T1 T1496f3(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_VOID_SAFETY_CONDITION.is_enabled */
extern T0* T1496f3ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_VOID_SAFETY_CONDITION.default_capabilities */
extern T0* T1496s6(TC* ac, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.default_capabilities_1_0_0 */
extern T0* T1496s16(TC* ac);
/* ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_1_0_0 */
extern void T1496s22(TC* ac, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_1_11_0 */
extern void T1496s21(TC* ac, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_1_13_0 */
extern void T1496s20(TC* ac, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_1_16_0 */
extern void T1496s19(TC* ac, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_latest */
extern void T1496s23(TC* ac, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.default_capabilities_1_11_0 */
extern T0* T1496s15(TC* ac);
/* ET_ECF_VOID_SAFETY_CONDITION.ecf_1_11_0 */
extern T0* T1496s14(TC* ac);
/* ET_ECF_VOID_SAFETY_CONDITION.default_capabilities_1_13_0 */
extern T0* T1496s13(TC* ac);
/* ET_ECF_VOID_SAFETY_CONDITION.ecf_1_13_0 */
extern T0* T1496s12(TC* ac);
/* ET_ECF_VOID_SAFETY_CONDITION.default_capabilities_1_16_0 */
extern T0* T1496s11(TC* ac);
/* ET_ECF_VOID_SAFETY_CONDITION.ecf_1_16_0 */
extern T0* T1496s10(TC* ac);
/* UT_SHARED_ECF_VERSIONS.ecf_last_known */
extern T0* T2227s1(TC* ac);
/* UT_SHARED_ECF_VERSIONS.ecf_1_23_0 */
extern T0* T2227s2(TC* ac);
/* ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T1 T1495f3(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T0* T1495f3ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_CONCURRENCY_CONDITION.default_capabilities */
extern T0* T1495s6(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.default_capabilities_1_0_0 */
extern T0* T1495s16(TC* ac);
/* ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_1_0_0 */
extern void T1495s22(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_1_11_0 */
extern void T1495s21(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_1_13_0 */
extern void T1495s20(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_1_16_0 */
extern void T1495s19(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_latest */
extern void T1495s23(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.default_capabilities_1_11_0 */
extern T0* T1495s15(TC* ac);
/* ET_ECF_CONCURRENCY_CONDITION.ecf_1_11_0 */
extern T0* T1495s14(TC* ac);
/* ET_ECF_CONCURRENCY_CONDITION.default_capabilities_1_13_0 */
extern T0* T1495s13(TC* ac);
/* ET_ECF_CONCURRENCY_CONDITION.ecf_1_13_0 */
extern T0* T1495s12(TC* ac);
/* ET_ECF_CONCURRENCY_CONDITION.default_capabilities_1_16_0 */
extern T0* T1495s11(TC* ac);
/* ET_ECF_CONCURRENCY_CONDITION.ecf_1_16_0 */
extern T0* T1495s10(TC* ac);
/* ET_ECF_BUILD_CONDITION.is_enabled */
extern T1 T1494f3(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_BUILD_CONDITION.is_enabled */
extern T0* T1494f3ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_BUILD_CONDITION.string_ */
extern T0* T1494s6(TC* ac);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_enabled */
extern T1 T1503f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_included */
extern T1 T1503f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_enabled */
extern T1 T1502f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_included */
extern T1 T1502f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_ORED_CONDITIONS.is_enabled */
extern T1 T1490f3(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].do_all */
extern void T1909f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].item */
extern T0* T1909f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_CFLAGS.fill_external_cflags */
extern void T1463f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_CFLAGS.fill_external_cflags */
extern T0* T1463f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_CFLAG]].set_rout_disp_final */
extern void T2062f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_CFLAG.fill_external_cflags */
extern void T1475f8(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_CFLAG.add_external_value */
extern void T1475f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_CFLAG.is_enabled */
extern T1 T1475f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].do_all */
extern void T1906f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].item */
extern T0* T1906f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_MAKES.fill_external_makes */
extern void T1467f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_MAKES.fill_external_makes */
extern T0* T1467f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_MAKE]].set_rout_disp_final */
extern void T2071f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_MAKE.fill_external_makes */
extern void T1479f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_MAKE.add_external_value */
extern void T1479f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_MAKE.file_system */
extern T0* T1479s5(TC* ac);
/* ET_ECF_EXTERNAL_MAKE.unix_file_system */
extern T0* T1479s8(TC* ac);
/* ET_ECF_EXTERNAL_MAKE.windows_file_system */
extern T0* T1479s7(TC* ac);
/* ET_ECF_EXTERNAL_MAKE.operating_system */
extern T0* T1479s6(TC* ac);
/* ET_ECF_EXTERNAL_MAKE.is_enabled */
extern T1 T1479f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].do_all */
extern void T1910f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].item */
extern T0* T1910f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_RESOURCES.fill_external_resources */
extern void T1469f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_RESOURCES.fill_external_resources */
extern T0* T1469f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_RESOURCE]].set_rout_disp_final */
extern void T2075f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_RESOURCE.fill_external_resources */
extern void T1481f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_RESOURCE.add_external_value */
extern void T1481f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_RESOURCE.file_system */
extern T0* T1481s5(TC* ac);
/* ET_ECF_EXTERNAL_RESOURCE.unix_file_system */
extern T0* T1481s8(TC* ac);
/* ET_ECF_EXTERNAL_RESOURCE.windows_file_system */
extern T0* T1481s7(TC* ac);
/* ET_ECF_EXTERNAL_RESOURCE.operating_system */
extern T0* T1481s6(TC* ac);
/* ET_ECF_EXTERNAL_RESOURCE.is_enabled */
extern T1 T1481f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].do_all */
extern void T1912f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].item */
extern T0* T1912f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern void T1465f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern T0* T1465f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LIBRARY]].set_rout_disp_final */
extern void T2067f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_LIBRARY.fill_external_libraries */
extern void T1477f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARY.add_external_value */
extern void T1477f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARY.file_system */
extern T0* T1477s5(TC* ac);
/* ET_ECF_EXTERNAL_LIBRARY.unix_file_system */
extern T0* T1477s8(TC* ac);
/* ET_ECF_EXTERNAL_LIBRARY.windows_file_system */
extern T0* T1477s7(TC* ac);
/* ET_ECF_EXTERNAL_LIBRARY.operating_system */
extern T0* T1477s6(TC* ac);
/* ET_ECF_EXTERNAL_LIBRARY.is_enabled */
extern T1 T1477f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].do_all */
extern void T1908f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].item */
extern T0* T1908f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern void T1468f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern T0* T1468f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_OBJECT]].set_rout_disp_final */
extern void T2073f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_OBJECT.fill_external_objects */
extern void T1480f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_OBJECT.add_external_value */
extern void T1480f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_OBJECT.file_system */
extern T0* T1480s5(TC* ac);
/* ET_ECF_EXTERNAL_OBJECT.unix_file_system */
extern T0* T1480s8(TC* ac);
/* ET_ECF_EXTERNAL_OBJECT.windows_file_system */
extern T0* T1480s7(TC* ac);
/* ET_ECF_EXTERNAL_OBJECT.operating_system */
extern T0* T1480s6(TC* ac);
/* ET_ECF_EXTERNAL_OBJECT.is_enabled */
extern T1 T1480f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].do_all */
extern void T1911f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].item */
extern T0* T1911f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern void T1464f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern T0* T1464f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_INCLUDE]].set_rout_disp_final */
extern void T2065f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_INCLUDE.fill_external_includes */
extern void T1476f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDE.add_external_value */
extern void T1476f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDE.file_system */
extern T0* T1476s5(TC* ac);
/* ET_ECF_EXTERNAL_INCLUDE.unix_file_system */
extern T0* T1476s8(TC* ac);
/* ET_ECF_EXTERNAL_INCLUDE.windows_file_system */
extern T0* T1476s7(TC* ac);
/* ET_ECF_EXTERNAL_INCLUDE.operating_system */
extern T0* T1476s6(TC* ac);
/* ET_ECF_EXTERNAL_INCLUDE.is_enabled */
extern T1 T1476f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].do_all */
extern void T1907f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].item */
extern T0* T1907f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_dotnet */
extern void T87f269(TC* ac, T0* C, T1 a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T174f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T1069f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T1662s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T1661f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T1661f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T1069f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1662s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1661f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1069f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T1069f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.is_enabled */
extern T1 T826f21(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T1460f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T1903f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T1460f3(TC* ac, T0* C);
/* ET_ECF_STATE.is_dotnet */
extern T1 T800f3(TC* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.put_last */
extern void T173f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].force_last */
extern void T1068f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].force */
extern void T1659s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_LIBRARY].fill_with */
extern void T1658f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_LIBRARY].extend */
extern void T1658f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].resize */
extern void T1068f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1659s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1658f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].new_capacity */
extern T6 T1068f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].extendible */
extern T1 T1068f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_LIBRARY.is_enabled */
extern T1 T821f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.library */
extern T0* T1459f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].item */
extern T0* T1902f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_LIBRARIES.count */
extern T6 T1459f3(TC* ac, T0* C);
/* ET_ECF_CLUSTER.fill_file_rules */
extern void T89f100(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_CLUSTER.fill_file_rules */
extern T0* T89f100ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_CLUSTER]].set_rout_disp_final */
extern void T2009f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_CLUSTERS.do_all */
extern void T829f14(TC* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.fill_file_rules */
extern void T1461f7(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T1461f7ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T1461f7ac2(TC* ac, T0* a1);
/* ET_ECF_FILE_RULE.is_enabled */
extern T1 T1482f10(TC* ac, T0* C, T0* a1);
/* PROCEDURE [TUPLE [ET_ECF_FILE_RULE]].set_rout_disp_final */
extern void T2165f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].do_if */
extern void T1904f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.fill_file_rules */
extern void T88f69(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_FILE_RULES.make_empty */
extern T0* T1461c6(TC* ac);
/* ET_ECF_CLUSTER.fill_subclusters */
extern void T89f99(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_enabled */
extern T1 T89f65(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.cluster */
extern T0* T829f4(TC* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTERS.count */
extern T6 T829f3(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_epcd_error */
extern void T86f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ECF_ERROR.make_epcd */
extern T0* T828c97(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ECF_ERROR_HANDLER.report_epcl_error */
extern void T86f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_epcl */
extern T0* T828c96(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR_HANDLER.report_epcr_error */
extern void T86f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR.make_epcr */
extern T0* T828c95(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR_HANDLER.report_eadq_error */
extern void T86f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadq */
extern T0* T828c94(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].before */
extern T1 T812f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_before */
extern T1 T812f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].before */
extern T1 T1252f8(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].back */
extern void T812f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_back */
extern void T812f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].add_traversing_cursor */
extern void T812f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].set_next_cursor */
extern void T1252f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].set_position */
extern void T1252f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].remove_traversing_cursor */
extern void T812f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].set_before */
extern void T1252f13(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].clashes_item */
extern T6 T812f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].finish */
extern void T812f47(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_finish */
extern void T812f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_off */
extern T1 T812f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].off */
extern T1 T1252f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].is_empty */
extern T1 T812f36(TC* ac, T0* C);
/* ET_ECF_TARGET_PARENT.set_target */
extern void T813f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_epcy_error */
extern void T86f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epcy */
extern T0* T828c93(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].item_for_iteration */
extern T0* T812f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_item */
extern T0* T812f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].item_storage_item */
extern T0* T812f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].forth */
extern void T812f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_forth */
extern void T812f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].set_after */
extern void T1252f10(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].key_for_iteration */
extern T0* T812f35(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_key */
extern T0* T812f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].key_storage_item */
extern T0* T812f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].after */
extern T1 T812f25(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_after */
extern T1 T812f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].after */
extern T1 T1252f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].start */
extern void T812f45(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_start */
extern void T812f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].has */
extern T1 T812f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].search_position */
extern void T812f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].hash_position */
extern T6 T812f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].slots_item */
extern T6 T812f24(TC* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_internal_error */
extern void T86f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_internal */
extern T0* T828c92(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_epud_error */
extern void T86f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epud */
extern T0* T828c91(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.library_target */
extern T0* T802f10(TC* ac, T0* C);
/* ET_ECF_SYSTEM_CONFIG.library_target */
extern T0* T801f11(TC* ac, T0* C);
/* ET_ECF_SYSTEM.library_target */
extern T0* T87f103(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_epul_error */
extern void T86f20(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_epul */
extern T0* T828c90(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_epur_error */
extern void T86f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epur */
extern T0* T828c89(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.targets */
extern T0* T802f7(TC* ac, T0* C);
/* ET_ECF_SYSTEM_CONFIG.targets */
extern T0* T801f8(TC* ac, T0* C);
/* ET_ECF_SYSTEM.targets */
extern T0* T87f102(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_epfe_error */
extern void T86f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epfe */
extern T0* T828c88(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].found_item */
extern T0* T811f25(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].item_storage_item */
extern T0* T811f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].found */
extern T1 T811f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].search */
extern void T811f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].search_position */
extern void T811f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].hash_position */
extern T6 T811f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].key_storage_item */
extern T0* T811f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].clashes_item */
extern T6 T811f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].slots_item */
extern T6 T811f26(TC* ac, T0* C, T6 a1);
/* DS_CELL [detachable ET_ECF_SYSTEM_CONFIG].make */
extern T0* T814c2(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].force_last */
extern void T812f44(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].key_storage_put */
extern void T812f56(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].slots_put */
extern void T812f55(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].clashes_put */
extern void T812f54(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].resize */
extern void T812f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].clashes_resize */
extern void T812f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].special_integer_ */
extern T0* T812s39(TC* ac);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].key_storage_resize */
extern void T812f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].item_storage_resize */
extern void T812f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].slots_resize */
extern void T812f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].new_modulus */
extern T6 T812f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].new_capacity */
extern T6 T812f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].item_storage_put */
extern void T812f52(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].unset_found_item */
extern void T812f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_default */
extern T0* T812c43(TC* ac);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make */
extern void T812f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_with_equality_testers */
extern void T812f61(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_sparse_container */
extern void T812f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].set_internal_cursor */
extern void T812f73(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].new_cursor */
extern T0* T812f41(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].make */
extern T0* T1252c9(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_slots */
extern void T812f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_clashes */
extern void T812f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_key_storage */
extern void T812f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_item_storage */
extern void T812f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].default_capacity */
extern T6 T812f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].force_last */
extern void T811f35(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].key_storage_put */
extern void T811f44(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].slots_put */
extern void T811f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].clashes_put */
extern void T811f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].resize */
extern void T811f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].clashes_resize */
extern void T811f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].special_integer_ */
extern T0* T811s29(TC* ac);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].key_storage_resize */
extern void T811f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].item_storage_resize */
extern void T811f47(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG].aliased_resized_area */
extern T0* T1250s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_SYSTEM_CONFIG].aliased_resized_area */
extern T0* T1248f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].slots_resize */
extern void T811f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].new_modulus */
extern T6 T811f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].new_capacity */
extern T6 T811f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].item_storage_put */
extern void T811f40(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG].force */
extern void T1250s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_SYSTEM_CONFIG].fill_with */
extern void T1248f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_SYSTEM_CONFIG].extend */
extern void T1248f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].unset_found_item */
extern void T811f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_default */
extern T0* T811c34(TC* ac);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make */
extern void T811f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_with_equality_testers */
extern void T811f45(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_sparse_container */
extern void T811f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].set_internal_cursor */
extern void T811f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].new_cursor */
extern T0* T811f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_SYSTEM_CONFIG, STRING_8].make */
extern T0* T1251c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_slots */
extern void T811f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_clashes */
extern void T811f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_key_storage */
extern void T811f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_item_storage */
extern void T811f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG].make */
extern T0* T1250s2(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_SYSTEM_CONFIG].make_empty */
extern T0* T1248c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG].default_create */
extern T0* T1250c3(TC* ac);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].default_capacity */
extern T6 T811f27(TC* ac, T0* C);
/* ET_ECF_LIBRARY.select_target */
extern void T802f178(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.select_target */
extern void T87f217(TC* ac, T0* C, T0* a1);
/* ET_ECF_STATE.make */
extern T0* T800c4(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_etnu_error */
extern void T86f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_etnu */
extern T0* T828c81(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.element_name */
extern T0* T85f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.target_with_name */
extern T0* T87f150(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.target */
extern T0* T816f4(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM_PARSER.new_system */
extern T0* T85f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_system */
extern T0* T780f1(TC* ac, T0* C, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_TARGET]].set_rout_disp_final */
extern void T783f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_SYSTEM_PARSER.override_target */
extern void T85f223(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.override_variables */
extern void T88f61(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.override_capabilities */
extern void T88f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].forth */
extern void T1266f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].cursor_forth */
extern void T835f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].add_traversing_cursor */
extern void T835f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].set_next_cursor */
extern void T1266f15(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].set_position */
extern void T1266f14(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].remove_traversing_cursor */
extern void T835f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].set_after */
extern void T1266f13(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].item */
extern T0* T1266f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].cursor_item */
extern T0* T835f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].key */
extern T0* T1266f6(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].cursor_key */
extern T0* T835f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].after */
extern T1 T1266f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].new_iterator */
extern T0* T835f34(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].start */
extern void T1266f12(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].cursor_start */
extern void T835f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].cursor_off */
extern T1 T835f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].off */
extern T1 T1266f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].is_empty */
extern T1 T835f37(TC* ac, T0* C);
/* ET_ECF_TARGET.override_settings */
extern void T88f59(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_settings */
extern T0* T88f59ac1(TC* ac, T0* a1);
/* ET_ECF_TARGET.override_all_assertions */
extern void T88f65(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_all_assertions */
extern T0* T88f65ac1(TC* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_ECF_TARGET.override_all_assertions */
extern T0* T88f65ac2(TC* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_ECF_TARGET.override_all_assertions */
extern T0* T88f65ac3(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T2015f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* PROCEDURE [TUPLE [ET_ECF_ADAPTED_LIBRARY]].set_rout_disp_final */
extern void T2013f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_TARGET.override_all_assertions_in_cluster */
extern void T88f67(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_all_assertions_in_cluster */
extern T0* T88f67ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_TARGET.override_all_assertions_in_adapted_group */
extern void T88f68(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_all_assertions_in_adapted_group */
extern T0* T88f68ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.class_options */
extern T0* T826f13(TC* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.class_options */
extern T0* T821f10(TC* ac, T0* C);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.class_options */
extern T0* T1471f11(TC* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.options */
extern T0* T826f12(TC* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.options */
extern T0* T821f9(TC* ac, T0* C);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.options */
extern T0* T1471f10(TC* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.do_adapted */
extern void T1460f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.do_adapted */
extern void T1459f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.do_explicit */
extern void T829f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.override_all_assertions_in_option */
extern void T88f66(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_all_assertions_in_option */
extern T0* T88f66ac1(TC* ac, T0* a1, T0* a2);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].do_all */
extern void T1257f9(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].forth */
extern void T2223f7(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_forth */
extern void T1257f12(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].item */
extern T0* T2223f4(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_item */
extern T0* T1257f6(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].after */
extern T1 T2223f3(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].start */
extern void T2223f6(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_start */
extern void T1257f11(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].new_cursor */
extern T0* T1257f4(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].make */
extern T0* T2223c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].keys */
extern T0* T817f37(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].make */
extern T0* T1257c7(TC* ac, T0* a1);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].set_internal_cursor */
extern void T1257f10(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].new_cursor_with_table_cursor */
extern T0* T1257f5(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].make_with_table_cursor */
extern T0* T2223c8(TC* ac, T0* a1, T0* a2);
/* ET_ECF_OPTION_DEFAULTS.valid_assertions_latest */
extern T0* T2016s2(TC* ac);
/* Creation of agent #1 in feature ET_ECF_OPTION_DEFAULTS.valid_assertions_latest */
extern T0* T2016s2ac1(TC* ac, T0* a1);
/* ET_ECF_OPTION_DEFAULTS.boolean_option_value_regexp */
extern T0* T2016s8(TC* ac);
/* ET_ECF_OPTION_DEFAULTS.string_ */
extern T0* T2016s7(TC* ac);
/* ET_ECF_OPTION_DEFAULTS.case_insensitive_string_equality_tester */
extern T0* T2016s6(TC* ac);
/* ET_ECF_OPTION_DEFAULTS.valid_assertions */
extern T0* T2016s1(TC* ac, T0* a1);
/* ET_ECF_OPTION_DEFAULTS.valid_assertions_1_0_0 */
extern T0* T2016s5(TC* ac);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].remove */
extern void T817f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].remove_position */
extern void T817f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].key_storage_keep_head */
extern void T817f79(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].item_storage_keep_head */
extern void T817f78(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].keep_head */
extern void T1259f10(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].set_count */
extern void T1259f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].move_cursors_forth */
extern void T817f77(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].internal_set_key_equality_tester */
extern void T817f76(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].twin */
extern T0* T817f38(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].copy */
extern void T817f68(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].copy */
extern void T817f68p1(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clone_clashes */
extern void T817f75(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clone_slots */
extern void T817f74(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clone_key_storage */
extern void T817f73(TC* ac, T0* C);
/* SPECIAL [STRING_8].resized_area */
extern T0* T35f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].copy_data */
extern void T35f13(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [STRING_8].force */
extern void T35f15(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].move_data */
extern void T35f14(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].overlapping_move */
extern void T35f17(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].non_overlapping_move */
extern void T35f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clone_item_storage */
extern void T817f72(TC* ac, T0* C);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].resized_area */
extern T0* T1259f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].copy_data */
extern void T1259f11(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].force */
extern void T1259f14(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].move_data */
extern void T1259f13(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].overlapping_move */
extern void T1259f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].non_overlapping_move */
extern void T1259f15(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].valid_cursor */
extern T1 T817f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].move_all_cursors_after */
extern void T817f70(TC* ac, T0* C);
/* ET_ECF_OPTION_DEFAULTS.valid_assertions_1_2_0 */
extern T0* T2016s4(TC* ac);
/* ET_ECF_OPTION_DEFAULTS.ecf_1_2_0 */
extern T0* T2016s3(TC* ac);
/* ET_ECF_TARGETS.do_all */
extern void T816f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].do_all */
extern void T1631f15(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.parse_file_with_action */
extern void T85f225(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* XM_EIFFEL_PARSER.last_error_description */
extern T0* T795f120(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.position */
extern T0* T795f114(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_POSITION].first */
extern T0* T1202f6(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.positions */
extern T0* T795f118(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.new_positions */
extern T0* T795f88(TC* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].remove */
extern void T1203f7(TC* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].item */
extern T0* T1203f4(TC* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].is_empty */
extern T1 T1203f3(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_POSITION].force_last */
extern void T1202f8(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].put_right */
extern void T1727f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].attach_left */
extern void T1727f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].make */
extern T0* T1727c4(TC* ac, T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].make */
extern T0* T1202c7(TC* ac);
/* DS_BILINKED_LIST [XM_POSITION].set_internal_cursor */
extern void T1202f9(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].new_cursor */
extern T0* T1202f5(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_POSITION].make */
extern T0* T1728c3(TC* ac, T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].copy */
extern void T1203f6(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_EIFFEL_SCANNER].put_right */
extern void T1729f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_EIFFEL_SCANNER].make */
extern T0* T1729c3(TC* ac, T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].make */
extern T0* T1203c5(TC* ac);
/* XM_EIFFEL_ENTITY_DEF.error_position */
extern T0* T1237f59(TC* ac, T0* C);
/* XM_DEFAULT_POSITION.make */
extern T0* T1200c5(TC* ac, T0* a1, T6 a2, T6 a3, T6 a4);
/* XM_EIFFEL_PE_ENTITY_DEF.error_position */
extern T0* T1240f61(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.error_position */
extern T0* T1238f59(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.error_position */
extern T0* T1199f70(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_syntax_error */
extern void T86f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_syntax */
extern T0* T828c87(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_TREE_CALLBACKS_PIPE.last_error */
extern T0* T796f5(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eabx_error */
extern void T86f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabx */
extern T0* T828c86(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eadf_error */
extern void T86f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadf */
extern T0* T828c85(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eadi_error */
extern void T86f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadi */
extern T0* T828c84(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.string_equality_tester */
extern T0* T85s30(TC* ac);
/* ET_ECF_ERROR_HANDLER.report_eadh_error */
extern void T86f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eadh */
extern T0* T828c83(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eadg_error */
extern void T86f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eadg */
extern T0* T828c82(TC* ac, T0* a1, T0* a2);
/* XM_TREE_CALLBACKS_PIPE.document */
extern T0* T796f8(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.is_correct */
extern T1 T795f90(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.parse_from_stream */
extern void T795f208(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.parse_with_events */
extern void T795f213(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_finish */
extern void T795f219(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_finish */
extern void T1241f29(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T809f10(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T809f10p1(TC* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_finish */
extern void T799f15(TC* ac, T0* C);
/* XM_CALLBACKS_NULL.on_finish */
extern void T1204f3(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.parse */
extern void T795f218(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_pop_last_value */
extern void T795f228(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.yy_push_error_value */
extern void T795f227(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_do_action */
extern void T795f226(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_notation_declaration */
extern void T795f256(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_notation_declaration */
extern void T1209f8(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.set_public */
extern void T1217f5(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T1216s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T1218f4(TC* ac, T0* C, T6 a1);
/* XM_DTD_EXTERNAL_ID.set_system */
extern void T1217f4(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_external_id */
extern T0* T795f168(TC* ac, T0* C);
/* XM_DTD_EXTERNAL_ID.make */
extern T0* T1217c3(TC* ac);
/* XM_EIFFEL_PARSER.when_pe_entity_declared */
extern void T795f255(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].force_new */
extern void T1205f38(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_put */
extern void T1205f52(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_put */
extern void T1205f51(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].force */
extern void T1734s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].fill_with */
extern void T1730f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].extend */
extern void T1730f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_put */
extern void T1205f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_put */
extern void T1205f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_item */
extern T6 T1205f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].hash_position */
extern T6 T1205f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_item */
extern T6 T1205f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].resize */
extern void T1205f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_resize */
extern void T1205f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].special_integer_ */
extern T0* T1205s33(TC* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_resize */
extern void T1205f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_resize */
extern void T1205f55(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1734s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1730f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_item */
extern T0* T1205f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_resize */
extern void T1205f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_modulus */
extern T6 T1205f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_capacity */
extern T6 T1205f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].unset_found_item */
extern void T1205f43(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].has */
extern T1 T1205f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].search_position */
extern void T1205f40(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_def */
extern T0* T1240c214(TC* ac, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_literal */
extern void T1240f216(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.default_create */
extern T0* T1207c3(TC* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.make_scanner */
extern void T1240f217(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T1240f219(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset_sent */
extern void T1240f222(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T1240f219p1(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T1240f219p0(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T1240f219p2(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T1240f219p3(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.make_with_buffer */
extern void T1240f218(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_load_input_buffer */
extern void T1240f221(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_content */
extern void T1240f224(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T1240f220(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T1240f220p1(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_build_tables */
extern void T1240f223(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template */
extern T0* T1240f54(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_fixed_array */
extern T0* T1240f58(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_4 */
extern void T1240f255(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_array_subcopy */
extern void T1240f279(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PE_ENTITY_DEF.integer_array_ */
extern T0* T1240s60(TC* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_3 */
extern void T1240f254(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_2 */
extern void T1240f253(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_1 */
extern void T1240f252(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_meta_template */
extern T0* T1240f52(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template */
extern T0* T1240f73(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_2 */
extern void T1240f231(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_1 */
extern void T1240f230(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template */
extern T0* T1240f68(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_5 */
extern void T1240f229(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_4 */
extern void T1240f228(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_3 */
extern void T1240f227(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_2 */
extern void T1240f226(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_1 */
extern void T1240f225(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template */
extern T0* T1240f57(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_5 */
extern void T1240f278(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_4 */
extern void T1240f277(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_3 */
extern void T1240f276(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_2 */
extern void T1240f275(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_1 */
extern void T1240f274(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template */
extern T0* T1240f55(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_18 */
extern void T1240f273(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_17 */
extern void T1240f272(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_16 */
extern void T1240f271(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_15 */
extern void T1240f270(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_14 */
extern void T1240f269(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_13 */
extern void T1240f268(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_12 */
extern void T1240f267(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_11 */
extern void T1240f266(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_10 */
extern void T1240f265(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_9 */
extern void T1240f264(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_8 */
extern void T1240f263(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_7 */
extern void T1240f262(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_6 */
extern void T1240f261(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_5 */
extern void T1240f260(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_4 */
extern void T1240f259(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_3 */
extern void T1240f258(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_2 */
extern void T1240f257(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_1 */
extern void T1240f256(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template */
extern T0* T1240f97(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_20 */
extern void T1240f251(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_19 */
extern void T1240f250(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_18 */
extern void T1240f249(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_17 */
extern void T1240f248(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_16 */
extern void T1240f247(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_15 */
extern void T1240f246(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_14 */
extern void T1240f245(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_13 */
extern void T1240f244(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_12 */
extern void T1240f243(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_11 */
extern void T1240f242(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_10 */
extern void T1240f241(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_9 */
extern void T1240f240(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_8 */
extern void T1240f239(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_7 */
extern void T1240f238(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_6 */
extern void T1240f237(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_5 */
extern void T1240f236(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_4 */
extern void T1240f235(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_3 */
extern void T1240f234(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_2 */
extern void T1240f233(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_1 */
extern void T1240f232(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.special_integer_ */
extern T0* T1240s56(TC* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.empty_buffer */
extern T0* T1240f53(TC* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.make */
extern T0* T1726c8(TC* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.make_external */
extern void T1240f215(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_external_entity */
extern T0* T795f167(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.make_external */
extern T0* T1237c213(TC* ac, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_scanner */
extern void T1237f214(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T1237f216(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T1237f216p1(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T1237f216p0(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T1237f216p2(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.make_with_buffer */
extern void T1237f215(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_load_input_buffer */
extern void T1237f218(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_content */
extern void T1237f220(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T1237f217(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T1237f217p1(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_build_tables */
extern void T1237f219(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template */
extern T0* T1237f52(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_fixed_array */
extern T0* T1237f56(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_4 */
extern void T1237f251(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_array_subcopy */
extern void T1237f275(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_ENTITY_DEF.integer_array_ */
extern T0* T1237s58(TC* ac);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_3 */
extern void T1237f250(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_2 */
extern void T1237f249(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_1 */
extern void T1237f248(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_meta_template */
extern T0* T1237f50(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template */
extern T0* T1237f71(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template_2 */
extern void T1237f227(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template_1 */
extern void T1237f226(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template */
extern T0* T1237f66(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_5 */
extern void T1237f225(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_4 */
extern void T1237f224(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_3 */
extern void T1237f223(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_2 */
extern void T1237f222(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_1 */
extern void T1237f221(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template */
extern T0* T1237f55(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_5 */
extern void T1237f274(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_4 */
extern void T1237f273(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_3 */
extern void T1237f272(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_2 */
extern void T1237f271(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_1 */
extern void T1237f270(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template */
extern T0* T1237f53(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_18 */
extern void T1237f269(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_17 */
extern void T1237f268(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_16 */
extern void T1237f267(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_15 */
extern void T1237f266(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_14 */
extern void T1237f265(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_13 */
extern void T1237f264(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_12 */
extern void T1237f263(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_11 */
extern void T1237f262(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_10 */
extern void T1237f261(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_9 */
extern void T1237f260(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_8 */
extern void T1237f259(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_7 */
extern void T1237f258(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_6 */
extern void T1237f257(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_5 */
extern void T1237f256(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_4 */
extern void T1237f255(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_3 */
extern void T1237f254(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_2 */
extern void T1237f253(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_1 */
extern void T1237f252(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template */
extern T0* T1237f94(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_20 */
extern void T1237f247(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_19 */
extern void T1237f246(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_18 */
extern void T1237f245(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_17 */
extern void T1237f244(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_16 */
extern void T1237f243(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_15 */
extern void T1237f242(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_14 */
extern void T1237f241(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_13 */
extern void T1237f240(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_12 */
extern void T1237f239(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_11 */
extern void T1237f238(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_10 */
extern void T1237f237(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_9 */
extern void T1237f236(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_8 */
extern void T1237f235(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_7 */
extern void T1237f234(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_6 */
extern void T1237f233(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_5 */
extern void T1237f232(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_4 */
extern void T1237f231(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_3 */
extern void T1237f230(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_2 */
extern void T1237f229(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_1 */
extern void T1237f228(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.special_integer_ */
extern T0* T1237s70(TC* ac);
/* XM_EIFFEL_ENTITY_DEF.empty_buffer */
extern T0* T1237f60(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_entity_declaration */
extern void T795f254(TC* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_DTD_CALLBACKS_NULL.on_entity_declaration */
extern void T1209f7(TC* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_EIFFEL_PARSER.when_entity_declared */
extern void T795f253(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_literal_entity */
extern T0* T795f166(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_literal */
extern T0* T1237c212(TC* ac, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T1237f281(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition */
extern void T1237f290(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.set_start_condition */
extern void T1237f277(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.start_condition */
extern T6 T1237f63(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T1240f285(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition */
extern void T1240f295(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_start_condition */
extern void T1240f281(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.start_condition */
extern T6 T1240f65(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition_dtd_ignore */
extern void T1238f209(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition */
extern void T1238f223(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.set_start_condition */
extern void T1238f212(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.start_condition */
extern T6 T1238f53(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.special_integer_ */
extern T0* T1238s65(TC* ac);
/* XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T1199f207(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.push_start_condition */
extern void T1199f218(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.set_start_condition */
extern void T1199f226(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.start_condition */
extern T6 T1199f46(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.special_integer_ */
extern T0* T1199s54(TC* ac);
/* XM_DTD_ATTRIBUTE_CONTENT.set_default_value */
extern void T1226f26(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_fixed */
extern void T1226f25(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_implied */
extern void T1226f24(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_required */
extern void T1226f23(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].aliased_resized_area */
extern T0* T1228s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].aliased_resized_area */
extern T0* T1230f4(TC* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING_8].force_last */
extern void T1229f11(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [STRING_8].put_right */
extern void T1743f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [STRING_8].attach_left */
extern void T1743f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [STRING_8].make */
extern T0* T1743c4(TC* ac, T0* a1);
/* XM_EIFFEL_PARSER.new_string_bilinked_list */
extern T0* T795f163(TC* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].set_equality_tester */
extern void T1229f12(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.string_equality_tester */
extern T0* T795s177(TC* ac);
/* DS_BILINKED_LIST [STRING_8].make */
extern T0* T1229c10(TC* ac);
/* DS_BILINKED_LIST [STRING_8].set_internal_cursor */
extern void T1229f13(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].new_cursor */
extern T0* T1229f6(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].make */
extern T0* T1742c8(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].force */
extern void T1228s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].fill_with */
extern void T1230f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].extend */
extern void T1230f10(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration_list */
extern void T1226f22(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration */
extern void T1226f27(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.default_enumeration_list */
extern T0* T1226f11(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_notation */
extern void T1226f21(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_token */
extern void T1226f20(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_entity */
extern void T1226f19(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_list_type */
extern void T1226f18(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id_ref */
extern void T1226f17(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id */
extern void T1226f16(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_data */
extern void T1226f15(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content */
extern T0* T795f162(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T1225s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T1227f4(TC* ac, T0* C, T6 a1);
/* XM_DTD_ATTRIBUTE_CONTENT.make */
extern T0* T1226c12(TC* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].force */
extern void T1225s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].fill_with */
extern void T1227f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].extend */
extern void T1227f10(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.copy_default */
extern void T1226f14(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_implied */
extern T1 T1226f10(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_required */
extern T1 T1226f9(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.has_default_value */
extern T1 T1226f8(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_fixed */
extern T1 T1226f7(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_name */
extern void T1226f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].force */
extern void T1222s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].fill_with */
extern void T1224f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].extend */
extern void T1224f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T1222s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T1224f4(TC* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].force_last */
extern void T1223f8(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].put_right */
extern void T1741f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].attach_left */
extern void T1741f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1741c4(TC* ac, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content_list */
extern T0* T795f160(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1223c7(TC* ac);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].set_internal_cursor */
extern void T1223f9(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].new_cursor */
extern T0* T1223f5(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1740c8(TC* ac, T0* a1);
/* XM_EIFFEL_PARSER.on_attribute_declarations */
extern void T795f252(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].forth */
extern void T1740f10(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_forth */
extern void T1223f11(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].add_traversing_cursor */
extern void T1223f12(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set_next_cursor */
extern void T1740f12(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].remove_traversing_cursor */
extern void T1223f13(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set */
extern void T1740f11(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* XM_EIFFEL_PARSER.on_attribute_declaration */
extern void T795f262(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_DTD_CALLBACKS_NULL.on_attribute_declaration */
extern void T1209f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].item */
extern T0* T1740f6(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].start */
extern void T1740f9(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_start */
extern void T1223f10(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_off */
extern T1 T1223f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].off */
extern T1 T1740f7(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_more */
extern void T1220f11(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_mixed */
extern T0* T1220c10(TC* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_mixed */
extern void T1220f21(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_choice */
extern void T1220f19(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_list */
extern void T1220f16(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_default */
extern void T1220f22(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one */
extern void T1220f12(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_sequence */
extern void T1220f20(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1739c6(TC* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].set_internal_cursor */
extern void T1739f9(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].new_cursor */
extern T0* T1739f5(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1999c3(TC* ac, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_sequence */
extern T0* T1220c9(TC* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_last */
extern void T1739f8(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].put_right */
extern void T2000f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].attach_left */
extern void T2000f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T2000c4(TC* ac, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_choice */
extern T0* T1220c8(TC* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_first */
extern void T1739f7(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.element_name */
extern T0* T795f155(TC* ac, T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_name */
extern T0* T1220c15(TC* ac, T0* a1);
/* XM_EIFFEL_PARSER.set_element_repetition */
extern void T795f251(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_one */
extern void T1220f14(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one_or_more */
extern void T1220f13(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_any */
extern T0* T1220c7(TC* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_any */
extern void T1220f18(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].force */
extern void T1219s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].fill_with */
extern void T1221f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].extend */
extern void T1221f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T1219s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T1221f4(TC* ac, T0* C, T6 a1);
/* XM_DTD_ELEMENT_CONTENT.make_empty */
extern T0* T1220c6(TC* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_empty */
extern void T1220f17(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_element_declaration */
extern void T795f250(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_element_declaration */
extern void T1209f6(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_attribute */
extern void T795f249(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER.on_attribute */
extern void T1241f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add */
extern void T1744f14(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_new */
extern void T827f95(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].last */
extern T0* T2002f5(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_error */
extern void T1241f37(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_error */
extern void T1204f11(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T809f17(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T809f17p1(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_error */
extern void T799f22(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.shallow_has */
extern T1 T1744f4(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.attributes_force */
extern void T1241f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_LINKED_QUEUE [STRING_8].force */
extern void T1748f6(TC* ac, T0* C, T0* a1);
/* DS_LINKED_QUEUE [detachable STRING_8].force */
extern void T1747f7(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [detachable STRING_8].put_right */
extern void T2004f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [detachable STRING_8].make */
extern T0* T2004c3(TC* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add_default */
extern void T1744f13(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_pseudo_prefix */
extern T0* T1744f7(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.is_xmlns */
extern T1 T1241f9(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.same_string */
extern T1 T1241f23(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.string_equality_tester */
extern T0* T1241s26(TC* ac);
/* XM_NAMESPACE_RESOLVER.xmlns */
extern T0* T1241f22(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.has_prefix */
extern T1 T1241f10(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_attribute */
extern void T1204f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].has */
extern T1 T1214f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].search_position */
extern void T1214f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].hash_position */
extern T6 T1214f24(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.hash_code */
extern T6 T1211f16(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.item */
extern T0* T1211f17(TC* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING_8].item */
extern T0* T1229f8(TC* ac, T0* C, T6 a1);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].test */
extern T1 T1737f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_item */
extern T0* T1214f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_item */
extern T0* T1214f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_item */
extern T6 T1214f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_equality_tester */
extern T0* T1214f17(TC* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_item */
extern T6 T1214f25(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].force */
extern void T1213s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].fill_with */
extern void T1215f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].extend */
extern void T1215f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T1213s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T1215f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].force_new */
extern void T1214f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_put */
extern void T1214f39(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_put */
extern void T1214f38(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_put */
extern void T1214f37(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].resize */
extern void T1214f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_resize */
extern void T1214f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].special_integer_ */
extern T0* T1214s28(TC* ac);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_resize */
extern void T1214f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_resize */
extern void T1214f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_resize */
extern void T1214f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_modulus */
extern T6 T1214f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_capacity */
extern T6 T1214f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].unset_found_item */
extern void T1214f35(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.new_name_set */
extern T0* T795f148(TC* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_equal */
extern T0* T1214c31(TC* ac, T6 a1);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T1737c2(TC* ac);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make */
extern void T1214f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].set_internal_cursor */
extern void T1214f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_cursor */
extern T0* T1214f21(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME].make */
extern T0* T1738c4(TC* ac, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_slots */
extern void T1214f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_clashes */
extern void T1214f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_key_storage */
extern void T1214f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_item_storage */
extern void T1214f40(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].make */
extern T0* T1210s1(TC* ac, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].make_empty */
extern T0* T1212c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T1210c3(TC* ac);
/* XM_EIFFEL_PARSER.on_start_tag */
extern void T795f248(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_start_tag */
extern void T1241f35(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.push */
extern void T1744f12(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].force_last */
extern void T2002f10(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].put_right */
extern void T2151f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].attach_left */
extern void T2151f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T2151c4(TC* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.new_string_string_table */
extern T0* T1744f8(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_equality_tester */
extern void T827f94(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.string_equality_tester */
extern T0* T1744s9(TC* ac);
/* XM_CALLBACKS_NULL.on_start_tag */
extern void T1204f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER.on_end_tag */
extern void T795f247(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T1241f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.pop */
extern void T1744f11(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_last */
extern void T2002f9(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].set_last_cell */
extern void T2002f14(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].forget_right */
extern void T2151f7(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_last_cursors_after */
extern void T2002f13(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_next_cursor */
extern void T2003f13(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_after */
extern void T2003f12(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].wipe_out */
extern void T2002f12(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_all_cursors_after */
extern void T2002f15(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve_default */
extern T0* T1744f3(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T1241f34p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T809f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T809f16p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_end_tag */
extern void T799f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.parent_element */
extern T0* T785f10(TC* ac, T0* C);
extern T1 T785f10ot1(TC* ac, T0* a1);
/* XM_ELEMENT.is_root_node */
extern T1 T785f11(TC* ac, T0* C);
/* XM_DOCUMENT.is_root_node */
extern T1 T806f8(TC* ac, T0* C);
/* XM_DOCUMENT.parent */
extern T0* T806f9(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve */
extern T0* T1744f2(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].back */
extern void T2003f11(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_back */
extern void T2002f18(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].add_traversing_cursor */
extern void T2002f19(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_traversing_cursor */
extern void T2002f20(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set */
extern void T2003f14(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].go_before */
extern void T2003f10(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_go_before */
extern void T2002f17(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_before */
extern void T2003f15(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_off */
extern T1 T2002f7(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].off */
extern T1 T2003f7(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].item */
extern T0* T2003f6(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].finish */
extern void T2003f9(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_finish */
extern void T2002f16(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].new_cursor */
extern T0* T2002f6(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T2003c8(TC* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_namespace */
extern T0* T1744f6(TC* ac, T0* C);
/* XM_CALLBACKS_NULL.on_end_tag */
extern void T1204f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER_NAME.local_part */
extern T0* T1211f11(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].forth */
extern void T1742f10(TC* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_forth */
extern void T1229f15(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].add_traversing_cursor */
extern void T1229f16(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T1742f12(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T1229f17(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set */
extern void T1742f11(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [STRING_8].item */
extern T0* T1742f6(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].start */
extern void T1742f9(TC* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_start */
extern void T1229f14(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].cursor_off */
extern T1 T1229f9(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].off */
extern T1 T1742f7(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.string_ */
extern T0* T1211s10(TC* ac);
/* XM_EIFFEL_PARSER_NAME.last */
extern T0* T1211f9(TC* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].last */
extern T0* T1229f7(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.ns_prefix */
extern T0* T1211f8(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.is_namespace_name */
extern T1 T1211f7(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern void T1211f18(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern T0* T1211c18(TC* ac);
/* XM_EIFFEL_PARSER_NAME.new_string_bilinked_list */
extern T0* T1211f15(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.string_equality_tester */
extern T0* T1211s14(TC* ac);
/* XM_EIFFEL_PARSER.on_start_tag_finish */
extern void T795f246(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T1241f33(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T1241f33p1(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T809f15(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T809f15p1(TC* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag_finish */
extern void T799f20(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.string_ */
extern T0* T1241s14(TC* ac);
/* XM_NAMESPACE_RESOLVER.on_delayed_attributes */
extern void T1241f40(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_remove */
extern void T1241f44(TC* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].remove */
extern void T1748f7(TC* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].wipe_out */
extern void T1748f8(TC* ac, T0* C);
/* DS_LINKED_QUEUE [detachable STRING_8].remove */
extern void T1747f8(TC* ac, T0* C);
/* DS_LINKED_QUEUE [detachable STRING_8].wipe_out */
extern void T1747f9(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.unprefixed_attribute_namespace */
extern T0* T1241f19(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.default_namespace */
extern T0* T1241f25(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns_namespace */
extern T0* T1241f18(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xml_prefix_namespace */
extern T0* T1241f17(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.is_xml */
extern T1 T1241f16(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.xml_prefix */
extern T0* T1241f24(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T809f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T809f18p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_CALLBACKS_TO_TREE_FILTER.on_attribute */
extern void T799f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_CALLBACKS_TO_TREE_FILTER.handle_position */
extern void T799f24(TC* ac, T0* C, T0* a1);
/* XM_POSITION_TABLE.put */
extern void T786f5(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].put_last */
extern void T1627f9(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].put_right */
extern void T2085f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T2085c3(TC* ac, T0* a1);
/* DS_PAIR [XM_POSITION, XM_NODE].make */
extern T0* T1628c3(TC* ac, T0* a1, T0* a2);
/* XM_ATTRIBUTE.make_last */
extern T0* T810c5(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_ELEMENT.force_last */
extern void T785f20(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].force_last */
extern void T1622f13(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].force_last */
extern void T1622f13p1(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_ELEMENT_NODE].put_right */
extern void T2051f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_ELEMENT_NODE].make */
extern T0* T2051c3(TC* ac, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].before_addition */
extern void T1622f18(TC* ac, T0* C, T0* a1);
/* XM_ELEMENT.before_addition */
extern void T785f22(TC* ac, T0* C, T0* a1);
/* XM_CHARACTER_DATA.node_set_parent */
extern void T1842f4(TC* ac, T0* C, T0* a1);
/* XM_PROCESSING_INSTRUCTION.node_set_parent */
extern void T1841f6(TC* ac, T0* C, T0* a1);
/* XM_COMMENT.node_set_parent */
extern void T1840f5(TC* ac, T0* C, T0* a1);
/* XM_ELEMENT.node_set_parent */
extern void T785f17(TC* ac, T0* C, T0* a1);
/* XM_ATTRIBUTE.node_set_parent */
extern void T810f6(TC* ac, T0* C, T0* a1);
/* XM_DOCUMENT.equality_delete */
extern void T806f14(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].forth */
extern void T1630f13(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_forth */
extern void T1245f17(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].add_traversing_cursor */
extern void T1245f18(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_next_cursor */
extern void T1630f16(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_traversing_cursor */
extern void T1245f23(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set */
extern void T1630f15(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].remove */
extern void T1630f12(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_at_cursor */
extern void T1245f16(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_all_cursors */
extern void T1245f22(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_current_cell */
extern void T1630f17(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_DOCUMENT_NODE].put */
extern void T1753f6(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_DOCUMENT_NODE].put_right */
extern void T1753f4(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_last_cell */
extern void T1245f21(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_DOCUMENT_NODE].forget_right */
extern void T1753f5(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_last */
extern void T1245f20(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_last_cursors_after */
extern void T1245f26(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_after */
extern void T1630f18(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].wipe_out */
extern void T1245f24(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_all_cursors_after */
extern void T1245f27(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].is_last */
extern T1 T1630f7(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_is_last */
extern T1 T1245f10(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_first */
extern void T1245f19(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_first_cell */
extern void T1245f25(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].is_first */
extern T1 T1630f6(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_is_first */
extern T1 T1245f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].item */
extern T0* T1630f8(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].start */
extern void T1630f11(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_start */
extern void T1245f15(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_off */
extern T1 T1245f8(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].off */
extern T1 T1630f9(TC* ac, T0* C);
/* XM_DOCUMENT.new_cursor */
extern T0* T806f7(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].new_cursor */
extern T0* T1245f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].make */
extern T0* T1630c10(TC* ac, T0* a1);
/* XM_ELEMENT.equality_delete */
extern void T785f21(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].remove */
extern void T1045f14(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_at_cursor */
extern void T1622f17(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_all_cursors */
extern void T1622f24(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_current_cell */
extern void T1045f18(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_ELEMENT_NODE].put */
extern void T2051f6(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_last_cell */
extern void T1622f23(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_ELEMENT_NODE].forget_right */
extern void T2051f5(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_last */
extern void T1622f22(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_last_cursors_after */
extern void T1622f27(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].wipe_out */
extern void T1622f25(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_all_cursors_after */
extern void T1622f28(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].is_last */
extern T1 T1045f7(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_is_last */
extern T1 T1622f10(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_first */
extern void T1622f21(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_first_cell */
extern void T1622f26(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].is_first */
extern T1 T1045f6(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_is_first */
extern T1 T1622f9(TC* ac, T0* C, T0* a1);
/* XM_CHARACTER_DATA.parent */
extern T0* T1842f2(TC* ac, T0* C);
/* XM_PROCESSING_INSTRUCTION.parent */
extern T0* T1841f3(TC* ac, T0* C);
/* XM_COMMENT.parent */
extern T0* T1840f2(TC* ac, T0* C);
/* XM_ELEMENT.parent */
extern T0* T785f3(TC* ac, T0* C);
/* XM_ATTRIBUTE.parent */
extern T0* T810f4(TC* ac, T0* C);
/* XM_ELEMENT.last */
extern T0* T785f13(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].last */
extern T0* T1622f8(TC* ac, T0* C);
/* XM_ELEMENT.is_empty */
extern T1 T785f12(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].is_empty */
extern T1 T1622f7(TC* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.new_namespace */
extern T0* T799f8(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].force_last */
extern void T1244f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_put */
extern void T1244f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].clashes_put */
extern void T1244f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].slots_item */
extern T6 T1244f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].hash_position */
extern T6 T1244f20(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE.hash_code */
extern T6 T1044f6(TC* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].resize */
extern void T1244f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_resize */
extern void T1244f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].special_integer_ */
extern T0* T1244s29(TC* ac);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_resize */
extern void T1244f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_resize */
extern void T1244f46(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].aliased_resized_area */
extern T0* T1751s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [XM_NAMESPACE].aliased_resized_area */
extern T0* T1752f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_item */
extern T0* T1244f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_item */
extern T0* T1244f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_item */
extern T6 T1244f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_resize */
extern void T1244f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_modulus */
extern T6 T1244f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_capacity */
extern T6 T1244f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_put */
extern void T1244f41(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].force */
extern void T1751s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].fill_with */
extern void T1752f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].extend */
extern void T1752f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].search_position */
extern void T1244f40(TC* ac, T0* C, T0* a1);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].test */
extern T1 T1749f1(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE.is_equal */
extern T1 T1044f4(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE.string_ */
extern T0* T1044s5(TC* ac);
/* DS_HASH_SET [XM_NAMESPACE].key_equality_tester */
extern T0* T1244f25(TC* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].unset_found_item */
extern void T1244f37(TC* ac, T0* C);
/* XM_NAMESPACE.same_prefix */
extern T1 T1044f3(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].item */
extern T0* T1244f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].has */
extern T1 T1244f30(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE.make */
extern void T1044f8(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE.make */
extern T0* T1044c8(TC* ac, T0* a1, T0* a2);
/* DS_LINKED_QUEUE [STRING_8].item */
extern T0* T1748f4(TC* ac, T0* C);
/* DS_LINKED_QUEUE [detachable STRING_8].item */
extern T0* T1747f5(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_is_empty */
extern T1 T1241f12(TC* ac, T0* C);
/* DS_LINKED_QUEUE [detachable STRING_8].is_empty */
extern T1 T1747f4(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T809f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T809f14p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag */
extern void T799f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_root */
extern T0* T785c19(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_DOCUMENT.set_root_element */
extern void T806f15(TC* ac, T0* C, T0* a1);
/* XM_DOCUMENT.force_last */
extern void T806f12(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].force_last */
extern void T1245f12(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].force_last */
extern void T1245f12p1(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_DOCUMENT_NODE].make */
extern T0* T1753c3(TC* ac, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].before_addition */
extern void T1245f14(TC* ac, T0* C, T0* a1);
/* XM_DOCUMENT.before_addition */
extern void T806f13(TC* ac, T0* C, T0* a1);
/* XM_DOCUMENT.last */
extern T0* T806f6(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].last */
extern T0* T1245f7(TC* ac, T0* C);
/* XM_DOCUMENT.is_empty */
extern T1 T806f5(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].is_empty */
extern T1 T1245f6(TC* ac, T0* C);
/* XM_DOCUMENT.remove_previous_root_element */
extern void T806f16(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].go_after */
extern void T1630f14(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_go_after */
extern void T1245f28(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].make */
extern T0* T1622c11(TC* ac);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_internal_cursor */
extern void T1622f12(TC* ac, T0* C, T0* a1);
/* XM_ELEMENT.make_last */
extern T0* T785c18(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.has */
extern T1 T1744f5(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start_tag_finish */
extern void T1204f7(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.is_equal */
extern T1 T1211f6(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.same_string */
extern T1 T1211f13(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.when_external_dtd */
extern void T795f245(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_from_resolver */
extern void T1237f283(TC* ac, T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.last_stream */
extern T0* T1207f2(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_from_resolver */
extern void T1240f287(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_from_resolver */
extern void T1238f211(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T1199f209(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern T0* T1238c205(TC* ac);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern void T1238f205p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T1238f214(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T1238f214p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T1238f214p0(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_with_buffer */
extern void T1238f213(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_load_input_buffer */
extern void T1238f225(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_content */
extern void T1238f226(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T1238f224(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T1238f224p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_build_tables */
extern void T1238f229(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template */
extern T0* T1238f199(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_fixed_array */
extern T0* T1238f202(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_4 */
extern void T1238f283(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_array_subcopy */
extern void T1238f284(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER_DTD.integer_array_ */
extern T0* T1238s204(TC* ac);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_3 */
extern void T1238f282(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_2 */
extern void T1238f281(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_1 */
extern void T1238f280(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_meta_template */
extern T0* T1238f198(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template */
extern T0* T1238f197(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template_2 */
extern void T1238f279(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template_1 */
extern void T1238f278(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template */
extern T0* T1238f196(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_5 */
extern void T1238f277(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_4 */
extern void T1238f276(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_3 */
extern void T1238f275(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_2 */
extern void T1238f274(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_1 */
extern void T1238f273(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template */
extern T0* T1238f195(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_5 */
extern void T1238f272(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_4 */
extern void T1238f271(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_3 */
extern void T1238f270(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_2 */
extern void T1238f269(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_1 */
extern void T1238f268(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template */
extern T0* T1238f194(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_18 */
extern void T1238f267(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_17 */
extern void T1238f266(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_16 */
extern void T1238f265(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_15 */
extern void T1238f264(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_14 */
extern void T1238f263(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_13 */
extern void T1238f262(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_12 */
extern void T1238f261(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_11 */
extern void T1238f260(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_10 */
extern void T1238f259(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_9 */
extern void T1238f258(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_8 */
extern void T1238f257(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_7 */
extern void T1238f256(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_6 */
extern void T1238f255(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_5 */
extern void T1238f254(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_4 */
extern void T1238f253(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_3 */
extern void T1238f252(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_2 */
extern void T1238f251(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_1 */
extern void T1238f250(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template */
extern T0* T1238f193(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_20 */
extern void T1238f249(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_19 */
extern void T1238f248(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_18 */
extern void T1238f247(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_17 */
extern void T1238f246(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_16 */
extern void T1238f245(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_15 */
extern void T1238f244(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_14 */
extern void T1238f243(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_13 */
extern void T1238f242(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_12 */
extern void T1238f241(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_11 */
extern void T1238f240(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_10 */
extern void T1238f239(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_9 */
extern void T1238f238(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_8 */
extern void T1238f237(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_7 */
extern void T1238f236(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_6 */
extern void T1238f235(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_5 */
extern void T1238f234(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_4 */
extern void T1238f233(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_3 */
extern void T1238f232(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_2 */
extern void T1238f231(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_1 */
extern void T1238f230(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.empty_buffer */
extern T0* T1238f52(TC* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].force */
extern void T1203f8(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.null_resolver */
extern T0* T795f112(TC* ac, T0* C);
/* XM_NULL_EXTERNAL_RESOLVER.last_error */
extern T0* T1207f1(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.resolve_external_id */
extern void T795f261(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.resolve */
extern void T1207f5(TC* ac, T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_public */
extern void T1207f4(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].force */
extern void T1216s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].fill_with */
extern void T1218f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].extend */
extern void T1218f10(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_end */
extern void T795f244(TC* ac, T0* C);
/* XM_DTD_CALLBACKS_NULL.on_dtd_end */
extern void T1209f5(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_doctype */
extern void T795f243(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.on_doctype */
extern void T1209f4(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_DECLARATION.set_encoding */
extern void T1233f9(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_DECLARATION.set_stand_alone */
extern void T1233f8(TC* ac, T0* C, T1 a1);
/* XM_EIFFEL_DECLARATION.set_version */
extern void T1233f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].force */
extern void T1232s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].fill_with */
extern void T1234f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].extend */
extern void T1234f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T1232s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T1234f4(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_DECLARATION.make */
extern T0* T1233c7(TC* ac);
/* XM_EIFFEL_DECLARATION.process */
extern void T1233f10(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_xml_declaration */
extern void T795f287(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.on_xml_declaration */
extern void T1241f45(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_STOP_ON_ERROR_FILTER.on_xml_declaration */
extern void T809f19(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_xml_declaration */
extern void T799f25(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_CALLBACKS_NULL.on_xml_declaration */
extern void T1204f12(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_PARSER.apply_encoding */
extern void T795f242(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_encoding */
extern void T1237f282(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.set_encoding */
extern void T1629f31(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_encoding */
extern void T1240f286(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_encoding */
extern void T1238f210(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_encoding */
extern void T1199f208(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_applicable_encoding */
extern T1 T1237f62(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_applicable_encoding */
extern T1 T1629f21(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_valid_encoding */
extern T1 T1629f14(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.is_applicable_encoding */
extern T1 T1240f64(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.is_applicable_encoding */
extern T1 T1238f51(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T1199f74(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_content */
extern void T795f241(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_content */
extern void T1241f32(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T809f13(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T809f13p1(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_content */
extern void T799f18(TC* ac, T0* C, T0* a1);
/* XM_CHARACTER_DATA.make_last */
extern T0* T1842c3(TC* ac, T0* a1, T0* a2);
/* XM_CALLBACKS_NULL.on_content */
extern void T1204f6(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_processing_instruction */
extern void T795f240(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_dtd_processing_instruction */
extern void T1209f3(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_processing_instruction */
extern void T795f239(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.on_processing_instruction */
extern void T1241f31(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T809f12(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T809f12p1(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.on_processing_instruction */
extern void T799f17(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_PROCESSING_INSTRUCTION.make_last_in_document */
extern T0* T1841c5(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_PROCESSING_INSTRUCTION.make_last */
extern T0* T1841c4(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_processing_instruction */
extern void T1204f5(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_dtd_comment */
extern void T795f238(TC* ac, T0* C, T0* a1);
/* XM_DTD_CALLBACKS_NULL.on_dtd_comment */
extern void T1209f2(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_comment */
extern void T795f237(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_comment */
extern void T1241f30(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T809f11(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T809f11p1(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_comment */
extern void T799f16(TC* ac, T0* C, T0* a1);
/* XM_COMMENT.make_last_in_document */
extern T0* T1840c4(TC* ac, T0* a1, T0* a2);
/* XM_COMMENT.make_last */
extern T0* T1840c3(TC* ac, T0* a1, T0* a2);
/* XM_CALLBACKS_NULL.on_comment */
extern void T1204f4(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.entity_referenced_in_entity_value */
extern T0* T795f138(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.defined_entity_referenced */
extern T0* T795f191(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.external_entity_to_string */
extern T0* T795f198(TC* ac, T0* C, T0* a1);
/* STRING_8.remove */
extern void T17f85(TC* ac, T0* C, T6 a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_finish */
extern void T1207f6(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_string */
extern void T1629f30(TC* ac, T0* C, T6 a1);
/* KL_INTEGER_ROUTINES.platform */
extern T0* T1347s3(TC* ac);
/* XM_EIFFEL_PARSER.integer_ */
extern T0* T795s203(TC* ac);
/* XM_EIFFEL_INPUT_STREAM.make_from_stream */
extern T0* T1629c29(TC* ac, T0* a1);
/* DS_LINKED_QUEUE [CHARACTER_8].make */
extern T0* T1946c5(TC* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item */
extern T0* T1205f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_item */
extern T0* T1205f35(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.string_ */
extern T0* T795s137(TC* ac);
/* XM_EIFFEL_PARSER.force_error */
extern void T795f236(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.report_error */
extern void T795f234(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_error */
extern void T795f260(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.last_error_extended_description */
extern T0* T795f173(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.safe_error_component */
extern T0* T795f193(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_safe_error_character */
extern T1 T795f201(TC* ac, T0* C, T2 a1);
/* XM_EIFFEL_PARSER.setup_error_state */
extern void T795f259(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.close_input */
extern void T1237f280(TC* ac, T0* C);
/* KL_STRING_INPUT_STREAM.close */
extern void T1794f11(TC* ac, T0* C);
/* KL_STRING_INPUT_STREAM.is_closable */
extern T1 T1794f8(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.close_input */
extern void T1240f284(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.close_input */
extern void T1238f208(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.close_input */
extern void T1199f206(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.onstring_utf8 */
extern T0* T795f126(TC* ac, T0* C, T0* a1);
/* STRING_8.string */
extern T0* T17f45(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.maximum_item_code */
extern T10 T795f186(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_latin1 */
extern T1 T795f185(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_from_utf8 */
extern T0* T795s181(TC* ac, T0* a1);
/* UC_UTF8_STRING.make_from_utf8 */
extern T0* T1066c72(TC* ac, T0* a1);
/* UC_UTF8_STRING.append_utf8 */
extern void T1066f92(TC* ac, T0* C, T0* a1);
/* UC_UTF8_ROUTINES.valid_utf8 */
extern T1 T167s39(TC* ac, T0* a1);
/* UC_UTF8_ROUTINES.valid_utf8_substring */
extern T1 T167s47(TC* ac, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_PARSER.utf8 */
extern T0* T795s184(TC* ac);
/* XM_EIFFEL_PARSER.is_string_mode_ascii */
extern T1 T795f182(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.onstring_ascii */
extern T0* T795f124(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_unicode */
extern T1 T795f180(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string */
extern T0* T795f135(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_string */
extern T0* T795f190(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_uc */
extern T0* T795f189(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_empty */
extern T0* T795s197(TC* ac);
/* UC_UTF8_STRING.make_empty */
extern T0* T1066c83(TC* ac);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].force */
extern void T1210s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].fill_with */
extern void T1212f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].extend */
extern void T1212f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T1210s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T1212f4(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.namespace_force_last */
extern void T795f235(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER_NAME.force_last */
extern void T1211f19(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.can_force_last */
extern T1 T1211f12(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_namespace_name */
extern T0* T795f134(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_namespaces */
extern T0* T1211c20(TC* ac);
/* XM_EIFFEL_PARSER.yy_push_last_value */
extern void T795f225(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.accept */
extern void T795f224(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_do_error_action */
extern void T795f222(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.report_eof_expected_error */
extern void T795f233(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.read_token */
extern void T795f221(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.process_attribute_entity */
extern void T795f232(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity_scanner */
extern void T795f258(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.apply_input_buffer */
extern void T1237f276(TC* ac, T0* C);
/* UC_UTF8_ROUTINES.to_utf8 */
extern T0* T167s54(TC* ac, T0* a1);
extern T1 T167s54ot1(TC* ac, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.utf8 */
extern T0* T1237s69(TC* ac);
/* XM_EIFFEL_ENTITY_DEF.fatal_error */
extern void T1237f284(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.apply_input_buffer */
extern void T1240f280(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.utf8 */
extern T0* T1240s71(TC* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.fatal_error */
extern void T1240f288(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_literal */
extern T1 T1237f64(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.is_external */
extern T1 T1237f67(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_literal */
extern T1 T1240f66(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_external */
extern T1 T1240f69(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.process_entity */
extern void T795f231(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_pe_entity */
extern void T795f230(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.end_of_file */
extern T1 T1237f61(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.end_of_file */
extern T1 T1240f63(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.end_of_file */
extern T1 T1238f69(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.end_of_file */
extern T1 T1199f72(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.last_value */
extern T0* T1237f10(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.last_value */
extern T0* T1240f10(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.last_value */
extern T0* T1238f2(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.last_value */
extern T0* T1199f2(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.last_token */
extern T6 T1237f45(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.last_token */
extern T6 T1240f47(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.last_token */
extern T6 T1238f1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.last_token */
extern T6 T1199f1(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T1237f279(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T1237f279p1(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_action */
extern void T1237f289(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.from_hexadecimal */
extern void T1726f10(TC* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.hexadecimal_to_integer */
extern T6 T108s21(TC* ac, T0* a1);
/* XM_EIFFEL_CHARACTER_ENTITY.string_ */
extern T0* T1726s7(TC* ac);
/* XM_EIFFEL_CHARACTER_ENTITY.to_utf8 */
extern T0* T1726f3(TC* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.utf8 */
extern T0* T1726s6(TC* ac);
/* XM_EIFFEL_CHARACTER_ENTITY.is_ascii */
extern T1 T1726f2(TC* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_valid */
extern T1 T1726f5(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_code */
extern T1 T906s52(TC* ac, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.unicode */
extern T0* T1726s4(TC* ac);
/* XM_EIFFEL_CHARACTER_ENTITY.from_decimal */
extern void T1726f9(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.has_normalized_newline */
extern T1 T1237f204(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_substring */
extern T0* T1237f184(TC* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_ENTITY_DEF.text_count */
extern T6 T1237f183(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.system_literal_text */
extern T0* T1237f165(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_item */
extern T2 T1237f211(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T1237f124(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T1237f124p1(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_line_column */
extern void T1237f294(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text */
extern T0* T1237f108(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.pop_start_condition */
extern void T1237f293(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.set_last_token */
extern void T1237f292(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_eof_action */
extern void T1237f288(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.terminate */
extern void T1237f291(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.wrap */
extern T1 T1237f102(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_refill_input_buffer */
extern void T1237f287(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_null_trans_state */
extern T6 T1237f101(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_previous_state */
extern T6 T1237f100(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.report_invalid_unicode_character_error */
extern void T1237f286(TC* ac, T0* C, T10 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_at_beginning_of_line */
extern T6 T1237f89(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T1240f283(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T1240f283p1(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T1240f283p0(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_action */
extern void T1240f294(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.has_normalized_newline */
extern T1 T1240f207(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_substring */
extern T0* T1240f187(TC* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_PE_ENTITY_DEF.text_count */
extern T6 T1240f186(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.system_literal_text */
extern T0* T1240f168(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_item */
extern T2 T1240f213(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T1240f127(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T1240f127p1(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_line_column */
extern void T1240f298(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text */
extern T0* T1240f111(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.pop_start_condition */
extern void T1240f297(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_last_token */
extern void T1240f296(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_eof_action */
extern void T1240f293(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.wrap */
extern T1 T1240f105(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_refill_input_buffer */
extern void T1240f292(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_null_trans_state */
extern T6 T1240f104(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_previous_state */
extern T6 T1240f103(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.report_invalid_unicode_character_error */
extern void T1240f291(TC* ac, T0* C, T10 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_at_beginning_of_line */
extern T6 T1240f92(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.terminate */
extern void T1240f290(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T1238f207(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T1238f207p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_action */
extern void T1238f222(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.has_normalized_newline */
extern T1 T1238f187(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_substring */
extern T0* T1238f167(TC* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER_DTD.text_count */
extern T6 T1238f166(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.system_literal_text */
extern T0* T1238f148(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_item */
extern T2 T1238f201(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.normalized_newline */
extern T0* T1238f110(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_line_column */
extern void T1238f228(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text */
extern T0* T1238f84(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.pop_start_condition */
extern void T1238f227(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_eof_action */
extern void T1238f221(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.wrap */
extern T1 T1238f72(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_refill_input_buffer */
extern void T1238f220(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_null_trans_state */
extern T6 T1238f71(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_previous_state */
extern T6 T1238f70(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.fatal_error */
extern void T1238f219(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.report_invalid_unicode_character_error */
extern void T1238f218(TC* ac, T0* C, T10 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_at_beginning_of_line */
extern T6 T1238f62(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.terminate */
extern void T1238f217(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_last_token */
extern void T1238f216(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.read_token */
extern void T1199f205(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_execute_action */
extern void T1199f217(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.has_normalized_newline */
extern T1 T1199f185(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.text_substring */
extern T0* T1199f165(TC* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER.text_count */
extern T6 T1199f164(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.system_literal_text */
extern T0* T1199f146(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.text_item */
extern T2 T1199f199(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.normalized_newline */
extern T0* T1199f105(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_set_line_column */
extern void T1199f225(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.text */
extern T0* T1199f79(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.pop_start_condition */
extern void T1199f224(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.set_last_token */
extern void T1199f223(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_execute_eof_action */
extern void T1199f216(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.terminate */
extern void T1199f222(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.wrap */
extern T1 T1199f67(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_refill_input_buffer */
extern void T1199f215(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_set_content */
extern void T1199f221(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_null_trans_state */
extern T6 T1199f66(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_previous_state */
extern T6 T1199f65(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.fatal_error */
extern void T1199f214(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.report_invalid_unicode_character_error */
extern void T1199f213(TC* ac, T0* C, T10 a1);
/* XM_EIFFEL_SCANNER.yy_at_beginning_of_line */
extern T6 T1199f50(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.special_integer_ */
extern T0* T795s97(TC* ac);
/* XM_EIFFEL_PARSER.yy_init_value_stacks */
extern void T795f220(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_clear_all */
extern void T795f229(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.clear_all */
extern void T795f257(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.clear_stacks */
extern void T795f263(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T795f264(TC* ac, T0* C);
/* SPECIAL [XM_EIFFEL_DECLARATION].keep_head */
extern void T1234f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].set_count */
extern void T1234f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].keep_head */
extern void T1230f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].set_count */
extern void T1230f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].keep_head */
extern void T1227f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].set_count */
extern void T1227f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].keep_head */
extern void T1224f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].set_count */
extern void T1224f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].keep_head */
extern void T1221f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].set_count */
extern void T1221f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].keep_head */
extern void T1218f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].set_count */
extern void T1218f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].keep_head */
extern void T1215f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].set_count */
extern void T1215f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].keep_head */
extern void T1212f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].set_count */
extern void T1212f9(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.abort */
extern void T795f223(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_start */
extern void T795f217(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start */
extern void T1241f28(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T809f9(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T809f9p1(TC* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start */
extern void T799f14(TC* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.initialize */
extern void T799f12(TC* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_equal */
extern T0* T1244c31(TC* ac, T6 a1);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].default_create */
extern T0* T1749c2(TC* ac);
/* DS_HASH_SET [XM_NAMESPACE].make */
extern void T1244f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].set_internal_cursor */
extern void T1244f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].new_cursor */
extern T0* T1244f24(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [XM_NAMESPACE].make */
extern T0* T1750c4(TC* ac, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].make_slots */
extern void T1244f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_clashes */
extern void T1244f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_key_storage */
extern void T1244f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_item_storage */
extern void T1244f33(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].make */
extern T0* T1751s1(TC* ac, T6 a1);
/* SPECIAL [XM_NAMESPACE].make_empty */
extern T0* T1752c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].default_create */
extern T0* T1751c3(TC* ac);
/* XM_DOCUMENT.make */
extern T0* T806c10(TC* ac);
/* XM_DOCUMENT.make_with_root_named */
extern void T806f11(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.make */
extern T0* T785c16(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].make */
extern T0* T1245c11(TC* ac);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_internal_cursor */
extern void T1245f13(TC* ac, T0* C, T0* a1);
/* XM_DOCUMENT.default_ns */
extern T0* T806f3(TC* ac, T0* C);
/* XM_NAMESPACE.make_default */
extern T0* T1044c7(TC* ac);
/* XM_NAMESPACE_RESOLVER.initialize */
extern void T1241f39(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_make */
extern void T1241f43(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.new_string_queue */
extern T0* T1241f21(TC* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].make */
extern T0* T1748c5(TC* ac);
/* XM_NAMESPACE_RESOLVER.new_detachable_string_queue */
extern T0* T1241f20(TC* ac, T0* C);
/* DS_LINKED_QUEUE [detachable STRING_8].make */
extern T0* T1747c6(TC* ac);
/* XM_NAMESPACE_RESOLVER_CONTEXT.make */
extern T0* T1744c10(TC* ac);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T2002c8(TC* ac);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].set_internal_cursor */
extern void T2002f11(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start */
extern void T1204f2(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.reset_error_state */
extern void T795f216(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.set_input_stream */
extern void T1237f278(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T1237f285(TC* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.name */
extern T0* T1109f16(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T1237f285p1(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.new_file_buffer */
extern T0* T1237f72(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_stream */
extern void T1240f282(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T1240f289(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T1240f289p1(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.new_file_buffer */
extern T0* T1240f74(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_stream */
extern void T1238f206(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T1238f215(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T1238f215p1(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.new_file_buffer */
extern T0* T1238f58(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_stream */
extern void T1199f204(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T1199f212(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T1199f212p1(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_load_input_buffer */
extern void T1199f220(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.new_file_buffer */
extern T0* T1199f48(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.reset */
extern void T795f212(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].wipe_out */
extern void T1205f37(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_wipe_out */
extern void T1205f47(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_wipe_out */
extern void T1205f46(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_wipe_out */
extern void T1205f45(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_wipe_out */
extern void T1205f44(TC* ac, T0* C);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].keep_head */
extern void T1730f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].set_count */
extern void T1730f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].move_all_cursors_after */
extern void T1205f42(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_next_cursor */
extern void T1733f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_after */
extern void T1733f7(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.make_scanner */
extern void T795f210(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.make_scanner */
extern T0* T1199c203(TC* ac);
/* XM_EIFFEL_SCANNER.reset */
extern void T1199f211(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T1199f211p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T1199f211p0(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.make_with_buffer */
extern void T1199f210(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T1199f219(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T1199f219p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_build_tables */
extern void T1199f227(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template */
extern T0* T1199f197(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_fixed_array */
extern T0* T1199f200(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_4 */
extern void T1199f281(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_array_subcopy */
extern void T1199f282(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER.integer_array_ */
extern T0* T1199s202(TC* ac);
/* XM_EIFFEL_SCANNER.yy_accept_template_3 */
extern void T1199f280(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_2 */
extern void T1199f279(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_1 */
extern void T1199f278(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_meta_template */
extern T0* T1199f196(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template */
extern T0* T1199f195(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template_2 */
extern void T1199f277(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_ec_template_1 */
extern void T1199f276(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template */
extern T0* T1199f194(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_def_template_5 */
extern void T1199f275(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_4 */
extern void T1199f274(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_3 */
extern void T1199f273(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_2 */
extern void T1199f272(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_1 */
extern void T1199f271(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template */
extern T0* T1199f193(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_base_template_5 */
extern void T1199f270(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_4 */
extern void T1199f269(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_3 */
extern void T1199f268(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_2 */
extern void T1199f267(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_1 */
extern void T1199f266(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template */
extern T0* T1199f192(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_18 */
extern void T1199f265(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_17 */
extern void T1199f264(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_16 */
extern void T1199f263(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_15 */
extern void T1199f262(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_14 */
extern void T1199f261(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_13 */
extern void T1199f260(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_12 */
extern void T1199f259(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_11 */
extern void T1199f258(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_10 */
extern void T1199f257(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_9 */
extern void T1199f256(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_8 */
extern void T1199f255(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_7 */
extern void T1199f254(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_6 */
extern void T1199f253(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_5 */
extern void T1199f252(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_4 */
extern void T1199f251(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_3 */
extern void T1199f250(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_2 */
extern void T1199f249(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_1 */
extern void T1199f248(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template */
extern T0* T1199f191(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_nxt_template_20 */
extern void T1199f247(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_19 */
extern void T1199f246(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_18 */
extern void T1199f245(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_17 */
extern void T1199f244(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_16 */
extern void T1199f243(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_15 */
extern void T1199f242(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_14 */
extern void T1199f241(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_13 */
extern void T1199f240(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_12 */
extern void T1199f239(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_11 */
extern void T1199f238(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_10 */
extern void T1199f237(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_9 */
extern void T1199f236(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_8 */
extern void T1199f235(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_7 */
extern void T1199f234(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_6 */
extern void T1199f233(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_5 */
extern void T1199f232(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_4 */
extern void T1199f231(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_3 */
extern void T1199f230(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_2 */
extern void T1199f229(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_1 */
extern void T1199f228(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.empty_buffer */
extern T0* T1199f45(TC* ac, T0* C);
/* DS_CELL [detachable ET_ECF_SYSTEM].make */
extern T0* T781c2(TC* ac, T0* a1);
/* GEC.target_name */
extern T0* T26f42(TC* ac, T0* C);
/* AP_STRING_OPTION.parameter */
extern T0* T54f15(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.set_override_variables */
extern void T85f220(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_override_capabilities */
extern void T85f219(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_override_settings */
extern void T85f218(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.make */
extern T0* T85c217(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T85f222(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.enable_position_table */
extern void T799f10(TC* ac, T0* C, T0* a1);
/* XM_POSITION_TABLE.make */
extern T0* T786c4(TC* ac);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T1627c7(TC* ac);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].set_internal_cursor */
extern void T1627f8(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.set_callbacks */
extern void T795f207(TC* ac, T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.make */
extern T0* T796c10(TC* ac);
/* XM_TREE_CALLBACKS_PIPE.callbacks_pipe */
extern T0* T796f9(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.set_next */
extern void T809f8(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.set_next */
extern void T1241f42(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.set_next */
extern void T799f13(TC* ac, T0* C, T0* a1);
/* ARRAY [XM_CALLBACKS_FILTER].item */
extern T0* T1242f4(TC* ac, T0* C, T6 a1);
/* XM_CALLBACKS_TO_TREE_FILTER.make_null */
extern T0* T799c9(TC* ac);
/* XM_CALLBACKS_TO_TREE_FILTER.make_next */
extern void T799f11(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.null_callbacks */
extern T0* T799f7(TC* ac, T0* C);
/* XM_CALLBACKS_NULL.make */
extern T0* T1204c1(TC* ac);
/* XM_TREE_CALLBACKS_PIPE.new_stop_on_error */
extern T0* T796f7(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.make_null */
extern T0* T809c5(TC* ac);
/* XM_STOP_ON_ERROR_FILTER.make_next */
extern void T809f6(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.initialize */
extern void T809f7(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.null_callbacks */
extern T0* T809f4(TC* ac, T0* C);
/* XM_TREE_CALLBACKS_PIPE.new_namespace_resolver */
extern T0* T796f6(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.make_null */
extern T0* T1241c27(TC* ac);
/* XM_NAMESPACE_RESOLVER.make_next */
extern void T1241f38(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.null_callbacks */
extern T0* T1241f13(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.set_string_mode_mixed */
extern void T795f206(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.make */
extern T0* T795c205(TC* ac);
/* XM_EIFFEL_PARSER.new_entities_table */
extern T0* T795f85(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].set_key_equality_tester */
extern void T1205f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map_default */
extern T0* T1205c36(TC* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map */
extern void T1205f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_with_equality_testers */
extern void T1205f53(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_sparse_container */
extern void T1205f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].set_internal_cursor */
extern void T1205f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_cursor */
extern T0* T1205f34(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].make */
extern T0* T1733c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_slots */
extern void T1205f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_clashes */
extern void T1205f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_key_storage */
extern void T1205f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_item_storage */
extern void T1205f59(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].make */
extern T0* T1734s2(TC* ac, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].make_empty */
extern T0* T1730c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].default_create */
extern T0* T1734c3(TC* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].default_capacity */
extern T6 T1205f30(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.make_parser */
extern void T795f211(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_build_parser_tables */
extern void T795f215(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yycheck_template */
extern T0* T795f121(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yyfixed_array */
extern T0* T795f178(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_4 */
extern void T795f285(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyarray_subcopy */
extern void T795f286(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PARSER.integer_array_ */
extern T0* T795s204(TC* ac);
/* XM_EIFFEL_PARSER.yycheck_template_3 */
extern void T795f284(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_2 */
extern void T795f283(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_1 */
extern void T795f282(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template */
extern T0* T795f119(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yytable_template_4 */
extern void T795f281(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_3 */
extern void T795f280(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_2 */
extern void T795f279(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_1 */
extern void T795f278(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypgoto_template */
extern T0* T795f117(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yypact_template */
extern T0* T795f115(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yypact_template_3 */
extern void T795f277(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypact_template_2 */
extern void T795f276(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypact_template_1 */
extern void T795f275(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefgoto_template */
extern T0* T795f113(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yydefact_template */
extern T0* T795f105(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yydefact_template_3 */
extern void T795f274(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefact_template_2 */
extern void T795f273(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefact_template_1 */
extern void T795f272(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes2_template */
extern T0* T795f98(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template */
extern T0* T795f93(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template_3 */
extern void T795f271(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes1_template_2 */
extern void T795f270(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes1_template_1 */
extern void T795f269(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyr1_template */
extern T0* T795f89(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yyr1_template_2 */
extern void T795f268(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyr1_template_1 */
extern void T795f267(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytranslate_template */
extern T0* T795f87(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yytranslate_template_2 */
extern void T795f266(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytranslate_template_1 */
extern void T795f265(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yy_create_value_stacks */
extern void T795f214(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].make */
extern T0* T1232s1(TC* ac, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].make_empty */
extern T0* T1234c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].default_create */
extern T0* T1232c3(TC* ac);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].make */
extern T0* T1228s1(TC* ac, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].make_empty */
extern T0* T1230c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].default_create */
extern T0* T1228c3(TC* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1225s1(TC* ac, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].make_empty */
extern T0* T1227c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].default_create */
extern T0* T1225c3(TC* ac);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T1222s1(TC* ac, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make_empty */
extern T0* T1224c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].default_create */
extern T0* T1222c3(TC* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1219s1(TC* ac, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].make_empty */
extern T0* T1221c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].default_create */
extern T0* T1219c3(TC* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].make */
extern T0* T1216s1(TC* ac, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].make_empty */
extern T0* T1218c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].default_create */
extern T0* T1216c3(TC* ac);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make */
extern T0* T1213s1(TC* ac, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make_empty */
extern T0* T1215c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].default_create */
extern T0* T1213c3(TC* ac);
/* XM_EIFFEL_PARSER.initialize */
extern void T795f209(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.null_dtd_callbacks */
extern T0* T795f86(TC* ac, T0* C);
/* XM_DTD_CALLBACKS_NULL.make */
extern T0* T1209c1(TC* ac);
/* XM_EIFFEL_PARSER.null_callbacks */
extern T0* T795f84(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_key_equality_tester */
extern void T793f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_map */
extern T0* T793c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_with_equality_testers */
extern void T793f39(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_sparse_container */
extern void T793f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_internal_cursor */
extern void T793f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_cursor */
extern T0* T793f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make */
extern T0* T1197c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_slots */
extern void T793f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_clashes */
extern void T793f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_key_storage */
extern void T793f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_item_storage */
extern void T793f57(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].make */
extern T0* T1198s2(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].make_empty */
extern T0* T1194c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].default_create */
extern T0* T1198c3(TC* ac);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].set_key_equality_tester */
extern void T791f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_map */
extern T0* T791c40(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_with_equality_testers */
extern void T791f47(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_sparse_container */
extern void T791f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].set_internal_cursor */
extern void T791f73(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_cursor */
extern T0* T791f37(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].make */
extern T0* T1189c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_slots */
extern void T791f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_clashes */
extern void T791f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_key_storage */
extern void T791f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_item_storage */
extern void T791f69(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].make */
extern T0* T1193s2(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_LIBRARY].make_empty */
extern T0* T1190c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].default_create */
extern T0* T1193c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T85f222p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ise_latest */
extern T0* T85s15(TC* ac);
/* ET_ECF_AST_FACTORY.make */
extern T0* T780c56(TC* ac);
/* ET_ECF_ERROR_HANDLER.make_standard */
extern T0* T86c10(TC* ac);
/* ET_ECF_ERROR_HANDLER.std */
extern T0* T86s7(TC* ac);
/* ET_ECF_ERROR_HANDLER.make_null */
extern T0* T86c9(TC* ac);
/* ET_ECF_ERROR_HANDLER.null_output_stream */
extern T0* T86s6(TC* ac);
/* KL_EXECUTION_ENVIRONMENT.interpreted_string */
extern T0* T49f2(TC* ac, T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.expanded_string */
extern T0* T49f5(TC* ac, T0* C, T0* a1, T1 a2);
/* GEC.execution_environment */
extern T0* T26s60(TC* ac);
/* KL_UNIX_FILE_SYSTEM.nested_pathname */
extern T0* T152s3(TC* ac, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.nested_pathname */
extern T0* T151s3(TC* ac, T0* a1, T0* a2);
/* GEC.report_cannot_read_error */
extern void T26f77(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.close */
extern void T43f63(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_close */
extern void T43f65(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.default_pointer */
extern T14 T43s28(TC* ac);
/* KL_TEXT_INPUT_FILE.file_close */
extern void T43s70(TC* ac, T14 a1);
/* GEC.parse_eiffel_file */
extern void T26f76(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature GEC.parse_eiffel_file */
extern T0* T26f76ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature GEC.parse_eiffel_file */
extern T0* T26f76ac2(TC* ac);
/* ET_SYSTEM.classes_do_if_recursive */
extern void T50f140(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_SYSTEM.classes_do_if_recursive */
extern T0* T50f140ac1(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM.universes_do_recursive */
extern void T50f146(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.add_universe_recursive */
extern void T50f189(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.add_universe_recursive */
extern T0* T50f189ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM.add_universe_recursive */
extern T0* T50f189ac2(TC* ac, T0* a1);
/* ET_SYSTEM.initial_universes_capacity */
extern T6 T50f128(TC* ac, T0* C);
/* ET_CLUSTER.make */
extern T0* T67c40(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T67f41(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_ast_factory */
extern void T66f49(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_ast_factory_only */
extern void T66f53(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.is_open_read */
extern T1 T43f30(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_read */
extern T1 T43f21(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T43f62(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_open_read */
extern void T43f67(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T43f67p1(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_open */
extern T14 T43s31(TC* ac, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.old_is_readable */
extern T1 T43f24(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.make */
extern void T43f61(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern T0* T43c61(TC* ac, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern void T43f61p1(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.old_make */
extern void T43f66(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make_with_name */
extern void T43f66p1(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.has_extension */
extern T1 T152s2(TC* ac, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.has_extension */
extern T1 T151s2(TC* ac, T0* a1, T0* a2);
/* GEC.file_system */
extern T0* T26s44(TC* ac);
/* GEC.unix_file_system */
extern T0* T26s69(TC* ac);
/* GEC.windows_file_system */
extern T0* T26s68(TC* ac);
/* AP_FLAG.was_found */
extern T1 T46f9(TC* ac, T0* C);
/* GEC.parse_arguments */
extern void T26f75(TC* ac, T0* C, T0* a1);
/* GEC.set_new_instance_types */
extern void T26f87(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [STRING_8].force */
extern void T99f39(TC* ac, T0* C, T0* a1);
/* GEC.set_split_size */
extern void T26f86(TC* ac, T0* C, T0* a1, T0* a2);
/* GEC.set_override_variables */
extern void T26f85(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].forth */
extern void T219f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].cursor_forth */
extern void T218f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].set_position */
extern void T219f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable STRING_8].add_traversing_cursor */
extern void T218f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].set_next_cursor */
extern void T219f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable STRING_8].remove_traversing_cursor */
extern void T218f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].item */
extern T0* T219f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].cursor_item */
extern T0* T218f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].after */
extern T1 T219f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].new_iterator */
extern T0* T218f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].start */
extern void T219f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].cursor_start */
extern void T218f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].set_after */
extern void T219f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].off */
extern T1 T219f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].before */
extern T1 T219f8(TC* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.set_variable_value */
extern void T49s19(TC* ac, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.put */
extern void T105f11(TC* ac, T0* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.eif_putenv */
extern T6 T105s6(TC* ac, T14 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].force */
extern void T900f35(TC* ac, T0* C, T0* a1, T0* a2);
/* SPECIAL [NATIVE_STRING].force */
extern void T1338f5(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [NATIVE_STRING].extend */
extern void T1338f7(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].position */
extern T6 T900f22(TC* ac, T0* C);
/* SPECIAL [IMMUTABLE_STRING_32].force */
extern void T1063f5(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [BOOLEAN].force */
extern void T155f6(TC* ac, T0* C, T1 a1, T6 a2);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].deleted_position */
extern T6 T900f21(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].add_space */
extern void T900f37(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].accommodate */
extern void T900f38(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_indexes_map */
extern void T900f42(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_deleted_marks */
extern void T900f41(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_keys */
extern void T900f40(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_content */
extern void T900f39(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].put */
extern void T900f43(TC* ac, T0* C, T0* a1, T0* a2);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_conflict */
extern void T900f45(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].found */
extern T1 T900f31(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].occupied */
extern T1 T900f29(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].empty_duplicate */
extern T0* T900f28(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].compare_objects */
extern void T900f44(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].make */
extern T0* T900c34(TC* ac, T6 a1);
/* SPECIAL [NATIVE_STRING].make_empty */
extern T0* T1338c4(TC* ac, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].soon_full */
extern T1 T900f20(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].not_found */
extern T1 T900f19(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].internal_search */
extern void T900f36(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].same_keys */
extern T1 T900f26(TC* ac, T0* C, T0* a1, T0* a2);
/* IMMUTABLE_STRING_32.is_equal */
extern T1 T20f11(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].hash_code_of */
extern T6 T900f25(TC* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.hash_code */
extern T6 T20f10(TC* ac, T0* C);
/* IMMUTABLE_STRING_32.make_from_string_general */
extern T0* T20c13(TC* ac, T0* a1);
extern T1 T20f13ot1(TC* ac, T0* a1);
extern T1 T20f13ot2(TC* ac, T0* a1);
/* STRING_32.to_string_32 */
extern T0* T18f11(TC* ac, T0* C);
/* IMMUTABLE_STRING_32.make_from_string_32 */
extern void T20f15(TC* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.make_from_string_8 */
extern void T20f14(TC* ac, T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.environ */
extern T0* T105f4(TC* ac, T0* C);
/* GEC.set_override_capabilities */
extern void T26f84(TC* ac, T0* C, T0* a1, T0* a2);
/* GEC.set_override_settings */
extern void T26f83(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SETTINGS.set_primary_values_from_definitions */
extern void T90f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_SETTINGS.set_primary_value_from_definition */
extern void T90f10(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].new_iterator */
extern T0* T220f12(TC* ac, T0* C);
/* GEC.set_ise_version */
extern void T26f82(TC* ac, T0* C, T0* a1, T0* a2);
/* GEC.report_usage_message */
extern void T26f81(TC* ac, T0* C, T0* a1);
/* GEC.report_version_number */
extern void T26f80(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.force_last */
extern void T53f14(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [AP_OPTION].put_right */
extern void T216f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [AP_OPTION].make */
extern T0* T216c3(TC* ac, T0* a1);
/* AP_BOOLEAN_OPTION.set_parameter_description */
extern void T58f28(TC* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.set_description */
extern void T58f27(TC* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.make_with_long_form */
extern T0* T58c26(TC* ac, T0* a1);
/* AP_BOOLEAN_OPTION.set_long_form */
extern void T58f30(TC* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.initialize */
extern void T58f29(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T58f29p1(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T58f29p0(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.set_parameter_description */
extern void T57f28(TC* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.extend */
extern void T57f27(TC* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.update_parameter_description */
extern void T57f32(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].forth */
extern void T220f22(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].is_last */
extern T1 T220f11(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_is_last */
extern T1 T220f8(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].item_for_iteration */
extern T0* T220f10(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_item */
extern T0* T220f7(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].after */
extern T1 T220f13(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_after */
extern T1 T220f6(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].start */
extern void T220f21(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.set_description */
extern void T57f26(TC* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.make_with_long_form */
extern T0* T57c25(TC* ac, T0* a1);
/* AP_ENUMERATION_OPTION.set_long_form */
extern void T57f30(TC* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.initialize */
extern void T57f29(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].set_equality_tester */
extern void T220f20(TC* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.string_equality_tester */
extern T0* T57s14(TC* ac);
/* AP_ENUMERATION_OPTION.initialize */
extern void T57f29p1(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T57f29p0(TC* ac, T0* C);
/* AP_STRING_OPTION.set_default_parameter */
extern void T54f27(TC* ac, T0* C, T0* a1);
/* UT_VERSION.out */
extern T0* T56f10(TC* ac, T0* C);
/* GEC.ise_latest */
extern T0* T26s39(TC* ac);
/* AP_FLAG.make_with_long_form */
extern T0* T46c17(TC* ac, T0* a1);
/* AP_STRING_OPTION.set_parameter_description */
extern void T54f26(TC* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.set_description */
extern void T54f25(TC* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.make_with_long_form */
extern T0* T54c24(TC* ac, T0* a1);
/* AP_STRING_OPTION.set_long_form */
extern void T54f29(TC* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.initialize */
extern void T54f28(TC* ac, T0* C);
/* AP_STRING_OPTION.initialize */
extern void T54f28p1(TC* ac, T0* C);
/* UT_ISE_VARIABLES.set_ise_variables */
extern void T45s18(TC* ac);
/* UT_ISE_VARIABLES.set_ise_c_compiler_variable */
extern void T45s22(TC* ac);
/* UT_ISE_VARIABLES.string_ */
extern T0* T45s11(TC* ac);
/* UT_ISE_VARIABLES.file_system */
extern T0* T45s10(TC* ac);
/* UT_ISE_VARIABLES.unix_file_system */
extern T0* T45s16(TC* ac);
/* UT_ISE_VARIABLES.windows_file_system */
extern T0* T45s15(TC* ac);
/* UT_ISE_VARIABLES.operating_system */
extern T0* T45s14(TC* ac);
/* UT_ISE_VARIABLES.ise_c_compiler_value */
extern T0* T45s9(TC* ac);
/* UT_ISE_VARIABLES.set_ise_platform_variable */
extern void T45s21(TC* ac);
/* UT_ISE_VARIABLES.set_eiffel_library_variable */
extern void T45s20(TC* ac);
/* UT_ISE_VARIABLES.ise_eiffel_value */
extern T0* T45s2(TC* ac);
/* UT_ISE_VARIABLES.eiffel_library_value */
extern T0* T45s5(TC* ac);
/* UT_ISE_VARIABLES.set_ise_library_variable */
extern void T45s19(TC* ac);
/* UT_ISE_VARIABLES.ise_library_value */
extern T0* T45s1(TC* ac);
/* GEC.ise_variables */
extern T0* T26s36(TC* ac);
/* UT_GOBO_VARIABLES.set_gobo_variables */
extern void T44s16(TC* ac);
/* UT_GOBO_VARIABLES.set_zig_variable */
extern void T44s20(TC* ac);
/* UT_GOBO_VARIABLES.set_boehm_gc_variable */
extern void T44s19(TC* ac);
/* UT_GOBO_VARIABLES.set_gobo_library_variable */
extern void T44s18(TC* ac);
/* UT_GOBO_VARIABLES.gobo_library_value */
extern T0* T44s11(TC* ac);
/* UT_GOBO_VARIABLES.set_gobo_variable */
extern void T44s17(TC* ac);
/* GEC.gobo_variables */
extern T0* T26s53(TC* ac);
/* KL_ARGUMENTS.set_program_name */
extern void T33f7(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.make_standard */
extern T0* T42c193(TC* ac);
/* ET_ERROR_HANDLER.make_standard */
extern void T42f193p1(TC* ac, T0* C);
/* ET_ERROR_HANDLER.std */
extern T0* T42s25(TC* ac);
/* KL_ARGUMENTS.to_array */
extern T0* T33f5(TC* ac, T0* C);
/* KL_ARGUMENTS.argument_count */
extern T6 T33s2(TC* ac);
/* GEC.arguments */
extern T0* T26s41(TC* ac);
/* KL_EXCEPTIONS.die */
extern void T36s2(TC* ac, T6 a1);
/* KL_EXCEPTIONS.exceptions_die */
extern void T36s3(TC* ac, T6 a1);
/* GEC.exceptions */
extern T0* T26s40(TC* ac);
/* KL_STDERR_FILE.put_string */
extern void T39f6(TC* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.string_ */
extern T0* T39s2(TC* ac);
/* UTF_CONVERTER.escaped_utf_32_string_to_utf_8_string_8 */
extern T0* T40s3(TC* ac, T0* a1);
/* KL_STANDARD_FILES.error */
extern T0* T38s1(TC* ac);
/* KL_STDERR_FILE.make */
extern T0* T39c5(TC* ac);
/* GEC.std */
extern T0* T26s43(TC* ac);
/* EXCEPTIONS.exception_trace */
extern T0* T37s1(TC* ac);
/* SERIALIZATION_FAILURE.trace */
extern T0* T150f7(TC* ac, T0* C);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.trace */
extern T0* T149f7(TC* ac, T0* C);
/* DEVELOPER_EXCEPTION.trace */
extern T0* T148f7(TC* ac, T0* C);
/* MISMATCH_FAILURE.trace */
extern T0* T147f7(TC* ac, T0* C);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.trace */
extern T0* T146f7(TC* ac, T0* C);
/* VOID_ASSIGNED_TO_EXPANDED.trace */
extern T0* T145f7(TC* ac, T0* C);
/* EXTERNAL_FAILURE.trace */
extern T0* T144f7(TC* ac, T0* C);
/* CREATE_ON_DEFERRED.trace */
extern T0* T143f7(TC* ac, T0* C);
/* RESUMPTION_FAILURE.trace */
extern T0* T142f7(TC* ac, T0* C);
/* RESCUE_FAILURE.trace */
extern T0* T141f7(TC* ac, T0* C);
/* LOOP_INVARIANT_VIOLATION.trace */
extern T0* T140f7(TC* ac, T0* C);
/* VARIANT_VIOLATION.trace */
extern T0* T139f7(TC* ac, T0* C);
/* BAD_INSPECT_VALUE.trace */
extern T0* T138f7(TC* ac, T0* C);
/* CHECK_VIOLATION.trace */
extern T0* T137f7(TC* ac, T0* C);
/* FLOATING_POINT_FAILURE.trace */
extern T0* T136f7(TC* ac, T0* C);
/* POSTCONDITION_VIOLATION.trace */
extern T0* T135f7(TC* ac, T0* C);
/* PRECONDITION_VIOLATION.trace */
extern T0* T134f7(TC* ac, T0* C);
/* EIFFEL_RUNTIME_PANIC.trace */
extern T0* T132f8(TC* ac, T0* C);
/* COM_FAILURE.trace */
extern T0* T131f13(TC* ac, T0* C);
/* OPERATING_SYSTEM_FAILURE.trace */
extern T0* T130f7(TC* ac, T0* C);
/* IO_FAILURE.trace */
extern T0* T129f9(TC* ac, T0* C);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.trace */
extern T0* T128f7(TC* ac, T0* C);
/* INVARIANT_VIOLATION.trace */
extern T0* T127f7(TC* ac, T0* C);
/* NO_MORE_MEMORY.trace */
extern T0* T126f8(TC* ac, T0* C);
/* OLD_VIOLATION.trace */
extern T0* T124f7(TC* ac, T0* C);
/* ROUTINE_FAILURE.trace */
extern T0* T122f9(TC* ac, T0* C);
/* VOID_TARGET.trace */
extern T0* T120f7(TC* ac, T0* C);
/* NO_MORE_MEMORY.original */
extern T0* T126f7(TC* ac, T0* C);
/* SERIALIZATION_FAILURE.original */
extern T0* T150f6(TC* ac, T0* C);
/* OLD_VIOLATION.original */
extern T0* T124f6(TC* ac, T0* C);
/* COM_FAILURE.original */
extern T0* T131f11(TC* ac, T0* C);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.original */
extern T0* T149f6(TC* ac, T0* C);
/* DEVELOPER_EXCEPTION.original */
extern T0* T148f6(TC* ac, T0* C);
/* MISMATCH_FAILURE.original */
extern T0* T147f6(TC* ac, T0* C);
/* OPERATING_SYSTEM_FAILURE.original */
extern T0* T130f8(TC* ac, T0* C);
/* IO_FAILURE.original */
extern T0* T129f8(TC* ac, T0* C);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.original */
extern T0* T146f6(TC* ac, T0* C);
/* VOID_ASSIGNED_TO_EXPANDED.original */
extern T0* T145f6(TC* ac, T0* C);
/* EXTERNAL_FAILURE.original */
extern T0* T144f6(TC* ac, T0* C);
/* CREATE_ON_DEFERRED.original */
extern T0* T143f6(TC* ac, T0* C);
/* RESUMPTION_FAILURE.original */
extern T0* T142f6(TC* ac, T0* C);
/* RESCUE_FAILURE.original */
extern T0* T141f6(TC* ac, T0* C);
/* EIFFEL_RUNTIME_PANIC.original */
extern T0* T132f7(TC* ac, T0* C);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.original */
extern T0* T128f8(TC* ac, T0* C);
/* LOOP_INVARIANT_VIOLATION.original */
extern T0* T140f6(TC* ac, T0* C);
/* VARIANT_VIOLATION.original */
extern T0* T139f6(TC* ac, T0* C);
/* BAD_INSPECT_VALUE.original */
extern T0* T138f6(TC* ac, T0* C);
/* ROUTINE_FAILURE.original */
extern T0* T122f8(TC* ac, T0* C);
/* CHECK_VIOLATION.original */
extern T0* T137f6(TC* ac, T0* C);
/* INVARIANT_VIOLATION.original */
extern T0* T127f8(TC* ac, T0* C);
/* FLOATING_POINT_FAILURE.original */
extern T0* T136f6(TC* ac, T0* C);
/* POSTCONDITION_VIOLATION.original */
extern T0* T135f6(TC* ac, T0* C);
/* PRECONDITION_VIOLATION.original */
extern T0* T134f6(TC* ac, T0* C);
/* VOID_TARGET.original */
extern T0* T120f6(TC* ac, T0* C);
/* EXCEPTIONS.exception_manager */
extern T0* T37s2(TC* ac);
/* ISE_EXCEPTION_MANAGER.set_exception_data */
extern void T21s16(TC* ac, T6 a1, T1 a2, T6 a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T6 a11, T1 a12);
/* NO_MORE_MEMORY.set_type_name */
extern void T126f16(TC* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_type_name */
extern void T150f13(TC* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_type_name */
extern void T124f13(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_type_name */
extern void T131f21(TC* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_type_name */
extern void T149f13(TC* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_type_name */
extern void T148f17(TC* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_type_name */
extern void T147f13(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_type_name */
extern void T130f15(TC* ac, T0* C, T0* a1);
/* IO_FAILURE.set_type_name */
extern void T129f17(TC* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_type_name */
extern void T146f13(TC* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_type_name */
extern void T145f13(TC* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_type_name */
extern void T144f13(TC* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_type_name */
extern void T143f13(TC* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_type_name */
extern void T142f13(TC* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_type_name */
extern void T141f13(TC* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_type_name */
extern void T132f16(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_type_name */
extern void T128f15(TC* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_type_name */
extern void T140f13(TC* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_type_name */
extern void T139f13(TC* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_type_name */
extern void T138f13(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_type_name */
extern void T122f17(TC* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_type_name */
extern void T137f13(TC* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_type_name */
extern void T127f15(TC* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_type_name */
extern void T136f13(TC* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_type_name */
extern void T135f13(TC* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_type_name */
extern void T134f13(TC* ac, T0* C, T0* a1);
/* VOID_TARGET.set_type_name */
extern void T120f13(TC* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_recipient_name */
extern void T126f15(TC* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_recipient_name */
extern void T150f12(TC* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_recipient_name */
extern void T124f12(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_recipient_name */
extern void T131f20(TC* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_recipient_name */
extern void T149f12(TC* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_recipient_name */
extern void T148f16(TC* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_recipient_name */
extern void T147f12(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_recipient_name */
extern void T130f14(TC* ac, T0* C, T0* a1);
/* IO_FAILURE.set_recipient_name */
extern void T129f16(TC* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_recipient_name */
extern void T146f12(TC* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_recipient_name */
extern void T145f12(TC* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_recipient_name */
extern void T144f12(TC* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_recipient_name */
extern void T143f12(TC* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_recipient_name */
extern void T142f12(TC* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_recipient_name */
extern void T141f12(TC* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_recipient_name */
extern void T132f15(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_recipient_name */
extern void T128f14(TC* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_recipient_name */
extern void T140f12(TC* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_recipient_name */
extern void T139f12(TC* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_recipient_name */
extern void T138f12(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_recipient_name */
extern void T122f16(TC* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_recipient_name */
extern void T137f12(TC* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_recipient_name */
extern void T127f14(TC* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_recipient_name */
extern void T136f12(TC* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_recipient_name */
extern void T135f12(TC* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_recipient_name */
extern void T134f12(TC* ac, T0* C, T0* a1);
/* VOID_TARGET.set_recipient_name */
extern void T120f12(TC* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_exception_trace */
extern void T126f11(TC* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_exception_trace */
extern void T150f10(TC* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_exception_trace */
extern void T124f10(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_exception_trace */
extern void T131f18(TC* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_exception_trace */
extern void T149f10(TC* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_exception_trace */
extern void T148f14(TC* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_exception_trace */
extern void T147f10(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_exception_trace */
extern void T130f12(TC* ac, T0* C, T0* a1);
/* IO_FAILURE.set_exception_trace */
extern void T129f14(TC* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_exception_trace */
extern void T146f10(TC* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_exception_trace */
extern void T145f10(TC* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_exception_trace */
extern void T144f10(TC* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_exception_trace */
extern void T143f10(TC* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_exception_trace */
extern void T142f10(TC* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_exception_trace */
extern void T141f10(TC* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_exception_trace */
extern void T132f13(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_exception_trace */
extern void T128f12(TC* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_exception_trace */
extern void T140f10(TC* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_exception_trace */
extern void T139f10(TC* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_exception_trace */
extern void T138f10(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_exception_trace */
extern void T122f14(TC* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_exception_trace */
extern void T137f10(TC* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_exception_trace */
extern void T127f12(TC* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_exception_trace */
extern void T136f10(TC* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_exception_trace */
extern void T135f10(TC* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_exception_trace */
extern void T134f10(TC* ac, T0* C, T0* a1);
/* VOID_TARGET.set_exception_trace */
extern void T120f10(TC* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_from_data */
extern T0* T21s10(TC* ac);
extern T1 T21s10ot1(TC* ac, T0* a1);
extern T1 T21s10ot2(TC* ac, T0* a1);
extern T1 T21s10ot3(TC* ac, T0* a1);
extern T1 T21s10ot4(TC* ac, T0* a1);
extern T1 T21s10ot5(TC* ac, T0* a1);
extern T1 T21s10ot6(TC* ac, T0* a1);
extern T1 T21s10ot7(TC* ac, T0* a1);
/* NO_MORE_MEMORY.set_description */
extern void T126f14(TC* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_description */
extern void T150f11(TC* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_description */
extern void T124f11(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_description */
extern void T131f19(TC* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_description */
extern void T149f11(TC* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_description */
extern void T147f11(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_description */
extern void T130f13(TC* ac, T0* C, T0* a1);
/* IO_FAILURE.set_description */
extern void T129f15(TC* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_description */
extern void T146f11(TC* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_description */
extern void T145f11(TC* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_description */
extern void T144f11(TC* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_description */
extern void T143f11(TC* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_description */
extern void T142f11(TC* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_description */
extern void T141f11(TC* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_description */
extern void T132f14(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_description */
extern void T128f13(TC* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_description */
extern void T140f11(TC* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_description */
extern void T139f11(TC* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_description */
extern void T138f11(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_description */
extern void T122f15(TC* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_description */
extern void T137f11(TC* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_description */
extern void T127f13(TC* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_description */
extern void T136f11(TC* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_description */
extern void T135f11(TC* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_description */
extern void T134f11(TC* ac, T0* C, T0* a1);
/* VOID_TARGET.set_description */
extern void T120f11(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_exception_information */
extern void T131f17(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.ccom_hresult_to_string */
extern T0* T131f12(TC* ac, T0* C, T6 a1);
/* INTEGER_32.to_hex_string */
extern T0* T6f32(TC* ac, volatile T6* C);
/* INTEGER_32.to_hex_character */
extern T2 T6f33(TC* ac, volatile T6* C);
/* COM_FAILURE.set_hresult_code */
extern void T131f16(TC* ac, T0* C, T6 a1);
/* OPERATING_SYSTEM_FAILURE.set_error_code */
extern void T130f11(TC* ac, T0* C, T6 a1);
/* IO_FAILURE.set_error_code */
extern void T129f13(TC* ac, T0* C, T6 a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_signal_code */
extern void T128f11(TC* ac, T0* C, T6 a1);
/* INVARIANT_VIOLATION.set_is_entry */
extern void T127f11(TC* ac, T0* C, T1 a1);
/* ROUTINE_FAILURE.set_class_name */
extern void T122f12(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_routine_name */
extern void T122f11(TC* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_throwing_exception */
extern void T126f13(TC* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_throwing_exception */
extern void T150f9(TC* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_throwing_exception */
extern void T124f9(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_throwing_exception */
extern void T131f15(TC* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_throwing_exception */
extern void T149f9(TC* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_throwing_exception */
extern void T147f9(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_throwing_exception */
extern void T130f10(TC* ac, T0* C, T0* a1);
/* IO_FAILURE.set_throwing_exception */
extern void T129f12(TC* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_throwing_exception */
extern void T146f9(TC* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_throwing_exception */
extern void T145f9(TC* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_throwing_exception */
extern void T144f9(TC* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_throwing_exception */
extern void T143f9(TC* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_throwing_exception */
extern void T142f9(TC* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_throwing_exception */
extern void T141f9(TC* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_throwing_exception */
extern void T132f12(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_throwing_exception */
extern void T128f10(TC* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_throwing_exception */
extern void T140f9(TC* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_throwing_exception */
extern void T139f9(TC* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_throwing_exception */
extern void T138f9(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_throwing_exception */
extern void T122f13(TC* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_throwing_exception */
extern void T137f9(TC* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_throwing_exception */
extern void T127f10(TC* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_throwing_exception */
extern void T136f9(TC* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_throwing_exception */
extern void T135f9(TC* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_throwing_exception */
extern void T134f9(TC* ac, T0* C, T0* a1);
/* VOID_TARGET.set_throwing_exception */
extern void T120f9(TC* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_from_code */
extern T0* T21s12(TC* ac, T6 a1);
/* SERIALIZATION_FAILURE.default_create */
extern T0* T150c8(TC* ac);
/* OLD_VIOLATION.default_create */
extern T0* T124c8(TC* ac);
/* COM_FAILURE.default_create */
extern T0* T131c14(TC* ac);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.default_create */
extern T0* T149c8(TC* ac);
/* MISMATCH_FAILURE.default_create */
extern T0* T147c8(TC* ac);
/* OPERATING_SYSTEM_FAILURE.default_create */
extern T0* T130c9(TC* ac);
/* IO_FAILURE.set_code */
extern void T129f11(TC* ac, T0* C, T6 a1);
/* IO_FAILURE.default_create */
extern T0* T129c10(TC* ac);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.default_create */
extern T0* T146c8(TC* ac);
/* VOID_ASSIGNED_TO_EXPANDED.default_create */
extern T0* T145c8(TC* ac);
/* EXTERNAL_FAILURE.default_create */
extern T0* T144c8(TC* ac);
/* CREATE_ON_DEFERRED.default_create */
extern T0* T143c8(TC* ac);
/* RESUMPTION_FAILURE.default_create */
extern T0* T142c8(TC* ac);
/* RESCUE_FAILURE.default_create */
extern T0* T141c8(TC* ac);
/* EIFFEL_RUNTIME_PANIC.set_code */
extern void T132f11(TC* ac, T0* C, T6 a1);
/* EIFFEL_RUNTIME_PANIC.code */
extern T6 T132f9(TC* ac, T0* C);
/* EIFFEL_RUNTIME_PANIC.default_create */
extern T0* T132c10(TC* ac);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.default_create */
extern T0* T128c9(TC* ac);
/* LOOP_INVARIANT_VIOLATION.default_create */
extern T0* T140c8(TC* ac);
/* VARIANT_VIOLATION.default_create */
extern T0* T139c8(TC* ac);
/* BAD_INSPECT_VALUE.default_create */
extern T0* T138c8(TC* ac);
/* ROUTINE_FAILURE.default_create */
extern T0* T122c10(TC* ac);
/* CHECK_VIOLATION.default_create */
extern T0* T137c8(TC* ac);
/* INVARIANT_VIOLATION.default_create */
extern T0* T127c9(TC* ac);
/* FLOATING_POINT_FAILURE.default_create */
extern T0* T136c8(TC* ac);
/* POSTCONDITION_VIOLATION.default_create */
extern T0* T135c8(TC* ac);
/* PRECONDITION_VIOLATION.default_create */
extern T0* T134c8(TC* ac);
/* NO_MORE_MEMORY.set_code */
extern void T126f12(TC* ac, T0* C, T6 a1);
/* NO_MORE_MEMORY.code */
extern T6 T126f9(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.no_memory_exception_object_cell */
extern T0* T21s7(TC* ac);
/* CELL [NO_MORE_MEMORY].put */
extern T0* T30c2(TC* ac, T0* a1);
/* NO_MORE_MEMORY.default_create */
extern T0* T126c10(TC* ac);
/* VOID_TARGET.default_create */
extern T0* T120c8(TC* ac);
/* ISE_EXCEPTION_MANAGER.exception_data */
extern T0* T21s11(TC* ac);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].put */
extern void T29f2(TC* ac, T0* C, T0* a1);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].put */
extern T0* T29c2(TC* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_data_cell */
extern T0* T21s6(TC* ac);
/* ISE_EXCEPTION_MANAGER.once_raise */
extern void T21s15(TC* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.last_exception */
extern T0* T21s1(TC* ac);
/* ISE_EXCEPTION_MANAGER.init_exception_manager */
extern void T21s14(TC* ac);
/* CELL [NO_MORE_MEMORY].do_nothing */
extern void T30s3(TC* ac);
/* CELL [detachable EXCEPTION].do_nothing */
extern void T27s3(TC* ac);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].do_nothing */
extern void T29s3(TC* ac);
/* ISE_EXCEPTION_MANAGER.unraisable_exceptions */
extern T0* T21s5(TC* ac);
/* HASH_TABLE [INTEGER_32, INTEGER_32].force */
extern void T28f37(TC* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].position */
extern T6 T28f22(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].deleted_position */
extern T6 T28f21(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].add_space */
extern void T28f39(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].accommodate */
extern void T28f40(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_indexes_map */
extern void T28f44(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_deleted_marks */
extern void T28f43(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_keys */
extern void T28f42(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_content */
extern void T28f41(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].put */
extern void T28f45(TC* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_conflict */
extern void T28f47(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].found */
extern T1 T28f31(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].occupied */
extern T1 T28f29(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].empty_duplicate */
extern T0* T28f28(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].compare_objects */
extern void T28f46(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].soon_full */
extern T1 T28f20(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].not_found */
extern T1 T28f19(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].internal_search */
extern void T28f38(TC* ac, T0* C, T6 a1);
/* ISE_EXCEPTION_MANAGER.unignorable_exceptions */
extern T0* T21s4(TC* ac);
/* HASH_TABLE [INTEGER_32, INTEGER_32].do_nothing */
extern void T28s36(TC* ac);
/* KL_UNIX_INPUT_FILE.dispose */
extern void T1061f32(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.dispose */
extern void T1060f32(TC* ac, T0* C);
/* KL_DIRECTORY.dispose */
extern void T954f36(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.dispose */
extern void T950f32(TC* ac, T0* C);
/* MANAGED_POINTER.dispose */
extern void T162f9(TC* ac, T0* C);
/* MUTEX.dispose */
extern void T159f9(TC* ac, T0* C);
/* MUTEX.destroy */
extern void T159f13(TC* ac, T0* C);
/* MUTEX.eif_thr_mutex_destroy */
extern void T159s16(TC* ac, T14 a1);
/* KL_TEXT_INPUT_FILE.dispose */
extern void T43f60(TC* ac, T0* C);
/* Call to STRING_8.to_integer */
extern T6 T17x2228289(TC* ac, T0* C);
/* Call to STRING_8.is_integer */
extern T1 T17x2228255(TC* ac, T0* C);
/* Call to STRING_8.is_empty */
extern T1 T17x2228241(TC* ac, T0* C);
/* Call to STRING_8.as_lower */
extern T0* T17x2228285(TC* ac, T0* C);
/* Call to STRING_8.item */
extern T2 T17x2572289T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_8.count */
extern T6 T17x2228263(TC* ac, T0* C);
/* Call to STRING_8.hash_code */
extern T6 T17x655361(TC* ac, T0* C);
/* Call to STRING_8.has */
extern T1 T17x2211867T2(TC* ac, T0* C, T2 a1);
/* Call to STRING_8.alias "+" */
extern T0* T17x2211872T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.substring */
extern T0* T17x2228304T6T6(TC* ac, T0* C, T6 a1, T6 a2);
/* Call to STRING_8.starts_with */
extern T1 T17x2211868T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.code */
extern T10 T17x2228225T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_8.to_boolean */
extern T1 T17x2228301(TC* ac, T0* C);
/* Call to STRING_8.is_boolean */
extern T1 T17x2228252(TC* ac, T0* C);
/* Call to STRING_8.same_string */
extern T1 T17x2211860T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.has_substring */
extern T1 T17x2228268T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.twin */
extern T0* T17x229387(TC* ac, T0* C);
/* Call to STRING_8.ends_with */
extern T1 T17x2211869T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.as_upper */
extern T0* T17x2228286(TC* ac, T0* C);
/* Call to STRING_8.occurrences */
extern T6 T17x2211855T2(TC* ac, T0* C, T2 a1);
/* Call to STRING_8.same_type */
extern T1 T17x229380T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.index_of */
extern T6 T17x2211845T2T6(TC* ac, T0* C, T2 a1, T6 a2);
/* Call to EXCEPTION.original */
extern T0* T22x1753096(TC* ac, T0* C);
/* Call to EXCEPTION.trace */
extern T0* T22x1753094(TC* ac, T0* C);
/* Call to ANY.same_type */
extern T1 T25x229380T0(TC* ac, T0* C, T0* a1);
/* Call to READABLE_STRING_GENERAL.item */
extern T3 T41x2228226T6(TC* ac, T0* C, T6 a1);
/* Call to READABLE_STRING_GENERAL.count */
extern T6 T41x2228263(TC* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.code */
extern T10 T41x2228225T6(TC* ac, T0* C, T6 a1);
/* Call to READABLE_STRING_GENERAL.is_empty */
extern T1 T41x2228241(TC* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.as_string_8 */
extern T0* T41x2228280(TC* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.substring_index */
extern T6 T41x2228274T0T6(TC* ac, T0* C, T0* a1, T6 a2);
/* Call to READABLE_STRING_GENERAL.as_string_32 */
extern T0* T41x2228283(TC* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.to_string_32 */
extern T0* T41x2228284(TC* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.substring */
extern T0* T41x2228304T6T6(TC* ac, T0* C, T6 a1, T6 a2);
/* Call to READABLE_STRING_GENERAL.same_string */
extern T1 T41x2228269T0(TC* ac, T0* C, T0* a1);
/* Call to KI_CHARACTER_INPUT_STREAM.name */
extern T0* T51x6193159(TC* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_to_string */
extern T6 T51x6078465T0T6T6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* Call to KI_CHARACTER_INPUT_STREAM.end_of_input */
extern T1 T51x6193157(TC* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.last_character */
extern T2 T51x6193160(TC* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.is_closable */
extern T1 T51x6193154(TC* ac, T0* C);
/* Call to AP_OPTION.short_form */
extern T2 T61x5586952(TC* ac, T0* C);
/* Call to AP_OPTION.long_form */
extern T0* T61x5586947(TC* ac, T0* C);
/* Call to AP_OPTION.description */
extern T0* T61x5586945(TC* ac, T0* C);
/* Call to AP_OPTION.names */
extern T0* T61x5586949(TC* ac, T0* C);
/* Call to AP_OPTION.is_hidden */
extern T1 T61x5586955(TC* ac, T0* C);
/* Call to AP_OPTION.name */
extern T0* T61x5586948(TC* ac, T0* C);
/* Call to AP_OPTION.needs_parameter */
extern T1 T61x5586958(TC* ac, T0* C);
/* Call to AP_OPTION.has_short_form */
extern T1 T61x5586954(TC* ac, T0* C);
/* Call to AP_OPTION.allows_parameter */
extern T1 T61x5586957(TC* ac, T0* C);
/* Call to AP_OPTION.maximum_occurrences */
extern T6 T61x5586951(TC* ac, T0* C);
/* Call to AP_OPTION.occurrences */
extern T6 T61x5586950(TC* ac, T0* C);
/* Call to AP_OPTION.was_found */
extern T1 T61x5586961(TC* ac, T0* C);
/* Call to AP_OPTION.is_mandatory */
extern T1 T61x5586956(TC* ac, T0* C);
/* Call to AP_OPTION.example */
extern T0* T61x5586946(TC* ac, T0* C);
/* Call to ET_UNIVERSE.adapted_universe */
extern T0* T72x19660818T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.full_lower_name */
extern T0* T72x19660823T2(TC* ac, T0* C, T2 a1);
/* Call to ET_UNIVERSE.kind_name */
extern T0* T72x19660825(TC* ac, T0* C);
/* Call to ET_UNIVERSE.master_class */
extern T0* T72x19660807T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.hash_code */
extern T6 T72x655361(TC* ac, T0* C);
/* Call to ET_UNIVERSE.has_master_class */
extern T1 T72x19660801T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.any_clients */
extern T0* T72x19660836(TC* ac, T0* C);
/* Call to ET_UNIVERSE.character_32_convert_feature */
extern T0* T72x19660900(TC* ac, T0* C);
/* Call to ET_UNIVERSE.character_32_type */
extern T0* T72x19660844(TC* ac, T0* C);
/* Call to ET_UNIVERSE.character_8_convert_feature */
extern T0* T72x19660899(TC* ac, T0* C);
/* Call to ET_UNIVERSE.character_8_type */
extern T0* T72x19660843(TC* ac, T0* C);
/* Call to ET_UNIVERSE.real_64_convert_feature */
extern T0* T72x19660910(TC* ac, T0* C);
/* Call to ET_UNIVERSE.real_64_type */
extern T0* T72x19660871(TC* ac, T0* C);
/* Call to ET_UNIVERSE.real_32_convert_feature */
extern T0* T72x19660909(TC* ac, T0* C);
/* Call to ET_UNIVERSE.real_32_type */
extern T0* T72x19660870(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_64_convert_feature */
extern T0* T72x19660908(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_64_type */
extern T0* T72x19660863(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_32_convert_feature */
extern T0* T72x19660907(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_32_type */
extern T0* T72x19660862(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_16_convert_feature */
extern T0* T72x19660906(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_16_type */
extern T0* T72x19660861(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_8_convert_feature */
extern T0* T72x19660905(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_8_type */
extern T0* T72x19660860(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_64_convert_feature */
extern T0* T72x19660904(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_64_type */
extern T0* T72x19660856(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_32_convert_feature */
extern T0* T72x19660903(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_32_type */
extern T0* T72x19660855(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_16_convert_feature */
extern T0* T72x19660902(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_16_type */
extern T0* T72x19660854(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_8_convert_feature */
extern T0* T72x19660901(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_8_type */
extern T0* T72x19660853(TC* ac, T0* C);
/* Call to ET_UNIVERSE.string_32_convert_feature */
extern T0* T72x19660912(TC* ac, T0* C);
/* Call to ET_UNIVERSE.string_32_type */
extern T0* T72x19660880(TC* ac, T0* C);
/* Call to ET_UNIVERSE.string_8_convert_feature */
extern T0* T72x19660911(TC* ac, T0* C);
/* Call to ET_UNIVERSE.string_8_type */
extern T0* T72x19660878(TC* ac, T0* C);
/* Call to ET_UNIVERSE.tuple_type */
extern T0* T72x19660884(TC* ac, T0* C);
/* Call to ET_UNIVERSE.unfolded_empty_tuple_actual_parameters */
extern T0* T72x19660887(TC* ac, T0* C);
/* Call to ET_UNIVERSE.obsolete_routine_type_mode */
extern T1 T72x19660897(TC* ac, T0* C);
/* Call to ET_UNIVERSE.boolean_type */
extern T0* T72x19660841(TC* ac, T0* C);
/* Call to ET_UNIVERSE.shortest_path */
extern T0* T72x19660819T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.detachable_separate_any_type */
extern T0* T72x19660833(TC* ac, T0* C);
/* Call to ET_UNIVERSE.string_type */
extern T0* T72x19660876(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_type */
extern T0* T72x19660852(TC* ac, T0* C);
/* Call to ET_UNIVERSE.double_type */
extern T0* T72x19660845(TC* ac, T0* C);
/* Call to ET_UNIVERSE.real_type */
extern T0* T72x19660869(TC* ac, T0* C);
/* Call to ET_UNIVERSE.pointer_type */
extern T0* T72x19660866(TC* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_any_type */
extern T0* T72x19660832(TC* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_string_8_type */
extern T0* T72x19660879(TC* ac, T0* C);
/* Call to ET_UNIVERSE.any_type */
extern T0* T72x19660831(TC* ac, T0* C);
/* Call to ET_UNIVERSE.special_any_type */
extern T0* T72x19660873(TC* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_any_type */
extern T0* T72x19660888(TC* ac, T0* C);
/* Call to ET_UNIVERSE.special_detachable_any_type */
extern T0* T72x19660874(TC* ac, T0* C);
/* Call to ET_UNIVERSE.exception_manager_type */
extern T0* T72x19660848(TC* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_exception_type */
extern T0* T72x19660890(TC* ac, T0* C);
/* Call to ET_UNIVERSE.exception_type */
extern T0* T72x19660846(TC* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_type_exception_type */
extern T0* T72x19660889(TC* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_exception_type */
extern T0* T72x19660847(TC* ac, T0* C);
/* Call to ET_UNIVERSE.immutable_string_32_type */
extern T0* T72x19660851(TC* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_like_current_type */
extern T0* T72x19660891(TC* ac, T0* C);
/* Call to ET_UNIVERSE.function_identity_any_type */
extern T0* T72x19660849(TC* ac, T0* C);
/* Call to ET_UNIVERSE.predicate_identity_type */
extern T0* T72x19660867(TC* ac, T0* C);
/* Call to ET_UNIVERSE.tuple_identity_type */
extern T0* T72x19660886(TC* ac, T0* C);
/* Call to ET_UNIVERSE.procedure_identity_type */
extern T0* T72x19660868(TC* ac, T0* C);
/* Call to ET_UNIVERSE.typed_pointer_identity_type */
extern T0* T72x19660893(TC* ac, T0* C);
/* Call to ET_UNIVERSE.type_identity_type */
extern T0* T72x19660892(TC* ac, T0* C);
/* Call to ET_UNIVERSE.iterable_detachable_separate_any_type */
extern T0* T72x19660858(TC* ac, T0* C);
/* Call to ET_UNIVERSE.immutable_string_8_type */
extern T0* T72x19660850(TC* ac, T0* C);
/* Call to ET_UNIVERSE.character_type */
extern T0* T72x19660842(TC* ac, T0* C);
/* Call to ET_UNIVERSE.system_string_type */
extern T0* T72x19660883(TC* ac, T0* C);
/* Call to ET_UNIVERSE.full_name */
extern T0* T72x19660822T2(TC* ac, T0* C, T2 a1);
/* Call to ET_UNIVERSE.classes_in_group */
extern T0* T72x19660812T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.any_parents */
extern T0* T72x19660835(TC* ac, T0* C);
/* Call to ET_UNIVERSE.system_object_parents */
extern T0* T72x19660882(TC* ac, T0* C);
/* Call to ET_UNIVERSE.implicit_attachment_type_mark */
extern T0* T72x19660895(TC* ac, T0* C);
/* Call to ET_UNIVERSE.system_object_type */
extern T0* T72x19660881(TC* ac, T0* C);
/* Call to ET_UNIVERSE.current_system */
extern T0* T72x19660817(TC* ac, T0* C);
/* Call to ET_UNIVERSE.obsolete_iteration_mode */
extern T1 T72x19660896(TC* ac, T0* C);
/* Call to ET_UNIVERSE.use_obsolete_syntax_mode */
extern T1 T72x19660898(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.relative_lower_name */
extern T0* T73x19513365T0T2(TC* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_PRIMARY_GROUP.kind_name */
extern T0* T73x19513371(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_hidden */
extern T1 T73x19513354(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.full_lower_name */
extern T0* T73x19513367T2(TC* ac, T0* C, T2 a1);
/* Call to ET_PRIMARY_GROUP.is_cluster */
extern T1 T73x19513347(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.dotnet_assembly */
extern T0* T73x19513386(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.cluster */
extern T0* T73x19513384(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_dotnet_assembly */
extern T1 T73x19513349(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_unknown */
extern T1 T73x19513351(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.universe */
extern T0* T73x19513360(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_none */
extern T1 T73x19513350(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_override */
extern T1 T73x19513352(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.current_system */
extern T0* T73x19513361(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.use_obsolete_syntax */
extern T1 T73x19513355(TC* ac, T0* C);
/* Call to UT_ERROR.default_message */
extern T0* T84x11862019(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.index_of_label */
extern T6 T101x22200329T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.base_class */
extern T0* T101x22773763(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.is_type_non_separate */
extern T1 T101x15466502T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.conforms_to_type_with_type_marks */
extern T1 T101x15466505T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.is_type_attached */
extern T1 T101x15466501T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.is_type_expanded */
extern T1 T101x15466500T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.to_text */
extern T0* T101x22741075(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.is_type_non_separate_with_type_mark */
extern T1 T101x22741022T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.base_type_actual */
extern T0* T101x22741003T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_BASE_TYPE.shallow_named_type_with_type_mark */
extern T0* T101x22741009T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_attached_with_type_mark */
extern T1 T101x22741028T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_reference_with_type_mark */
extern T1 T101x22741026T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T101x22741066T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T101x22741058T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.context_adapted_base_class_with_seeded_feature */
extern T0* T101x22773766T6(TC* ac, T0* C, T6 a1);
/* Call to ET_BASE_TYPE.context_adapted_base_class_with_named_feature */
extern T0* T101x22773765T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.base_type_index_of_label */
extern T6 T101x22741005T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T101x22741042T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.same_named_class_type_with_type_marks */
extern T1 T101x22741057T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.named_base_class */
extern T0* T101x22773764(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.is_type_detachable_with_type_mark */
extern T1 T101x22741030T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_separate_with_type_mark */
extern T1 T101x22741020T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_expanded_with_type_mark */
extern T1 T101x22741024T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T101x22741067T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T101x22741065T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.base_type_actual_count */
extern T6 T101x22741015T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.named_type_with_type_mark */
extern T0* T101x22741007T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.base_type_with_type_mark */
extern T0* T101x22741000T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.same_named_type_with_type_marks */
extern T1 T101x22741048T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T101x22741059T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.upper_name */
extern T0* T101x22626306(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.name */
extern T0* T101x22626305(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.is_expanded */
extern T1 T101x22200336(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.is_attached */
extern T1 T101x22200337(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.type_with_type_mark */
extern T0* T101x22741013T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.actual_parameters */
extern T0* T101x22200324(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.is_controlled */
extern T1 T101x22741033(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T101x22740998T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_BASE_TYPE.adapted_base_class_with_named_feature */
extern T0* T101x22740997T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.actual_parameter_count */
extern T6 T101x22200332(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.shallow_base_type_with_type_mark */
extern T0* T101x22741002T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.canonical_to_text */
extern T0* T101x22741077(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.same_named_type */
extern T1 T101x22741047T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.same_as_base_class */
extern T1 T101x22200346(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.runtime_name_to_text */
extern T0* T101x22741078(TC* ac, T0* C);
/* Call to READABLE_STRING_8.area */
extern T0* T104x2211878(TC* ac, T0* C);
/* Call to READABLE_STRING_8.count */
extern T6 T104x2228263(TC* ac, T0* C);
/* Call to READABLE_STRING_8.area_lower */
extern T6 T104x2211879(TC* ac, T0* C);
/* Call to READABLE_STRING_8.to_string_8 */
extern T0* T104x2228277(TC* ac, T0* C);
/* Call to STRING_GENERAL.item */
extern T3 T168x2228226T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_GENERAL.count */
extern T6 T168x2228263(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_detachable_mark */
extern T1 T175x21184516(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_attached_mark */
extern T1 T175x21184515(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_attachment_mark */
extern T1 T175x21184513(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_separate_mark */
extern T1 T175x21184523(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_non_separate_mark */
extern T1 T175x21184524(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.position */
extern T0* T175x20758529(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_reference_mark */
extern T1 T175x21184529(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_expanded_mark */
extern T1 T175x21184528(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.overridden_type_mark */
extern T0* T175x21184533T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_MARK.is_implicit_mark */
extern T1 T175x21184532(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_explicit_attachment_mark */
extern T1 T175x21184514(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_separateness_mark */
extern T1 T175x21184521(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_expandedness_mark */
extern T1 T175x21184526(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.type */
extern T0* T184x22118403T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T184x22118402T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETERS.count */
extern T6 T184x22118401(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.last_leaf */
extern T0* T184x20758533(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T184x22118420T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T184x22118415T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.is_empty */
extern T1 T184x22118407(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T184x22118410(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.index_of_label */
extern T6 T184x22118405T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T184x22118414T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T184x22118411T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T184x22118412T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.has_unqualified_anchored_type */
extern T1 T184x22118409(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.same_named_types */
extern T1 T184x22118416T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T184x22118417T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_ACTUAL_PARAMETERS.named_types */
extern T0* T184x22118404T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.resolved_formal_parameters_with_type */
extern T0* T200x22151173T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.type */
extern T0* T200x22151170(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.actual_parameter */
extern T0* T200x22151169(TC* ac, T0* C);
/* Call to ET_TYPE.conforms_to_type */
extern T1 T202x15466504T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.named_type */
extern T0* T202x22741006T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.resolved_formal_parameters */
extern T0* T202x22741068T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_syntactical_type */
extern T1 T202x22741045T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.has_identifier_anchored_type */
extern T1 T202x22741036(TC* ac, T0* C);
/* Call to ET_TYPE.depends_on_qualified_anchored_type */
extern T1 T202x22741037T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_formal_types */
extern T1 T202x22741038T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_unqualified_anchored_type */
extern T1 T202x22741035(TC* ac, T0* C);
/* Call to ET_TYPE.same_named_type */
extern T1 T202x22741047T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.to_text */
extern T0* T202x22741075(TC* ac, T0* C);
/* Call to ET_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T202x22102022T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.position */
extern T0* T202x20758529(TC* ac, T0* C);
/* Call to ET_TYPE.type_with_type_mark */
extern T0* T202x22741013T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T202x22741053T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T202x22741056T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T202x22741051T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T202x22741052T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T202x22741055T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T202x22741054T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T202x22740998T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE.adapted_base_class_with_named_feature */
extern T0* T202x22740997T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.base_type_index_of_label */
extern T6 T202x22741005T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T202x22741042T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.base_type_actual */
extern T0* T202x22741003T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE.same_syntactical_type_with_type_marks */
extern T1 T202x22741046T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.is_type_non_separate_with_type_mark */
extern T1 T202x22741022T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_to_constraint */
extern T1 T202x22741063T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.named_base_class */
extern T0* T202x22740996T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.shallow_named_type_with_type_mark */
extern T0* T202x22741009T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_attached_with_type_mark */
extern T1 T202x22741028T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_reference_with_type_mark */
extern T1 T202x22741026T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T202x22741066T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T202x22741058T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_class_type_with_type_marks */
extern T1 T202x22741057T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.is_type_detachable_with_type_mark */
extern T1 T202x22741030T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_separate_with_type_mark */
extern T1 T202x22741020T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_expanded_with_type_mark */
extern T1 T202x22741024T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T202x22741067T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T202x22741065T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.base_type_actual_count */
extern T6 T202x22741015T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.named_type_with_type_mark */
extern T0* T202x22741007T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.base_type_with_type_mark */
extern T0* T202x22741000T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_to_type_with_type_marks */
extern T1 T202x15466505T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.same_named_type_with_type_marks */
extern T1 T202x22741048T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T202x22741059T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.base_class */
extern T0* T202x22740995T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_reference */
extern T1 T202x22741025T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_expanded */
extern T1 T202x15466500T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.shallow_base_type_with_type_mark */
extern T0* T202x22741002T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_controlled */
extern T1 T202x22741033(TC* ac, T0* C);
/* Call to ET_TYPE.is_named_type */
extern T1 T202x15466499(TC* ac, T0* C);
/* Call to ET_TYPE.is_base_type */
extern T1 T202x22741018(TC* ac, T0* C);
/* Call to ET_TYPE.shallow_base_type */
extern T0* T202x22741001T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.shallow_named_type */
extern T0* T202x22741008T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_like_current */
extern T1 T202x22741016(TC* ac, T0* C);
/* Call to ET_TYPE.is_type_separate */
extern T1 T202x22741019T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_detachable */
extern T1 T202x22741029T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_attached */
extern T1 T202x15466501T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_non_separate */
extern T1 T202x15466502T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_self_initializing */
extern T1 T202x22741031T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.type_mark */
extern T0* T202x22740993(TC* ac, T0* C);
/* Call to ET_TYPE.type */
extern T0* T202x22790145(TC* ac, T0* C);
/* Call to KL_EQUALITY_TESTER [STRING_8].test */
extern T1 T222x7602177T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_SYMBOL.position */
extern T0* T282x20758529(TC* ac, T0* C);
/* Call to ET_SYMBOL.text */
extern T0* T282x20840450(TC* ac, T0* C);
/* Call to ET_SYMBOL.is_equal_symbol */
extern T1 T282x21086227(TC* ac, T0* C);
/* Call to ET_SYMBOL.is_not_tilde */
extern T1 T282x21086242(TC* ac, T0* C);
/* Call to ET_SYMBOL.is_not_equal */
extern T1 T282x21086241(TC* ac, T0* C);
/* Call to ET_SYMBOL.break */
extern T0* T282x20758534(TC* ac, T0* C);
/* Call to ET_SYMBOL.column */
extern T6 T282x20971522(TC* ac, T0* C);
/* Call to ET_SYMBOL.line */
extern T6 T282x20971521(TC* ac, T0* C);
/* Call to ET_POSITION.column */
extern T6 T285x20971522(TC* ac, T0* C);
/* Call to ET_POSITION.line */
extern T6 T285x20971521(TC* ac, T0* C);
/* Call to ET_POSITION.to_text */
extern T0* T285x20971527(TC* ac, T0* C);
/* Call to ET_POSITION.is_null */
extern T1 T285x20971523(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.value */
extern T3 T294x16384006(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.value_position */
extern T0* T294x16384011(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.cast_type */
extern T0* T294x16384007(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.index */
extern T6 T294x17596424(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.is_character_32 */
extern T1 T294x16384002(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.is_character_8 */
extern T1 T294x16384001(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.literal */
extern T0* T306x16465921(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.sign */
extern T0* T306x16465931(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.value_position */
extern T0* T306x16465936(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.cast_type */
extern T0* T306x16465932(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_negative */
extern T1 T306x16465939(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.value */
extern T11 T306x16465922(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_integer_32 */
extern T6 T306x16465925(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.index */
extern T6 T306x17596424(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_64 */
extern T1 T306x16465951(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_binary */
extern T1 T306x16465942(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T306x16465941(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_64 */
extern T1 T306x16465947(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_32 */
extern T1 T306x16465946(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_32 */
extern T1 T306x16465950(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_16 */
extern T1 T306x16465949(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_8 */
extern T1 T306x16465948(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_16 */
extern T1 T306x16465945(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_8 */
extern T1 T306x16465944(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.position */
extern T0* T312x20758529(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.value */
extern T0* T312x16482310(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.value_position */
extern T0* T312x16482315(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.cast_type */
extern T0* T312x16482312(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.index */
extern T6 T312x17596424(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.is_string_32 */
extern T1 T312x16482306(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.is_string_8 */
extern T1 T312x16482305(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_instance_free */
extern T1 T352x17596418(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.has_typed_object_test */
extern T1 T352x17596423(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.has_address_expression */
extern T1 T352x17596421(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.has_result */
extern T1 T352x17596420(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_open_operand */
extern T1 T352x17596417(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.index */
extern T6 T352x17596424(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND_ITEM.agent_actual_argument */
extern T0* T355x14630913(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.is_instance_free */
extern T1 T361x17596418(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.has_typed_object_test */
extern T1 T361x17596423(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.has_address_expression */
extern T1 T361x17596421(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.has_result */
extern T1 T361x17596420(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.position */
extern T0* T361x20758529(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.index */
extern T6 T361x17596424(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.is_open_operand */
extern T1 T361x17596417(TC* ac, T0* C);
/* Call to ET_CHOICE.has_typed_object_test */
extern T1 T385x19857413(TC* ac, T0* C);
/* Call to ET_CHOICE.has_agent */
extern T1 T385x19857412(TC* ac, T0* C);
/* Call to ET_CHOICE.has_address_expression */
extern T1 T385x19857411(TC* ac, T0* C);
/* Call to ET_CHOICE.lower */
extern T0* T385x19857414(TC* ac, T0* C);
/* Call to ET_CHOICE.upper */
extern T0* T385x19857415(TC* ac, T0* C);
/* Call to ET_CHOICE.is_range */
extern T1 T385x19857409(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.position */
extern T0* T388x20758529(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.has_typed_object_test */
extern T1 T388x19857413(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.has_agent */
extern T1 T388x19857412(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.has_address_expression */
extern T1 T388x19857411(TC* ac, T0* C);
/* Call to ET_CHOICE_ITEM.choice */
extern T0* T391x19906561(TC* ac, T0* C);
/* Call to ET_CHOICE_ITEM.position */
extern T0* T391x20758529(TC* ac, T0* C);
/* Call to ET_CONDITIONAL.expression */
extern T0* T406x16891905(TC* ac, T0* C);
/* Call to ET_CONDITIONAL.position */
extern T0* T406x20758529(TC* ac, T0* C);
/* Call to ET_CONSTANT.is_integer_constant */
extern T1 T409x16400387(TC* ac, T0* C);
/* Call to ET_CONSTANT.is_character_constant */
extern T1 T409x16400386(TC* ac, T0* C);
/* Call to ET_CONSTANT.is_boolean_constant */
extern T1 T409x16400385(TC* ac, T0* C);
/* Call to ET_CONSTANT.index */
extern T6 T409x17596424(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.resolved_syntactical_constraint_with_type */
extern T0* T412x22331396T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.type */
extern T0* T412x22331394(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.position */
extern T0* T412x22331395(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_TYPE.resolved_syntactical_constraint */
extern T0* T424x22446082T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_CONVERT_FEATURE.name */
extern T0* T427x15532035(TC* ac, T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_to */
extern T1 T427x15532034(TC* ac, T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_from */
extern T1 T427x15532033(TC* ac, T0* C);
/* Call to ET_EXPRESSION.is_instance_free */
extern T1 T466x16777220(TC* ac, T0* C);
/* Call to ET_EXPRESSION.position */
extern T0* T466x20758529(TC* ac, T0* C);
/* Call to ET_EXPRESSION.has_typed_object_test */
extern T1 T466x16777224(TC* ac, T0* C);
/* Call to ET_EXPRESSION.has_agent */
extern T1 T466x16777223(TC* ac, T0* C);
/* Call to ET_EXPRESSION.has_address_expression */
extern T1 T466x16777222(TC* ac, T0* C);
/* Call to ET_EXPRESSION.has_result */
extern T1 T466x16777221(TC* ac, T0* C);
/* Call to ET_EXPRESSION.index */
extern T6 T466x17596424(TC* ac, T0* C);
/* Call to ET_EXPRESSION.is_false */
extern T1 T466x17137669(TC* ac, T0* C);
/* Call to ET_EXPRESSION.is_instance_free */
extern T1 T466x17596418(TC* ac, T0* C);
/* Call to ET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T466x17137677T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_EXPRESSION.unparenthesized_expression */
extern T0* T466x17137667(TC* ac, T0* C);
/* Call to ET_EXPRESSION.is_current */
extern T1 T466x17596419(TC* ac, T0* C);
/* Call to ET_EXPRESSION.is_never_void */
extern T1 T466x17137668(TC* ac, T0* C);
/* Call to ET_EXPRESSION_ITEM.expression */
extern T0* T469x17203201(TC* ac, T0* C);
/* Call to ET_EXPRESSION_ITEM.position */
extern T0* T469x20758529(TC* ac, T0* C);
/* Call to ET_EXTERNAL_ALIAS.manifest_string */
extern T0* T475x18300929(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.position */
extern T0* T515x20758529(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.implicit_result */
extern T0* T515x14565380(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.formal_arguments */
extern T0* T515x17989638(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.actual_arguments */
extern T0* T515x14565379(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.target */
extern T0* T515x14565378(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.locals */
extern T0* T515x17989640(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.attached_result_index */
extern T6 T515x14876674(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.result_index */
extern T6 T515x14876673(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.type */
extern T0* T515x17989637(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.position */
extern T0* T536x20758529(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.has_inline_separate_instruction */
extern T1 T536x20283398(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.has_typed_object_test */
extern T1 T536x20283397(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.has_agent */
extern T1 T536x20283396(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.has_address_expression */
extern T1 T536x20283395(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.nested_instruction_count */
extern T6 T536x20283399(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.to_text */
extern T0* T544x22741075(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.position */
extern T0* T544x20758529(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.resolved_formal_parameters */
extern T0* T544x22741068T0(TC* ac, T0* C, T0* a1);
/* Call to ET_LIKE_TYPE.has_formal_types */
extern T1 T544x22741038T0(TC* ac, T0* C, T0* a1);
/* Call to ET_LIKE_TYPE.has_unqualified_anchored_type */
extern T1 T544x22741035(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.like_keyword */
extern T0* T544x22609921(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING_ITEM.position */
extern T0* T562x20758529(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING_ITEM.manifest_string */
extern T0* T562x17465345(TC* ac, T0* C);
/* Call to ET_NOTE_TERM.note_term_value */
extern T0* T577x15958018(TC* ac, T0* C);
/* Call to ET_NOTE_TERM.position */
extern T0* T577x20758529(TC* ac, T0* C);
/* Call to ET_NOTE_TERM.has_note_term_value */
extern T1 T577x15958019T0(TC* ac, T0* C, T0* a1);
/* Call to ET_NOTE_TERM_ITEM.note_term */
extern T0* T580x15958017(TC* ac, T0* C);
/* Call to ET_NOTE_TERM_ITEM.position */
extern T0* T580x20758529(TC* ac, T0* C);
/* Call to ET_NOTE_TERM_ITEM.has_note_term_value */
extern T1 T580x15958019T0(TC* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.name */
extern T0* T607x18481160(TC* ac, T0* C);
/* Call to ET_PROCEDURE.overloaded_alias_names */
extern T0* T607x18399239(TC* ac, T0* C);
/* Call to ET_PROCEDURE.alias_names */
extern T0* T607x18399235(TC* ac, T0* C);
/* Call to ET_PROCEDURE.overloaded_name */
extern T0* T607x18399238(TC* ac, T0* C);
/* Call to ET_PROCEDURE.hash_code */
extern T6 T607x655361(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_creation_exported_to */
extern T1 T607x18399289T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_PROCEDURE.first_seed */
extern T6 T607x18481163(TC* ac, T0* C);
/* Call to ET_PROCEDURE.lower_name */
extern T0* T607x19136515(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_static */
extern T1 T607x18399270(TC* ac, T0* C);
/* Call to ET_PROCEDURE.arguments */
extern T0* T607x18481162(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_exported_to */
extern T1 T607x18399287T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_PROCEDURE.arguments_count */
extern T6 T607x18399286(TC* ac, T0* C);
/* Call to ET_PROCEDURE.has_seed */
extern T1 T607x18481158T6(TC* ac, T0* C, T6 a1);
/* Call to ET_PROCEDURE.implementation_class */
extern T0* T607x19136517(TC* ac, T0* C);
/* Call to ET_PROCEDURE.postconditions */
extern T0* T607x17989642(TC* ac, T0* C);
/* Call to ET_PROCEDURE.preconditions */
extern T0* T607x17989641(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_parenthesisable */
extern T1 T607x18399277(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_frozen */
extern T1 T607x18399259(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_deferred */
extern T1 T607x18399260(TC* ac, T0* C);
/* Call to ET_PROCEDURE.new_synonym */
extern T0* T607x18399293T0(TC* ac, T0* C, T0* a1);
/* Call to ET_QUERY.name */
extern T0* T616x18481160(TC* ac, T0* C);
/* Call to ET_QUERY.overloaded_alias_names */
extern T0* T616x18399239(TC* ac, T0* C);
/* Call to ET_QUERY.alias_names */
extern T0* T616x18399235(TC* ac, T0* C);
/* Call to ET_QUERY.overloaded_name */
extern T0* T616x18399238(TC* ac, T0* C);
/* Call to ET_QUERY.hash_code */
extern T6 T616x655361(TC* ac, T0* C);
/* Call to ET_QUERY.has_seed */
extern T1 T616x18481158T6(TC* ac, T0* C, T6 a1);
/* Call to ET_QUERY.type */
extern T0* T616x18481161(TC* ac, T0* C);
/* Call to ET_QUERY.is_exported_to */
extern T1 T616x18399287T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_QUERY.first_seed */
extern T6 T616x18481163(TC* ac, T0* C);
/* Call to ET_QUERY.lower_name */
extern T0* T616x19136515(TC* ac, T0* C);
/* Call to ET_QUERY.arguments */
extern T0* T616x18481162(TC* ac, T0* C);
/* Call to ET_QUERY.is_attribute */
extern T1 T616x18399263(TC* ac, T0* C);
/* Call to ET_QUERY.is_static */
extern T1 T616x18399270(TC* ac, T0* C);
/* Call to ET_QUERY.is_stable_attribute */
extern T1 T616x18399273(TC* ac, T0* C);
/* Call to ET_QUERY.arguments_count */
extern T6 T616x18399286(TC* ac, T0* C);
/* Call to ET_QUERY.assigner */
extern T0* T616x18939907(TC* ac, T0* C);
/* Call to ET_QUERY.implementation_feature */
extern T0* T616x17989646(TC* ac, T0* C);
/* Call to ET_QUERY.implementation_class */
extern T0* T616x19136517(TC* ac, T0* C);
/* Call to ET_QUERY.is_unique_attribute */
extern T1 T616x18399265(TC* ac, T0* C);
/* Call to ET_QUERY.is_constant_attribute */
extern T1 T616x18399264(TC* ac, T0* C);
/* Call to ET_QUERY.is_prefixable */
extern T1 T616x18399275(TC* ac, T0* C);
/* Call to ET_QUERY.is_infixable */
extern T1 T616x18399274(TC* ac, T0* C);
/* Call to ET_QUERY.postconditions */
extern T0* T616x17989642(TC* ac, T0* C);
/* Call to ET_QUERY.preconditions */
extern T0* T616x17989641(TC* ac, T0* C);
/* Call to ET_QUERY.is_once_per_object */
extern T1 T616x17989636(TC* ac, T0* C);
/* Call to ET_QUERY.is_once */
extern T1 T616x17989633(TC* ac, T0* C);
/* Call to ET_QUERY.is_parenthesisable */
extern T1 T616x18399277(TC* ac, T0* C);
/* Call to ET_QUERY.is_bracketable */
extern T1 T616x18399276(TC* ac, T0* C);
/* Call to ET_QUERY.is_frozen */
extern T1 T616x18399259(TC* ac, T0* C);
/* Call to ET_QUERY.is_deferred */
extern T1 T616x18399260(TC* ac, T0* C);
/* Call to ET_QUERY.new_synonym */
extern T0* T616x18399293T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONSTRAINT.type */
extern T0* T635x16252930(TC* ac, T0* C);
/* Call to ET_TYPE_CONSTRAINT.renames */
extern T0* T635x16252931(TC* ac, T0* C);
/* Call to ET_TYPE_CONSTRAINT_ITEM.type */
extern T0* T638x16252930(TC* ac, T0* C);
/* Call to ET_TYPE_CONSTRAINT_ITEM.type_constraint */
extern T0* T638x16252929(TC* ac, T0* C);
/* Call to ET_TYPE_ITEM.type */
extern T0* T644x22790145(TC* ac, T0* C);
/* Call to ET_DECLARED_TYPE.last_leaf */
extern T0* T701x20758533(TC* ac, T0* C);
/* Call to ET_DECLARED_TYPE.type */
extern T0* T701x22462465(TC* ac, T0* C);
/* Call to ET_DECLARED_TYPE.position */
extern T0* T701x20758529(TC* ac, T0* C);
/* Call to ET_EXTERNAL_LANGUAGE.manifest_string */
extern T0* T709x18333697(TC* ac, T0* C);
/* Call to ET_TARGET_TYPE.type */
extern T0* T733x22708225(TC* ac, T0* C);
/* Call to ET_TARGET_TYPE.position */
extern T0* T733x20758529(TC* ac, T0* C);
/* Call to ET_TARGET_TYPE.last_leaf */
extern T0* T733x20758533(TC* ac, T0* C);
/* Call to ET_OBJECT_TEST.expression */
extern T0* T754x17547268(TC* ac, T0* C);
/* Call to ET_OBJECT_TEST.index */
extern T6 T754x17596424(TC* ac, T0* C);
/* Call to ET_OBJECT_TEST.type */
extern T0* T754x17547267(TC* ac, T0* C);
/* Call to ET_OBJECT_TEST.name */
extern T0* T754x17547269(TC* ac, T0* C);
/* Call to ET_CONSTRAINT.last_leaf */
extern T0* T767x20758533(TC* ac, T0* C);
/* Call to ET_CONSTRAINT.types_to_text */
extern T0* T767x15466506(TC* ac, T0* C);
/* Call to ET_CONSTRAINT.type_constraint */
extern T0* T767x15466497T6(TC* ac, T0* C, T6 a1);
/* Call to ET_CONSTRAINT.count */
extern T6 T767x15466503(TC* ac, T0* C);
/* Call to ET_UNTAGGED_ASSERTION.is_class_assertion */
extern T1 T771x15040513(TC* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.assertion */
extern T0* T773x15073281(TC* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.position */
extern T0* T773x20758529(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.ecf_version */
extern T0* T801x13402116(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.universe */
extern T0* T801x13402117(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.filename */
extern T0* T801x13402113(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.targets */
extern T0* T801x14204931(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.library_target */
extern T0* T801x14204932(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.conforms_to_primary_type */
extern T1 T838x24248341T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.seeded_dynamic_query */
extern T0* T838x24248357T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_basic */
extern T1 T838x24657924(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_expanded */
extern T1 T838x24690689(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.base_type */
extern T0* T838x24657932(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.separate_type */
extern T0* T838x24248336(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_special */
extern T1 T838x24248323(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_agent_type */
extern T1 T838x24248322(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.seeded_dynamic_procedure */
extern T0* T838x24248358T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T838x24248350(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_redefined_copy_routine */
extern T1 T838x24248349(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.queries */
extern T0* T838x24248353(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.attribute_count */
extern T6 T838x24248343(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_once_per_object_routines */
extern T1 T838x24248346(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_redefined_is_equal_routine */
extern T1 T838x24248351(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.id */
extern T6 T838x24248339(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.base_class */
extern T0* T838x24657933(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T838x24248352(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.primary_type */
extern T0* T838x24657934(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.dynamic_query */
extern T0* T838x24248355T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.dynamic_procedure */
extern T0* T838x24248356T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.hash_code */
extern T6 T838x655361(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_builtin_attribute */
extern T1 T838x24248359T0T8T8(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_nested_reference_fields */
extern T1 T838x24248348(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_nested_reference_attributes */
extern T1 T838x24248345(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_alive */
extern T1 T838x24248321(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.attached_type */
extern T0* T838x24248335(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.next_type */
extern T0* T838x24248366(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.conforming_ancestors */
extern T0* T838x24248342(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.type_mark */
extern T0* T838x24657936(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.attached_separate_type */
extern T0* T838x24248337(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_boolean */
extern T1 T838x24248325(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.meta_type */
extern T0* T838x24657935(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.procedures */
extern T0* T838x24248354(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_tuple */
extern T1 T838x24248324(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.procedure_calls */
extern T0* T838x24248363(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.query_calls */
extern T0* T838x24248362(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_static */
extern T1 T838x24248329(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.root_context */
extern T0* T846x22773761(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.as_nested_type_context */
extern T0* T846x22773816(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.is_root_context */
extern T1 T846x22773776(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_actual */
extern T0* T846x22773769T6(TC* ac, T0* C, T6 a1);
/* Call to ET_TYPE_CONTEXT.base_type_actual_count */
extern T6 T846x22773774(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_class */
extern T0* T846x22773763(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T846x22773795(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.scoop_mode */
extern T1 T846x22773796(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.to_nested_type_context */
extern T0* T846x22773817(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.is_type_non_separate_with_type_mark */
extern T1 T846x22773781T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T846x22773787T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T846x22773785T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T846x22773814T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T846x22773804T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.adapted_base_class_with_seeded_feature */
extern T0* T846x22773766T6(TC* ac, T0* C, T6 a1);
/* Call to ET_TYPE_CONTEXT.adapted_base_class_with_named_feature */
extern T0* T846x22773765T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.named_type */
extern T0* T846x22773772(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.is_type_separate */
extern T1 T846x22773778(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T846x22773773T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T846x22773810T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T846x22773798T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T846x22773815T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T846x22773813T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T846x22773805T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T846x22773803T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T846x22773789T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_separate_with_type_mark */
extern T1 T846x22773779T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T846x22773783T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.named_base_class */
extern T0* T846x22773764(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T846x22773768T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FORMAL_PARAMETER_TYPE.implementation_class */
extern T0* T848x22478852(TC* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T848x22478851(TC* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.name */
extern T0* T848x22626305(TC* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T848x22741030T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T848x22741028T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_non_separate_with_type_mark */
extern T1 T848x22741022T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T848x22790145(TC* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.type_with_type_mark */
extern T0* T848x22741013T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T848x22740994T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_separate_with_type_mark */
extern T1 T848x22741020T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE_SET.static_type */
extern T0* T851x24690693(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.count */
extern T6 T851x24264708(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_types */
extern T0* T851x24690695(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_type */
extern T0* T851x24264705T6(TC* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPE_SET.has_expanded */
extern T1 T851x24264712(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_type */
extern T1 T851x24264710T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.is_never_void */
extern T1 T851x24690690(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.can_be_void */
extern T1 T851x24690691(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_expanded */
extern T1 T851x24690689(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.special_type */
extern T0* T851x24264706(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_empty */
extern T1 T851x24264709(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.primary_type */
extern T0* T852x24657934(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.hash_code */
extern T6 T852x655361(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.type_mark */
extern T0* T852x24657936(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_attached */
extern T1 T852x24657929(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_separate */
extern T1 T852x24657930(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_expanded */
extern T1 T852x24690689(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T852x24657942T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.base_class */
extern T0* T852x24657933(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_basic */
extern T1 T852x24657924(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.meta_type */
extern T0* T852x24657935(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.base_type */
extern T0* T852x24657932(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_self_initializing */
extern T1 T852x24657928(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_character_n */
extern T1 T852x24657925(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_real_n */
extern T1 T852x24657927(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_integer_n */
extern T1 T852x24657926(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.type_id */
extern T6 T852x24657937(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_validity_error */
extern T1 T865x19136521(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_feature */
extern T0* T865x17989646(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.postconditions */
extern T0* T865x17989642(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.preconditions */
extern T0* T865x17989641(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_invariants */
extern T0* T865x19136523(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_invariants */
extern T1 T865x19136514(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_feature */
extern T0* T865x19136522(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_feature */
extern T1 T865x19136513(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.clients */
extern T0* T865x19136519(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.locals */
extern T0* T865x17989640(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.arguments */
extern T0* T865x17989638(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.type */
extern T0* T865x17989637(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.first_precursor */
extern T0* T865x19136516(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_class */
extern T0* T865x19136517(TC* ac, T0* C);
/* Call to ET_FEATURE.lower_name */
extern T0* T866x19136515(TC* ac, T0* C);
/* Call to ET_FEATURE.name */
extern T0* T866x18481160(TC* ac, T0* C);
/* Call to ET_FEATURE.has_seed */
extern T1 T866x18481158T6(TC* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.are_postconditions_instance_free_recursive */
extern T1 T866x18399279(TC* ac, T0* C);
/* Call to ET_FEATURE.are_preconditions_instance_free_recursive */
extern T1 T866x18399278(TC* ac, T0* C);
/* Call to ET_FEATURE.extended_name */
extern T0* T866x18399236(TC* ac, T0* C);
/* Call to ET_FEATURE.alias_names */
extern T0* T866x18399235(TC* ac, T0* C);
/* Call to ET_FEATURE.clients */
extern T0* T866x19136519(TC* ac, T0* C);
/* Call to ET_FEATURE.version */
extern T6 T866x18399244(TC* ac, T0* C);
/* Call to ET_FEATURE.is_deferred */
extern T1 T866x18399260(TC* ac, T0* C);
/* Call to ET_FEATURE.first_seed */
extern T6 T866x18481163(TC* ac, T0* C);
/* Call to ET_FEATURE.arguments */
extern T0* T866x18481162(TC* ac, T0* C);
/* Call to ET_FEATURE.implementation_class */
extern T0* T866x19136517(TC* ac, T0* C);
/* Call to ET_FEATURE.type */
extern T0* T866x18481161(TC* ac, T0* C);
/* Call to ET_FEATURE.other_seeds */
extern T0* T866x18481164(TC* ac, T0* C);
/* Call to ET_FEATURE.is_procedure */
extern T1 T866x18399267(TC* ac, T0* C);
/* Call to ET_FEATURE.implementation_feature */
extern T0* T866x17989646(TC* ac, T0* C);
/* Call to ET_FEATURE.is_static */
extern T1 T866x18399270(TC* ac, T0* C);
/* Call to ET_FEATURE.is_exported_to */
extern T1 T866x18399287T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FEATURE.arguments_count */
extern T6 T866x18399286(TC* ac, T0* C);
/* Call to ET_FEATURE.is_unique_attribute */
extern T1 T866x18399265(TC* ac, T0* C);
/* Call to ET_FEATURE.is_constant_attribute */
extern T1 T866x18399264(TC* ac, T0* C);
/* Call to ET_FEATURE.is_once_per_thread */
extern T1 T866x17989635(TC* ac, T0* C);
/* Call to ET_FEATURE.is_attribute */
extern T1 T866x18399263(TC* ac, T0* C);
/* Call to ET_FEATURE.is_once_per_process */
extern T1 T866x17989634(TC* ac, T0* C);
/* Call to ET_FEATURE.is_once_per_object */
extern T1 T866x17989636(TC* ac, T0* C);
/* Call to ET_FEATURE.is_once */
extern T1 T866x17989633(TC* ac, T0* C);
/* Call to ET_FEATURE.has_class_postcondition_recursive */
extern T1 T866x18399280(TC* ac, T0* C);
/* Call to ET_FEATURE.hash_code */
extern T6 T866x655361(TC* ac, T0* C);
/* Call to ET_FEATURE.preconditions */
extern T0* T866x17989641(TC* ac, T0* C);
/* Call to ET_FEATURE.other_precursors */
extern T0* T866x18399246(TC* ac, T0* C);
/* Call to ET_FEATURE.first_precursor */
extern T0* T866x19136516(TC* ac, T0* C);
/* Call to ET_FEATURE.has_validity_error */
extern T1 T866x19136521(TC* ac, T0* C);
/* Call to ET_FEATURE.validity_checked */
extern T1 T866x19136520(TC* ac, T0* C);
/* Call to ET_FEATURE.postconditions */
extern T0* T866x17989642(TC* ac, T0* C);
/* Call to ET_FEATURE.is_infixable */
extern T1 T866x18399274(TC* ac, T0* C);
/* Call to ET_FEATURE.is_prefixable */
extern T1 T866x18399275(TC* ac, T0* C);
/* Call to ET_FEATURE.is_parenthesisable */
extern T1 T866x18399277(TC* ac, T0* C);
/* Call to ET_FEATURE.is_bracketable */
extern T1 T866x18399276(TC* ac, T0* C);
/* Call to ET_FEATURE.is_frozen */
extern T1 T866x18399259(TC* ac, T0* C);
/* Call to ET_FEATURE.id */
extern T6 T866x18399243(TC* ac, T0* C);
/* Call to ET_FEATURE.renamed_feature */
extern T0* T866x18399294T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.undefined_feature */
extern T0* T866x18399295T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.same_version */
extern T1 T866x18399292T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.is_dotnet */
extern T1 T866x18481157(TC* ac, T0* C);
/* Call to ET_FEATURE.is_query */
extern T1 T866x18399266(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.item_name */
extern T0* T890x20299779(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.hash_code */
extern T6 T890x655361(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.unfolded_cursor_name */
extern T0* T890x20299788(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.cursor_item_expression */
extern T0* T890x20299790(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.new_cursor_expression */
extern T0* T890x20299789(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.has_cursor_name */
extern T1 T890x20299777(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.cursor_forth_instruction */
extern T0* T890x20299792(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.cursor_after_expression */
extern T0* T890x20299791(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.iterable_expression */
extern T0* T890x20299778(TC* ac, T0* C);
/* Call to ET_ARGUMENT_OPERANDS.actual_argument */
extern T0* T892x16777225T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ARGUMENT_OPERANDS.count */
extern T6 T892x16777226(TC* ac, T0* C);
/* Call to ET_ARGUMENT_OPERANDS.is_empty */
extern T1 T892x16777218(TC* ac, T0* C);
/* Call to ET_CALL_COMPONENT.name */
extern T0* T893x16826370(TC* ac, T0* C);
/* Call to ET_CALL_COMPONENT.arguments */
extern T0* T893x16826371(TC* ac, T0* C);
/* Call to ET_CALL_COMPONENT.is_call_agent */
extern T1 T893x16826374(TC* ac, T0* C);
/* Call to ET_CALL_COMPONENT.position */
extern T0* T893x20758529(TC* ac, T0* C);
/* Call to ET_CALL_COMPONENT.is_tuple_label */
extern T1 T893x16826373(TC* ac, T0* C);
/* Call to ET_CALL_NAME.lower_name */
extern T0* T895x21348354(TC* ac, T0* C);
/* Call to ET_CALL_NAME.position */
extern T0* T895x20758529(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_not_symbol */
extern T1 T895x21348395(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_not */
extern T1 T895x21348394(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_plus */
extern T1 T895x21348392(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_minus */
extern T1 T895x21348391(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_dotdot */
extern T1 T895x21348389(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_xor_symbol */
extern T1 T895x21348388(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_xor */
extern T1 T895x21348387(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_times */
extern T1 T895x21348386(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_power */
extern T1 T895x21348385(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_plus */
extern T1 T895x21348384(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else_symbol */
extern T1 T895x21348383(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else */
extern T1 T895x21348382(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or_symbol */
extern T1 T895x21348381(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or */
extern T1 T895x21348380(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_mod */
extern T1 T895x21348379(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_minus */
extern T1 T895x21348378(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_lt */
extern T1 T895x21348377(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_le */
extern T1 T895x21348376(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_implies_symbol */
extern T1 T895x21348375(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_implies */
extern T1 T895x21348374(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_gt */
extern T1 T895x21348373(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_ge */
extern T1 T895x21348372(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_divide */
extern T1 T895x21348370(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_div */
extern T1 T895x21348369(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then_symbol */
extern T1 T895x21348368(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then */
extern T1 T895x21348367(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and_symbol */
extern T1 T895x21348366(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and */
extern T1 T895x21348365(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_parenthesis */
extern T1 T895x21348397(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_bracket */
extern T1 T895x21348396(TC* ac, T0* C);
/* Call to ET_CALL_NAME.seed */
extern T6 T895x21348355(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_tuple_label */
extern T1 T895x21348361(TC* ac, T0* C);
/* Call to ET_CALL_NAME.precursor_keyword */
extern T0* T895x21348401(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_precursor */
extern T1 T895x21348399(TC* ac, T0* C);
/* Call to ET_CALL_NAME.hash_code */
extern T6 T895x655361(TC* ac, T0* C);
/* Call to ET_ASSERTION.expression */
extern T0* T898x15040514(TC* ac, T0* C);
/* Call to ET_ASSERTION.is_class_assertion */
extern T1 T898x15040513(TC* ac, T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.actual_argument */
extern T0* T936x16777225T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_ARGUMENTS.count */
extern T6 T936x16777226(TC* ac, T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.is_empty */
extern T1 T936x16777218(TC* ac, T0* C);
/* Call to ET_AGENT.implicit_target_position */
extern T0* T964x14565390(TC* ac, T0* C);
/* Call to ET_AGENT.target */
extern T0* T964x14565378(TC* ac, T0* C);
/* Call to ET_AGENT.arguments */
extern T0* T964x14565379(TC* ac, T0* C);
/* Call to ET_AGENT.position */
extern T0* T964x20758529(TC* ac, T0* C);
/* Call to ET_AGENT.is_inline_agent */
extern T1 T964x14565384(TC* ac, T0* C);
/* Call to ET_AGENT.index */
extern T6 T964x17596424(TC* ac, T0* C);
/* Call to ET_AGENT.is_qualified_call */
extern T1 T964x14565381(TC* ac, T0* C);
/* Call to ET_AGENT.implicit_result */
extern T0* T964x14565380(TC* ac, T0* C);
/* Call to ET_OPERAND.index */
extern T6 T977x17596424(TC* ac, T0* C);
/* Call to ET_OPERAND.is_open_operand */
extern T1 T977x17596417(TC* ac, T0* C);
/* Call to ET_OPERAND.is_current */
extern T1 T977x17596419(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPES.dynamic_type */
extern T0* T979x24264705T6(TC* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPES.count */
extern T6 T979x24264708(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPES.has_type */
extern T1 T979x24264710T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPES.index_of */
extern T6 T979x24264707T0(TC* ac, T0* C, T0* a1);
/* Call to ET_SEPARATE_CALL.arguments */
extern T0* T991x19808258(TC* ac, T0* C);
/* Call to ET_SEPARATE_CALL.target */
extern T0* T991x20594689(TC* ac, T0* C);
/* Call to ET_SEPARATE_CALL.name */
extern T0* T991x19808257(TC* ac, T0* C);
/* Call to ET_CLOSURE.inline_separate_arguments */
extern T0* T992x17989645(TC* ac, T0* C);
/* Call to ET_CLOSURE.iteration_components */
extern T0* T992x17989644(TC* ac, T0* C);
/* Call to ET_CLOSURE.object_tests */
extern T0* T992x17989643(TC* ac, T0* C);
/* Call to ET_CLOSURE.locals */
extern T0* T992x17989640(TC* ac, T0* C);
/* Call to ET_CLOSURE.type */
extern T0* T992x17989637(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.name */
extern T0* T996x16826370(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.target */
extern T0* T996x16826369(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T996x16826371(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.parenthesis_call */
extern T0* T996x20103171(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments_count */
extern T6 T996x19808264(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.index */
extern T6 T996x17596424(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_call_agent */
extern T1 T996x16826374(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_tuple_label */
extern T1 T996x16826373(TC* ac, T0* C);
/* Call to ET_CREATION_COMPONENT.position */
extern T0* T997x20758529(TC* ac, T0* C);
/* Call to ET_CREATION_COMPONENT.name */
extern T0* T997x19808257(TC* ac, T0* C);
/* Call to ET_CREATION_COMPONENT.is_scoop_region_passive */
extern T1 T997x20004870(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.target */
extern T0* T998x16826369(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.name */
extern T0* T998x16826370(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_call_agent */
extern T1 T998x16826374(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_tuple_label */
extern T1 T998x16826373(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.arguments */
extern T0* T998x16826371(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.position */
extern T0* T998x20758529(TC* ac, T0* C);
/* Call to ET_AST_LEAF.last_position */
extern T0* T1026x20758531(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.label */
extern T0* T1027x22151171(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.position */
extern T0* T1027x20758529(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1027x22102020T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.type */
extern T0* T1027x22151170(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T1027x22102022T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.last_leaf */
extern T0* T1027x20758533(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_prefix_not_symbol */
extern T1 T1028x21348395(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_prefix_not */
extern T1 T1028x21348394(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and_then_symbol */
extern T1 T1028x21348368(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and_symbol */
extern T1 T1028x21348366(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and_then */
extern T1 T1028x21348367(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and */
extern T1 T1028x21348365(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_implies_symbol */
extern T1 T1028x21348375(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_implies */
extern T1 T1028x21348374(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or_else_symbol */
extern T1 T1028x21348383(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or_symbol */
extern T1 T1028x21348381(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or_else */
extern T1 T1028x21348382(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or */
extern T1 T1028x21348380(TC* ac, T0* C);
/* Call to ET_OPERATOR.position */
extern T0* T1028x20758529(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_tuple_label */
extern T1 T1028x21348361(TC* ac, T0* C);
/* Call to ET_NAMED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1082x22741053T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1082x22741056T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1082x22741051T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1082x22741052T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1082x22741055T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1082x22741054T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1082x22741046T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.is_type_non_separate_with_type_mark */
extern T1 T1082x22741022T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T1082x22741042T0(TC* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.to_text */
extern T0* T1082x22741075(TC* ac, T0* C);
/* Call to ET_NAMED_TYPE.has_formal_types */
extern T1 T1082x22741038T0(TC* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1082x22741066T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.is_type_reference_with_type_mark */
extern T1 T1082x22741026T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_attached_with_type_mark */
extern T1 T1082x22741028T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_detachable_with_type_mark */
extern T1 T1082x22741030T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_separate_with_type_mark */
extern T1 T1082x22741020T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_expanded_with_type_mark */
extern T1 T1082x22741024T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1082x22741067T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1082x22741065T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.conforms_to_type_with_type_marks */
extern T1 T1082x15466505T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.same_named_type_with_type_marks */
extern T1 T1082x22741048T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1082x22741058T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1082x22741059T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_class_type_with_type_marks */
extern T1 T1082x22741057T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.type_with_type_mark */
extern T0* T1082x22741013T0(TC* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.base_class */
extern T0* T1082x22740995T0(TC* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.start_condition */
extern T6 T1199x12697610(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T1199x29425668T0(TC* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.end_of_file */
extern T1 T1199x12697616(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.last_value */
extern T0* T1199x29425677(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.last_token */
extern T6 T1199x12697601(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.error_position */
extern T0* T1199x29425675(TC* ac, T0* C);
/* Call to XM_DOCUMENT_NODE.parent */
extern T0* T1247x30343169(TC* ac, T0* C);
/* Call to ET_ECF_CONDITION_ITEM.is_capability_supported */
extern T1 T1493x13336578T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ECF_CONDITION_ITEM.is_capability_aware */
extern T1 T1493x13385729T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_CONDITION_ITEM.is_enabled */
extern T1 T1493x13336577T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INTERNAL_UNIVERSE.hash_code */
extern T6 T1511x655361(TC* ac, T0* C);
/* Call to ET_GROUP.full_lower_name */
extern T0* T1558x19513367T2(TC* ac, T0* C, T2 a1);
/* Call to ET_GROUP.kind_lower_name */
extern T0* T1558x19513372(TC* ac, T0* C);
/* Call to ET_GROUP.is_cluster */
extern T1 T1558x19513347(TC* ac, T0* C);
/* Call to ET_GROUP.absolute_pathname */
extern T0* T1558x19513370(TC* ac, T0* C);
/* Call to ET_GROUP.universe */
extern T0* T1558x19513360(TC* ac, T0* C);
/* Call to ET_GROUP.parent */
extern T0* T1558x19513387(TC* ac, T0* C);
/* Call to ET_GROUP.full_name */
extern T0* T1558x19513366T2(TC* ac, T0* C, T2 a1);
/* Call to ET_GROUP.cluster */
extern T0* T1558x19513384(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.adapted_feature */
extern T0* T1560x18481169(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_adapted */
extern T1 T1560x18481156(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.inherited_feature */
extern T0* T1560x18481167(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_inherited */
extern T1 T1560x18481154(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.redeclared_feature */
extern T0* T1560x18481168(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_redeclared */
extern T1 T1560x18481155(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_immediate */
extern T1 T1560x18481153(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.flattened_feature */
extern T0* T1560x18481165(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.immediate_feature */
extern T0* T1560x18481166(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_BASE_TYPES.type_constraint */
extern T0* T1568x15466497T6(TC* ac, T0* C, T6 a1);
/* Call to ET_CONSTRAINT_BASE_TYPES.count */
extern T6 T1568x15466503(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_BASE_TYPES.has_non_separate_type */
extern T1 T1568x15466502T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CONSTRAINT_BASE_TYPES.types_to_text */
extern T0* T1568x15466506(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_BASE_TYPES.has_attached_type */
extern T1 T1568x15466501T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CONSTRAINT_BASE_TYPES.has_expanded_type */
extern T1 T1568x15466500T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CONSTRAINT_BASE_TYPES.conforms_to_type_with_type_marks */
extern T1 T1568x15466505T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE_CONSTRAINT.type */
extern T0* T1569x16252930(TC* ac, T0* C);
/* Call to ET_BASE_TYPE_CONSTRAINT.renames */
extern T0* T1569x16252931(TC* ac, T0* C);
/* Call to ET_BASE_TYPE_CONSTRAINT.is_type_non_separate */
extern T1 T1569x15466502T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE_CONSTRAINT.is_type_attached */
extern T1 T1569x15466501T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE_CONSTRAINT.is_type_expanded */
extern T1 T1569x15466500T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE_CONSTRAINT.base_class */
extern T0* T1569x15237121(TC* ac, T0* C);
/* Call to ET_BASE_TYPE_CONSTRAINT.named_feature */
extern T0* T1569x15237125T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ADAPTED_UNIVERSE.lower_name */
extern T0* T1633x19300355(TC* ac, T0* C);
/* Call to ET_ADAPTED_UNIVERSE.name */
extern T0* T1633x19300354(TC* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.first_feature */
extern T0* T1691x18989059(TC* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.replicated_feature */
extern T0* T1691x18989058(TC* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.has_replication */
extern T1 T1691x18989057(TC* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.selected_count */
extern T6 T1691x18989060(TC* ac, T0* C);
/* Call to ET_ADAPTED_CLASS.base_type */
extern T0* T1773x15237122(TC* ac, T0* C);
/* Call to ET_ADAPTED_CLASS.base_class */
extern T0* T1773x15237121(TC* ac, T0* C);
/* Call to ET_ADAPTED_CLASS.named_query */
extern T0* T1773x15237123T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ADAPTED_CLASS.base_type_index_of_label */
extern T6 T1773x15237126T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_ADAPTED_CLASS.named_procedure */
extern T0* T1773x15237124T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ADAPTED_CLASS.named_feature */
extern T0* T1773x15237125T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CALL_EXPRESSION_WITH_ACTUAL_ARGUMENTS.index */
extern T6 T1817x17596424(TC* ac, T0* C);
/* Call to ET_CALL_EXPRESSION_WITH_ACTUAL_ARGUMENTS.is_call_agent */
extern T1 T1817x19808259(TC* ac, T0* C);
/* Call to ET_CALL_EXPRESSION_WITH_ACTUAL_ARGUMENTS.arguments */
extern T0* T1817x19808258(TC* ac, T0* C);
/* Call to ET_CALL_EXPRESSION_WITH_ACTUAL_ARGUMENTS.name */
extern T0* T1817x19808257(TC* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.implicit_result */
extern T0* T1818x14565380(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.locals */
extern T0* T1819x17989640(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.compound */
extern T0* T1819x18628609(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.is_once_per_process */
extern T1 T1819x17989634(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.inline_separate_arguments */
extern T0* T1819x17989645(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.rescue_clause */
extern T0* T1819x18628611(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.arguments */
extern T0* T1819x17989638(TC* ac, T0* C);
/* Call to ET_LOOP_COMPONENT.loop_compound */
extern T0* T1836x20348933(TC* ac, T0* C);
/* Call to ET_LOOP_COMPONENT.until_conditional */
extern T0* T1836x20348932(TC* ac, T0* C);
/* Call to ET_LOOP_COMPONENT.variant_part */
extern T0* T1836x20348931(TC* ac, T0* C);
/* Call to ET_LOOP_COMPONENT.invariant_part */
extern T0* T1836x20348930(TC* ac, T0* C);
/* Call to ET_ROUTINE.arguments */
extern T0* T1839x18481162(TC* ac, T0* C);
/* Call to ET_ROUTINE.implementation_feature */
extern T0* T1839x17989646(TC* ac, T0* C);
/* Call to XM_ELEMENT_NODE.parent */
extern T0* T1843x30343169(TC* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENTS.name */
extern T0* T1845x19808257(TC* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENTS.arguments */
extern T0* T1845x19808258(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL.name */
extern T0* T1847x16826370(TC* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.expression */
extern T0* T1852x16924673(TC* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.index */
extern T6 T1852x17596424(TC* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.convert_feature */
extern T0* T1852x16924674(TC* ac, T0* C);
/* Call to ET_QUERY_INLINE_AGENT.type */
extern T0* T1854x17989637(TC* ac, T0* C);
/* Call to ET_QUERY_INLINE_AGENT.formal_arguments */
extern T0* T1854x17989638(TC* ac, T0* C);
/* Call to ET_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T1857x17989638(TC* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.parenthesis_call */
extern T0* T1860x20103171(TC* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.name */
extern T0* T1860x16826370(TC* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.target */
extern T0* T1860x16826369(TC* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.arguments */
extern T0* T1860x16826371(TC* ac, T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T1863x16826371(TC* ac, T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.target */
extern T0* T1863x16826369(TC* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENT_LIST.arguments */
extern T0* T1865x19808258(TC* ac, T0* C);
/* Call to ET_ECF_GROUP.class_options */
extern T0* T2011x13860870(TC* ac, T0* C);
/* Call to ET_ECF_GROUP.options */
extern T0* T2011x13860869(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.is_attribute */
extern T1 T2027x18399263(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.implementation_feature */
extern T0* T2027x17989646(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.is_once_per_object */
extern T1 T2027x17989636(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.is_once_per_thread */
extern T1 T2027x17989635(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.is_once_per_process */
extern T1 T2027x17989634(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.is_once */
extern T1 T2027x17989633(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.lower_name */
extern T0* T2027x19136515(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.rescue_clause */
extern T0* T2027x18628611(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.compound */
extern T0* T2027x18628609(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.arguments */
extern T0* T2027x18481162(TC* ac, T0* C);
/* Call to ET_LIKE_IDENTIFIER.name */
extern T0* T2042x22577153(TC* ac, T0* C);
/* Call to ET_LIKE_IDENTIFIER.to_text */
extern T0* T2042x22741075(TC* ac, T0* C);
/* Call to ET_AST_NODE.position */
extern T0* T2058x20758529(TC* ac, T0* C);
/* Call to LX_TRANSITION [LX_NFA_STATE].target */
extern T0* T2256x26968065(TC* ac, T0* C);
/* Call to LX_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T2256x26968066T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_8.append_character */
extern void T17x2293809T2(TC* ac, T0* C, T2 a1);
/* Call to STRING_8.append_string */
extern void T17x2293820T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.remove_head */
extern void T17x2326533T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_8.append_code */
extern void T17x2326558T10(TC* ac, T0* C, T10 a1);
/* Call to STRING_8.put */
extern void T17x2588678T2T6(TC* ac, T0* C, T2 a1, T6 a2);
/* Call to STRING_8.remove_tail */
extern void T17x2326531T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_8.append_substring */
extern void T17x2293821T0T6T6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* Call to STRING_8.append_string_general */
extern void T17x2326547T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.append_substring_general */
extern void T17x2326546T0T6T6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* Call to STRING_8.wipe_out */
extern void T17x2326530(TC* ac, T0* C);
/* Call to STRING_8.keep_head */
extern void T17x2326539T6(TC* ac, T0* C, T6 a1);
/* Call to EXCEPTION.set_type_name */
extern void T22x1753112T0(TC* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_recipient_name */
extern void T22x1753115T0(TC* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_description */
extern void T22x1753117T0(TC* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_exception_trace */
extern void T22x1753111T0(TC* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_throwing_exception */
extern void T22x1753116T0(TC* ac, T0* C, T0* a1);
/* Call to KI_CHARACTER_INPUT_STREAM.read_character */
extern void T51x6193164(TC* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.close */
extern void T51x6193162(TC* ac, T0* C);
/* Call to AP_OPTION.record_occurrence */
extern void T61x5586963T0(TC* ac, T0* C, T0* a1);
/* Call to AP_OPTION.reset */
extern void T61x5586962(TC* ac, T0* C);
/* Call to ET_UNIVERSE.universes_do_if */
extern void T72x19660934T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.master_classes_do_if_until */
extern void T72x19660940T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_UNIVERSE.master_classes_do_if */
extern void T72x19660941T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.master_classes_do_until */
extern void T72x19660942T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.master_classes_do_all */
extern void T72x19660943T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.classes_do_if */
extern void T72x19660951T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_until */
extern void T72x19660952T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_all */
extern void T72x19660953T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.append_to_string */
extern void T101x22741083T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.add_adapted_base_classes_to_list */
extern void T101x22741084T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.context_add_adapted_base_classes_to_list */
extern void T101x22773819T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.process */
extern void T101x20758538T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.append_canonical_to_string */
extern void T101x22741081T0(TC* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_integer */
extern void T115x6094862T6(TC* ac, T0* C, T6 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_character */
extern void T115x6225926T2(TC* ac, T0* C, T2 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_new_line */
extern void T115x6307842(TC* ac, T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_string */
extern void T115x6094864T0(TC* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.append */
extern void T115x6225925T0(TC* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_line */
extern void T115x6307843T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_GENERAL.keep_head */
extern void T168x2326539T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_GENERAL.remove_head */
extern void T168x2326533T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_GENERAL.append_code */
extern void T168x2326558T10(TC* ac, T0* C, T10 a1);
/* Call to ET_TYPE_MARK.append_to_string_with_space */
extern void T175x21184537T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T184x22118425(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.reset */
extern void T184x22118426(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.append_runtime_name_to_string */
extern void T184x22118421T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.append_to_string */
extern void T184x22118424T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.append_canonical_to_string */
extern void T184x22118422T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.reset_qualified_anchored_types */
extern void T202x22741085(TC* ac, T0* C);
/* Call to ET_TYPE.reset */
extern void T202x15466509(TC* ac, T0* C);
/* Call to ET_TYPE.append_runtime_name_to_string */
extern void T202x22741080T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.append_to_string */
extern void T202x22741083T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.add_adapted_base_classes_to_list */
extern void T202x22741084T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.process */
extern void T202x20758538T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.append_canonical_to_string */
extern void T202x22741081T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.append_canonical_actual_parameter_to_string */
extern void T202x22102025T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_to_expression */
extern void T230x25264303T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_from_expression */
extern void T230x25264305T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_builtin_expression */
extern void T230x25264309T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constrained_formal_parameter */
extern void T230x25264312T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter */
extern void T230x25264256T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_cast_expression */
extern void T230x25264237T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_check_instruction */
extern void T230x25264325T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_across_instruction */
extern void T230x25264363T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_retry_instruction */
extern void T230x25264161T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_current */
extern void T230x25264216T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_tuple_type */
extern void T230x25264150T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class_type */
extern void T230x25264319T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unqualified_call_instruction */
extern void T230x25264138T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter_type */
extern void T230x25264253T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_instruction */
extern void T230x25264157T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_instruction */
extern void T230x25264180T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_call_instruction */
extern void T230x25264175T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_instruction */
extern void T230x25264301T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bang_instruction */
extern void T230x25264338T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_loop_instruction */
extern void T230x25264209T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment_attempt */
extern void T230x25264342T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment */
extern void T230x25264343T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assigner_instruction */
extern void T230x25264344T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_like_type */
extern void T230x25264173T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_like_braced_type */
extern void T230x25264174T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_feature */
extern void T230x25264215T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure */
extern void T230x25264268T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_procedure */
extern void T230x25264292T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure */
extern void T230x25264193T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure */
extern void T230x25264289T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function */
extern void T230x25264270T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_function */
extern void T230x25264293T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function */
extern void T230x25264196T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function */
extern void T230x25264291T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unique_attribute */
extern void T230x25264140T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constant_attribute */
extern void T230x25264313T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_extended_attribute */
extern void T230x25264272T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_attribute */
extern void T230x25264339T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_repeat_instruction */
extern void T230x25264164T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inspect_instruction */
extern void T230x25264227T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inline_separate_instruction */
extern void T230x25264230T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_instruction */
extern void T230x25264244T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_debug_instruction */
extern void T230x25264294T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unqualified_call_expression */
extern void T230x25264139T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure_inline_agent */
extern void T230x25264267T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure_inline_agent */
extern void T230x25264192T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure_inline_agent */
extern void T230x25264288T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function_inline_agent */
extern void T230x25264269T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function_inline_agent */
extern void T230x25264195T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function_inline_agent */
extern void T230x25264290T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_iteration_cursor */
extern void T230x25264225T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_manifest_string */
extern void T230x25264194T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_named_object_test */
extern void T230x25264202T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_object_test */
extern void T230x25264200T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_object_test */
extern void T230x25264197T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_expression */
extern void T230x25264198T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_prefix_expression */
extern void T230x25264178T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_type */
extern void T230x25264203T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_object_equality_expression */
extern void T230x25264201T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_equality_expression */
extern void T230x25264278T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_expression */
extern void T230x25264235T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_expression_address */
extern void T230x25264274T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result_address */
extern void T230x25264162T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current_address */
extern void T230x25264296T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_feature_address */
extern void T230x25264265T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_expression */
extern void T230x25264181T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c1_character_constant */
extern void T230x25264329T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_true_constant */
extern void T230x25264151T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_real_constant */
extern void T230x25264144T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_binary_integer_constant */
extern void T230x25264335T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_octal_integer_constant */
extern void T230x25264199T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_hexadecimal_integer_constant */
extern void T230x25264249T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_integer_constant */
extern void T230x25264145T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_verbatim_string */
extern void T230x25264136T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_special_manifest_string */
extern void T230x25264159T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c3_character_constant */
extern void T230x25264327T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_strip_expression */
extern void T230x25264156T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_expression */
extern void T230x25264158T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_quantifier_expression */
extern void T230x25264172T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_parenthesized_expression */
extern void T230x25264184T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_tuple */
extern void T230x25264204T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_array */
extern void T230x25264207T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inspect_expression */
extern void T230x25264228T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_expression */
extern void T230x25264245T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_expression */
extern void T230x25264302T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_agent */
extern void T230x25264326T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bracket_expression */
extern void T230x25264331T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_across_expression */
extern void T230x25264364T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result */
extern void T230x25264163T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current */
extern void T230x25264297T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class */
extern void T230x25264321T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inlined_expression */
extern void T230x25264229T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c2_character_constant */
extern void T230x25264328T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_false_constant */
extern void T230x25264266T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_real_constant */
extern void T230x25264168T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_integer_constant */
extern void T230x25264170T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_manifest_string */
extern void T230x25264169T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_call_expression */
extern void T230x25264176T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_void */
extern void T230x25264135T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_identifier */
extern void T230x25264248T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.set_index */
extern void T294x17596425T6(TC* ac, T0* C, T6 a1);
/* Call to ET_CHARACTER_CONSTANT.set_cast_type */
extern void T294x16384015T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.set_type */
extern void T294x16384014T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_index */
extern void T306x17596425T6(TC* ac, T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.set_cast_type */
extern void T306x16465961T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_type */
extern void T306x16465960T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_sign */
extern void T306x16465962T0(TC* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.set_index */
extern void T312x17596425T6(TC* ac, T0* C, T6 a1);
/* Call to ET_MANIFEST_STRING.set_type */
extern void T312x16482320T0(TC* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.set_cast_type */
extern void T312x16482321T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AGENT_ARGUMENT_OPERAND.process */
extern void T352x20758538T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AGENT_ARGUMENT_OPERAND.reset */
extern void T352x17596426(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.process */
extern void T361x20758538T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AGENT_TARGET.reset */
extern void T361x17596426(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.set_index */
extern void T361x17596425T6(TC* ac, T0* C, T6 a1);
/* Call to ET_CHOICE.reset */
extern void T385x19857417(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.reset */
extern void T388x19857417(TC* ac, T0* C);
/* Call to ET_CONSTANT.set_index */
extern void T409x17596425T6(TC* ac, T0* C, T6 a1);
/* Call to ET_CONSTANT.process */
extern void T409x20758538T0(TC* ac, T0* C, T0* a1);
/* Call to ET_EXPRESSION.reset */
extern void T466x15040516(TC* ac, T0* C);
/* Call to ET_EXPRESSION.process */
extern void T466x20758538T0(TC* ac, T0* C, T0* a1);
/* Call to ET_EXPRESSION.add_separate_arguments */
extern void T466x17137678T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_EXPRESSION.set_index */
extern void T466x17596425T6(TC* ac, T0* C, T6 a1);
/* Call to ET_INLINE_AGENT.set_attached_result_index */
extern void T515x14876683T6(TC* ac, T0* C, T6 a1);
/* Call to ET_INLINE_AGENT.set_result_index */
extern void T515x14876684T6(TC* ac, T0* C, T6 a1);
/* Call to ET_INLINE_AGENT.set_inline_separate_arguments */
extern void T515x17989647T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_iteration_components */
extern void T515x17989648T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_object_tests */
extern void T515x17989649T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_actual_arguments */
extern void T515x14565392T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INSTRUCTION.process */
extern void T536x20758538T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INSTRUCTION.reset */
extern void T536x20283400(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.reset_qualified_anchored_types */
extern void T544x22741085(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.reset */
extern void T544x15466509(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.append_to_string */
extern void T544x22741083T0(TC* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.reset_after_interface_checked */
extern void T607x18399319(TC* ac, T0* C);
/* Call to ET_PROCEDURE.reset_after_features_flattened */
extern void T607x18399320(TC* ac, T0* C);
/* Call to ET_PROCEDURE.reset */
extern void T607x18399321(TC* ac, T0* C);
/* Call to ET_PROCEDURE.add_creation_clients_to */
extern void T607x18399317T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_PROCEDURE.reset_validity_checked */
extern void T607x19136525(TC* ac, T0* C);
/* Call to ET_PROCEDURE.set_inline_separate_arguments */
extern void T607x17989647T0(TC* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_iteration_components */
extern void T607x17989648T0(TC* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_object_tests */
extern void T607x17989649T0(TC* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_frozen_keyword */
extern void T607x18399305T0(TC* ac, T0* C, T0* a1);
/* Call to ET_QUERY.reset_after_interface_checked */
extern void T616x18399319(TC* ac, T0* C);
/* Call to ET_QUERY.reset_after_features_flattened */
extern void T616x18399320(TC* ac, T0* C);
/* Call to ET_QUERY.reset */
extern void T616x18399321(TC* ac, T0* C);
/* Call to ET_QUERY.reset_validity_checked */
extern void T616x19136525(TC* ac, T0* C);
/* Call to ET_QUERY.set_inline_separate_arguments */
extern void T616x17989647T0(TC* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_iteration_components */
extern void T616x17989648T0(TC* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_object_tests */
extern void T616x17989649T0(TC* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_frozen_keyword */
extern void T616x18399305T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONSTRAINT.reset */
extern void T635x15466509(TC* ac, T0* C);
/* Call to ET_TYPE_CONSTRAINT.reset_renames */
extern void T635x15466508(TC* ac, T0* C);
/* Call to ET_CONSTRAINT.reset */
extern void T767x15466509(TC* ac, T0* C);
/* Call to ET_CONSTRAINT.reset_renames */
extern void T767x15466508(TC* ac, T0* C);
/* Call to ET_UNTAGGED_ASSERTION.reset */
extern void T771x15040516(TC* ac, T0* C);
/* Call to XM_CALLBACKS_FILTER.set_next */
extern void T797x28475394T0(TC* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_xml_declaration */
extern void T798x28409869T0T0T1(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* Call to XM_CALLBACKS.on_attribute */
extern void T798x28409864T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to XM_CALLBACKS.on_error */
extern void T798x28409868T0(TC* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_end_tag */
extern void T798x28409862T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_start_tag_finish */
extern void T798x28409863(TC* ac, T0* C);
/* Call to XM_CALLBACKS.on_start_tag */
extern void T798x28409865T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_content */
extern void T798x28409861T0(TC* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_processing_instruction */
extern void T798x28409867T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to XM_CALLBACKS.on_comment */
extern void T798x28409866T0(TC* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_finish */
extern void T798x28409870(TC* ac, T0* C);
/* Call to XM_CALLBACKS.on_start */
extern void T798x28409871(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.set_library_target */
extern void T801x14204939T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_uuid */
extern void T801x13402121T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_read_only */
extern void T801x14204942T1(TC* ac, T0* C, T1 a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_targets */
extern void T801x14204940T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_notes */
extern void T801x14204937T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_description */
extern void T801x14204938T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_ecf_version */
extern void T801x13402119T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_ecf_namespace */
extern void T801x13402120T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.put_query_call */
extern void T838x24248374T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.put_procedure_call */
extern void T838x24248373T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.put_object_equality_expression */
extern void T838x24248371T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.put_equality_expression */
extern void T838x24248372T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_static */
extern void T838x24248386T1(TC* ac, T0* C, T1 a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.use_all_attributes */
extern void T838x24248379T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_alive */
extern void T838x24248387(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_attribute_position */
extern void T838x24248380T0T6(TC* ac, T0* C, T0* a1, T6 a2);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_next_type */
extern void T838x24248370T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_hash_code */
extern void T838x24248381T6(TC* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_attached_type */
extern void T838x24248385T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_attached_separate_type */
extern void T838x24248383T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_separate_type */
extern void T838x24248384T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_id */
extern void T838x24248382T6(TC* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPE_SET.put_target */
extern void T851x24690698T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE_SET.add_common_types_to_list */
extern void T851x24264715T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE_SET.add_common_expanded_and_reference_types_to_lists */
extern void T851x24264713T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_DYNAMIC_TYPE_SET.set_never_void */
extern void T851x24690699(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.propagate_can_be_void */
extern void T851x24576001T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.put_type_from_type_set */
extern void T851x24576003T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_DYNAMIC_TYPE.put_target */
extern void T852x24690698T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.set_meta_type */
extern void T852x24657947T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.process */
extern void T866x20758538T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_validity_error */
extern void T866x19136526(TC* ac, T0* C);
/* Call to ET_FEATURE.set_validity_checked */
extern void T866x19136527(TC* ac, T0* C);
/* Call to ET_FEATURE.set_other_seeds */
extern void T866x18399308T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_seed */
extern void T866x18399309T6(TC* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_clients */
extern void T866x18399316T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_version */
extern void T866x18399312T6(TC* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_other_precursors */
extern void T866x18399306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_precursor */
extern void T866x18399307T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.reset_postconditions */
extern void T866x18399301(TC* ac, T0* C);
/* Call to ET_FEATURE.reset_preconditions */
extern void T866x18399302(TC* ac, T0* C);
/* Call to ET_FEATURE.set_implementation_class */
extern void T866x18399311T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_feature */
extern void T866x18399310T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_id */
extern void T866x18399315T6(TC* ac, T0* C, T6 a1);
/* Call to ET_CALL_NAME.set_seed */
extern void T895x21348409T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ASSERTION.reset */
extern void T898x15040516(TC* ac, T0* C);
/* Call to ET_ASSERTION.process */
extern void T898x20758538T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AGENT.set_arguments */
extern void T964x14565392T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AGENT.process */
extern void T964x20758538T0(TC* ac, T0* C, T0* a1);
/* Call to ET_OPERAND.set_index */
extern void T977x17596425T6(TC* ac, T0* C, T6 a1);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.set_index */
extern void T996x17596425T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETER.append_canonical_to_string */
extern void T1027x22102025T0(TC* ac, T0* C, T0* a1);
/* Call to ET_OPERATOR.reset */
extern void T1028x21348410(TC* ac, T0* C);
/* Call to ET_OPERATOR.set_seed */
extern void T1028x21348409T6(TC* ac, T0* C, T6 a1);
/* Call to XM_EIFFEL_SCANNER.close_input */
extern void T1199x29425688(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T1199x29425689T0(TC* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.set_encoding */
extern void T1199x29425687T0(TC* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T1199x29425692(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.read_token */
extern void T1199x12697658(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_stream */
extern void T1199x29425690T0(TC* ac, T0* C, T0* a1);
/* Call to XM_DOCUMENT_NODE.node_set_parent */
extern void T1247x30195714T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TARGET.propagate_can_be_void */
extern void T1437x24576001T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TARGET.put_type_from_type_set */
extern void T1437x24576003T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_INTERNAL_UNIVERSE.clusters_do_explicit */
extern void T1511x19546154T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INTERNAL_UNIVERSE.dotnet_assemblies_do_if */
extern void T1511x19546147T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_ADAPTED_CLASS.add_overloaded_procedures */
extern void T1773x15237127T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_ADAPTED_CLASS.add_overloaded_queries */
extern void T1773x15237128T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to XM_ELEMENT_NODE.node_set_parent */
extern void T1843x30195714T0(TC* ac, T0* C, T0* a1);
/* Call to ET_REGULAR_FEATURE_CALL.set_parenthesis_call */
extern void T1860x20545538T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENT_LIST.set_arguments */
extern void T1865x19824642T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_GROUP.set_options */
extern void T2011x13860880T0(TC* ac, T0* C, T0* a1);
/* Call to LX_TRANSITION [LX_NFA_STATE].record */
extern void T2256x26968068T0(TC* ac, T0* C, T0* a1);
extern T0* GE_ma34(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma1898(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma1897(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma940(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma907(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma849(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma1242(TC* ac, T6 c, T6 n, ...);
extern T0* GE_mt76(TC* ac);
extern T0* GE_mt1305(TC* ac, T0* a1, T0* a2, T0* a3);
extern T0* GE_mt2052(TC* ac, T0* a1, T0* a2, T8 a3);
extern T0* GE_mt961(TC* ac, T0* a1, T0* a2);
extern T0* GE_mt1520(TC* ac, T0* a1);
extern T0* GE_mt32(TC* ac, T6 a1, T6 a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T6 a10, T1 a11);
extern T0* ge375ov6144044;
extern T0* ge412ov6307841;
extern T0* ge401ov6307841;
extern T0* ge488ov7995457;
extern T0* ge498ov8159289;
extern T0* ge1866ov30572601;
extern T0* ge421ov6144033;
extern T0* ge418ov6144033;
extern T0* ge421ov6144043;
extern T0* ge418ov6144043;
extern T0* ge396ov6488072;
extern T0* ge418ov6144032;
extern T0* ge403ov6602764;
extern T0* ge403ov6602763;
extern T0* ge421ov6144032;
extern T0* ge396ov6488074;
extern T0* ge397ov6504465;
extern T0* ge410ov6307841;
extern T0* ge1670ov11862020;
extern T0* ge366ov5996588;
extern T0* ge1655ov11862020;
extern T0* ge1661ov11862020;
extern T0* ge1660ov11862020;
extern T0* ge1659ov11862020;
extern T0* ge1650ov11862020;
extern T0* ge1649ov11862020;
extern T0* ge1667ov11862020;
extern T0* ge1664ov11862020;
extern T0* ge1680ov11862020;
extern T0* ge729ov11862020;
extern T0* ge734ov11862020;
extern T0* ge722ov11862020;
extern T0* ge724ov11862022;
extern T0* ge332ov5439510;
extern T0* ge747ov12238849;
extern T0* ge334ov5472263;
extern T0* ge337ov5521413;
extern T0* ge337ov5521420;
extern T0* ge337ov5521411;
extern T0* ge337ov5521418;
extern T0* ge332ov5439511;
extern T0* ge332ov5439512;
extern T0* ge332ov5439513;
extern T0* ge337ov5521410;
extern T0* ge337ov5521417;
extern T0* ge337ov5521412;
extern T0* ge337ov5521419;
extern T0* ge337ov5521414;
extern T0* ge337ov5521421;
extern T0* ge337ov5521415;
extern T0* ge337ov5521422;
extern T0* ge334ov5472258;
extern T0* ge334ov5472257;
extern T0* ge334ov5472265;
extern T0* ge334ov5472264;
extern T0* ge746ov12222465;
extern T0* ge1523ov24953480;
extern T0* ge1523ov24953488;
extern T0* ge1523ov24952904;
extern T0* ge746ov12222471;
extern T0* ge746ov12222469;
extern T0* ge748ov12255239;
extern T0* ge1523ov24953486;
extern T0* ge1523ov24953485;
extern T0* ge1523ov24953487;
extern T0* ge730ov11862020;
extern T0* ge723ov11862020;
extern T0* ge731ov11862020;
extern T0* ge727ov11862020;
extern T0* ge416ov6307841;
extern T0* ge395ov6471699;
extern T0* ge395ov6471700;
extern T0* ge789ov12927007;
extern T0* ge789ov12926993;
extern T0* ge789ov12926991;
extern T0* ge789ov12926977;
extern T0* ge789ov12926995;
extern T0* ge789ov12926992;
extern T0* ge789ov12926996;
extern T0* ge789ov12927001;
extern T0* ge789ov12926998;
extern T0* ge789ov12926994;
extern T0* ge789ov12926988;
extern T0* ge789ov12926989;
extern T0* ge789ov12926997;
extern T0* ge789ov12926990;
extern T0* ge789ov12927002;
extern T0* ge789ov12926978;
extern T0* ge789ov12927004;
extern T0* ge789ov12927005;
extern T0* ge789ov12926980;
extern T0* ge789ov12926979;
extern T0* ge789ov12927003;
extern T0* ge789ov12927006;
extern T0* ge789ov12926986;
extern T0* ge789ov12926987;
extern T0* ge789ov12926983;
extern T0* ge789ov12927000;
extern T0* ge789ov12926999;
extern T0* ge789ov12926984;
extern T0* ge789ov12926985;
extern T0* ge789ov12926982;
extern T0* ge789ov12926981;
extern T0* ge785ov12861458;
extern T0* ge1523ov24953484;
extern T0* ge1523ov24953070;
extern T0* ge1523ov24953105;
extern T0* ge1523ov24953079;
extern T0* ge1523ov24953409;
extern T0* ge1523ov24953412;
extern T0* ge1523ov24953411;
extern T0* ge1523ov24953328;
extern T0* ge1523ov24953075;
extern T0* ge1523ov24953077;
extern T0* ge1523ov24953422;
extern T0* ge1523ov24953068;
extern T0* ge1523ov24953426;
extern T0* ge1523ov24953113;
extern T0* ge1523ov24953404;
extern T0* ge1523ov24953408;
extern T0* ge1523ov24953405;
extern T0* ge1523ov24953407;
extern T0* ge1523ov24953406;
extern T0* ge1523ov24953413;
extern T0* ge1523ov24953415;
extern T0* ge1523ov24953414;
extern T0* ge1523ov24953416;
extern T0* ge1286ov21069835;
extern T0* ge1517ov24854535;
extern T0* ge1517ov24854532;
extern T0* ge1517ov24854529;
extern T0* ge1292ov21168962;
extern T0* ge1292ov21168947;
extern T0* ge1292ov21168709;
extern T0* ge1292ov21169076;
extern T0* ge1292ov21169031;
extern T0* ge1292ov21169056;
extern T0* ge1292ov21169046;
extern T0* ge1522ov24937179;
extern T0* ge1522ov24936896;
extern T0* ge1522ov24936628;
extern T0* ge1380ov22609927;
extern T0* ge1387ov22724634;
extern T0* ge1376ov22544428;
extern T0* ge1292ov21169062;
extern T0* ge1292ov21169109;
extern T0* ge1292ov21169088;
extern T0* ge1292ov21169110;
extern T0* ge1292ov21169112;
extern T0* ge1292ov21169095;
extern T0* ge1292ov21169111;
extern T0* ge1292ov21169107;
extern T0* ge1292ov21169108;
extern T0* ge1522ov24937156;
extern T0* ge1522ov24936891;
extern T0* ge1522ov24936606;
extern T0* ge1522ov24937172;
extern T0* ge1522ov24936894;
extern T0* ge1522ov24936621;
extern T0* ge1292ov21169210;
extern T0* ge1292ov21169209;
extern T0* ge1292ov21169206;
extern T0* ge1292ov21169205;
extern T0* ge1319ov21610503;
extern T0* ge1292ov21169183;
extern T0* ge1292ov21169186;
extern T0* ge1292ov21169188;
extern T0* ge1292ov21169191;
extern T0* ge1292ov21169207;
extern T0* ge1292ov21169162;
extern T0* ge1292ov21169193;
extern T0* ge1292ov21169194;
extern T0* ge1292ov21169195;
extern T0* ge1292ov21169196;
extern T0* ge1292ov21169197;
extern T0* ge1292ov21169198;
extern T0* ge1292ov21169199;
extern T0* ge1292ov21169200;
extern T0* ge1292ov21169201;
extern T0* ge1292ov21169202;
extern T0* ge1292ov21169203;
extern T0* ge1292ov21169204;
extern T0* ge1522ov24937264;
extern T0* ge1522ov24936941;
extern T0* ge1522ov24936713;
extern T0* ge1522ov24937266;
extern T0* ge1522ov24936942;
extern T0* ge1522ov24936715;
extern T0* ge1522ov24937168;
extern T0* ge1522ov24936617;
extern T0* ge1522ov24937171;
extern T0* ge1522ov24936620;
extern T0* ge1522ov24937170;
extern T0* ge1522ov24936619;
extern T0* ge1522ov24937169;
extern T0* ge1522ov24936618;
extern T0* ge1522ov24937262;
extern T0* ge1522ov24936711;
extern T0* ge1522ov24937263;
extern T0* ge1522ov24936712;
extern T0* ge1522ov24937335;
extern T0* ge1522ov24936975;
extern T0* ge1522ov24936782;
extern T0* ge1522ov24937267;
extern T0* ge1522ov24936943;
extern T0* ge1522ov24936716;
extern T0* ge1522ov24937348;
extern T0* ge1522ov24936987;
extern T0* ge1522ov24936795;
extern T0* ge1522ov24937349;
extern T0* ge1522ov24936796;
extern T0* ge1522ov24937275;
extern T0* ge1522ov24936947;
extern T0* ge1522ov24936722;
extern T0* ge1522ov24937274;
extern T0* ge1522ov24936946;
extern T0* ge1522ov24936721;
extern T0* ge1522ov24937270;
extern T0* ge1522ov24936945;
extern T0* ge1522ov24936719;
extern T0* ge1522ov24937268;
extern T0* ge1522ov24936944;
extern T0* ge1522ov24936717;
extern T0* ge1522ov24937269;
extern T0* ge1522ov24936718;
extern T0* ge1513ov24788998;
extern T0* ge1513ov24788996;
extern T0* ge1513ov24788994;
extern T0* ge1512ov24772621;
extern T0* ge1512ov24772616;
extern T0* ge1512ov24772611;
extern T0* ge1522ov24937347;
extern T0* ge1522ov24936986;
extern T0* ge1522ov24936794;
extern T0* ge1292ov21168712;
extern T0* ge1292ov21168711;
extern T0* ge1292ov21168710;
extern T0* ge1292ov21168708;
extern T0* ge1292ov21169072;
extern T0* ge1292ov21169060;
extern T0* ge1292ov21168707;
extern T0* ge1292ov21168704;
extern T0* ge1292ov21168706;
extern T0* ge1292ov21168705;
extern T0* ge1292ov21168703;
extern T0* ge1292ov21168702;
extern T0* ge1292ov21168701;
extern T0* ge1292ov21168700;
extern T0* ge1292ov21168699;
extern T0* ge1292ov21168698;
extern T0* ge1292ov21168697;
extern T0* ge1292ov21168696;
extern T0* ge1292ov21168693;
extern T0* ge1292ov21168692;
extern T0* ge1292ov21168691;
extern T0* ge1292ov21168690;
extern T0* ge1292ov21168689;
extern T0* ge1292ov21168685;
extern T0* ge1292ov21168683;
extern T0* ge1292ov21168681;
extern T0* ge1292ov21168680;
extern T0* ge1292ov21168679;
extern T0* ge1292ov21168678;
extern T0* ge1292ov21168677;
extern T0* ge1292ov21168676;
extern T0* ge1292ov21168675;
extern T0* ge1292ov21168673;
extern T0* ge1292ov21168671;
extern T0* ge1292ov21168670;
extern T0* ge1292ov21168669;
extern T0* ge1292ov21168666;
extern T0* ge1292ov21168665;
extern T0* ge1292ov21168664;
extern T0* ge1292ov21168663;
extern T0* ge1292ov21168662;
extern T0* ge1292ov21168713;
extern T0* ge1292ov21168686;
extern T0* ge1292ov21168668;
extern T0* ge1292ov21168660;
extern T0* ge1292ov21169049;
extern T0* ge1292ov21168694;
extern T0* ge1292ov21169039;
extern T0* ge1292ov21169083;
extern T0* ge1292ov21169034;
extern T0* ge1292ov21169115;
extern T0* ge1292ov21169116;
extern T0* ge1292ov21169117;
extern T0* ge1292ov21169118;
extern T0* ge1292ov21169119;
extern T0* ge1292ov21169123;
extern T0* ge1292ov21169124;
extern T0* ge1292ov21169125;
extern T0* ge1292ov21169126;
extern T0* ge1292ov21169127;
extern T0* ge1292ov21169128;
extern T0* ge1292ov21169129;
extern T0* ge1292ov21169130;
extern T0* ge1292ov21169132;
extern T0* ge1292ov21169133;
extern T0* ge1292ov21169135;
extern T0* ge1292ov21169136;
extern T0* ge1292ov21169137;
extern T0* ge1292ov21169138;
extern T0* ge1292ov21169139;
extern T0* ge1292ov21169140;
extern T0* ge1292ov21169141;
extern T0* ge1292ov21169142;
extern T0* ge1292ov21169144;
extern T0* ge1292ov21169145;
extern T0* ge1292ov21169150;
extern T0* ge1292ov21169151;
extern T0* ge1292ov21169152;
extern T0* ge1292ov21169153;
extern T0* ge1292ov21169154;
extern T0* ge1292ov21169155;
extern T0* ge1292ov21169156;
extern T0* ge1292ov21169157;
extern T0* ge1292ov21169159;
extern T0* ge1292ov21169160;
extern T0* ge1292ov21168909;
extern T0* ge1292ov21168881;
extern T0* ge1292ov21168714;
extern T0* ge1292ov21168804;
extern T0* ge1292ov21169035;
extern T0* ge1292ov21169044;
extern T0* ge1292ov21169038;
extern T0* ge1292ov21169097;
extern T0* ge1292ov21169082;
extern T0* ge1292ov21169058;
extern T0* ge1292ov21169084;
extern T0* ge1292ov21169098;
extern T0* ge1292ov21169042;
extern T0* ge1292ov21169086;
extern T0* ge1292ov21169054;
extern T0* ge1292ov21169057;
extern T0* ge1292ov21169105;
extern T0* ge1292ov21169051;
extern T0* ge1292ov21169048;
extern T0* ge1292ov21169078;
extern T0* ge1292ov21169067;
extern T0* ge1292ov21169091;
extern T0* ge1292ov21169047;
extern T0* ge1292ov21169103;
extern T0* ge1292ov21169074;
extern T0* ge1292ov21169061;
extern T0* ge1292ov21169090;
extern T0* ge1519ov24887299;
extern T0* ge1519ov24887298;
extern T0* ge1292ov21169077;
extern T0* ge1292ov21169040;
extern T0* ge1292ov21169055;
extern T0* ge1292ov21169101;
extern T0* ge1292ov21169075;
extern T0* ge1292ov21169066;
extern T0* ge1292ov21169050;
extern T0* ge1292ov21169087;
extern T0* ge1292ov21169041;
extern T0* ge1292ov21169063;
extern T0* ge1292ov21169089;
extern T0* ge1522ov24937346;
extern T0* ge1522ov24936793;
extern T0* ge1292ov21169080;
extern T0* ge1534ov25133107;
extern T0* ge1292ov21169163;
extern T0* ge1292ov21169164;
extern T0* ge1292ov21169165;
extern T0* ge1292ov21169166;
extern T0* ge1292ov21169167;
extern T0* ge1292ov21169168;
extern T0* ge1292ov21169169;
extern T0* ge1292ov21169170;
extern T0* ge1292ov21169171;
extern T0* ge1292ov21169172;
extern T0* ge1292ov21169173;
extern T0* ge1292ov21169174;
extern T0* ge1292ov21169175;
extern T0* ge1292ov21169176;
extern T0* ge1292ov21169177;
extern T0* ge1292ov21169178;
extern T0* ge1292ov21169179;
extern T0* ge1292ov21169180;
extern T0* ge1292ov21169181;
extern T0* ge1292ov21169182;
extern T0* ge1292ov21169211;
extern T0* ge1292ov21169212;
extern T0* ge1292ov21169213;
extern T0* ge1292ov21168661;
extern T0* ge1292ov21168667;
extern T0* ge1292ov21168672;
extern T0* ge1292ov21168674;
extern T0* ge1292ov21168682;
extern T0* ge1292ov21168684;
extern T0* ge1292ov21168687;
extern T0* ge1292ov21168688;
extern T0* ge1292ov21168695;
extern T0* ge1292ov21168715;
extern T0* ge1292ov21168716;
extern T0* ge1292ov21168717;
extern T0* ge1292ov21168718;
extern T0* ge1292ov21168719;
extern T0* ge1292ov21168720;
extern T0* ge1292ov21168721;
extern T0* ge1292ov21168722;
extern T0* ge1292ov21168723;
extern T0* ge1292ov21168724;
extern T0* ge1292ov21168725;
extern T0* ge1292ov21168726;
extern T0* ge1292ov21168727;
extern T0* ge1292ov21168728;
extern T0* ge1292ov21168729;
extern T0* ge1292ov21168730;
extern T0* ge1292ov21168731;
extern T0* ge1292ov21168732;
extern T0* ge1292ov21168733;
extern T0* ge1292ov21168734;
extern T0* ge1292ov21168735;
extern T0* ge1292ov21168736;
extern T0* ge1292ov21168737;
extern T0* ge1292ov21168738;
extern T0* ge1292ov21168739;
extern T0* ge1292ov21168740;
extern T0* ge1292ov21168741;
extern T0* ge1292ov21168742;
extern T0* ge1292ov21168743;
extern T0* ge1292ov21168744;
extern T0* ge1292ov21168745;
extern T0* ge1292ov21168746;
extern T0* ge1292ov21168747;
extern T0* ge1292ov21168748;
extern T0* ge1292ov21168749;
extern T0* ge1292ov21168750;
extern T0* ge1292ov21168751;
extern T0* ge1292ov21168752;
extern T0* ge1292ov21168753;
extern T0* ge1292ov21168754;
extern T0* ge1292ov21168755;
extern T0* ge1292ov21168756;
extern T0* ge1292ov21168757;
extern T0* ge1292ov21168758;
extern T0* ge1292ov21168759;
extern T0* ge1292ov21168760;
extern T0* ge1292ov21168761;
extern T0* ge1292ov21168762;
extern T0* ge1292ov21168763;
extern T0* ge1292ov21168764;
extern T0* ge1292ov21168765;
extern T0* ge1292ov21168766;
extern T0* ge1292ov21168767;
extern T0* ge1292ov21168768;
extern T0* ge1292ov21168769;
extern T0* ge1292ov21168770;
extern T0* ge1292ov21168771;
extern T0* ge1292ov21168772;
extern T0* ge1292ov21168773;
extern T0* ge1292ov21168774;
extern T0* ge1292ov21168775;
extern T0* ge1292ov21168776;
extern T0* ge1292ov21168777;
extern T0* ge1292ov21168778;
extern T0* ge1292ov21168779;
extern T0* ge1292ov21168780;
extern T0* ge1292ov21168781;
extern T0* ge1292ov21168782;
extern T0* ge1292ov21168783;
extern T0* ge1292ov21168784;
extern T0* ge1292ov21168785;
extern T0* ge1292ov21168786;
extern T0* ge1292ov21168787;
extern T0* ge1292ov21168788;
extern T0* ge1292ov21168789;
extern T0* ge1292ov21168790;
extern T0* ge1292ov21168791;
extern T0* ge1292ov21168792;
extern T0* ge1292ov21168793;
extern T0* ge1292ov21168794;
extern T0* ge1292ov21168795;
extern T0* ge1292ov21168796;
extern T0* ge1292ov21168797;
extern T0* ge1292ov21168798;
extern T0* ge1292ov21168799;
extern T0* ge1292ov21168800;
extern T0* ge1292ov21168801;
extern T0* ge1292ov21168802;
extern T0* ge1292ov21168803;
extern T0* ge1292ov21168805;
extern T0* ge1292ov21168806;
extern T0* ge1292ov21168807;
extern T0* ge1292ov21168808;
extern T0* ge1292ov21168809;
extern T0* ge1292ov21168810;
extern T0* ge1292ov21168811;
extern T0* ge1292ov21168812;
extern T0* ge1292ov21168813;
extern T0* ge1292ov21168814;
extern T0* ge1292ov21168815;
extern T0* ge1292ov21168816;
extern T0* ge1292ov21168817;
extern T0* ge1292ov21168818;
extern T0* ge1292ov21168819;
extern T0* ge1292ov21168820;
extern T0* ge1292ov21168821;
extern T0* ge1292ov21168822;
extern T0* ge1292ov21168823;
extern T0* ge1292ov21168824;
extern T0* ge1292ov21168825;
extern T0* ge1292ov21168826;
extern T0* ge1292ov21168827;
extern T0* ge1292ov21168828;
extern T0* ge1292ov21168829;
extern T0* ge1292ov21168830;
extern T0* ge1292ov21168831;
extern T0* ge1292ov21168832;
extern T0* ge1292ov21168833;
extern T0* ge1292ov21168834;
extern T0* ge1292ov21168835;
extern T0* ge1292ov21168836;
extern T0* ge1292ov21168837;
extern T0* ge1292ov21168838;
extern T0* ge1292ov21168839;
extern T0* ge1292ov21168840;
extern T0* ge1292ov21168841;
extern T0* ge1292ov21168842;
extern T0* ge1292ov21168843;
extern T0* ge1292ov21168844;
extern T0* ge1292ov21168845;
extern T0* ge1292ov21168846;
extern T0* ge1292ov21168847;
extern T0* ge1292ov21168848;
extern T0* ge1292ov21168849;
extern T0* ge1292ov21168850;
extern T0* ge1292ov21168851;
extern T0* ge1292ov21168852;
extern T0* ge1292ov21168853;
extern T0* ge1292ov21168854;
extern T0* ge1292ov21168855;
extern T0* ge1292ov21168856;
extern T0* ge1292ov21168857;
extern T0* ge1292ov21168858;
extern T0* ge1292ov21168859;
extern T0* ge1292ov21168860;
extern T0* ge1292ov21168861;
extern T0* ge1292ov21168862;
extern T0* ge1292ov21168863;
extern T0* ge1292ov21168864;
extern T0* ge1292ov21168865;
extern T0* ge1292ov21168866;
extern T0* ge1292ov21168867;
extern T0* ge1292ov21168868;
extern T0* ge1292ov21168869;
extern T0* ge1292ov21168870;
extern T0* ge1292ov21168871;
extern T0* ge1292ov21168872;
extern T0* ge1292ov21168873;
extern T0* ge1292ov21168874;
extern T0* ge1292ov21168875;
extern T0* ge1292ov21168876;
extern T0* ge1292ov21168877;
extern T0* ge1292ov21168878;
extern T0* ge1292ov21168879;
extern T0* ge1292ov21168880;
extern T0* ge1292ov21168882;
extern T0* ge1292ov21168883;
extern T0* ge1292ov21168884;
extern T0* ge1292ov21168885;
extern T0* ge1292ov21168886;
extern T0* ge1292ov21168887;
extern T0* ge1292ov21168888;
extern T0* ge1292ov21168889;
extern T0* ge1292ov21168890;
extern T0* ge1292ov21168891;
extern T0* ge1292ov21168892;
extern T0* ge1292ov21168893;
extern T0* ge1292ov21168894;
extern T0* ge1292ov21168895;
extern T0* ge1292ov21168896;
extern T0* ge1292ov21168897;
extern T0* ge1292ov21168898;
extern T0* ge1292ov21168899;
extern T0* ge1292ov21168900;
extern T0* ge1292ov21168901;
extern T0* ge1292ov21168902;
extern T0* ge1292ov21168903;
extern T0* ge1292ov21168904;
extern T0* ge1292ov21168905;
extern T0* ge1292ov21168906;
extern T0* ge1292ov21168907;
extern T0* ge1292ov21168908;
extern T0* ge1292ov21168910;
extern T0* ge1292ov21168911;
extern T0* ge1292ov21168912;
extern T0* ge1292ov21168913;
extern T0* ge1292ov21168914;
extern T0* ge1292ov21168915;
extern T0* ge1292ov21168916;
extern T0* ge1292ov21168917;
extern T0* ge1292ov21168918;
extern T0* ge1292ov21168919;
extern T0* ge1292ov21168920;
extern T0* ge1292ov21168921;
extern T0* ge1292ov21168922;
extern T0* ge1292ov21168923;
extern T0* ge1292ov21168924;
extern T0* ge1292ov21168925;
extern T0* ge1292ov21168926;
extern T0* ge1292ov21168927;
extern T0* ge1292ov21168928;
extern T0* ge1292ov21168929;
extern T0* ge1292ov21168930;
extern T0* ge1292ov21168931;
extern T0* ge1292ov21168932;
extern T0* ge1292ov21168933;
extern T0* ge1292ov21168934;
extern T0* ge1292ov21168935;
extern T0* ge1292ov21168936;
extern T0* ge1292ov21168937;
extern T0* ge1292ov21168938;
extern T0* ge1292ov21168939;
extern T0* ge1292ov21168940;
extern T0* ge1292ov21168941;
extern T0* ge1292ov21168942;
extern T0* ge1292ov21168943;
extern T0* ge1292ov21168944;
extern T0* ge1292ov21168945;
extern T0* ge1292ov21168946;
extern T0* ge1292ov21168948;
extern T0* ge1292ov21168949;
extern T0* ge1292ov21168950;
extern T0* ge1292ov21168951;
extern T0* ge1292ov21168952;
extern T0* ge1292ov21168953;
extern T0* ge1292ov21168954;
extern T0* ge1292ov21168955;
extern T0* ge1292ov21168956;
extern T0* ge1292ov21168957;
extern T0* ge1292ov21168958;
extern T0* ge1292ov21168959;
extern T0* ge1292ov21168960;
extern T0* ge1292ov21168961;
extern T0* ge1292ov21168963;
extern T0* ge1292ov21168964;
extern T0* ge1292ov21168965;
extern T0* ge1292ov21168966;
extern T0* ge1292ov21168967;
extern T0* ge1292ov21168968;
extern T0* ge1292ov21168969;
extern T0* ge1292ov21168970;
extern T0* ge1292ov21168971;
extern T0* ge1292ov21168972;
extern T0* ge1292ov21168973;
extern T0* ge1292ov21168974;
extern T0* ge1292ov21168975;
extern T0* ge1292ov21168976;
extern T0* ge1292ov21168977;
extern T0* ge1292ov21168978;
extern T0* ge1292ov21168979;
extern T0* ge1292ov21168980;
extern T0* ge1292ov21168981;
extern T0* ge1292ov21168982;
extern T0* ge1292ov21168983;
extern T0* ge1292ov21168984;
extern T0* ge1292ov21168985;
extern T0* ge1292ov21168986;
extern T0* ge1292ov21168987;
extern T0* ge1292ov21168988;
extern T0* ge1292ov21168989;
extern T0* ge1292ov21168990;
extern T0* ge1292ov21168991;
extern T0* ge1292ov21168992;
extern T0* ge1292ov21168993;
extern T0* ge1292ov21168994;
extern T0* ge1292ov21168995;
extern T0* ge1292ov21168996;
extern T0* ge1292ov21168997;
extern T0* ge1292ov21168998;
extern T0* ge1292ov21168999;
extern T0* ge1292ov21169000;
extern T0* ge1292ov21169001;
extern T0* ge1292ov21169002;
extern T0* ge1292ov21169003;
extern T0* ge1292ov21169004;
extern T0* ge1292ov21169005;
extern T0* ge1292ov21169006;
extern T0* ge1292ov21169007;
extern T0* ge1292ov21169008;
extern T0* ge1292ov21169009;
extern T0* ge1292ov21169010;
extern T0* ge1292ov21169011;
extern T0* ge1292ov21169012;
extern T0* ge1292ov21169013;
extern T0* ge1292ov21169014;
extern T0* ge1292ov21169015;
extern T0* ge1292ov21169016;
extern T0* ge1292ov21169017;
extern T0* ge1292ov21169018;
extern T0* ge1292ov21169019;
extern T0* ge1292ov21169020;
extern T0* ge1292ov21169021;
extern T0* ge1292ov21169022;
extern T0* ge1292ov21169023;
extern T0* ge1292ov21169024;
extern T0* ge1292ov21169025;
extern T0* ge1292ov21169026;
extern T0* ge1292ov21169027;
extern T0* ge1292ov21169028;
extern T0* ge1292ov21169029;
extern T0* ge1292ov21169030;
extern T0* ge1292ov21169032;
extern T0* ge1292ov21169033;
extern T0* ge1292ov21169036;
extern T0* ge1292ov21169037;
extern T0* ge1292ov21169045;
extern T0* ge1292ov21169052;
extern T0* ge1292ov21169053;
extern T0* ge1292ov21169059;
extern T0* ge1292ov21169064;
extern T0* ge1292ov21169065;
extern T0* ge1292ov21169068;
extern T0* ge1292ov21169069;
extern T0* ge1292ov21169070;
extern T0* ge1292ov21169071;
extern T0* ge1292ov21169073;
extern T0* ge1292ov21169079;
extern T0* ge1292ov21169081;
extern T0* ge1292ov21169092;
extern T0* ge1292ov21169093;
extern T0* ge1292ov21169094;
extern T0* ge1292ov21169096;
extern T0* ge1292ov21169099;
extern T0* ge1292ov21169100;
extern T0* ge1292ov21169102;
extern T0* ge1292ov21169104;
extern T0* ge1292ov21169106;
extern T0* ge498ov8159244;
extern T0* ge411ov6733834;
extern T0* ge398ov6520842;
extern T0* ge1534ov25133128;
extern T0* ge1517ov24854537;
extern T0* ge1517ov24854534;
extern T0* ge1517ov24854531;
extern T0* ge1517ov24854536;
extern T0* ge1517ov24854533;
extern T0* ge1517ov24854530;
extern T0* ge1522ov24937173;
extern T0* ge1522ov24936622;
extern T0* ge1522ov24937294;
extern T0* ge1522ov24936953;
extern T0* ge1522ov24936741;
extern T0* ge1522ov24937278;
extern T0* ge1522ov24936948;
extern T0* ge1522ov24936725;
extern T0* ge1522ov24937313;
extern T0* ge1522ov24936960;
extern T0* ge1522ov24936760;
extern T0* ge1522ov24937311;
extern T0* ge1522ov24936959;
extern T0* ge1522ov24936758;
extern T0* ge1522ov24937188;
extern T0* ge1522ov24936902;
extern T0* ge1522ov24936637;
extern T0* ge1522ov24937281;
extern T0* ge1522ov24936950;
extern T0* ge1522ov24936728;
extern T0* ge1522ov24937280;
extern T0* ge1522ov24936949;
extern T0* ge1522ov24936727;
extern T0* ge1522ov24937279;
extern T0* ge1522ov24936726;
extern T0* ge1522ov24937040;
extern T0* ge1522ov24936847;
extern T0* ge1522ov24936492;
extern T0* ge1522ov24937016;
extern T0* ge1522ov24936833;
extern T0* ge1522ov24936468;
extern T0* ge1522ov24937147;
extern T0* ge1522ov24936886;
extern T0* ge1522ov24936597;
extern T0* ge1522ov24937277;
extern T0* ge1522ov24936724;
extern T0* ge1522ov24937276;
extern T0* ge1522ov24936723;
extern T0* ge1522ov24937039;
extern T0* ge1522ov24936846;
extern T0* ge1522ov24936491;
extern T0* ge1522ov24937015;
extern T0* ge1522ov24936832;
extern T0* ge1522ov24936467;
extern T0* ge1522ov24937295;
extern T0* ge1522ov24936742;
extern T0* ge1522ov24937312;
extern T0* ge1522ov24936759;
extern T0* ge1522ov24937310;
extern T0* ge1522ov24936757;
extern T0* ge1522ov24937191;
extern T0* ge1522ov24936903;
extern T0* ge1522ov24936640;
extern T0* ge1292ov21169216;
extern T0* ge1292ov21169219;
extern T0* ge1522ov24937014;
extern T0* ge1522ov24936466;
extern T0* ge1522ov24937286;
extern T0* ge1522ov24936951;
extern T0* ge1522ov24936733;
extern T0* ge1523ov24953057;
extern T0* ge1523ov24953120;
extern T0* ge1523ov24953476;
extern T0* ge1523ov24953338;
extern T0* ge1523ov24953458;
extern T0* ge1523ov24953332;
extern T0* ge1523ov24953460;
extern T0* ge1523ov24953059;
extern T0* ge1523ov24953454;
extern T0* ge1523ov24953477;
extern T0* ge1523ov24953323;
extern T0* ge1523ov24953260;
extern T0* ge1523ov24953336;
extern T0* ge1523ov24953344;
extern T0* ge1523ov24953379;
extern T0* ge1523ov24953421;
extern T0* ge1523ov24953063;
extern T0* ge1523ov24953343;
extern T0* ge1523ov24953434;
extern T0* ge1523ov24953333;
extern T0* ge1523ov24953339;
extern T0* ge1523ov24953112;
extern T0* ge1523ov24953340;
extern T0* ge1523ov24953342;
extern T0* ge1523ov24953335;
extern T0* ge1523ov24953334;
extern T0* ge1523ov24953345;
extern T0* ge1523ov24953337;
extern T0* ge1523ov24953219;
extern T0* ge1523ov24953452;
extern T0* ge1523ov24953436;
extern T0* ge1523ov24953455;
extern T0* ge1523ov24953341;
extern T0* ge1523ov24953325;
extern T0* ge1523ov24953066;
extern T0* ge1523ov24953456;
extern T0* ge1523ov24953258;
extern T0* ge1523ov24953459;
extern T0* ge1523ov24953470;
extern T0* ge1523ov24953463;
extern T0* ge1523ov24953464;
extern T0* ge1523ov24953065;
extern T0* ge1523ov24953061;
extern T0* ge1522ov24937293;
extern T0* ge1522ov24936952;
extern T0* ge1522ov24936740;
extern T0* ge1522ov24937190;
extern T0* ge1522ov24936639;
extern T0* ge1522ov24937372;
extern T0* ge1522ov24936996;
extern T0* ge1522ov24936819;
extern T0* ge1522ov24937370;
extern T0* ge1522ov24936817;
extern T0* ge1522ov24937371;
extern T0* ge1522ov24936818;
extern T0* ge1522ov24937354;
extern T0* ge1522ov24936989;
extern T0* ge1522ov24936801;
extern T0* ge1522ov24937352;
extern T0* ge1522ov24936799;
extern T0* ge1522ov24937353;
extern T0* ge1522ov24936800;
extern T0* ge1522ov24937077;
extern T0* ge1522ov24936864;
extern T0* ge1522ov24936529;
extern T0* ge1522ov24937076;
extern T0* ge1522ov24936528;
extern T0* ge1522ov24937375;
extern T0* ge1522ov24936997;
extern T0* ge1522ov24936822;
extern T0* ge1522ov24937373;
extern T0* ge1522ov24936820;
extern T0* ge1522ov24937374;
extern T0* ge1522ov24936821;
extern T0* ge1522ov24937362;
extern T0* ge1522ov24936992;
extern T0* ge1522ov24936809;
extern T0* ge1522ov24937360;
extern T0* ge1522ov24936807;
extern T0* ge1522ov24937361;
extern T0* ge1522ov24936808;
extern T0* ge1522ov24937081;
extern T0* ge1522ov24936866;
extern T0* ge1522ov24936533;
extern T0* ge1522ov24937080;
extern T0* ge1522ov24936532;
extern T0* ge1522ov24937367;
extern T0* ge1522ov24936994;
extern T0* ge1522ov24936814;
extern T0* ge1522ov24937365;
extern T0* ge1522ov24936812;
extern T0* ge1522ov24937366;
extern T0* ge1522ov24936813;
extern T0* ge1522ov24937079;
extern T0* ge1522ov24936865;
extern T0* ge1522ov24936531;
extern T0* ge1522ov24937078;
extern T0* ge1522ov24936530;
extern T0* ge1522ov24937368;
extern T0* ge1522ov24936995;
extern T0* ge1522ov24936815;
extern T0* ge1522ov24937369;
extern T0* ge1522ov24936816;
extern T0* ge1522ov24937355;
extern T0* ge1522ov24936990;
extern T0* ge1522ov24936802;
extern T0* ge1522ov24937356;
extern T0* ge1522ov24936803;
extern T0* ge1522ov24937083;
extern T0* ge1522ov24936868;
extern T0* ge1522ov24936535;
extern T0* ge1522ov24937071;
extern T0* ge1522ov24936863;
extern T0* ge1522ov24936523;
extern T0* ge1522ov24937073;
extern T0* ge1522ov24936525;
extern T0* ge1522ov24937363;
extern T0* ge1522ov24936993;
extern T0* ge1522ov24936810;
extern T0* ge1522ov24937364;
extern T0* ge1522ov24936811;
extern T0* ge1522ov24937350;
extern T0* ge1522ov24936988;
extern T0* ge1522ov24936797;
extern T0* ge1522ov24937351;
extern T0* ge1522ov24936798;
extern T0* ge1522ov24937189;
extern T0* ge1522ov24936638;
extern T0* ge1522ov24937011;
extern T0* ge1522ov24936829;
extern T0* ge1522ov24936463;
extern T0* ge1522ov24937010;
extern T0* ge1522ov24936462;
extern T0* ge1522ov24937009;
extern T0* ge1522ov24936461;
extern T0* ge1522ov24937008;
extern T0* ge1522ov24936460;
extern T0* ge1522ov24937007;
extern T0* ge1522ov24936459;
extern T0* ge1522ov24937006;
extern T0* ge1522ov24936458;
extern T0* ge1522ov24937005;
extern T0* ge1522ov24936828;
extern T0* ge1522ov24936457;
extern T0* ge1522ov24937012;
extern T0* ge1522ov24936830;
extern T0* ge1522ov24936464;
extern T0* ge1523ov24953329;
extern T0* ge1523ov24953457;
extern T0* ge1523ov24953259;
extern T0* ge1523ov24953327;
extern T0* ge1523ov24953330;
extern T0* ge1522ov24937018;
extern T0* ge1522ov24936834;
extern T0* ge1522ov24936470;
extern T0* ge1522ov24937213;
extern T0* ge1522ov24936916;
extern T0* ge1522ov24936662;
extern T0* ge1522ov24937212;
extern T0* ge1522ov24936661;
extern T0* ge1522ov24937211;
extern T0* ge1522ov24936660;
extern T0* ge1522ov24937210;
extern T0* ge1522ov24936659;
extern T0* ge1522ov24937209;
extern T0* ge1522ov24936658;
extern T0* ge1522ov24937208;
extern T0* ge1522ov24936915;
extern T0* ge1522ov24936657;
extern T0* ge1523ov24953478;
extern T0* ge1523ov24953281;
extern T0* ge1523ov24953166;
extern T0* ge1522ov24937297;
extern T0* ge1522ov24936955;
extern T0* ge1522ov24936744;
extern T0* ge1522ov24937298;
extern T0* ge1522ov24936745;
extern T0* ge1522ov24937296;
extern T0* ge1522ov24936954;
extern T0* ge1522ov24936743;
extern T0* ge1522ov24937035;
extern T0* ge1522ov24936845;
extern T0* ge1522ov24936487;
extern T0* ge1522ov24937034;
extern T0* ge1522ov24936486;
extern T0* ge1522ov24937033;
extern T0* ge1522ov24936844;
extern T0* ge1522ov24936485;
extern T0* ge1522ov24937290;
extern T0* ge1522ov24936737;
extern T0* ge1522ov24937037;
extern T0* ge1522ov24936489;
extern T0* ge1522ov24937038;
extern T0* ge1522ov24936490;
extern T0* ge1522ov24937031;
extern T0* ge1522ov24936843;
extern T0* ge1522ov24936483;
extern T0* ge1522ov24937216;
extern T0* ge1522ov24936919;
extern T0* ge1522ov24936665;
extern T0* ge1522ov24937217;
extern T0* ge1522ov24936666;
extern T0* ge1522ov24937215;
extern T0* ge1522ov24936918;
extern T0* ge1522ov24936664;
extern T0* ge1523ov24953242;
extern T0* ge1523ov24953069;
extern T0* ge1523ov24953170;
extern T0* ge1523ov24953190;
extern T0* ge1523ov24953191;
extern T0* ge1523ov24953229;
extern T0* ge1523ov24953192;
extern T0* ge1523ov24953135;
extern T0* ge1523ov24953230;
extern T0* ge1523ov24953193;
extern T0* ge1523ov24953240;
extern T0* ge1523ov24953241;
extern T0* ge1523ov24953136;
extern T0* ge1523ov24953243;
extern T0* ge1522ov24937194;
extern T0* ge1522ov24936905;
extern T0* ge1522ov24936643;
extern T0* ge1522ov24937148;
extern T0* ge1522ov24936598;
extern T0* ge1522ov24937017;
extern T0* ge1522ov24936469;
extern T0* ge1522ov24937149;
extern T0* ge1522ov24936887;
extern T0* ge1522ov24936599;
extern T0* ge1522ov24937142;
extern T0* ge1522ov24936883;
extern T0* ge1522ov24936592;
extern T0* ge1522ov24937144;
extern T0* ge1522ov24936885;
extern T0* ge1522ov24936594;
extern T0* ge1522ov24937143;
extern T0* ge1522ov24936884;
extern T0* ge1522ov24936593;
extern T0* ge1522ov24937285;
extern T0* ge1522ov24936732;
extern T0* ge1522ov24937184;
extern T0* ge1522ov24936900;
extern T0* ge1522ov24936633;
extern T0* ge1522ov24937067;
extern T0* ge1522ov24936862;
extern T0* ge1522ov24936519;
extern T0* ge1522ov24937068;
extern T0* ge1522ov24936520;
extern T0* ge1522ov24937185;
extern T0* ge1522ov24936634;
extern T0* ge1522ov24937186;
extern T0* ge1522ov24936635;
extern T0* ge1522ov24937069;
extern T0* ge1522ov24936521;
extern T0* ge1522ov24937075;
extern T0* ge1522ov24936527;
extern T0* ge1523ov24953132;
extern T0* ge1523ov24953467;
extern T0* ge1523ov24953280;
extern T0* ge1523ov24953475;
extern T0* ge1292ov21169215;
extern T0* ge1292ov21169218;
extern T0* ge1286ov21069833;
extern T0* ge1292ov21169217;
extern T0* ge1286ov21069834;
extern T0* ge1523ov24953449;
extern T0* ge1523ov24953417;
extern T0* ge1523ov24953418;
extern T0* ge1523ov24953133;
extern T0* ge1522ov24937187;
extern T0* ge1522ov24936901;
extern T0* ge1522ov24936636;
extern T0* ge1523ov24953109;
extern T0* ge1522ov24937183;
extern T0* ge1522ov24936899;
extern T0* ge1522ov24936632;
extern T0* ge1522ov24937182;
extern T0* ge1522ov24936631;
extern T0* ge1522ov24937282;
extern T0* ge1522ov24936729;
extern T0* ge1522ov24937019;
extern T0* ge1522ov24936835;
extern T0* ge1522ov24936471;
extern T0* ge1522ov24937020;
extern T0* ge1522ov24936836;
extern T0* ge1522ov24936472;
extern T0* ge1522ov24937333;
extern T0* ge1522ov24936972;
extern T0* ge1522ov24936780;
extern T0* ge1523ov24953425;
extern T0* ge1523ov24953468;
extern T0* ge1523ov24953115;
extern T0* ge1523ov24953118;
extern T0* ge1523ov24953419;
extern T0* ge1523ov24953324;
extern T0* ge1523ov24953169;
extern T0* ge1523ov24952990;
extern T0* ge1523ov24953091;
extern T0* ge1523ov24953403;
extern T0* ge1523ov24953402;
extern T0* ge1523ov24953376;
extern T0* ge1523ov24953375;
extern T0* ge1523ov24953374;
extern T0* ge1523ov24953373;
extern T0* ge1523ov24953372;
extern T0* ge1523ov24953371;
extern T0* ge1523ov24953370;
extern T0* ge1523ov24953369;
extern T0* ge1523ov24953368;
extern T0* ge1523ov24953367;
extern T0* ge1523ov24953366;
extern T0* ge1523ov24953365;
extern T0* ge1523ov24953364;
extern T0* ge1523ov24953363;
extern T0* ge1523ov24953362;
extern T0* ge1523ov24953361;
extern T0* ge1523ov24953360;
extern T0* ge1523ov24953359;
extern T0* ge1523ov24953358;
extern T0* ge1523ov24953357;
extern T0* ge1523ov24953356;
extern T0* ge1523ov24953355;
extern T0* ge1523ov24953354;
extern T0* ge1523ov24953353;
extern T0* ge1523ov24953351;
extern T0* ge1523ov24953350;
extern T0* ge1523ov24953349;
extern T0* ge1523ov24953348;
extern T0* ge1523ov24953347;
extern T0* ge1523ov24953346;
extern T0* ge1523ov24953228;
extern T0* ge1523ov24953222;
extern T0* ge1523ov24953160;
extern T0* ge1523ov24953271;
extern T0* ge1523ov24953143;
extern T0* ge1523ov24953439;
extern T0* ge1523ov24953437;
extern T0* ge1523ov24953252;
extern T0* ge1523ov24953106;
extern T0* ge1523ov24953158;
extern T0* ge1523ov24953420;
extern T0* ge1523ov24953162;
extern T0* ge1523ov24953137;
extern T0* ge1523ov24953177;
extern T0* ge1523ov24953107;
extern T0* ge1523ov24953469;
extern T0* ge1523ov24953080;
extern T0* ge1523ov24953206;
extern T0* ge1523ov24953203;
extern T0* ge1523ov24953303;
extern T0* ge1523ov24953320;
extern T0* ge1523ov24953302;
extern T0* ge1523ov24953319;
extern T0* ge1523ov24953301;
extern T0* ge1523ov24953318;
extern T0* ge1523ov24953278;
extern T0* ge1523ov24953072;
extern T0* ge1523ov24953300;
extern T0* ge1523ov24953317;
extern T0* ge1523ov24953299;
extern T0* ge1523ov24953316;
extern T0* ge1523ov24953298;
extern T0* ge1523ov24953315;
extern T0* ge1523ov24953297;
extern T0* ge1523ov24953314;
extern T0* ge1523ov24953104;
extern T0* ge1523ov24953295;
extern T0* ge1523ov24953312;
extern T0* ge1523ov24953294;
extern T0* ge1523ov24953311;
extern T0* ge1523ov24953293;
extern T0* ge1523ov24953310;
extern T0* ge1523ov24953292;
extern T0* ge1523ov24953309;
extern T0* ge1523ov24953291;
extern T0* ge1523ov24953308;
extern T0* ge1523ov24953290;
extern T0* ge1523ov24953307;
extern T0* ge1523ov24953289;
extern T0* ge1523ov24953306;
extern T0* ge1523ov24953176;
extern T0* ge1523ov24953145;
extern T0* ge1523ov24953433;
extern T0* ge1523ov24953101;
extern T0* ge1523ov24953099;
extern T0* ge1523ov24953090;
extern T0* ge1523ov24953089;
extern T0* ge1523ov24953088;
extern T0* ge1523ov24953087;
extern T0* ge1523ov24953086;
extern T0* ge1523ov24953202;
extern T0* ge1523ov24953084;
extern T0* ge1523ov24953102;
extern T0* ge1523ov24953076;
extern T0* ge1523ov24953074;
extern T0* ge1523ov24953121;
extern T0* ge1523ov24953164;
extern T0* ge1523ov24953163;
extern T0* ge1523ov24953378;
extern T0* ge1523ov24953267;
extern T0* ge1523ov24953322;
extern T0* ge1523ov24953321;
extern T0* ge1523ov24953305;
extern T0* ge1523ov24953304;
extern T0* ge1523ov24953288;
extern T0* ge1523ov24953287;
extern T0* ge1523ov24953283;
extern T0* ge1523ov24953284;
extern T0* ge1523ov24953277;
extern T0* ge1523ov24953276;
extern T0* ge1523ov24953275;
extern T0* ge1523ov24953448;
extern T0* ge1523ov24953272;
extern T0* ge1523ov24953265;
extern T0* ge1523ov24953264;
extern T0* ge1523ov24953261;
extern T0* ge1523ov24953254;
extern T0* ge1523ov24953251;
extern T0* ge1523ov24953250;
extern T0* ge1523ov24953249;
extern T0* ge1523ov24953248;
extern T0* ge1523ov24953247;
extern T0* ge1523ov24953246;
extern T0* ge1523ov24953245;
extern T0* ge1523ov24953244;
extern T0* ge1523ov24953216;
extern T0* ge1523ov24953217;
extern T0* ge1523ov24953213;
extern T0* ge1523ov24953215;
extern T0* ge1523ov24953214;
extern T0* ge1523ov24953212;
extern T0* ge1523ov24953210;
extern T0* ge1523ov24953211;
extern T0* ge1523ov24953209;
extern T0* ge1523ov24953208;
extern T0* ge1523ov24953207;
extern T0* ge1523ov24953205;
extern T0* ge1523ov24953204;
extern T0* ge1523ov24953201;
extern T0* ge1523ov24953200;
extern T0* ge1523ov24953199;
extern T0* ge1523ov24953198;
extern T0* ge1523ov24953197;
extern T0* ge1523ov24953196;
extern T0* ge1523ov24953195;
extern T0* ge1523ov24953194;
extern T0* ge1523ov24953182;
extern T0* ge1523ov24953180;
extern T0* ge1523ov24953179;
extern T0* ge1523ov24953178;
extern T0* ge1523ov24953175;
extern T0* ge1523ov24953174;
extern T0* ge1523ov24953173;
extern T0* ge1523ov24953172;
extern T0* ge1523ov24953171;
extern T0* ge1523ov24953181;
extern T0* ge1523ov24953269;
extern T0* ge1523ov24953268;
extern T0* ge1523ov24953266;
extern T0* ge1523ov24953151;
extern T0* ge1523ov24953150;
extern T0* ge1523ov24953149;
extern T0* ge1523ov24953148;
extern T0* ge1523ov24953147;
extern T0* ge1523ov24953146;
extern T0* ge1523ov24953131;
extern T0* ge1523ov24953130;
extern T0* ge1523ov24953128;
extern T0* ge1523ov24953270;
extern T0* ge1523ov24953183;
extern T0* ge1523ov24953139;
extern T0* ge1523ov24953138;
extern T0* ge1523ov24953142;
extern T0* ge1523ov24953141;
extern T0* ge1523ov24953140;
extern T0* ge1523ov24953144;
extern T0* ge1523ov24953218;
extern T0* ge1523ov24953127;
extern T0* ge1523ov24953126;
extern T0* ge1523ov24953438;
extern T0* ge1523ov24953446;
extern T0* ge1523ov24953296;
extern T0* ge1523ov24953313;
extern T0* ge1523ov24953232;
extern T0* ge1523ov24953231;
extern T0* ge1523ov24953401;
extern T0* ge1523ov24953157;
extern T0* ge1523ov24953400;
extern T0* ge1523ov24953122;
extern T0* ge1523ov24953385;
extern T0* ge1522ov24937146;
extern T0* ge1522ov24936596;
extern T0* ge1522ov24937192;
extern T0* ge1522ov24936641;
extern T0* ge1522ov24937359;
extern T0* ge1522ov24936991;
extern T0* ge1522ov24936806;
extern T0* ge1522ov24937357;
extern T0* ge1522ov24936804;
extern T0* ge1522ov24937358;
extern T0* ge1522ov24936805;
extern T0* ge1522ov24937174;
extern T0* ge1522ov24936623;
extern T0* ge1522ov24937219;
extern T0* ge1522ov24936920;
extern T0* ge1522ov24936668;
extern T0* ge1522ov24937226;
extern T0* ge1522ov24936924;
extern T0* ge1522ov24936675;
extern T0* ge1522ov24937225;
extern T0* ge1522ov24936674;
extern T0* ge1522ov24937224;
extern T0* ge1522ov24936923;
extern T0* ge1522ov24936673;
extern T0* ge1522ov24937223;
extern T0* ge1522ov24936672;
extern T0* ge1522ov24937222;
extern T0* ge1522ov24936922;
extern T0* ge1522ov24936671;
extern T0* ge1522ov24937221;
extern T0* ge1522ov24936670;
extern T0* ge1522ov24937220;
extern T0* ge1522ov24936921;
extern T0* ge1522ov24936669;
extern T0* ge1522ov24937218;
extern T0* ge1522ov24936667;
extern T0* ge1522ov24937292;
extern T0* ge1522ov24936739;
extern T0* ge1523ov24953326;
extern T0* ge1522ov24937193;
extern T0* ge1522ov24936904;
extern T0* ge1522ov24936642;
extern T0* ge1522ov24937288;
extern T0* ge1522ov24936735;
extern T0* ge1522ov24937084;
extern T0* ge1522ov24936536;
extern T0* ge1522ov24937072;
extern T0* ge1522ov24936524;
extern T0* ge1522ov24937070;
extern T0* ge1522ov24936522;
extern T0* ge1522ov24937238;
extern T0* ge1522ov24936926;
extern T0* ge1522ov24936687;
extern T0* ge1522ov24937307;
extern T0* ge1522ov24936957;
extern T0* ge1522ov24936754;
extern T0* ge1522ov24937235;
extern T0* ge1522ov24936925;
extern T0* ge1522ov24936684;
extern T0* ge1522ov24937233;
extern T0* ge1522ov24936682;
extern T0* ge1522ov24937231;
extern T0* ge1522ov24936680;
extern T0* ge1522ov24937228;
extern T0* ge1522ov24936677;
extern T0* ge1522ov24937227;
extern T0* ge1522ov24936676;
extern T0* ge1522ov24937255;
extern T0* ge1522ov24936936;
extern T0* ge1522ov24936704;
extern T0* ge1522ov24937250;
extern T0* ge1522ov24936934;
extern T0* ge1522ov24936699;
extern T0* ge1522ov24937291;
extern T0* ge1522ov24936738;
extern T0* ge1522ov24937237;
extern T0* ge1522ov24936686;
extern T0* ge1522ov24937317;
extern T0* ge1522ov24936962;
extern T0* ge1522ov24936764;
extern T0* ge1522ov24937315;
extern T0* ge1522ov24936961;
extern T0* ge1522ov24936762;
extern T0* ge956ov15958018;
extern T0* ge1522ov24937314;
extern T0* ge1522ov24936761;
extern T0* ge1522ov24937318;
extern T0* ge1522ov24936765;
extern T0* ge1522ov24937316;
extern T0* ge1522ov24936763;
extern T0* ge1522ov24937236;
extern T0* ge1522ov24936685;
extern T0* ge1522ov24937234;
extern T0* ge1522ov24936683;
extern T0* ge1522ov24937232;
extern T0* ge1522ov24936681;
extern T0* ge1522ov24937230;
extern T0* ge1522ov24936679;
extern T0* ge1522ov24937229;
extern T0* ge1522ov24936678;
extern T0* ge1522ov24937259;
extern T0* ge1522ov24936939;
extern T0* ge1522ov24936708;
extern T0* ge1522ov24937261;
extern T0* ge1522ov24936940;
extern T0* ge1522ov24936710;
extern T0* ge1522ov24937251;
extern T0* ge1522ov24936700;
extern T0* ge1523ov24953472;
extern T0* ge1523ov24953062;
extern T0* ge1523ov24953466;
extern T0* ge1523ov24953167;
extern T0* ge1523ov24953239;
extern T0* ge1523ov24953279;
extern T0* ge1523ov24953441;
extern T0* ge1523ov24953461;
extern T0* ge1523ov24953453;
extern T0* ge1523ov24953117;
extern T0* ge1523ov24953221;
extern T0* ge1523ov24953125;
extern T0* ge1523ov24953462;
extern T0* ge1522ov24937086;
extern T0* ge1522ov24936538;
extern T0* ge1522ov24937214;
extern T0* ge1522ov24936917;
extern T0* ge1522ov24936663;
extern T0* ge1522ov24937309;
extern T0* ge1522ov24936958;
extern T0* ge1522ov24936756;
extern T0* ge1522ov24937308;
extern T0* ge1522ov24936755;
extern T0* ge1522ov24937304;
extern T0* ge1522ov24936956;
extern T0* ge1522ov24936751;
extern T0* ge1522ov24937303;
extern T0* ge1522ov24936750;
extern T0* ge1522ov24937302;
extern T0* ge1522ov24936749;
extern T0* ge1522ov24937301;
extern T0* ge1522ov24936748;
extern T0* ge1522ov24937300;
extern T0* ge1522ov24936747;
extern T0* ge1522ov24937299;
extern T0* ge1522ov24936746;
extern T0* ge1522ov24937305;
extern T0* ge1522ov24936752;
extern T0* ge1522ov24937013;
extern T0* ge1522ov24936831;
extern T0* ge1522ov24936465;
extern T0* ge1522ov24937323;
extern T0* ge1522ov24936966;
extern T0* ge1522ov24936770;
extern T0* ge1523ov24953442;
extern T0* ge1523ov24953443;
extern T0* ge1523ov24953114;
extern T0* ge1522ov24937322;
extern T0* ge1522ov24936769;
extern T0* ge1523ov24953435;
extern T0* ge1522ov24936526;
extern T0* ge1522ov24937289;
extern T0* ge1522ov24936736;
extern T0* ge1522ov24937082;
extern T0* ge1522ov24936867;
extern T0* ge1522ov24936534;
extern T0* ge1522ov24937287;
extern T0* ge1522ov24936734;
extern T0* ge1522ov24937032;
extern T0* ge1522ov24936484;
extern T0* ge1522ov24937377;
extern T0* ge1522ov24936998;
extern T0* ge1522ov24936824;
extern T0* ge1522ov24937328;
extern T0* ge1522ov24936969;
extern T0* ge1522ov24936775;
extern T0* ge1522ov24937327;
extern T0* ge1522ov24936774;
extern T0* ge1522ov24937376;
extern T0* ge1522ov24936823;
extern T0* ge1522ov24937326;
extern T0* ge1522ov24936773;
extern T0* ge1522ov24937378;
extern T0* ge1522ov24936825;
extern T0* ge1522ov24937329;
extern T0* ge1522ov24936776;
extern T0* ge1523ov24953233;
extern T0* ge1523ov24953185;
extern T0* ge1523ov24953184;
extern T0* ge1522ov24937332;
extern T0* ge1522ov24936971;
extern T0* ge1522ov24936779;
extern T0* ge1522ov24937330;
extern T0* ge1522ov24936970;
extern T0* ge1522ov24936777;
extern T0* ge1523ov24953234;
extern T0* ge1522ov24937325;
extern T0* ge1522ov24936968;
extern T0* ge1522ov24936772;
extern T0* ge1522ov24937324;
extern T0* ge1522ov24936967;
extern T0* ge1522ov24936771;
extern T0* ge1523ov24953223;
extern T0* ge1523ov24953428;
extern T0* ge1523ov24953129;
extern T0* ge1522ov24937320;
extern T0* ge1522ov24936964;
extern T0* ge1522ov24936767;
extern T0* ge1522ov24937339;
extern T0* ge1522ov24936979;
extern T0* ge1522ov24936786;
extern T0* ge1522ov24937338;
extern T0* ge1522ov24936978;
extern T0* ge1522ov24936785;
extern T0* ge1522ov24937306;
extern T0* ge1522ov24936753;
extern T0* ge1523ov24953153;
extern T0* ge1523ov24953134;
extern T0* ge1523ov24953465;
extern T0* ge1523ov24953445;
extern T0* ge1523ov24953064;
extern T0* ge1523ov24953483;
extern T0* ge1523ov24953092;
extern T0* ge1523ov24953423;
extern T0* ge1523ov24953226;
extern T0* ge1523ov24953227;
extern T0* ge1523ov24953440;
extern T0* ge1523ov24953451;
extern T0* ge1523ov24953471;
extern T0* ge1523ov24953124;
extern T0* ge1523ov24953424;
extern T0* ge1523ov24953116;
extern T0* ge1522ov24937284;
extern T0* ge1522ov24936731;
extern T0* ge1522ov24937256;
extern T0* ge1522ov24936937;
extern T0* ge1522ov24936705;
extern T0* ge1522ov24937257;
extern T0* ge1522ov24936938;
extern T0* ge1522ov24936706;
extern T0* ge1522ov24937253;
extern T0* ge1522ov24936935;
extern T0* ge1522ov24936702;
extern T0* ge1523ov24953257;
extern T0* ge1523ov24953237;
extern T0* ge1523ov24953238;
extern T0* ge1523ov24953282;
extern T0* ge1523ov24953273;
extern T0* ge1522ov24937141;
extern T0* ge1522ov24936880;
extern T0* ge1522ov24936591;
extern T0* ge1522ov24937085;
extern T0* ge1522ov24936537;
extern T0* ge1522ov24937247;
extern T0* ge1522ov24936933;
extern T0* ge1522ov24936696;
extern T0* ge1522ov24937245;
extern T0* ge1522ov24936931;
extern T0* ge1522ov24936694;
extern T0* ge1522ov24937246;
extern T0* ge1522ov24936695;
extern T0* ge1522ov24937244;
extern T0* ge1522ov24936930;
extern T0* ge1522ov24936693;
extern T0* ge1522ov24937242;
extern T0* ge1522ov24936929;
extern T0* ge1522ov24936691;
extern T0* ge1522ov24937243;
extern T0* ge1522ov24936692;
extern T0* ge1522ov24937240;
extern T0* ge1522ov24936928;
extern T0* ge1522ov24936689;
extern T0* ge1522ov24937241;
extern T0* ge1522ov24936690;
extern T0* ge1522ov24937239;
extern T0* ge1522ov24936927;
extern T0* ge1522ov24936688;
extern T0* ge1522ov24937004;
extern T0* ge1522ov24936827;
extern T0* ge1522ov24936456;
extern T0* ge1522ov24937002;
extern T0* ge1522ov24936454;
extern T0* ge1522ov24937003;
extern T0* ge1522ov24936455;
extern T0* ge1522ov24937001;
extern T0* ge1522ov24936453;
extern T0* ge1522ov24937283;
extern T0* ge1522ov24936730;
extern T0* ge1522ov24937319;
extern T0* ge1522ov24936963;
extern T0* ge1522ov24936766;
extern T0* ge1522ov24937087;
extern T0* ge1522ov24936539;
extern T0* ge1522ov24937043;
extern T0* ge1522ov24936848;
extern T0* ge1522ov24936495;
extern T0* ge1522ov24937044;
extern T0* ge1522ov24936496;
extern T0* ge1522ov24937027;
extern T0* ge1522ov24936841;
extern T0* ge1522ov24936479;
extern T0* ge1522ov24937026;
extern T0* ge1522ov24936478;
extern T0* ge1522ov24937028;
extern T0* ge1522ov24936480;
extern T0* ge1522ov24937052;
extern T0* ge1522ov24936852;
extern T0* ge1522ov24936504;
extern T0* ge1522ov24937041;
extern T0* ge1522ov24936493;
extern T0* ge1522ov24937042;
extern T0* ge1522ov24936494;
extern T0* ge1522ov24937204;
extern T0* ge1522ov24936911;
extern T0* ge1522ov24936653;
extern T0* ge1522ov24937203;
extern T0* ge1522ov24936652;
extern T0* ge1522ov24937205;
extern T0* ge1522ov24936912;
extern T0* ge1522ov24936654;
extern T0* ge1522ov24937056;
extern T0* ge1522ov24936854;
extern T0* ge1522ov24936508;
extern T0* ge1522ov24937062;
extern T0* ge1522ov24936858;
extern T0* ge1522ov24936514;
extern T0* ge1522ov24937196;
extern T0* ge1522ov24936907;
extern T0* ge1522ov24936645;
extern T0* ge1522ov24937180;
extern T0* ge1522ov24936897;
extern T0* ge1522ov24936629;
extern T0* ge1522ov24937206;
extern T0* ge1522ov24936913;
extern T0* ge1522ov24936655;
extern T0* ge1522ov24937059;
extern T0* ge1522ov24936856;
extern T0* ge1522ov24936511;
extern T0* ge1522ov24937066;
extern T0* ge1522ov24936861;
extern T0* ge1522ov24936518;
extern T0* ge1522ov24937197;
extern T0* ge1522ov24936908;
extern T0* ge1522ov24936646;
extern T0* ge1522ov24937195;
extern T0* ge1522ov24936906;
extern T0* ge1522ov24936644;
extern T0* ge1522ov24937181;
extern T0* ge1522ov24936898;
extern T0* ge1522ov24936630;
extern T0* ge1522ov24937198;
extern T0* ge1522ov24936909;
extern T0* ge1522ov24936647;
extern T0* ge1522ov24937344;
extern T0* ge1522ov24936984;
extern T0* ge1522ov24936791;
extern T0* ge1522ov24937340;
extern T0* ge1522ov24936980;
extern T0* ge1522ov24936787;
extern T0* ge1522ov24937343;
extern T0* ge1522ov24936983;
extern T0* ge1522ov24936790;
extern T0* ge1522ov24937151;
extern T0* ge1522ov24936889;
extern T0* ge1522ov24936601;
extern T0* ge1522ov24937152;
extern T0* ge1522ov24936602;
extern T0* ge1522ov24937145;
extern T0* ge1522ov24936595;
extern T0* ge1522ov24937154;
extern T0* ge1522ov24936890;
extern T0* ge1522ov24936604;
extern T0* ge1522ov24937153;
extern T0* ge1522ov24936603;
extern T0* ge1522ov24937150;
extern T0* ge1522ov24936888;
extern T0* ge1522ov24936600;
extern T0* ge1522ov24937092;
extern T0* ge1522ov24936872;
extern T0* ge1522ov24936544;
extern T0* ge1522ov24937091;
extern T0* ge1522ov24936871;
extern T0* ge1522ov24936543;
extern T0* ge1522ov24937090;
extern T0* ge1522ov24936870;
extern T0* ge1522ov24936542;
extern T0* ge1522ov24937089;
extern T0* ge1522ov24936869;
extern T0* ge1522ov24936541;
extern T0* ge1522ov24937088;
extern T0* ge1522ov24936540;
extern T0* ge1522ov24937023;
extern T0* ge1522ov24936838;
extern T0* ge1522ov24936475;
extern T0* ge1522ov24937021;
extern T0* ge1522ov24936837;
extern T0* ge1522ov24936473;
extern T0* ge1522ov24937098;
extern T0* ge1522ov24936873;
extern T0* ge1522ov24936550;
extern T0* ge1296ov21233675;
extern T0* ge1522ov24937095;
extern T0* ge1522ov24936547;
extern T0* ge1522ov24937117;
extern T0* ge1522ov24936875;
extern T0* ge1522ov24936569;
extern T0* ge1522ov24937110;
extern T0* ge1522ov24936874;
extern T0* ge1522ov24936562;
extern T0* ge1522ov24937099;
extern T0* ge1522ov24936551;
extern T0* ge1522ov24937096;
extern T0* ge1522ov24936548;
extern T0* ge1522ov24937118;
extern T0* ge1522ov24936570;
extern T0* ge1522ov24937111;
extern T0* ge1522ov24936563;
extern T0* ge1522ov24937100;
extern T0* ge1522ov24936552;
extern T0* ge1522ov24937097;
extern T0* ge1522ov24936549;
extern T0* ge1522ov24937119;
extern T0* ge1522ov24936571;
extern T0* ge1522ov24937112;
extern T0* ge1522ov24936564;
extern T0* ge1522ov24937265;
extern T0* ge1522ov24936714;
extern T0* ge1522ov24937140;
extern T0* ge1522ov24936879;
extern T0* ge1522ov24936590;
extern T0* ge1522ov24937139;
extern T0* ge1522ov24936589;
extern T0* ge1522ov24937135;
extern T0* ge1522ov24936877;
extern T0* ge1522ov24936587;
extern T0* ge1522ov24937101;
extern T0* ge1522ov24936553;
extern T0* ge1522ov24937094;
extern T0* ge1522ov24936546;
extern T0* ge1522ov24937126;
extern T0* ge1522ov24936876;
extern T0* ge1522ov24936578;
extern T0* ge1522ov24937093;
extern T0* ge1522ov24936545;
extern T0* ge1522ov24937125;
extern T0* ge1522ov24936577;
extern T0* ge1522ov24937116;
extern T0* ge1522ov24936568;
extern T0* ge1522ov24937124;
extern T0* ge1522ov24936576;
extern T0* ge1522ov24937109;
extern T0* ge1522ov24936561;
extern T0* ge1522ov24937123;
extern T0* ge1522ov24936575;
extern T0* ge1522ov24937136;
extern T0* ge1522ov24936878;
extern T0* ge1522ov24936588;
extern T0* ge1522ov24937254;
extern T0* ge1522ov24936703;
extern T0* ge1522ov24937252;
extern T0* ge1522ov24936701;
extern T0* ge1522ov24937030;
extern T0* ge1522ov24936842;
extern T0* ge1522ov24936482;
extern T0* ge1522ov24937202;
extern T0* ge1522ov24936910;
extern T0* ge1522ov24936651;
extern T0* ge1522ov24937029;
extern T0* ge1522ov24936481;
extern T0* ge1522ov24937201;
extern T0* ge1522ov24936650;
extern T0* ge1522ov24937200;
extern T0* ge1522ov24936649;
extern T0* ge1522ov24937060;
extern T0* ge1522ov24936857;
extern T0* ge1522ov24936512;
extern T0* ge1522ov24937058;
extern T0* ge1522ov24936855;
extern T0* ge1522ov24936510;
extern T0* ge1522ov24937057;
extern T0* ge1522ov24936509;
extern T0* ge1522ov24937064;
extern T0* ge1522ov24936859;
extern T0* ge1522ov24936516;
extern T0* ge1522ov24937063;
extern T0* ge1522ov24936515;
extern T0* ge1522ov24937065;
extern T0* ge1522ov24936860;
extern T0* ge1522ov24936517;
extern T0* ge1522ov24937104;
extern T0* ge1522ov24936556;
extern T0* ge1522ov24937103;
extern T0* ge1522ov24936555;
extern T0* ge1522ov24937130;
extern T0* ge1522ov24936582;
extern T0* ge1522ov24937102;
extern T0* ge1522ov24936554;
extern T0* ge1522ov24937129;
extern T0* ge1522ov24936581;
extern T0* ge1522ov24937120;
extern T0* ge1522ov24936572;
extern T0* ge1522ov24937128;
extern T0* ge1522ov24936580;
extern T0* ge1522ov24937113;
extern T0* ge1522ov24936565;
extern T0* ge1522ov24937127;
extern T0* ge1522ov24936579;
extern T0* ge1522ov24937046;
extern T0* ge1522ov24936849;
extern T0* ge1522ov24936498;
extern T0* ge1522ov24937045;
extern T0* ge1522ov24936497;
extern T0* ge1522ov24937051;
extern T0* ge1522ov24936503;
extern T0* ge1522ov24937048;
extern T0* ge1522ov24936850;
extern T0* ge1522ov24936500;
extern T0* ge1522ov24937049;
extern T0* ge1522ov24936501;
extern T0* ge1522ov24937199;
extern T0* ge1522ov24936648;
extern T0* ge1522ov24937047;
extern T0* ge1522ov24936499;
extern T0* ge1522ov24937061;
extern T0* ge1522ov24936513;
extern T0* ge1522ov24937050;
extern T0* ge1522ov24936851;
extern T0* ge1522ov24936502;
extern T0* ge1522ov24937055;
extern T0* ge1522ov24936853;
extern T0* ge1522ov24936507;
extern T0* ge1522ov24937053;
extern T0* ge1522ov24936505;
extern T0* ge1522ov24937054;
extern T0* ge1522ov24936506;
extern T0* ge1522ov24937207;
extern T0* ge1522ov24936914;
extern T0* ge1522ov24936656;
extern T0* ge1522ov24937176;
extern T0* ge1522ov24936881;
extern T0* ge1522ov24936625;
extern T0* ge1522ov24937025;
extern T0* ge1522ov24936840;
extern T0* ge1522ov24936477;
extern T0* ge1522ov24937024;
extern T0* ge1522ov24936839;
extern T0* ge1522ov24936476;
extern T0* ge1522ov24937334;
extern T0* ge1522ov24936973;
extern T0* ge1522ov24936781;
extern T0* ge1522ov24937178;
extern T0* ge1522ov24936882;
extern T0* ge1522ov24936627;
extern T0* ge1522ov24937337;
extern T0* ge1522ov24936977;
extern T0* ge1522ov24936784;
extern T0* ge1522ov24937336;
extern T0* ge1522ov24936976;
extern T0* ge1522ov24936783;
extern T0* ge1522ov24937175;
extern T0* ge1522ov24936895;
extern T0* ge1522ov24936624;
extern T0* ge1522ov24937177;
extern T0* ge1522ov24936626;
extern T0* ge1512ov24772622;
extern T0* ge1512ov24772617;
extern T0* ge1512ov24772612;
extern T0* ge1512ov24772623;
extern T0* ge1512ov24772618;
extern T0* ge1512ov24772613;
extern T0* ge864ov14155801;
extern T0* ge1522ov24937165;
extern T0* ge1522ov24936893;
extern T0* ge1522ov24936614;
extern T0* ge1522ov24937164;
extern T0* ge1522ov24936613;
extern T0* ge1522ov24937166;
extern T0* ge1522ov24936615;
extern T0* ge1522ov24937167;
extern T0* ge1522ov24936616;
extern T0* ge1522ov24937155;
extern T0* ge1522ov24936605;
extern T0* ge1522ov24937108;
extern T0* ge1522ov24936560;
extern T0* ge1522ov24937107;
extern T0* ge1522ov24936559;
extern T0* ge1522ov24937122;
extern T0* ge1522ov24936574;
extern T0* ge1522ov24937115;
extern T0* ge1522ov24936567;
extern T0* ge1522ov24937162;
extern T0* ge1522ov24936892;
extern T0* ge1522ov24936612;
extern T0* ge1522ov24937161;
extern T0* ge1522ov24936611;
extern T0* ge1522ov24937106;
extern T0* ge1522ov24936558;
extern T0* ge1522ov24937134;
extern T0* ge1522ov24936586;
extern T0* ge1522ov24937105;
extern T0* ge1522ov24936557;
extern T0* ge1522ov24937133;
extern T0* ge1522ov24936585;
extern T0* ge1522ov24937121;
extern T0* ge1522ov24936573;
extern T0* ge1522ov24937132;
extern T0* ge1522ov24936584;
extern T0* ge1522ov24937114;
extern T0* ge1522ov24936566;
extern T0* ge1522ov24937131;
extern T0* ge1522ov24936583;
extern T0* ge1522ov24937157;
extern T0* ge1522ov24936607;
extern T0* ge1522ov24937160;
extern T0* ge1522ov24936610;
extern T0* ge1522ov24937159;
extern T0* ge1522ov24936609;
extern T0* ge1522ov24937158;
extern T0* ge1522ov24936608;
extern T0* ge1523ov24953152;
extern T0* ge1523ov24953159;
extern T0* ge1523ov24953253;
extern T0* ge1523ov24953188;
extern T0* ge1523ov24953220;
extern T0* ge1523ov24953274;
extern T0* ge1523ov24953352;
extern T0* ge1523ov24953235;
extern T0* ge1523ov24953380;
extern T0* ge1523ov24953189;
extern T0* ge1523ov24953186;
extern T0* ge1523ov24953155;
extern T0* ge1523ov24953331;
extern T0* ge1523ov24953377;
extern T0* ge1523ov24953447;
extern T0* ge1523ov24953398;
extern T0* ge1523ov24953399;
extern T0* ge1523ov24953394;
extern T0* ge1523ov24953381;
extern T0* ge1523ov24953382;
extern T0* ge1523ov24953383;
extern T0* ge1523ov24953386;
extern T0* ge1523ov24953387;
extern T0* ge1523ov24953388;
extern T0* ge1523ov24953389;
extern T0* ge1523ov24953390;
extern T0* ge1523ov24953391;
extern T0* ge1523ov24953392;
extern T0* ge1523ov24953393;
extern T0* ge1523ov24953395;
extern T0* ge1523ov24953396;
extern T0* ge1523ov24953397;
extern T0* ge1523ov24953384;
extern T0* ge1523ov24953108;
extern T0* ge1523ov24953187;
extern T0* ge1523ov24953156;
extern T0* ge1523ov24953161;
extern T0* ge1523ov24953236;
extern T0* ge1523ov24953224;
extern T0* ge1523ov24953286;
extern T0* ge1523ov24953427;
extern T0* ge1523ov24953225;
extern T0* ge1523ov24953285;
extern T0* ge1523ov24953256;
extern T0* ge1523ov24953255;
extern T0* ge1523ov24953263;
extern T0* ge1523ov24953262;
extern T0* ge414ov6307841;
extern T0* ge1523ov24953481;
extern T0* ge1523ov24953073;
extern T0* ge1523ov24953474;
extern T0* ge1523ov24953103;
extern T0* ge1523ov24953097;
extern T0* ge1523ov24953096;
extern T0* ge1523ov24953095;
extern T0* ge1523ov24953094;
extern T0* ge1523ov24953085;
extern T0* ge1523ov24953083;
extern T0* ge1523ov24953082;
extern T0* ge1523ov24953078;
extern T0* ge1523ov24953100;
extern T0* ge1523ov24953093;
extern T0* ge1523ov24953081;
extern T0* ge1523ov24953110;
extern T0* ge1523ov24953473;
extern T0* ge1523ov24953111;
extern T0* ge1523ov24953482;
extern T0* ge411ov6193159;
extern T0* ge1866ov30572597;
extern T0* ge1866ov30572598;
extern T0* ge1520ov24903697;
extern T0* ge1520ov24903691;
extern T0* ge1520ov24903685;
extern T0* ge1520ov24903693;
extern T0* ge1520ov24903687;
extern T0* ge1520ov24903681;
extern T0* ge1520ov24903696;
extern T0* ge1520ov24903690;
extern T0* ge1520ov24903684;
extern T0* ge1520ov24903698;
extern T0* ge1520ov24903692;
extern T0* ge1520ov24903686;
extern T0* ge1520ov24903695;
extern T0* ge1520ov24903689;
extern T0* ge1520ov24903683;
extern T0* ge1522ov24937345;
extern T0* ge1522ov24936985;
extern T0* ge1522ov24936792;
extern T0* ge1522ov24937342;
extern T0* ge1522ov24936982;
extern T0* ge1522ov24936789;
extern T0* ge1522ov24937341;
extern T0* ge1522ov24936981;
extern T0* ge1522ov24936788;
extern T0* ge1520ov24903694;
extern T0* ge1520ov24903688;
extern T0* ge1520ov24903682;
extern T0* ge1521ov24920074;
extern T0* ge1521ov24920070;
extern T0* ge1521ov24920069;
extern T0* ge1521ov24920073;
extern T0* ge1521ov24920068;
extern T0* ge1521ov24920072;
extern T0* ge1521ov24920067;
extern T0* ge1521ov24920071;
extern T0* ge1521ov24920066;
extern T0* ge1685ov27607057;
extern T0* ge1693ov27738135;
extern T0* ge542ov8880132;
extern T0* ge1512ov24772620;
extern T0* ge1512ov24772615;
extern T0* ge1512ov24772610;
extern T0* ge1180ov19333171;
extern T0* ge1180ov19333172;
extern T0* ge855ov14008330;
extern T0* ge855ov14008331;
extern T0* ge855ov14008332;
extern T0* ge855ov14008341;
extern T0* ge809ov13254658;
extern T0* ge809ov13254665;
extern T0* ge809ov13254664;
extern T0* ge809ov13254659;
extern T0* ge809ov13254663;
extern T0* ge809ov13254660;
extern T0* ge809ov13254666;
extern T0* ge864ov14155786;
extern T0* ge864ov14155781;
extern T0* ge864ov14155791;
extern T0* ge864ov14155792;
extern T0* ge864ov14155818;
extern T0* ge864ov14155802;
extern T0* ge864ov14155798;
extern T0* ge864ov14155799;
extern T0* ge883ov14467159;
extern T0* ge883ov14467129;
extern T0* ge883ov14467095;
extern T0* ge883ov14467132;
extern T0* ge883ov14467153;
extern T0* ge883ov14467118;
extern T0* ge883ov14467143;
extern T0* ge877ov14368834;
extern T0* ge877ov14368799;
extern T0* ge877ov14368843;
extern T0* ge877ov14368808;
extern T0* ge877ov14368826;
extern T0* ge877ov14368791;
extern T0* ge886ov14516296;
extern T0* ge886ov14516295;
extern T0* ge883ov14467102;
extern T0* ge883ov14467103;
extern T0* ge883ov14467075;
extern T0* ge883ov14467082;
extern T0* ge883ov14467086;
extern T0* ge883ov14467130;
extern T0* ge883ov14467104;
extern T0* ge883ov14467105;
extern T0* ge883ov14467106;
extern T0* ge883ov14467107;
extern T0* ge883ov14467108;
extern T0* ge883ov14467109;
extern T0* ge883ov14467110;
extern T0* ge883ov14467113;
extern T0* ge883ov14467135;
extern T0* ge883ov14467117;
extern T0* ge883ov14467121;
extern T0* ge883ov14467134;
extern T0* ge883ov14467138;
extern T0* ge883ov14467139;
extern T0* ge883ov14467140;
extern T0* ge883ov14467148;
extern T0* ge883ov14467149;
extern T0* ge883ov14467161;
extern T0* ge883ov14467162;
extern T0* ge883ov14467073;
extern T0* ge864ov14155796;
extern T0* ge855ov14008329;
extern T0* ge855ov14008340;
extern T0* ge855ov14008339;
extern T0* ge855ov14008367;
extern T0* ge855ov14008370;
extern T0* ge855ov14008369;
extern T0* ge855ov14008342;
extern T0* ge855ov14008358;
extern T0* ge855ov14008333;
extern T0* ge855ov14008327;
extern T0* ge809ov13254657;
extern T0* ge864ov14155785;
extern T0* ge864ov14155813;
extern T0* ge883ov14467120;
extern T0* ge883ov14467126;
extern T0* ge883ov14467146;
extern T0* ge883ov14467081;
extern T0* ge883ov14467142;
extern T0* ge883ov14467088;
extern T0* ge883ov14467092;
extern T0* ge883ov14467154;
extern T0* ge877ov14368832;
extern T0* ge877ov14368797;
extern T0* ge877ov14368829;
extern T0* ge877ov14368794;
extern T0* ge883ov14467160;
extern T0* ge864ov14155787;
extern T0* ge864ov14155825;
extern T0* ge864ov14155831;
extern T0* ge864ov14155835;
extern T0* ge864ov14155826;
extern T0* ge883ov14467074;
extern T0* ge883ov14467083;
extern T0* ge883ov14467111;
extern T0* ge883ov14467119;
extern T0* ge883ov14467091;
extern T0* ge883ov14467084;
extern T0* ge883ov14467147;
extern T0* ge883ov14467163;
extern T0* ge883ov14467098;
extern T0* ge883ov14467141;
extern T0* ge883ov14467157;
extern T0* ge883ov14467085;
extern T0* ge883ov14467112;
extern T0* ge883ov14467133;
extern T0* ge883ov14467131;
extern T0* ge877ov14368827;
extern T0* ge877ov14368792;
extern T0* ge883ov14467090;
extern T0* ge883ov14467164;
extern T0* ge883ov14467093;
extern T0* ge883ov14467096;
extern T0* ge883ov14467097;
extern T0* ge883ov14467128;
extern T0* ge883ov14467137;
extern T0* ge883ov14467125;
extern T0* ge883ov14467123;
extern T0* ge883ov14467155;
extern T0* ge883ov14467089;
extern T0* ge883ov14467127;
extern T0* ge877ov14368816;
extern T0* ge877ov14368781;
extern T0* ge877ov14368815;
extern T0* ge877ov14368780;
extern T0* ge877ov14368814;
extern T0* ge877ov14368779;
extern T0* ge877ov14368813;
extern T0* ge877ov14368778;
extern T0* ge877ov14368812;
extern T0* ge877ov14368777;
extern T0* ge883ov14467101;
extern T0* ge877ov14368831;
extern T0* ge877ov14368796;
extern T0* ge877ov14368833;
extern T0* ge877ov14368798;
extern T0* ge883ov14467122;
extern T0* ge883ov14467087;
extern T0* ge883ov14467150;
extern T0* ge883ov14467166;
extern T0* ge883ov14467080;
extern T0* ge883ov14467094;
extern T0* ge883ov14467165;
extern T0* ge855ov14008343;
extern T0* ge855ov14008362;
extern T0* ge855ov14008366;
extern T0* ge855ov14008371;
extern T0* ge855ov14008372;
extern T0* ge855ov14008347;
extern T0* ge883ov14467099;
extern T0* ge855ov14008360;
extern T0* ge883ov14467136;
extern T0* ge883ov14467158;
extern T0* ge883ov14467115;
extern T0* ge883ov14467144;
extern T0* ge883ov14467114;
extern T0* ge883ov14467100;
extern T0* ge883ov14467116;
extern T0* ge883ov14467151;
extern T0* ge883ov14467156;
extern T0* ge883ov14467076;
extern T0* ge883ov14467077;
extern T0* ge883ov14467078;
extern T0* ge883ov14467079;
extern T0* ge855ov14008334;
extern T0* ge855ov14008365;
extern T0* ge855ov14008345;
extern T0* ge855ov14008328;
extern T0* ge855ov14008335;
extern T0* ge855ov14008337;
extern T0* ge855ov14008338;
extern T0* ge855ov14008321;
extern T0* ge855ov14008322;
extern T0* ge855ov14008323;
extern T0* ge855ov14008324;
extern T0* ge855ov14008325;
extern T0* ge855ov14008326;
extern T0* ge855ov14008344;
extern T0* ge855ov14008346;
extern T0* ge855ov14008348;
extern T0* ge855ov14008349;
extern T0* ge855ov14008350;
extern T0* ge855ov14008351;
extern T0* ge855ov14008352;
extern T0* ge855ov14008353;
extern T0* ge855ov14008354;
extern T0* ge855ov14008355;
extern T0* ge855ov14008356;
extern T0* ge855ov14008357;
extern T0* ge864ov14155777;
extern T0* ge864ov14155778;
extern T0* ge864ov14155779;
extern T0* ge864ov14155780;
extern T0* ge864ov14155782;
extern T0* ge864ov14155783;
extern T0* ge864ov14155784;
extern T0* ge864ov14155821;
extern T0* ge864ov14155788;
extern T0* ge864ov14155789;
extern T0* ge864ov14155790;
extern T0* ge864ov14155795;
extern T0* ge864ov14155797;
extern T0* ge864ov14155800;
extern T0* ge864ov14155803;
extern T0* ge864ov14155822;
extern T0* ge864ov14155809;
extern T0* ge864ov14155810;
extern T0* ge864ov14155824;
extern T0* ge864ov14155812;
extern T0* ge864ov14155814;
extern T0* ge864ov14155815;
extern T0* ge864ov14155819;
extern T0* ge864ov14155820;
extern T0* ge877ov14368828;
extern T0* ge877ov14368793;
extern T0* ge877ov14368830;
extern T0* ge877ov14368795;
extern T0* ge877ov14368824;
extern T0* ge877ov14368789;
extern T0* ge809ov13254668;
extern T0* ge809ov13254661;
extern T0* ge809ov13254662;
extern T0* ge877ov14368818;
extern T0* ge877ov14368783;
extern T0* ge877ov14368817;
extern T0* ge877ov14368782;
extern T0* ge883ov14467152;
extern T0* ge883ov14467124;
extern T0* ge864ov14155838;
extern T0* ge864ov14155836;
extern T0* ge819ov13418501;
extern T0* ge819ov13418502;
extern T0* ge819ov13418503;
extern T0* ge864ov14155794;
extern T0* ge864ov14155827;
extern T0* ge864ov14155839;
extern T0* ge877ov14368835;
extern T0* ge877ov14368800;
extern T0* ge877ov14368836;
extern T0* ge877ov14368801;
extern T0* ge877ov14368837;
extern T0* ge877ov14368802;
extern T0* ge877ov14368825;
extern T0* ge877ov14368790;
extern T0* ge877ov14368838;
extern T0* ge877ov14368803;
extern T0* ge877ov14368811;
extern T0* ge877ov14368776;
extern T0* ge877ov14368840;
extern T0* ge877ov14368805;
extern T0* ge877ov14368841;
extern T0* ge877ov14368806;
extern T0* ge877ov14368842;
extern T0* ge877ov14368807;
extern T0* ge877ov14368839;
extern T0* ge877ov14368804;
extern T0* ge883ov14467145;
extern T0* ge877ov14368810;
extern T0* ge877ov14368775;
extern T0* ge877ov14368819;
extern T0* ge877ov14368784;
extern T0* ge877ov14368820;
extern T0* ge877ov14368785;
extern T0* ge877ov14368823;
extern T0* ge877ov14368788;
extern T0* ge877ov14368822;
extern T0* ge877ov14368787;
extern T0* ge877ov14368821;
extern T0* ge877ov14368786;
extern T0* ge1789ov29311018;
extern T0* ge1789ov29310980;
extern T0* ge1789ov29310978;
extern T0* ge1789ov29311019;
extern T0* ge1789ov29310991;
extern T0* ge1789ov29310990;
extern T0* ge1789ov29311001;
extern T0* ge1789ov29310995;
extern T0* ge1789ov29310994;
extern T0* ge1789ov29310993;
extern T0* ge1789ov29310999;
extern T0* ge1789ov29310998;
extern T0* ge1789ov29311000;
extern T0* ge1789ov29310977;
extern T0* ge1789ov29311003;
extern T0* ge1789ov29311012;
extern T0* ge1792ov29360155;
extern T0* ge1792ov29360153;
extern T0* ge1792ov29360154;
extern T0* ge1789ov29311013;
extern T0* ge1789ov29311014;
extern T0* ge1789ov29311017;
extern T0* ge1789ov29311015;
extern T0* ge1789ov29311016;
extern T0* ge1756ov28770317;
extern T0* ge1756ov28770316;
extern T0* ge1789ov29311010;
extern T0* ge1785ov29245441;
extern T0* ge1785ov29245442;
extern T0* ge1789ov29310983;
extern T0* ge1787ov29278212;
extern T0* ge1787ov29278214;
extern T0* ge1787ov29278211;
extern T0* ge1787ov29278213;
extern T0* ge1789ov29311006;
extern T0* ge1800ov29491217;
extern T0* ge1800ov29491216;
extern T0* ge1789ov29311026;
extern T0* ge1789ov29311027;
extern T0* ge1789ov29311028;
extern T0* ge1789ov29311021;
extern T0* ge1789ov29311004;
extern T0* ge1789ov29311005;
extern T0* ge1789ov29311007;
extern T0* ge1789ov29311011;
extern T0* ge1796ov29425684;
extern T0* ge1796ov29425683;
extern T0* ge1844ov30212097;
extern T0* ge1866ov30572596;
extern T0* ge1866ov30572595;
extern T0* ge748ov12255241;
extern T0* ge748ov12255237;
extern T0* ge748ov12255233;
extern T0* ge748ov12255235;
extern T0* ge746ov12222467;
extern T0* geic24952833;
extern T0* geic24952834;
extern T0* geic13271041;
extern void GE_init_const1(void);
extern void GE_init_const2(void);
extern void GE_init_const3(void);
extern void GE_init_const4(void);
extern void GE_init_const5(void);
extern void GE_init_const6(void);
extern void GE_init_const7(void);
extern void GE_init_const8(void);
extern void GE_init_const9(void);
extern void GE_init_const10(void);
extern void GE_init_const11(void);
extern void GE_init_const12(void);
extern void GE_init_const13(void);
extern void GE_init_const14(void);
extern void GE_init_const15(void);
extern void GE_init_const16(void);
extern void GE_init_const17(void);
extern void GE_init_const18(void);
extern void GE_init_const19(void);
extern void GE_init_const20(void);
extern void GE_init_const21(void);
extern void GE_init_const22(void);
extern void GE_init_const23(void);
extern void GE_init_const24(void);
extern void GE_init_const(void);

#ifdef __cplusplus
}
#endif


/*
	description:

		"C functions used to implement class C_DATE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_TIME_H
#define GE_TIME_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#if defined _XOPEN_UNIX || defined __USE_XOPEN || defined __USE_BSD
#define HAS_GETTIMEOFDAY
#else
#ifndef WIN32
#define HAS_GETTIMEOFDAY
#endif
#endif

#ifdef HAS_GETTIMEOFDAY
/*
	OpenBSD does not support 'ftime' unless -lcompat is specified.
	Use the recommended XSI (X/Open System Interface) extension instead.
*/
#include <sys/time.h>
#include <sys/types.h>
#define GE_ftime(p) gettimeofday((struct timeval*)(p),((void*)0))
#define GE_timebsz sizeof(struct timeval)
#define GE_timebmillitm(p) (((struct timeval*)(p))->tv_usec/1000)
#define GE_timebtime(p) ((struct timeval*)(p))->tv_sec
#else
#include <sys/timeb.h>
extern void ftime(struct timeb *); /* Needed for lcc-win32 */
#define GE_ftime(p) ftime((struct timeb*)(p))
#define GE_timebsz sizeof(struct timeb)
#define GE_timebmillitm(p) ((struct timeb*)(p))->millitm
#define GE_timebtime(p) ((struct timeb*)(p))->time
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2018, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_CECIL_H
#define EIF_CECIL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef void (*EIF_PROCEDURE)(EIF_REFERENCE, ...);
#define EIF_PROC EIF_PROCEDURE
typedef EIF_INTEGER_32 (*EIF_INTEGER_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Integer 32 bits */
#define EIF_INTEGER_FUNCTION EIF_INTEGER_32_FUNCTION
typedef EIF_REFERENCE (*EIF_REFERENCE_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Reference */
typedef EIF_POINTER (*EIF_POINTER_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Pointer */
typedef EIF_BOOLEAN (*EIF_BOOLEAN_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Boolean */
typedef EIF_CHARACTER_8 (*EIF_CHARACTER_8_FUNCTION)(EIF_REFERENCE, ...); /* Returns char */
#define EIF_CHARACTER_FUNCTION EIF_CHARACTER_8_FUNCTION
typedef EIF_REAL_64 (*EIF_REAL_64_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Double */
#define EIF_DOUBLE_FUNCTION EIF_REAL_64_FUNCTION
typedef EIF_REAL_32 (*EIF_REAL_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Real */
#define EIF_REAL_FUNCTION EIF_REAL_32_FUNCTION

extern EIF_PROCEDURE eif_procedure(char* rout, EIF_TYPE_ID cid);
#define eif_proc eif_procedure /* Use `eif_procedure' instead */
extern EIF_INTEGER_FUNCTION eif_integer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REFERENCE_FUNCTION eif_reference_function(char* rout, EIF_TYPE_ID cid);
extern EIF_POINTER_FUNCTION eif_pointer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_BOOLEAN_FUNCTION eif_boolean_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REAL_64_FUNCTION eif_real_64_function(char* rout, EIF_TYPE_ID cid);
#define eif_double_function(rout,cid) eif_real_64_function((rout),(cid))
extern EIF_REAL_32_FUNCTION eif_real_32_function(char* rout, EIF_TYPE_ID cid);
#define eif_real_function(rout,cid) eif_real_32_function((rout),(cid))
extern EIF_CHARACTER_8_FUNCTION eif_character_8_function(char* rout, EIF_TYPE_ID cid);
#define eif_character_function(rout,cid) eif_character_8_function((rout),(cid))
extern EIF_OBJECT eif_create(EIF_TYPE_ID cid);
extern EIF_TYPE_ID eif_type_id(char* type_string);
extern EIF_INTEGER eifaddr_offset(EIF_REFERENCE object, char *name, int * const ret);
#define eif_string(s) RTMS(s)
#define makestr(s,c) RTMS_EX((s),(c))
#define eifaddr(object,name,ret) ((void *) ((char *) object + eifaddr_offset (object, name, ret)))
#define eif_field(object,name,type) *(type *)(eifaddr(object,name, NULL)) /* Obsolete. Use "eif_attribute" instead. */
#define eif_attribute(object,name,type,ret) *(type *)(eifaddr(object,name,ret)) /* Returns the attribute of an object. Return status in "ret".*/

/* Miscellaneous useful functions. */

/* Make an Eiffel array from a C array:
 * `eif_array' is the direct reference to the Eiffel array.
 * `c_array' is the C array.
 * `nelts' the number of elements to copy in the eiffel array, it has to
 * be equal to `eif_array.count'.
 * type is an Eiffel type.
 */
#define eif_make_from_c(eif_array, c_array, nelts, type) \
	{ \
		EIF_REFERENCE area = eif_field(eif_array, "area", EIF_REFERENCE); \
		memcpy((type *)area, c_array, nelts * sizeof(type));\
	}

#define eif_type eiftype /* Dynamic type ID */
extern EIF_TYPE_ID eiftype(EIF_OBJECT object); /* Give dynamic type of EIF_OBJECT. Obsolete, use "eif_type_by_object". */
extern EIF_TYPE_ID eif_type_by_reference(EIF_REFERENCE object);
extern EIF_TYPE_INDEX eif_gen_param_id(EIF_TYPE_INDEX dftype, uint32_t pos);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_PLUG_H
#define EIF_PLUG_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int nstcall;	/* Nested call global variable: signals a nested call and
					 * trigger an invariant check in generated C routines  */

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_CONSOLE_H
#define EIF_CONSOLE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER console_def(EIF_INTEGER file);
extern EIF_BOOLEAN console_eof(FILE* fp);
extern EIF_CHARACTER_8 console_separator(FILE* f);
extern void console_ps(FILE* f, char* str, EIF_INTEGER len);
extern void console_pr(FILE* f, EIF_REAL_32 number);
extern void console_pc(FILE* f, EIF_CHARACTER_8 c);
extern void console_pd(FILE* f, EIF_REAL_64 val);
extern void console_pi(FILE* f, EIF_INTEGER number);
extern void console_tnwl(FILE* f);
extern EIF_CHARACTER_8 console_readchar(FILE* f);
extern EIF_REAL_32 console_readreal(FILE* f);
extern EIF_INTEGER console_readint(FILE* f);
extern EIF_REAL_64 console_readdouble(FILE* f);
extern EIF_INTEGER console_readword(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER console_readline(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern void console_next_line(FILE* f);
extern EIF_INTEGER console_readstream(FILE* f, char* s, EIF_INTEGER bound);
extern void console_file_close (FILE* f);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class FILE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2019, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_FILE_H
#define EIF_FILE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <time.h>
#include <sys/stat.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Let's define the stat structure for our platforms. */
/* The definition is the same for both ANSI and Unicode versions on Windows. */
#ifdef EIF_WINDOWS
#	ifdef __LCC__
#		define rt_stat_buf	struct stat
#	elif defined EIF_64_BITS
#		define rt_stat_buf	struct _stat64
#	else
#		define rt_stat_buf	struct _stat64i32
#	endif
#else
#	define rt_stat_buf		struct stat
#endif

/*
 * Create directory `dirname'.
 */
extern void eif_file_mkdir(EIF_FILENAME dirname);

/*
 * Rename file `from' into `to'.
 */
extern void eif_file_rename(EIF_FILENAME from, EIF_FILENAME  to);

/*
 * Link file `from' into `to'.
 */
extern void eif_file_link(EIF_FILENAME from, EIF_FILENAME to);

/*
 * Delete file or directory `name'.
 */
extern void eif_file_unlink(EIF_FILENAME name);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_reopen(EIF_FILENAME name, int how, FILE *old);

/*
 * Close the file.
 */
extern void eif_file_close(FILE *fp);

/*
 * Flush data held in stdio buffer.
 */
extern void eif_file_flush(FILE *fp);

/*
 * Return the associated file descriptor.
 */
extern EIF_INTEGER eif_file_fd(FILE *f);

/*
 * Get a character from `f'.
 */
extern EIF_CHARACTER_8 eif_file_gc(FILE *f);

/*
 * Get a string from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters.
 */
extern EIF_INTEGER eif_file_gs(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Read min (bound, remaining bytes in file) characters into `s' and
 * return the number of characters read.
 */
extern EIF_INTEGER eif_file_gss(FILE *f, char *s, EIF_INTEGER bound);

/*
 * Get a word from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters. Any leading
 * spaces are skipped.
 */
extern EIF_INTEGER eif_file_gw(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Look ahead one character. If EOF, return 0.
 */
extern EIF_CHARACTER_8 eif_file_lh(FILE *f);

/*
 * Size of file `fp'.
 */
extern EIF_INTEGER eif_file_size(FILE *fp);

/*
 * Read upto next input line.
 */
extern void eif_file_tnil(FILE *f);

/*
 * Current position within file.
 */
extern EIF_INTEGER eif_file_tell(FILE *f);

/*
 * Touch file `name' by setting both access and modification time to the
 * current time stamp. This external function exists only because there
 * is no way within UNIX_FILE to get the current time stamp. Otherwise,
 * we could simply call file_utime.
 */
extern void eif_file_touch(EIF_FILENAME name);

/*
 * Modify the modification and/or the access time stored in the file's
 * inode. The 'how' parameter tells which attributes should be set.
 */
extern void eif_file_utime(EIF_FILENAME name, time_t stamp, int how);

/*
 * This is an encapsulation of the stat() system call. The routine either
 * succeeds and returns or fails and raises the appropriate exception.
 */
extern int eif_file_stat(EIF_FILENAME path, rt_stat_buf *buf, int follow);

/*
 * Change permissions of file `name', using an interface like chmod(1).
 * The flag is true if permissions are to be added, 0 to remove them.
 */
extern void eif_file_perm(EIF_FILENAME name, char *who, char *what, int flag);

/*
 * Change permission mode on file `path'.
 */
extern void eif_file_chmod(EIF_FILENAME path, int mode);

/*
 * Change the owner of the file to `uid'.
 */
extern void eif_file_chown(EIF_FILENAME name, int uid);

/*
 * Change the group of the file to `gid'.
 */
extern void eif_file_chgrp(EIF_FILENAME name, int gid);

/*
 * Put new_line onto `f'.
 */
extern void eif_file_tnwl(FILE *f);

/*
 * Append a copy of `other' to `f'.
 */
extern void eif_file_append(FILE *f, FILE *other, EIF_INTEGER l);

/*
 * Write string `str' on `f'.
 */
extern void eif_file_ps(FILE *f, char *str, EIF_INTEGER len);

/*
 * Write character `c' on `f'.
 */
extern void eif_file_pc(FILE *f, char c);

/*
 * Go to absolute position `pos' counted from start.
 */
extern void eif_file_go(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from end.
 */
extern void eif_file_recede(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from current position.
 */
extern void eif_file_move(FILE *f, EIF_INTEGER pos);

/*
 * End of file.
 */
extern EIF_BOOLEAN eif_file_feof(FILE *fp);

/*
 * Test whether file exists or not. If `name' represents a symbolic link,
 * it will check that pointed file does exist.
 */
extern EIF_BOOLEAN eif_file_exists(EIF_FILENAME name);

/*
 * Test whether file exists or not without following the symbolic link
 * if `name' represents one.
 */
extern EIF_BOOLEAN eif_file_path_exists(EIF_FILENAME name);

/*
 * Check whether access permission `op' are possible on file `name' using
 * real UID and real GID. This is probably only useful to setuid or setgid
 * programs.
 */
extern EIF_BOOLEAN eif_file_access(EIF_FILENAME name, EIF_INTEGER op);

/*
 * Check whether the file `path' may be created: we need write permissions
 * in the parent directory and there must not be any file bearing that name
 * with no write permissions...
 */
extern EIF_BOOLEAN eif_file_creatable(EIF_FILENAME path, EIF_INTEGER nbytes);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gi(FILE *f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_gr(FILE *f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gd(FILE *f);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pi(FILE *f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pr(FILE *f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pd(FILE *f, EIF_REAL_64 val);

/*
 * Size of the stat structure. This is used by the Eiffel side to create
 * the area (special object) which will play the role of a stat buffer
 * structure.
 */
extern EIF_INTEGER stat_size(void);

/*
 * Check file permissions using effective UID and effective GID. The
 * current permission mode is held in the st_mode field of the stat()
 * buffer structure `buf'.
 */
extern EIF_BOOLEAN eif_file_eaccess(rt_stat_buf *buf, int op);

/*
 * Perform the field dereferencing from the appropriate stat structure,
 * which Eiffel cannot do directly.
 */
extern EIF_INTEGER eif_file_info(rt_stat_buf *buf, int op);

/*
 * Return the Eiffel string filled in with the name associated with `uid'
 * if found in /etc/passwd. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_owner(int uid);

/*
 * Return the Eiffel string filled in with the name associated with `gid'
 * if found in /etc/group. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_group(int gid);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gib(FILE* f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_grb(FILE* f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gdb(FILE* f);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_binary_reopen(EIF_FILENAME name, int how, FILE* old);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pib(FILE* f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_prb(FILE* f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pdb(FILE* f, EIF_REAL_64 val);

/*
 * Modification time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_date(EIF_FILENAME  name);

/*
 * Access time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_access_date(EIF_FILENAME name);

/*
 * Generate a temporary file with a name based on a template and
 * return a file descriptor to the file.
 * The template is overwritten with the name of the new file.
 * Return a non-zero file descriptor for the temporary file upon success, -1 otherwise.
 * `template'is the template to use for creating the temporary file.
 * It must match the rules for mk[s]temp (i.e. end in "XXXXXX").
 * On exit, it is updated with the new name.
 * `is_text_mode', if non-zero, then the temporary file is created
 * in text mode, otherwise in binary mode.<param>
 * Note: Code was inspired from https://github.com/mirror/mingw-w64/blob/master/mingw-w64-crt/misc/mkstemp.c
 */
extern EIF_INTEGER eif_file_mkstemp(EIF_FILENAME a_template, EIF_BOOLEAN is_text_mode);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXCEPTIONS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2018, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_EXCEPT_H
#define EIF_EXCEPT_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#include <errno.h>

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Predefined exception codes.
 */
#define EN_VOID		GE_EX_VOID			/* Feature applied to void reference */
#define EN_MEM		GE_EX_MEM			/* No more memory */
#define EN_PRE		GE_EX_PRE			/* Pre-condition violated */
#define EN_POST		GE_EX_POST			/* Post-condition violated */
#define EN_FLOAT	GE_EX_FLOAT			/* Floating point exception (signal SIGFPE) */
#define EN_CINV		GE_EX_CINV			/* Class invariant violated */
#define EN_CHECK	GE_EX_CHECK			/* Assertion violated */
#define EN_FAIL		GE_EX_FAIL			/* Routine failure */
#define EN_WHEN		GE_EX_WHEN			/* Unmatched inspect value */
#define EN_VAR		GE_EX_VAR			/* Non-decreasing loop variant */
#define EN_LINV		GE_EX_LINV			/* Loop invariant violated */
#define EN_SIG		GE_EX_SIG			/* Operating system signal */
#define EN_BYE		GE_EX_BYE			/* Eiffel run-time panic */
#define EN_RESC		GE_EX_RESC			/* Exception in rescue clause */
#define EN_OMEM		GE_EX_OMEM			/* Out of memory (cannot be ignored) */
#define EN_RES		GE_EX_RES			/* Resumption failed (retry did not succeed) */
#define EN_CDEF		GE_EX_CDEF			/* Create on deferred */
#define EN_EXT		GE_EX_EXT			/* External event */
#define EN_VEXP		GE_EX_VEXP			/* Void assigned to expanded */
#define EN_HDLR		GE_EX_HDLR			/* Exception in signal handler */
#define EN_IO		GE_EX_IO			/* I/O error */
#define EN_SYS		GE_EX_SYS			/* Operating system error */
#define EN_RETR		GE_EX_RETR			/* Retrieval error */
#define EN_PROG		GE_EX_PROG			/* Developer exception */
#define EN_FATAL	GE_EX_FATAL			/* Eiffel run-time fatal error */
#define EN_DOL		GE_EX_DOL			/* $ applied to melted feature */
#define EN_ISE_IO	GE_EX_ISE_IO		/* I/O error raised by the ISE Eiffel runtime */
#define EN_COM		GE_EX_COM			/* COM error raised by EiffelCOM runtime */
#define EN_RT_CHECK	GE_EX_RT_CHECK		/* Runtime check error such as out-of-bound array access */
#define EN_OLD		GE_EX_OLD			/* Old violation */
#define EN_SEL		GE_EX_SEL			/* Serialization failure */
#define EN_DIRTY	GE_EX_DIRTY			/* SCOOP processor dirty exception. */
#define EN_NEX		GE_EX_NEX			/* Number of internal exceptions */

/*
 * Raise an Eiffel exception.
 */
extern void eraise(const char* name, long code);

/*
 * Raise an Eiffel exception of the given code with no associated tag.
 */
extern void xraise(int code);

/*
 * Raise an "Operating system error" exception.
 */
extern void esys(void);

/*
 * As a special case, an I/O error is raised when a system call which is I/O bound fails.
 */
extern void eise_io(const char* tag);

/*
 * Raise a "No more memory" exception.
 */
extern void enomem(void);

/*
 * Raise EiffelCOM exception.
 */
extern void com_eraise(const char* tag, long num);

/*
 * Terminate execution with exit status `code',
 * without triggering an exception.
 */
extern void esdie(int code);

/*
 * Exception tag associated with `code'.
 * This is a duplication from Eiffel classes, but still used for trace printing and in EiffelCom.
 */
extern EIF_REFERENCE eename(long except);

/*
 * Is exception `ex' defined?
 * Used in EiffelCOM.
 */
extern char eedefined(long ex);

/*
 * Enable/diable printing of the exception trace.
 * Per thead information.
 */
extern void eetrace(char b);

/*
 * Is current execution during rescue?
 */
extern EIF_BOOLEAN eif_is_in_rescue(void);

#ifdef EIF_WINDOWS
/*
 * Set default exception handler.
 */
extern void set_windows_exception_filter(void);
#endif

/*
 * Used in EiffelCOM.
 */
#define echval GE_current_context()->exception_code
#define echtg GE_current_context()->exception_tag

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class REAL"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2019, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_REAL_H
#define GE_REAL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <math.h>

#ifndef GE_power
#define GE_power(x,y) pow((x),(y))
#endif
#define GE_ceiling(x) ceil(x)
#define GE_floor(x) floor(x)

extern EIF_NATURAL_32 GE_real_32_to_bits (EIF_REAL_32 v);
extern EIF_NATURAL_64 GE_real_64_to_bits (EIF_REAL_64 v);
extern EIF_REAL_32 GE_real_32_from_bits (EIF_NATURAL_32 v);
extern EIF_REAL_64 GE_real_64_from_bits (EIF_NATURAL_64 v);

#define GE_real_32_is_nan(v) ((v) != (v) ? EIF_TRUE : ((GE_real_32_to_bits(v) & ~GE_nat32(0x80000000)) > GE_nat32(0x7FF00000)))
#define GE_real_64_is_nan(v) ((v) != (v) ? EIF_TRUE : ((GE_real_64_to_bits(v) & ~GE_nat64(0x8000000000000000)) > GE_nat64(0x7FF0000000000000)))
#define GE_real_32_is_negative_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0xFF800000))
#define GE_real_64_is_negative_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0xFFF0000000000000))
#define GE_real_32_is_positive_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0x7F800000))
#define GE_real_64_is_positive_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0x7FF0000000000000))
#define GE_real_32_nan GE_real_32_from_bits(GE_nat32(0x7FC00000))
#define GE_real_64_nan GE_real_64_from_bits(GE_nat64(0x7FF8000000000000))
#define GE_real_32_negative_infinity GE_real_32_from_bits(GE_nat32(0xFF800000))
#define GE_real_64_negative_infinity GE_real_64_from_bits(GE_nat64(0xFFF0000000000000))
#define GE_real_32_positive_infinity GE_real_32_from_bits(GE_nat32(0x7F800000))
#define GE_real_64_positive_infinity GE_real_64_from_bits(GE_nat64(0x7FF0000000000000))
#define GE_real_32_is_equal(v1,v2) ((v1) == (v1) ? (v1) == (v2) : (v2) != (v2))
#define GE_real_64_is_equal(v1,v2) ((v1) == (v1) ? (v1) == (v2) : (v2) != (v2))
#define GE_real_32_is_less(v1,v2) ((v1) == (v1) ? (v1) < (v2) : (v2) == (v2))
#define GE_real_64_is_less(v1,v2) ((v1) == (v1) ? (v1) < (v2) : (v2) == (v2))
#define GE_real_32_ieee_is_equal(v1,v2) (v1) == (v2)
#define GE_real_64_ieee_is_equal(v1,v2) (v1) == (v2)
#define GE_real_32_ieee_is_greater(v1,v2) isgreater(v1,v2)
#define GE_real_64_ieee_is_greater(v1,v2) isgreater(v1,v2)
#define GE_real_32_ieee_is_greater_equal(v1,v2) isgreaterequal(v1,v2)
#define GE_real_64_ieee_is_greater_equal(v1,v2) isgreaterequal(v1,v2)
#define GE_real_32_ieee_is_less(v1,v2) isless(v1,v2)
#define GE_real_64_ieee_is_less(v1,v2) isless(v1,v2)
#define GE_real_32_ieee_is_less_equal(v1,v2) islessequal(v1,v2)
#define GE_real_64_ieee_is_less_equal(v1,v2) islessequal(v1,v2)
#define GE_real_32_ieee_maximum_number(v1,v2) fmaxf(v1,v2)
#define GE_real_64_ieee_maximum_number(v1,v2) fmax(v1,v2)
#define GE_real_32_ieee_minimum_number(v1,v2) fminf(v1,v2)
#define GE_real_64_ieee_minimum_number(v1,v2) fmin(v1,v2)

#endif
/*
	description:

		"C functions used to implement Thread support"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_THREADS_H
#define EIF_THREADS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef EIF_CECIL_H
#include "eif_cecil.h"
#endif
#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifdef GE_USE_THREADS
#ifndef GE_THREAD_H
#include "ge_thread.h"
#endif
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifndef GE_USE_THREADS

/*
 * Empty stubs for EiffelThread library so that it may be compiled against a non-multithreaded run-time.
 */

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() NULL

/* THREAD_CONTROL */
#define eif_thr_yield()
#define eif_thr_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj, init_func, set_terminated_func, attr)
#define eif_thr_wait(obj,get_terminated)
#define eif_thr_wait_with_timeout(obj,get_terminated,tms) EIF_TRUE
#define eif_thr_last_thread() NULL
#define eif_thr_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() 0
#define eif_thr_min_priority() 0
#define eif_thr_max_priority() 0

/* MUTEX */
#define eif_thr_mutex_create() NULL
#define eif_thr_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) EIF_TRUE
#define eif_thr_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() NULL
#define eif_thr_cond_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr)
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) 1
#define eif_thr_cond_destroy(a_cond_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(a_count) NULL
#define eif_thr_sem_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) EIF_TRUE
#define eif_thr_sem_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() NULL
#define eif_thr_rwl_rdlock(a_read_write_lock_pointer)
#define eif_thr_rwl_unlock(a_read_write_lock_pointer)
#define eif_thr_rwl_wrlock(a_read_write_lock_pointer)
#define eif_thr_rwl_destroy(a_read_write_lock_pointer)

#else

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() GE_thread_id()

/* THREAD_CONTROL */
#define eif_thr_yield() GE_thread_yield()
#define eif_thr_join_all() GE_thread_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj,init_func,set_terminated_func,attr) GE_thread_create_with_attr((current_obj),(void (*)(EIF_REFERENCE,EIF_INTEGER))(init_func),(void (*)(EIF_REFERENCE,EIF_BOOLEAN))(set_terminated_func),(EIF_THR_ATTR_TYPE*)(attr),0)
#define eif_thr_wait(obj,get_terminated) GE_thread_wait((obj),(EIF_BOOLEAN (*)(EIF_REFERENCE))(get_terminated))
#define eif_thr_wait_with_timeout(obj,get_terminated,tms) GE_thread_wait_with_timeout((obj),(EIF_BOOLEAN (*)(EIF_REFERENCE))(get_terminated),(tms))
#define eif_thr_last_thread() GE_last_thread_created()
#define eif_thr_exit() GE_thread_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() GE_thread_default_priority()
#define eif_thr_min_priority() GE_thread_min_priority()
#define eif_thr_max_priority() GE_thread_max_priority()

/* MUTEX */
#define eif_thr_mutex_create() GE_mutex_create()
#define eif_thr_mutex_lock(a_mutex_pointer) GE_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) GE_mutex_try_lock(a_mutex_pointer)
#define eif_thr_mutex_unlock(a_mutex_pointer) GE_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer) GE_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() GE_condition_variable_create()
#define eif_thr_cond_broadcast(a_cond_ptr) GE_condition_variable_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr) GE_condition_variable_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr) GE_condition_variable_wait((a_cond_ptr),(a_mutex_ptr))
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) GE_condition_variable_wait_with_timeout((a_cond_ptr),(a_mutex_ptr),(a_timeout))
#define eif_thr_cond_destroy(a_cond_ptr) GE_condition_variable_destroy(a_cond_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(a_count) GE_semaphore_create(a_count)
#define eif_thr_sem_wait(a_sem_pointer) GE_semaphore_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer) GE_semaphore_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) GE_semaphore_try_wait(a_sem_pointer)
#define eif_thr_sem_destroy(a_sem_pointer) GE_semaphore_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() GE_read_write_lock_create()
#define eif_thr_rwl_rdlock(a_read_write_lock_pointer) GE_read_write_lock_read_lock(a_read_write_lock_pointer)
#define eif_thr_rwl_unlock(a_read_write_lock_pointer) GE_read_write_lock_unlock(a_read_write_lock_pointer)
#define eif_thr_rwl_wrlock(a_read_write_lock_pointer) GE_read_write_lock_write_lock(a_read_write_lock_pointer)
#define eif_thr_rwl_destroy(a_read_write_lock_pointer) GE_read_write_lock_destroy(a_read_write_lock_pointer)

/* WEL */
#ifdef EIF_WINDOWS
#define eif_thr_create_wel_per_thread_data(a_size) GE_thread_create_wel_per_thread_data(a_size)
#endif

/* To compile the C code of EiffelNet. */
extern int socket_fides;

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile ISE's compiler."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2019, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_SIZE_H
#define EIF_SIZE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Basic sizes */
#define EIF_ALIGN	8	/* Alignment restrictions */
#define R64SIZ	8	/* Size of double */
#define I64SIZ	8	/* Size of integer 64 bits */
#define R32SIZ	4	/* Size of float */
#define REFSIZ	sizeof(char*)	/* Size of char* */
#define LNGSIZ	4	/* Size of long */
#define I16SIZ	2	/* Size of integer 16 bits */
#define CHRSIZ	1	/* Size of char */
#define PTRSIZ	sizeof(void*)	/* Size of a function pointer */

/* Macros used to access fields in the object */
#define REFACS(n) ((n)*REFSIZ)
#define CHRACS(n) ((n)*CHRSIZ)
#define I16ACS(n) ((n)*I16SIZ)
#define LNGACS(n) ((n)*LNGSIZ)
#define R32ACS(n) ((n)*R32SIZ)
#define I64ACS(n) ((n)*I64SIZ)
#define R64ACS(n) ((n)*R64SIZ)
#define PTRACS(n) ((n)*PTRSIZ)

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2019, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_GLOBALS_H
#define EIF_GLOBALS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif
#ifndef EIF_THREADS_H
#include "eif_threads.h"
#endif
#ifndef EIF_SIZE_H
#include "eif_size.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef GE_USE_THREADS
#define EIF_GET_CONTEXT \
	GE_thread_context* eif_globals = GE_current_context()->thread;
#else
#define EIF_GET_CONTEXT
#endif

#define GTCX EIF_GET_CONTEXT

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C declarations for the ISE Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_EIFFEL_H
#define EIF_EIFFEL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_STRING_H
#include "ge_string.h"
#endif
#ifndef GE_GC_H
#include "ge_gc.h"
#endif
#ifndef EIF_GLOBALS_H
#include "eif_globals.h"
#endif
#ifndef EIF_EXCEPT_H
#include "eif_except.h"
#endif

#endif
/*
	description:

		"C functions used to implement class DIRECTORY"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_DIR_H
#define EIF_DIR_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER eif_dir_open(EIF_FILENAME dirname);
extern EIF_POINTER eif_dir_next(EIF_POINTER dir);
extern EIF_POINTER eif_dir_rewind(EIF_POINTER d, EIF_FILENAME dir_name);
extern void eif_dir_close(EIF_POINTER dir);
extern EIF_BOOLEAN eif_dir_exists(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_readable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_writable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_executable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_deletable(EIF_FILENAME name);
extern EIF_CHARACTER_8 eif_dir_separator(void);
extern EIF_INTEGER eif_dir_current(EIF_FILENAME a_buffer, EIF_INTEGER a_count);
extern EIF_INTEGER eif_chdir(EIF_FILENAME path);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to access DLLs"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_DLL_H
#define GE_DLL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

#include <windows.h>

/* DLL declarations */
#define GE_load_dll(name) LoadLibraryA((LPCSTR)(name))

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_MISC_H
#define EIF_MISC_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_DLL_H
#include "ge_dll.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER eif_system(EIF_NATIVE_CHAR* s);
extern void eif_system_asynchronous(EIF_NATIVE_CHAR* cmd);
extern void eif_sleep(EIF_INTEGER_64);

#ifdef EIF_WINDOWS
/* DLL declarations */
#define eif_load_dll(name) GE_load_dll(name)
#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		""Part of ISE Eiffel runtime. Needed to compile class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2018-2020, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_SYSTEM_H
#define EIF_SYSTEM_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef EIF_WINDOWS
#include "Winbase.h"
# include <stdlib.h>

#elif defined(EIF_VMS) || defined(EIF_MACOSX)
#include "sysctl.conf"

#elif EIF_OS == EIF_OS_DARWIN
#include <unistd.h>
#include <mach-o/dyld.h>
#include <limits.h>

#elif EIF_OS == EIF_OS_FREEBSD
#include <unistd.h>
#include <sys/types.h>
#include <sys/sysctl.h>

#elif defined(EIF_SOLARIS)
#include <unistd.h>
#include <stdlib.h>
#include <limits.h>

#else
#include <unistd.h>
#include <limits.h>

#endif

#endif
/*
	description:

		"C functions used to implement class COM_FAILURE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2018, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_COM_FAILURE_H
#define GE_COM_FAILURE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER GE_ccom_hresult(EIF_POINTER an_exception_code);

extern EIF_INTEGER GE_ccom_hresult_code(EIF_INTEGER an_hresult);

extern EIF_INTEGER GE_ccom_hresult_facility(EIF_INTEGER an_hresult);

/*
 * Get text from error `a_code'. It is up to the caller to free
 * the returned buffer using `GE_ccom_local_free'.
 */
extern EIF_POINTER GE_ccom_error_text(EIF_INTEGER a_code);

/*
 * Number of characters in `ptr'.
 */
extern EIF_INTEGER_32 GE_ccom_strlen(EIF_POINTER ptr);

/*
 * Number of bytes occupied by a TCHAR.
 */
extern EIF_INTEGER_32 GE_ccom_character_size(void);

/*
 * Free `a_ptr' using LocalFree.
 */
extern void GE_ccom_local_free(EIF_POINTER a_ptr);

#ifdef __cplusplus
}
#endif

#endif
#include <string.h>
#include <stdlib.h>
#include <time.h>
