/*
	description:

		"C declarations for the Gobo Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2005-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EIFFEL_H
#define GE_EIFFEL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Class name mapping as defined in the FreeELKS library. */
#ifndef EIF_INTEGER
#define EIF_INTEGER EIF_INTEGER_32
#endif
#ifndef EIF_CHARACTER
#define EIF_CHARACTER EIF_CHARACTER_8
#endif
#ifndef EIF_REAL
#define EIF_REAL EIF_REAL_32
#endif
#ifndef EIF_DOUBLE
#define EIF_DOUBLE EIF_REAL_64
#endif
#ifndef GE_ms
#define GE_ms(s,c) GE_ms8((s),(c))
#endif

#if defined(__USE_POSIX) || defined(__unix__) || defined(_POSIX_C_SOURCE)
#include <unistd.h>
#endif
#if !defined(WIN32) && \
	(defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER) || \
	defined(__MINGW32__))
#define WIN32 1
#endif
#ifdef WIN32
#define EIF_WINDOWS 1
#include <windows.h>
#endif

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>
#include <stddef.h>

/* Platform definition */
/* Unix definition */
#define EIF_IS_UNIX EIF_TRUE
/* Windows definition */
#ifdef EIF_WINDOWS
#define EIF_IS_WINDOWS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_WINDOWS EIF_FALSE
#endif
/* VMS definition */
#ifdef EIF_VMS
#define EIF_IS_VMS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VMS EIF_FALSE
#endif
/* MAC definition */
#ifdef EIF_MAC
#define EIF_IS_MAC EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_MAC EIF_FALSE
#endif
/* VxWorks definition */
#ifdef EIF_VXWORKS
#define EIF_IS_VXWORKS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VXWORKS EIF_FALSE
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _MSC_VER /* MSVC */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#include <inttypes.h>
#endif
#endif

/* Portable integer pointers */
#ifdef EIF_WINDOWS
#ifndef _INTPTR_T_DEFINED
#define _INTPTR_T_DEFINED
#ifdef _WIN64
typedef __int64 intptr_t;
#else
typedef int intptr_t;
#endif
#endif
#ifndef _UINTPTR_T_DEFINED
#define _UINTPTR_T_DEFINED
#ifdef _WIN64
  typedef unsigned __int64 uintptr_t;
#else
  typedef unsigned int uintptr_t;
#endif
#endif
#endif

/* C type for underlying integer type identifying object's dynamic type. */
typedef uint16_t EIF_TYPE_INDEX;

/*
 * Abstraction representing an Eiffel type.
 * It is made of a compiler type-id,
 * and of some annotations (attached/detachable/separate/variant/frozen).
 */
typedef struct eif_type {
	EIF_TYPE_INDEX id;
	EIF_TYPE_INDEX annotations;
} EIF_TYPE;

/*
 * Since EIF_TYPE and EIF_ENCODED_TYPE have the same size, the encoded version
 * is basically a memcpy version of the EIF_TYPE representation.
 * It is used to provide backward compatibility to most Eiffel and
 * C APIs manipulating types as an INTEGER.
 */
typedef int32_t EIF_ENCODED_TYPE;
typedef EIF_ENCODED_TYPE EIF_TYPE_ID;
#define EIF_NO_TYPE (EIF_TYPE_ID)(-1)

/* Basic Eiffel types */
typedef char EIF_BOOLEAN;
typedef unsigned char EIF_CHARACTER_8;
typedef uint32_t EIF_CHARACTER_32;
typedef int8_t EIF_INTEGER_8;
typedef int16_t EIF_INTEGER_16;
typedef int32_t EIF_INTEGER_32;
typedef int64_t EIF_INTEGER_64;
typedef uint8_t EIF_NATURAL_8;
typedef uint16_t EIF_NATURAL_16;
typedef uint32_t EIF_NATURAL_32;
typedef uint64_t EIF_NATURAL_64;
typedef void* EIF_POINTER;
typedef float EIF_REAL_32;
typedef double EIF_REAL_64;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags;} EIF_ANY;
typedef EIF_ANY* EIF_REFERENCE;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; EIF_REFERENCE area; EIF_INTEGER count;} EIF_STRING;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; uint32_t offset; EIF_INTEGER count; EIF_INTEGER capacity;} EIF_SPECIAL;

#ifdef EIF_WINDOWS
typedef wchar_t EIF_NATIVE_CHAR;
#else
typedef char EIF_NATIVE_CHAR;
#endif
typedef EIF_NATIVE_CHAR* EIF_FILENAME;

#define EIF_VOID ((EIF_REFERENCE)0)
#define EIF_FALSE ((EIF_BOOLEAN)'\0')
#define EIF_TRUE ((EIF_BOOLEAN)'\1')
#define EIF_TEST(x) ((x) ? EIF_TRUE : EIF_FALSE)

#define EIF_IS_WORKBENCH EIF_FALSE
#define EIF_POINTER_DISPLAY "lX"

/* For INTEGER and NATURAL manifest constants */
#define GE_int8(x) x
#define GE_nat8(x) x
#define GE_int16(x) x
#define GE_nat16(x) x
#define GE_int32(x) x##L
#define GE_nat32(x) x##U
#if defined (_MSC_VER) && (_MSC_VER < 1400) /* MSC older than v8 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#else /* ISO C 99 */
#define GE_int64(x) x##LL
#define GE_nat64(x) x##ULL
#endif
#endif

#ifdef _WIN64
#define GE_IS_64_BITS EIF_TRUE
#else
#define GE_IS_64_BITS EIF_TEST(sizeof(void*)==64)
#endif

#ifdef _MSC_VER /* MSVC */
/* MSVC does not support ISO C 99's 'snprintf' from stdio.h */
#define snprintf(a,b,c,d) sprintf(a,c,d)
#endif

/*
 * Gobo compiler version.
 * Starts with 6080 (looks like GOBO) followed by 5 digits.
 */
#define GE_compiler_version() 608000001

/*
	Interoperability with ISE.
*/
#define RTI64C(x) GE_int64(x)
#define EIF_OBJECT EIF_REFERENCE
#define EIF_OBJ EIF_OBJECT
/* Function pointer call to make sure all arguments are correctly pushed onto stack. */
/* FUNCTION_CAST is for standard C calls. */
/* FUNCTION_CAST_TYPE is for non-standard C calls. */
#define FUNCTION_CAST(r_type,arg_types) (r_type (*) arg_types)
#define FUNCTION_CAST_TYPE(r_type,call_type,arg_types) (r_type (call_type *) arg_types)
#define SIGBLOCK
#define SIGRESUME
#define rt_public				/* default C scope */
#define rt_private static		/* static outside a block means private */
#define rt_shared				/* data shared between modules, but not public */
typedef intptr_t rt_int_ptr;
typedef uintptr_t rt_uint_ptr;
#define RTMS(s) GE_str8(s)
#define RTMS_EX(s,c) GE_ms8((s),(c))

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement once features"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_ONCE_H
#define GE_ONCE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Struct to keep track of the call status
 * and results of once features.
 */
typedef struct {
	EIF_BOOLEAN* boolean_value;
	EIF_REFERENCE* boolean_exception;
	unsigned char* boolean_status;
	unsigned int boolean_count;
	EIF_CHARACTER_8* character_8_value;
	EIF_REFERENCE* character_8_exception;
	unsigned char* character_8_status;
	unsigned int character_8_count;
	EIF_CHARACTER_32* character_32_value;
	EIF_REFERENCE* character_32_exception;
	unsigned char* character_32_status;
	unsigned int character_32_count;
	EIF_INTEGER_8* integer_8_value;
	EIF_REFERENCE* integer_8_exception;
	unsigned char* integer_8_status;
	unsigned int integer_8_count;
	EIF_INTEGER_16* integer_16_value;
	EIF_REFERENCE* integer_16_exception;
	unsigned char* integer_16_status;
	unsigned int integer_16_count;
	EIF_INTEGER_32* integer_32_value;
	EIF_REFERENCE* integer_32_exception;
	unsigned char* integer_32_status;
	unsigned int integer_32_count;
	EIF_INTEGER_64* integer_64_value;
	EIF_REFERENCE* integer_64_exception;
	unsigned char* integer_64_status;
	unsigned int integer_64_count;
	EIF_NATURAL_8* natural_8_value;
	EIF_REFERENCE* natural_8_exception;
	unsigned char* natural_8_status;
	unsigned int natural_8_count;
	EIF_NATURAL_16* natural_16_value;
	EIF_REFERENCE* natural_16_exception;
	unsigned char* natural_16_status;
	unsigned int natural_16_count;
	EIF_NATURAL_32* natural_32_value;
	EIF_REFERENCE* natural_32_exception;
	unsigned char* natural_32_status;
	unsigned int natural_32_count;
	EIF_NATURAL_64* natural_64_value;
	EIF_REFERENCE* natural_64_exception;
	unsigned char* natural_64_status;
	unsigned int natural_64_count;
	EIF_POINTER* pointer_value;
	EIF_REFERENCE* pointer_exception;
	unsigned char* pointer_status;
	unsigned int pointer_count;
	EIF_REAL_32* real_32_value;
	EIF_REFERENCE* real_32_exception;
	unsigned char* real_32_status;
	unsigned int real_32_count;
	EIF_REAL_64* real_64_value;
	EIF_REFERENCE* real_64_exception;
	unsigned char* real_64_status;
	unsigned int real_64_count;
	EIF_REFERENCE* reference_value;
	EIF_REFERENCE* reference_exception;
	unsigned char* reference_status;
	unsigned int reference_count;
	EIF_REFERENCE* procedure_exception;
	unsigned char* procedure_status;
	unsigned int procedure_count;
} GE_onces;

/*
 * Variable to keep track of the call status
 * and results of once-per-process features.
 */
extern GE_onces* GE_process_onces;

/*
 * Initialize `GE_process_onces'.
 */
extern void GE_init_onces(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Create a new 'GE_onces' struct which can deal with the
 * numbers of once features passed as argument.
 */
extern GE_onces* GE_new_onces(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Free memory allocated by `a_onces'.
 */
extern void GE_free_onces(GE_onces* a_onces);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class EXCEPTION"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EXCEPTION_H
#define GE_EXCEPTION_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_ONCE_H
#include "ge_once.h"
#endif
#ifdef GE_USE_THREADS
#ifndef GE_THREAD_TYPES_H
#include "ge_thread_types.h"
#endif
#endif

#include <setjmp.h>

/*
 * On Linux glibc systems, we need to use sig* versions of jmp_buf,
 * setjmp and longjmp to preserve the signal handling context.
 * One way to detect this is if _SIGSET_H_types has
 * been defined in /usr/include/setjmp.h.
 * NOTE: ANSI only recognizes the non-sig versions.
 */
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#define GE_jmp_buf sigjmp_buf
#define GE_setjmp(x) sigsetjmp((x),1)
#define GE_longjmp(x,y) siglongjmp((x),(y))
#else
#define GE_jmp_buf jmp_buf
#define GE_setjmp(x) setjmp((x))
#define GE_longjmp(x,y) longjmp((x),(y))
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Predefined exception codes.
 */
#define GE_EX_VOID		1			/* Feature applied to void reference */
#define GE_EX_MEM		2			/* No more memory */
#define GE_EX_PRE		3			/* Pre-condition violated */
#define GE_EX_POST		4			/* Post-condition violated */
#define GE_EX_FLOAT		5			/* Floating point exception (signal SIGFPE) */
#define GE_EX_CINV		6			/* Class invariant violated */
#define GE_EX_CHECK		7			/* Check instruction violated */
#define GE_EX_FAIL		8			/* Routine failure */
#define GE_EX_WHEN		9			/* Unmatched inspect value */
#define GE_EX_VAR		10			/* Non-decreasing loop variant */
#define GE_EX_LINV		11			/* Loop invariant violated */
#define GE_EX_SIG		12			/* Operating system signal */
#define GE_EX_BYE		13			/* Eiffel run-time panic */
#define GE_EX_RESC		14			/* Exception in rescue clause */
#define GE_EX_OMEM		15			/* Out of memory (cannot be ignored) */
#define GE_EX_RES		16			/* Resumption failed (retry did not succeed) */
#define GE_EX_CDEF		17			/* Create on deferred */
#define GE_EX_EXT		18			/* External event */
#define GE_EX_VEXP		19			/* Void assigned to expanded */
#define GE_EX_HDLR		20			/* Exception in signal handler */
#define GE_EX_IO		21			/* I/O error */
#define GE_EX_SYS		22			/* Operating system error */
#define GE_EX_RETR		23			/* Retrieval error */
#define GE_EX_PROG		24			/* Developer exception */
#define GE_EX_FATAL		25			/* Eiffel run-time fatal error */
#define GE_EX_DOL		26			/* $ applied to melted feature */
#define GE_EX_ISE_IO	27			/* I/O error raised by the ISE Eiffel runtime */
#define GE_EX_COM		28			/* COM error raised by EiffelCOM runtime */
#define GE_EX_RT_CHECK	29			/* Runtime check error such as out-of-bound array access */
#define GE_EX_OLD		30			/* Old violation */
#define GE_EX_SEL		31			/* Serialization failure */
#define GE_EX_DIRTY		32			/* SCOOP processor dirty exception. */
#define GE_EX_NEX		32			/* Number of internal exceptions */

/*
 * String buffer used to build the exception trace.
 */
typedef struct GE_exception_trace_buffer_struct GE_exception_trace_buffer;
struct GE_exception_trace_buffer_struct {
	char* area;
	uint32_t count;
	uint32_t capacity;
};

/*
 * Information about the feature being executed.
 */
typedef struct GE_call_struct GE_call;
struct GE_call_struct {
#ifdef GE_USE_CURRENT_IN_EXCEPTION_TRACE
	void* object; /* Current object */
#endif
	const char* class_name;
	const char* feature_name;
	GE_call* caller; /* previous feature in the call chain */
};

/*
 * Context of features containing a rescue clause.
 */
typedef struct GE_rescue_struct GE_rescue;
struct GE_rescue_struct {
	GE_jmp_buf jb;
	GE_rescue* previous; /* previous context in the call chain */
};

/*
 * Information about the execution context.
 * One such struct per thread.
 */
typedef struct GE_context_struct GE_context;
struct GE_context_struct {
	GE_call* call; /* Call stack */
	uint32_t in_assertion; /* Is an assertion evaluated? */
	GE_rescue* last_rescue; /* Context of last feature entered containing a rescue clause */
	uint32_t in_rescue; /* Number of rescue clauses currently being executed */
	EIF_REFERENCE exception_manager; /* Exception manager */
	char raising_exception; /* Is an exception currently being raised? */
	char exception_trace_enabled; /* Should exception trace be displayed? */
	long exception_code; /* Code of the exception currently being raised, 0 otherwise */
	const char* exception_tag; /* Tag of the exception currently being raised, NULL otherwise */
	GE_exception_trace_buffer exception_trace_buffer; /* String buffer used to build the exception trace */
	GE_exception_trace_buffer last_exception_trace; /* Last non-routine-failure exception trace */
	int pre_ecma_mapping_status; /* Do we map old names to new name? (i.e. STRING to STRING_8, INTEGER to INTEGER_32, ...). */
#ifdef GE_USE_THREADS
	GE_thread_context* thread; /* Thread context */
	GE_onces* process_onces; /* Cache for status and results of onces-per-process */
	GE_onces* thread_onces; /* Status and results of onces-per-thread */
	void* wel_per_thread_data; /* WEL private data */
#endif
};

/*
 * Default initialization for `GE_context'.
 */
extern GE_context GE_default_context;

/*
 * Execution context of main thread.
 */
extern GE_context* GE_main_context;

/*
 * Execution context of current thread.
 */
extern GE_context* GE_current_context();

/*
 * Initialization of exception handling.
 */
extern void GE_init_exception(GE_context* context);

/*
 * Free memory allocated in `a_context' for exception handling.
 */
extern void GE_free_exception(GE_context* a_context);

/*
 * Pointer to function to create a new exception manager object
 * (of type ISE_EXCEPTION_MANAGER).
 */
extern EIF_REFERENCE (*GE_new_exception_manager)(EIF_BOOLEAN);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.init_exception_manager.
 */
extern void (*GE_init_exception_manager)(GE_context*, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.last_exception.
 */
extern EIF_REFERENCE (*GE_last_exception)(GE_context*, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.once_raise.
 */
extern void (*GE_once_raise)(GE_context*, EIF_REFERENCE, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.set_exception_data.
 */
extern void (*GE_set_exception_data)(GE_context*, EIF_REFERENCE, EIF_INTEGER_32, EIF_BOOLEAN, EIF_INTEGER_32, EIF_INTEGER_32, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_INTEGER_32, EIF_BOOLEAN);

/*
 * Exception tag associated with `a_code'.
 */
extern char* GE_exception_tag(long a_code);

/*
 * Raise an exception with code `a_code'.
 */
extern void GE_raise(long a_code);

/*
 * Raise an exception with code `a_code' and message `msg'.
 */
extern void GE_raise_with_message(long a_code, const char* msg);

/*
 * Raise an exception from EXCEPTION_MANAGER.
 */
extern void GE_developer_raise(long a_code, char* a_meaning, char* a_message);

/*
 * Raise exception which was raised the first time a once routine
 * was executed when executing it again.
 */
extern void GE_raise_once_exception(GE_context* a_context, EIF_REFERENCE a_exception);

/*
 * Exception, if any, which was last raised in `a_context'.
 */
extern EIF_REFERENCE GE_last_exception_raised(GE_context* a_context);

/*
 * Jump to execute the rescue of the last routine with a rescue
 * in the call stack.
 */
extern void GE_jump_to_last_rescue(GE_context* a_context);

/*
 * Set `in_assertion' to 'not b'.
 * Return the opposite of previous value.
 */
extern EIF_BOOLEAN GE_check_assert(EIF_BOOLEAN b);

/*
 * Check whether the type id of `obj' is not in `type_ids'.
 * If it is, then raise a CAT-call exception. Don't do anything if `obj' is Void.
 * `nb' is the number of ids in `type_ids' and is expected to be >0.
 * `type_ids' is sorted in increasing order.
 * Return `obj'.
 */
#define GE_catcall(obj,type_ids,nb) GE_check_catcall((obj),(type_ids),(nb))
extern EIF_REFERENCE GE_check_catcall(EIF_REFERENCE obj, EIF_TYPE_INDEX type_ids[], int nb);

/*
 * Check whether `obj' is Void.
 * If it is, then raise a call-on-void-target exception.
 * Return `obj'.
 */
#define GE_void(obj) (!(obj)?GE_check_void(obj):(obj))
extern EIF_REFERENCE GE_check_void(EIF_REFERENCE obj);

/*
 * Check whether `ptr' is a null pointer.
 * If it is, then raise a no-more-memory exception.
 * Return `ptr'.
 */
#define GE_null(ptr) GE_check_null(ptr)
extern void* GE_check_null(void* ptr);

#ifdef EIF_WINDOWS
/*
 * Set default exception handler.
 */
extern void GE_set_windows_exception_filter();
#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to manipulate native strings"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2013-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_NATIVE_STRING_H
#define GE_NATIVE_STRING_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <string.h>
#ifndef EIF_WINDOWS
#include <sys/types.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

/* Macro used to manipulate native strings, i.e: (wchar_t*) */
#define GE_nstrlen wcslen /* size of string */
#define GE_nstrncpy wcsncpy /* Copy n characters of one string to another */
#define GE_nstrcpy wcscpy /* Copy one string to another */
#define GE_nstrncat wcsncat /* Append characters of a string */
#define GE_nstrcat wcscat /* Append a string */
#define GE_nstrstr wcsstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) L##quote /* Manifest Native string declaration */
#define GE_nstr_fopen _wfopen /* Open file using native string name */
#define GE_nstrcmp wcscmp /* Compare two strings. */
#define GE_nstrdup _wcsdup /* Duplicate string. */
#define GE_nstr_cat_ascii(dest, src) {							\
		int i;													\
		size_t dest_len, src_len;								\
		dest_len = rt_nstrlen (dest);							\
		src_len = strlen (src);									\
		for (i = 0; i < src_len; i++) {							\
			dest[dest_len + i] = (EIF_NATIVE_CHAR)src[i];		\
		}														\
		dest[dest_len + src_len] = (EIF_NATIVE_CHAR)0;			\
	}

#else /* not EIF_WINDOWS */

/* Macro used to manipulate native strings, i.e: (char*) */
#define GE_nstrlen strlen /* size of string */
#define GE_nstrncpy strncpy /* Copy n characters of one string to another */
#define GE_nstrcpy strcpy /* Copy one string to another */
#define GE_nstrncat strncat /* Append characters of a string */
#define GE_nstrcat strcat /* Append a string */
#define GE_nstrstr strstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) quote /* Manifest Native string declaration */
#define GE_nstr_fopen fopen /* Open file using native string name */
#define GE_nstrcmp strcmp /* Compare two strings. */
#define GE_nstrdup strdup /* Duplicate string. */
#define GE_nstr_cat_ascii strcat

#endif


#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class ARGUMENTS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_ARGUMENTS_H
#define GE_ARGUMENTS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_argc;
extern EIF_NATIVE_CHAR** GE_argv;

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement type information"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_TYPES_H
#define GE_TYPES_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Type annotations.
 * When a type has no annotation, it means a detachable, non-separate, variant type.
 * In all other cases, there will be an annotation.
 */
#define ANNOTATION_MASK			0x007F	/* All possible annotations. */
#define ATTACHED_FLAG			0x0001
#define DETACHABLE_FLAG			0x0002	/* Only present when overriding an attached type. */
#define SEPARATE_FLAG			0x0004
#define VARIANT_FLAG			0x0008	/* Only present when overriding a frozen/poly type. */
#define UNUSABLE_FLAG			0x0010	/* Reserved for backward compatibility for storables. */
#define FROZEN_FLAG				0x0020
#define POLY_FLAG				0x0040

/*
 * Type flags.
 */
#define GE_TYPE_FLAG_SPECIAL		0x0010
#define GE_TYPE_FLAG_TUPLE			0x0020
#define GE_TYPE_FLAG_EXPANDED		0x0040
#define GE_TYPE_FLAG_DEFERRED		0x0080
#define GE_TYPE_FLAG_NONE			0x0100
#define GE_TYPE_FLAG_BASIC_MASK		0x000F /* One of "BOOLEAN", "CHARACTER_8", "CHARACTER_32", "INTEGER_8", "INTEGER_16", "INTEGER_32", "INTEGER_64", "NATURAL_8", "NATURAL_16", "NATURAL_32", "NATURAL_64", "POINTER", "REAL_32", "REAL_64" */
#define GE_TYPE_FLAG_BOOLEAN		0x0001
#define GE_TYPE_FLAG_CHARACTER_8	0x0002
#define GE_TYPE_FLAG_CHARACTER_32	0x0003
#define GE_TYPE_FLAG_INTEGER_8		0x0004
#define GE_TYPE_FLAG_INTEGER_16		0x0005
#define GE_TYPE_FLAG_INTEGER_32		0x0006
#define GE_TYPE_FLAG_INTEGER_64		0x0007
#define GE_TYPE_FLAG_NATURAL_8		0x0008
#define GE_TYPE_FLAG_NATURAL_16		0x0009
#define GE_TYPE_FLAG_NATURAL_32		0x000A
#define GE_TYPE_FLAG_NATURAL_64		0x000B
#define GE_TYPE_FLAG_POINTER		0x000C
#define GE_TYPE_FLAG_REAL_32		0x000D
#define GE_TYPE_FLAG_REAL_64		0x000E

/*
 * Convention for attribute types.
 * The values are in sync with REFLECTOR_CONSTANTS.
 */
#define GE_TYPE_KIND_INVALID		-1
#define GE_TYPE_KIND_POINTER		0
#define GE_TYPE_KIND_REFERENCE		1
#define GE_TYPE_KIND_CHARACTER_8	2
#define GE_TYPE_KIND_BOOLEAN		3
#define GE_TYPE_KIND_INTEGER_32		4
#define GE_TYPE_KIND_REAL_32		5
#define GE_TYPE_KIND_REAL_64		6
#define GE_TYPE_KIND_EXPANDED		7
#define GE_TYPE_KIND_INTEGER_8		9
#define GE_TYPE_KIND_INTEGER_16		10
#define GE_TYPE_KIND_INTEGER_64 	11
#define GE_TYPE_KIND_CHARACTER_32	12
#define GE_TYPE_KIND_NATURAL_8		13
#define GE_TYPE_KIND_NATURAL_16		14
#define GE_TYPE_KIND_NATURAL_32 	15
#define GE_TYPE_KIND_NATURAL_64 	16

/*
 * Object flags.
 */
#define GE_OBJECT_FLAG_MARKED		0x0001

/*
 * Ancestor relationship between two types X and Y.
 */
#ifdef GE_USE_ANCESTORS
typedef struct {
	EIF_TYPE_INDEX type_id; /* Type id of Y */
	EIF_BOOLEAN conforms; /* Does X conform to Y? */
	void (**qualified_calls)(); /* Function pointers, indexed by call id, when the static type of the target is Y and the dynamic type is X */
} GE_ancestor;
#endif

/*
 * Attribute.
 */
#ifdef GE_USE_ATTRIBUTES
typedef struct {
#ifdef GE_USE_ATTRIBUTE_NAME
	const char* name; /* Attribute name */
#endif
#ifdef GE_USE_ATTRIBUTE_TYPE_ID
	EIF_ENCODED_TYPE type_id; /* Static type id */
#endif
#ifdef GE_USE_ATTRIBUTE_OFFSET
	uint32_t offset; /* Address offset in object */
#endif
} GE_attribute;
#endif

/*
 * Type information.
 */
typedef struct {
	EIF_TYPE_INDEX type_id;
	uint16_t flags;
#ifdef GE_USE_TYPE_GENERATOR
	const char* generator; /* Generator class name */
#endif
#ifdef GE_USE_TYPE_NAME
	const char* name; /* Full type name */
#endif
#ifdef GE_USE_TYPE_GENERIC_PARAMETERS
	EIF_ENCODED_TYPE* generic_parameters;
	uint32_t generic_parameter_count;
#endif
#ifdef GE_USE_ANCESTORS
	GE_ancestor** ancestors;
	uint32_t ancestor_count;
#endif
#ifdef GE_USE_ATTRIBUTES
	GE_attribute** attributes;
	uint32_t attribute_count;
#endif
#ifdef GE_USE_TYPE_OBJECT_SIZE
	uint64_t object_size;
#endif
	EIF_REFERENCE (*new_instance)();
	void (*dispose)(GE_context*, EIF_REFERENCE);
} GE_type_info;

typedef struct {
	EIF_TYPE_INDEX id; /* Type id of the "TYPE [X]" object */
	EIF_INTEGER type_id; /* Type id of the type "X" */
	EIF_BOOLEAN is_special;
	void (*dispose)(GE_context*, EIF_REFERENCE);
	EIF_REFERENCE a1; /* internal_name */
	EIF_REFERENCE a2; /* internal_name_32 */
} EIF_TYPE_OBJ;

/*
 * Types indexed by type id.
 * Generated by the compiler.
 */
extern EIF_TYPE_OBJ GE_types[];
extern GE_type_info GE_type_infos[];

/*
 * Number of type infos in `GE_type_infos'.
 * Do not take into account the fake item at index 0.
 */
extern int GE_type_info_count;

/*
 * Encode a EIF_TYPE into a EIF_ENCODED_TYPE.
 * The lower part of EIF_ENCODED_TYPE contains the .id field,
 * and the upper part the .annotations.
 */
extern EIF_ENCODED_TYPE GE_encoded_type(EIF_TYPE a_type);

/*
 * Decode a EIF_ENCODED_TYPE into a EIF_TYPE.
 * The lower part of EIF_ENCODED_TYPE contains the .id field,
 * and the upper part the .annotations.
 */
extern EIF_TYPE GE_decoded_type(EIF_ENCODED_TYPE a_type);

/*
 * Type with `a_id' and `a_annotations'.
 */
extern EIF_TYPE GE_new_type(EIF_TYPE_INDEX a_id, EIF_TYPE_INDEX a_annotations);

/*
 * Type of object `obj'.
 */
#define GE_object_type(obj)	GE_new_type(((EIF_REFERENCE)(obj))->id, 0x0)
#define GE_object_encoded_type(obj) GE_encoded_type(GE_object_type(obj))

/*
 * Attachment status of `a_type'.
 */
#define GE_is_attached_type(a_type) EIF_TEST(((a_type).annotations & ATTACHED_FLAG) || GE_is_expanded_type_index((a_type).id))
#define GE_is_attached_encoded_type(a_type) GE_is_attached_type(GE_decoded_type(a_type))

/*
 * Associated detachable type of `a_type' if any,
 * otherwise `a_type'.
 */
extern EIF_TYPE GE_non_attached_type(EIF_TYPE a_type);
#define GE_non_attached_encoded_type(a_type) GE_encoded_type(GE_non_attached_type(GE_decoded_type(a_type)))

/*
 * Associated attached type of `a_type' if any,
 * otherwise `a_type'.
 */
extern EIF_TYPE GE_attached_type(EIF_TYPE a_type);
#define GE_attached_encoded_type(t) GE_encoded_type(GE_attached_type(GE_decoded_type(t)))

/*
 * Is `a_type' a SPECIAL type?
 */
#define GE_is_special_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_SPECIAL)
#define GE_is_special_encoded_type(a_type) GE_is_special_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_object(obj) GE_is_special_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of user-defined expanded type?
 */
extern EIF_BOOLEAN GE_is_special_of_expanded_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_expanded_encoded_type(a_type) GE_is_special_of_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_expanded_object(obj) GE_is_special_of_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of reference type?
 */
extern EIF_BOOLEAN GE_is_special_of_reference_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_reference_encoded_type(a_type) GE_is_special_of_reference_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_reference_object(obj) GE_is_special_of_reference_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of reference type or basic expanded type?
 * (Note that user-defined expanded types are excluded.)
 */
extern EIF_BOOLEAN GE_is_special_of_reference_or_basic_expanded_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_reference_or_basic_expanded_encoded_type(a_type) GE_is_special_of_reference_or_basic_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_reference_or_basic_expanded_object(obj) GE_is_special_of_reference_or_basic_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a TUPLE type?
 */
#define GE_is_tuple_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_TUPLE)
#define GE_is_tuple_encoded_type(a_type) GE_is_tuple_type_index(GE_decoded_type(a_type).id)
#define GE_is_tuple_object(obj) GE_is_tuple_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' an expanded type?
 */
#define GE_is_expanded_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_EXPANDED)
#define GE_is_expanded_encoded_type(a_type) GE_is_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_expanded_object(obj) GE_is_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a type whose base class is deferred?
 */
#define GE_is_deferred_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_DEFERRED)
#define GE_is_deferred_encoded_type(a_type) GE_is_deferred_type_index(GE_decoded_type(a_type).id)

/*
 * Does `i'-th field of `a_object + a_physical_offset' (which is expected to be reference)
 * denote a reference with copy semantics?
 */
extern EIF_BOOLEAN GE_is_copy_semantics_field(EIF_INTEGER i, EIF_POINTER a_object, EIF_INTEGER a_physical_offset);

/*
 * Does `i'-th item of special `a_object' (which is expected to be reference)
 * denote a reference with copy semantics?
 */
extern EIF_BOOLEAN GE_is_special_copy_semantics_item(EIF_INTEGER i, EIF_POINTER a_object);

/*
 * Generator class name of `a_type'.
 */
extern EIF_REFERENCE GE_generator_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generator_of_encoded_type(a_type) GE_generator_of_type_index(GE_decoded_type(a_type).id)

/*
 * Full name of `a_type'.
 */
extern EIF_REFERENCE GE_generating_type_of_encoded_type(EIF_ENCODED_TYPE a_type);

/*
 * Encoded type whose name is `a_name'.
 * -1 if no such type.
 */
extern EIF_ENCODED_TYPE GE_encoded_type_from_name(EIF_POINTER a_name);

/*
 * Does `a_type_1' conform to `a_type_2'?
 */
extern EIF_BOOLEAN GE_encoded_type_conforms_to(EIF_ENCODED_TYPE a_type_1, EIF_ENCODED_TYPE a_type_2);

/*
 * Number of generic parameters.
 */
extern EIF_INTEGER GE_generic_parameter_count_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generic_parameter_count_of_encoded_type(a_type) GE_generic_parameter_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Type of `i'-th generic parameter of `a_type'.
 */
extern EIF_INTEGER GE_generic_parameter_of_type_index(EIF_TYPE_INDEX a_type, EIF_INTEGER i);
#define GE_generic_parameter_of_encoded_type(a_type,i) GE_generic_parameter_of_type_index(GE_decoded_type(a_type).id, (i))

/*
 * Number of fields of an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_count_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_field_count_of_encoded_type(a_type) GE_field_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Physical offset of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_offset_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_offset_of_encoded_type(i, a_type) GE_field_offset_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Name of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_POINTER GE_field_name_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_name_of_encoded_type(i, a_type) GE_field_name_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Static type of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_static_type_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_static_type_of_encoded_type(i, a_type) GE_field_static_type_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Kind of type of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_type_kind_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_type_kind_of_encoded_type(i, a_type) GE_field_type_kind_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Physical size of `a_object'.
 */
extern EIF_NATURAL_64 GE_object_size(EIF_POINTER a_object);

/*
 * Is `i'-th field of objects of type `a_type' a user-defined expanded attribute?
 */
extern EIF_BOOLEAN GE_is_field_expanded_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_is_field_expanded_of_encoded_type(i, a_type) GE_is_field_expanded_of_type_index((i), GE_decoded_type(a_type).id)

#define GE_field_address_at(a_field_offset, a_object, a_physical_offset) ((char*)(a_object) + (a_physical_offset) + (a_field_offset))
#define GE_object_at_offset(a_enclosing, a_physical_offset) (EIF_REFERENCE)(GE_field_address_at(0, (a_enclosing), (a_physical_offset)))
#define GE_raw_object_at_offset(a_enclosing, a_physical_offset) (EIF_POINTER)(GE_field_address_at(0, (a_enclosing), (a_physical_offset)))
#define GE_object_encoded_type_at_offset(a_enclosing, a_physical_offset) GE_object_encoded_type(GE_raw_object_at_offset((a_enclosing), (a_physical_offset)))
#define GE_boolean_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_BOOLEAN*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_character_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_CHARACTER_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_character_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_CHARACTER_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_16_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_16*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_16_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_16*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_pointer_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_POINTER*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_real_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REAL_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_real_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REAL_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_raw_reference_field_at(a_field_offset, a_object, a_physical_offset) (EIF_POINTER)*(EIF_REFERENCE*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_reference_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REFERENCE*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_set_boolean_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_boolean_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_character_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_character_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_character_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_character_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_16_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_16_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_16_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_16_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_pointer_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_pointer_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_real_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_real_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_real_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_real_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_reference_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_reference_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value

#if defined(GE_USE_ATTRIBUTES) && defined(GE_USE_ATTRIBUTE_OFFSET)
#define GE_field_address(i, a_object, a_physical_offset) GE_field_address_at(GE_type_infos[((EIF_REFERENCE)(a_object))->id].attributes[(i) - 1]->offset, (a_object), (a_physical_offset))
#define GE_boolean_field(i, a_object, a_physical_offset) *(EIF_BOOLEAN*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_character_8_field(i, a_object, a_physical_offset) *(EIF_CHARACTER_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_character_32_field(i, a_object, a_physical_offset) *(EIF_CHARACTER_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_8_field(i, a_object, a_physical_offset) *(EIF_INTEGER_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_16_field(i, a_object, a_physical_offset) *(EIF_INTEGER_16*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_32_field(i, a_object, a_physical_offset) *(EIF_INTEGER_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_64_field(i, a_object, a_physical_offset) *(EIF_INTEGER_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_8_field(i, a_object, a_physical_offset) *(EIF_NATURAL_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_16_field(i, a_object, a_physical_offset) *(EIF_NATURAL_16*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_32_field(i, a_object, a_physical_offset) *(EIF_NATURAL_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_64_field(i, a_object, a_physical_offset) *(EIF_NATURAL_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_pointer_field(i, a_object, a_physical_offset) *(EIF_POINTER*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_real_32_field(i, a_object, a_physical_offset) *(EIF_REAL_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_real_64_field(i, a_object, a_physical_offset) *(EIF_REAL_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_reference_field(i, a_object, a_physical_offset) *(EIF_REFERENCE*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_set_boolean_field(i, a_object, a_physical_offset, a_value) GE_boolean_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_character_8_field(i, a_object, a_physical_offset, a_value) GE_character_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_character_32_field(i, a_object, a_physical_offset, a_value) GE_character_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_8_field(i, a_object, a_physical_offset, a_value) GE_integer_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_16_field(i, a_object, a_physical_offset, a_value) GE_integer_16_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_32_field(i, a_object, a_physical_offset, a_value) GE_integer_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_64_field(i, a_object, a_physical_offset, a_value) GE_integer_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_8_field(i, a_object, a_physical_offset, a_value) GE_natural_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_16_field(i, a_object, a_physical_offset, a_value) GE_natural_16_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_32_field(i, a_object, a_physical_offset, a_value) GE_natural_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_64_field(i, a_object, a_physical_offset, a_value) GE_natural_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_pointer_field(i, a_object, a_physical_offset, a_value) GE_pointer_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_real_32_field(i, a_object, a_physical_offset, a_value) GE_real_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_real_64_field(i, a_object, a_physical_offset, a_value) GE_real_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_reference_field(i, a_object, a_physical_offset, a_value) GE_reference_field((i), (a_object), (a_physical_offset)) = (a_value)
#else
#define GE_boolean_field(i, a_object, a_physical_offset) (EIF_BOOLEAN)0
#define GE_character_8_field(i, a_object, a_physical_offset) (EIF_CHARACTER_8)0
#define GE_character_32_field(i, a_object, a_physical_offset) (EIF_CHARACTER_32)0
#define GE_integer_8_field(i, a_object, a_physical_offset) (EIF_INTEGER_8)0
#define GE_integer_16_field(i, a_object, a_physical_offset) (EIF_INTEGER_16)0
#define GE_integer_32_field(i, a_object, a_physical_offset) (EIF_INTEGER_32)0
#define GE_integer_64_field(i, a_object, a_physical_offset) (EIF_INTEGER_64)0
#define GE_natural_8_field(i, a_object, a_physical_offset) (EIF_NATURAL_8)0
#define GE_natural_16_field(i, a_object, a_physical_offset) (EIF_NATURAL_16)0
#define GE_natural_32_field(i, a_object, a_physical_offset) (EIF_NATURAL_32)0
#define GE_natural_64_field(i, a_object, a_physical_offset) (EIF_NATURAL_64)0
#define GE_pointer_field(i, a_object, a_physical_offset) (EIF_POINTER)0
#define GE_real_32_field(i, a_object, a_physical_offset) (EIF_REAL_32)0
#define GE_real_64_field(i, a_object, a_physical_offset) (EIF_REAL_64)0
#define GE_reference_field(i, a_object, a_physical_offset) (EIF_REFERENCE)0
#define GE_set_boolean_field(i, a_object, a_physical_offset, a_value)
#define GE_set_character_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_character_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_16_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_16_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_pointer_field(i, a_object, a_physical_offset, a_value)
#define GE_set_real_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_real_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_reference_field(i, a_object, a_physical_offset, a_value)
#endif

/*
 * Number of non-transient fields of an object of dynamic type `a_type'.
 * TODO: storable not implemented yet.
 */
#define GE_persistent_field_count_of_type_index(a_type) GE_field_count_of_type_index(a_type)
#define GE_persistent_field_count_of_encoded_type(a_type) GE_persistent_field_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Is `i'-th field of objects of type `a_type' a transient field?
 * TODO: storable not implemented yet.
 */
#define GE_is_field_transient_of_type_index(i, a_type) EIF_FALSE
#define GE_is_field_transient_of_encoded_type(i, a_type) GE_is_field_transient_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Storable version of objects of type `a_type'.
 * TODO: storable not implemented yet.
 */
#define GE_storable_version_of_type_index(a_type) EIF_VOID
#define GE_storable_version_of_encoded_type(a_type) GE_storable_version_of_type_index(GE_decoded_type(a_type).id)

/*
 * Get a lock on `GE_mark_object' and `GE_unmark_object' routines so that
 * 2 threads cannot `GE_mark_object' and `GE_unmark_object' at the same time.
 */
extern void GE_lock_marking();

/*
 * Release a lock on `GE_mark_object' and `GE_unmark_object', so that another
 * thread can use `GE_mark_object' and `GE_unmark_object'.
 */
extern void GE_unlock_marking();

/*
 * Is `obj' marked?
 */
extern EIF_BOOLEAN GE_is_object_marked(EIF_POINTER obj);

/*
 * Mark `obj'.
 */
extern void GE_mark_object(EIF_POINTER obj);

/*
 * Unmark `obj'.
 */
extern void GE_unmark_object(EIF_POINTER obj);

/*
 * New instance of dynamic `a_type'.
 * Note: returned object is not initialized and may
 * hence violate its invariant.
 * `a_type' cannot represent a SPECIAL type, use
 * `GE_new_special_instance_of_special_type_index' instead.
 */
extern EIF_REFERENCE GE_new_instance_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_new_instance_of_encoded_type(a_type) GE_new_instance_of_type_index(GE_decoded_type(a_type).id)

/*
 * New instance of dynamic `a_type' that represents
 * a SPECIAL with can contain `a_capacity' element. To create a SPECIAL of
 * basic type, use `SPECIAL'.
 */
extern EIF_REFERENCE GE_new_special_any_instance_of_type_index(EIF_TYPE_INDEX a_type, EIF_INTEGER a_capacity);
#define GE_new_special_any_instance_of_encoded_type(a_type, a_capacity) GE_new_special_instance_of_type_index(GE_decoded_type(a_type).id, (a_capacity))

/*
 * New instance of tuple of type `a_type'.
 * Note: returned object is not initialized and may
 * hence violate its invariant.
 */
#define GE_new_tuple_instance_of_type_index(a_type) GE_new_instance_of_type_index(a_type)
#define GE_new_tuple_instance_of_encoded_type(a_type) GE_new_tuple_instance_of_type_index(GE_decoded_type(a_type).id)

/*
 * New instance of TYPE for object of type `a_type'.
 */
extern EIF_REFERENCE GE_new_type_instance_of_encoded_type(EIF_ENCODED_TYPE a_type);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to manipulate strings"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_STRING_H
#define GE_STRING_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * New Eiffel empty string of type "STRING_8" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_str8(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "STRING_32" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_str32(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "IMMUTABLE_STRING_32" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_istr32(EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_8" containing the
 * first `c' characters found in ASCII string `s'.
 */
extern EIF_REFERENCE GE_ms8(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_8" containing all
 * characters found in the null-terminated ASCII string `s'.
 */
extern EIF_REFERENCE GE_str8(const char* s);

/*
 * New Eiffel string of type "STRING_32" containing the
 * first `c' characters found in ASCII string `s'.
 */
extern EIF_REFERENCE GE_ms32(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_32" containing all
 * characters found in the null-terminated ASCII string `s'.
 */
extern EIF_REFERENCE GE_str32(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing
 * the first `c' characters found in ASCII string `s'.
 */
extern EIF_REFERENCE GE_ims32(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing all
 * characters found in the null-terminated ASCII string `s'.
 */
extern EIF_REFERENCE GE_istr32(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing the
 * first `n' native characters found in native string `s'.
 * Invalid native characters are escaped.
 */
extern EIF_REFERENCE GE_ims32_from_nstr(EIF_NATIVE_CHAR* s, EIF_INTEGER n);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing all
 * characters found in the null-terminated native string `s'.
 * Invalid native characters are escaped.
 */
extern EIF_REFERENCE GE_istr32_from_nstr(EIF_NATIVE_CHAR* s);

/*
 * New Eiffel string of type "STRING" containing all
 * characters found in the null-terminated ASCII string `s'
 */
extern EIF_REFERENCE GE_str(const char* s);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_CONSOLE_H
#define GE_CONSOLE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Initialize mutex to determine whether a new
 * console needs to be created.
 */
#ifdef EIF_WINDOWS
extern void GE_init_console(void);
#else
#define GE_init_console()
#endif

/*
 * Create a new DOS console if needed (i.e. in case of a Windows application).
 */
#ifdef EIF_WINDOWS
extern void GE_show_console(void);
#else
#define GE_show_console()
#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement the program initialization"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_MAIN_H
#define GE_MAIN_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_main(int argc, EIF_NATIVE_CHAR** argv);

/*
 * System name.
 */
extern char* GE_system_name;

/*
 * Root class name.
 */
extern char* GE_root_class_name;

#ifdef EIF_WINDOWS

#include <windows.h>

/*
 * Used in WEL.
 */
extern HINSTANCE eif_hInstance;
extern HINSTANCE eif_hPrevInstance;
extern LPWSTR eif_lpCmdLine;
extern int eif_nCmdShow;

/*
 * Main entry point when compiling a Windows application.
 * See:
 *    http://en.wikipedia.org/wiki/WinMain
 *    http://msdn2.microsoft.com/en-us/library/ms633559.aspx
 */
extern int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow);

#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to access garbage collector facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_GC_H
#define GE_GC_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef GE_USE_BOEHM_GC
/*
 *	Use the Boehm garbage collector.
 *	See:
 *		http://en.wikipedia.org/wiki/Boehm_GC
 *		http://www.hpl.hp.com/personal/Hans_Boehm/gc/
 */
#define GC_IGNORE_WARN
#ifdef GE_USE_THREADS
#define GC_THREADS
#undef GC_NO_THREAD_REDIRECTS
#endif
#include "gc.h"
#endif

/*
 * GC initialization.
 */

#ifdef GE_USE_BOEHM_GC
#ifdef GE_USE_THREADS
#define GE_init_gc() \
	GC_INIT(); \
	GC_allow_register_threads(); \
	GC_enable_incremental()
#else
#define GE_init_gc() \
	GC_INIT(); \
	GC_enable_incremental()
#endif
#else /* No GC */
#define GE_init_gc() /* do nothing */
#endif

/*
 * Memory allocation.
 */

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc(size) GE_null(GC_MALLOC(size))
#else /* No GC */
#define GE_malloc(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc(size) GC_MALLOC(size)
#else /* No GC */
#define GE_unprotected_malloc(size) malloc(size)
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc_atomic(size) GE_null(GC_MALLOC_ATOMIC(size))
#else /* No GC */
#define GE_malloc_atomic(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_atomic(size) GC_MALLOC_ATOMIC(size)
#else /* No GC */
#define GE_unprotected_malloc_atomic(size) malloc(size)
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_calloc(nelem, elsize) GE_null(GC_MALLOC((nelem) * (elsize)))
#else /* No GC */
#define GE_calloc(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_calloc(nelem, elsize) GC_MALLOC((nelem) * (elsize))
#else /* No GC */
#define GE_unprotected_calloc(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_calloc_atomic(nelem, elsize) memset(GE_null(GC_MALLOC_ATOMIC((nelem) * (elsize))), 0, (nelem) * (elsize))
#else /* No GC */
#define GE_calloc(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc_uncollectable(size) GE_null(GC_MALLOC_UNCOLLECTABLE(size))
#else /* No GC */
#define GE_malloc_uncollectable(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_uncollectable(size) GC_MALLOC_UNCOLLECTABLE(size)
#else /* No GC */
#define GE_unprotected_malloc_uncollectable(size) malloc(size)
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc_atomic_uncollectable(size) GE_null(GC_malloc_atomic_uncollectable(size))
#else /* No GC */
#define GE_malloc_atomic_uncollectable(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_atomic_uncollectable(size) GC_malloc_atomic_uncollectable(size)
#else /* No GC */
#define GE_unprotected_malloc_atomic_uncollectable(size) malloc(size)
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_calloc_uncollectable(nelem, elsize) GE_null(GC_MALLOC_UNCOLLECTABLE((nelem) * (elsize)))
#else /* No GC */
#define GE_calloc_uncollectable(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_calloc_uncollectable(nelem, elsize) GC_MALLOC_UNCOLLECTABLE((nelem) * (elsize))
#else /* No GC */
#define GE_unprotected_calloc_uncollectable(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_calloc_atomic_uncollectable(nelem, elsize) memset(GE_null(GC_malloc_atomic_uncollectable((nelem) * (elsize))), 0, (nelem) * (elsize))
#else /* No GC */
#define GE_calloc_atomic_uncollectable(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
extern void* GE_unprotected_calloc_atomic_uncollectable(size_t nelem, size_t elsize);
#else /* No GC */
#define GE_unprotected_calloc_atomic_uncollectable(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is not necessarily zeroed.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_realloc(p, size) GE_null(GC_REALLOC((p), (size)))
#else /* No GC */
#define GE_realloc(p, size) GE_null(realloc((p), (size)))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is not necessarily zeroed.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_realloc(p, size) GC_REALLOC((p), (size))
#else /* No GC */
#define GE_unprotected_realloc(p, size) realloc((p), (size))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * Raise an exception when no-more-memory.
 */
extern void* GE_recalloc(void* p, size_t old_nelem, size_t new_nelem, size_t elsize);

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * Do not raise an exception when no-more-memory.
 */
extern void* GE_unprotected_recalloc(void* p, size_t old_nelem, size_t new_nelem, size_t elsize);

/*
 * Explicitly deallocate an object.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_free(p) GC_FREE(p)
#else /* No GC */
#define GE_free(p) free(p)
#endif

/*
 * When defined, `GE_malloc_cleared' means that `GE_malloc' and
 * `GE_malloc_uncollectable' make sure that the allocated memory
 * is zeroed.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc_cleared
#else /* No GC */
#endif

/*
 * When defined, `GE_malloc_atomic_cleared' means that `GE_malloc_atomic'
 * and `GE_malloc_atomic_uncollectable' make sure that the allocated memory
 * is zeroed.
 */
#ifdef GE_USE_BOEHM_GC
/* #define GE_malloc_atomic_cleared */
#else /* No GC */
#endif

/*
 * Dispose
 */

/*
 * Register dispose routine `disp' to be called on object `obj' when it will be collected.
 */
#ifdef GE_USE_BOEHM_GC
extern void GE_boehm_dispose(void* C, void* disp); /* Call dispose routine `disp' on object `C'. */
#define GE_register_dispose(obj, disp) GC_REGISTER_FINALIZER_NO_ORDER((void*)(obj), (void (*) (void*, void*)) &GE_boehm_dispose, NULL, NULL, NULL)
#else /* No GC */
#define GE_register_dispose(obj, disp) /* do nothing */
#endif

/*
 * Access to objects, useful with GCs which move objects in memory.
 * This is not the case here, since the Boehm GC is not a moving GC.
 */

/* Access object through hector. */
#define eif_access(obj) (obj)
/* Freeze memory address. */
#define eif_freeze(obj) (obj)
/* The C side adopts an object. */
#define eif_adopt(obj) (obj)
/* The C side protects an object. */
#define eif_protect(obj) (obj)
/* The C side weans adopted object. */
#define eif_wean(obj) (obj)
/* Forget a frozen memory address. */
#define eif_unfreeze(obj)
/* Always frozen since they do not move. */
#define eif_frozen(obj) 1
/* Always frozen since they do not move. */
#define spfrozen(obj) 1

#endif

/*
	description:

		"C functions used to implement class IDENTIFIED"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_IDENTIFIED_H
#define GE_IDENTIFIED_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Initialize data to keep track of object ids.
 */
extern void GE_init_identified(void);

/*
 * Get a new id for `object', assuming it is NOT in the stack.
 */
extern EIF_INTEGER_32 GE_object_id(EIF_OBJECT object);

/*
 * Return the object associated with `id'.
 */
extern EIF_REFERENCE GE_id_object(EIF_INTEGER_32 id);

/*
 * Remove the object associated with `id' from the stack.
 */
extern void GE_object_id_free(EIF_INTEGER_32 id);

#ifdef __cplusplus
}
#endif

#endif

#ifdef __cplusplus
extern "C" {
#endif

#define T0 EIF_ANY

/* CHARACTER */
#define EIF_CHARACTER EIF_CHARACTER_8

/* WIDE_CHARACTER */
#define EIF_WIDE_CHAR EIF_CHARACTER_32

/* INTEGER */
#define EIF_INTEGER EIF_INTEGER_32

/* NATURAL */
#define EIF_NATURAL EIF_NATURAL_32

/* REAL */
#define EIF_REAL EIF_REAL_32

/* DOUBLE */
#define EIF_DOUBLE EIF_REAL_64

/* BOOLEAN */
#define T1 EIF_BOOLEAN
extern T0* GE_boxed1(T1 a1);
typedef struct Sb1 Tb1;

/* CHARACTER_8 */
#define T2 EIF_CHARACTER_8
extern T0* GE_boxed2(T2 a1);
typedef struct Sb2 Tb2;

/* CHARACTER_32 */
#define T3 EIF_CHARACTER_32
extern T0* GE_boxed3(T3 a1);
typedef struct Sb3 Tb3;

/* INTEGER_8 */
#define T4 EIF_INTEGER_8
extern T0* GE_boxed4(T4 a1);
typedef struct Sb4 Tb4;

/* INTEGER_16 */
#define T5 EIF_INTEGER_16
extern T0* GE_boxed5(T5 a1);
typedef struct Sb5 Tb5;

/* INTEGER_32 */
#define T6 EIF_INTEGER_32
extern T0* GE_boxed6(T6 a1);
typedef struct Sb6 Tb6;

/* INTEGER_64 */
#define T7 EIF_INTEGER_64
extern T0* GE_boxed7(T7 a1);
typedef struct Sb7 Tb7;

/* NATURAL_8 */
#define T8 EIF_NATURAL_8
extern T0* GE_boxed8(T8 a1);
typedef struct Sb8 Tb8;

/* NATURAL_16 */
#define T9 EIF_NATURAL_16
extern T0* GE_boxed9(T9 a1);
typedef struct Sb9 Tb9;

/* NATURAL_32 */
#define T10 EIF_NATURAL_32
extern T0* GE_boxed10(T10 a1);
typedef struct Sb10 Tb10;

/* NATURAL_64 */
#define T11 EIF_NATURAL_64
extern T0* GE_boxed11(T11 a1);
typedef struct Sb11 Tb11;

/* REAL_32 */
#define T12 EIF_REAL_32
extern T0* GE_boxed12(T12 a1);
typedef struct Sb12 Tb12;

/* REAL_64 */
#define T13 EIF_REAL_64
extern T0* GE_boxed13(T13 a1);
typedef struct Sb13 Tb13;

/* POINTER */
#define T14 EIF_POINTER
extern T0* GE_boxed14(T14 a1);
typedef struct Sb14 Tb14;

/* SPECIAL [CHARACTER_8] */
typedef struct S15 T15;

/* SPECIAL [CHARACTER_32] */
typedef struct S16 T16;

/* STRING_8 */
typedef struct S17 T17;

/* STRING_32 */
typedef struct S18 T18;

/* IMMUTABLE_STRING_32 */
typedef struct S19 T19;

/* ISE_EXCEPTION_MANAGER */
typedef struct S20 T20;

/* GEC */
typedef struct S24 T24;

/* CELL [detachable EXCEPTION] */
typedef struct S25 T25;

/* HASH_TABLE [INTEGER_32, INTEGER_32] */
typedef struct S26 T26;

/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
typedef struct S27 T27;

/* CELL [NO_MORE_MEMORY] */
typedef struct S28 T28;

/* C_STRING */
typedef struct S29 T29;

/* [attached] TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
typedef struct S30 T30;

/* KL_TEXT_INPUT_FILE */
typedef struct S31 T31;

/* KL_ARGUMENTS */
typedef struct S32 T32;

/* ET_ISE_VARIABLES */
typedef struct S33 T33;

/* ET_ERROR_HANDLER */
typedef struct S34 T34;

/* ET_SYSTEM */
typedef struct S35 T35;

/* KL_STRING_ROUTINES */
typedef struct S36 T36;

/* KL_EXCEPTIONS */
typedef struct S38 T38;

/* AP_PARSER */
typedef struct S39 T39;

/* AP_ALTERNATIVE_OPTIONS_LIST */
typedef struct S40 T40;

/* AP_ERROR */
typedef struct S41 T41;

/* AP_FLAG */
typedef struct S42 T42;

/* AP_ENUMERATION_OPTION */
typedef struct S44 T44;

/* AP_BOOLEAN_OPTION */
typedef struct S45 T45;

/* AP_INTEGER_OPTION */
typedef struct S46 T46;

/* AP_STRING_OPTION */
typedef struct S47 T47;

/* AP_DISPLAY_HELP_FLAG */
typedef struct S51 T51;

/* ET_XACE_SYSTEM_PARSER */
typedef struct S53 T53;

/* ET_XACE_DEFAULT_ERROR_HANDLER */
typedef struct S54 T54;

/* DS_HASH_TABLE [STRING_8, STRING_8] */
typedef struct S55 T55;

/* ST_SPLITTER */
typedef struct S56 T56;

/* UC_STRING_EQUALITY_TESTER */
typedef struct S58 T58;

/* detachable KL_EQUALITY_TESTER [STRING_8] */
typedef struct S59 T59;

/* ET_XACE_SYSTEM */
typedef struct S62 T62;

/* ET_ECF_SYSTEM_PARSER */
typedef struct S63 T63;

/* ET_ECF_ERROR_HANDLER */
typedef struct S64 T64;

/* ET_ECF_SYSTEM */
typedef struct S65 T65;

/* ET_ECF_TARGET */
typedef struct S66 T66;

/* KL_EXECUTION_ENVIRONMENT */
typedef struct S67 T67;

/* ET_ECF_VARIABLES */
typedef struct S68 T68;

/* ET_LACE_PARSER */
typedef struct S69 T69;

/* ET_LACE_ERROR_HANDLER */
typedef struct S70 T70;

/* ET_LACE_SYSTEM */
typedef struct S71 T71;

/* ET_DYNAMIC_SYSTEM */
typedef struct S72 T72;

/* ET_SYSTEM_PROCESSOR */
typedef struct S73 T73;

/* ET_C_GENERATOR */
typedef struct S76 T76;

/* KL_SHELL_COMMAND */
typedef struct S77 T77;

/* DS_HASH_SET [STRING_8] */
typedef struct S78 T78;

/* UT_VERSION */
typedef struct S79 T79;

/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
typedef struct S80 T80;

/* ET_CLASS_TYPE */
typedef struct S81 T81;

/* ET_TOKEN_CONSTANTS */
typedef struct S82 T82;

/* ET_CLASS */
typedef struct S83 T83;

/* KL_OPERATING_SYSTEM */
typedef struct S85 T85;

/* UT_CANNOT_READ_FILE_ERROR */
typedef struct S87 T87;

/* UT_VERSION_NUMBER */
typedef struct S88 T88;

/* VOID_TARGET */
typedef struct S89 T89;

/* [attached] TYPE [VOID_TARGET] */
#define T90 EIF_TYPE_OBJ

/* ROUTINE_FAILURE */
typedef struct S91 T91;

/* [attached] TYPE [ROUTINE_FAILURE] */
#define T92 EIF_TYPE_OBJ

/* OLD_VIOLATION */
typedef struct S93 T93;

/* [attached] TYPE [OLD_VIOLATION] */
#define T94 EIF_TYPE_OBJ

/* NO_MORE_MEMORY */
typedef struct S95 T95;

/* INVARIANT_VIOLATION */
typedef struct S96 T96;

/* OPERATING_SYSTEM_SIGNAL_FAILURE */
typedef struct S97 T97;

/* IO_FAILURE */
typedef struct S98 T98;

/* OPERATING_SYSTEM_FAILURE */
typedef struct S99 T99;

/* COM_FAILURE */
typedef struct S100 T100;

/* EIFFEL_RUNTIME_PANIC */
typedef struct S101 T101;

/* PRECONDITION_VIOLATION */
typedef struct S104 T104;

/* POSTCONDITION_VIOLATION */
typedef struct S105 T105;

/* FLOATING_POINT_FAILURE */
typedef struct S106 T106;

/* CHECK_VIOLATION */
typedef struct S107 T107;

/* BAD_INSPECT_VALUE */
typedef struct S108 T108;

/* VARIANT_VIOLATION */
typedef struct S109 T109;

/* LOOP_INVARIANT_VIOLATION */
typedef struct S110 T110;

/* RESCUE_FAILURE */
typedef struct S111 T111;

/* RESUMPTION_FAILURE */
typedef struct S112 T112;

/* CREATE_ON_DEFERRED */
typedef struct S113 T113;

/* EXTERNAL_FAILURE */
typedef struct S114 T114;

/* VOID_ASSIGNED_TO_EXPANDED */
typedef struct S115 T115;

/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
typedef struct S116 T116;

/* MISMATCH_FAILURE */
typedef struct S117 T117;

/* DEVELOPER_EXCEPTION */
typedef struct S118 T118;

/* ADDRESS_APPLIED_TO_MELTED_FEATURE */
typedef struct S119 T119;

/* SERIALIZATION_FAILURE */
typedef struct S120 T120;

/* KL_WINDOWS_FILE_SYSTEM */
typedef struct S121 T121;

/* KL_UNIX_FILE_SYSTEM */
typedef struct S122 T122;

/* PRIMES */
typedef struct S123 T123;

/* SPECIAL [INTEGER_32] */
typedef struct S124 T124;

/* SPECIAL [BOOLEAN] */
typedef struct S125 T125;

/* detachable KL_LINKABLE [CHARACTER_8] */
typedef struct S127 T127;

/* MANAGED_POINTER */
typedef struct S129 T129;

/* FILE_INFO */
typedef struct S130 T130;

/* MUTEX */
typedef struct S131 T131;

/* UT_ERROR_HANDLER */
typedef struct S132 T132;

/* KL_STANDARD_FILES */
typedef struct S133 T133;

/* KL_STDERR_FILE */
typedef struct S134 T134;

/* KL_STDOUT_FILE */
typedef struct S135 T135;

/* UC_STRING */
typedef struct S136 T136;

/* KL_ANY_ROUTINES */
typedef struct S137 T137;

/* DS_ARRAYED_LIST [STRING_8] */
typedef struct S139 T139;

/* DS_ARRAYED_LIST [AP_OPTION] */
typedef struct S140 T140;

/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S141 T141;

/* AP_ERROR_HANDLER */
typedef struct S142 T142;

/* DS_LINKED_LIST_CURSOR [AP_OPTION] */
typedef struct S143 T143;

/* ARRAY [STRING_8] */
typedef struct S144 T144;

/* SPECIAL [STRING_8] */
typedef struct S145 T145;

/* DS_LINKED_LIST [STRING_8] */
typedef struct S146 T146;

/* KL_STRING_EQUALITY_TESTER */
typedef struct S147 T147;

/* DS_LINKED_LIST [BOOLEAN] */
typedef struct S150 T150;

/* DS_LINKED_LIST [INTEGER_32] */
typedef struct S153 T153;

/* ET_XACE_AST_FACTORY */
typedef struct S154 T154;

/* XM_DOCUMENT */
typedef struct S155 T155;

/* XM_ELEMENT */
typedef struct S156 T156;

/* XM_POSITION_TABLE */
typedef struct S157 T157;

/* XM_TREE_CALLBACKS_PIPE */
typedef struct S159 T159;

/* XM_STOP_ON_ERROR_FILTER */
typedef struct S160 T160;

/* XM_CALLBACKS_TO_TREE_FILTER */
typedef struct S161 T161;

/* ET_XACE_VALIDATOR */
typedef struct S162 T162;

/* ET_XACE_PREPROCESSOR */
typedef struct S163 T163;

/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8] */
typedef struct S164 T164;

/* XM_EXPAT_PARSER_FACTORY */
typedef struct S165 T165;

/* XM_EIFFEL_PARSER */
typedef struct S166 T166;

/* ET_XACE_LIBRARY_CONFIG_PARSER */
typedef struct S169 T169;

/* UT_MESSAGE */
typedef struct S170 T170;

/* KL_SPECIAL_ROUTINES [STRING_8] */
typedef struct S172 T172;

/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
typedef struct S173 T173;

/* KL_SPECIAL_ROUTINES [INTEGER_32] */
typedef struct S174 T174;

/* DS_LINKED_LIST_CURSOR [STRING_8] */
typedef struct S175 T175;

/* DS_HASH_SET [INTEGER_32] */
typedef struct S176 T176;

/* ET_ECF_AST_FACTORY */
typedef struct S177 T177;

/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
typedef struct S179 T179;

/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
typedef struct S180 T180;

/* ET_COMPRESSED_POSITION */
typedef struct S181 T181;

/* ET_IDENTIFIER */
typedef struct S183 T183;

/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
typedef struct S185 T185;

/* ET_ECF_STATE */
typedef struct S188 T188;

/* ET_ECF_TARGETS */
typedef struct S189 T189;

/* ET_ECF_LIBRARY */
typedef struct S190 T190;

/* ET_ADAPTED_LIBRARIES */
typedef struct S191 T191;

/* [attached] TUPLE [ET_ADAPTED_LIBRARY] */
typedef struct S193 T193;

/* [attached] PROCEDURE [[attached] TUPLE [ET_ADAPTED_LIBRARY]] */
typedef struct S194 T194;

/* detachable TUPLE */
typedef struct S195 T195;

/* ET_ECF_LIBRARY_PARSER */
typedef struct S196 T196;

/* ET_ECF_ADAPTED_LIBRARY */
typedef struct S197 T197;

/* ET_ADAPTED_DOTNET_ASSEMBLIES */
typedef struct S198 T198;

/* ET_ECF_DOTNET_ASSEMBLY */
typedef struct S199 T199;

/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
typedef struct S201 T201;

/* ET_ECF_ERROR */
typedef struct S202 T202;

/* EXECUTION_ENVIRONMENT */
typedef struct S203 T203;

/* ET_LACE_AST_FACTORY */
typedef struct S204 T204;

/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S205 T205;

/* YY_FILE_BUFFER */
typedef struct S206 T206;

/* YY_BUFFER */
typedef struct S207 T207;

/* DS_HASH_SET [ET_IDENTIFIER] */
typedef struct S208 T208;

/* SPECIAL [detachable ANY] */
typedef struct S211 T211;

/* KL_SPECIAL_ROUTINES [detachable ANY] */
typedef struct S212 T212;

/* SPECIAL [ET_IDENTIFIER] */
typedef struct S213 T213;

/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
typedef struct S214 T214;

/* ET_LACE_CLUSTERS */
typedef struct S215 T215;

/* ET_LACE_CLUSTER */
typedef struct S216 T216;

/* ET_LACE_EXCLUDE */
typedef struct S217 T217;

/* ET_LACE_DOTNET_ASSEMBLY */
typedef struct S218 T218;

/* SPECIAL [ET_LACE_SYSTEM] */
typedef struct S219 T219;

/* SPECIAL [detachable ET_LACE_CLUSTERS] */
typedef struct S220 T220;

/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
typedef struct S221 T221;

/* KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM] */
typedef struct S222 T222;

/* KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS] */
typedef struct S223 T223;

/* SPECIAL [ET_LACE_CLUSTER] */
typedef struct S224 T224;

/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
typedef struct S225 T225;

/* SPECIAL [detachable ET_LACE_EXCLUDE] */
typedef struct S226 T226;

/* KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE] */
typedef struct S227 T227;

/* KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
typedef struct S228 T228;

/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S229 T229;

/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S230 T230;

/* ET_LACE_DOTNET_GAC_ASSEMBLY */
typedef struct S231 T231;

/* KL_PLATFORM */
typedef struct S232 T232;

/* KL_INTEGER_ROUTINES */
typedef struct S233 T233;

/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
typedef struct S234 T234;

/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
typedef struct S235 T235;

/* [attached] TUPLE [ET_CLASS] */
typedef struct S236 T236;

/* [attached] PROCEDURE [[attached] TUPLE [ET_CLASS]] */
typedef struct S237 T237;

/* [attached] TUPLE [INTEGER_32] */
typedef struct S238 T238;

/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
typedef struct S239 T239;

/* ET_DYNAMIC_TYPE */
typedef struct S240 T240;

/* DT_DATE_TIME */
typedef struct S241 T241;

/* [attached] TUPLE [ET_DYNAMIC_SYSTEM] */
typedef struct S242 T242;

/* ET_DYNAMIC_FEATURE */
typedef struct S247 T247;

/* ET_ACTUAL_PARAMETER_LIST */
typedef struct S251 T251;

/* ET_EXTERNAL_FUNCTION */
typedef struct S259 T259;

/* ET_TUPLE_TYPE */
typedef struct S260 T260;

/* ET_FORMAL_ARGUMENT_LIST */
typedef struct S261 T261;

/* detachable ARRAY [ET_TYPE] */
typedef struct S262 T262;

/* SPECIAL [ET_TYPE] */
typedef struct S263 T263;

/* ET_FORMAL_ARGUMENT */
typedef struct S264 T264;

/* ET_QUERY_LIST */
typedef struct S265 T265;

/* ET_PROCEDURE_LIST */
typedef struct S266 T266;

/* DT_SHARED_SYSTEM_CLOCK */
typedef struct S267 T267;

/* DT_SYSTEM_CLOCK */
typedef struct S268 T268;

/* ET_EIFFEL_PREPARSER */
typedef struct S269 T269;

/* ET_MASTER_CLASS_CHECKER */
typedef struct S270 T270;

/* ET_EIFFEL_PARSER */
typedef struct S271 T271;

/* ET_PROVIDER_CHECKER */
typedef struct S272 T272;

/* ET_ANCESTOR_BUILDER */
typedef struct S273 T273;

/* ET_FEATURE_FLATTENER */
typedef struct S274 T274;

/* ET_INTERFACE_CHECKER */
typedef struct S275 T275;

/* ET_IMPLEMENTATION_CHECKER */
typedef struct S276 T276;

/* DS_ARRAYED_LIST [ET_CLASS] */
typedef struct S277 T277;

/* [attached] TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
typedef struct S278 T278;

/* ET_AST_NULL_PROCESSOR */
typedef struct S279 T279;

/* DS_ARRAYED_LIST [INTEGER_32] */
typedef struct S280 T280;

/* ET_AST_FACTORY */
typedef struct S281 T281;

/* ET_NULL_ERROR_HANDLER */
typedef struct S282 T282;

/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
typedef struct S284 T284;

/* DT_DATE_TIME_DURATION */
typedef struct S285 T285;

/* KL_NULL_TEXT_OUTPUT_STREAM */
typedef struct S286 T286;

/* ET_DYNAMIC_TYPE_SET_LIST */
typedef struct S287 T287;

/* KL_STRING_OUTPUT_STREAM */
typedef struct S288 T288;

/* DS_ARRAYED_LIST [ET_IDENTIFIER] */
typedef struct S289 T289;

/* ET_DYNAMIC_TYPE_HASH_LIST */
typedef struct S290 T290;

/* ET_DYNAMIC_STANDALONE_TYPE_SET */
typedef struct S291 T291;

/* DS_ARRAYED_STACK [ET_EXPRESSION] */
typedef struct S292 T292;

/* DS_ARRAYED_LIST [ET_EXPRESSION] */
typedef struct S293 T293;

/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S294 T294;

/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
typedef struct S295 T295;

/* DS_HASH_SET [ET_DYNAMIC_TYPE] */
typedef struct S296 T296;

/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S297 T297;

/* DS_ARRAYED_LIST [ET_OBJECT_TEST] */
typedef struct S298 T298;

/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S299 T299;

/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
typedef struct S300 T300;

/* DS_ARRAYED_LIST [ET_AGENT] */
typedef struct S301 T301;

/* ET_EXPRESSION */
typedef struct S302 T302;

/* ET_CURRENT */
typedef struct S303 T303;

/* ET_ACTUAL_ARGUMENT_LIST */
typedef struct S304 T304;

/* ET_QUALIFIED_CALL_INSTRUCTION */
typedef struct S305 T305;

/* ET_QUALIFIED_CALL_EXPRESSION */
typedef struct S308 T308;

/* ET_UNQUALIFIED_CALL_EXPRESSION */
typedef struct S309 T309;

/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S310 T310;

/* ET_MANIFEST_TUPLE */
typedef struct S311 T311;

/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S312 T312;

/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE] */
typedef struct S313 T313;

/* ARRAY [INTEGER_32] */
typedef struct S314 T314;

/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
typedef struct S315 T315;

/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
typedef struct S316 T316;

/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
typedef struct S317 T317;

/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
typedef struct S318 T318;

/* DS_HASH_TABLE [BOOLEAN, STRING_8] */
typedef struct S319 T319;

/* ET_IDENTIFIER_TESTER */
typedef struct S320 T320;

/* detachable KL_EQUALITY_TESTER [ET_IDENTIFIER] */
typedef struct S321 T321;

/* RX_PCRE_REGULAR_EXPRESSION */
typedef struct S322 T322;

/* KL_TEXT_OUTPUT_FILE */
typedef struct S323 T323;

/* ET_DYNAMIC_TUPLE_TYPE */
typedef struct S324 T324;

/* UT_TEMPLATE_EXPANDER */
typedef struct S325 T325;

/* UT_CANNOT_WRITE_TO_FILE_ERROR */
typedef struct S326 T326;

/* ET_DYNAMIC_FEATURE_LIST */
typedef struct S327 T327;

/* ET_DYNAMIC_PRECURSOR */
typedef struct S328 T328;

/* ET_DYNAMIC_PRECURSOR_LIST */
typedef struct S329 T329;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE] */
typedef struct S330 T330;

/* ET_RESULT */
typedef struct S331 T331;

/* ET_DYNAMIC_QUALIFIED_QUERY_CALL */
typedef struct S332 T332;

/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
typedef struct S336 T336;

/* ET_OBJECT_TEST */
typedef struct S338 T338;

/* ET_OBJECT_EQUALITY_EXPRESSION */
typedef struct S339 T339;

/* ET_EQUALITY_EXPRESSION */
typedef struct S340 T340;

/* ET_DYNAMIC_SPECIAL_TYPE */
typedef struct S341 T341;

/* DS_QUICK_SORTER [ET_DYNAMIC_TYPE] */
typedef struct S344 T344;

/* ET_DYNAMIC_TYPE_COMPARATOR_BY_ID */
typedef struct S345 T345;

/* ET_CREATE_EXPRESSION */
typedef struct S349 T349;

/* ET_QUALIFIED_CALL */
typedef struct S350 T350;

/* KL_DIRECTORY */
typedef struct S354 T354;

/* ET_EXTENDED_ATTRIBUTE */
typedef struct S355 T355;

/* ET_COMPOUND */
typedef struct S356 T356;

/* ET_LOCAL_VARIABLE_LIST */
typedef struct S357 T357;

/* DS_QUICK_SORTER [INTEGER_32] */
typedef struct S361 T361;

/* ET_IMPLICIT_TYPE_MARK */
typedef struct S368 T368;

/* ET_SYMBOL */
typedef struct S369 T369;

/* [attached] PROCEDURE [[attached] TUPLE] */
typedef struct S370 T370;

/* [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S371 T371;

/* [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S372 T372;

/* [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S373 T373;

/* [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S374 T374;

/* UT_INTEGER_FORMATTER */
typedef struct S375 T375;

/* STD_FILES */
typedef struct S378 T378;

/* [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S380 T380;

/* [attached] TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
typedef struct S382 T382;

/* [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S383 T383;

/* ET_CONSTANT_ATTRIBUTE */
typedef struct S384 T384;

/* ET_UNIQUE_ATTRIBUTE */
typedef struct S386 T386;

/* ET_ATTRIBUTE */
typedef struct S387 T387;

/* NATIVE_STRING */
typedef struct S389 T389;

/* DS_HASH_SET_CURSOR [STRING_8] */
typedef struct S390 T390;

/* ET_FEATURE_CHECKER */
typedef struct S391 T391;

/* DS_CELL [INTEGER_32] */
typedef struct S392 T392;

/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S393 T393;

/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S394 T394;

/* ET_TYPE_CHECKER */
typedef struct S396 T396;

/* DS_ARRAYED_LIST [ET_INLINE_AGENT] */
typedef struct S398 T398;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S399 T399;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S400 T400;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S401 T401;

/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
typedef struct S402 T402;

/* ET_NESTED_TYPE_CONTEXT */
typedef struct S403 T403;

/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
typedef struct S404 T404;

/* ET_OBJECT_TEST_SCOPE */
typedef struct S405 T405;

/* ET_OBJECT_TEST_SCOPE_BUILDER */
typedef struct S406 T406;

/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
typedef struct S407 T407;

/* ET_ACROSS_CURSOR_SCOPE */
typedef struct S408 T408;

/* ET_ATTACHMENT_SCOPE */
typedef struct S409 T409;

/* ET_ATTACHMENT_SCOPE_BUILDER */
typedef struct S410 T410;

/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
typedef struct S411 T411;

/* DS_ARRAYED_LIST [ET_INDEXING_TERM] */
typedef struct S412 T412;

/* ET_PRECONDITIONS */
typedef struct S413 T413;

/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE] */
typedef struct S414 T414;

/* ET_FEATURE_LIST */
typedef struct S416 T416;

/* ET_UNKNOWN_GROUP */
typedef struct S418 T418;

/* ET_BASE_TYPE_LIST */
typedef struct S420 T420;

/* ET_KEYWORD */
typedef struct S421 T421;

/* ET_CLASS_CODES */
typedef struct S422 T422;

/* PATH */
typedef struct S423 T423;

/* ARGUMENTS_32 */
typedef struct S425 T425;

/* ET_INTERNAL_ERROR */
typedef struct S426 T426;

/* ST_WORD_WRAPPER */
typedef struct S427 T427;

/* ET_XACE_EXTERNALS */
typedef struct S429 T429;

/* ET_XACE_OPTIONS */
typedef struct S430 T430;

/* XM_ATTRIBUTE */
typedef struct S431 T431;

/* ET_XACE_OPTION_NAMES */
typedef struct S433 T433;

/* ET_XACE_CLUSTER */
typedef struct S435 T435;

/* ET_XACE_CLUSTERS */
typedef struct S436 T436;

/* ET_XACE_MOUNTED_LIBRARY */
typedef struct S437 T437;

/* ET_XACE_MOUNTED_LIBRARIES */
typedef struct S438 T438;

/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S439 T439;

/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
typedef struct S441 T441;

/* ET_XACE_LIBRARY_CONFIG */
typedef struct S443 T443;

/* DS_HASH_TABLE [INTEGER_32, STRING_8] */
typedef struct S444 T444;

/* ET_XACE_CLASS_OPTIONS */
typedef struct S446 T446;

/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
typedef struct S447 T447;

/* ET_XACE_BOOLEAN_EXPECTED_ERROR */
typedef struct S448 T448;

/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
typedef struct S449 T449;

/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
typedef struct S450 T450;

/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
typedef struct S451 T451;

/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S452 T452;

/* UT_COUNTER */
typedef struct S454 T454;

/* KL_AGENT_ROUTINES [ET_CLASS] */
typedef struct S455 T455;

/* [attached] TUPLE [UT_COUNTER] */
typedef struct S456 T456;

/* [attached] TUPLE [KL_AGENT_ROUTINES [ET_CLASS], [attached] PROCEDURE [[attached] TUPLE]] */
typedef struct S457 T457;

/* [attached] TUPLE [ET_UNIVERSE] */
typedef struct S458 T458;

/* [attached] PROCEDURE [[attached] TUPLE [ET_UNIVERSE]] */
typedef struct S459 T459;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]]] */
typedef struct S460 T460;

/* DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
typedef struct S462 T462;

/* ET_DOTNET_ASSEMBLIES */
typedef struct S463 T463;

/* ET_DOTNET_ASSEMBLY */
typedef struct S464 T464;

/* [attached] TUPLE [ET_DOTNET_ASSEMBLY] */
typedef struct S465 T465;

/* [attached] PREDICATE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
typedef struct S466 T466;

/* [attached] PROCEDURE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
typedef struct S467 T467;

/* [attached] TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
typedef struct S468 T468;

/* [attached] TUPLE [ET_INTERNAL_UNIVERSE] */
typedef struct S469 T469;

/* [attached] PROCEDURE [[attached] TUPLE [ET_INTERNAL_UNIVERSE]] */
typedef struct S470 T470;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]], [attached] PREDICATE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]]] */
typedef struct S471 T471;

/* [attached] TUPLE [ET_DOTNET_ASSEMBLIES] */
typedef struct S472 T472;

/* [attached] TUPLE [ET_SYSTEM_PROCESSOR] */
typedef struct S473 T473;

/* ET_LIBRARY */
typedef struct S474 T474;

/* [attached] TUPLE [ET_LIBRARY] */
typedef struct S475 T475;

/* [attached] PROCEDURE [[attached] TUPLE [ET_LIBRARY]] */
typedef struct S476 T476;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]], detachable FUNCTION [[attached] TUPLE, BOOLEAN]] */
typedef struct S477 T477;

/* DS_ARRAYED_LIST_CURSOR [STRING_8] */
typedef struct S478 T478;

/* ET_CLASS_NAME_TESTER */
typedef struct S479 T479;

/* ET_PARENT */
typedef struct S481 T481;

/* ET_PARENT_LIST */
typedef struct S482 T482;

/* ET_CLIENT_LIST */
typedef struct S483 T483;

/* ET_BUILTIN_CONVERT_FEATURE */
typedef struct S484 T484;

/* ET_MASTER_CLASS */
typedef struct S485 T485;

/* DS_HASH_SET [ET_UNIVERSE] */
typedef struct S486 T486;

/* [attached] TUPLE [ET_CLUSTER] */
typedef struct S487 T487;

/* [attached] PROCEDURE [[attached] TUPLE [ET_CLUSTER]] */
typedef struct S488 T488;

/* [attached] TUPLE [ET_XACE_SYSTEM] */
typedef struct S489 T489;

/* DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
typedef struct S490 T490;

/* [attached] TUPLE [ET_AST_PROCESSOR] */
typedef struct S491 T491;

/* [attached] TUPLE [ET_MASTER_CLASS] */
typedef struct S492 T492;

/* [attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]] */
typedef struct S493 T493;

/* [attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S494 T494;

/* [attached] PROCEDURE [[attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
typedef struct S495 T495;

/* ET_ANCESTORS_STATUS_CHECKER */
typedef struct S496 T496;

/* ET_FLATTENING_STATUS_CHECKER */
typedef struct S497 T497;

/* ET_INTERFACE_STATUS_CHECKER */
typedef struct S498 T498;

/* ET_IMPLEMENTATION_STATUS_CHECKER */
typedef struct S499 T499;

/* [attached] PREDICATE [[attached] TUPLE [ET_CLASS]] */
typedef struct S500 T500;

/* [attached] TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
typedef struct S502 T502;

/* [attached] TUPLE [ET_FLATTENING_STATUS_CHECKER] */
typedef struct S503 T503;

/* [attached] TUPLE [ET_INTERFACE_STATUS_CHECKER] */
typedef struct S504 T504;

/* [attached] TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
typedef struct S505 T505;

/* [attached] TUPLE [BOOLEAN] */
typedef struct S506 T506;

/* ET_CLIENT */
typedef struct S507 T507;

/* ET_ATTACHMENT_SEPARATE_KEYWORDS */
typedef struct S508 T508;

/* ET_RENAME_LIST */
typedef struct S509 T509;

/* ET_EXPORT_LIST */
typedef struct S510 T510;

/* ET_KEYWORD_FEATURE_NAME_LIST */
typedef struct S511 T511;

/* ET_LIKE_CURRENT */
typedef struct S514 T514;

/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
typedef struct S515 T515;

/* ET_NONE_GROUP */
typedef struct S516 T516;

/* [attached] TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
typedef struct S517 T517;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLUSTER]]] */
typedef struct S520 T520;

/* [attached] TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
typedef struct S524 T524;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]]] */
typedef struct S525 T525;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]], FUNCTION [[attached] TUPLE [ET_CLASS], BOOLEAN]] */
typedef struct S526 T526;

/* XM_NAMESPACE */
typedef struct S529 T529;

/* KL_ARRAY_ROUTINES [INTEGER_32] */
typedef struct S530 T530;

/* ET_DYNAMIC_PROCEDURE_TYPE */
typedef struct S531 T531;

/* ET_DYNAMIC_FUNCTION_TYPE */
typedef struct S532 T532;

/* ET_DO_PROCEDURE */
typedef struct S533 T533;

/* UT_CONFIG_PARSER */
typedef struct S535 T535;

/* KL_COMPARABLE_COMPARATOR [INTEGER_32] */
typedef struct S536 T536;

/* ET_DEFERRED_PROCEDURE */
typedef struct S539 T539;

/* ET_DYNAMIC_PUSH_TYPE_SET */
typedef struct S540 T540;

/* UTF_CONVERTER */
typedef struct S541 T541;
extern T0* GE_boxed541(T541 a1);
typedef struct Sb541 Tb541;

/* CELL [INTEGER_32] */
typedef struct S542 T542;

/* KL_PATHNAME */
typedef struct S544 T544;

/* READABLE_STRING_32 */
typedef struct S546 T546;

/* SPECIAL [NATURAL_8] */
typedef struct S547 T547;

/* TYPED_POINTER [SPECIAL [NATURAL_8]] */
typedef struct S548 T548;
extern T0* GE_boxed548(T548 a1);
typedef struct Sb548 Tb548;

/* DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
typedef struct S549 T549;

/* SPECIAL [AP_OPTION] */
typedef struct S551 T551;

/* KL_SPECIAL_ROUTINES [AP_OPTION] */
typedef struct S552 T552;

/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S553 T553;

/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S554 T554;

/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S555 T555;

/* detachable DS_LINKABLE [STRING_8] */
typedef struct S556 T556;

/* detachable DS_LINKABLE [BOOLEAN] */
typedef struct S557 T557;

/* DS_LINKED_LIST_CURSOR [BOOLEAN] */
typedef struct S558 T558;

/* detachable DS_LINKABLE [INTEGER_32] */
typedef struct S559 T559;

/* DS_LINKED_LIST_CURSOR [INTEGER_32] */
typedef struct S560 T560;

/* XM_NAMESPACE_RESOLVER */
typedef struct S561 T561;

/* ARRAY [XM_CALLBACKS_FILTER] */
typedef struct S562 T562;

/* SPECIAL [XM_CALLBACKS_FILTER] */
typedef struct S563 T563;

/* XM_CALLBACKS_NULL */
typedef struct S564 T564;

/* DS_HASH_SET [XM_NAMESPACE] */
typedef struct S565 T565;

/* detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8] */
typedef struct S571 T571;

/* SPECIAL [ET_XACE_LIBRARY_CONFIG] */
typedef struct S572 T572;

/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG] */
typedef struct S573 T573;

/* XM_EIFFEL_SCANNER */
typedef struct S574 T574;

/* XM_DEFAULT_POSITION */
typedef struct S575 T575;

/* DS_BILINKED_LIST [XM_POSITION] */
typedef struct S577 T577;

/* DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
typedef struct S578 T578;

/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S579 T579;

/* XM_NULL_EXTERNAL_RESOLVER */
typedef struct S581 T581;

/* XM_DTD_CALLBACKS_NULL */
typedef struct S583 T583;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
typedef struct S584 T584;

/* XM_EIFFEL_PARSER_NAME */
typedef struct S585 T585;

/* SPECIAL [XM_EIFFEL_PARSER_NAME] */
typedef struct S586 T586;

/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S587 T587;

/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
typedef struct S588 T588;

/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S589 T589;

/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
typedef struct S590 T590;

/* XM_DTD_EXTERNAL_ID */
typedef struct S591 T591;

/* SPECIAL [XM_DTD_EXTERNAL_ID] */
typedef struct S592 T592;

/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
typedef struct S593 T593;

/* XM_DTD_ELEMENT_CONTENT */
typedef struct S594 T594;

/* SPECIAL [XM_DTD_ELEMENT_CONTENT] */
typedef struct S595 T595;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S596 T596;

/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S597 T597;

/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S598 T598;

/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S599 T599;

/* XM_DTD_ATTRIBUTE_CONTENT */
typedef struct S600 T600;

/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S601 T601;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
typedef struct S602 T602;

/* DS_BILINKED_LIST [STRING_8] */
typedef struct S603 T603;

/* SPECIAL [DS_BILINKED_LIST [STRING_8]] */
typedef struct S604 T604;

/* KL_SPECIAL_ROUTINES [BOOLEAN] */
typedef struct S605 T605;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
typedef struct S606 T606;

/* XM_EIFFEL_DECLARATION */
typedef struct S607 T607;

/* SPECIAL [XM_EIFFEL_DECLARATION] */
typedef struct S608 T608;

/* XM_EIFFEL_ENTITY_DEF */
typedef struct S611 T611;

/* XM_EIFFEL_SCANNER_DTD */
typedef struct S612 T612;

/* XM_EIFFEL_PE_ENTITY_DEF */
typedef struct S614 T614;

/* DS_HASH_SET_CURSOR [INTEGER_32] */
typedef struct S615 T615;

/* detachable KL_EQUALITY_TESTER [INTEGER_32] */
typedef struct S616 T616;

/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
typedef struct S617 T617;

/* SPECIAL [ET_ECF_LIBRARY] */
typedef struct S618 T618;

/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
typedef struct S621 T621;

/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
typedef struct S622 T622;

/* detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
typedef struct S625 T625;

/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
typedef struct S626 T626;

/* DS_ARRAYED_LIST [ET_ECF_TARGET] */
typedef struct S627 T627;

/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
typedef struct S628 T628;

/* DS_HASH_SET [ET_LIBRARY] */
typedef struct S629 T629;

/* [attached] TUPLE [DS_HASH_SET [ET_LIBRARY]] */
typedef struct S630 T630;

/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S631 T631;

/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
typedef struct S632 T632;

/* detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S634 T634;

/* DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
typedef struct S635 T635;

/* [attached] TYPE [ET_IDENTIFIER] */
#define T636 EIF_TYPE_OBJ

/* DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
typedef struct S637 T637;

/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
typedef struct S640 T640;

/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
typedef struct S641 T641;

/* SPECIAL [ET_MASTER_CLASS] */
typedef struct S642 T642;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
typedef struct S643 T643;

/* SPECIAL [ET_CLASS_NAME] */
typedef struct S644 T644;

/* SPECIAL [ET_DYNAMIC_TYPE] */
typedef struct S645 T645;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
typedef struct S646 T646;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S647 T647;

/* ET_FORMAL_PARAMETER_LIST */
typedef struct S650 T650;

/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S654 T654;

/* ET_BRACKET_SYMBOL */
typedef struct S655 T655;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S657 T657;

/* C_DATE */
typedef struct S658 T658;

/* KL_STDIN_FILE */
typedef struct S659 T659;

/* DS_ARRAYED_STACK [INTEGER_32] */
typedef struct S661 T661;

/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S662 T662;

/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S663 T663;

/* DS_ARRAYED_STACK [detachable ET_KEYWORD] */
typedef struct S664 T664;

/* DS_ARRAYED_STACK [detachable ET_SYMBOL] */
typedef struct S665 T665;

/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
typedef struct S666 T666;

/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST] */
typedef struct S667 T667;

/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
typedef struct S668 T668;

/* DS_ARRAYED_LIST [ET_QUERY] */
typedef struct S669 T669;

/* DS_ARRAYED_LIST [ET_PROCEDURE] */
typedef struct S670 T670;

/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
typedef struct S671 T671;

/* DS_HASH_SET [ET_NAMED_CLASS] */
typedef struct S672 T672;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
typedef struct S673 T673;

/* SPECIAL [detachable ET_KEYWORD] */
typedef struct S674 T674;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
typedef struct S675 T675;

/* ET_AGENT_KEYWORD */
typedef struct S676 T676;

/* SPECIAL [detachable ET_AGENT_KEYWORD] */
typedef struct S677 T677;

/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
typedef struct S678 T678;

/* ET_PRECURSOR_KEYWORD */
typedef struct S679 T679;

/* SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
typedef struct S680 T680;

/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
typedef struct S681 T681;

/* SPECIAL [detachable ET_SYMBOL] */
typedef struct S682 T682;

/* KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
typedef struct S683 T683;

/* SPECIAL [detachable ET_POSITION] */
typedef struct S684 T684;

/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
typedef struct S685 T685;

/* SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
typedef struct S687 T687;

/* KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
typedef struct S688 T688;

/* SPECIAL [detachable ET_BREAK] */
typedef struct S690 T690;

/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
typedef struct S691 T691;

/* SPECIAL [detachable ET_CHARACTER_CONSTANT] */
typedef struct S693 T693;

/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
typedef struct S694 T694;

/* SPECIAL [detachable ET_CURRENT] */
typedef struct S695 T695;

/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
typedef struct S696 T696;

/* ET_FREE_OPERATOR */
typedef struct S697 T697;

/* SPECIAL [detachable ET_FREE_OPERATOR] */
typedef struct S698 T698;

/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
typedef struct S699 T699;

/* SPECIAL [detachable ET_INTEGER_CONSTANT] */
typedef struct S701 T701;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
typedef struct S702 T702;

/* ET_KEYWORD_OPERATOR */
typedef struct S703 T703;

/* SPECIAL [detachable ET_KEYWORD_OPERATOR] */
typedef struct S704 T704;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
typedef struct S705 T705;

/* SPECIAL [detachable ET_MANIFEST_STRING] */
typedef struct S706 T706;

/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
typedef struct S707 T707;

/* SPECIAL [detachable ET_REAL_CONSTANT] */
typedef struct S709 T709;

/* KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
typedef struct S710 T710;

/* SPECIAL [detachable ET_RESULT] */
typedef struct S711 T711;

/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
typedef struct S712 T712;

/* ET_RETRY_INSTRUCTION */
typedef struct S713 T713;

/* SPECIAL [detachable ET_RETRY_INSTRUCTION] */
typedef struct S714 T714;

/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
typedef struct S715 T715;

/* ET_SYMBOL_OPERATOR */
typedef struct S716 T716;

/* SPECIAL [detachable ET_SYMBOL_OPERATOR] */
typedef struct S717 T717;

/* KL_SPECIAL_ROUTINES [detachable ET_VOID] */
typedef struct S718 T718;

/* ET_VOID */
typedef struct S719 T719;

/* SPECIAL [detachable ET_VOID] */
typedef struct S720 T720;

/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
typedef struct S721 T721;

/* ET_SEMICOLON_SYMBOL */
typedef struct S722 T722;

/* SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
typedef struct S723 T723;

/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
typedef struct S724 T724;

/* SPECIAL [detachable ET_BRACKET_SYMBOL] */
typedef struct S725 T725;

/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
typedef struct S726 T726;

/* ET_QUESTION_MARK_SYMBOL */
typedef struct S727 T727;

/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
typedef struct S728 T728;

/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
typedef struct S729 T729;

/* ET_ACROSS_EXPRESSION */
typedef struct S730 T730;

/* SPECIAL [detachable ET_ACROSS_EXPRESSION] */
typedef struct S731 T731;

/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
typedef struct S732 T732;

/* ET_ACROSS_INSTRUCTION */
typedef struct S733 T733;

/* SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
typedef struct S734 T734;

/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S735 T735;

/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S736 T736;

/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef struct S737 T737;

/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef struct S738 T738;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S739 T739;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S740 T740;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S741 T741;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S743 T743;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S744 T744;

/* ET_AGENT_ARGUMENT_OPERAND_LIST */
typedef struct S745 T745;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S746 T746;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
typedef struct S747 T747;

/* SPECIAL [detachable ET_AGENT_TARGET] */
typedef struct S748 T748;

/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
typedef struct S749 T749;

/* ET_ALIAS_NAME */
typedef struct S750 T750;

/* SPECIAL [detachable ET_ALIAS_NAME] */
typedef struct S751 T751;

/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
typedef struct S752 T752;

/* SPECIAL [detachable ET_ASSIGNER] */
typedef struct S754 T754;

/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
typedef struct S755 T755;

/* ET_BRACKET_EXPRESSION */
typedef struct S756 T756;

/* SPECIAL [detachable ET_BRACKET_EXPRESSION] */
typedef struct S757 T757;

/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
typedef struct S758 T758;

/* ET_CALL_AGENT */
typedef struct S759 T759;

/* SPECIAL [detachable ET_CALL_AGENT] */
typedef struct S760 T760;

/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S761 T761;

/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S762 T762;

/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
typedef struct S763 T763;

/* ET_CHECK_INSTRUCTION */
typedef struct S764 T764;

/* SPECIAL [detachable ET_CHECK_INSTRUCTION] */
typedef struct S765 T765;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
typedef struct S766 T766;

/* SPECIAL [detachable ET_CHOICE] */
typedef struct S768 T768;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
typedef struct S769 T769;

/* SPECIAL [detachable ET_CHOICE_CONSTANT] */
typedef struct S771 T771;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
typedef struct S772 T772;

/* SPECIAL [detachable ET_CHOICE_ITEM] */
typedef struct S774 T774;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
typedef struct S775 T775;

/* ET_CHOICE_LIST */
typedef struct S776 T776;

/* SPECIAL [detachable ET_CHOICE_LIST] */
typedef struct S777 T777;

/* KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
typedef struct S778 T778;

/* SPECIAL [detachable ET_CLASS] */
typedef struct S779 T779;

/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
typedef struct S780 T780;

/* SPECIAL [detachable ET_CLIENT_ITEM] */
typedef struct S781 T781;

/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
typedef struct S782 T782;

/* ET_CLIENTS */
typedef struct S783 T783;

/* SPECIAL [detachable ET_CLIENTS] */
typedef struct S784 T784;

/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
typedef struct S785 T785;

/* SPECIAL [detachable ET_COMPOUND] */
typedef struct S786 T786;

/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
typedef struct S787 T787;

/* SPECIAL [detachable ET_CONDITIONAL] */
typedef struct S789 T789;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
typedef struct S790 T790;

/* SPECIAL [detachable ET_CONSTANT] */
typedef struct S791 T791;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S792 T792;

/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S794 T794;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S795 T795;

/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
typedef struct S796 T796;

/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S797 T797;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
typedef struct S798 T798;

/* ET_CONSTRAINT_CREATOR */
typedef struct S799 T799;

/* SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
typedef struct S800 T800;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
typedef struct S801 T801;

/* SPECIAL [detachable ET_CONSTRAINT_TYPE] */
typedef struct S803 T803;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
typedef struct S804 T804;

/* SPECIAL [detachable ET_CONVERT_FEATURE] */
typedef struct S806 T806;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
typedef struct S807 T807;

/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
typedef struct S809 T809;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
typedef struct S810 T810;

/* ET_CONVERT_FEATURE_LIST */
typedef struct S811 T811;

/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
typedef struct S812 T812;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
typedef struct S813 T813;

/* SPECIAL [detachable ET_CREATE_EXPRESSION] */
typedef struct S814 T814;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
typedef struct S815 T815;

/* ET_CREATOR */
typedef struct S816 T816;

/* SPECIAL [detachable ET_CREATOR] */
typedef struct S817 T817;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
typedef struct S818 T818;

/* ET_CREATOR_LIST */
typedef struct S819 T819;

/* SPECIAL [detachable ET_CREATOR_LIST] */
typedef struct S820 T820;

/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
typedef struct S821 T821;

/* ET_DEBUG_INSTRUCTION */
typedef struct S822 T822;

/* SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
typedef struct S823 T823;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
typedef struct S824 T824;

/* ET_ELSEIF_EXPRESSION */
typedef struct S825 T825;

/* SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
typedef struct S826 T826;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
typedef struct S827 T827;

/* ET_ELSEIF_EXPRESSION_LIST */
typedef struct S828 T828;

/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
typedef struct S829 T829;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
typedef struct S830 T830;

/* ET_ELSEIF_PART */
typedef struct S831 T831;

/* SPECIAL [detachable ET_ELSEIF_PART] */
typedef struct S832 T832;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
typedef struct S833 T833;

/* ET_ELSEIF_PART_LIST */
typedef struct S834 T834;

/* SPECIAL [detachable ET_ELSEIF_PART_LIST] */
typedef struct S835 T835;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
typedef struct S836 T836;

/* SPECIAL [detachable ET_EXPORT] */
typedef struct S838 T838;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
typedef struct S839 T839;

/* SPECIAL [detachable ET_EXPORT_LIST] */
typedef struct S840 T840;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
typedef struct S841 T841;

/* SPECIAL [detachable ET_EXPRESSION] */
typedef struct S842 T842;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
typedef struct S843 T843;

/* SPECIAL [detachable ET_EXPRESSION_ITEM] */
typedef struct S844 T844;

/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
typedef struct S845 T845;

/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
typedef struct S846 T846;

/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
typedef struct S847 T847;

/* SPECIAL [detachable ET_EXTERNAL_ALIAS] */
typedef struct S849 T849;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
typedef struct S850 T850;

/* ET_FEATURE_CLAUSE */
typedef struct S851 T851;

/* SPECIAL [detachable ET_FEATURE_CLAUSE] */
typedef struct S852 T852;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
typedef struct S853 T853;

/* ET_FEATURE_CLAUSE_LIST */
typedef struct S854 T854;

/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
typedef struct S855 T855;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
typedef struct S856 T856;

/* ET_FEATURE_EXPORT */
typedef struct S857 T857;

/* SPECIAL [detachable ET_FEATURE_EXPORT] */
typedef struct S858 T858;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
typedef struct S859 T859;

/* SPECIAL [detachable ET_FEATURE_NAME] */
typedef struct S860 T860;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
typedef struct S861 T861;

/* SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
typedef struct S863 T863;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
typedef struct S864 T864;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT] */
typedef struct S865 T865;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S866 T866;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S868 T868;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S869 T869;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S870 T870;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
typedef struct S871 T871;

/* ET_FORMAL_PARAMETER */
typedef struct S872 T872;

/* SPECIAL [detachable ET_FORMAL_PARAMETER] */
typedef struct S873 T873;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef struct S874 T874;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef struct S876 T876;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
typedef struct S877 T877;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
typedef struct S878 T878;

/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
typedef struct S879 T879;

/* ET_IF_EXPRESSION */
typedef struct S880 T880;

/* SPECIAL [detachable ET_IF_EXPRESSION] */
typedef struct S881 T881;

/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
typedef struct S882 T882;

/* ET_IF_INSTRUCTION */
typedef struct S883 T883;

/* SPECIAL [detachable ET_IF_INSTRUCTION] */
typedef struct S884 T884;

/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST] */
typedef struct S885 T885;

/* ET_INDEXING_LIST */
typedef struct S886 T886;

/* SPECIAL [detachable ET_INDEXING_LIST] */
typedef struct S887 T887;

/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM] */
typedef struct S888 T888;

/* SPECIAL [detachable ET_INDEXING_ITEM] */
typedef struct S890 T890;

/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM] */
typedef struct S891 T891;

/* SPECIAL [detachable ET_INDEXING_TERM] */
typedef struct S893 T893;

/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM] */
typedef struct S894 T894;

/* SPECIAL [detachable ET_INDEXING_TERM_ITEM] */
typedef struct S896 T896;

/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST] */
typedef struct S897 T897;

/* ET_INDEXING_TERM_LIST */
typedef struct S898 T898;

/* SPECIAL [detachable ET_INDEXING_TERM_LIST] */
typedef struct S899 T899;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
typedef struct S900 T900;

/* SPECIAL [detachable ET_INLINE_AGENT] */
typedef struct S902 T902;

/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
typedef struct S903 T903;

/* ET_INSPECT_INSTRUCTION */
typedef struct S904 T904;

/* SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
typedef struct S905 T905;

/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
typedef struct S906 T906;

/* SPECIAL [detachable ET_INSTRUCTION] */
typedef struct S908 T908;

/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
typedef struct S909 T909;

/* ET_INVARIANTS */
typedef struct S910 T910;

/* SPECIAL [detachable ET_INVARIANTS] */
typedef struct S911 T911;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S912 T912;

/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S913 T913;

/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
typedef struct S914 T914;

/* SPECIAL [detachable ET_LIKE_TYPE] */
typedef struct S916 T916;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
typedef struct S917 T917;

/* ET_LOCAL_VARIABLE */
typedef struct S918 T918;

/* SPECIAL [detachable ET_LOCAL_VARIABLE] */
typedef struct S919 T919;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef struct S920 T920;

/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef struct S922 T922;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S923 T923;

/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S924 T924;

/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
typedef struct S925 T925;

/* ET_LOOP_INVARIANTS */
typedef struct S926 T926;

/* SPECIAL [detachable ET_LOOP_INVARIANTS] */
typedef struct S927 T927;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
typedef struct S928 T928;

/* ET_MANIFEST_ARRAY */
typedef struct S929 T929;

/* SPECIAL [detachable ET_MANIFEST_ARRAY] */
typedef struct S930 T930;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
typedef struct S931 T931;

/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
typedef struct S933 T933;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
typedef struct S934 T934;

/* ET_MANIFEST_STRING_LIST */
typedef struct S935 T935;

/* SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
typedef struct S936 T936;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
typedef struct S937 T937;

/* SPECIAL [detachable ET_MANIFEST_TUPLE] */
typedef struct S938 T938;

/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
typedef struct S939 T939;

/* SPECIAL [detachable ET_OBSOLETE] */
typedef struct S941 T941;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef struct S942 T942;

/* ET_PARENTHESIZED_EXPRESSION */
typedef struct S943 T943;

/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef struct S944 T944;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
typedef struct S945 T945;

/* SPECIAL [detachable ET_PARENT] */
typedef struct S946 T946;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
typedef struct S947 T947;

/* ET_PARENT_CLAUSE_LIST */
typedef struct S948 T948;

/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
typedef struct S949 T949;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
typedef struct S950 T950;

/* SPECIAL [detachable ET_PARENT_ITEM] */
typedef struct S951 T951;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
typedef struct S952 T952;

/* SPECIAL [detachable ET_PARENT_LIST] */
typedef struct S953 T953;

/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
typedef struct S954 T954;

/* ET_POSTCONDITIONS */
typedef struct S955 T955;

/* SPECIAL [detachable ET_POSTCONDITIONS] */
typedef struct S956 T956;

/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
typedef struct S957 T957;

/* SPECIAL [detachable ET_PRECONDITIONS] */
typedef struct S958 T958;

/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
typedef struct S959 T959;

/* SPECIAL [detachable ET_PROCEDURE] */
typedef struct S960 T960;

/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S961 T961;

/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S963 T963;

/* KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
typedef struct S964 T964;

/* SPECIAL [detachable ET_QUERY] */
typedef struct S965 T965;

/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
typedef struct S966 T966;

/* SPECIAL [detachable ET_RENAME_ITEM] */
typedef struct S968 T968;

/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
typedef struct S969 T969;

/* SPECIAL [detachable ET_RENAME_LIST] */
typedef struct S970 T970;

/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
typedef struct S971 T971;

/* ET_STATIC_CALL_EXPRESSION */
typedef struct S972 T972;

/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
typedef struct S973 T973;

/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
typedef struct S974 T974;

/* ET_STRIP_EXPRESSION */
typedef struct S975 T975;

/* SPECIAL [detachable ET_STRIP_EXPRESSION] */
typedef struct S976 T976;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
typedef struct S977 T977;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
typedef struct S978 T978;

/* SPECIAL [detachable ET_TYPE_ITEM] */
typedef struct S980 T980;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
typedef struct S981 T981;

/* SPECIAL [detachable ET_TYPE_LIST] */
typedef struct S983 T983;

/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
typedef struct S984 T984;

/* ET_VARIANT */
typedef struct S985 T985;

/* SPECIAL [detachable ET_VARIANT] */
typedef struct S986 T986;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
typedef struct S987 T987;

/* ET_WHEN_PART */
typedef struct S988 T988;

/* SPECIAL [detachable ET_WHEN_PART] */
typedef struct S989 T989;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
typedef struct S990 T990;

/* ET_WHEN_PART_LIST */
typedef struct S991 T991;

/* SPECIAL [detachable ET_WHEN_PART_LIST] */
typedef struct S992 T992;

/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
typedef struct S993 T993;

/* SPECIAL [detachable ET_WRITABLE] */
typedef struct S994 T994;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
typedef struct S995 T995;

/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
typedef struct S996 T996;

/* ET_PARENT_CHECKER1 */
typedef struct S997 T997;

/* ET_FORMAL_PARAMETER_CHECKER1 */
typedef struct S998 T998;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S999 T999;

/* ET_FEATURE_NAME_TESTER */
typedef struct S1000 T1000;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1002 T1002;

/* ET_ALIAS_NAME_TESTER */
typedef struct S1003 T1003;

/* DS_ARRAYED_LIST [ET_CLIENT_LIST] */
typedef struct S1005 T1005;

/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
typedef struct S1006 T1006;

/* ET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1007 T1007;

/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1008 T1008;

/* ET_IDENTIFIER_TYPE_RESOLVER */
typedef struct S1009 T1009;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
typedef struct S1010 T1010;

/* ET_ANCHORED_TYPE_CHECKER */
typedef struct S1011 T1011;

/* ET_SIGNATURE_CHECKER */
typedef struct S1012 T1012;

/* ET_PARENT_CHECKER2 */
typedef struct S1013 T1013;

/* ET_FORMAL_PARAMETER_CHECKER2 */
typedef struct S1014 T1014;

/* ET_BUILTIN_FEATURE_CHECKER */
typedef struct S1015 T1015;

/* ET_PRECURSOR_CHECKER */
typedef struct S1016 T1016;

/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
typedef struct S1017 T1017;

/* DS_HASH_SET [ET_CLASS] */
typedef struct S1018 T1018;

/* ET_PARENT_CHECKER3 */
typedef struct S1019 T1019;

/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
typedef struct S1020 T1020;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
typedef struct S1021 T1021;

/* ET_PARENT_FEATURE */
typedef struct S1023 T1023;

/* ET_INHERITED_FEATURE */
typedef struct S1024 T1024;

/* DS_HASH_SET [ET_PROCEDURE] */
typedef struct S1025 T1025;

/* DS_HASH_SET [ET_QUERY] */
typedef struct S1026 T1026;

/* ET_SUPPLIER_BUILDER */
typedef struct S1027 T1027;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
typedef struct S1028 T1028;

/* DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
typedef struct S1029 T1029;

/* ET_SYSTEM_ERROR */
typedef struct S1031 T1031;

/* ET_VALIDITY_ERROR */
typedef struct S1032 T1032;

/* SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef struct S1034 T1034;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
typedef struct S1035 T1035;

/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
typedef struct S1036 T1036;

/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
typedef struct S1037 T1037;

/* detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S1039 T1039;

/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S1040 T1040;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S1041 T1041;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S1042 T1042;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S1043 T1043;

/* SPECIAL [ET_OBJECT_TEST] */
typedef struct S1045 T1045;

/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
typedef struct S1046 T1046;

/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
typedef struct S1047 T1047;

/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S1048 T1048;

/* KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S1049 T1049;

/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S1050 T1050;

/* SPECIAL [ET_EQUALITY_EXPRESSION] */
typedef struct S1051 T1051;

/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
typedef struct S1052 T1052;

/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
typedef struct S1053 T1053;

/* SPECIAL [ET_AGENT] */
typedef struct S1054 T1054;

/* KL_SPECIAL_ROUTINES [ET_AGENT] */
typedef struct S1055 T1055;

/* DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
typedef struct S1056 T1056;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S1058 T1058;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S1059 T1059;

/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S1060 T1060;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S1061 T1061;

/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE] */
typedef struct S1063 T1063;

/* SPECIAL [ET_FEATURE] */
typedef struct S1064 T1064;

/* KL_SPECIAL_ROUTINES [ET_FEATURE] */
typedef struct S1065 T1065;

/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef struct S1066 T1066;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
typedef struct S1068 T1068;

/* SPECIAL [ET_INLINE_CONSTANT] */
typedef struct S1069 T1069;

/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
typedef struct S1071 T1071;

/* SPECIAL [detachable ET_DYNAMIC_FEATURE] */
typedef struct S1072 T1072;

/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
typedef struct S1074 T1074;

/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
typedef struct S1075 T1075;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
typedef struct S1076 T1076;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
typedef struct S1077 T1077;

/* RX_BYTE_CODE */
typedef struct S1081 T1081;

/* RX_CHARACTER_SET */
typedef struct S1082 T1082;

/* RX_CASE_MAPPING */
typedef struct S1083 T1083;

/* ARRAY [RX_CHARACTER_SET] */
typedef struct S1085 T1085;

/* SPECIAL [RX_CHARACTER_SET] */
typedef struct S1086 T1086;

/* TYPED_POINTER [ANY] */
typedef struct S1087 T1087;
extern T0* GE_boxed1087(T1087 a1);
typedef struct Sb1087 Tb1087;

/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1088 T1088;

/* ARRAY [BOOLEAN] */
typedef struct S1089 T1089;

/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S1092 T1092;

/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
typedef struct S1094 T1094;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S1095 T1095;

/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S1096 T1096;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S1097 T1097;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S1098 T1098;

/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S1099 T1099;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S1100 T1100;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S1101 T1101;

/* DS_ARRAYED_LIST [ET_FEATURE] */
typedef struct S1102 T1102;

/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S1103 T1103;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S1104 T1104;

/* SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S1105 T1105;

/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
typedef struct S1106 T1106;

/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
typedef struct S1107 T1107;

/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
typedef struct S1108 T1108;

/* ET_NAMED_OBJECT_TEST */
typedef struct S1111 T1111;

/* SPECIAL [ET_NAMED_OBJECT_TEST] */
typedef struct S1112 T1112;

/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
typedef struct S1113 T1113;

/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
typedef struct S1114 T1114;

/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
typedef struct S1115 T1115;

/* SPECIAL [ET_ACROSS_COMPONENT] */
typedef struct S1118 T1118;

/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT] */
typedef struct S1119 T1119;

/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT] */
typedef struct S1120 T1120;

/* SPECIAL [ET_ATTACHMENT_SCOPE] */
typedef struct S1122 T1122;

/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
typedef struct S1123 T1123;

/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
typedef struct S1124 T1124;

/* DS_ARRAYED_LIST_CURSOR [ET_INDEXING_TERM] */
typedef struct S1125 T1125;

/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE] */
typedef struct S1126 T1126;

/* SPECIAL [ET_ASSERTIONS] */
typedef struct S1127 T1127;

/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS] */
typedef struct S1129 T1129;

/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
typedef struct S1130 T1130;

/* STRING_TO_INTEGER_CONVERTOR */
typedef struct S1131 T1131;

/* ET_CLUSTERS */
typedef struct S1133 T1133;

/* UC_UNICODE_ROUTINES */
typedef struct S1134 T1134;

/* ET_XACE_FEATURE_OPTIONS */
typedef struct S1135 T1135;

/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
typedef struct S1136 T1136;

/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
typedef struct S1137 T1137;

/* ET_XACE_MISSING_ATTRIBUTE_ERROR */
typedef struct S1138 T1138;

/* ET_XACE_UNKNOWN_ELEMENT_ERROR */
typedef struct S1139 T1139;

/* ET_XACE_MISSING_ELEMENT_ERROR */
typedef struct S1140 T1140;

/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
typedef struct S1141 T1141;

/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
typedef struct S1142 T1142;

/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
typedef struct S1143 T1143;

/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S1144 T1144;

/* UT_TRISTATE */
typedef struct S1147 T1147;

/* KL_AGENT_ROUTINES [ANY] */
typedef struct S1148 T1148;

/* [attached] TUPLE [UT_TRISTATE] */
typedef struct S1149 T1149;

/* [attached] TUPLE [KL_AGENT_ROUTINES [ANY], [attached] PROCEDURE [[attached] TUPLE]] */
typedef struct S1150 T1150;

/* [attached] PREDICATE [[attached] TUPLE [ET_MASTER_CLASS]] */
typedef struct S1151 T1151;

/* [attached] PREDICATE [[attached] TUPLE] */
typedef struct S1152 T1152;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]], detachable FUNCTION [[attached] TUPLE, BOOLEAN]] */
typedef struct S1154 T1154;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]], FUNCTION [[attached] TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
typedef struct S1155 T1155;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]], FUNCTION [[attached] TUPLE [ET_MASTER_CLASS], BOOLEAN], detachable FUNCTION [[attached] TUPLE, BOOLEAN]] */
typedef struct S1156 T1156;

/* ET_ECF_CLUSTER */
typedef struct S1157 T1157;

/* ET_ECF_CLUSTERS */
typedef struct S1158 T1158;

/* ET_ECF_ADAPTED_LIBRARIES */
typedef struct S1159 T1159;

/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
typedef struct S1160 T1160;

/* ET_ECF_FILE_RULE */
typedef struct S1161 T1161;

/* ET_ECF_FILE_RULES */
typedef struct S1162 T1162;

/* ET_ECF_EXTERNAL_INCLUDE */
typedef struct S1163 T1163;

/* ET_ECF_EXTERNAL_INCLUDES */
typedef struct S1164 T1164;

/* ET_ECF_EXTERNAL_OBJECT */
typedef struct S1165 T1165;

/* ET_ECF_EXTERNAL_OBJECTS */
typedef struct S1166 T1166;

/* ET_ECF_EXTERNAL_LIBRARY */
typedef struct S1167 T1167;

/* ET_ECF_EXTERNAL_LIBRARIES */
typedef struct S1168 T1168;

/* ET_ECF_SETTINGS */
typedef struct S1170 T1170;

/* ET_ECF_OPTIONS */
typedef struct S1171 T1171;

/* ET_ECF_CONDITIONS */
typedef struct S1172 T1172;

/* ET_ECF_ROOT_CLASS */
typedef struct S1173 T1173;

/* ET_ECF_ROOT_ALL_CLASSES */
typedef struct S1174 T1174;

/* ET_ECF_PLATFORM_CONDITION */
typedef struct S1176 T1176;

/* ET_ECF_BUILD_CONDITION */
typedef struct S1177 T1177;

/* ET_ECF_MULTITHREADED_CONDITION */
typedef struct S1178 T1178;

/* ET_ECF_CONCURRENCY_CONDITION */
typedef struct S1179 T1179;

/* ET_ECF_DOTNET_CONDITION */
typedef struct S1180 T1180;

/* ET_ECF_DYNAMIC_RUNTIME_CONDITION */
typedef struct S1181 T1181;

/* ET_ECF_CUSTOM_CONDITION */
typedef struct S1182 T1182;

/* ET_ECF_COMPILER_VERSION_CONDITION */
typedef struct S1184 T1184;

/* [attached] TUPLE [ET_ECF_SYSTEM] */
typedef struct S1185 T1185;

/* [attached] TUPLE [ET_LACE_SYSTEM] */
typedef struct S1186 T1186;

/* ET_PARENTHESIS_EXPRESSION */
typedef struct S1187 T1187;

/* ET_REGULAR_MANIFEST_STRING */
typedef struct S1191 T1191;

/* ET_INFIX_FREE_NAME */
typedef struct S1192 T1192;

/* TYPED_POINTER [NATURAL_8] */
typedef struct S1194 T1194;
extern T0* GE_boxed1194(T1194 a1);
typedef struct Sb1194 Tb1194;

/* EXCEPTIONS */
typedef struct S1195 T1195;

/* XM_LINKED_LIST [XM_DOCUMENT_NODE] */
typedef struct S1196 T1196;

/* XM_LINKED_LIST [XM_ELEMENT_NODE] */
typedef struct S1198 T1198;

/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S1202 T1202;

/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S1203 T1203;

/* DS_PAIR [XM_POSITION, XM_NODE] */
typedef struct S1204 T1204;

/* UC_UTF8_ROUTINES */
typedef struct S1205 T1205;

/* UC_UTF8_STRING */
typedef struct S1206 T1206;

/* XM_EIFFEL_INPUT_STREAM */
typedef struct S1207 T1207;

/* [attached] TYPE [INTEGER_32] */
#define T1210 EIF_TYPE_OBJ

/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
typedef struct S1211 T1211;

/* KL_CHARACTER_BUFFER */
typedef struct S1214 T1214;

/* [attached] TUPLE [ET_LACE_CLUSTER] */
typedef struct S1215 T1215;

/* ET_CLUSTER_DEPENDENCE_CONSTRAINT */
typedef struct S1216 T1216;

/* KL_STRING_INPUT_STREAM */
typedef struct S1217 T1217;

/* ET_TEXT_GROUP */
typedef struct S1218 T1218;

/* ET_OBJECT_TEST_LIST */
typedef struct S1221 T1221;

/* ET_ACROSS_COMPONENT_LIST */
typedef struct S1222 T1222;

/* ET_C3_CHARACTER_CONSTANT */
typedef struct S1223 T1223;

/* ET_VERBATIM_STRING */
typedef struct S1224 T1224;

/* ET_SPECIAL_MANIFEST_STRING */
typedef struct S1225 T1225;

/* ET_REGULAR_INTEGER_CONSTANT */
typedef struct S1226 T1226;

/* ET_UNDERSCORED_INTEGER_CONSTANT */
typedef struct S1227 T1227;

/* ET_HEXADECIMAL_INTEGER_CONSTANT */
typedef struct S1228 T1228;

/* ET_OCTAL_INTEGER_CONSTANT */
typedef struct S1229 T1229;

/* ET_BINARY_INTEGER_CONSTANT */
typedef struct S1230 T1230;

/* ET_REGULAR_REAL_CONSTANT */
typedef struct S1231 T1231;

/* ET_UNDERSCORED_REAL_CONSTANT */
typedef struct S1232 T1232;

/* ET_TRUE_CONSTANT */
typedef struct S1234 T1234;

/* ET_FALSE_CONSTANT */
typedef struct S1235 T1235;

/* ET_C1_CHARACTER_CONSTANT */
typedef struct S1236 T1236;

/* ET_C2_CHARACTER_CONSTANT */
typedef struct S1237 T1237;

/* ET_TAGGED_INDEXING */
typedef struct S1239 T1239;

/* ET_INDEXING */
typedef struct S1240 T1240;

/* ET_CUSTOM_ATTRIBUTE */
typedef struct S1241 T1241;

/* ET_CONSTRAINED_FORMAL_PARAMETER */
typedef struct S1242 T1242;

/* ET_CONSTRAINT_NAMED_TYPE */
typedef struct S1243 T1243;

/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD */
typedef struct S1244 T1244;

/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
typedef struct S1245 T1245;

/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S1246 T1246;

/* ET_RENAME */
typedef struct S1247 T1247;

/* ET_ALL_EXPORT */
typedef struct S1248 T1248;

/* ET_CONVERT_FUNCTION */
typedef struct S1250 T1250;

/* ET_CONVERT_PROCEDURE */
typedef struct S1251 T1251;

/* ET_DO_FUNCTION */
typedef struct S1253 T1253;

/* ET_ONCE_FUNCTION */
typedef struct S1254 T1254;

/* ET_DEFERRED_FUNCTION */
typedef struct S1255 T1255;

/* ET_ONCE_PROCEDURE */
typedef struct S1257 T1257;

/* ET_EXTERNAL_PROCEDURE */
typedef struct S1258 T1258;

/* ET_PREFIX_NAME */
typedef struct S1259 T1259;

/* ET_PREFIX_FREE_NAME */
typedef struct S1260 T1260;

/* ET_INFIX_NAME */
typedef struct S1261 T1261;

/* ET_ALIASED_FEATURE_NAME */
typedef struct S1262 T1262;

/* ET_ALIAS_FREE_NAME */
typedef struct S1263 T1263;

/* ET_LABELED_ACTUAL_PARAMETER */
typedef struct S1266 T1266;

/* ET_LIKE_FEATURE */
typedef struct S1268 T1268;

/* ET_QUALIFIED_LIKE_BRACED_TYPE */
typedef struct S1269 T1269;

/* ET_QUALIFIED_LIKE_TYPE */
typedef struct S1270 T1270;

/* ET_ASSIGNER_INSTRUCTION */
typedef struct S1271 T1271;

/* ET_ASSIGNMENT */
typedef struct S1272 T1272;

/* ET_ASSIGNMENT_ATTEMPT */
typedef struct S1273 T1273;

/* ET_LOOP_INSTRUCTION */
typedef struct S1274 T1274;

/* ET_NULL_INSTRUCTION */
typedef struct S1275 T1275;

/* ET_BANG_INSTRUCTION */
typedef struct S1276 T1276;

/* ET_CREATE_INSTRUCTION */
typedef struct S1277 T1277;

/* ET_CHOICE_RANGE */
typedef struct S1278 T1278;

/* ET_PRECURSOR_INSTRUCTION */
typedef struct S1279 T1279;

/* ET_STATIC_CALL_INSTRUCTION */
typedef struct S1281 T1281;

/* ET_PRECURSOR_EXPRESSION */
typedef struct S1282 T1282;

/* ET_FEATURE_ADDRESS */
typedef struct S1283 T1283;

/* ET_CURRENT_ADDRESS */
typedef struct S1284 T1284;

/* ET_RESULT_ADDRESS */
typedef struct S1285 T1285;

/* ET_EXPRESSION_ADDRESS */
typedef struct S1286 T1286;

/* ET_INFIX_EXPRESSION */
typedef struct S1287 T1287;

/* ET_INFIX_AND_THEN_OPERATOR */
typedef struct S1288 T1288;

/* ET_INFIX_OR_ELSE_OPERATOR */
typedef struct S1289 T1289;

/* ET_MANIFEST_TYPE */
typedef struct S1290 T1290;

/* ET_PREFIX_EXPRESSION */
typedef struct S1291 T1291;

/* ET_OLD_EXPRESSION */
typedef struct S1292 T1292;

/* ET_OLD_OBJECT_TEST */
typedef struct S1293 T1293;

/* ET_ONCE_MANIFEST_STRING */
typedef struct S1294 T1294;

/* ET_DO_FUNCTION_INLINE_AGENT */
typedef struct S1295 T1295;

/* ET_ONCE_FUNCTION_INLINE_AGENT */
typedef struct S1296 T1296;

/* ET_EXTERNAL_FUNCTION_INLINE_AGENT */
typedef struct S1297 T1297;

/* ET_DO_PROCEDURE_INLINE_AGENT */
typedef struct S1298 T1298;

/* ET_ONCE_PROCEDURE_INLINE_AGENT */
typedef struct S1299 T1299;

/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
typedef struct S1300 T1300;

/* ET_AGENT_OPEN_TARGET */
typedef struct S1301 T1301;

/* ET_AGENT_TYPED_OPEN_ARGUMENT */
typedef struct S1302 T1302;

/* ET_TAGGED_ASSERTION */
typedef struct S1304 T1304;

/* ET_FILE_POSITION */
typedef struct S1305 T1305;

/* DS_QUICK_SORTER [ET_QUERY] */
typedef struct S1306 T1306;

/* DS_QUICK_SORTER [ET_PROCEDURE] */
typedef struct S1307 T1307;

/* ET_REDECLARED_FEATURE */
typedef struct S1309 T1309;

/* ET_FEATURE_IDS */
typedef struct S1310 T1310;

/* CONSOLE */
typedef struct S1316 T1316;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S1317 T1317;

/* ET_LIKE_N */
typedef struct S1319 T1319;

/* SPECIAL [ET_BASE_TYPE] */
typedef struct S1320 T1320;

/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
typedef struct S1321 T1321;

/* ARRAY [IMMUTABLE_STRING_32] */
typedef struct S1322 T1322;

/* SPECIAL [IMMUTABLE_STRING_32] */
typedef struct S1323 T1323;

/* detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
typedef struct S1324 T1324;

/* DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
typedef struct S1325 T1325;

/* [attached] TUPLE [ET_XACE_CLUSTER] */
typedef struct S1326 T1326;

/* SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S1327 T1327;

/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S1328 T1328;

/* DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S1329 T1329;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
typedef struct S1331 T1331;

/* DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
typedef struct S1333 T1333;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
typedef struct S1334 T1334;

/* SPECIAL [ET_DOTNET_ASSEMBLY] */
typedef struct S1335 T1335;

/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
typedef struct S1337 T1337;

/* ET_BRACED_TYPE_LIST */
typedef struct S1339 T1339;

/* DS_ARRAYED_LIST [ET_MASTER_CLASS] */
typedef struct S1340 T1340;

/* DS_HASH_SET_CURSOR [ET_UNIVERSE] */
typedef struct S1341 T1341;

/* SPECIAL [ET_UNIVERSE] */
typedef struct S1342 T1342;

/* KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
typedef struct S1344 T1344;

/* DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
typedef struct S1345 T1345;

/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
typedef struct S1347 T1347;

/* SPECIAL [ET_INTERNAL_UNIVERSE] */
typedef struct S1348 T1348;

/* ET_CLASS_TYPE_STATUS_CHECKER1 */
typedef struct S1349 T1349;

/* ET_CLASS_TYPE_STATUS_CHECKER2 */
typedef struct S1350 T1350;

/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
typedef struct S1351 T1351;

/* ET_CLASS_TYPE_STATUS_CHECKER3 */
typedef struct S1352 T1352;

/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
typedef struct S1353 T1353;

/* DS_ARRAYED_STACK [YY_BUFFER] */
typedef struct S1354 T1354;

/* UT_SYNTAX_ERROR */
typedef struct S1355 T1355;

/* UT_TOO_MANY_INCLUDES_ERROR */
typedef struct S1356 T1356;

/* ET_DYNAMIC_TARGET_LIST */
typedef struct S1358 T1358;

/* XM_NAMESPACE_RESOLVER_CONTEXT */
typedef struct S1359 T1359;

/* DS_LINKED_QUEUE [STRING_8] */
typedef struct S1361 T1361;

/* detachable KL_EQUALITY_TESTER [XM_NAMESPACE] */
typedef struct S1362 T1362;

/* DS_HASH_SET_CURSOR [XM_NAMESPACE] */
typedef struct S1363 T1363;

/* KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
typedef struct S1364 T1364;

/* SPECIAL [XM_NAMESPACE] */
typedef struct S1365 T1365;

/* XM_EIFFEL_CHARACTER_ENTITY */
typedef struct S1366 T1366;

/* detachable DS_BILINKABLE [XM_POSITION] */
typedef struct S1367 T1367;

/* DS_BILINKED_LIST_CURSOR [XM_POSITION] */
typedef struct S1368 T1368;

/* detachable DS_LINKABLE [XM_EIFFEL_SCANNER] */
typedef struct S1369 T1369;

/* SPECIAL [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1370 T1370;

/* detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S1373 T1373;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1374 T1374;

/* detachable KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
typedef struct S1375 T1375;

/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
typedef struct S1376 T1376;

/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1377 T1377;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1378 T1378;

/* detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1379 T1379;

/* DS_BILINKED_LIST_CURSOR [STRING_8] */
typedef struct S1380 T1380;

/* detachable DS_BILINKABLE [STRING_8] */
typedef struct S1381 T1381;

/* SPECIAL [ET_ECF_TARGET] */
typedef struct S1382 T1382;

/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
typedef struct S1383 T1383;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
typedef struct S1384 T1384;

/* SPECIAL [ET_ADAPTED_LIBRARY] */
typedef struct S1385 T1385;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
typedef struct S1386 T1386;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
typedef struct S1387 T1387;

/* DS_HASH_SET_CURSOR [ET_LIBRARY] */
typedef struct S1388 T1388;

/* KL_SPECIAL_ROUTINES [ET_LIBRARY] */
typedef struct S1389 T1389;

/* SPECIAL [ET_LIBRARY] */
typedef struct S1390 T1390;

/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1391 T1391;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1392 T1392;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1393 T1393;

/* SPECIAL [NATIVE_STRING] */
typedef struct S1394 T1394;

/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
typedef struct S1395 T1395;

/* SPECIAL [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1396 T1396;

/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1397 T1397;

/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST] */
typedef struct S1398 T1398;

/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST] */
typedef struct S1399 T1399;

/* SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S1400 T1400;

/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
typedef struct S1401 T1401;

/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
typedef struct S1402 T1402;

/* DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
typedef struct S1403 T1403;

/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
typedef struct S1404 T1404;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1405 T1405;

/* SPECIAL [ET_NAMED_CLASS] */
typedef struct S1406 T1406;

/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
typedef struct S1408 T1408;

/* DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
typedef struct S1410 T1410;

/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
typedef struct S1411 T1411;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
typedef struct S1414 T1414;

/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
typedef struct S1415 T1415;

/* ET_FORMAL_PARAMETER_TYPE */
typedef struct S1416 T1416;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1417 T1417;

/* SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S1418 T1418;

/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
typedef struct S1421 T1421;

/* detachable DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1423 T1423;

/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
typedef struct S1424 T1424;

/* SPECIAL [ET_CLIENT_LIST] */
typedef struct S1425 T1425;

/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
typedef struct S1426 T1426;

/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
typedef struct S1428 T1428;

/* KL_SPECIAL_ROUTINES [ET_CLIENT] */
typedef struct S1429 T1429;

/* SPECIAL [ET_CLIENT] */
typedef struct S1430 T1430;

/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME] */
typedef struct S1431 T1431;

/* ET_CALL_NAME_TESTER */
typedef struct S1432 T1432;

/* DS_HASH_SET [ET_CALL_NAME] */
typedef struct S1434 T1434;

/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME] */
typedef struct S1435 T1435;

/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME] */
typedef struct S1436 T1436;

/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1437 T1437;

/* ET_REPLICATED_FEATURE */
typedef struct S1439 T1439;

/* DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
typedef struct S1440 T1440;

/* DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
typedef struct S1441 T1441;

/* ET_DOTNET_SIGNATURE_TESTER */
typedef struct S1442 T1442;

/* DS_HASH_SET [ET_DOTNET_FEATURE] */
typedef struct S1443 T1443;

/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1445 T1445;

/* DS_LINKED_LIST [ET_DOTNET_FEATURE] */
typedef struct S1447 T1447;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
typedef struct S1448 T1448;

/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
typedef struct S1449 T1449;

/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1450 T1450;

/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE] */
typedef struct S1451 T1451;

/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
typedef struct S1452 T1452;

/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
typedef struct S1453 T1453;

/* [attached] TYPE [ET_FEATURE] */
#define T1454 EIF_TYPE_OBJ

/* DS_HASH_SET_CURSOR [ET_CLASS] */
typedef struct S1456 T1456;

/* [attached] TYPE [ET_CLASS] */
#define T1457 EIF_TYPE_OBJ

/* DS_HASH_SET_CURSOR [ET_PROCEDURE] */
typedef struct S1458 T1458;

/* DS_HASH_SET_CURSOR [ET_QUERY] */
typedef struct S1459 T1459;

/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1460 T1460;

/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1461 T1461;

/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1462 T1462;

/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
typedef struct S1464 T1464;

/* DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT] */
typedef struct S1465 T1465;

/* KL_SPECIAL_ROUTINES [NATURAL_8] */
typedef struct S1468 T1468;

/* DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
typedef struct S1469 T1469;

/* STRING_8_SEARCHER */
typedef struct S1470 T1470;

/* detachable ARRAYED_LIST [INTEGER_32] */
typedef struct S1471 T1471;

/* ET_XACE_INVALID_EXPRESSION_ERROR */
typedef struct S1473 T1473;

/* [attached] TYPE [STRING_8] */
#define T1475 EIF_TYPE_OBJ

/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
typedef struct S1476 T1476;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
typedef struct S1477 T1477;

/* [attached] TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1478 T1478;

/* KL_AGENT_ROUTINES [ET_UNIVERSE] */
typedef struct S1479 T1479;

/* [attached] PREDICATE [[attached] TUPLE [ET_UNIVERSE]] */
typedef struct S1480 T1480;

/* [attached] TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
typedef struct S1481 T1481;

/* [attached] TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], [attached] PREDICATE [[attached] TUPLE [ET_UNIVERSE]]] */
typedef struct S1482 T1482;

/* KL_AGENT_HASH_FUNCTION [STRING_8] */
typedef struct S1485 T1485;

/* [attached] TUPLE [STRING_8] */
typedef struct S1486 T1486;

/* [attached] FUNCTION [[attached] TUPLE [STRING_8], INTEGER_32] */
typedef struct S1487 T1487;

/* [attached] TUPLE [KL_STRING_ROUTINES] */
typedef struct S1488 T1488;

/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
typedef struct S1489 T1489;

/* TYPED_POINTER [NATURAL_16] */
typedef struct S1490 T1490;
extern T0* GE_boxed1490(T1490 a1);
typedef struct Sb1490 Tb1490;

/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
typedef struct S1491 T1491;

/* XM_COMMENT */
typedef struct S1492 T1492;

/* XM_PROCESSING_INSTRUCTION */
typedef struct S1493 T1493;

/* XM_CHARACTER_DATA */
typedef struct S1494 T1494;

/* detachable DS_CELL [detachable ET_CLASS] */
typedef struct S1496 T1496;

/* [attached] TUPLE [detachable DS_CELL [detachable ET_CLASS]] */
typedef struct S1497 T1497;

/* [attached] TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
typedef struct S1498 T1498;

/* DS_ARRAYED_LIST [ET_CLUSTER] */
typedef struct S1499 T1499;

/* ET_CONSTRAINT_GENERIC_NAMED_TYPE */
typedef struct S1503 T1503;

/* ET_UNQUALIFIED_CALL_INSTRUCTION */
typedef struct S1504 T1504;

/* ET_SEEDED_QUERY_COMPARATOR */
typedef struct S1507 T1507;

/* ET_SEEDED_PROCEDURE_COMPARATOR */
typedef struct S1510 T1510;

/* [attached] TUPLE [ET_CLIENT_LIST] */
typedef struct S1514 T1514;

/* ET_FORMAL_COMMA_ARGUMENT */
typedef struct S1516 T1516;

/* ET_LOCAL_COMMA_VARIABLE */
typedef struct S1517 T1517;

/* ET_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S1518 T1518;

/* ET_KEYWORD_EXPRESSION */
typedef struct S1520 T1520;

/* ET_CLUSTER_ERROR */
typedef struct S1522 T1522;

/* ET_SYNTAX_ERROR */
typedef struct S1523 T1523;

/* [attached] TUPLE [ET_MASTER_CLASS, ET_SYSTEM_PROCESSOR] */
typedef struct S1530 T1530;

/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
typedef struct S1536 T1536;

/* ET_AGENT_IMPLICIT_CURRENT_TARGET */
typedef struct S1540 T1540;

/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
typedef struct S1550 T1550;

/* INTEGER_OVERFLOW_CHECKER */
typedef struct S1557 T1557;

/* SPECIAL [ARRAY [INTEGER_32]] */
typedef struct S1558 T1558;

/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
typedef struct S1559 T1559;

/* DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
typedef struct S1560 T1560;

/* detachable DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
typedef struct S1561 T1561;

/* DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
typedef struct S1562 T1562;

/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1563 T1563;

/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1564 T1564;

/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1565 T1565;

/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
typedef struct S1566 T1566;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1567 T1567;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1568 T1568;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1569 T1569;

/* DS_ARRAYED_LIST [ET_ECF_CONDITION] */
typedef struct S1570 T1570;

/* detachable DS_LINKABLE [XM_DOCUMENT_NODE] */
typedef struct S1572 T1572;

/* DS_LINKED_QUEUE [CHARACTER_8] */
typedef struct S1577 T1577;

/* UC_UTF16_ROUTINES */
typedef struct S1578 T1578;

/* SPECIAL [ET_ADAPTED_UNIVERSE] */
typedef struct S1579 T1579;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
typedef struct S1580 T1580;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
typedef struct S1581 T1581;

/* LX_DFA_WILDCARD */
typedef struct S1582 T1582;

/* DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
typedef struct S1583 T1583;

/* ET_STANDARD_ONCE_KEYS */
typedef struct S1585 T1585;

/* DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
typedef struct S1587 T1587;

/* detachable DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
typedef struct S1588 T1588;

/* SPECIAL [ET_XACE_CLUSTER] */
typedef struct S1589 T1589;

/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
typedef struct S1590 T1590;

/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
typedef struct S1591 T1591;

/* DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
typedef struct S1592 T1592;

/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
typedef struct S1593 T1593;

/* SPECIAL [YY_BUFFER] */
typedef struct S1595 T1595;

/* KL_SPECIAL_ROUTINES [YY_BUFFER] */
typedef struct S1596 T1596;

/* SPECIAL [ET_DYNAMIC_TARGET] */
typedef struct S1597 T1597;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
typedef struct S1598 T1598;

/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1600 T1600;

/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1601 T1601;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1602 T1602;

/* attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1603 T1603;

/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
typedef struct S1604 T1604;

/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1605 T1605;

/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
typedef struct S1606 T1606;

/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME] */
typedef struct S1607 T1607;

/* SPECIAL [ET_RENAME] */
typedef struct S1608 T1608;

/* [attached] TYPE [ET_RENAME] */
#define T1611 EIF_TYPE_OBJ

/* [attached] TYPE [ET_CALL_NAME] */
#define T1612 EIF_TYPE_OBJ

/* SPECIAL [ET_CALL_NAME] */
typedef struct S1613 T1613;

/* KL_SPECIAL_ROUTINES [ET_RENAME] */
typedef struct S1614 T1614;

/* KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
typedef struct S1615 T1615;

/* DS_HASH_SET_CURSOR [ET_CALL_NAME] */
typedef struct S1616 T1616;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME] */
typedef struct S1617 T1617;

/* detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME] */
typedef struct S1620 T1620;

/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1621 T1621;

/* SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1622 T1622;

/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
typedef struct S1624 T1624;

/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
typedef struct S1625 T1625;

/* detachable DS_LINKABLE [ET_ADAPTED_FEATURE] */
typedef struct S1626 T1626;

/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
typedef struct S1627 T1627;

/* SPECIAL [ET_PARENT_FEATURE] */
typedef struct S1628 T1628;

/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1629 T1629;

/* SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1630 T1630;

/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1631 T1631;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
typedef struct S1632 T1632;

/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1633 T1633;

/* detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1636 T1636;

/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1637 T1637;

/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1638 T1638;

/* detachable DS_LINKABLE [ET_DOTNET_FEATURE] */
typedef struct S1639 T1639;

/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
typedef struct S1640 T1640;

/* SPECIAL [ET_LIKE_FEATURE] */
typedef struct S1641 T1641;

/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
typedef struct S1642 T1642;

/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
typedef struct S1643 T1643;

/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
typedef struct S1645 T1645;

/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
typedef struct S1646 T1646;

/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
typedef struct S1647 T1647;

/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
typedef struct S1648 T1648;

/* ET_DOTNET_ASSEMBLY_ERROR */
typedef struct S1649 T1649;

/* [attached] TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1650 T1650;

/* [attached] TUPLE [ET_XACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1651 T1651;

/* [attached] TUPLE [ET_LACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1652 T1652;

/* KL_CHARACTER_ROUTINES */
typedef struct S1661 T1661;

/* [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
typedef struct S1662 T1662;

/* ET_ACTUAL_PARAMETER_SUBLIST */
typedef struct S1663 T1663;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
typedef struct S1664 T1664;

/* SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef struct S1669 T1669;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
typedef struct S1670 T1670;

/* ET_PARENTHESIS_INSTRUCTION */
typedef struct S1671 T1671;

/* ET_PARENTHESIS_SYMBOL */
typedef struct S1675 T1675;

/* ET_INFIX_CAST_EXPRESSION */
typedef struct S1681 T1681;

/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
typedef struct S1693 T1693;

/* [attached] TUPLE [ET_ASSERTIONS] */
typedef struct S1694 T1694;

/* [attached] PREDICATE [[attached] TUPLE [ET_ASSERTIONS]] */
typedef struct S1695 T1695;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
typedef struct S1697 T1697;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
typedef struct S1698 T1698;

/* [attached] TYPE [ET_NESTED_TYPE_CONTEXT] */
#define T1701 EIF_TYPE_OBJ

/* [attached] TYPE [ET_ACROSS_COMPONENT] */
#define T1702 EIF_TYPE_OBJ

/* detachable DS_LINKABLE [XM_ELEMENT_NODE] */
typedef struct S1704 T1704;

/* [attached] TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8] */
typedef struct S1705 T1705;

/* [attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1710 T1710;

/* [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
typedef struct S1711 T1711;

/* [attached] TUPLE [ET_ECF_INTERNAL_UNIVERSE, ET_ECF_STATE] */
typedef struct S1712 T1712;

/* [attached] TUPLE [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1713 T1713;

/* [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
typedef struct S1714 T1714;

/* [attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1715 T1715;

/* [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
typedef struct S1716 T1716;

/* detachable DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S1717 T1717;

/* [attached] TUPLE [LX_WILDCARD] */
typedef struct S1718 T1718;

/* [attached] PREDICATE [[attached] TUPLE [LX_WILDCARD]] */
typedef struct S1719 T1719;

/* [attached] TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
typedef struct S1720 T1720;

/* [attached] PREDICATE [[attached] TUPLE [STRING_8]] */
typedef struct S1722 T1722;

/* [attached] TUPLE [KL_STRING_ROUTINES, STRING_8] */
typedef struct S1723 T1723;

/* SPECIAL [ET_CLUSTER] */
typedef struct S1728 T1728;

/* KL_SPECIAL_ROUTINES [ET_CLUSTER] */
typedef struct S1729 T1729;

/* DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
typedef struct S1730 T1730;

/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
typedef struct S1732 T1732;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
typedef struct S1733 T1733;

/* SPECIAL [NATURAL_64] */
typedef struct S1735 T1735;

/* SPECIAL [ET_ECF_CLUSTER] */
typedef struct S1736 T1736;

/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
typedef struct S1737 T1737;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
typedef struct S1738 T1738;

/* SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1739 T1739;

/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1740 T1740;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1741 T1741;

/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1742 T1742;

/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1743 T1743;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1744 T1744;

/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1745 T1745;

/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1746 T1746;

/* DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1747 T1747;

/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
typedef struct S1748 T1748;

/* SPECIAL [ET_ECF_FILE_RULE] */
typedef struct S1749 T1749;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
typedef struct S1750 T1750;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1751 T1751;

/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1752 T1752;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1753 T1753;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1754 T1754;

/* SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1755 T1755;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1756 T1756;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1757 T1757;

/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1758 T1758;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1759 T1759;

/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION] */
typedef struct S1760 T1760;

/* SPECIAL [ET_ECF_CONDITION] */
typedef struct S1761 T1761;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION] */
typedef struct S1762 T1762;

/* detachable DS_LINKABLE [CHARACTER_8] */
typedef struct S1763 T1763;

/* LX_WILDCARD_PARSER */
typedef struct S1764 T1764;

/* LX_DESCRIPTION */
typedef struct S1765 T1765;

/* LX_FULL_DFA */
typedef struct S1766 T1766;

/* SPECIAL [LX_WILDCARD] */
typedef struct S1768 T1768;

/* KL_SPECIAL_ROUTINES [LX_WILDCARD] */
typedef struct S1771 T1771;

/* detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1772 T1772;

/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1774 T1774;

/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
typedef struct S1776 T1776;

/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
typedef struct S1777 T1777;

/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
typedef struct S1780 T1780;

/* DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
typedef struct S1781 T1781;

/* CHARACTER_PROPERTY */
typedef struct S1782 T1782;

/* [attached] TUPLE [ET_GROUP] */
typedef struct S1783 T1783;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]], [attached] PREDICATE [[attached] TUPLE [ET_CLASS]]] */
typedef struct S1784 T1784;

/* AP_OPTION_COMPARATOR */
typedef struct S1785 T1785;

/* DS_QUICK_SORTER [AP_OPTION] */
typedef struct S1786 T1786;

/* ET_DYNAMIC_EQUALITY_EXPRESSION */
typedef struct S1793 T1793;

/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
typedef struct S1794 T1794;

/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1795 T1795;

/* ET_UNIVERSE_ERROR */
typedef struct S1796 T1796;

/* ET_CONVERT_BUILTIN_EXPRESSION */
typedef struct S1800 T1800;

/* ET_CONVERT_FROM_EXPRESSION */
typedef struct S1801 T1801;

/* ET_CONVERT_TO_EXPRESSION */
typedef struct S1802 T1802;

/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
typedef struct S1808 T1808;

/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1811 T1811;

/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1812 T1812;

/* DS_ARRAYED_LIST [LX_RULE] */
typedef struct S1813 T1813;

/* LX_START_CONDITIONS */
typedef struct S1814 T1814;

/* LX_ACTION_FACTORY */
typedef struct S1815 T1815;

/* LX_SYMBOL_CLASS */
typedef struct S1816 T1816;

/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8] */
typedef struct S1817 T1817;

/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
typedef struct S1818 T1818;

/* SPECIAL [LX_SYMBOL_CLASS] */
typedef struct S1819 T1819;

/* KL_SPECIAL_ROUTINES [LX_NFA] */
typedef struct S1820 T1820;

/* LX_NFA */
typedef struct S1821 T1821;

/* SPECIAL [LX_NFA] */
typedef struct S1822 T1822;

/* LX_EQUIVALENCE_CLASSES */
typedef struct S1823 T1823;

/* LX_RULE */
typedef struct S1824 T1824;

/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8] */
typedef struct S1825 T1825;

/* LX_UNRECOGNIZED_RULE_ERROR */
typedef struct S1826 T1826;

/* LX_MISSING_QUOTE_ERROR */
typedef struct S1827 T1827;

/* LX_BAD_CHARACTER_CLASS_ERROR */
typedef struct S1828 T1828;

/* LX_BAD_CHARACTER_ERROR */
typedef struct S1829 T1829;

/* LX_FULL_AND_META_ERROR */
typedef struct S1830 T1830;

/* LX_FULL_AND_REJECT_ERROR */
typedef struct S1831 T1831;

/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
typedef struct S1832 T1832;

/* LX_CHARACTER_OUT_OF_RANGE_ERROR */
typedef struct S1833 T1833;

/* ARRAY [LX_RULE] */
typedef struct S1834 T1834;

/* SPECIAL [LX_RULE] */
typedef struct S1835 T1835;

/* LX_DFA_STATE */
typedef struct S1836 T1836;

/* DS_ARRAYED_LIST [LX_NFA_STATE] */
typedef struct S1837 T1837;

/* DS_ARRAYED_LIST [LX_DFA_STATE] */
typedef struct S1838 T1838;

/* LX_SYMBOL_PARTITIONS */
typedef struct S1839 T1839;

/* KL_ARRAY_ROUTINES [LX_RULE] */
typedef struct S1840 T1840;

/* LX_START_CONDITION */
typedef struct S1841 T1841;

/* LX_TRANSITION_TABLE [LX_DFA_STATE] */
typedef struct S1842 T1842;

/* DS_ARRAYED_LIST [LX_NFA] */
typedef struct S1843 T1843;

/* DS_HASH_TABLE [LX_NFA, INTEGER_32] */
typedef struct S1844 T1844;

/* LX_NFA_STATE */
typedef struct S1845 T1845;

/* TYPE [DEVELOPER_EXCEPTION] */
#define T1847 EIF_TYPE_OBJ

/* [attached] TUPLE [ET_ECF_LIBRARY] */
typedef struct S1849 T1849;

/* [attached] TUPLE [ET_ECF_CLUSTER] */
typedef struct S1852 T1852;

/* [attached] PROCEDURE [[attached] TUPLE [ET_ECF_CLUSTER]] */
typedef struct S1853 T1853;

/* [attached] TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
typedef struct S1854 T1854;

/* [attached] TUPLE [ET_ECF_FILE_RULE] */
typedef struct S1855 T1855;

/* [attached] PROCEDURE [[attached] TUPLE [ET_ECF_FILE_RULE]] */
typedef struct S1856 T1856;

/* [attached] TUPLE [ET_ECF_FILE_RULES] */
typedef struct S1857 T1857;

/* [attached] PREDICATE [[attached] TUPLE [ET_ECF_FILE_RULE]] */
typedef struct S1858 T1858;

/* [attached] TUPLE [ET_ECF_STATE] */
typedef struct S1859 T1859;

/* detachable DS_LINKABLE [ET_PARENT_FEATURE] */
typedef struct S1861 T1861;

/* ET_AST_NULL_LEAF */
typedef struct S1863 T1863;

/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
typedef struct S1864 T1864;

/* SPECIAL [NATURAL_16] */
typedef struct S1865 T1865;

/* SPECIAL [NATURAL_32] */
typedef struct S1866 T1866;

/* ARRAY [NATURAL_16] */
typedef struct S1867 T1867;

/* ARRAY [NATURAL_32] */
typedef struct S1868 T1868;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1869 T1869;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1870 T1870;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1871 T1871;

/* KL_SPECIAL_ROUTINES [LX_RULE] */
typedef struct S1872 T1872;

/* DS_ARRAYED_LIST_CURSOR [LX_RULE] */
typedef struct S1873 T1873;

/* KL_ARRAY_ROUTINES [STRING_8] */
typedef struct S1874 T1874;

/* SPECIAL [LX_START_CONDITION] */
typedef struct S1875 T1875;

/* KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
typedef struct S1876 T1876;

/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
typedef struct S1877 T1877;

/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
typedef struct S1880 T1880;

/* LX_EPSILON_TRANSITION [LX_NFA_STATE] */
typedef struct S1882 T1882;

/* LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
typedef struct S1884 T1884;

/* ARRAY [DS_BILINKABLE [INTEGER_32]] */
typedef struct S1885 T1885;

/* DS_BILINKABLE [INTEGER_32] */
typedef struct S1886 T1886;

/* SPECIAL [DS_BILINKABLE [INTEGER_32]] */
typedef struct S1887 T1887;

/* LX_ACTION */
typedef struct S1889 T1889;

/* DS_BUBBLE_SORTER [LX_NFA_STATE] */
typedef struct S1890 T1890;

/* DS_BUBBLE_SORTER [LX_RULE] */
typedef struct S1892 T1892;

/* SPECIAL [LX_NFA_STATE] */
typedef struct S1894 T1894;

/* KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
typedef struct S1896 T1896;

/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
typedef struct S1897 T1897;

/* SPECIAL [LX_DFA_STATE] */
typedef struct S1899 T1899;

/* KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
typedef struct S1900 T1900;

/* DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
typedef struct S1901 T1901;

/* KL_ARRAY [LX_RULE] */
typedef struct S1902 T1902;

/* ARRAY [detachable LX_DFA_STATE] */
typedef struct S1903 T1903;

/* KL_ARRAY_ROUTINES [detachable LX_DFA_STATE] */
typedef struct S1904 T1904;

/* DS_ARRAYED_LIST_CURSOR [LX_NFA] */
typedef struct S1905 T1905;

/* DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
typedef struct S1907 T1907;

/* [attached] TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1908 T1908;

/* [attached] TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1909 T1909;

/* [attached] TUPLE [ET_LACE_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1910 T1910;

/* [attached] TUPLE [ET_LACE_DOTNET_GAC_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1911 T1911;

/* [attached] TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1912 T1912;

/* [attached] TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1913 T1913;

/* [attached] TYPE [BOOLEAN] */
#define T1915 EIF_TYPE_OBJ

/* DS_SHELL_SORTER [INTEGER_32] */
typedef struct S1917 T1917;

/* KL_COMPARABLE_COMPARATOR [LX_RULE] */
typedef struct S1918 T1918;

/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
typedef struct S1921 T1921;

/* KL_ARRAY [STRING_8] */
typedef struct S1924 T1924;

/* [attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1925 T1925;

/* [attached] PREDICATE [[attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
typedef struct S1926 T1926;

/* Struct for boxed version of type BOOLEAN */
struct Sb1 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_8 */
struct Sb2 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_32 */
struct Sb3 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T3 z1; /* item */
};

/* Struct for boxed version of type INTEGER_8 */
struct Sb4 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T4 z1; /* item */
};

/* Struct for boxed version of type INTEGER_16 */
struct Sb5 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T5 z1; /* item */
};

/* Struct for boxed version of type INTEGER_32 */
struct Sb6 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 z1; /* item */
};

/* Struct for boxed version of type INTEGER_64 */
struct Sb7 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T7 z1; /* item */
};

/* Struct for boxed version of type NATURAL_8 */
struct Sb8 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T8 z1; /* item */
};

/* Struct for boxed version of type NATURAL_16 */
struct Sb9 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T9 z1; /* item */
};

/* Struct for boxed version of type NATURAL_32 */
struct Sb10 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T10 z1; /* item */
};

/* Struct for boxed version of type NATURAL_64 */
struct Sb11 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T11 z1; /* item */
};

/* Struct for boxed version of type REAL_32 */
struct Sb12 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T12 z1; /* item */
};

/* Struct for boxed version of type REAL_64 */
struct Sb13 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T13 z1; /* item */
};

/* Struct for boxed version of type POINTER */
struct Sb14 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 z1; /* item */
};

/* Struct for type UTF_CONVERTER */
struct S541 {
	char dummy;
};

/* Struct for boxed version of type UTF_CONVERTER */
struct Sb541 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T541 z1; /* item */
};

/* Struct for type TYPED_POINTER [NATURAL_16] */
struct S1490 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [NATURAL_16] */
struct Sb1490 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1490 z1; /* item */
};

/* Struct for type TYPED_POINTER [NATURAL_8] */
struct S1194 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [NATURAL_8] */
struct Sb1194 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1194 z1; /* item */
};

/* Struct for type TYPED_POINTER [ANY] */
struct S1087 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [ANY] */
struct Sb1087 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1087 z1; /* item */
};

/* Struct for type TYPED_POINTER [SPECIAL [NATURAL_8]] */
struct S548 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [SPECIAL [NATURAL_8]] */
struct Sb548 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T548 z1; /* item */
};

/* Struct for type SPECIAL [CHARACTER_8] */
struct S15 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T2 z2[1]; /* item */
};

/* Struct for type SPECIAL [CHARACTER_32] */
struct S16 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T3 z2[1]; /* item */
};

/* Struct for type STRING_8 */
struct S17 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* internal_case_insensitive_hash_code */
};

/* Struct for type STRING_32 */
struct S18 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* internal_case_insensitive_hash_code */
};

/* Struct for type IMMUTABLE_STRING_32 */
struct S19 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* area_lower */
};

/* Struct for type ISE_EXCEPTION_MANAGER */
struct S20 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type GEC */
struct S24 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_handler */
	T0* a2; /* ace_filename */
	T0* a3; /* last_system */
	T0* a4; /* finalize_flag */
	T0* a5; /* gelint_flag */
	T0* a6; /* catcall_option */
	T0* a7; /* c_compile_option */
	T0* a8; /* split_option */
	T0* a9; /* split_size_option */
	T0* a10; /* new_instance_types_option */
	T0* a11; /* gc_option */
	T0* a12; /* silent_flag */
	T0* a13; /* verbose_flag */
	T0* a14; /* version_flag */
	T6 a15; /* split_size */
	T1 a16; /* ecf_gelint_option */
};

/* Struct for type CELL [detachable EXCEPTION] */
struct S25 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type HASH_TABLE [INTEGER_32, INTEGER_32] */
struct S26 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* content */
	T0* a3; /* keys */
	T0* a4; /* deleted_marks */
	T0* a5; /* indexes_map */
	T6 a6; /* iteration_position */
	T6 a7; /* count */
	T6 a8; /* deleted_item_position */
	T6 a9; /* control */
	T6 a10; /* found_item */
	T1 a11; /* has_default */
	T6 a12; /* item_position */
	T6 a13; /* ht_lowest_deleted_position */
	T6 a14; /* ht_deleted_item */
	T6 a15; /* ht_deleted_key */
	T1 a16; /* object_comparison */
};

/* Struct for type CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
struct S27 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type CELL [NO_MORE_MEMORY] */
struct S28 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type C_STRING */
struct S29 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* managed_data */
	T6 a2; /* count */
};

/* Struct for type [attached] TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
struct S30 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 z1;
	T6 z2;
	T6 z3;
	T0* z4;
	T0* z5;
	T0* z6;
	T0* z7;
	T0* z8;
	T0* z9;
	T6 z10;
	T1 z11;
};

/* Struct for type KL_TEXT_INPUT_FILE */
struct S31 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_file */
	T0* a2; /* last_string */
	T6 a3; /* mode */
	T0* a4; /* name */
	T0* a5; /* character_buffer */
	T2 a6; /* last_character */
	T14 a7; /* file_pointer */
	T1 a8; /* descriptor_available */
	T0* a9; /* internal_name */
	T0* a10; /* internal_detachable_name_pointer */
};

/* Struct for type KL_ARGUMENTS */
struct S32 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* program_name */
};

/* Struct for type ET_ISE_VARIABLES */
struct S33 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ERROR_HANDLER */
struct S34 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* info_file */
	T0* a3; /* mutex */
	T0* a4; /* error_file */
	T0* a5; /* warning_file */
	T1 a6; /* is_ise */
	T1 a7; /* has_eiffel_error */
	T1 a8; /* has_internal_error */
	T1 a9; /* is_ge */
	T1 a10; /* is_verbose */
	T1 a11; /* is_pedantic */
};

/* Struct for type ET_SYSTEM */
struct S35 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* attachment_type_conformance_mode */
	T0* a2; /* current_system */
	T0* a3; /* master_class_mutex */
	T0* a4; /* master_classes */
	T0* a5; /* register_class_mutex */
	T0* a6; /* register_feature_mutex */
	T0* a7; /* register_inline_constant_mutex */
	T0* a8; /* external_include_pathnames */
	T0* a9; /* external_object_pathnames */
	T0* a10; /* external_library_pathnames */
	T1 a11; /* console_application_mode */
	T1 a12; /* alias_transition_mode */
	T1 a13; /* scoop_mode */
	T0* a14; /* universe */
	T0* a15; /* name */
	T0* a16; /* libraries */
	T0* a17; /* clusters */
	T0* a18; /* dotnet_assemblies */
	T0* a19; /* system_name */
	T0* a20; /* any_type */
	T0* a21; /* detachable_any_type */
	T0* a22; /* detachable_separate_any_type */
	T0* a23; /* separate_any_type */
	T0* a24; /* any_parent */
	T0* a25; /* any_parents */
	T0* a26; /* any_clients */
	T0* a27; /* tuple_type */
	T0* a28; /* detachable_tuple_type */
	T0* a29; /* tuple_like_current_type */
	T0* a30; /* unfolded_empty_tuple_actual_parameters */
	T0* a31; /* array_any_type */
	T0* a32; /* array_detachable_any_type */
	T0* a33; /* array_like_current_type */
	T0* a34; /* boolean_type */
	T0* a35; /* character_type */
	T0* a36; /* character_8_type */
	T0* a37; /* character_8_convert_feature */
	T0* a38; /* character_32_type */
	T0* a39; /* character_32_convert_feature */
	T0* a40; /* double_type */
	T0* a41; /* exception_type */
	T0* a42; /* detachable_exception_type */
	T0* a43; /* exception_manager_type */
	T0* a44; /* function_type */
	T0* a45; /* immutable_string_32_type */
	T0* a46; /* integer_type */
	T0* a47; /* integer_8_type */
	T0* a48; /* integer_8_convert_feature */
	T0* a49; /* integer_16_type */
	T0* a50; /* integer_16_convert_feature */
	T0* a51; /* integer_32_type */
	T0* a52; /* integer_32_convert_feature */
	T0* a53; /* integer_64_type */
	T0* a54; /* integer_64_convert_feature */
	T0* a55; /* ise_exception_manager_type */
	T0* a56; /* iterable_detachable_any_type */
	T0* a57; /* natural_type */
	T0* a58; /* natural_8_type */
	T0* a59; /* natural_8_convert_feature */
	T0* a60; /* natural_16_type */
	T0* a61; /* natural_16_convert_feature */
	T0* a62; /* natural_32_type */
	T0* a63; /* natural_32_convert_feature */
	T0* a64; /* natural_64_type */
	T0* a65; /* natural_64_convert_feature */
	T0* a66; /* none_type */
	T0* a67; /* detachable_none_type */
	T0* a68; /* pointer_type */
	T0* a69; /* predicate_like_current_type */
	T0* a70; /* procedure_like_current_type */
	T0* a71; /* real_type */
	T0* a72; /* real_32_type */
	T0* a73; /* real_32_convert_feature */
	T0* a74; /* real_64_type */
	T0* a75; /* real_64_convert_feature */
	T0* a76; /* routine_type */
	T0* a77; /* special_any_type */
	T0* a78; /* special_detachable_any_type */
	T0* a79; /* string_type */
	T0* a80; /* detachable_string_type */
	T0* a81; /* string_8_type */
	T0* a82; /* string_8_convert_feature */
	T0* a83; /* string_32_type */
	T0* a84; /* string_32_convert_feature */
	T0* a85; /* system_object_type */
	T0* a86; /* system_object_parents */
	T0* a87; /* system_string_type */
	T0* a88; /* type_any_type */
	T0* a89; /* type_type_any_type */
	T0* a90; /* type_detachable_any_type */
	T0* a91; /* type_detachable_like_current_type */
	T0* a92; /* detachable_type_exception_type */
	T0* a93; /* type_detachable_exception_type */
	T0* a94; /* detachable_type_detachable_any_type */
	T0* a95; /* type_like_current_type */
	T0* a96; /* typed_pointer_any_type */
	T0* a97; /* typed_pointer_like_current_type */
	T0* a98; /* wide_character_type */
	T1 a99; /* is_read_only */
	T6 a100; /* registered_class_count */
	T0* a101; /* implicit_attachment_type_mark */
	T6 a102; /* default_create_seed */
	T6 a103; /* copy_seed */
	T6 a104; /* is_equal_seed */
	T6 a105; /* routine_call_seed */
	T6 a106; /* function_item_seed */
	T6 a107; /* dispose_seed */
	T6 a108; /* iterable_new_cursor_seed */
	T6 a109; /* iteration_cursor_after_seed */
	T6 a110; /* iteration_cursor_forth_seed */
	T6 a111; /* registered_feature_count */
	T6 a112; /* registered_inline_constant_count */
	T1 a113; /* is_dotnet */
	T1 a114; /* target_type_attachment_mode */
	T1 a115; /* obsolete_routine_type_mode */
};

/* Struct for type KL_STRING_ROUTINES */
struct S36 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_EXCEPTIONS */
struct S38 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type AP_PARSER */
struct S39 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* options */
	T0* a2; /* alternative_options_lists */
	T0* a3; /* parameters */
	T0* a4; /* help_option */
	T0* a5; /* application_description */
	T0* a6; /* parameters_description */
	T0* a7; /* error_handler */
	T0* a8; /* current_options */
	T1 a9; /* is_first_option */
	T0* a10; /* last_option_parameter */
};

/* Struct for type AP_ALTERNATIVE_OPTIONS_LIST */
struct S40 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* introduction_option */
	T0* a2; /* parameters_description */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type AP_ERROR */
struct S41 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_template */
	T0* a3; /* code */
};

/* Struct for type AP_FLAG */
struct S42 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* occurrences */
	T0* a2; /* description */
	T0* a3; /* long_form */
	T2 a4; /* short_form */
	T1 a5; /* has_short_form */
	T1 a6; /* is_mandatory */
	T6 a7; /* maximum_occurrences */
	T1 a8; /* is_hidden */
};

/* Struct for type AP_ENUMERATION_OPTION */
struct S44 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* possible_values */
	T0* a5; /* parameter_description */
	T1 a6; /* needs_parameter */
	T0* a7; /* long_form */
	T1 a8; /* is_mandatory */
	T6 a9; /* maximum_occurrences */
	T1 a10; /* has_short_form */
	T2 a11; /* short_form */
	T1 a12; /* is_hidden */
};

/* Struct for type AP_BOOLEAN_OPTION */
struct S45 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T1 a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
	T1 a9; /* has_short_form */
	T2 a10; /* short_form */
	T1 a11; /* is_hidden */
};

/* Struct for type AP_INTEGER_OPTION */
struct S46 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T6 a2; /* default_parameter */
	T0* a3; /* long_form */
	T2 a4; /* short_form */
	T0* a5; /* description */
	T0* a6; /* parameter_description */
	T1 a7; /* needs_parameter */
	T1 a8; /* is_mandatory */
	T6 a9; /* maximum_occurrences */
	T1 a10; /* has_short_form */
	T1 a11; /* is_hidden */
};

/* Struct for type AP_STRING_OPTION */
struct S47 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
	T1 a9; /* has_short_form */
	T2 a10; /* short_form */
	T1 a11; /* is_hidden */
};

/* Struct for type AP_DISPLAY_HELP_FLAG */
struct S51 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* description */
	T2 a2; /* short_form */
	T1 a3; /* has_short_form */
	T0* a4; /* long_form */
	T6 a5; /* occurrences */
	T1 a6; /* is_mandatory */
	T6 a7; /* maximum_occurrences */
	T1 a8; /* is_hidden */
};

/* Struct for type ET_XACE_SYSTEM_PARSER */
struct S53 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_system */
	T0* a2; /* ast_factory */
	T0* a3; /* xml_parser */
	T0* a4; /* tree_pipe */
	T0* a5; /* xml_validator */
	T0* a6; /* xml_preprocessor */
	T0* a7; /* parsed_libraries */
	T0* a8; /* error_handler */
	T0* a9; /* library_parser */
	T1 a10; /* is_shallow */
	T1 a11; /* is_ve */
};

/* Struct for type ET_XACE_DEFAULT_ERROR_HANDLER */
struct S54 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* error_count */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type DS_HASH_TABLE [STRING_8, STRING_8] */
struct S55 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T6 a3; /* position */
	T6 a4; /* last_position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* equality_tester */
	T6 a9; /* found_position */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* special_item_routines */
	T0* a13; /* item_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type ST_SPLITTER */
struct S56 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_escape_character */
	T2 a2; /* escape_character */
	T0* a3; /* separator_codes */
	T0* a4; /* separators */
};

/* Struct for type UC_STRING_EQUALITY_TESTER */
struct S58 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable KL_EQUALITY_TESTER [STRING_8] */
struct S59 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_XACE_SYSTEM */
struct S62 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* master_classes */
	T0* a2; /* root_type */
	T0* a3; /* none_type */
	T0* a4; /* any_type */
	T0* a5; /* root_creation */
	T6 a6; /* default_create_seed */
	T0* a7; /* boolean_type */
	T0* a8; /* character_8_type */
	T0* a9; /* character_32_type */
	T0* a10; /* integer_8_type */
	T0* a11; /* integer_16_type */
	T0* a12; /* integer_32_type */
	T0* a13; /* integer_64_type */
	T0* a14; /* natural_8_type */
	T0* a15; /* natural_16_type */
	T0* a16; /* natural_32_type */
	T0* a17; /* natural_64_type */
	T0* a18; /* real_32_type */
	T0* a19; /* real_64_type */
	T0* a20; /* pointer_type */
	T0* a21; /* special_any_type */
	T0* a22; /* string_8_type */
	T0* a23; /* string_32_type */
	T0* a24; /* immutable_string_32_type */
	T0* a25; /* array_any_type */
	T0* a26; /* typed_pointer_any_type */
	T0* a27; /* routine_type */
	T0* a28; /* detachable_tuple_type */
	T0* a29; /* universe */
	T0* a30; /* ise_exception_manager_type */
	T0* a31; /* detachable_none_type */
	T0* a32; /* system_name */
	T0* a33; /* external_include_pathnames */
	T0* a34; /* external_library_pathnames */
	T0* a35; /* options */
	T0* a36; /* register_class_mutex */
	T0* a37; /* register_feature_mutex */
	T0* a38; /* register_inline_constant_mutex */
	T0* a39; /* external_object_pathnames */
	T1 a40; /* console_application_mode */
	T1 a41; /* alias_transition_mode */
	T0* a42; /* current_system */
	T0* a43; /* tuple_type */
	T0* a44; /* integer_type */
	T0* a45; /* detachable_exception_type */
	T0* a46; /* exception_type */
	T0* a47; /* string_type */
	T0* a48; /* name */
	T0* a49; /* root_class_name */
	T0* a50; /* dotnet_assemblies */
	T0* a51; /* libraries */
	T0* a52; /* mounted_libraries */
	T0* a53; /* clusters */
	T1 a54; /* exception_trace_mode */
	T1 a55; /* trace_mode */
	T1 a56; /* use_boehm_gc */
	T1 a57; /* multithreaded_mode */
	T0* a58; /* creation_procedure_name */
	T0* a59; /* master_class_mutex */
	T0* a60; /* detachable_any_type */
	T0* a61; /* detachable_separate_any_type */
	T0* a62; /* separate_any_type */
	T0* a63; /* any_parent */
	T0* a64; /* any_parents */
	T0* a65; /* any_clients */
	T0* a66; /* tuple_like_current_type */
	T0* a67; /* unfolded_empty_tuple_actual_parameters */
	T0* a68; /* array_detachable_any_type */
	T0* a69; /* array_like_current_type */
	T0* a70; /* character_type */
	T0* a71; /* character_8_convert_feature */
	T0* a72; /* character_32_convert_feature */
	T0* a73; /* double_type */
	T0* a74; /* exception_manager_type */
	T0* a75; /* function_type */
	T0* a76; /* integer_8_convert_feature */
	T0* a77; /* integer_16_convert_feature */
	T0* a78; /* integer_32_convert_feature */
	T0* a79; /* integer_64_convert_feature */
	T0* a80; /* iterable_detachable_any_type */
	T0* a81; /* natural_type */
	T0* a82; /* natural_8_convert_feature */
	T0* a83; /* natural_16_convert_feature */
	T0* a84; /* natural_32_convert_feature */
	T0* a85; /* natural_64_convert_feature */
	T0* a86; /* predicate_like_current_type */
	T0* a87; /* procedure_like_current_type */
	T0* a88; /* real_type */
	T0* a89; /* real_32_convert_feature */
	T0* a90; /* real_64_convert_feature */
	T0* a91; /* special_detachable_any_type */
	T0* a92; /* detachable_string_type */
	T0* a93; /* string_8_convert_feature */
	T0* a94; /* string_32_convert_feature */
	T0* a95; /* system_object_type */
	T0* a96; /* system_object_parents */
	T0* a97; /* system_string_type */
	T0* a98; /* type_any_type */
	T0* a99; /* type_type_any_type */
	T0* a100; /* type_detachable_any_type */
	T0* a101; /* type_detachable_like_current_type */
	T0* a102; /* detachable_type_exception_type */
	T0* a103; /* type_detachable_exception_type */
	T0* a104; /* detachable_type_detachable_any_type */
	T0* a105; /* type_like_current_type */
	T0* a106; /* typed_pointer_like_current_type */
	T0* a107; /* wide_character_type */
	T1 a108; /* is_read_only */
	T1 a109; /* is_preparsed */
	T0* a110; /* scm_read_mapping_builder */
	T0* a111; /* scm_write_mapping_builder */
	T6 a112; /* registered_class_count */
	T6 a113; /* routine_call_seed */
	T6 a114; /* function_item_seed */
	T6 a115; /* is_equal_seed */
	T6 a116; /* dispose_seed */
	T6 a117; /* registered_feature_count */
	T1 a118; /* attachment_type_conformance_mode */
	T1 a119; /* scoop_mode */
	T0* a120; /* implicit_attachment_type_mark */
	T6 a121; /* copy_seed */
	T6 a122; /* iterable_new_cursor_seed */
	T6 a123; /* iteration_cursor_after_seed */
	T6 a124; /* iteration_cursor_forth_seed */
	T6 a125; /* registered_inline_constant_count */
	T1 a126; /* target_type_attachment_mode */
	T1 a127; /* obsolete_routine_type_mode */
	T1 a128; /* is_dotnet */
};

/* Struct for type ET_ECF_SYSTEM_PARSER */
struct S63 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_system */
	T0* a2; /* ast_factory */
	T1 a3; /* finalize_mode */
	T0* a4; /* parsed_libraries */
	T0* a5; /* parsed_dotnet_assemblies */
	T0* a6; /* xml_parser */
	T0* a7; /* tree_pipe */
	T0* a8; /* error_handler */
	T0* a9; /* ise_version */
	T0* a10; /* library_parser */
};

/* Struct for type ET_ECF_ERROR_HANDLER */
struct S64 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* error_count */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type ET_ECF_SYSTEM */
struct S65 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* targets */
	T0* a2; /* libraries */
	T0* a3; /* filename */
	T0* a4; /* dotnet_assemblies */
	T0* a5; /* selected_target */
	T0* a6; /* master_classes */
	T0* a7; /* root_type */
	T0* a8; /* none_type */
	T0* a9; /* any_type */
	T0* a10; /* root_creation */
	T6 a11; /* default_create_seed */
	T0* a12; /* boolean_type */
	T0* a13; /* character_8_type */
	T0* a14; /* character_32_type */
	T0* a15; /* integer_8_type */
	T0* a16; /* integer_16_type */
	T0* a17; /* integer_32_type */
	T0* a18; /* integer_64_type */
	T0* a19; /* natural_8_type */
	T0* a20; /* natural_16_type */
	T0* a21; /* natural_32_type */
	T0* a22; /* natural_64_type */
	T0* a23; /* real_32_type */
	T0* a24; /* real_64_type */
	T0* a25; /* pointer_type */
	T0* a26; /* special_any_type */
	T0* a27; /* string_8_type */
	T0* a28; /* string_32_type */
	T0* a29; /* immutable_string_32_type */
	T0* a30; /* array_any_type */
	T0* a31; /* typed_pointer_any_type */
	T0* a32; /* routine_type */
	T0* a33; /* detachable_tuple_type */
	T0* a34; /* universe */
	T0* a35; /* ise_exception_manager_type */
	T0* a36; /* detachable_none_type */
	T1 a37; /* use_boehm_gc */
	T0* a38; /* external_include_pathnames */
	T0* a39; /* external_library_pathnames */
	T0* a40; /* external_object_pathnames */
	T0* a41; /* character_type */
	T0* a42; /* wide_character_type */
	T0* a43; /* integer_type */
	T0* a44; /* natural_type */
	T0* a45; /* real_type */
	T0* a46; /* double_type */
	T6 a47; /* routine_call_seed */
	T6 a48; /* function_item_seed */
	T6 a49; /* is_equal_seed */
	T6 a50; /* dispose_seed */
	T6 a51; /* registered_feature_count */
	T1 a52; /* attachment_type_conformance_mode */
	T1 a53; /* trace_mode */
	T1 a54; /* exception_trace_mode */
	T1 a55; /* multithreaded_mode */
	T1 a56; /* console_application_mode */
	T0* a57; /* system_name */
	T0* a58; /* name */
	T0* a59; /* uuid */
	T0* a60; /* ecf_namespace */
	T0* a61; /* ecf_version */
	T0* a62; /* library_target */
	T0* a63; /* register_class_mutex */
	T0* a64; /* register_feature_mutex */
	T0* a65; /* register_inline_constant_mutex */
	T1 a66; /* alias_transition_mode */
	T0* a67; /* current_system */
	T0* a68; /* tuple_type */
	T0* a69; /* detachable_exception_type */
	T0* a70; /* exception_type */
	T0* a71; /* string_type */
	T1 a72; /* is_preparsed */
	T0* a73; /* clusters */
	T1 a74; /* is_read_only */
	T0* a75; /* master_class_mutex */
	T0* a76; /* detachable_any_type */
	T0* a77; /* detachable_separate_any_type */
	T0* a78; /* separate_any_type */
	T0* a79; /* any_parent */
	T0* a80; /* any_parents */
	T0* a81; /* any_clients */
	T0* a82; /* tuple_like_current_type */
	T0* a83; /* unfolded_empty_tuple_actual_parameters */
	T0* a84; /* array_detachable_any_type */
	T0* a85; /* array_like_current_type */
	T0* a86; /* character_8_convert_feature */
	T0* a87; /* character_32_convert_feature */
	T0* a88; /* exception_manager_type */
	T0* a89; /* function_type */
	T0* a90; /* integer_8_convert_feature */
	T0* a91; /* integer_16_convert_feature */
	T0* a92; /* integer_32_convert_feature */
	T0* a93; /* integer_64_convert_feature */
	T0* a94; /* iterable_detachable_any_type */
	T0* a95; /* natural_8_convert_feature */
	T0* a96; /* natural_16_convert_feature */
	T0* a97; /* natural_32_convert_feature */
	T0* a98; /* natural_64_convert_feature */
	T0* a99; /* predicate_like_current_type */
	T0* a100; /* procedure_like_current_type */
	T0* a101; /* real_32_convert_feature */
	T0* a102; /* real_64_convert_feature */
	T0* a103; /* special_detachable_any_type */
	T0* a104; /* detachable_string_type */
	T0* a105; /* string_8_convert_feature */
	T0* a106; /* string_32_convert_feature */
	T0* a107; /* system_object_type */
	T0* a108; /* system_object_parents */
	T0* a109; /* system_string_type */
	T0* a110; /* type_any_type */
	T0* a111; /* type_type_any_type */
	T0* a112; /* type_detachable_any_type */
	T0* a113; /* type_detachable_like_current_type */
	T0* a114; /* detachable_type_exception_type */
	T0* a115; /* type_detachable_exception_type */
	T0* a116; /* detachable_type_detachable_any_type */
	T0* a117; /* type_like_current_type */
	T0* a118; /* typed_pointer_like_current_type */
	T0* a119; /* scm_read_mapping_builder */
	T0* a120; /* scm_write_mapping_builder */
	T6 a121; /* registered_class_count */
	T1 a122; /* scoop_mode */
	T0* a123; /* implicit_attachment_type_mark */
	T6 a124; /* copy_seed */
	T6 a125; /* iterable_new_cursor_seed */
	T6 a126; /* iteration_cursor_after_seed */
	T6 a127; /* iteration_cursor_forth_seed */
	T6 a128; /* registered_inline_constant_count */
	T1 a129; /* target_type_attachment_mode */
	T1 a130; /* obsolete_routine_type_mode */
	T1 a131; /* is_dotnet */
};

/* Struct for type ET_ECF_TARGET */
struct S66 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* root */
	T0* a2; /* variables */
	T0* a3; /* settings */
	T0* a4; /* options */
	T0* a5; /* name */
	T0* a6; /* clusters */
	T0* a7; /* libraries */
	T0* a8; /* dotnet_assemblies */
	T0* a9; /* file_rules */
	T0* a10; /* external_includes */
	T0* a11; /* external_libraries */
	T0* a12; /* external_objects */
	T0* a13; /* parent */
};

/* Struct for type KL_EXECUTION_ENVIRONMENT */
struct S67 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ECF_VARIABLES */
struct S68 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_variables */
	T0* a2; /* secondary_variables */
};

/* Struct for type ET_LACE_PARSER */
struct S69 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_system */
	T6 a2; /* yy_parsing_status */
	T0* a3; /* named_clusters */
	T0* a4; /* override_cluster_names */
	T0* a5; /* external_include_pathnames */
	T0* a6; /* external_object_pathnames */
	T0* a7; /* metadata_cache_path_value */
	T0* a8; /* msil_clr_version_value */
	T1 a9; /* console_application_value */
	T1 a10; /* exception_trace_value */
	T1 a11; /* trace_value */
	T0* a12; /* ast_factory */
	T6 a13; /* eif_lineno */
	T0* a14; /* eif_buffer */
	T0* a15; /* input_buffer */
	T6 a16; /* yy_end */
	T6 a17; /* yy_position */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_suspended_yystacksize */
	T6 a21; /* yy_suspended_yystate */
	T6 a22; /* yy_suspended_yyn */
	T6 a23; /* yy_suspended_yychar1 */
	T6 a24; /* yy_suspended_index */
	T6 a25; /* yy_suspended_yyss_top */
	T6 a26; /* yy_suspended_yy_goto */
	T0* a27; /* yyr1 */
	T0* a28; /* yyss */
	T6 a29; /* yyssp */
	T0* a30; /* yypgoto */
	T0* a31; /* yycheck */
	T0* a32; /* yytable */
	T0* a33; /* yydefgoto */
	T6 a34; /* error_count */
	T1 a35; /* yy_lookahead_needed */
	T6 a36; /* yyerrstatus */
	T0* a37; /* yypact */
	T6 a38; /* last_token */
	T0* a39; /* yytranslate */
	T0* a40; /* yydefact */
	T0* a41; /* filename */
	T0* a42; /* error_handler */
	T0* a43; /* last_et_identifier_value */
	T1 a44; /* yy_rejected */
	T6 a45; /* yy_state_count */
	T6 a46; /* yy_full_match */
	T6 a47; /* yy_lp */
	T6 a48; /* yy_looking_for_trail_begin */
	T6 a49; /* yy_full_lp */
	T6 a50; /* yy_full_state */
	T6 a51; /* pushed_start_condition_count */
	T6 a52; /* yy_start_state */
	T6 a53; /* yy_start */
	T6 a54; /* line */
	T6 a55; /* column */
	T6 a56; /* position */
	T1 a57; /* yy_more_flag */
	T6 a58; /* yy_more_len */
	T6 a59; /* yy_last_accepting_state */
	T6 a60; /* yy_last_accepting_cpos */
	T6 a61; /* yyvsp1 */
	T6 a62; /* yyvsp2 */
	T6 a63; /* yyvsp3 */
	T6 a64; /* yyvsp4 */
	T6 a65; /* yyvsp5 */
	T6 a66; /* yyvsp6 */
	T6 a67; /* yyvsp7 */
	T6 a68; /* yyvsp8 */
	T6 a69; /* yyvsp9 */
	T6 a70; /* yyvsp10 */
	T6 a71; /* yyvsp11 */
	T6 a72; /* yyvsp12 */
	T0* a73; /* yy_state_stack */
	T0* a74; /* yy_content_area */
	T0* a75; /* yy_ec */
	T0* a76; /* yy_content */
	T0* a77; /* yy_accept */
	T0* a78; /* yy_chk */
	T0* a79; /* yy_base */
	T0* a80; /* yy_def */
	T0* a81; /* yy_meta */
	T0* a82; /* yy_nxt */
	T0* a83; /* yy_acclist */
	T0* a84; /* yytypes2 */
	T6 a85; /* yyvsc1 */
	T0* a86; /* yyvs1 */
	T0* a87; /* yyspecial_routines1 */
	T0* a88; /* last_detachable_any_value */
	T6 a89; /* yyvsc2 */
	T0* a90; /* yyvs2 */
	T0* a91; /* yyspecial_routines2 */
	T0* a92; /* yyvs10 */
	T0* a93; /* yyvs5 */
	T0* a94; /* yyvs12 */
	T0* a95; /* yyvs8 */
	T0* a96; /* yyspecial_routines10 */
	T6 a97; /* yyvsc10 */
	T6 a98; /* yyvsc8 */
	T0* a99; /* yyspecial_routines8 */
	T6 a100; /* yyvsc5 */
	T0* a101; /* yyspecial_routines5 */
	T0* a102; /* yyvs4 */
	T0* a103; /* yyvs3 */
	T6 a104; /* yyvsc4 */
	T0* a105; /* yyspecial_routines4 */
	T0* a106; /* yyspecial_routines3 */
	T0* a107; /* yyvs7 */
	T6 a108; /* yyvsc3 */
	T6 a109; /* yyvsc7 */
	T0* a110; /* yyspecial_routines7 */
	T0* a111; /* yyvs6 */
	T6 a112; /* yyvsc6 */
	T0* a113; /* yyspecial_routines6 */
	T6 a114; /* yyvsc12 */
	T0* a115; /* yyspecial_routines12 */
	T0* a116; /* yyvs11 */
	T0* a117; /* yyvs9 */
	T6 a118; /* yyvsc11 */
	T0* a119; /* yyspecial_routines11 */
	T6 a120; /* yyvsc9 */
	T0* a121; /* yyspecial_routines9 */
	T0* a122; /* yytypes1 */
	T0* a123; /* yy_pushed_start_conditions */
	T6 a124; /* code_ */
};

/* Struct for type ET_LACE_ERROR_HANDLER */
struct S70 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
};

/* Struct for type ET_LACE_SYSTEM */
struct S71 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* master_classes */
	T0* a2; /* root_type */
	T0* a3; /* none_type */
	T0* a4; /* any_type */
	T0* a5; /* root_creation */
	T6 a6; /* default_create_seed */
	T0* a7; /* boolean_type */
	T0* a8; /* character_8_type */
	T0* a9; /* character_32_type */
	T0* a10; /* integer_8_type */
	T0* a11; /* integer_16_type */
	T0* a12; /* integer_32_type */
	T0* a13; /* integer_64_type */
	T0* a14; /* natural_8_type */
	T0* a15; /* natural_16_type */
	T0* a16; /* natural_32_type */
	T0* a17; /* natural_64_type */
	T0* a18; /* real_32_type */
	T0* a19; /* real_64_type */
	T0* a20; /* pointer_type */
	T0* a21; /* special_any_type */
	T0* a22; /* string_8_type */
	T0* a23; /* string_32_type */
	T0* a24; /* immutable_string_32_type */
	T0* a25; /* array_any_type */
	T0* a26; /* typed_pointer_any_type */
	T0* a27; /* routine_type */
	T0* a28; /* detachable_tuple_type */
	T0* a29; /* universe */
	T0* a30; /* ise_exception_manager_type */
	T0* a31; /* detachable_none_type */
	T1 a32; /* use_boehm_gc */
	T0* a33; /* external_include_pathnames */
	T0* a34; /* external_library_pathnames */
	T0* a35; /* external_object_pathnames */
	T0* a36; /* character_type */
	T0* a37; /* wide_character_type */
	T0* a38; /* integer_type */
	T0* a39; /* natural_type */
	T0* a40; /* real_type */
	T0* a41; /* double_type */
	T6 a42; /* routine_call_seed */
	T6 a43; /* function_item_seed */
	T6 a44; /* is_equal_seed */
	T6 a45; /* dispose_seed */
	T6 a46; /* registered_feature_count */
	T1 a47; /* attachment_type_conformance_mode */
	T1 a48; /* trace_mode */
	T1 a49; /* exception_trace_mode */
	T1 a50; /* multithreaded_mode */
	T1 a51; /* console_application_mode */
	T0* a52; /* system_name */
	T0* a53; /* master_class_mutex */
	T0* a54; /* register_class_mutex */
	T0* a55; /* register_feature_mutex */
	T0* a56; /* register_inline_constant_mutex */
	T1 a57; /* alias_transition_mode */
	T0* a58; /* current_system */
	T0* a59; /* tuple_type */
	T0* a60; /* detachable_exception_type */
	T0* a61; /* exception_type */
	T0* a62; /* string_type */
	T0* a63; /* name */
	T0* a64; /* clusters */
	T0* a65; /* dotnet_assemblies */
	T0* a66; /* libraries */
	T0* a67; /* detachable_any_type */
	T0* a68; /* detachable_separate_any_type */
	T0* a69; /* separate_any_type */
	T0* a70; /* any_parent */
	T0* a71; /* any_parents */
	T0* a72; /* any_clients */
	T0* a73; /* tuple_like_current_type */
	T0* a74; /* unfolded_empty_tuple_actual_parameters */
	T0* a75; /* array_detachable_any_type */
	T0* a76; /* array_like_current_type */
	T0* a77; /* character_8_convert_feature */
	T0* a78; /* character_32_convert_feature */
	T0* a79; /* exception_manager_type */
	T0* a80; /* function_type */
	T0* a81; /* integer_8_convert_feature */
	T0* a82; /* integer_16_convert_feature */
	T0* a83; /* integer_32_convert_feature */
	T0* a84; /* integer_64_convert_feature */
	T0* a85; /* iterable_detachable_any_type */
	T0* a86; /* natural_8_convert_feature */
	T0* a87; /* natural_16_convert_feature */
	T0* a88; /* natural_32_convert_feature */
	T0* a89; /* natural_64_convert_feature */
	T0* a90; /* predicate_like_current_type */
	T0* a91; /* procedure_like_current_type */
	T0* a92; /* real_32_convert_feature */
	T0* a93; /* real_64_convert_feature */
	T0* a94; /* special_detachable_any_type */
	T0* a95; /* detachable_string_type */
	T0* a96; /* string_8_convert_feature */
	T0* a97; /* string_32_convert_feature */
	T0* a98; /* system_object_type */
	T0* a99; /* system_object_parents */
	T0* a100; /* system_string_type */
	T0* a101; /* type_any_type */
	T0* a102; /* type_type_any_type */
	T0* a103; /* type_detachable_any_type */
	T0* a104; /* type_detachable_like_current_type */
	T0* a105; /* detachable_type_exception_type */
	T0* a106; /* type_detachable_exception_type */
	T0* a107; /* detachable_type_detachable_any_type */
	T0* a108; /* type_like_current_type */
	T0* a109; /* typed_pointer_like_current_type */
	T1 a110; /* is_read_only */
	T1 a111; /* is_preparsed */
	T0* a112; /* scm_read_mapping_builder */
	T0* a113; /* scm_write_mapping_builder */
	T6 a114; /* registered_class_count */
	T1 a115; /* scoop_mode */
	T0* a116; /* implicit_attachment_type_mark */
	T6 a117; /* copy_seed */
	T6 a118; /* iterable_new_cursor_seed */
	T6 a119; /* iteration_cursor_after_seed */
	T6 a120; /* iteration_cursor_forth_seed */
	T6 a121; /* registered_inline_constant_count */
	T1 a122; /* is_dotnet */
	T1 a123; /* target_type_attachment_mode */
	T1 a124; /* obsolete_routine_type_mode */
};

/* Struct for type ET_DYNAMIC_SYSTEM */
struct S72 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T1 a2; /* catcall_error_mode */
	T0* a3; /* current_system */
	T0* a4; /* system_processor */
	T0* a5; /* dynamic_types */
	T0* a6; /* null_dynamic_type_set_builder */
	T1 a7; /* full_class_checking */
	T1 a8; /* catcall_warning_mode */
	T0* a9; /* new_instance_types */
	T0* a10; /* dynamic_type_set_builder */
	T0* a11; /* unknown_type */
	T0* a12; /* boolean_type */
	T0* a13; /* character_8_type */
	T0* a14; /* character_32_type */
	T0* a15; /* immutable_string_32_type */
	T0* a16; /* integer_8_type */
	T0* a17; /* integer_16_type */
	T0* a18; /* integer_32_type */
	T0* a19; /* integer_64_type */
	T0* a20; /* natural_8_type */
	T0* a21; /* natural_16_type */
	T0* a22; /* natural_32_type */
	T0* a23; /* natural_64_type */
	T0* a24; /* real_32_type */
	T0* a25; /* real_64_type */
	T0* a26; /* pointer_type */
	T0* a27; /* string_8_type */
	T0* a28; /* string_32_type */
	T0* a29; /* special_character_8_type */
	T0* a30; /* special_character_32_type */
	T0* a31; /* ise_exception_manager_type */
	T0* a32; /* any_type */
	T0* a33; /* none_type */
	T0* a34; /* root_type */
	T0* a35; /* root_creation_procedure */
	T0* a36; /* special_count_feature */
	T0* a37; /* special_capacity_feature */
	T0* a38; /* array_area_feature */
	T0* a39; /* array_lower_feature */
	T0* a40; /* array_upper_feature */
	T0* a41; /* typed_pointer_to_pointer_feature */
	T0* a42; /* routine_closed_operands_feature */
	T0* a43; /* routine_rout_disp_feature */
	T0* a44; /* routine_set_rout_disp_final_feature */
	T0* a45; /* ise_exception_manager_init_exception_manager_feature */
	T0* a46; /* ise_exception_manager_last_exception_feature */
	T0* a47; /* ise_exception_manager_once_raise_feature */
	T0* a48; /* ise_exception_manager_set_exception_data_feature */
	T0* a49; /* ise_runtime_type_conforms_to_feature */
	T1 a50; /* in_dynamic_type */
	T0* a51; /* ise_runtime_new_type_instance_of_feature */
	T1 a52; /* in_create_meta_type */
	T1 a53; /* all_attributes_used */
	T0* a54; /* ise_runtime_reference_field_feature */
	T0* a55; /* ise_runtime_set_reference_field_feature */
};

/* Struct for type ET_SYSTEM_PROCESSOR */
struct S73 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* stop_request */
	T0* a2; /* eiffel_parser */
	T0* a3; /* interface_checker */
	T1 a4; /* benchmark_shown */
	T0* a5; /* ise_version */
	T0* a6; /* eiffel_preparser */
	T0* a7; /* master_class_checker */
	T0* a8; /* provider_checker */
	T0* a9; /* ancestor_builder */
	T0* a10; /* feature_flattener */
	T0* a11; /* implementation_checker */
	T0* a12; /* error_handler */
	T0* a13; /* processed_class_count_stack */
	T0* a14; /* ast_factory */
	T0* a15; /* dotnet_assembly_consumer */
	T0* a16; /* ecma_version */
	T1 a17; /* flat_mode */
	T1 a18; /* flat_dbc_mode */
	T1 a19; /* metrics_shown */
	T1 a20; /* preparse_shallow_mode */
	T1 a21; /* preparse_single_mode */
	T1 a22; /* preparse_multiple_mode */
	T1 a23; /* unknown_builtin_reported */
	T1 a24; /* qualified_anchored_types_cycle_detection_enabled */
	T1 a25; /* use_attribute_keyword */
	T1 a26; /* use_note_keyword */
	T1 a27; /* use_reference_keyword */
	T1 a28; /* use_attached_keyword */
	T1 a29; /* use_detachable_keyword */
	T1 a30; /* cluster_dependence_enabled */
	T6 a31; /* processed_class_count */
	T1 a32; /* nested_benchmark_shown */
	T1 a33; /* preparse_readonly_mode */
	T1 a34; /* preparse_override_mode */
	T1 a35; /* use_cluster_dependence_pathnames */
	T1 a36; /* providers_enabled */
	T1 a37; /* suppliers_enabled */
};

/* Struct for type ET_C_GENERATOR */
struct S76 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* never_void_target_count */
	T6 a2; /* can_be_void_target_count */
	T1 a3; /* has_fatal_error */
	T0* a4; /* system_processor */
	T0* a5; /* current_dynamic_system */
	T0* a6; /* dynamic_types */
	T1 a7; /* short_names */
	T1 a8; /* split_mode */
	T6 a9; /* split_threshold */
	T1 a10; /* use_boehm_gc */
	T0* a11; /* system_name */
	T0* a12; /* current_file */
	T0* a13; /* header_file */
	T0* a14; /* current_type */
	T0* a15; /* current_feature */
	T0* a16; /* extra_dynamic_type_sets */
	T0* a17; /* current_dynamic_type_sets */
	T0* a18; /* current_function_header_buffer */
	T0* a19; /* current_function_body_buffer */
	T0* a20; /* temp_variables */
	T0* a21; /* used_temp_variables */
	T0* a22; /* free_temp_variables */
	T0* a23; /* frozen_temp_variables */
	T0* a24; /* conforming_types */
	T0* a25; /* conforming_type_set */
	T0* a26; /* non_conforming_types */
	T0* a27; /* equality_type_set */
	T0* a28; /* equality_common_types */
	T0* a29; /* operand_stack */
	T0* a30; /* call_operands */
	T0* a31; /* attachment_dynamic_type_ids */
	T0* a32; /* target_dynamic_type_ids */
	T0* a33; /* target_dynamic_types */
	T0* a34; /* standalone_type_sets */
	T0* a35; /* deep_twin_types */
	T0* a36; /* deep_equal_types */
	T0* a37; /* deep_feature_target_type_sets */
	T0* a38; /* current_object_tests */
	T0* a39; /* current_object_equalities */
	T0* a40; /* current_equalities */
	T0* a41; /* current_agents */
	T0* a42; /* agent_open_operands */
	T0* a43; /* agent_closed_operands */
	T0* a44; /* agent_target */
	T0* a45; /* agent_arguments */
	T0* a46; /* agent_instruction */
	T0* a47; /* agent_expression */
	T0* a48; /* agent_closed_operands_type */
	T0* a49; /* wrapper_expression */
	T0* a50; /* agent_tuple_item_expressions */
	T0* a51; /* agent_manifest_tuple */
	T0* a52; /* formal_arguments */
	T0* a53; /* manifest_array_types */
	T0* a54; /* big_manifest_array_types */
	T0* a55; /* manifest_tuple_types */
	T0* a56; /* once_features */
	T0* a57; /* once_per_process_counts */
	T0* a58; /* once_per_thread_counts */
	T0* a59; /* constant_features */
	T0* a60; /* inline_constants */
	T0* a61; /* dispose_procedures */
	T0* a62; /* dynamic_type_id_set_names */
	T0* a63; /* called_features */
	T0* a64; /* included_header_filenames */
	T0* a65; /* included_runtime_header_files */
	T0* a66; /* included_runtime_c_files */
	T0* a67; /* c_filenames */
	T1 a68; /* finalize_mode */
	T0* a69; /* locals_written_in_body */
	T0* a70; /* locals_written_in_rescue */
	T0* a71; /* locals_written */
	T0* a72; /* locals_read_in_body */
	T0* a73; /* locals_read_in_rescue */
	T0* a74; /* locals_read */
	T0* a75; /* external_c_regexp */
	T0* a76; /* external_c_macro_regexp */
	T0* a77; /* external_c_struct_regexp */
	T0* a78; /* external_c_inline_regexp */
	T0* a79; /* old_external_c_regexp */
	T0* a80; /* old_external_c_macro_regexp */
	T0* a81; /* old_external_c_struct_regexp */
	T0* a82; /* external_cpp_regexp */
	T0* a83; /* external_cpp_inline_regexp */
	T0* a84; /* external_dllwin_regexp */
	T0* a85; /* old_external_dllwin32_regexp */
	T1 a86; /* type_info_ancestors_used */
	T1 a87; /* type_info_attributes_used */
	T1 a88; /* type_info_attribute_name_used */
	T1 a89; /* type_info_attribute_type_id_used */
	T1 a90; /* type_info_attribute_offset_used */
	T1 a91; /* type_info_generator_used */
	T1 a92; /* type_info_name_used */
	T1 a93; /* type_info_generic_parameters_used */
	T1 a94; /* type_info_object_size_used */
	T0* a95; /* c_file */
	T6 a96; /* c_file_size */
	T0* a97; /* cpp_file */
	T6 a98; /* cpp_file_size */
	T6 a99; /* indentation */
	T0* a100; /* assignment_target */
	T1 a101; /* in_operand */
	T0* a102; /* call_target_type */
	T0* a103; /* current_agent */
	T1 a104; /* call_target_check_void */
	T1 a105; /* has_rescue */
	T1 a106; /* result_written */
	T1 a107; /* result_read */
	T1 a108; /* has_retry */
};

/* Struct for type KL_SHELL_COMMAND */
struct S77 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* exit_code */
	T0* a2; /* string_command */
	T0* a3; /* command */
	T6 a4; /* return_code */
	T1 a5; /* is_system_code */
};

/* Struct for type DS_HASH_SET [STRING_8] */
struct S78 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T0* a4; /* equality_tester */
	T6 a5; /* count */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* free_slot */
	T6 a9; /* last_position */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* hash_function */
};

/* Struct for type UT_VERSION */
struct S79 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_revision */
	T6 a4; /* internal_build */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
struct S80 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_dynamic_system */
	T0* a3; /* feature_checker */
	T0* a4; /* current_dynamic_type */
	T0* a5; /* current_dynamic_feature */
	T0* a6; /* dynamic_type_sets */
	T0* a7; /* object_id_dynamic_type_set */
	T0* a8; /* current_index */
	T0* a9; /* result_index */
	T0* a10; /* constant_indexes */
	T0* a11; /* none_index */
	T1 a12; /* catcall_error_mode */
	T1 a13; /* catcall_warning_mode */
	T1 a14; /* no_debug */
	T1 a15; /* no_assertion */
	T1 a16; /* is_built */
	T0* a17; /* alive_conforming_descendants_per_type */
	T0* a18; /* type_checker */
	T0* a19; /* current_type */
	T0* a20; /* current_class */
	T0* a21; /* current_feature */
	T0* a22; /* current_feature_impl */
	T0* a23; /* current_class_impl */
	T0* a24; /* enclosing_inline_agents */
	T0* a25; /* unused_overloaded_procedures_list */
	T0* a26; /* unused_overloaded_queries_list */
	T0* a27; /* unused_overloaded_features_list */
	T0* a28; /* unused_contexts */
	T0* a29; /* current_context */
	T0* a30; /* current_target_type */
	T0* a31; /* current_object_test_types */
	T0* a32; /* current_object_test_scope */
	T0* a33; /* object_test_scope_builder */
	T0* a34; /* current_across_cursor_types */
	T0* a35; /* current_across_cursor_scope */
	T0* a36; /* current_initialization_scope */
	T0* a37; /* current_attachment_scope */
	T0* a38; /* attachment_scope_builder */
	T0* a39; /* unused_attachment_scopes */
	T0* a40; /* indexing_term_list */
	T0* a41; /* default_creation_call_name */
	T0* a42; /* default_creation_call */
	T0* a43; /* system_processor */
	T1 a44; /* in_precursor */
	T0* a45; /* supplier_handler */
	T1 a46; /* in_rescue */
	T0* a47; /* current_inline_agent */
	T1 a48; /* in_invariant */
	T1 a49; /* in_precondition */
	T1 a50; /* in_postcondition */
	T1 a51; /* in_check_instruction */
	T0* a52; /* precursor_procedures */
	T0* a53; /* precursor_queries */
};

/* Struct for type ET_CLASS_TYPE */
struct S81 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
	T0* a4; /* named_base_class */
	T1 a5; /* tuple_actual_parameters_unfolded_2 */
	T1 a6; /* tuple_actual_parameters_unfolded_1 */
};

/* Struct for type ET_TOKEN_CONSTANTS */
struct S82 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CLASS */
struct S83 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* group */
	T0* a2; /* status_mutex */
	T1 a3; /* unprotected_is_parsed */
	T1 a4; /* unprotected_has_syntax_error */
	T1 a5; /* unprotected_ancestors_built */
	T1 a6; /* unprotected_has_ancestors_error */
	T1 a7; /* unprotected_features_flattened */
	T1 a8; /* unprotected_has_flattening_error */
	T1 a9; /* unprotected_interface_checked */
	T1 a10; /* unprotected_has_interface_error */
	T1 a11; /* unprotected_implementation_checked */
	T1 a12; /* unprotected_has_implementation_error */
	T0* a13; /* name */
	T6 a14; /* id */
	T0* a15; /* ancestors */
	T0* a16; /* conforming_ancestors */
	T0* a17; /* queries */
	T0* a18; /* procedures */
	T0* a19; /* class_keyword */
	T0* a20; /* end_keyword */
	T0* a21; /* processing_mutex */
	T0* a22; /* named_base_class */
	T6 a23; /* time_stamp */
	T8 a24; /* class_code */
	T1 a25; /* tuple_actual_parameters_unfolded_1 */
	T1 a26; /* tuple_actual_parameters_unfolded_2 */
	T0* a27; /* formal_parameters */
	T6 a28; /* index */
	T1 a29; /* redeclared_signatures_checked */
	T0* a30; /* parent_clauses */
	T0* a31; /* creators */
	T0* a32; /* class_mark */
	T0* a33; /* filename */
	T0* a34; /* convert_features */
	T0* a35; /* suppliers */
	T1 a36; /* is_checking_implementation */
	T0* a37; /* invariants */
	T1 a38; /* is_ignored */
	T1 a39; /* is_interface */
	T1 a40; /* has_deferred_features */
	T1 a41; /* unprotected_is_marked */
	T0* a42; /* external_keyword */
	T0* a43; /* frozen_keyword */
	T0* a44; /* feature_clauses */
	T0* a45; /* first_indexing */
	T0* a46; /* second_indexing */
	T6 a47; /* tuple_constraint_position */
	T0* a48; /* obsolete_message */
	T0* a49; /* leading_break */
	T0* a50; /* providers */
	T0* a51; /* formal_parameter_types */
};

/* Struct for type KL_OPERATING_SYSTEM */
struct S85 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type UT_CANNOT_READ_FILE_ERROR */
struct S87 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_VERSION_NUMBER */
struct S88 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type VOID_TARGET */
struct S89 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type ROUTINE_FAILURE */
struct S91 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* routine_name */
	T0* a2; /* class_name */
	T0* a3; /* throwing_exception */
	T0* a4; /* internal_trace */
	T0* a5; /* c_description */
	T0* a6; /* recipient_name */
	T0* a7; /* type_name */
};

/* Struct for type OLD_VIOLATION */
struct S93 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type NO_MORE_MEMORY */
struct S95 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_trace */
	T6 a2; /* internal_code */
	T0* a3; /* throwing_exception */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type INVARIANT_VIOLATION */
struct S96 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T1 a2; /* is_entry */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type OPERATING_SYSTEM_SIGNAL_FAILURE */
struct S97 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T6 a2; /* signal_code */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type IO_FAILURE */
struct S98 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_code */
	T0* a2; /* throwing_exception */
	T6 a3; /* error_code */
	T0* a4; /* internal_trace */
	T0* a5; /* c_description */
	T0* a6; /* recipient_name */
	T0* a7; /* type_name */
};

/* Struct for type OPERATING_SYSTEM_FAILURE */
struct S99 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T6 a2; /* error_code */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type COM_FAILURE */
struct S100 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T6 a2; /* hresult_code */
	T0* a3; /* exception_information */
	T6 a4; /* hresult */
	T0* a5; /* internal_trace */
	T0* a6; /* c_description */
	T0* a7; /* recipient_name */
	T0* a8; /* type_name */
};

/* Struct for type EIFFEL_RUNTIME_PANIC */
struct S101 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_code */
	T0* a2; /* throwing_exception */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type PRECONDITION_VIOLATION */
struct S104 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type POSTCONDITION_VIOLATION */
struct S105 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type FLOATING_POINT_FAILURE */
struct S106 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type CHECK_VIOLATION */
struct S107 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type BAD_INSPECT_VALUE */
struct S108 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type VARIANT_VIOLATION */
struct S109 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type LOOP_INVARIANT_VIOLATION */
struct S110 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type RESCUE_FAILURE */
struct S111 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type RESUMPTION_FAILURE */
struct S112 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type CREATE_ON_DEFERRED */
struct S113 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type EXTERNAL_FAILURE */
struct S114 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type VOID_ASSIGNED_TO_EXPANDED */
struct S115 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
struct S116 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type MISMATCH_FAILURE */
struct S117 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type DEVELOPER_EXCEPTION */
struct S118 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type ADDRESS_APPLIED_TO_MELTED_FEATURE */
struct S119 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type SERIALIZATION_FAILURE */
struct S120 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type KL_WINDOWS_FILE_SYSTEM */
struct S121 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* secondary_directory_separator */
};

/* Struct for type KL_UNIX_FILE_SYSTEM */
struct S122 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type PRIMES */
struct S123 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [INTEGER_32] */
struct S124 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 z2[1]; /* item */
};

/* Struct for type SPECIAL [BOOLEAN] */
struct S125 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T1 z2[1]; /* item */
};

/* Struct for type detachable KL_LINKABLE [CHARACTER_8] */
struct S127 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type MANAGED_POINTER */
struct S129 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* item */
	T6 a2; /* count */
	T1 a3; /* is_shared */
};

/* Struct for type FILE_INFO */
struct S130 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* buffered_file_info */
	T1 a2; /* is_following_symlinks */
	T1 a3; /* exists */
	T0* a4; /* internal_file_name */
	T0* a5; /* internal_name_pointer */
};

/* Struct for type MUTEX */
struct S131 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* mutex_pointer */
	T14 a2; /* owner */
};

/* Struct for type UT_ERROR_HANDLER */
struct S132 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
};

/* Struct for type KL_STANDARD_FILES */
struct S133 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_STDERR_FILE */
struct S134 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_STDOUT_FILE */
struct S135 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type UC_STRING */
struct S136 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* byte_count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* internal_case_insensitive_hash_code */
	T0* a5; /* area */
	T6 a6; /* last_byte_index_input */
	T6 a7; /* last_byte_index_result */
};

/* Struct for type KL_ANY_ROUTINES */
struct S137 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [STRING_8] */
struct S139 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [AP_OPTION] */
struct S140 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T0* a3; /* equality_tester */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S141 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T6 a5; /* count */
};

/* Struct for type AP_ERROR_HANDLER */
struct S142 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type DS_LINKED_LIST_CURSOR [AP_OPTION] */
struct S143 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type ARRAY [STRING_8] */
struct S144 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [STRING_8] */
struct S145 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_LINKED_LIST [STRING_8] */
struct S146 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
	T0* a5; /* equality_tester */
};

/* Struct for type KL_STRING_EQUALITY_TESTER */
struct S147 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST [BOOLEAN] */
struct S150 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type DS_LINKED_LIST [INTEGER_32] */
struct S153 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type ET_XACE_AST_FACTORY */
struct S154 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DOCUMENT */
struct S155 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* root_element */
	T0* a2; /* children */
};

/* Struct for type XM_ELEMENT */
struct S156 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* parent */
	T0* a4; /* children */
};

/* Struct for type XM_POSITION_TABLE */
struct S157 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table */
};

/* Struct for type XM_TREE_CALLBACKS_PIPE */
struct S159 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error */
	T0* a2; /* tree */
	T0* a3; /* start */
	T0* a4; /* last */
};

/* Struct for type XM_STOP_ON_ERROR_FILTER */
struct S160 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* last_error */
	T0* a3; /* next */
};

/* Struct for type XM_CALLBACKS_TO_TREE_FILTER */
struct S161 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_position_table */
	T0* a2; /* document */
	T0* a3; /* source_parser */
	T0* a4; /* current_element */
	T0* a5; /* namespace_cache */
	T0* a6; /* next */
};

/* Struct for type ET_XACE_VALIDATOR */
struct S162 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* error_handler */
};

/* Struct for type ET_XACE_PREPROCESSOR */
struct S163 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* variables */
	T0* a2; /* error_handler */
};

/* Struct for type DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8] */
struct S164 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T0* a7; /* equality_tester */
	T0* a8; /* internal_cursor */
	T6 a9; /* found_position */
	T0* a10; /* item_storage */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* capacity */
	T0* a16; /* special_item_routines */
	T0* a17; /* special_key_routines */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type XM_EXPAT_PARSER_FACTORY */
struct S165 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_PARSER */
struct S166 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_last_error_description */
	T0* a2; /* scanner */
	T0* a3; /* error_positions */
	T0* a4; /* scanners */
	T1 a5; /* in_external_dtd */
	T0* a6; /* callbacks */
	T0* a7; /* entities */
	T0* a8; /* pe_entities */
	T0* a9; /* dtd_resolver */
	T0* a10; /* entity_resolver */
	T1 a11; /* use_namespaces */
	T6 a12; /* string_mode */
	T0* a13; /* dtd_callbacks */
	T0* a14; /* last_string_value */
	T0* a15; /* yyss */
	T0* a16; /* yyspecial_routines1 */
	T6 a17; /* yyvsc1 */
	T0* a18; /* yyvs1 */
	T0* a19; /* yyspecial_routines2 */
	T6 a20; /* yyvsc2 */
	T0* a21; /* yyvs2 */
	T0* a22; /* yyspecial_routines3 */
	T6 a23; /* yyvsc3 */
	T0* a24; /* yyvs3 */
	T0* a25; /* yyspecial_routines4 */
	T6 a26; /* yyvsc4 */
	T0* a27; /* yyvs4 */
	T0* a28; /* yyspecial_routines5 */
	T6 a29; /* yyvsc5 */
	T0* a30; /* yyvs5 */
	T0* a31; /* yyspecial_routines6 */
	T6 a32; /* yyvsc6 */
	T0* a33; /* yyvs6 */
	T0* a34; /* yyspecial_routines7 */
	T6 a35; /* yyvsc7 */
	T0* a36; /* yyvs7 */
	T0* a37; /* yyspecial_routines8 */
	T6 a38; /* yyvsc8 */
	T0* a39; /* yyvs8 */
	T0* a40; /* yyspecial_routines9 */
	T6 a41; /* yyvsc9 */
	T0* a42; /* yyvs9 */
	T0* a43; /* yyspecial_routines10 */
	T6 a44; /* yyvsc10 */
	T0* a45; /* yyvs10 */
	T0* a46; /* yyspecial_routines11 */
	T6 a47; /* yyvsc11 */
	T0* a48; /* yyvs11 */
	T0* a49; /* yytranslate */
	T0* a50; /* yyr1 */
	T0* a51; /* yytypes1 */
	T0* a52; /* yytypes2 */
	T0* a53; /* yydefact */
	T0* a54; /* yydefgoto */
	T0* a55; /* yypact */
	T0* a56; /* yypgoto */
	T0* a57; /* yytable */
	T0* a58; /* yycheck */
	T6 a59; /* yy_parsing_status */
	T6 a60; /* yy_suspended_yystacksize */
	T6 a61; /* yy_suspended_yystate */
	T6 a62; /* yy_suspended_yyn */
	T6 a63; /* yy_suspended_yychar1 */
	T6 a64; /* yy_suspended_index */
	T6 a65; /* yy_suspended_yyss_top */
	T6 a66; /* yy_suspended_yy_goto */
	T6 a67; /* yyssp */
	T6 a68; /* error_count */
	T1 a69; /* yy_lookahead_needed */
	T6 a70; /* yyerrstatus */
	T6 a71; /* last_token */
	T6 a72; /* yyvsp1 */
	T6 a73; /* yyvsp2 */
	T6 a74; /* yyvsp3 */
	T6 a75; /* yyvsp4 */
	T6 a76; /* yyvsp5 */
	T6 a77; /* yyvsp6 */
	T6 a78; /* yyvsp7 */
	T6 a79; /* yyvsp8 */
	T6 a80; /* yyvsp9 */
	T6 a81; /* yyvsp10 */
	T6 a82; /* yyvsp11 */
	T0* a83; /* last_detachable_any_value */
};

/* Struct for type ET_XACE_LIBRARY_CONFIG_PARSER */
struct S169 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_handler */
	T0* a2; /* ast_factory */
	T0* a3; /* parsed_libraries */
	T0* a4; /* xml_preprocessor */
	T0* a5; /* xml_validator */
	T0* a6; /* xml_parser */
	T0* a7; /* tree_pipe */
	T0* a8; /* library_parser */
	T0* a9; /* last_library */
	T1 a10; /* is_shallow */
	T1 a11; /* is_ve */
};

/* Struct for type UT_MESSAGE */
struct S170 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type KL_SPECIAL_ROUTINES [STRING_8] */
struct S172 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
struct S173 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [INTEGER_32] */
struct S174 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST_CURSOR [STRING_8] */
struct S175 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* before */
};

/* Struct for type DS_HASH_SET [INTEGER_32] */
struct S176 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type ET_ECF_AST_FACTORY */
struct S177 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
struct S179 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* capacity */
	T0* a16; /* special_item_routines */
	T0* a17; /* special_key_routines */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
struct S180 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_COMPRESSED_POSITION */
struct S181 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
};

/* Struct for type ET_IDENTIFIER */
struct S183 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T6 a2; /* index */
	T0* a3; /* name */
	T2 a4; /* status_code */
	T6 a5; /* compressed_position */
	T6 a6; /* hash_code */
};

/* Struct for type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
struct S185 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ECF_STATE */
struct S188 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* ise_version */
	T1 a3; /* finalize_mode */
	T1 a4; /* is_dotnet */
	T1 a5; /* is_multithreaded */
	T1 a6; /* is_scoop */
};

/* Struct for type ET_ECF_TARGETS */
struct S189 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* targets */
};

/* Struct for type ET_ECF_LIBRARY */
struct S190 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* selected_target */
	T0* a2; /* library_target */
	T0* a3; /* current_system */
	T0* a4; /* filename */
	T0* a5; /* uuid */
	T0* a6; /* ecf_namespace */
	T0* a7; /* ecf_version */
	T0* a8; /* targets */
	T0* a9; /* name */
	T0* a10; /* library */
	T0* a11; /* libraries */
	T0* a12; /* clusters */
	T0* a13; /* dotnet_assemblies */
	T0* a14; /* master_classes */
	T0* a15; /* master_class_mutex */
	T0* a16; /* any_type */
	T0* a17; /* detachable_any_type */
	T0* a18; /* detachable_separate_any_type */
	T0* a19; /* separate_any_type */
	T0* a20; /* any_parent */
	T0* a21; /* any_parents */
	T0* a22; /* any_clients */
	T0* a23; /* tuple_type */
	T0* a24; /* detachable_tuple_type */
	T0* a25; /* tuple_like_current_type */
	T0* a26; /* unfolded_empty_tuple_actual_parameters */
	T0* a27; /* array_any_type */
	T0* a28; /* array_detachable_any_type */
	T0* a29; /* array_like_current_type */
	T0* a30; /* boolean_type */
	T0* a31; /* character_type */
	T0* a32; /* character_8_type */
	T0* a33; /* character_8_convert_feature */
	T0* a34; /* character_32_type */
	T0* a35; /* character_32_convert_feature */
	T0* a36; /* double_type */
	T0* a37; /* exception_type */
	T0* a38; /* detachable_exception_type */
	T0* a39; /* exception_manager_type */
	T0* a40; /* function_type */
	T0* a41; /* immutable_string_32_type */
	T0* a42; /* integer_type */
	T0* a43; /* integer_8_type */
	T0* a44; /* integer_8_convert_feature */
	T0* a45; /* integer_16_type */
	T0* a46; /* integer_16_convert_feature */
	T0* a47; /* integer_32_type */
	T0* a48; /* integer_32_convert_feature */
	T0* a49; /* integer_64_type */
	T0* a50; /* integer_64_convert_feature */
	T0* a51; /* ise_exception_manager_type */
	T0* a52; /* iterable_detachable_any_type */
	T0* a53; /* natural_type */
	T0* a54; /* natural_8_type */
	T0* a55; /* natural_8_convert_feature */
	T0* a56; /* natural_16_type */
	T0* a57; /* natural_16_convert_feature */
	T0* a58; /* natural_32_type */
	T0* a59; /* natural_32_convert_feature */
	T0* a60; /* natural_64_type */
	T0* a61; /* natural_64_convert_feature */
	T0* a62; /* none_type */
	T0* a63; /* detachable_none_type */
	T0* a64; /* pointer_type */
	T0* a65; /* predicate_like_current_type */
	T0* a66; /* procedure_like_current_type */
	T0* a67; /* real_type */
	T0* a68; /* real_32_type */
	T0* a69; /* real_32_convert_feature */
	T0* a70; /* real_64_type */
	T0* a71; /* real_64_convert_feature */
	T0* a72; /* routine_type */
	T0* a73; /* special_any_type */
	T0* a74; /* special_detachable_any_type */
	T0* a75; /* string_type */
	T0* a76; /* detachable_string_type */
	T0* a77; /* string_8_type */
	T0* a78; /* string_8_convert_feature */
	T0* a79; /* string_32_type */
	T0* a80; /* string_32_convert_feature */
	T0* a81; /* system_object_type */
	T0* a82; /* system_object_parents */
	T0* a83; /* system_string_type */
	T0* a84; /* type_any_type */
	T0* a85; /* type_type_any_type */
	T0* a86; /* type_detachable_any_type */
	T0* a87; /* type_detachable_like_current_type */
	T0* a88; /* detachable_type_exception_type */
	T0* a89; /* type_detachable_exception_type */
	T0* a90; /* detachable_type_detachable_any_type */
	T0* a91; /* type_like_current_type */
	T0* a92; /* typed_pointer_any_type */
	T0* a93; /* typed_pointer_like_current_type */
	T0* a94; /* wide_character_type */
	T1 a95; /* is_read_only */
	T1 a96; /* attachment_type_conformance_mode */
	T1 a97; /* target_type_attachment_mode */
	T0* a98; /* implicit_attachment_type_mark */
	T1 a99; /* obsolete_routine_type_mode */
	T1 a100; /* is_preparsed */
};

/* Struct for type ET_ADAPTED_LIBRARIES */
struct S191 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* libraries */
};

/* Struct for type [attached] TUPLE [ET_ADAPTED_LIBRARY] */
struct S193 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_ADAPTED_LIBRARY]] */
struct S194 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type detachable TUPLE */
struct S195 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ECF_LIBRARY_PARSER */
struct S196 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_library */
	T0* a2; /* adapted_library */
	T0* a3; /* parsed_libraries */
	T0* a4; /* parsed_dotnet_assemblies */
	T0* a5; /* xml_parser */
	T0* a6; /* tree_pipe */
	T0* a7; /* error_handler */
	T0* a8; /* ast_factory */
	T0* a9; /* ise_version */
	T0* a10; /* library_parser */
};

/* Struct for type ET_ECF_ADAPTED_LIBRARY */
struct S197 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* library */
	T0* a2; /* name_id */
	T0* a3; /* filename */
	T0* a4; /* universe */
	T0* a5; /* name */
	T1 a6; /* is_read_only */
	T0* a7; /* classname_prefix */
	T0* a8; /* class_renamings */
	T0* a9; /* condition */
};

/* Struct for type ET_ADAPTED_DOTNET_ASSEMBLIES */
struct S198 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_ECF_DOTNET_ASSEMBLY */
struct S199 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* referenced_assemblies */
	T0* a3; /* current_system */
	T0* a4; /* dotnet_assembly */
	T0* a5; /* name */
	T0* a6; /* master_classes */
	T0* a7; /* master_class_mutex */
	T0* a8; /* any_type */
	T0* a9; /* detachable_any_type */
	T0* a10; /* detachable_separate_any_type */
	T0* a11; /* separate_any_type */
	T0* a12; /* any_parent */
	T0* a13; /* any_parents */
	T0* a14; /* any_clients */
	T0* a15; /* tuple_type */
	T0* a16; /* detachable_tuple_type */
	T0* a17; /* tuple_like_current_type */
	T0* a18; /* unfolded_empty_tuple_actual_parameters */
	T0* a19; /* array_any_type */
	T0* a20; /* array_detachable_any_type */
	T0* a21; /* array_like_current_type */
	T0* a22; /* boolean_type */
	T0* a23; /* character_type */
	T0* a24; /* character_8_type */
	T0* a25; /* character_8_convert_feature */
	T0* a26; /* character_32_type */
	T0* a27; /* character_32_convert_feature */
	T0* a28; /* double_type */
	T0* a29; /* exception_type */
	T0* a30; /* detachable_exception_type */
	T0* a31; /* exception_manager_type */
	T0* a32; /* function_type */
	T0* a33; /* immutable_string_32_type */
	T0* a34; /* integer_type */
	T0* a35; /* integer_8_type */
	T0* a36; /* integer_8_convert_feature */
	T0* a37; /* integer_16_type */
	T0* a38; /* integer_16_convert_feature */
	T0* a39; /* integer_32_type */
	T0* a40; /* integer_32_convert_feature */
	T0* a41; /* integer_64_type */
	T0* a42; /* integer_64_convert_feature */
	T0* a43; /* ise_exception_manager_type */
	T0* a44; /* iterable_detachable_any_type */
	T0* a45; /* natural_type */
	T0* a46; /* natural_8_type */
	T0* a47; /* natural_8_convert_feature */
	T0* a48; /* natural_16_type */
	T0* a49; /* natural_16_convert_feature */
	T0* a50; /* natural_32_type */
	T0* a51; /* natural_32_convert_feature */
	T0* a52; /* natural_64_type */
	T0* a53; /* natural_64_convert_feature */
	T0* a54; /* none_type */
	T0* a55; /* detachable_none_type */
	T0* a56; /* pointer_type */
	T0* a57; /* predicate_like_current_type */
	T0* a58; /* procedure_like_current_type */
	T0* a59; /* real_type */
	T0* a60; /* real_32_type */
	T0* a61; /* real_32_convert_feature */
	T0* a62; /* real_64_type */
	T0* a63; /* real_64_convert_feature */
	T0* a64; /* routine_type */
	T0* a65; /* special_any_type */
	T0* a66; /* special_detachable_any_type */
	T0* a67; /* string_type */
	T0* a68; /* detachable_string_type */
	T0* a69; /* string_8_type */
	T0* a70; /* string_8_convert_feature */
	T0* a71; /* string_32_type */
	T0* a72; /* string_32_convert_feature */
	T0* a73; /* system_object_type */
	T0* a74; /* system_object_parents */
	T0* a75; /* system_string_type */
	T0* a76; /* type_any_type */
	T0* a77; /* type_type_any_type */
	T0* a78; /* type_detachable_any_type */
	T0* a79; /* type_detachable_like_current_type */
	T0* a80; /* detachable_type_exception_type */
	T0* a81; /* type_detachable_exception_type */
	T0* a82; /* detachable_type_detachable_any_type */
	T0* a83; /* type_like_current_type */
	T0* a84; /* typed_pointer_any_type */
	T0* a85; /* typed_pointer_like_current_type */
	T0* a86; /* wide_character_type */
	T1 a87; /* is_read_only */
	T1 a88; /* is_preparsed */
};

/* Struct for type ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
struct S201 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* filename */
	T0* a3; /* universe */
	T1 a4; /* is_read_only */
	T0* a5; /* classname_prefix */
	T0* a6; /* class_renamings */
	T0* a7; /* condition */
	T0* a8; /* name */
	T0* a9; /* dotnet_assembly */
};

/* Struct for type ET_ECF_ERROR */
struct S202 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* universe */
	T0* a4; /* position */
	T0* a5; /* code */
};

/* Struct for type EXECUTION_ENVIRONMENT */
struct S203 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* return_code */
};

/* Struct for type ET_LACE_AST_FACTORY */
struct S204 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S205 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type YY_FILE_BUFFER */
struct S206 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T0* a9; /* file */
	T1 a10; /* end_of_file */
	T6 a11; /* capacity */
	T1 a12; /* interactive */
};

/* Struct for type YY_BUFFER */
struct S207 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T6 a9; /* capacity */
};

/* Struct for type DS_HASH_SET [ET_IDENTIFIER] */
struct S208 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* special_item_routines */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* hash_function */
};

/* Struct for type SPECIAL [detachable ANY] */
struct S211 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ANY] */
struct S212 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_IDENTIFIER] */
struct S213 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
struct S214 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LACE_CLUSTERS */
struct S215 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type ET_LACE_CLUSTER */
struct S216 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T1 a5; /* is_abstract */
	T1 a6; /* is_recursive */
	T1 a7; /* is_read_only */
	T0* a8; /* exclude */
	T0* a9; /* subclusters */
	T1 a10; /* overridden_constraint_enabled */
	T1 a11; /* scm_mapping_constraint_enabled */
	T0* a12; /* parent */
	T1 a13; /* is_override */
	T0* a14; /* provider_constraint */
	T0* a15; /* dependant_constraint */
	T0* a16; /* scm_read_mapping */
	T0* a17; /* scm_write_mapping */
	T1 a18; /* is_preparsed */
	T1 a19; /* is_implicit */
	T1 a20; /* use_obsolete_syntax */
	T0* a21; /* cached_absolute_pathname */
};

/* Struct for type ET_LACE_EXCLUDE */
struct S217 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* identifiers */
};

/* Struct for type ET_LACE_DOTNET_ASSEMBLY */
struct S218 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T0* a3; /* classname_prefix_id */
	T0* a4; /* pathname */
	T0* a5; /* referenced_assemblies */
	T0* a6; /* classname_prefix */
	T0* a7; /* current_system */
	T0* a8; /* dotnet_assembly */
	T0* a9; /* name */
	T0* a10; /* master_classes */
	T0* a11; /* master_class_mutex */
	T0* a12; /* any_type */
	T0* a13; /* detachable_any_type */
	T0* a14; /* detachable_separate_any_type */
	T0* a15; /* separate_any_type */
	T0* a16; /* any_parent */
	T0* a17; /* any_parents */
	T0* a18; /* any_clients */
	T0* a19; /* tuple_type */
	T0* a20; /* detachable_tuple_type */
	T0* a21; /* tuple_like_current_type */
	T0* a22; /* unfolded_empty_tuple_actual_parameters */
	T0* a23; /* array_any_type */
	T0* a24; /* array_detachable_any_type */
	T0* a25; /* array_like_current_type */
	T0* a26; /* boolean_type */
	T0* a27; /* character_type */
	T0* a28; /* character_8_type */
	T0* a29; /* character_8_convert_feature */
	T0* a30; /* character_32_type */
	T0* a31; /* character_32_convert_feature */
	T0* a32; /* double_type */
	T0* a33; /* exception_type */
	T0* a34; /* detachable_exception_type */
	T0* a35; /* exception_manager_type */
	T0* a36; /* function_type */
	T0* a37; /* immutable_string_32_type */
	T0* a38; /* integer_type */
	T0* a39; /* integer_8_type */
	T0* a40; /* integer_8_convert_feature */
	T0* a41; /* integer_16_type */
	T0* a42; /* integer_16_convert_feature */
	T0* a43; /* integer_32_type */
	T0* a44; /* integer_32_convert_feature */
	T0* a45; /* integer_64_type */
	T0* a46; /* integer_64_convert_feature */
	T0* a47; /* ise_exception_manager_type */
	T0* a48; /* iterable_detachable_any_type */
	T0* a49; /* natural_type */
	T0* a50; /* natural_8_type */
	T0* a51; /* natural_8_convert_feature */
	T0* a52; /* natural_16_type */
	T0* a53; /* natural_16_convert_feature */
	T0* a54; /* natural_32_type */
	T0* a55; /* natural_32_convert_feature */
	T0* a56; /* natural_64_type */
	T0* a57; /* natural_64_convert_feature */
	T0* a58; /* none_type */
	T0* a59; /* detachable_none_type */
	T0* a60; /* pointer_type */
	T0* a61; /* predicate_like_current_type */
	T0* a62; /* procedure_like_current_type */
	T0* a63; /* real_type */
	T0* a64; /* real_32_type */
	T0* a65; /* real_32_convert_feature */
	T0* a66; /* real_64_type */
	T0* a67; /* real_64_convert_feature */
	T0* a68; /* routine_type */
	T0* a69; /* special_any_type */
	T0* a70; /* special_detachable_any_type */
	T0* a71; /* string_type */
	T0* a72; /* detachable_string_type */
	T0* a73; /* string_8_type */
	T0* a74; /* string_8_convert_feature */
	T0* a75; /* string_32_type */
	T0* a76; /* string_32_convert_feature */
	T0* a77; /* system_object_type */
	T0* a78; /* system_object_parents */
	T0* a79; /* system_string_type */
	T0* a80; /* type_any_type */
	T0* a81; /* type_type_any_type */
	T0* a82; /* type_detachable_any_type */
	T0* a83; /* type_detachable_like_current_type */
	T0* a84; /* detachable_type_exception_type */
	T0* a85; /* type_detachable_exception_type */
	T0* a86; /* detachable_type_detachable_any_type */
	T0* a87; /* type_like_current_type */
	T0* a88; /* typed_pointer_any_type */
	T0* a89; /* typed_pointer_like_current_type */
	T0* a90; /* wide_character_type */
	T1 a91; /* is_read_only */
	T1 a92; /* is_preparsed */
	T0* a93; /* class_renamings */
};

/* Struct for type SPECIAL [ET_LACE_SYSTEM] */
struct S219 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [detachable ET_LACE_CLUSTERS] */
struct S220 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
struct S221 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM] */
struct S222 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS] */
struct S223 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_LACE_CLUSTER] */
struct S224 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
struct S225 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_LACE_EXCLUDE] */
struct S226 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE] */
struct S227 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
struct S228 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
struct S229 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
struct S230 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LACE_DOTNET_GAC_ASSEMBLY */
struct S231 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* assembly_name_id */
	T0* a3; /* classname_prefix_id */
	T0* a4; /* assembly_version_id */
	T0* a5; /* assembly_culture_id */
	T0* a6; /* assembly_public_key_token_id */
	T0* a7; /* assembly_name */
	T0* a8; /* classname_prefix */
	T0* a9; /* assembly_version */
	T0* a10; /* assembly_culture */
	T0* a11; /* assembly_public_key_token */
	T0* a12; /* pathname */
	T0* a13; /* referenced_assemblies */
	T0* a14; /* current_system */
	T0* a15; /* dotnet_assembly */
	T0* a16; /* name */
	T0* a17; /* master_classes */
	T0* a18; /* master_class_mutex */
	T0* a19; /* any_type */
	T0* a20; /* detachable_any_type */
	T0* a21; /* detachable_separate_any_type */
	T0* a22; /* separate_any_type */
	T0* a23; /* any_parent */
	T0* a24; /* any_parents */
	T0* a25; /* any_clients */
	T0* a26; /* tuple_type */
	T0* a27; /* detachable_tuple_type */
	T0* a28; /* tuple_like_current_type */
	T0* a29; /* unfolded_empty_tuple_actual_parameters */
	T0* a30; /* array_any_type */
	T0* a31; /* array_detachable_any_type */
	T0* a32; /* array_like_current_type */
	T0* a33; /* boolean_type */
	T0* a34; /* character_type */
	T0* a35; /* character_8_type */
	T0* a36; /* character_8_convert_feature */
	T0* a37; /* character_32_type */
	T0* a38; /* character_32_convert_feature */
	T0* a39; /* double_type */
	T0* a40; /* exception_type */
	T0* a41; /* detachable_exception_type */
	T0* a42; /* exception_manager_type */
	T0* a43; /* function_type */
	T0* a44; /* immutable_string_32_type */
	T0* a45; /* integer_type */
	T0* a46; /* integer_8_type */
	T0* a47; /* integer_8_convert_feature */
	T0* a48; /* integer_16_type */
	T0* a49; /* integer_16_convert_feature */
	T0* a50; /* integer_32_type */
	T0* a51; /* integer_32_convert_feature */
	T0* a52; /* integer_64_type */
	T0* a53; /* integer_64_convert_feature */
	T0* a54; /* ise_exception_manager_type */
	T0* a55; /* iterable_detachable_any_type */
	T0* a56; /* natural_type */
	T0* a57; /* natural_8_type */
	T0* a58; /* natural_8_convert_feature */
	T0* a59; /* natural_16_type */
	T0* a60; /* natural_16_convert_feature */
	T0* a61; /* natural_32_type */
	T0* a62; /* natural_32_convert_feature */
	T0* a63; /* natural_64_type */
	T0* a64; /* natural_64_convert_feature */
	T0* a65; /* none_type */
	T0* a66; /* detachable_none_type */
	T0* a67; /* pointer_type */
	T0* a68; /* predicate_like_current_type */
	T0* a69; /* procedure_like_current_type */
	T0* a70; /* real_type */
	T0* a71; /* real_32_type */
	T0* a72; /* real_32_convert_feature */
	T0* a73; /* real_64_type */
	T0* a74; /* real_64_convert_feature */
	T0* a75; /* routine_type */
	T0* a76; /* special_any_type */
	T0* a77; /* special_detachable_any_type */
	T0* a78; /* string_type */
	T0* a79; /* detachable_string_type */
	T0* a80; /* string_8_type */
	T0* a81; /* string_8_convert_feature */
	T0* a82; /* string_32_type */
	T0* a83; /* string_32_convert_feature */
	T0* a84; /* system_object_type */
	T0* a85; /* system_object_parents */
	T0* a86; /* system_string_type */
	T0* a87; /* type_any_type */
	T0* a88; /* type_type_any_type */
	T0* a89; /* type_detachable_any_type */
	T0* a90; /* type_detachable_like_current_type */
	T0* a91; /* detachable_type_exception_type */
	T0* a92; /* type_detachable_exception_type */
	T0* a93; /* detachable_type_detachable_any_type */
	T0* a94; /* type_like_current_type */
	T0* a95; /* typed_pointer_any_type */
	T0* a96; /* typed_pointer_like_current_type */
	T0* a97; /* wide_character_type */
	T1 a98; /* is_read_only */
	T1 a99; /* is_preparsed */
	T0* a100; /* class_renamings */
};

/* Struct for type KL_PLATFORM */
struct S232 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_INTEGER_ROUTINES */
struct S233 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
struct S234 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* last_position */
	T0* a5; /* equality_tester */
	T6 a6; /* modulus */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* special_key_routines */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* internal_cursor */
	T6 a17; /* count */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
struct S235 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] TUPLE [ET_CLASS] */
struct S236 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_CLASS]] */
struct S237 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [INTEGER_32] */
struct S238 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 z1;
};

/* Struct for type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
struct S239 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_dynamic_system */
	T1 a3; /* catcall_error_mode */
	T1 a4; /* catcall_warning_mode */
	T1 a5; /* no_debug */
	T1 a6; /* no_assertion */
	T0* a7; /* alive_conforming_descendants_per_type */
};

/* Struct for type ET_DYNAMIC_TYPE */
struct S240 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* base_type */
	T6 a2; /* attribute_count */
	T0* a3; /* queries */
	T1 a4; /* is_alive */
	T6 a5; /* id */
	T0* a6; /* base_class */
	T0* a7; /* meta_type */
	T0* a8; /* procedures */
	T6 a9; /* hash_code */
	T0* a10; /* conforming_ancestors */
	T0* a11; /* conforming_descendants */
	T0* a12; /* alive_conforming_descendants */
	T0* a13; /* next_type */
	T1 a14; /* has_reference_attributes */
	T1 a15; /* has_generic_expanded_attributes */
	T0* a16; /* query_calls */
	T1 a17; /* has_static */
	T0* a18; /* procedure_calls */
	T0* a19; /* equality_expressions */
	T0* a20; /* object_equality_expressions */
};

/* Struct for type DT_DATE_TIME */
struct S241 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* time_storage */
	T6 a2; /* date_storage */
};

/* Struct for type [attached] TUPLE [ET_DYNAMIC_SYSTEM] */
struct S242 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_DYNAMIC_FEATURE */
struct S247 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_feature */
	T0* a2; /* dynamic_type_sets */
	T6 a3; /* id */
	T1 a4; /* is_generated */
	T0* a5; /* result_type_set */
	T0* a6; /* target_type */
	T8 a7; /* builtin_class_code */
	T8 a8; /* builtin_feature_code */
	T1 a9; /* is_regular */
	T0* a10; /* first_precursor */
	T1 a11; /* is_creation */
	T0* a12; /* other_precursors */
	T1 a13; /* is_built */
	T1 a14; /* is_current_type_needed */
	T1 a15; /* is_static */
	T1 a16; /* is_address */
};

/* Struct for type ET_ACTUAL_PARAMETER_LIST */
struct S251 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type ET_EXTERNAL_FUNCTION */
struct S259 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T0* a5; /* preconditions */
	T6 a6; /* hash_code */
	T6 a7; /* first_seed */
	T0* a8; /* arguments */
	T0* a9; /* assigner */
	T0* a10; /* postconditions */
	T8 a11; /* builtin_class_code */
	T8 a12; /* builtin_feature_code */
	T0* a13; /* frozen_keyword */
	T0* a14; /* extended_name */
	T0* a15; /* declared_type */
	T0* a16; /* language */
	T0* a17; /* obsolete_message */
	T0* a18; /* alias_clause */
	T0* a19; /* clients */
	T0* a20; /* is_keyword */
	T0* a21; /* end_keyword */
	T0* a22; /* semicolon */
	T0* a23; /* feature_clause */
	T0* a24; /* first_indexing */
	T0* a25; /* object_tests */
	T0* a26; /* across_components */
	T0* a27; /* other_seeds */
	T1 a28; /* validity_checked */
	T1 a29; /* has_validity_error */
	T6 a30; /* id */
	T6 a31; /* version */
	T0* a32; /* synonym */
};

/* Struct for type ET_TUPLE_TYPE */
struct S260 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* named_base_class */
	T0* a2; /* actual_parameters */
	T0* a3; /* type_mark */
	T0* a4; /* tuple_keyword */
};

/* Struct for type ET_FORMAL_ARGUMENT_LIST */
struct S261 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type detachable ARRAY [ET_TYPE] */
struct S262 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [ET_TYPE] */
struct S263 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_FORMAL_ARGUMENT */
struct S264 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type ET_QUERY_LIST */
struct S265 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* declared_count */
	T0* a3; /* storage */
};

/* Struct for type ET_PROCEDURE_LIST */
struct S266 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* declared_count */
	T0* a3; /* storage */
};

/* Struct for type DT_SHARED_SYSTEM_CLOCK */
struct S267 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DT_SYSTEM_CLOCK */
struct S268 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* second */
	T6 a2; /* year */
	T6 a3; /* month */
	T6 a4; /* day */
	T6 a5; /* hour */
	T6 a6; /* minute */
	T6 a7; /* millisecond */
	T0* a8; /* local_clock */
};

/* Struct for type ET_EIFFEL_PREPARSER */
struct S269 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* eiffel_buffer */
	T0* a2; /* system_processor */
	T6 a3; /* last_text_count */
	T6 a4; /* last_literal_start */
	T0* a5; /* filename */
	T0* a6; /* group */
	T0* a7; /* verbatim_marker */
	T0* a8; /* verbatim_open_white_characters */
	T0* a9; /* verbatim_close_white_characters */
	T0* a10; /* yy_pushed_start_conditions */
	T0* a11; /* input_buffer */
	T0* a12; /* yy_state_stack */
	T6 a13; /* yy_start_state */
	T6 a14; /* yy_line */
	T6 a15; /* yy_column */
	T6 a16; /* yy_position */
	T6 a17; /* yy_start */
	T6 a18; /* yy_end */
	T6 a19; /* line */
	T6 a20; /* column */
	T6 a21; /* position */
	T0* a22; /* yy_nxt */
	T0* a23; /* yy_chk */
	T0* a24; /* yy_base */
	T0* a25; /* yy_def */
	T0* a26; /* yy_ec */
	T0* a27; /* yy_meta */
	T0* a28; /* yy_accept */
	T0* a29; /* yy_acclist */
	T0* a30; /* yy_content */
	T0* a31; /* yy_content_area */
	T0* a32; /* last_classname */
	T1 a33; /* class_keyword_found */
	T6 a34; /* last_token */
	T1 a35; /* yy_more_flag */
	T6 a36; /* yy_more_len */
	T6 a37; /* yy_state_count */
	T6 a38; /* yy_last_accepting_state */
	T6 a39; /* yy_last_accepting_cpos */
	T6 a40; /* yy_lp */
	T6 a41; /* yy_looking_for_trail_begin */
	T6 a42; /* yy_full_match */
	T6 a43; /* yy_full_state */
	T6 a44; /* yy_full_lp */
	T1 a45; /* yy_rejected */
	T6 a46; /* last_literal_end */
	T6 a47; /* pushed_start_condition_count */
	T6 a48; /* ms_column */
	T6 a49; /* ms_line */
	T6 a50; /* last_break_end */
	T6 a51; /* last_comment_end */
};

/* Struct for type ET_MASTER_CLASS_CHECKER */
struct S270 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_EIFFEL_PARSER */
struct S271 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* eiffel_buffer */
	T0* a2; /* counters */
	T0* a3; /* last_formal_arguments_stack */
	T0* a4; /* last_local_variables_stack */
	T0* a5; /* last_keywords */
	T0* a6; /* last_symbols */
	T0* a7; /* last_object_tests_stack */
	T0* a8; /* last_object_tests_pool */
	T0* a9; /* last_across_components_stack */
	T0* a10; /* last_across_components_pool */
	T0* a11; /* assertions */
	T0* a12; /* assertion_counters */
	T0* a13; /* queries */
	T0* a14; /* procedures */
	T0* a15; /* constraints */
	T0* a16; /* providers */
	T0* a17; /* current_class */
	T0* a18; /* system_processor */
	T6 a19; /* last_text_count */
	T6 a20; /* last_literal_start */
	T0* a21; /* filename */
	T0* a22; /* group */
	T0* a23; /* verbatim_marker */
	T0* a24; /* verbatim_open_white_characters */
	T0* a25; /* verbatim_close_white_characters */
	T0* a26; /* yyss */
	T0* a27; /* yy_pushed_start_conditions */
	T0* a28; /* input_buffer */
	T0* a29; /* yyspecial_routines1 */
	T6 a30; /* yyvsc1 */
	T0* a31; /* yyvs1 */
	T0* a32; /* yyspecial_routines2 */
	T6 a33; /* yyvsc2 */
	T0* a34; /* yyvs2 */
	T0* a35; /* yyspecial_routines3 */
	T6 a36; /* yyvsc3 */
	T0* a37; /* yyvs3 */
	T0* a38; /* yyspecial_routines4 */
	T6 a39; /* yyvsc4 */
	T0* a40; /* yyvs4 */
	T0* a41; /* yyspecial_routines5 */
	T6 a42; /* yyvsc5 */
	T0* a43; /* yyvs5 */
	T0* a44; /* yyspecial_routines6 */
	T6 a45; /* yyvsc6 */
	T0* a46; /* yyvs6 */
	T0* a47; /* yyspecial_routines7 */
	T6 a48; /* yyvsc7 */
	T0* a49; /* yyvs7 */
	T0* a50; /* yyspecial_routines8 */
	T6 a51; /* yyvsc8 */
	T0* a52; /* yyvs8 */
	T0* a53; /* yyspecial_routines9 */
	T6 a54; /* yyvsc9 */
	T0* a55; /* yyvs9 */
	T0* a56; /* yyspecial_routines10 */
	T6 a57; /* yyvsc10 */
	T0* a58; /* yyvs10 */
	T0* a59; /* yyspecial_routines11 */
	T6 a60; /* yyvsc11 */
	T0* a61; /* yyvs11 */
	T0* a62; /* yyspecial_routines12 */
	T6 a63; /* yyvsc12 */
	T0* a64; /* yyvs12 */
	T0* a65; /* yyspecial_routines13 */
	T6 a66; /* yyvsc13 */
	T0* a67; /* yyvs13 */
	T0* a68; /* yyspecial_routines14 */
	T6 a69; /* yyvsc14 */
	T0* a70; /* yyvs14 */
	T0* a71; /* yyspecial_routines15 */
	T6 a72; /* yyvsc15 */
	T0* a73; /* yyvs15 */
	T0* a74; /* yyspecial_routines16 */
	T6 a75; /* yyvsc16 */
	T0* a76; /* yyvs16 */
	T0* a77; /* yyspecial_routines17 */
	T6 a78; /* yyvsc17 */
	T0* a79; /* yyvs17 */
	T0* a80; /* yyspecial_routines18 */
	T6 a81; /* yyvsc18 */
	T0* a82; /* yyvs18 */
	T0* a83; /* yyspecial_routines19 */
	T6 a84; /* yyvsc19 */
	T0* a85; /* yyvs19 */
	T0* a86; /* yyspecial_routines20 */
	T6 a87; /* yyvsc20 */
	T0* a88; /* yyvs20 */
	T0* a89; /* yyspecial_routines21 */
	T6 a90; /* yyvsc21 */
	T0* a91; /* yyvs21 */
	T0* a92; /* yyspecial_routines22 */
	T6 a93; /* yyvsc22 */
	T0* a94; /* yyvs22 */
	T0* a95; /* yyspecial_routines23 */
	T6 a96; /* yyvsc23 */
	T0* a97; /* yyvs23 */
	T0* a98; /* yyspecial_routines24 */
	T6 a99; /* yyvsc24 */
	T0* a100; /* yyvs24 */
	T0* a101; /* yyspecial_routines25 */
	T6 a102; /* yyvsc25 */
	T0* a103; /* yyvs25 */
	T0* a104; /* yyspecial_routines26 */
	T6 a105; /* yyvsc26 */
	T0* a106; /* yyvs26 */
	T0* a107; /* yyspecial_routines27 */
	T6 a108; /* yyvsc27 */
	T0* a109; /* yyvs27 */
	T0* a110; /* yyspecial_routines28 */
	T6 a111; /* yyvsc28 */
	T0* a112; /* yyvs28 */
	T0* a113; /* yyspecial_routines29 */
	T6 a114; /* yyvsc29 */
	T0* a115; /* yyvs29 */
	T0* a116; /* yyspecial_routines30 */
	T6 a117; /* yyvsc30 */
	T0* a118; /* yyvs30 */
	T0* a119; /* yyspecial_routines31 */
	T6 a120; /* yyvsc31 */
	T0* a121; /* yyvs31 */
	T0* a122; /* yyspecial_routines32 */
	T6 a123; /* yyvsc32 */
	T0* a124; /* yyvs32 */
	T0* a125; /* yyspecial_routines33 */
	T6 a126; /* yyvsc33 */
	T0* a127; /* yyvs33 */
	T0* a128; /* yyspecial_routines34 */
	T6 a129; /* yyvsc34 */
	T0* a130; /* yyvs34 */
	T0* a131; /* yyspecial_routines35 */
	T6 a132; /* yyvsc35 */
	T0* a133; /* yyvs35 */
	T0* a134; /* yyspecial_routines36 */
	T6 a135; /* yyvsc36 */
	T0* a136; /* yyvs36 */
	T0* a137; /* yyspecial_routines37 */
	T6 a138; /* yyvsc37 */
	T0* a139; /* yyvs37 */
	T0* a140; /* yyspecial_routines38 */
	T6 a141; /* yyvsc38 */
	T0* a142; /* yyvs38 */
	T0* a143; /* yyspecial_routines39 */
	T6 a144; /* yyvsc39 */
	T0* a145; /* yyvs39 */
	T0* a146; /* yyspecial_routines40 */
	T6 a147; /* yyvsc40 */
	T0* a148; /* yyvs40 */
	T0* a149; /* yyspecial_routines41 */
	T6 a150; /* yyvsc41 */
	T0* a151; /* yyvs41 */
	T0* a152; /* yyspecial_routines42 */
	T6 a153; /* yyvsc42 */
	T0* a154; /* yyvs42 */
	T0* a155; /* yyspecial_routines43 */
	T6 a156; /* yyvsc43 */
	T0* a157; /* yyvs43 */
	T0* a158; /* yyspecial_routines44 */
	T6 a159; /* yyvsc44 */
	T0* a160; /* yyvs44 */
	T0* a161; /* yyspecial_routines45 */
	T6 a162; /* yyvsc45 */
	T0* a163; /* yyvs45 */
	T0* a164; /* yyspecial_routines46 */
	T6 a165; /* yyvsc46 */
	T0* a166; /* yyvs46 */
	T0* a167; /* yyspecial_routines47 */
	T6 a168; /* yyvsc47 */
	T0* a169; /* yyvs47 */
	T0* a170; /* yyspecial_routines48 */
	T6 a171; /* yyvsc48 */
	T0* a172; /* yyvs48 */
	T0* a173; /* yyspecial_routines49 */
	T6 a174; /* yyvsc49 */
	T0* a175; /* yyvs49 */
	T0* a176; /* yyspecial_routines50 */
	T6 a177; /* yyvsc50 */
	T0* a178; /* yyvs50 */
	T0* a179; /* yyspecial_routines51 */
	T6 a180; /* yyvsc51 */
	T0* a181; /* yyvs51 */
	T0* a182; /* yyspecial_routines52 */
	T6 a183; /* yyvsc52 */
	T0* a184; /* yyvs52 */
	T0* a185; /* yyspecial_routines53 */
	T6 a186; /* yyvsc53 */
	T0* a187; /* yyvs53 */
	T0* a188; /* yyspecial_routines54 */
	T6 a189; /* yyvsc54 */
	T0* a190; /* yyvs54 */
	T0* a191; /* yyspecial_routines55 */
	T6 a192; /* yyvsc55 */
	T0* a193; /* yyvs55 */
	T0* a194; /* yyspecial_routines56 */
	T6 a195; /* yyvsc56 */
	T0* a196; /* yyvs56 */
	T0* a197; /* yyspecial_routines57 */
	T6 a198; /* yyvsc57 */
	T0* a199; /* yyvs57 */
	T0* a200; /* yyspecial_routines58 */
	T6 a201; /* yyvsc58 */
	T0* a202; /* yyvs58 */
	T0* a203; /* yyspecial_routines59 */
	T6 a204; /* yyvsc59 */
	T0* a205; /* yyvs59 */
	T0* a206; /* yyspecial_routines60 */
	T6 a207; /* yyvsc60 */
	T0* a208; /* yyvs60 */
	T0* a209; /* yyspecial_routines61 */
	T6 a210; /* yyvsc61 */
	T0* a211; /* yyvs61 */
	T0* a212; /* yyspecial_routines62 */
	T6 a213; /* yyvsc62 */
	T0* a214; /* yyvs62 */
	T0* a215; /* yyspecial_routines63 */
	T6 a216; /* yyvsc63 */
	T0* a217; /* yyvs63 */
	T0* a218; /* yyspecial_routines64 */
	T6 a219; /* yyvsc64 */
	T0* a220; /* yyvs64 */
	T0* a221; /* yyspecial_routines65 */
	T6 a222; /* yyvsc65 */
	T0* a223; /* yyvs65 */
	T0* a224; /* yyspecial_routines66 */
	T6 a225; /* yyvsc66 */
	T0* a226; /* yyvs66 */
	T0* a227; /* yyspecial_routines67 */
	T6 a228; /* yyvsc67 */
	T0* a229; /* yyvs67 */
	T0* a230; /* yyspecial_routines68 */
	T6 a231; /* yyvsc68 */
	T0* a232; /* yyvs68 */
	T0* a233; /* yyspecial_routines69 */
	T6 a234; /* yyvsc69 */
	T0* a235; /* yyvs69 */
	T0* a236; /* yyspecial_routines70 */
	T6 a237; /* yyvsc70 */
	T0* a238; /* yyvs70 */
	T0* a239; /* yyspecial_routines71 */
	T6 a240; /* yyvsc71 */
	T0* a241; /* yyvs71 */
	T0* a242; /* yyspecial_routines72 */
	T6 a243; /* yyvsc72 */
	T0* a244; /* yyvs72 */
	T0* a245; /* yyspecial_routines73 */
	T6 a246; /* yyvsc73 */
	T0* a247; /* yyvs73 */
	T0* a248; /* yyspecial_routines74 */
	T6 a249; /* yyvsc74 */
	T0* a250; /* yyvs74 */
	T0* a251; /* yyspecial_routines75 */
	T6 a252; /* yyvsc75 */
	T0* a253; /* yyvs75 */
	T0* a254; /* yyspecial_routines76 */
	T6 a255; /* yyvsc76 */
	T0* a256; /* yyvs76 */
	T0* a257; /* yyspecial_routines77 */
	T6 a258; /* yyvsc77 */
	T0* a259; /* yyvs77 */
	T0* a260; /* yyspecial_routines78 */
	T6 a261; /* yyvsc78 */
	T0* a262; /* yyvs78 */
	T0* a263; /* yyspecial_routines79 */
	T6 a264; /* yyvsc79 */
	T0* a265; /* yyvs79 */
	T0* a266; /* yyspecial_routines80 */
	T6 a267; /* yyvsc80 */
	T0* a268; /* yyvs80 */
	T0* a269; /* yyspecial_routines81 */
	T6 a270; /* yyvsc81 */
	T0* a271; /* yyvs81 */
	T0* a272; /* yyspecial_routines82 */
	T6 a273; /* yyvsc82 */
	T0* a274; /* yyvs82 */
	T0* a275; /* yyspecial_routines83 */
	T6 a276; /* yyvsc83 */
	T0* a277; /* yyvs83 */
	T0* a278; /* yyspecial_routines84 */
	T6 a279; /* yyvsc84 */
	T0* a280; /* yyvs84 */
	T0* a281; /* yyspecial_routines85 */
	T6 a282; /* yyvsc85 */
	T0* a283; /* yyvs85 */
	T0* a284; /* yyspecial_routines86 */
	T6 a285; /* yyvsc86 */
	T0* a286; /* yyvs86 */
	T0* a287; /* yyspecial_routines87 */
	T6 a288; /* yyvsc87 */
	T0* a289; /* yyvs87 */
	T0* a290; /* yyspecial_routines88 */
	T6 a291; /* yyvsc88 */
	T0* a292; /* yyvs88 */
	T0* a293; /* yyspecial_routines89 */
	T6 a294; /* yyvsc89 */
	T0* a295; /* yyvs89 */
	T0* a296; /* yyspecial_routines90 */
	T6 a297; /* yyvsc90 */
	T0* a298; /* yyvs90 */
	T0* a299; /* yyspecial_routines91 */
	T6 a300; /* yyvsc91 */
	T0* a301; /* yyvs91 */
	T0* a302; /* yyspecial_routines92 */
	T6 a303; /* yyvsc92 */
	T0* a304; /* yyvs92 */
	T0* a305; /* yyspecial_routines93 */
	T6 a306; /* yyvsc93 */
	T0* a307; /* yyvs93 */
	T0* a308; /* yyspecial_routines94 */
	T6 a309; /* yyvsc94 */
	T0* a310; /* yyvs94 */
	T0* a311; /* yyspecial_routines95 */
	T6 a312; /* yyvsc95 */
	T0* a313; /* yyvs95 */
	T0* a314; /* yyspecial_routines96 */
	T6 a315; /* yyvsc96 */
	T0* a316; /* yyvs96 */
	T0* a317; /* yyspecial_routines97 */
	T6 a318; /* yyvsc97 */
	T0* a319; /* yyvs97 */
	T0* a320; /* yyspecial_routines98 */
	T6 a321; /* yyvsc98 */
	T0* a322; /* yyvs98 */
	T0* a323; /* yyspecial_routines99 */
	T6 a324; /* yyvsc99 */
	T0* a325; /* yyvs99 */
	T0* a326; /* yyspecial_routines100 */
	T6 a327; /* yyvsc100 */
	T0* a328; /* yyvs100 */
	T0* a329; /* yyspecial_routines101 */
	T6 a330; /* yyvsc101 */
	T0* a331; /* yyvs101 */
	T0* a332; /* yyspecial_routines102 */
	T6 a333; /* yyvsc102 */
	T0* a334; /* yyvs102 */
	T0* a335; /* yyspecial_routines103 */
	T6 a336; /* yyvsc103 */
	T0* a337; /* yyvs103 */
	T0* a338; /* yyspecial_routines104 */
	T6 a339; /* yyvsc104 */
	T0* a340; /* yyvs104 */
	T0* a341; /* yyspecial_routines105 */
	T6 a342; /* yyvsc105 */
	T0* a343; /* yyvs105 */
	T0* a344; /* yyspecial_routines106 */
	T6 a345; /* yyvsc106 */
	T0* a346; /* yyvs106 */
	T0* a347; /* yyspecial_routines107 */
	T6 a348; /* yyvsc107 */
	T0* a349; /* yyvs107 */
	T0* a350; /* yyspecial_routines108 */
	T6 a351; /* yyvsc108 */
	T0* a352; /* yyvs108 */
	T0* a353; /* yyspecial_routines109 */
	T6 a354; /* yyvsc109 */
	T0* a355; /* yyvs109 */
	T0* a356; /* yyspecial_routines110 */
	T6 a357; /* yyvsc110 */
	T0* a358; /* yyvs110 */
	T0* a359; /* yyspecial_routines111 */
	T6 a360; /* yyvsc111 */
	T0* a361; /* yyvs111 */
	T0* a362; /* yyspecial_routines112 */
	T6 a363; /* yyvsc112 */
	T0* a364; /* yyvs112 */
	T0* a365; /* yyspecial_routines113 */
	T6 a366; /* yyvsc113 */
	T0* a367; /* yyvs113 */
	T0* a368; /* yyspecial_routines114 */
	T6 a369; /* yyvsc114 */
	T0* a370; /* yyvs114 */
	T0* a371; /* yyspecial_routines115 */
	T6 a372; /* yyvsc115 */
	T0* a373; /* yyvs115 */
	T0* a374; /* yyspecial_routines116 */
	T6 a375; /* yyvsc116 */
	T0* a376; /* yyvs116 */
	T0* a377; /* yyspecial_routines117 */
	T6 a378; /* yyvsc117 */
	T0* a379; /* yyvs117 */
	T0* a380; /* yyspecial_routines118 */
	T6 a381; /* yyvsc118 */
	T0* a382; /* yyvs118 */
	T0* a383; /* yyspecial_routines119 */
	T6 a384; /* yyvsc119 */
	T0* a385; /* yyvs119 */
	T0* a386; /* yyspecial_routines120 */
	T6 a387; /* yyvsc120 */
	T0* a388; /* yyvs120 */
	T0* a389; /* yyspecial_routines121 */
	T6 a390; /* yyvsc121 */
	T0* a391; /* yyvs121 */
	T0* a392; /* yyspecial_routines122 */
	T6 a393; /* yyvsc122 */
	T0* a394; /* yyvs122 */
	T0* a395; /* yyspecial_routines123 */
	T6 a396; /* yyvsc123 */
	T0* a397; /* yyvs123 */
	T0* a398; /* yytranslate */
	T0* a399; /* yyr1 */
	T0* a400; /* yytypes1 */
	T0* a401; /* yytypes2 */
	T0* a402; /* yydefact */
	T0* a403; /* yydefgoto */
	T0* a404; /* yypact */
	T0* a405; /* yypgoto */
	T0* a406; /* yytable */
	T0* a407; /* yycheck */
	T0* a408; /* yy_state_stack */
	T6 a409; /* yy_start_state */
	T6 a410; /* yy_line */
	T6 a411; /* yy_column */
	T6 a412; /* yy_position */
	T6 a413; /* yy_start */
	T6 a414; /* yy_end */
	T6 a415; /* line */
	T6 a416; /* column */
	T6 a417; /* position */
	T0* a418; /* yy_nxt */
	T0* a419; /* yy_chk */
	T0* a420; /* yy_base */
	T0* a421; /* yy_def */
	T0* a422; /* yy_ec */
	T0* a423; /* yy_meta */
	T0* a424; /* yy_accept */
	T0* a425; /* yy_acclist */
	T0* a426; /* yy_content */
	T0* a427; /* yy_content_area */
	T6 a428; /* time_stamp */
	T0* a429; /* last_class */
	T6 a430; /* yy_parsing_status */
	T6 a431; /* yy_suspended_yystacksize */
	T6 a432; /* yy_suspended_yystate */
	T6 a433; /* yy_suspended_yyn */
	T6 a434; /* yy_suspended_yychar1 */
	T6 a435; /* yy_suspended_index */
	T6 a436; /* yy_suspended_yyss_top */
	T6 a437; /* yy_suspended_yy_goto */
	T6 a438; /* yyssp */
	T6 a439; /* error_count */
	T1 a440; /* yy_lookahead_needed */
	T6 a441; /* yyerrstatus */
	T6 a442; /* last_token */
	T0* a443; /* last_clients */
	T0* a444; /* last_export_clients */
	T0* a445; /* last_feature_clause */
	T6 a446; /* last_literal_end */
	T1 a447; /* yy_rejected */
	T6 a448; /* yy_state_count */
	T6 a449; /* yy_full_match */
	T6 a450; /* yy_lp */
	T6 a451; /* yy_looking_for_trail_begin */
	T6 a452; /* yy_full_lp */
	T6 a453; /* yy_full_state */
	T6 a454; /* pushed_start_condition_count */
	T1 a455; /* yy_more_flag */
	T6 a456; /* yy_more_len */
	T6 a457; /* yy_last_accepting_state */
	T6 a458; /* yy_last_accepting_cpos */
	T6 a459; /* yyvsp1 */
	T6 a460; /* yyvsp2 */
	T6 a461; /* yyvsp3 */
	T6 a462; /* yyvsp4 */
	T6 a463; /* yyvsp5 */
	T6 a464; /* yyvsp6 */
	T6 a465; /* yyvsp7 */
	T6 a466; /* yyvsp8 */
	T6 a467; /* yyvsp9 */
	T6 a468; /* yyvsp10 */
	T6 a469; /* yyvsp11 */
	T6 a470; /* yyvsp12 */
	T6 a471; /* yyvsp13 */
	T6 a472; /* yyvsp14 */
	T6 a473; /* yyvsp15 */
	T6 a474; /* yyvsp16 */
	T6 a475; /* yyvsp17 */
	T6 a476; /* yyvsp18 */
	T6 a477; /* yyvsp19 */
	T6 a478; /* yyvsp20 */
	T6 a479; /* yyvsp21 */
	T6 a480; /* yyvsp22 */
	T6 a481; /* yyvsp23 */
	T6 a482; /* yyvsp24 */
	T6 a483; /* yyvsp25 */
	T6 a484; /* yyvsp26 */
	T6 a485; /* yyvsp27 */
	T6 a486; /* yyvsp28 */
	T6 a487; /* yyvsp29 */
	T6 a488; /* yyvsp30 */
	T6 a489; /* yyvsp31 */
	T6 a490; /* yyvsp32 */
	T6 a491; /* yyvsp33 */
	T6 a492; /* yyvsp34 */
	T6 a493; /* yyvsp35 */
	T6 a494; /* yyvsp36 */
	T6 a495; /* yyvsp37 */
	T6 a496; /* yyvsp38 */
	T6 a497; /* yyvsp39 */
	T6 a498; /* yyvsp40 */
	T6 a499; /* yyvsp41 */
	T6 a500; /* yyvsp42 */
	T6 a501; /* yyvsp43 */
	T6 a502; /* yyvsp44 */
	T6 a503; /* yyvsp45 */
	T6 a504; /* yyvsp46 */
	T6 a505; /* yyvsp47 */
	T6 a506; /* yyvsp48 */
	T6 a507; /* yyvsp49 */
	T6 a508; /* yyvsp50 */
	T6 a509; /* yyvsp51 */
	T6 a510; /* yyvsp52 */
	T6 a511; /* yyvsp53 */
	T6 a512; /* yyvsp54 */
	T6 a513; /* yyvsp55 */
	T6 a514; /* yyvsp56 */
	T6 a515; /* yyvsp57 */
	T6 a516; /* yyvsp58 */
	T6 a517; /* yyvsp59 */
	T6 a518; /* yyvsp60 */
	T6 a519; /* yyvsp61 */
	T6 a520; /* yyvsp62 */
	T6 a521; /* yyvsp63 */
	T6 a522; /* yyvsp64 */
	T6 a523; /* yyvsp65 */
	T6 a524; /* yyvsp66 */
	T6 a525; /* yyvsp67 */
	T6 a526; /* yyvsp68 */
	T6 a527; /* yyvsp69 */
	T6 a528; /* yyvsp70 */
	T6 a529; /* yyvsp71 */
	T6 a530; /* yyvsp72 */
	T6 a531; /* yyvsp73 */
	T6 a532; /* yyvsp74 */
	T6 a533; /* yyvsp75 */
	T6 a534; /* yyvsp76 */
	T6 a535; /* yyvsp77 */
	T6 a536; /* yyvsp78 */
	T6 a537; /* yyvsp79 */
	T6 a538; /* yyvsp80 */
	T6 a539; /* yyvsp81 */
	T6 a540; /* yyvsp82 */
	T6 a541; /* yyvsp83 */
	T6 a542; /* yyvsp84 */
	T6 a543; /* yyvsp85 */
	T6 a544; /* yyvsp86 */
	T6 a545; /* yyvsp87 */
	T6 a546; /* yyvsp88 */
	T6 a547; /* yyvsp89 */
	T6 a548; /* yyvsp90 */
	T6 a549; /* yyvsp91 */
	T6 a550; /* yyvsp92 */
	T6 a551; /* yyvsp93 */
	T6 a552; /* yyvsp94 */
	T6 a553; /* yyvsp95 */
	T6 a554; /* yyvsp96 */
	T6 a555; /* yyvsp97 */
	T6 a556; /* yyvsp98 */
	T6 a557; /* yyvsp99 */
	T6 a558; /* yyvsp100 */
	T6 a559; /* yyvsp101 */
	T6 a560; /* yyvsp102 */
	T6 a561; /* yyvsp103 */
	T6 a562; /* yyvsp104 */
	T6 a563; /* yyvsp105 */
	T6 a564; /* yyvsp106 */
	T6 a565; /* yyvsp107 */
	T6 a566; /* yyvsp108 */
	T6 a567; /* yyvsp109 */
	T6 a568; /* yyvsp110 */
	T6 a569; /* yyvsp111 */
	T6 a570; /* yyvsp112 */
	T6 a571; /* yyvsp113 */
	T6 a572; /* yyvsp114 */
	T6 a573; /* yyvsp115 */
	T6 a574; /* yyvsp116 */
	T6 a575; /* yyvsp117 */
	T6 a576; /* yyvsp118 */
	T6 a577; /* yyvsp119 */
	T6 a578; /* yyvsp120 */
	T6 a579; /* yyvsp121 */
	T6 a580; /* yyvsp122 */
	T6 a581; /* yyvsp123 */
	T0* a582; /* last_detachable_any_value */
	T0* a583; /* last_detachable_et_keyword_value */
	T0* a584; /* last_detachable_et_agent_keyword_value */
	T0* a585; /* last_detachable_et_precursor_keyword_value */
	T0* a586; /* last_detachable_et_symbol_value */
	T0* a587; /* last_detachable_et_position_value */
	T0* a588; /* last_detachable_et_boolean_constant_value */
	T0* a589; /* last_detachable_et_break_value */
	T0* a590; /* last_detachable_et_character_constant_value */
	T0* a591; /* last_detachable_et_current_value */
	T0* a592; /* last_detachable_et_free_operator_value */
	T0* a593; /* last_detachable_et_identifier_value */
	T0* a594; /* last_detachable_et_integer_constant_value */
	T0* a595; /* last_detachable_et_keyword_operator_value */
	T0* a596; /* last_detachable_et_manifest_string_value */
	T0* a597; /* last_detachable_et_real_constant_value */
	T0* a598; /* last_detachable_et_result_value */
	T0* a599; /* last_detachable_et_retry_instruction_value */
	T0* a600; /* last_detachable_et_symbol_operator_value */
	T0* a601; /* last_detachable_et_void_value */
	T0* a602; /* last_detachable_et_semicolon_symbol_value */
	T0* a603; /* last_detachable_et_bracket_symbol_value */
	T0* a604; /* last_detachable_et_question_mark_symbol_value */
	T0* a605; /* last_formal_arguments */
	T0* a606; /* last_local_variables */
	T0* a607; /* last_object_tests */
	T0* a608; /* last_across_components */
	T6 a609; /* last_break_end */
	T6 a610; /* last_comment_end */
	T6 a611; /* ms_column */
	T6 a612; /* ms_line */
	T6 a613; /* break_kind */
};

/* Struct for type ET_PROVIDER_CHECKER */
struct S272 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
};

/* Struct for type ET_ANCESTOR_BUILDER */
struct S273 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_sorter */
	T0* a2; /* ancestors */
	T0* a3; /* conforming_ancestors */
	T0* a4; /* parent_checker */
	T0* a5; /* formal_parameter_checker */
	T0* a6; /* parent_context */
	T0* a7; /* current_class */
	T0* a8; /* system_processor */
};

/* Struct for type ET_FEATURE_FLATTENER */
struct S274 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* named_features */
	T0* a2; /* queries */
	T0* a3; /* procedures */
	T0* a4; /* aliased_features */
	T0* a5; /* clients_list */
	T0* a6; /* client_classes */
	T0* a7; /* feature_adaptation_resolver */
	T0* a8; /* dotnet_feature_adaptation_resolver */
	T0* a9; /* identifier_type_resolver */
	T0* a10; /* unfolded_tuple_actual_parameters_resolver */
	T0* a11; /* anchored_type_checker */
	T0* a12; /* signature_checker */
	T0* a13; /* parent_checker */
	T0* a14; /* formal_parameter_checker */
	T0* a15; /* builtin_feature_checker */
	T0* a16; /* precursor_checker */
	T0* a17; /* precursors */
	T0* a18; /* current_class */
	T0* a19; /* system_processor */
	T1 a20; /* has_signature_error */
};

/* Struct for type ET_INTERFACE_CHECKER */
struct S275 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* classes_to_be_processed */
	T0* a2; /* parent_checker3 */
	T0* a3; /* qualified_anchored_type_checker */
	T0* a4; /* named_features */
	T0* a5; /* feature_adaptation_resolver */
	T0* a6; /* dotnet_feature_adaptation_resolver */
	T0* a7; /* signature_checker */
	T0* a8; /* unfolded_tuple_actual_parameters_resolver */
	T0* a9; /* current_class */
	T0* a10; /* system_processor */
};

/* Struct for type ET_IMPLEMENTATION_CHECKER */
struct S276 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_checker */
	T0* a2; /* precursor_procedures */
	T0* a3; /* precursor_queries */
	T0* a4; /* supplier_builder */
	T0* a5; /* current_class */
	T0* a6; /* no_suppliers */
	T0* a7; /* system_processor */
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS] */
struct S277 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
	T0* a6; /* equality_tester */
};

/* Struct for type [attached] TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
struct S278 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_AST_NULL_PROCESSOR */
struct S279 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [INTEGER_32] */
struct S280 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_AST_FACTORY */
struct S281 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_NULL_ERROR_HANDLER */
struct S282 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* info_file */
	T0* a2; /* mutex */
	T0* a3; /* error_file */
	T0* a4; /* warning_file */
	T1 a5; /* is_ise */
	T1 a6; /* is_ge */
	T1 a7; /* has_eiffel_error */
	T1 a8; /* has_error */
	T1 a9; /* has_internal_error */
	T1 a10; /* is_verbose */
	T1 a11; /* is_pedantic */
};

/* Struct for type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
struct S284 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* system_processor */
};

/* Struct for type DT_DATE_TIME_DURATION */
struct S285 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* year */
	T6 a2; /* month */
	T6 a3; /* day */
	T6 a4; /* hour */
	T6 a5; /* minute */
	T6 a6; /* second */
	T6 a7; /* millisecond */
};

/* Struct for type KL_NULL_TEXT_OUTPUT_STREAM */
struct S286 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
};

/* Struct for type ET_DYNAMIC_TYPE_SET_LIST */
struct S287 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type KL_STRING_OUTPUT_STREAM */
struct S288 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* string */
};

/* Struct for type DS_ARRAYED_LIST [ET_IDENTIFIER] */
struct S289 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_TYPE_HASH_LIST */
struct S290 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* clashes */
	T0* a4; /* slots */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET */
struct S291 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
};

/* Struct for type DS_ARRAYED_STACK [ET_EXPRESSION] */
struct S292 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_EXPRESSION] */
struct S293 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S294 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* last_position */
	T6 a4; /* capacity */
	T6 a5; /* count */
	T6 a6; /* free_slot */
	T6 a7; /* slots_position */
	T6 a8; /* modulus */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* key_equality_tester */
	T0* a11; /* equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
struct S295 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TYPE] */
struct S296 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S297 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_OBJECT_TEST] */
struct S298 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION] */
struct S299 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
struct S300 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_AGENT] */
struct S301 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_EXPRESSION */
struct S302 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CURRENT */
struct S303 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_ACTUAL_ARGUMENT_LIST */
struct S304 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_symbol */
	T0* a4; /* right_symbol */
};

/* Struct for type ET_QUALIFIED_CALL_INSTRUCTION */
struct S305 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
	T0* a4; /* parenthesis_call */
};

/* Struct for type ET_QUALIFIED_CALL_EXPRESSION */
struct S308 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T6 a2; /* index */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* parenthesis_call */
};

/* Struct for type ET_UNQUALIFIED_CALL_EXPRESSION */
struct S309 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* arguments */
	T6 a3; /* index */
	T0* a4; /* parenthesis_call */
};

/* Struct for type DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S310 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_MANIFEST_TUPLE */
struct S311 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_symbol */
	T0* a2; /* right_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
	T6 a5; /* index */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
struct S312 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_FEATURE] */
struct S313 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* count */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* modulus */
	T6 a6; /* slots_position */
	T6 a7; /* clashes_previous_position */
	T0* a8; /* key_equality_tester */
	T0* a9; /* equality_tester */
	T0* a10; /* internal_cursor */
	T6 a11; /* found_position */
	T0* a12; /* item_storage */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* capacity */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ARRAY [INTEGER_32] */
struct S314 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
struct S315 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
struct S316 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
struct S317 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T0* a10; /* internal_cursor */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
struct S318 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, STRING_8] */
struct S319 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* count */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* capacity */
	T6 a11; /* slots_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* equality_tester */
	T6 a15; /* found_position */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_IDENTIFIER_TESTER */
struct S320 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable KL_EQUALITY_TESTER [ET_IDENTIFIER] */
struct S321 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type RX_PCRE_REGULAR_EXPRESSION */
struct S322 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* subject */
	T6 a2; /* subject_end */
	T6 a3; /* subject_start */
	T6 a4; /* match_count */
	T0* a5; /* offset_vector */
	T6 a6; /* offset_vector_count */
	T6 a7; /* brastart_capacity */
	T0* a8; /* brastart_vector */
	T6 a9; /* brastart_lower */
	T6 a10; /* brastart_count */
	T6 a11; /* eptr_capacity */
	T0* a12; /* eptr_vector */
	T6 a13; /* eptr_lower */
	T6 a14; /* eptr_upper */
	T0* a15; /* byte_code */
	T0* a16; /* internal_start_bits */
	T0* a17; /* pattern_buffer */
	T6 a18; /* subexpression_count */
	T0* a19; /* pattern */
	T6 a20; /* pattern_count */
	T6 a21; /* pattern_position */
	T6 a22; /* code_index */
	T6 a23; /* maxbackrefs */
	T6 a24; /* optchanged */
	T6 a25; /* first_character */
	T6 a26; /* required_character */
	T6 a27; /* regexp_countlits */
	T0* a28; /* start_bits */
	T0* a29; /* error_message */
	T1 a30; /* is_anchored */
	T0* a31; /* character_case_mapping */
	T0* a32; /* word_set */
	T6 a33; /* subject_next_start */
	T6 a34; /* error_code */
	T6 a35; /* error_position */
	T1 a36; /* is_startline */
	T1 a37; /* is_caseless */
	T1 a38; /* is_bol */
	T1 a39; /* is_eol */
	T1 a40; /* is_multiline */
	T1 a41; /* is_dotall */
	T1 a42; /* is_extended */
	T1 a43; /* is_empty_allowed */
	T1 a44; /* is_dollar_endonly */
	T1 a45; /* is_greedy */
	T1 a46; /* is_strict */
	T1 a47; /* is_ichanged */
	T6 a48; /* first_matched_index */
	T6 a49; /* eptr */
	T6 a50; /* offset_top */
	T1 a51; /* is_matching_caseless */
	T1 a52; /* is_matching_multiline */
	T1 a53; /* is_matching_dotall */
};

/* Struct for type KL_TEXT_OUTPUT_FILE */
struct S323 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* mode */
	T14 a3; /* file_pointer */
	T1 a4; /* descriptor_available */
	T0* a5; /* last_string */
	T0* a6; /* internal_name */
	T0* a7; /* internal_detachable_name_pointer */
};

/* Struct for type ET_DYNAMIC_TUPLE_TYPE */
struct S324 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T0* a8; /* procedures */
	T0* a9; /* item_type_sets */
	T1 a10; /* has_reference_attributes */
	T1 a11; /* has_generic_expanded_attributes */
	T0* a12; /* alive_conforming_descendants */
	T6 a13; /* hash_code */
	T0* a14; /* next_type */
	T0* a15; /* query_calls */
	T0* a16; /* conforming_ancestors */
	T0* a17; /* conforming_descendants */
	T1 a18; /* has_static */
	T0* a19; /* procedure_calls */
	T0* a20; /* equality_expressions */
	T0* a21; /* object_equality_expressions */
};

/* Struct for type UT_TEMPLATE_EXPANDER */
struct S325 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type UT_CANNOT_WRITE_TO_FILE_ERROR */
struct S326 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_DYNAMIC_FEATURE_LIST */
struct S327 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_DYNAMIC_PRECURSOR */
struct S328 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* is_generated */
	T0* a2; /* current_feature */
	T6 a3; /* id */
	T0* a4; /* target_type */
	T0* a5; /* static_feature */
	T0* a6; /* dynamic_type_sets */
	T0* a7; /* result_type_set */
	T1 a8; /* is_regular */
	T1 a9; /* is_static */
	T1 a10; /* is_creation */
	T1 a11; /* is_address */
	T8 a12; /* builtin_class_code */
	T8 a13; /* builtin_feature_code */
	T0* a14; /* first_precursor */
	T0* a15; /* other_precursors */
	T1 a16; /* is_built */
	T0* a17; /* parent_type */
	T1 a18; /* is_current_type_needed */
};

/* Struct for type ET_DYNAMIC_PRECURSOR_LIST */
struct S329 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE] */
struct S330 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* items */
	T0* a5; /* counts */
	T0* a6; /* successors */
};

/* Struct for type ET_RESULT */
struct S331 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
struct S332 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_call */
	T0* a2; /* target_type_set */
	T0* a3; /* result_type_set */
	T0* a4; /* current_feature */
	T0* a5; /* current_type */
	T0* a6; /* next */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
struct S336 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* next */
	T0* a3; /* static_call */
	T0* a4; /* current_feature */
	T0* a5; /* current_type */
};

/* Struct for type ET_OBJECT_TEST */
struct S338 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* attached_keyword */
	T0* a3; /* declared_type */
	T0* a4; /* expression */
};

/* Struct for type ET_OBJECT_EQUALITY_EXPRESSION */
struct S339 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* operator */
	T0* a4; /* right */
};

/* Struct for type ET_EQUALITY_EXPRESSION */
struct S340 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* operator */
	T0* a4; /* right */
};

/* Struct for type ET_DYNAMIC_SPECIAL_TYPE */
struct S341 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T0* a8; /* procedures */
	T0* a9; /* item_type_set */
	T1 a10; /* has_reference_attributes */
	T1 a11; /* has_generic_expanded_attributes */
	T0* a12; /* alive_conforming_descendants */
	T6 a13; /* hash_code */
	T0* a14; /* next_type */
	T0* a15; /* query_calls */
	T0* a16; /* conforming_ancestors */
	T0* a17; /* conforming_descendants */
	T1 a18; /* has_static */
	T0* a19; /* procedure_calls */
	T0* a20; /* equality_expressions */
	T0* a21; /* object_equality_expressions */
};

/* Struct for type DS_QUICK_SORTER [ET_DYNAMIC_TYPE] */
struct S344 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_DYNAMIC_TYPE_COMPARATOR_BY_ID */
struct S345 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CREATE_EXPRESSION */
struct S349 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* creation_call */
	T0* a3; /* creation_type */
	T0* a4; /* create_keyword */
};

/* Struct for type ET_QUALIFIED_CALL */
struct S350 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T0* a2; /* qualified_name */
};

/* Struct for type KL_DIRECTORY */
struct S354 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_input */
	T0* a2; /* last_entry */
	T6 a3; /* mode */
	T0* a4; /* name */
	T0* a5; /* entry_buffer */
	T1 a6; /* old_end_of_input */
	T14 a7; /* last_entry_pointer */
	T14 a8; /* directory_pointer */
	T0* a9; /* lastentry */
	T0* a10; /* internal_name */
	T0* a11; /* internal_detachable_name_pointer */
};

/* Struct for type ET_EXTENDED_ATTRIBUTE */
struct S355 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T0* a5; /* preconditions */
	T6 a6; /* hash_code */
	T6 a7; /* first_seed */
	T0* a8; /* assigner */
	T0* a9; /* postconditions */
	T0* a10; /* compound */
	T0* a11; /* locals */
	T0* a12; /* rescue_clause */
	T0* a13; /* frozen_keyword */
	T0* a14; /* extended_name */
	T0* a15; /* declared_type */
	T0* a16; /* obsolete_message */
	T0* a17; /* clients */
	T0* a18; /* end_keyword */
	T0* a19; /* semicolon */
	T0* a20; /* feature_clause */
	T0* a21; /* first_indexing */
	T0* a22; /* object_tests */
	T0* a23; /* across_components */
	T0* a24; /* other_seeds */
	T1 a25; /* validity_checked */
	T1 a26; /* has_validity_error */
	T0* a27; /* synonym */
	T6 a28; /* id */
	T6 a29; /* version */
};

/* Struct for type ET_COMPOUND */
struct S356 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* keyword */
	T0* a3; /* storage */
};

/* Struct for type ET_LOCAL_VARIABLE_LIST */
struct S357 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* local_keyword */
};

/* Struct for type DS_QUICK_SORTER [INTEGER_32] */
struct S361 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_IMPLICIT_TYPE_MARK */
struct S368 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* is_expanded_mark */
	T1 a2; /* is_reference_mark */
	T1 a3; /* is_attached_mark */
	T1 a4; /* is_separate_mark */
	T1 a5; /* is_detachable_mark */
};

/* Struct for type ET_SYMBOL */
struct S369 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE] */
struct S370 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S371 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S372 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S373 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S374 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type UT_INTEGER_FORMATTER */
struct S375 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type STD_FILES */
struct S378 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_output */
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S380 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
struct S382 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S383 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T1 z4;
};

/* Struct for type ET_CONSTANT_ATTRIBUTE */
struct S384 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T6 a5; /* hash_code */
	T6 a6; /* first_seed */
	T0* a7; /* assigner */
	T0* a8; /* constant */
	T0* a9; /* extended_name */
	T0* a10; /* frozen_keyword */
	T0* a11; /* declared_type */
	T0* a12; /* clients */
	T0* a13; /* is_keyword */
	T0* a14; /* semicolon */
	T0* a15; /* feature_clause */
	T0* a16; /* first_indexing */
	T0* a17; /* object_tests */
	T0* a18; /* across_components */
	T0* a19; /* other_seeds */
	T1 a20; /* validity_checked */
	T1 a21; /* has_validity_error */
	T0* a22; /* synonym */
	T6 a23; /* id */
	T6 a24; /* version */
};

/* Struct for type ET_UNIQUE_ATTRIBUTE */
struct S386 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T6 a5; /* hash_code */
	T6 a6; /* first_seed */
	T0* a7; /* assigner */
	T0* a8; /* declared_type */
	T0* a9; /* extended_name */
	T0* a10; /* frozen_keyword */
	T0* a11; /* clients */
	T0* a12; /* is_keyword */
	T0* a13; /* unique_keyword */
	T0* a14; /* semicolon */
	T0* a15; /* feature_clause */
	T0* a16; /* first_indexing */
	T0* a17; /* object_tests */
	T0* a18; /* across_components */
	T0* a19; /* other_seeds */
	T1 a20; /* validity_checked */
	T1 a21; /* has_validity_error */
	T6 a22; /* id */
	T0* a23; /* synonym */
	T6 a24; /* version */
};

/* Struct for type ET_ATTRIBUTE */
struct S387 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T6 a5; /* hash_code */
	T6 a6; /* first_seed */
	T0* a7; /* assigner */
	T0* a8; /* declared_type */
	T0* a9; /* extended_name */
	T0* a10; /* frozen_keyword */
	T0* a11; /* clients */
	T0* a12; /* semicolon */
	T0* a13; /* feature_clause */
	T0* a14; /* first_indexing */
	T0* a15; /* object_tests */
	T0* a16; /* across_components */
	T0* a17; /* other_seeds */
	T1 a18; /* validity_checked */
	T1 a19; /* has_validity_error */
	T0* a20; /* synonym */
	T6 a21; /* id */
	T6 a22; /* version */
};

/* Struct for type NATIVE_STRING */
struct S389 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* managed_data */
	T6 a2; /* unit_count */
};

/* Struct for type DS_HASH_SET_CURSOR [STRING_8] */
struct S390 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_FEATURE_CHECKER */
struct S391 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* system_processor */
	T0* a2; /* type_checker */
	T0* a3; /* current_type */
	T0* a4; /* current_class */
	T0* a5; /* current_feature */
	T0* a6; /* current_feature_impl */
	T0* a7; /* current_class_impl */
	T0* a8; /* enclosing_inline_agents */
	T0* a9; /* unused_overloaded_procedures_list */
	T0* a10; /* unused_overloaded_queries_list */
	T0* a11; /* unused_overloaded_features_list */
	T0* a12; /* unused_contexts */
	T0* a13; /* current_context */
	T0* a14; /* current_target_type */
	T0* a15; /* current_object_test_types */
	T0* a16; /* current_object_test_scope */
	T0* a17; /* object_test_scope_builder */
	T0* a18; /* current_across_cursor_types */
	T0* a19; /* current_across_cursor_scope */
	T0* a20; /* current_initialization_scope */
	T0* a21; /* current_attachment_scope */
	T0* a22; /* attachment_scope_builder */
	T0* a23; /* unused_attachment_scopes */
	T0* a24; /* indexing_term_list */
	T0* a25; /* default_creation_call_name */
	T0* a26; /* default_creation_call */
	T1 a27; /* has_fatal_error */
	T1 a28; /* in_precondition */
	T0* a29; /* supplier_handler */
	T1 a30; /* in_invariant */
	T0* a31; /* precursor_queries */
	T0* a32; /* precursor_procedures */
	T1 a33; /* in_postcondition */
	T1 a34; /* in_precursor */
	T1 a35; /* in_rescue */
	T0* a36; /* current_inline_agent */
	T1 a37; /* in_check_instruction */
};

/* Struct for type DS_CELL [INTEGER_32] */
struct S392 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S393 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* count */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* modulus */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* key_equality_tester */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T6 a12; /* found_position */
	T0* a13; /* item_storage */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S394 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T6 a5; /* position */
	T6 a6; /* last_position */
	T6 a7; /* modulus */
	T6 a8; /* slots_position */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* key_equality_tester */
	T0* a11; /* equality_tester */
	T6 a12; /* capacity */
	T6 a13; /* free_slot */
	T0* a14; /* special_item_routines */
	T0* a15; /* special_key_routines */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T6 a18; /* count */
	T0* a19; /* hash_function */
};

/* Struct for type ET_TYPE_CHECKER */
struct S396 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_context */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_feature_impl */
	T0* a4; /* constraint_context */
	T0* a5; /* current_class */
	T0* a6; /* system_processor */
	T0* a7; /* supplier_handler */
	T1 a8; /* has_fatal_error */
	T1 a9; /* class_interface_error_only */
	T1 a10; /* in_qualified_anchored_type */
};

/* Struct for type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
struct S398 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S399 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
struct S400 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S401 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
struct S402 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_NESTED_TYPE_CONTEXT */
struct S403 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* root_context */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
struct S404 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T6 a9; /* found_position */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type ET_OBJECT_TEST_SCOPE */
struct S405 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* object_tests */
	T6 a2; /* hidden_count */
};

/* Struct for type ET_OBJECT_TEST_SCOPE_BUILDER */
struct S406 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T0* a4; /* scope */
	T1 a5; /* is_negated */
};

/* Struct for type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
struct S407 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T6 a9; /* found_position */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ACROSS_CURSOR_SCOPE */
struct S408 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hidden_count */
	T0* a2; /* across_components */
};

/* Struct for type ET_ATTACHMENT_SCOPE */
struct S409 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* locals_attached */
	T0* a2; /* arguments_attached */
	T0* a3; /* attributes_attached */
	T1 a4; /* result_attached */
	T1 a5; /* is_code_unreachable */
};

/* Struct for type ET_ATTACHMENT_SCOPE_BUILDER */
struct S410 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* scope */
	T1 a2; /* is_negated */
};

/* Struct for type DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
struct S411 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_INDEXING_TERM] */
struct S412 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type ET_PRECONDITIONS */
struct S413 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T1 a2; /* validity_checked */
	T1 a3; /* has_validity_error */
	T0* a4; /* storage */
	T0* a5; /* require_keyword */
	T0* a6; /* else_keyword */
};

/* Struct for type DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE] */
struct S414 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* hash_function */
};

/* Struct for type ET_FEATURE_LIST */
struct S416 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
};

/* Struct for type ET_UNKNOWN_GROUP */
struct S418 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T1 a2; /* use_obsolete_syntax */
	T0* a3; /* cached_absolute_pathname */
};

/* Struct for type ET_BASE_TYPE_LIST */
struct S420 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_KEYWORD */
struct S421 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* text */
	T2 a2; /* code */
	T6 a3; /* compressed_position */
};

/* Struct for type ET_CLASS_CODES */
struct S422 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type PATH */
struct S423 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_name */
	T0* a2; /* storage */
	T1 a3; /* is_normalized */
};

/* Struct for type ARGUMENTS_32 */
struct S425 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INTERNAL_ERROR */
struct S426 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ST_WORD_WRAPPER */
struct S427 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* new_line_indentation */
	T6 a2; /* broken_words */
	T6 a3; /* maximum_text_width */
};

/* Struct for type ET_XACE_EXTERNALS */
struct S429 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* c_compiler_options */
	T0* a2; /* include_directories */
	T0* a3; /* link_libraries */
};

/* Struct for type ET_XACE_OPTIONS */
struct S430 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_override_cluster */
	T0* a2; /* declared_console_application */
	T0* a3; /* declared_exception_trace */
	T0* a4; /* declared_trace */
	T0* a5; /* declared_garbage_collector */
	T0* a6; /* declared_multithreaded */
	T0* a7; /* declared_c_compiler_options */
	T0* a8; /* declared_header */
	T0* a9; /* declared_link */
	T0* a10; /* declared_abstract */
	T0* a11; /* declared_recursive */
	T0* a12; /* declared_read_only */
	T6 a13; /* declared_fst_expansion_factor */
	T6 a14; /* declared_heap_size */
	T6 a15; /* declared_inlining_size */
	T6 a16; /* declared_msil_classes_per_module */
	T6 a17; /* declared_stack_size */
	T0* a18; /* declared_address_expression */
	T0* a19; /* declared_arguments */
	T0* a20; /* declared_array_optimization */
	T0* a21; /* declared_assembly */
	T0* a22; /* declared_assertion */
	T0* a23; /* declared_attached_by_default */
	T0* a24; /* declared_automatic_backup */
	T0* a25; /* declared_callback */
	T0* a26; /* declared_case_insensitive */
	T0* a27; /* declared_check_vape */
	T0* a28; /* declared_clean */
	T0* a29; /* declared_cls_compliant */
	T0* a30; /* declared_component */
	T0* a31; /* declared_create_keyword_extension */
	T0* a32; /* declared_culture */
	T0* a33; /* declared_dead_code_removal */
	T0* a34; /* declared_debug_option */
	T0* a35; /* declared_debug_tag */
	T0* a36; /* declared_debugger */
	T0* a37; /* declared_document */
	T0* a38; /* declared_dotnet_naming_convention */
	T0* a39; /* declared_dynamic_runtime */
	T0* a40; /* declared_ecf_library */
	T0* a41; /* declared_enforce_unique_class_names */
	T0* a42; /* declared_exclude */
	T0* a43; /* declared_export_option */
	T0* a44; /* declared_external_runtime */
	T0* a45; /* declared_finalize_option */
	T0* a46; /* declared_flat_fst_optimization */
	T0* a47; /* declared_force_32bits */
	T0* a48; /* declared_fst_optimization */
	T0* a49; /* declared_full_class_checking */
	T0* a50; /* declared_gc_info */
	T0* a51; /* declared_high_memory_compiler */
	T0* a52; /* declared_il_verifiable */
	T0* a53; /* declared_include */
	T0* a54; /* declared_inlining */
	T0* a55; /* declared_jumps_optimization */
	T0* a56; /* declared_layout */
	T0* a57; /* declared_layout_optimization */
	T0* a58; /* declared_leaves_optimization */
	T0* a59; /* declared_line_generation */
	T0* a60; /* declared_linker */
	T0* a61; /* declared_linux_fpu_double_precision */
	T0* a62; /* declared_manifest_string_trace */
	T0* a63; /* declared_map */
	T0* a64; /* declared_metadata_cache_path */
	T0* a65; /* declared_msil_assembly_compatibility */
	T0* a66; /* declared_msil_clr_version */
	T0* a67; /* declared_msil_culture */
	T0* a68; /* declared_msil_generation */
	T0* a69; /* declared_msil_generation_version */
	T0* a70; /* declared_msil_key_file_name */
	T0* a71; /* declared_msil_use_optimized_precompile */
	T0* a72; /* declared_namespace */
	T0* a73; /* declared_no_default_lib */
	T0* a74; /* declared_old_verbatim_strings */
	T0* a75; /* declared_portable_code_generation */
	T0* a76; /* declared_precompiled */
	T0* a77; /* declared_prefix_option */
	T0* a78; /* declared_profile */
	T0* a79; /* declared_public_key_token */
	T0* a80; /* declared_reloads_optimization */
	T0* a81; /* declared_shared_library_definition */
	T0* a82; /* declared_split */
	T0* a83; /* declared_storable_filename */
	T0* a84; /* declared_strip_option */
	T0* a85; /* declared_syntax */
	T0* a86; /* declared_target */
	T0* a87; /* declared_use_cluster_name_as_namespace */
	T0* a88; /* declared_use_full_cluster_name_as_namespace */
	T0* a89; /* declared_verbose */
	T0* a90; /* declared_version */
	T0* a91; /* declared_visible_filename */
	T0* a92; /* declared_void_safety */
	T0* a93; /* declared_warning */
	T0* a94; /* declared_wedit */
};

/* Struct for type XM_ATTRIBUTE */
struct S431 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* value */
	T0* a4; /* parent */
};

/* Struct for type ET_XACE_OPTION_NAMES */
struct S433 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_XACE_CLUSTER */
struct S435 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T0* a5; /* library_prefix */
	T0* a6; /* cluster_prefix */
	T0* a7; /* class_options */
	T1 a8; /* is_abstract */
	T1 a9; /* is_recursive */
	T1 a10; /* is_read_only */
	T0* a11; /* options */
	T0* a12; /* subclusters */
	T0* a13; /* libraries */
	T1 a14; /* overridden_constraint_enabled */
	T1 a15; /* scm_mapping_constraint_enabled */
	T0* a16; /* scm_read_mapping */
	T0* a17; /* scm_write_mapping */
	T1 a18; /* is_implicit */
	T1 a19; /* is_override */
	T1 a20; /* use_obsolete_syntax */
	T0* a21; /* parent */
	T1 a22; /* is_preparsed */
	T0* a23; /* provider_constraint */
	T0* a24; /* dependant_constraint */
	T1 a25; /* is_mounted */
	T0* a26; /* cached_absolute_pathname */
};

/* Struct for type ET_XACE_CLUSTERS */
struct S436 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARY */
struct S437 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* library_prefix */
	T0* a3; /* library */
	T0* a4; /* position */
	T1 a5; /* is_root */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARIES */
struct S438 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* libraries */
};

/* Struct for type DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
struct S439 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
struct S441 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type ET_XACE_LIBRARY_CONFIG */
struct S443 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* library_prefix */
	T0* a2; /* name */
	T0* a3; /* options */
	T0* a4; /* clusters */
	T0* a5; /* libraries */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, STRING_8] */
struct S444 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* free_slot */
	T6 a7; /* last_position */
	T6 a8; /* count */
	T6 a9; /* modulus */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* equality_tester */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* capacity */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type ET_XACE_CLASS_OPTIONS */
struct S446 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_options */
	T0* a2; /* class_name */
	T0* a3; /* options */
};

/* Struct for type ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
struct S447 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_BOOLEAN_EXPECTED_ERROR */
struct S448 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
struct S449 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
struct S450 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
struct S451 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
struct S452 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_COUNTER */
struct S454 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
};

/* Struct for type KL_AGENT_ROUTINES [ET_CLASS] */
struct S455 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [UT_COUNTER] */
struct S456 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [KL_AGENT_ROUTINES [ET_CLASS], [attached] PROCEDURE [[attached] TUPLE]] */
struct S457 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [ET_UNIVERSE] */
struct S458 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_UNIVERSE]] */
struct S459 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]]] */
struct S460 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
struct S462 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T0* a13; /* internal_cursor */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type ET_DOTNET_ASSEMBLIES */
struct S463 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_DOTNET_ASSEMBLY */
struct S464 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* referenced_assemblies */
	T0* a3; /* current_system */
	T0* a4; /* dotnet_assembly */
	T0* a5; /* name */
	T0* a6; /* master_classes */
	T0* a7; /* master_class_mutex */
	T0* a8; /* any_type */
	T0* a9; /* detachable_any_type */
	T0* a10; /* detachable_separate_any_type */
	T0* a11; /* separate_any_type */
	T0* a12; /* any_parent */
	T0* a13; /* any_parents */
	T0* a14; /* any_clients */
	T0* a15; /* tuple_type */
	T0* a16; /* detachable_tuple_type */
	T0* a17; /* tuple_like_current_type */
	T0* a18; /* unfolded_empty_tuple_actual_parameters */
	T0* a19; /* array_any_type */
	T0* a20; /* array_detachable_any_type */
	T0* a21; /* array_like_current_type */
	T0* a22; /* boolean_type */
	T0* a23; /* character_type */
	T0* a24; /* character_8_type */
	T0* a25; /* character_8_convert_feature */
	T0* a26; /* character_32_type */
	T0* a27; /* character_32_convert_feature */
	T0* a28; /* double_type */
	T0* a29; /* exception_type */
	T0* a30; /* detachable_exception_type */
	T0* a31; /* exception_manager_type */
	T0* a32; /* function_type */
	T0* a33; /* immutable_string_32_type */
	T0* a34; /* integer_type */
	T0* a35; /* integer_8_type */
	T0* a36; /* integer_8_convert_feature */
	T0* a37; /* integer_16_type */
	T0* a38; /* integer_16_convert_feature */
	T0* a39; /* integer_32_type */
	T0* a40; /* integer_32_convert_feature */
	T0* a41; /* integer_64_type */
	T0* a42; /* integer_64_convert_feature */
	T0* a43; /* ise_exception_manager_type */
	T0* a44; /* iterable_detachable_any_type */
	T0* a45; /* natural_type */
	T0* a46; /* natural_8_type */
	T0* a47; /* natural_8_convert_feature */
	T0* a48; /* natural_16_type */
	T0* a49; /* natural_16_convert_feature */
	T0* a50; /* natural_32_type */
	T0* a51; /* natural_32_convert_feature */
	T0* a52; /* natural_64_type */
	T0* a53; /* natural_64_convert_feature */
	T0* a54; /* none_type */
	T0* a55; /* detachable_none_type */
	T0* a56; /* pointer_type */
	T0* a57; /* predicate_like_current_type */
	T0* a58; /* procedure_like_current_type */
	T0* a59; /* real_type */
	T0* a60; /* real_32_type */
	T0* a61; /* real_32_convert_feature */
	T0* a62; /* real_64_type */
	T0* a63; /* real_64_convert_feature */
	T0* a64; /* routine_type */
	T0* a65; /* special_any_type */
	T0* a66; /* special_detachable_any_type */
	T0* a67; /* string_type */
	T0* a68; /* detachable_string_type */
	T0* a69; /* string_8_type */
	T0* a70; /* string_8_convert_feature */
	T0* a71; /* string_32_type */
	T0* a72; /* string_32_convert_feature */
	T0* a73; /* system_object_type */
	T0* a74; /* system_object_parents */
	T0* a75; /* system_string_type */
	T0* a76; /* type_any_type */
	T0* a77; /* type_type_any_type */
	T0* a78; /* type_detachable_any_type */
	T0* a79; /* type_detachable_like_current_type */
	T0* a80; /* detachable_type_exception_type */
	T0* a81; /* type_detachable_exception_type */
	T0* a82; /* detachable_type_detachable_any_type */
	T0* a83; /* type_like_current_type */
	T0* a84; /* typed_pointer_any_type */
	T0* a85; /* typed_pointer_like_current_type */
	T0* a86; /* wide_character_type */
	T1 a87; /* is_read_only */
	T1 a88; /* is_preparsed */
};

/* Struct for type [attached] TUPLE [ET_DOTNET_ASSEMBLY] */
struct S465 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
struct S466 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
struct S467 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
struct S468 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_INTERNAL_UNIVERSE] */
struct S469 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_INTERNAL_UNIVERSE]] */
struct S470 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]], [attached] PREDICATE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]]] */
struct S471 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [ET_DOTNET_ASSEMBLIES] */
struct S472 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_SYSTEM_PROCESSOR] */
struct S473 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_LIBRARY */
struct S474 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_system */
	T0* a2; /* library */
	T0* a3; /* name */
	T0* a4; /* libraries */
	T0* a5; /* clusters */
	T0* a6; /* dotnet_assemblies */
	T0* a7; /* master_classes */
	T0* a8; /* master_class_mutex */
	T0* a9; /* any_type */
	T0* a10; /* detachable_any_type */
	T0* a11; /* detachable_separate_any_type */
	T0* a12; /* separate_any_type */
	T0* a13; /* any_parent */
	T0* a14; /* any_parents */
	T0* a15; /* any_clients */
	T0* a16; /* tuple_type */
	T0* a17; /* detachable_tuple_type */
	T0* a18; /* tuple_like_current_type */
	T0* a19; /* unfolded_empty_tuple_actual_parameters */
	T0* a20; /* array_any_type */
	T0* a21; /* array_detachable_any_type */
	T0* a22; /* array_like_current_type */
	T0* a23; /* boolean_type */
	T0* a24; /* character_type */
	T0* a25; /* character_8_type */
	T0* a26; /* character_8_convert_feature */
	T0* a27; /* character_32_type */
	T0* a28; /* character_32_convert_feature */
	T0* a29; /* double_type */
	T0* a30; /* exception_type */
	T0* a31; /* detachable_exception_type */
	T0* a32; /* exception_manager_type */
	T0* a33; /* function_type */
	T0* a34; /* immutable_string_32_type */
	T0* a35; /* integer_type */
	T0* a36; /* integer_8_type */
	T0* a37; /* integer_8_convert_feature */
	T0* a38; /* integer_16_type */
	T0* a39; /* integer_16_convert_feature */
	T0* a40; /* integer_32_type */
	T0* a41; /* integer_32_convert_feature */
	T0* a42; /* integer_64_type */
	T0* a43; /* integer_64_convert_feature */
	T0* a44; /* ise_exception_manager_type */
	T0* a45; /* iterable_detachable_any_type */
	T0* a46; /* natural_type */
	T0* a47; /* natural_8_type */
	T0* a48; /* natural_8_convert_feature */
	T0* a49; /* natural_16_type */
	T0* a50; /* natural_16_convert_feature */
	T0* a51; /* natural_32_type */
	T0* a52; /* natural_32_convert_feature */
	T0* a53; /* natural_64_type */
	T0* a54; /* natural_64_convert_feature */
	T0* a55; /* none_type */
	T0* a56; /* detachable_none_type */
	T0* a57; /* pointer_type */
	T0* a58; /* predicate_like_current_type */
	T0* a59; /* procedure_like_current_type */
	T0* a60; /* real_type */
	T0* a61; /* real_32_type */
	T0* a62; /* real_32_convert_feature */
	T0* a63; /* real_64_type */
	T0* a64; /* real_64_convert_feature */
	T0* a65; /* routine_type */
	T0* a66; /* special_any_type */
	T0* a67; /* special_detachable_any_type */
	T0* a68; /* string_type */
	T0* a69; /* detachable_string_type */
	T0* a70; /* string_8_type */
	T0* a71; /* string_8_convert_feature */
	T0* a72; /* string_32_type */
	T0* a73; /* string_32_convert_feature */
	T0* a74; /* system_object_type */
	T0* a75; /* system_object_parents */
	T0* a76; /* system_string_type */
	T0* a77; /* type_any_type */
	T0* a78; /* type_type_any_type */
	T0* a79; /* type_detachable_any_type */
	T0* a80; /* type_detachable_like_current_type */
	T0* a81; /* detachable_type_exception_type */
	T0* a82; /* type_detachable_exception_type */
	T0* a83; /* detachable_type_detachable_any_type */
	T0* a84; /* type_like_current_type */
	T0* a85; /* typed_pointer_any_type */
	T0* a86; /* typed_pointer_like_current_type */
	T0* a87; /* wide_character_type */
	T1 a88; /* is_read_only */
	T1 a89; /* is_preparsed */
};

/* Struct for type [attached] TUPLE [ET_LIBRARY] */
struct S475 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_LIBRARY]] */
struct S476 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]], detachable FUNCTION [[attached] TUPLE, BOOLEAN]] */
struct S477 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [STRING_8] */
struct S478 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_CLASS_NAME_TESTER */
struct S479 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENT */
struct S481 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* renames */
	T0* a3; /* exports */
	T0* a4; /* undefines */
	T0* a5; /* redefines */
	T0* a6; /* selects */
	T0* a7; /* end_keyword */
};

/* Struct for type ET_PARENT_LIST */
struct S482 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* clients_clause */
	T0* a3; /* storage */
	T0* a4; /* inherit_keyword */
};

/* Struct for type ET_CLIENT_LIST */
struct S483 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_BUILTIN_CONVERT_FEATURE */
struct S484 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* type */
};

/* Struct for type ET_MASTER_CLASS */
struct S485 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* mapped_class */
	T0* a3; /* first_overriding_class */
	T0* a4; /* intrinsic_class */
	T0* a5; /* universe */
	T0* a6; /* other_local_override_classes */
	T0* a7; /* other_local_non_override_classes */
	T0* a8; /* other_local_ignored_classes */
	T0* a9; /* other_local_hidden_classes */
	T0* a10; /* other_imported_classes */
	T0* a11; /* other_overriding_classes */
	T0* a12; /* status_mutex */
	T0* a13; /* processing_mutex */
	T1 a14; /* unprotected_is_marked */
	T1 a15; /* is_modified */
	T0* a16; /* first_imported_class */
	T0* a17; /* first_local_ignored_class */
	T0* a18; /* first_local_override_class */
	T0* a19; /* first_local_non_override_class */
	T0* a20; /* first_local_hidden_class */
};

/* Struct for type DS_HASH_SET [ET_UNIVERSE] */
struct S486 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [attached] TUPLE [ET_CLUSTER] */
struct S487 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_CLUSTER]] */
struct S488 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_XACE_SYSTEM] */
struct S489 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
struct S490 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type [attached] TUPLE [ET_AST_PROCESSOR] */
struct S491 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_MASTER_CLASS] */
struct S492 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]] */
struct S493 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S494 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
struct S495 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type ET_ANCESTORS_STATUS_CHECKER */
struct S496 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_FLATTENING_STATUS_CHECKER */
struct S497 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_INTERFACE_STATUS_CHECKER */
struct S498 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* qualified_anchored_type_checker */
	T0* a2; /* class_type_checker */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_IMPLEMENTATION_STATUS_CHECKER */
struct S499 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [ET_CLASS]] */
struct S500 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
struct S502 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_FLATTENING_STATUS_CHECKER] */
struct S503 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_INTERFACE_STATUS_CHECKER] */
struct S504 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
struct S505 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [BOOLEAN] */
struct S506 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 z1;
};

/* Struct for type ET_CLIENT */
struct S507 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* named_base_class */
};

/* Struct for type ET_ATTACHMENT_SEPARATE_KEYWORDS */
struct S508 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* attachment_keyword */
	T0* a2; /* separateness_keyword */
};

/* Struct for type ET_RENAME_LIST */
struct S509 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* rename_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_EXPORT_LIST */
struct S510 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* export_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_KEYWORD_FEATURE_NAME_LIST */
struct S511 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_LIKE_CURRENT */
struct S514 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* like_keyword */
	T0* a3; /* current_keyword */
};

/* Struct for type ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
struct S515 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tuple_type */
};

/* Struct for type ET_NONE_GROUP */
struct S516 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* universe */
	T0* a2; /* name */
	T1 a3; /* use_obsolete_syntax */
	T0* a4; /* cached_absolute_pathname */
};

/* Struct for type [attached] TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
struct S517 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLUSTER]]] */
struct S520 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
struct S524 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]]] */
struct S525 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]], FUNCTION [[attached] TUPLE [ET_CLASS], BOOLEAN]] */
struct S526 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type XM_NAMESPACE */
struct S529 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* uri */
	T0* a2; /* ns_prefix */
};

/* Struct for type KL_ARRAY_ROUTINES [INTEGER_32] */
struct S530 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_DYNAMIC_PROCEDURE_TYPE */
struct S531 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T6 a8; /* hash_code */
	T0* a9; /* procedures */
	T0* a10; /* set_rout_disp_final_feature */
	T0* a11; /* open_operand_type_sets */
	T0* a12; /* alive_conforming_descendants */
	T0* a13; /* next_type */
	T0* a14; /* query_calls */
	T1 a15; /* has_reference_attributes */
	T1 a16; /* has_generic_expanded_attributes */
	T0* a17; /* conforming_ancestors */
	T0* a18; /* conforming_descendants */
	T1 a19; /* has_static */
	T0* a20; /* procedure_calls */
	T0* a21; /* equality_expressions */
	T0* a22; /* object_equality_expressions */
};

/* Struct for type ET_DYNAMIC_FUNCTION_TYPE */
struct S532 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T6 a8; /* hash_code */
	T0* a9; /* procedures */
	T0* a10; /* set_rout_disp_final_feature */
	T0* a11; /* result_type_set */
	T0* a12; /* open_operand_type_sets */
	T0* a13; /* alive_conforming_descendants */
	T0* a14; /* next_type */
	T0* a15; /* query_calls */
	T1 a16; /* has_reference_attributes */
	T1 a17; /* has_generic_expanded_attributes */
	T0* a18; /* conforming_ancestors */
	T0* a19; /* conforming_descendants */
	T1 a20; /* has_static */
	T0* a21; /* procedure_calls */
	T0* a22; /* equality_expressions */
	T0* a23; /* object_equality_expressions */
};

/* Struct for type ET_DO_PROCEDURE */
struct S533 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_class */
	T6 a2; /* first_seed */
	T0* a3; /* arguments */
	T0* a4; /* implementation_feature */
	T0* a5; /* extended_name */
	T6 a6; /* hash_code */
	T0* a7; /* end_keyword */
	T0* a8; /* clients */
	T0* a9; /* compound */
	T1 a10; /* validity_checked */
	T1 a11; /* has_validity_error */
	T0* a12; /* preconditions */
	T0* a13; /* first_precursor */
	T0* a14; /* other_precursors */
	T0* a15; /* postconditions */
	T0* a16; /* other_seeds */
	T0* a17; /* obsolete_message */
	T0* a18; /* locals */
	T0* a19; /* rescue_clause */
	T0* a20; /* is_keyword */
	T0* a21; /* semicolon */
	T0* a22; /* feature_clause */
	T0* a23; /* first_indexing */
	T0* a24; /* object_tests */
	T0* a25; /* across_components */
	T0* a26; /* frozen_keyword */
	T0* a27; /* synonym */
	T6 a28; /* id */
	T6 a29; /* version */
};

/* Struct for type UT_CONFIG_PARSER */
struct S535 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* config_values */
	T0* a3; /* error_handler */
	T0* a4; /* defined_values */
	T0* a5; /* include_stack */
	T0* a6; /* line_nb_stack */
	T0* a7; /* last_string_value */
	T6 a8; /* line_nb */
	T0* a9; /* yyss */
	T0* a10; /* input_buffer */
	T6 a11; /* yy_end */
	T6 a12; /* yy_position */
	T6 a13; /* yy_line */
	T6 a14; /* yy_column */
	T6 a15; /* yy_parsing_status */
	T6 a16; /* yy_suspended_yystacksize */
	T6 a17; /* yy_suspended_yystate */
	T6 a18; /* yy_suspended_yyn */
	T6 a19; /* yy_suspended_yychar1 */
	T6 a20; /* yy_suspended_index */
	T6 a21; /* yy_suspended_yyss_top */
	T6 a22; /* yy_suspended_yy_goto */
	T0* a23; /* yyr1 */
	T6 a24; /* yyssp */
	T0* a25; /* yypgoto */
	T0* a26; /* yycheck */
	T0* a27; /* yytable */
	T0* a28; /* yydefgoto */
	T6 a29; /* error_count */
	T1 a30; /* yy_lookahead_needed */
	T6 a31; /* yyerrstatus */
	T0* a32; /* yypact */
	T6 a33; /* last_token */
	T0* a34; /* yytranslate */
	T0* a35; /* yydefact */
	T0* a36; /* yy_pushed_start_conditions */
	T0* a37; /* yyspecial_routines1 */
	T6 a38; /* yyvsc1 */
	T0* a39; /* yyvs1 */
	T0* a40; /* yyspecial_routines2 */
	T6 a41; /* yyvsc2 */
	T0* a42; /* yyvs2 */
	T0* a43; /* yyspecial_routines3 */
	T6 a44; /* yyvsc3 */
	T0* a45; /* yyvs3 */
	T0* a46; /* yytypes1 */
	T0* a47; /* yytypes2 */
	T6 a48; /* yy_start */
	T6 a49; /* yyvsp1 */
	T6 a50; /* yyvsp2 */
	T6 a51; /* yyvsp3 */
	T1 a52; /* yy_more_flag */
	T6 a53; /* yy_more_len */
	T6 a54; /* line */
	T6 a55; /* column */
	T6 a56; /* position */
	T6 a57; /* yy_start_state */
	T0* a58; /* yy_state_stack */
	T6 a59; /* yy_state_count */
	T0* a60; /* yy_content_area */
	T0* a61; /* yy_ec */
	T0* a62; /* yy_content */
	T0* a63; /* yy_accept */
	T6 a64; /* yy_last_accepting_state */
	T6 a65; /* yy_last_accepting_cpos */
	T0* a66; /* yy_chk */
	T0* a67; /* yy_base */
	T0* a68; /* yy_def */
	T0* a69; /* yy_meta */
	T0* a70; /* yy_nxt */
	T6 a71; /* yy_lp */
	T0* a72; /* yy_acclist */
	T6 a73; /* yy_looking_for_trail_begin */
	T6 a74; /* yy_full_match */
	T6 a75; /* yy_full_state */
	T6 a76; /* yy_full_lp */
	T1 a77; /* yy_rejected */
	T0* a78; /* last_detachable_any_value */
	T6 a79; /* if_level */
	T6 a80; /* ignored_level */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
struct S536 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_DEFERRED_PROCEDURE */
struct S539 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T6 a3; /* first_seed */
	T0* a4; /* arguments */
	T0* a5; /* extended_name */
	T0* a6; /* deferred_keyword */
	T6 a7; /* hash_code */
	T0* a8; /* end_keyword */
	T0* a9; /* clients */
	T1 a10; /* validity_checked */
	T1 a11; /* has_validity_error */
	T0* a12; /* preconditions */
	T0* a13; /* first_precursor */
	T0* a14; /* other_precursors */
	T0* a15; /* postconditions */
	T0* a16; /* other_seeds */
	T0* a17; /* obsolete_message */
	T0* a18; /* is_keyword */
	T0* a19; /* semicolon */
	T0* a20; /* feature_clause */
	T0* a21; /* first_indexing */
	T0* a22; /* object_tests */
	T0* a23; /* across_components */
	T0* a24; /* frozen_keyword */
	T0* a25; /* synonym */
	T6 a26; /* id */
	T6 a27; /* version */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET */
struct S540 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T1 a2; /* is_never_void */
	T6 a3; /* count */
	T0* a4; /* targets */
	T0* a5; /* dynamic_types */
	T1 a6; /* is_dynamic_types_readonly */
};

/* Struct for type CELL [INTEGER_32] */
struct S542 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
};

/* Struct for type KL_PATHNAME */
struct S544 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* drive */
	T0* a3; /* hostname */
	T0* a4; /* sharename */
	T1 a5; /* is_relative */
	T0* a6; /* components */
};

/* Struct for type READABLE_STRING_32 */
struct S546 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [NATURAL_8] */
struct S547 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T8 z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
struct S549 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [AP_OPTION] */
struct S551 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_OPTION] */
struct S552 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S553 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S554 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S555 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable DS_LINKABLE [STRING_8] */
struct S556 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type detachable DS_LINKABLE [BOOLEAN] */
struct S557 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [BOOLEAN] */
struct S558 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [INTEGER_32] */
struct S559 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [INTEGER_32] */
struct S560 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type XM_NAMESPACE_RESOLVER */
struct S561 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* element_local_part */
	T0* a3; /* element_prefix */
	T0* a4; /* context */
	T1 a5; /* forward_xmlns */
	T0* a6; /* attributes_prefix */
	T0* a7; /* attributes_local_part */
	T0* a8; /* attributes_value */
};

/* Struct for type ARRAY [XM_CALLBACKS_FILTER] */
struct S562 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [XM_CALLBACKS_FILTER] */
struct S563 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type XM_CALLBACKS_NULL */
struct S564 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET [XM_NAMESPACE] */
struct S565 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* special_item_routines */
	T0* a8; /* item_storage */
	T0* a9; /* clashes */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a14; /* count */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8] */
struct S571 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_XACE_LIBRARY_CONFIG] */
struct S572 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG] */
struct S573 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_SCANNER */
struct S574 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* yy_more_flag */
	T6 a13; /* yy_more_len */
	T6 a14; /* yy_end */
	T6 a15; /* yy_start */
	T6 a16; /* yy_line */
	T6 a17; /* yy_column */
	T6 a18; /* yy_position */
	T0* a19; /* input_buffer */
	T0* a20; /* yy_state_stack */
	T6 a21; /* yy_state_count */
	T0* a22; /* yy_content_area */
	T0* a23; /* yy_ec */
	T0* a24; /* yy_content */
	T0* a25; /* yy_accept */
	T6 a26; /* yy_last_accepting_state */
	T6 a27; /* yy_last_accepting_cpos */
	T0* a28; /* yy_chk */
	T0* a29; /* yy_base */
	T0* a30; /* yy_def */
	T0* a31; /* yy_meta */
	T0* a32; /* yy_nxt */
	T6 a33; /* yy_lp */
	T0* a34; /* yy_acclist */
	T6 a35; /* yy_looking_for_trail_begin */
	T6 a36; /* yy_full_match */
	T6 a37; /* yy_full_state */
	T6 a38; /* yy_full_lp */
	T1 a39; /* yy_rejected */
	T0* a40; /* yy_pushed_start_conditions */
	T0* a41; /* last_string_value */
	T0* a42; /* last_error */
	T6 a43; /* pushed_start_condition_count */
};

/* Struct for type XM_DEFAULT_POSITION */
struct S575 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* row */
	T6 a2; /* column */
	T0* a3; /* source_name */
	T6 a4; /* byte_index */
};

/* Struct for type DS_BILINKED_LIST [XM_POSITION] */
struct S577 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
struct S578 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* first_cell */
};

/* Struct for type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S579 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* capacity */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* modulus */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* found_position */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* equality_tester */
	T0* a20; /* hash_function */
};

/* Struct for type XM_NULL_EXTERNAL_RESOLVER */
struct S581 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_CALLBACKS_NULL */
struct S583 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
struct S584 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_PARSER_NAME */
struct S585 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* use_namespaces */
	T6 a2; /* count */
	T0* a3; /* first */
	T0* a4; /* second */
	T0* a5; /* tail */
};

/* Struct for type SPECIAL [XM_EIFFEL_PARSER_NAME] */
struct S586 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S587 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
struct S588 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* equality_tester */
	T6 a3; /* count */
	T6 a4; /* capacity */
	T6 a5; /* free_slot */
	T6 a6; /* last_position */
	T6 a7; /* modulus */
	T6 a8; /* slots_position */
	T6 a9; /* clashes_previous_position */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* internal_cursor */
	T0* a16; /* hash_function */
};

/* Struct for type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S589 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
struct S590 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_EXTERNAL_ID */
struct S591 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* system_id */
	T0* a2; /* public_id */
};

/* Struct for type SPECIAL [XM_DTD_EXTERNAL_ID] */
struct S592 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
struct S593 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_ELEMENT_CONTENT */
struct S594 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* items */
	T2 a2; /* repetition */
	T0* a3; /* name */
	T2 a4; /* type */
	T1 a5; /* is_character_data_allowed */
};

/* Struct for type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
struct S595 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S596 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
struct S597 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S598 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
struct S599 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_ATTRIBUTE_CONTENT */
struct S600 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* default_value */
	T2 a3; /* type */
	T1 a4; /* is_list_type */
	T0* a5; /* enumeration_list */
	T2 a6; /* value */
};

/* Struct for type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
struct S601 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
struct S602 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_BILINKED_LIST [STRING_8] */
struct S603 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* equality_tester */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [STRING_8]] */
struct S604 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [BOOLEAN] */
struct S605 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
struct S606 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_DECLARATION */
struct S607 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* encoding */
	T0* a2; /* version */
	T1 a3; /* stand_alone */
};

/* Struct for type SPECIAL [XM_EIFFEL_DECLARATION] */
struct S608 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type XM_EIFFEL_ENTITY_DEF */
struct S611 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* literal_name */
	T0* a2; /* value */
	T0* a3; /* resolver */
	T0* a4; /* external_id */
	T0* a5; /* character_entity */
	T0* a6; /* yy_pushed_start_conditions */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_value */
	T0* a11; /* last_string_value */
	T0* a12; /* last_error */
	T1 a13; /* yy_rejected */
	T6 a14; /* yy_state_count */
	T6 a15; /* yy_full_match */
	T6 a16; /* yy_lp */
	T6 a17; /* yy_looking_for_trail_begin */
	T6 a18; /* yy_full_lp */
	T6 a19; /* yy_full_state */
	T6 a20; /* pushed_start_condition_count */
	T6 a21; /* yy_start_state */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_position */
	T6 a25; /* yy_start */
	T6 a26; /* yy_end */
	T6 a27; /* line */
	T6 a28; /* column */
	T6 a29; /* position */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_last_accepting_state */
	T6 a33; /* yy_last_accepting_cpos */
	T0* a34; /* yy_state_stack */
	T0* a35; /* yy_nxt */
	T0* a36; /* yy_chk */
	T0* a37; /* yy_base */
	T0* a38; /* yy_def */
	T0* a39; /* yy_ec */
	T0* a40; /* yy_meta */
	T0* a41; /* yy_accept */
	T0* a42; /* yy_content */
	T0* a43; /* yy_content_area */
	T6 a44; /* last_token */
	T0* a45; /* input_filter */
	T0* a46; /* input_stream */
	T0* a47; /* input_resolver */
	T0* a48; /* yy_acclist */
};

/* Struct for type XM_EIFFEL_SCANNER_DTD */
struct S612 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* decl_start_sent */
	T1 a13; /* decl_end_sent */
	T1 a14; /* yy_more_flag */
	T6 a15; /* yy_more_len */
	T6 a16; /* yy_end */
	T6 a17; /* yy_start */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_position */
	T0* a21; /* input_buffer */
	T0* a22; /* yy_state_stack */
	T6 a23; /* yy_state_count */
	T0* a24; /* yy_content_area */
	T0* a25; /* yy_ec */
	T0* a26; /* yy_content */
	T0* a27; /* yy_accept */
	T6 a28; /* yy_last_accepting_state */
	T6 a29; /* yy_last_accepting_cpos */
	T0* a30; /* yy_chk */
	T0* a31; /* yy_base */
	T0* a32; /* yy_def */
	T0* a33; /* yy_meta */
	T0* a34; /* yy_nxt */
	T6 a35; /* yy_lp */
	T0* a36; /* yy_acclist */
	T6 a37; /* yy_looking_for_trail_begin */
	T6 a38; /* yy_full_match */
	T6 a39; /* yy_full_state */
	T6 a40; /* yy_full_lp */
	T1 a41; /* yy_rejected */
	T0* a42; /* yy_pushed_start_conditions */
	T0* a43; /* last_string_value */
	T0* a44; /* last_error */
	T6 a45; /* pushed_start_condition_count */
};

/* Struct for type XM_EIFFEL_PE_ENTITY_DEF */
struct S614 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* resolver */
	T0* a2; /* external_id */
	T0* a3; /* literal_name */
	T0* a4; /* value */
	T0* a5; /* character_entity */
	T0* a6; /* yy_pushed_start_conditions */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_value */
	T0* a11; /* last_string_value */
	T0* a12; /* last_error */
	T1 a13; /* yy_rejected */
	T6 a14; /* yy_state_count */
	T6 a15; /* yy_full_match */
	T6 a16; /* yy_lp */
	T6 a17; /* yy_looking_for_trail_begin */
	T6 a18; /* yy_full_lp */
	T6 a19; /* yy_full_state */
	T6 a20; /* pushed_start_condition_count */
	T6 a21; /* yy_start_state */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_position */
	T6 a25; /* yy_start */
	T6 a26; /* yy_end */
	T6 a27; /* line */
	T6 a28; /* column */
	T6 a29; /* position */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_last_accepting_state */
	T6 a33; /* yy_last_accepting_cpos */
	T0* a34; /* yy_state_stack */
	T1 a35; /* pre_sent */
	T1 a36; /* post_sent */
	T0* a37; /* yy_nxt */
	T0* a38; /* yy_chk */
	T0* a39; /* yy_base */
	T0* a40; /* yy_def */
	T0* a41; /* yy_ec */
	T0* a42; /* yy_meta */
	T0* a43; /* yy_accept */
	T0* a44; /* yy_content */
	T0* a45; /* yy_content_area */
	T6 a46; /* last_token */
	T0* a47; /* input_filter */
	T0* a48; /* input_stream */
	T0* a49; /* input_resolver */
	T0* a50; /* yy_acclist */
};

/* Struct for type DS_HASH_SET_CURSOR [INTEGER_32] */
struct S615 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type detachable KL_EQUALITY_TESTER [INTEGER_32] */
struct S616 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
struct S617 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ECF_LIBRARY] */
struct S618 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
struct S621 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
struct S622 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
struct S625 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
struct S626 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_TARGET] */
struct S627 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
struct S628 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [ET_LIBRARY] */
struct S629 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* special_item_routines */
	T0* a7; /* item_storage */
	T0* a8; /* clashes */
	T0* a9; /* slots */
	T6 a10; /* found_position */
	T0* a11; /* internal_cursor */
	T6 a12; /* slots_position */
	T6 a13; /* count */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [attached] TUPLE [DS_HASH_SET [ET_LIBRARY]] */
struct S630 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S631 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
struct S632 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* content */
	T0* a3; /* keys */
	T0* a4; /* deleted_marks */
	T0* a5; /* indexes_map */
	T6 a6; /* iteration_position */
	T6 a7; /* count */
	T6 a8; /* deleted_item_position */
	T6 a9; /* control */
	T0* a10; /* found_item */
	T1 a11; /* has_default */
	T6 a12; /* item_position */
	T6 a13; /* ht_lowest_deleted_position */
	T0* a14; /* ht_deleted_item */
	T0* a15; /* ht_deleted_key */
	T1 a16; /* object_comparison */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S634 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
struct S635 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
struct S637 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
struct S640 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
struct S641 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_MASTER_CLASS] */
struct S642 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
struct S643 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CLASS_NAME] */
struct S644 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE] */
struct S645 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
struct S646 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
struct S647 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_FORMAL_PARAMETER_LIST */
struct S650 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S654 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BRACKET_SYMBOL */
struct S655 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
struct S657 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type C_DATE */
struct S658 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* millisecond_now */
	T0* a2; /* internal_item */
	T1 a3; /* is_utc */
};

/* Struct for type KL_STDIN_FILE */
struct S659 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_file */
	T2 a2; /* last_character */
	T0* a3; /* last_string */
	T0* a4; /* character_buffer */
};

/* Struct for type DS_ARRAYED_STACK [INTEGER_32] */
struct S661 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S662 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
struct S663 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_KEYWORD] */
struct S664 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_SYMBOL] */
struct S665 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
struct S666 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST] */
struct S667 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
struct S668 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_QUERY] */
struct S669 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_PROCEDURE] */
struct S670 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
struct S671 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [ET_NAMED_CLASS] */
struct S672 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
struct S673 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_KEYWORD] */
struct S674 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
struct S675 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_AGENT_KEYWORD */
struct S676 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
};

/* Struct for type SPECIAL [detachable ET_AGENT_KEYWORD] */
struct S677 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
struct S678 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PRECURSOR_KEYWORD */
struct S679 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
struct S680 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
struct S681 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_SYMBOL] */
struct S682 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
struct S683 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_POSITION] */
struct S684 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
struct S685 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
struct S687 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
struct S688 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_BREAK] */
struct S690 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
struct S691 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CHARACTER_CONSTANT] */
struct S693 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
struct S694 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CURRENT] */
struct S695 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
struct S696 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FREE_OPERATOR */
struct S697 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* hash_code */
	T6 a3; /* compressed_position */
	T0* a4; /* operator_name */
	T6 a5; /* seed */
};

/* Struct for type SPECIAL [detachable ET_FREE_OPERATOR] */
struct S698 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
struct S699 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INTEGER_CONSTANT] */
struct S701 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
struct S702 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_KEYWORD_OPERATOR */
struct S703 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [detachable ET_KEYWORD_OPERATOR] */
struct S704 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
struct S705 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING] */
struct S706 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
struct S707 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_REAL_CONSTANT] */
struct S709 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
struct S710 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_RESULT] */
struct S711 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
struct S712 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_RETRY_INSTRUCTION */
struct S713 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
};

/* Struct for type SPECIAL [detachable ET_RETRY_INSTRUCTION] */
struct S714 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
struct S715 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SYMBOL_OPERATOR */
struct S716 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* seed */
};

/* Struct for type SPECIAL [detachable ET_SYMBOL_OPERATOR] */
struct S717 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_VOID] */
struct S718 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_VOID */
struct S719 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T2 a2; /* code */
	T6 a3; /* compressed_position */
	T0* a4; /* text */
};

/* Struct for type SPECIAL [detachable ET_VOID] */
struct S720 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
struct S721 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SEMICOLON_SYMBOL */
struct S722 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
struct S723 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
struct S724 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_BRACKET_SYMBOL] */
struct S725 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
struct S726 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_QUESTION_MARK_SYMBOL */
struct S727 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
};

/* Struct for type SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
struct S728 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
struct S729 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ACROSS_EXPRESSION */
struct S730 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cursor_name */
	T0* a3; /* across_keyword */
	T0* a4; /* iterable_expression */
	T0* a5; /* as_keyword */
	T0* a6; /* until_conditional */
	T0* a7; /* iteration_conditional */
	T0* a8; /* end_keyword */
	T1 a9; /* is_all */
	T0* a10; /* invariant_part */
	T0* a11; /* variant_part */
	T0* a12; /* new_cursor_expression */
	T0* a13; /* cursor_after_expression */
	T0* a14; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_ACROSS_EXPRESSION] */
struct S731 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
struct S732 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ACROSS_INSTRUCTION */
struct S733 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* cursor_name */
	T0* a2; /* across_keyword */
	T0* a3; /* iterable_expression */
	T0* a4; /* as_keyword */
	T0* a5; /* from_compound */
	T0* a6; /* until_conditional */
	T0* a7; /* loop_compound */
	T0* a8; /* end_keyword */
	T0* a9; /* invariant_part */
	T0* a10; /* variant_part */
	T0* a11; /* new_cursor_expression */
	T0* a12; /* cursor_after_expression */
	T0* a13; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
struct S734 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S735 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S736 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S737 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S738 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S739 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S740 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S741 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S743 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S744 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_AGENT_ARGUMENT_OPERAND_LIST */
struct S745 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S746 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
struct S747 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_AGENT_TARGET] */
struct S748 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
struct S749 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ALIAS_NAME */
struct S750 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* alias_keyword */
	T0* a2; /* alias_string */
	T2 a3; /* code */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [detachable ET_ALIAS_NAME] */
struct S751 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
struct S752 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ASSIGNER] */
struct S754 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
struct S755 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_BRACKET_EXPRESSION */
struct S756 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* target */
	T0* a3; /* name */
	T0* a4; /* arguments */
};

/* Struct for type SPECIAL [detachable ET_BRACKET_EXPRESSION] */
struct S757 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
struct S758 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CALL_AGENT */
struct S759 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* target */
	T0* a6; /* implicit_result */
};

/* Struct for type SPECIAL [detachable ET_CALL_AGENT] */
struct S760 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S761 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S762 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
struct S763 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CHECK_INSTRUCTION */
struct S764 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* check_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_CHECK_INSTRUCTION] */
struct S765 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
struct S766 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CHOICE] */
struct S768 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
struct S769 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CHOICE_CONSTANT] */
struct S771 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
struct S772 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CHOICE_ITEM] */
struct S774 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
struct S775 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CHOICE_LIST */
struct S776 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* when_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CHOICE_LIST] */
struct S777 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
struct S778 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CLASS] */
struct S779 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
struct S780 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CLIENT_ITEM] */
struct S781 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
struct S782 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CLIENTS */
struct S783 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CLIENTS] */
struct S784 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
struct S785 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_COMPOUND] */
struct S786 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
struct S787 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONDITIONAL] */
struct S789 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
struct S790 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONSTANT] */
struct S791 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S792 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S794 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S795 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
struct S796 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S797 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
struct S798 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CONSTRAINT_CREATOR */
struct S799 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* create_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
struct S800 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
struct S801 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_TYPE] */
struct S803 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
struct S804 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE] */
struct S806 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
struct S807 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
struct S809 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
struct S810 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CONVERT_FEATURE_LIST */
struct S811 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* convert_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
struct S812 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
struct S813 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CREATE_EXPRESSION] */
struct S814 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
struct S815 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CREATOR */
struct S816 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* creation_keyword */
	T0* a2; /* clients */
	T0* a3; /* storage */
	T6 a4; /* count */
};

/* Struct for type SPECIAL [detachable ET_CREATOR] */
struct S817 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
struct S818 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CREATOR_LIST */
struct S819 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CREATOR_LIST] */
struct S820 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
struct S821 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_DEBUG_INSTRUCTION */
struct S822 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* keys */
	T0* a2; /* compound */
	T0* a3; /* end_keyword */
};

/* Struct for type SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
struct S823 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
struct S824 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_EXPRESSION */
struct S825 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_keyword */
	T0* a3; /* then_expression */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
struct S826 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
struct S827 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_EXPRESSION_LIST */
struct S828 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
struct S829 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
struct S830 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_PART */
struct S831 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_PART] */
struct S832 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
struct S833 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_PART_LIST */
struct S834 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_PART_LIST] */
struct S835 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
struct S836 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXPORT] */
struct S838 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
struct S839 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXPORT_LIST] */
struct S840 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
struct S841 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXPRESSION] */
struct S842 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
struct S843 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXPRESSION_ITEM] */
struct S844 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
struct S845 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
struct S846 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
struct S847 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXTERNAL_ALIAS] */
struct S849 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
struct S850 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FEATURE_CLAUSE */
struct S851 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_keyword */
	T0* a2; /* clients */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_CLAUSE] */
struct S852 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
struct S853 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FEATURE_CLAUSE_LIST */
struct S854 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
struct S855 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
struct S856 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FEATURE_EXPORT */
struct S857 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clients_clause */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_EXPORT] */
struct S858 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
struct S859 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FEATURE_NAME] */
struct S860 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
struct S861 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
struct S863 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
struct S864 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT] */
struct S865 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S866 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S868 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S869 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S870 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
struct S871 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FORMAL_PARAMETER */
struct S872 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* implementation_class */
	T0* a4; /* type_mark */
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER] */
struct S873 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S874 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S876 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
struct S877 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
struct S878 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
struct S879 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_IF_EXPRESSION */
struct S880 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* conditional */
	T0* a3; /* then_keyword */
	T0* a4; /* then_expression */
	T0* a5; /* else_keyword */
	T0* a6; /* else_expression */
	T0* a7; /* end_keyword */
	T0* a8; /* elseif_parts */
};

/* Struct for type SPECIAL [detachable ET_IF_EXPRESSION] */
struct S881 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
struct S882 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_IF_INSTRUCTION */
struct S883 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
	T0* a3; /* end_keyword */
	T0* a4; /* elseif_parts */
	T0* a5; /* else_compound */
};

/* Struct for type SPECIAL [detachable ET_IF_INSTRUCTION] */
struct S884 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST] */
struct S885 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INDEXING_LIST */
struct S886 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* indexing_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_INDEXING_LIST] */
struct S887 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM] */
struct S888 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INDEXING_ITEM] */
struct S890 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM] */
struct S891 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INDEXING_TERM] */
struct S893 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM] */
struct S894 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INDEXING_TERM_ITEM] */
struct S896 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST] */
struct S897 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INDEXING_TERM_LIST */
struct S898 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_INDEXING_TERM_LIST] */
struct S899 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
struct S900 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INLINE_AGENT] */
struct S902 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
struct S903 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INSPECT_INSTRUCTION */
struct S904 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* when_parts */
	T0* a3; /* end_keyword */
	T0* a4; /* else_compound */
};

/* Struct for type SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
struct S905 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
struct S906 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INSTRUCTION] */
struct S908 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
struct S909 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INVARIANTS */
struct S910 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_class */
	T0* a2; /* invariant_keyword */
	T0* a3; /* storage */
	T6 a4; /* count */
	T0* a5; /* object_tests */
	T0* a6; /* across_components */
	T1 a7; /* validity_checked */
	T1 a8; /* has_validity_error */
};

/* Struct for type SPECIAL [detachable ET_INVARIANTS] */
struct S911 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S912 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S913 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
struct S914 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_LIKE_TYPE] */
struct S916 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
struct S917 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LOCAL_VARIABLE */
struct S918 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE] */
struct S919 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S920 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S922 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
struct S923 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
struct S924 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
struct S925 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LOOP_INVARIANTS */
struct S926 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* invariant_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_LOOP_INVARIANTS] */
struct S927 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
struct S928 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_MANIFEST_ARRAY */
struct S929 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left_symbol */
	T0* a3; /* right_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_ARRAY] */
struct S930 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
struct S931 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
struct S933 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
struct S934 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_MANIFEST_STRING_LIST */
struct S935 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
struct S936 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
struct S937 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_TUPLE] */
struct S938 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
struct S939 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_OBSOLETE] */
struct S941 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S942 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENTHESIZED_EXPRESSION */
struct S943 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left_parenthesis */
	T0* a3; /* expression */
	T0* a4; /* right_parenthesis */
};

/* Struct for type SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S944 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
struct S945 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PARENT] */
struct S946 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
struct S947 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENT_CLAUSE_LIST */
struct S948 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
struct S949 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
struct S950 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PARENT_ITEM] */
struct S951 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
struct S952 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PARENT_LIST] */
struct S953 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
struct S954 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_POSTCONDITIONS */
struct S955 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* validity_checked */
	T1 a2; /* has_validity_error */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* ensure_keyword */
	T0* a6; /* then_keyword */
};

/* Struct for type SPECIAL [detachable ET_POSTCONDITIONS] */
struct S956 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
struct S957 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PRECONDITIONS] */
struct S958 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
struct S959 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PROCEDURE] */
struct S960 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S961 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S963 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
struct S964 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_QUERY] */
struct S965 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
struct S966 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_RENAME_ITEM] */
struct S968 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
struct S969 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_RENAME_LIST] */
struct S970 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
struct S971 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_STATIC_CALL_EXPRESSION */
struct S972 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* static_type */
	T0* a3; /* feature_keyword */
	T0* a4; /* qualified_name */
	T0* a5; /* arguments */
	T0* a6; /* parenthesis_call */
};

/* Struct for type SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
struct S973 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
struct S974 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_STRIP_EXPRESSION */
struct S975 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* strip_keyword */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
	T6 a5; /* count */
	T0* a6; /* storage */
};

/* Struct for type SPECIAL [detachable ET_STRIP_EXPRESSION] */
struct S976 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
struct S977 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
struct S978 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE_ITEM] */
struct S980 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
struct S981 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE_LIST] */
struct S983 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
struct S984 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_VARIANT */
struct S985 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* variant_keyword */
	T0* a2; /* tag */
	T0* a3; /* expression */
};

/* Struct for type SPECIAL [detachable ET_VARIANT] */
struct S986 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
struct S987 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_WHEN_PART */
struct S988 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* choices */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_WHEN_PART] */
struct S989 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
struct S990 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_WHEN_PART_LIST */
struct S991 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_WHEN_PART_LIST] */
struct S992 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
struct S993 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_WRITABLE] */
struct S994 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
struct S995 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* items */
};

/* Struct for type DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
struct S996 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ET_PARENT_CHECKER1 */
struct S997 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T0* a4; /* current_parent */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER1 */
struct S998 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* formal_parameter_sorter */
	T0* a3; /* direct_formal_parameter_sorter */
	T0* a4; /* current_class */
	T0* a5; /* system_processor */
	T0* a6; /* current_formal */
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S999 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T6 a4; /* position */
	T0* a5; /* item_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* modulus */
	T6 a11; /* slots_position */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T6 a17; /* capacity */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FEATURE_NAME_TESTER */
struct S1000 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1002 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* position */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* count */
	T6 a9; /* free_slot */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* slots_position */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_item_routines */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ALIAS_NAME_TESTER */
struct S1003 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_CLIENT_LIST] */
struct S1005 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
struct S1006 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* count */
	T0* a17; /* internal_keys */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FEATURE_ADAPTATION_RESOLVER */
struct S1007 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* rename_table */
	T0* a3; /* export_table */
	T0* a4; /* undefine_table */
	T0* a5; /* redefine_table */
	T0* a6; /* select_table */
	T0* a7; /* alias_mapping */
	T0* a8; /* replicable_features */
	T0* a9; /* current_class */
	T0* a10; /* system_processor */
	T0* a11; /* free_parent_feature */
	T0* a12; /* parent_feature_list */
	T0* a13; /* free_inherited_feature */
	T0* a14; /* inherited_feature_list */
	T0* a15; /* free_redeclared_feature */
	T0* a16; /* redeclared_feature_list */
};

/* Struct for type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
struct S1008 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* dotnet_features */
	T0* a3; /* other_dotnet_features */
	T0* a4; /* current_class */
	T0* a5; /* system_processor */
	T0* a6; /* free_parent_feature */
	T0* a7; /* parent_feature_list */
	T0* a8; /* free_inherited_feature */
	T0* a9; /* inherited_feature_list */
	T0* a10; /* free_redeclared_feature */
	T0* a11; /* redeclared_feature_list */
};

/* Struct for type ET_IDENTIFIER_TYPE_RESOLVER */
struct S1009 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T0* a4; /* current_feature */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
struct S1010 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_ANCHORED_TYPE_CHECKER */
struct S1011 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* anchored_type_sorter */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
	T0* a5; /* current_anchored_type */
};

/* Struct for type ET_SIGNATURE_CHECKER */
struct S1012 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* parent_context */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
	T6 a5; /* processing_mode */
};

/* Struct for type ET_PARENT_CHECKER2 */
struct S1013 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* constraint_context */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER2 */
struct S1014 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* constraint_context */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_BUILTIN_FEATURE_CHECKER */
struct S1015 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* builtin_features */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_PRECURSOR_CHECKER */
struct S1016 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_feature */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
struct S1017 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* free_slot */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_SET [ET_CLASS] */
struct S1018 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T6 a5; /* capacity */
	T6 a6; /* modulus */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type ET_PARENT_CHECKER3 */
struct S1019 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* classes_to_be_processed */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
struct S1020 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
	T1 a5; /* in_qualified_anchored_type */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
struct S1021 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_PARENT_FEATURE */
struct S1023 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* parent */
	T0* a3; /* precursor_feature */
	T0* a4; /* new_name */
	T0* a5; /* undefine_name */
	T0* a6; /* redefine_name */
	T0* a7; /* select_name */
	T0* a8; /* merged_feature */
};

/* Struct for type ET_INHERITED_FEATURE */
struct S1024 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* parent_feature */
	T0* a3; /* flattened_feature */
	T0* a4; /* flattened_parent */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T1 a7; /* is_selected */
	T0* a8; /* replicated_features */
	T0* a9; /* replicated_seeds */
};

/* Struct for type DS_HASH_SET [ET_PROCEDURE] */
struct S1025 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_QUERY] */
struct S1026 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type ET_SUPPLIER_BUILDER */
struct S1027 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* supplier_classes */
	T0* a2; /* current_class */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
struct S1028 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
struct S1029 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_SYSTEM_ERROR */
struct S1031 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ET_VALIDITY_ERROR */
struct S1032 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* ise_reported */
	T1 a2; /* ge_reported */
	T0* a3; /* default_template */
	T0* a4; /* parameters */
	T0* a5; /* current_class */
	T0* a6; /* class_impl */
	T0* a7; /* position */
	T0* a8; /* code */
	T0* a9; /* etl_code */
	T1 a10; /* ise_fatal */
	T1 a11; /* ge_fatal */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S1034 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
struct S1035 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
struct S1036 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
struct S1037 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S1039 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S1040 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S1041 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
struct S1042 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S1043 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_OBJECT_TEST] */
struct S1045 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
struct S1046 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
struct S1047 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION] */
struct S1048 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION] */
struct S1049 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION] */
struct S1050 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_EQUALITY_EXPRESSION] */
struct S1051 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
struct S1052 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
struct S1053 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_AGENT] */
struct S1054 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT] */
struct S1055 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
struct S1056 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S1058 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
struct S1059 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S1060 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
struct S1061 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE] */
struct S1063 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_FEATURE] */
struct S1064 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE] */
struct S1065 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S1066 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
struct S1068 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_INLINE_CONSTANT] */
struct S1069 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
struct S1071 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_DYNAMIC_FEATURE] */
struct S1072 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
struct S1074 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
struct S1075 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
struct S1076 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
struct S1077 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type RX_BYTE_CODE */
struct S1081 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* byte_code */
	T0* a3; /* character_sets */
	T6 a4; /* capacity */
	T6 a5; /* character_sets_count */
	T6 a6; /* character_sets_capacity */
};

/* Struct for type RX_CHARACTER_SET */
struct S1082 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* set */
};

/* Struct for type RX_CASE_MAPPING */
struct S1083 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* lower_table */
	T0* a2; /* flip_table */
};

/* Struct for type ARRAY [RX_CHARACTER_SET] */
struct S1085 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [RX_CHARACTER_SET] */
struct S1086 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
struct S1088 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ARRAY [BOOLEAN] */
struct S1089 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S1092 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
struct S1094 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S1095 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S1096 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S1097 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
struct S1098 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
struct S1099 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
struct S1100 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S1101 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_FEATURE] */
struct S1102 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* equality_tester */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S1103 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S1104 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S1105 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
struct S1106 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
struct S1107 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
struct S1108 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_NAMED_OBJECT_TEST */
struct S1111 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* as_keyword */
	T0* a4; /* expression */
	T0* a5; /* attached_keyword */
	T0* a6; /* declared_type */
};

/* Struct for type SPECIAL [ET_NAMED_OBJECT_TEST] */
struct S1112 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
struct S1113 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
struct S1114 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* special_routines */
	T0* a3; /* storage */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
struct S1115 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ACROSS_COMPONENT] */
struct S1118 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT] */
struct S1119 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_ACROSS_COMPONENT] */
struct S1120 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_ATTACHMENT_SCOPE] */
struct S1122 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
struct S1123 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
struct S1124 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_INDEXING_TERM] */
struct S1125 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE] */
struct S1126 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ASSERTIONS] */
struct S1127 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTIONS] */
struct S1129 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
struct S1130 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type STRING_TO_INTEGER_CONVERTOR */
struct S1131 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* sign */
	T11 a2; /* part1 */
	T11 a3; /* part2 */
	T6 a4; /* last_state */
	T1 a5; /* internal_overflowed */
	T0* a6; /* leading_separators */
	T0* a7; /* trailing_separators */
	T1 a8; /* leading_separators_acceptable */
	T1 a9; /* trailing_separators_acceptable */
	T6 a10; /* conversion_type */
};

/* Struct for type ET_CLUSTERS */
struct S1133 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type UC_UNICODE_ROUTINES */
struct S1134 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_XACE_FEATURE_OPTIONS */
struct S1135 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_name */
	T0* a2; /* options */
};

/* Struct for type detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
struct S1136 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
struct S1137 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ATTRIBUTE_ERROR */
struct S1138 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_ELEMENT_ERROR */
struct S1139 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ELEMENT_ERROR */
struct S1140 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
struct S1141 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
struct S1142 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
struct S1143 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
struct S1144 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_TRISTATE */
struct S1147 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* value */
};

/* Struct for type KL_AGENT_ROUTINES [ANY] */
struct S1148 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [UT_TRISTATE] */
struct S1149 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [KL_AGENT_ROUTINES [ANY], [attached] PROCEDURE [[attached] TUPLE]] */
struct S1150 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [ET_MASTER_CLASS]] */
struct S1151 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE] */
struct S1152 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]], detachable FUNCTION [[attached] TUPLE, BOOLEAN]] */
struct S1154 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]], FUNCTION [[attached] TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
struct S1155 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]], FUNCTION [[attached] TUPLE [ET_MASTER_CLASS], BOOLEAN], detachable FUNCTION [[attached] TUPLE, BOOLEAN]] */
struct S1156 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_ECF_CLUSTER */
struct S1157 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T1 a5; /* is_override */
	T1 a6; /* is_recursive */
	T1 a7; /* is_read_only */
	T0* a8; /* ecf_subclusters */
	T0* a9; /* ecf_file_rules */
	T0* a10; /* condition */
	T1 a11; /* overridden_constraint_enabled */
	T1 a12; /* scm_mapping_constraint_enabled */
	T0* a13; /* subclusters */
	T1 a14; /* use_obsolete_syntax */
	T0* a15; /* scm_read_mapping */
	T0* a16; /* scm_write_mapping */
	T1 a17; /* is_implicit */
	T0* a18; /* parent */
	T0* a19; /* provider_constraint */
	T0* a20; /* dependant_constraint */
	T1 a21; /* is_preparsed */
	T1 a22; /* is_abstract */
	T0* a23; /* file_rules */
	T0* a24; /* cached_absolute_pathname */
};

/* Struct for type ET_ECF_CLUSTERS */
struct S1158 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type ET_ECF_ADAPTED_LIBRARIES */
struct S1159 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* libraries */
};

/* Struct for type ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
struct S1160 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_ECF_FILE_RULE */
struct S1161 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* exclude */
	T0* a2; /* include */
	T0* a3; /* exclude_regexp */
	T0* a4; /* include_regexp */
	T0* a5; /* condition */
};

/* Struct for type ET_ECF_FILE_RULES */
struct S1162 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* file_rules */
};

/* Struct for type ET_ECF_EXTERNAL_INCLUDE */
struct S1163 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* condition */
};

/* Struct for type ET_ECF_EXTERNAL_INCLUDES */
struct S1164 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_includes */
};

/* Struct for type ET_ECF_EXTERNAL_OBJECT */
struct S1165 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* condition */
};

/* Struct for type ET_ECF_EXTERNAL_OBJECTS */
struct S1166 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_objects */
};

/* Struct for type ET_ECF_EXTERNAL_LIBRARY */
struct S1167 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* condition */
};

/* Struct for type ET_ECF_EXTERNAL_LIBRARIES */
struct S1168 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_libraries */
};

/* Struct for type ET_ECF_SETTINGS */
struct S1170 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_settings */
	T0* a2; /* secondary_settings */
};

/* Struct for type ET_ECF_OPTIONS */
struct S1171 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_options */
	T0* a2; /* secondary_options */
};

/* Struct for type ET_ECF_CONDITIONS */
struct S1172 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditions */
	T1 a2; /* is_ored */
};

/* Struct for type ET_ECF_ROOT_CLASS */
struct S1173 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_name */
	T0* a2; /* creation_procedure_name */
};

/* Struct for type ET_ECF_ROOT_ALL_CLASSES */
struct S1174 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ECF_PLATFORM_CONDITION */
struct S1176 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_BUILD_CONDITION */
struct S1177 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_MULTITHREADED_CONDITION */
struct S1178 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_CONCURRENCY_CONDITION */
struct S1179 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_DOTNET_CONDITION */
struct S1180 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_DYNAMIC_RUNTIME_CONDITION */
struct S1181 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_CUSTOM_CONDITION */
struct S1182 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* value */
	T1 a3; /* is_excluded */
};

/* Struct for type ET_ECF_COMPILER_VERSION_CONDITION */
struct S1184 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* min_value */
	T0* a2; /* max_value */
};

/* Struct for type [attached] TUPLE [ET_ECF_SYSTEM] */
struct S1185 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_LACE_SYSTEM] */
struct S1186 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_PARENTHESIS_EXPRESSION */
struct S1187 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type ET_REGULAR_MANIFEST_STRING */
struct S1191 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* type */
};

/* Struct for type ET_INFIX_FREE_NAME */
struct S1192 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hash_code */
	T6 a2; /* seed */
	T0* a3; /* infix_keyword */
	T0* a4; /* operator_string */
	T2 a5; /* code */
};

/* Struct for type EXCEPTIONS */
struct S1195 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_LINKED_LIST [XM_DOCUMENT_NODE] */
struct S1196 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type XM_LINKED_LIST [XM_ELEMENT_NODE] */
struct S1198 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S1202 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S1203 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type DS_PAIR [XM_POSITION, XM_NODE] */
struct S1204 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first */
	T0* a2; /* second */
};

/* Struct for type UC_UTF8_ROUTINES */
struct S1205 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type UC_UTF8_STRING */
struct S1206 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* area */
	T6 a3; /* byte_count */
	T6 a4; /* internal_hash_code */
	T6 a5; /* last_byte_index_input */
	T6 a6; /* last_byte_index_result */
	T6 a7; /* internal_case_insensitive_hash_code */
};

/* Struct for type XM_EIFFEL_INPUT_STREAM */
struct S1207 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_string */
	T6 a2; /* encoding */
	T0* a3; /* utf_queue */
	T0* a4; /* impl */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
struct S1211 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type KL_CHARACTER_BUFFER */
struct S1214 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* as_special */
	T0* a2; /* area */
};

/* Struct for type [attached] TUPLE [ET_LACE_CLUSTER] */
struct S1215 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
struct S1216 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_cluster */
	T0* a2; /* pathname_buffer */
	T0* a3; /* group_names */
	T0* a4; /* group_pathnames */
};

/* Struct for type KL_STRING_INPUT_STREAM */
struct S1217 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_input */
	T2 a2; /* last_character */
	T0* a3; /* last_string */
	T0* a4; /* string */
	T6 a5; /* location */
};

/* Struct for type ET_TEXT_GROUP */
struct S1218 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_OBJECT_TEST_LIST */
struct S1221 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_ACROSS_COMPONENT_LIST */
struct S1222 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_C3_CHARACTER_CONSTANT */
struct S1223 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T3 a3; /* value */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type ET_VERBATIM_STRING */
struct S1224 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* marker */
	T0* a7; /* open_white_characters */
	T0* a8; /* close_white_characters */
	T1 a9; /* is_left_aligned */
	T0* a10; /* type */
};

/* Struct for type ET_SPECIAL_MANIFEST_STRING */
struct S1225 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type ET_REGULAR_INTEGER_CONSTANT */
struct S1226 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T11 a4; /* value */
	T1 a5; /* has_overflow */
	T0* a6; /* literal */
	T6 a7; /* compressed_position */
	T0* a8; /* type */
};

/* Struct for type ET_UNDERSCORED_INTEGER_CONSTANT */
struct S1227 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T11 a4; /* value */
	T1 a5; /* has_overflow */
	T0* a6; /* literal */
	T6 a7; /* compressed_position */
	T0* a8; /* type */
};

/* Struct for type ET_HEXADECIMAL_INTEGER_CONSTANT */
struct S1228 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T11 a4; /* value */
	T1 a5; /* has_overflow */
	T0* a6; /* literal */
	T6 a7; /* compressed_position */
	T0* a8; /* type */
};

/* Struct for type ET_OCTAL_INTEGER_CONSTANT */
struct S1229 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T11 a4; /* value */
	T1 a5; /* has_overflow */
	T0* a6; /* literal */
	T6 a7; /* compressed_position */
	T0* a8; /* type */
};

/* Struct for type ET_BINARY_INTEGER_CONSTANT */
struct S1230 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T11 a4; /* value */
	T1 a5; /* has_overflow */
	T0* a6; /* literal */
	T6 a7; /* compressed_position */
	T0* a8; /* type */
};

/* Struct for type ET_REGULAR_REAL_CONSTANT */
struct S1231 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* literal */
	T0* a4; /* cast_type */
	T6 a5; /* compressed_position */
	T0* a6; /* type */
};

/* Struct for type ET_UNDERSCORED_REAL_CONSTANT */
struct S1232 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* literal */
	T0* a4; /* cast_type */
	T6 a5; /* compressed_position */
	T0* a6; /* type */
};

/* Struct for type ET_TRUE_CONSTANT */
struct S1234 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T2 a2; /* code */
	T6 a3; /* compressed_position */
	T0* a4; /* text */
};

/* Struct for type ET_FALSE_CONSTANT */
struct S1235 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T2 a2; /* code */
	T6 a3; /* compressed_position */
	T0* a4; /* text */
};

/* Struct for type ET_C1_CHARACTER_CONSTANT */
struct S1236 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T3 a2; /* value */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* type */
};

/* Struct for type ET_C2_CHARACTER_CONSTANT */
struct S1237 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T3 a2; /* value */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* type */
};

/* Struct for type ET_TAGGED_INDEXING */
struct S1239 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tag */
	T0* a2; /* terms */
};

/* Struct for type ET_INDEXING */
struct S1240 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* terms */
};

/* Struct for type ET_CUSTOM_ATTRIBUTE */
struct S1241 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* creation_expression */
	T0* a2; /* settings */
	T0* a3; /* end_keyword */
};

/* Struct for type ET_CONSTRAINED_FORMAL_PARAMETER */
struct S1242 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arrow_symbol */
	T0* a2; /* constraint */
	T0* a3; /* creation_procedures */
	T0* a4; /* type_mark */
	T6 a5; /* index */
	T0* a6; /* name */
	T0* a7; /* implementation_class */
	T0* a8; /* constraint_base_type */
};

/* Struct for type ET_CONSTRAINT_NAMED_TYPE */
struct S1243 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
};

/* Struct for type ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD */
struct S1244 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* attachment_symbol */
	T0* a2; /* separateness_keyword */
};

/* Struct for type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
struct S1245 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* colon */
	T0* a3; /* type */
};

/* Struct for type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
struct S1246 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* comma */
	T0* a3; /* type */
};

/* Struct for type ET_RENAME */
struct S1247 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* old_name */
	T0* a2; /* as_keyword */
	T0* a3; /* new_name */
};

/* Struct for type ET_ALL_EXPORT */
struct S1248 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clients_clause */
	T0* a2; /* all_keyword */
};

/* Struct for type ET_CONVERT_FUNCTION */
struct S1250 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* colon */
};

/* Struct for type ET_CONVERT_PROCEDURE */
struct S1251 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type ET_DO_FUNCTION */
struct S1253 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T0* a5; /* preconditions */
	T6 a6; /* hash_code */
	T6 a7; /* first_seed */
	T0* a8; /* arguments */
	T0* a9; /* assigner */
	T0* a10; /* postconditions */
	T0* a11; /* extended_name */
	T0* a12; /* frozen_keyword */
	T0* a13; /* declared_type */
	T0* a14; /* obsolete_message */
	T0* a15; /* locals */
	T0* a16; /* compound */
	T0* a17; /* rescue_clause */
	T0* a18; /* clients */
	T0* a19; /* is_keyword */
	T0* a20; /* end_keyword */
	T0* a21; /* semicolon */
	T0* a22; /* feature_clause */
	T0* a23; /* first_indexing */
	T0* a24; /* object_tests */
	T0* a25; /* across_components */
	T0* a26; /* other_seeds */
	T1 a27; /* validity_checked */
	T1 a28; /* has_validity_error */
	T0* a29; /* synonym */
	T6 a30; /* id */
	T6 a31; /* version */
};

/* Struct for type ET_ONCE_FUNCTION */
struct S1254 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T0* a5; /* preconditions */
	T6 a6; /* hash_code */
	T6 a7; /* first_seed */
	T0* a8; /* arguments */
	T0* a9; /* assigner */
	T0* a10; /* postconditions */
	T0* a11; /* extended_name */
	T0* a12; /* frozen_keyword */
	T0* a13; /* declared_type */
	T0* a14; /* obsolete_message */
	T0* a15; /* locals */
	T0* a16; /* compound */
	T0* a17; /* rescue_clause */
	T0* a18; /* clients */
	T0* a19; /* is_keyword */
	T0* a20; /* end_keyword */
	T0* a21; /* semicolon */
	T0* a22; /* feature_clause */
	T0* a23; /* first_indexing */
	T0* a24; /* object_tests */
	T0* a25; /* across_components */
	T0* a26; /* other_seeds */
	T0* a27; /* keys */
	T1 a28; /* validity_checked */
	T1 a29; /* has_validity_error */
	T0* a30; /* synonym */
	T6 a31; /* id */
	T6 a32; /* version */
};

/* Struct for type ET_DEFERRED_FUNCTION */
struct S1255 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T0* a5; /* preconditions */
	T6 a6; /* hash_code */
	T6 a7; /* first_seed */
	T0* a8; /* arguments */
	T0* a9; /* assigner */
	T0* a10; /* postconditions */
	T0* a11; /* extended_name */
	T0* a12; /* frozen_keyword */
	T0* a13; /* declared_type */
	T0* a14; /* obsolete_message */
	T0* a15; /* clients */
	T0* a16; /* is_keyword */
	T0* a17; /* deferred_keyword */
	T0* a18; /* end_keyword */
	T0* a19; /* semicolon */
	T0* a20; /* feature_clause */
	T0* a21; /* first_indexing */
	T0* a22; /* object_tests */
	T0* a23; /* across_components */
	T0* a24; /* other_seeds */
	T1 a25; /* validity_checked */
	T1 a26; /* has_validity_error */
	T0* a27; /* synonym */
	T6 a28; /* id */
	T6 a29; /* version */
};

/* Struct for type ET_ONCE_PROCEDURE */
struct S1257 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T0* a5; /* preconditions */
	T6 a6; /* hash_code */
	T6 a7; /* first_seed */
	T0* a8; /* arguments */
	T0* a9; /* postconditions */
	T0* a10; /* compound */
	T0* a11; /* extended_name */
	T0* a12; /* frozen_keyword */
	T0* a13; /* obsolete_message */
	T0* a14; /* locals */
	T0* a15; /* rescue_clause */
	T0* a16; /* clients */
	T0* a17; /* is_keyword */
	T0* a18; /* end_keyword */
	T0* a19; /* semicolon */
	T0* a20; /* feature_clause */
	T0* a21; /* first_indexing */
	T0* a22; /* object_tests */
	T0* a23; /* across_components */
	T0* a24; /* keys */
	T0* a25; /* other_seeds */
	T1 a26; /* validity_checked */
	T1 a27; /* has_validity_error */
	T0* a28; /* synonym */
	T6 a29; /* version */
	T6 a30; /* id */
};

/* Struct for type ET_EXTERNAL_PROCEDURE */
struct S1258 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T0* a5; /* preconditions */
	T6 a6; /* hash_code */
	T6 a7; /* first_seed */
	T0* a8; /* arguments */
	T0* a9; /* postconditions */
	T8 a10; /* builtin_class_code */
	T8 a11; /* builtin_feature_code */
	T0* a12; /* frozen_keyword */
	T0* a13; /* extended_name */
	T0* a14; /* language */
	T0* a15; /* obsolete_message */
	T0* a16; /* alias_clause */
	T0* a17; /* clients */
	T0* a18; /* is_keyword */
	T0* a19; /* end_keyword */
	T0* a20; /* semicolon */
	T0* a21; /* feature_clause */
	T0* a22; /* first_indexing */
	T0* a23; /* object_tests */
	T0* a24; /* across_components */
	T0* a25; /* other_seeds */
	T1 a26; /* validity_checked */
	T1 a27; /* has_validity_error */
	T0* a28; /* synonym */
	T6 a29; /* version */
	T6 a30; /* id */
};

/* Struct for type ET_PREFIX_NAME */
struct S1259 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T2 a2; /* code */
	T0* a3; /* prefix_keyword */
	T0* a4; /* operator_string */
};

/* Struct for type ET_PREFIX_FREE_NAME */
struct S1260 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hash_code */
	T6 a2; /* seed */
	T0* a3; /* operator_string */
	T0* a4; /* prefix_keyword */
	T2 a5; /* code */
};

/* Struct for type ET_INFIX_NAME */
struct S1261 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T2 a2; /* code */
	T0* a3; /* infix_keyword */
	T0* a4; /* operator_string */
};

/* Struct for type ET_ALIASED_FEATURE_NAME */
struct S1262 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_name */
	T0* a2; /* alias_name */
};

/* Struct for type ET_ALIAS_FREE_NAME */
struct S1263 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hash_code */
	T2 a2; /* code */
	T0* a3; /* alias_string */
	T0* a4; /* alias_keyword */
	T6 a5; /* seed */
};

/* Struct for type ET_LABELED_ACTUAL_PARAMETER */
struct S1266 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type ET_LIKE_FEATURE */
struct S1268 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T0* a2; /* type_mark */
	T0* a3; /* like_keyword */
	T0* a4; /* name */
	T1 a5; /* is_procedure */
};

/* Struct for type ET_QUALIFIED_LIKE_BRACED_TYPE */
struct S1269 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type */
	T0* a2; /* type_mark */
	T0* a3; /* like_keyword */
	T0* a4; /* qualified_name */
	T0* a5; /* left_brace */
	T0* a6; /* right_brace */
};

/* Struct for type ET_QUALIFIED_LIKE_TYPE */
struct S1270 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type */
	T0* a2; /* type_mark */
	T0* a3; /* qualified_name */
};

/* Struct for type ET_ASSIGNER_INSTRUCTION */
struct S1271 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* call */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
	T0* a4; /* name */
};

/* Struct for type ET_ASSIGNMENT */
struct S1272 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
};

/* Struct for type ET_ASSIGNMENT_ATTEMPT */
struct S1273 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_attempt_symbol */
};

/* Struct for type ET_LOOP_INSTRUCTION */
struct S1274 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* from_compound */
	T0* a2; /* until_conditional */
	T0* a3; /* loop_compound */
	T0* a4; /* end_keyword */
	T0* a5; /* invariant_part */
	T0* a6; /* variant_part */
	T1 a7; /* has_old_variant_syntax */
};

/* Struct for type ET_NULL_INSTRUCTION */
struct S1275 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_BANG_INSTRUCTION */
struct S1276 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* left_bang */
	T0* a5; /* right_bang */
};

/* Struct for type ET_CREATE_INSTRUCTION */
struct S1277 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* creation_type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* create_keyword */
};

/* Struct for type ET_CHOICE_RANGE */
struct S1278 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* lower */
	T0* a2; /* upper */
	T0* a3; /* dotdot */
};

/* Struct for type ET_PRECURSOR_INSTRUCTION */
struct S1279 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a4; /* is_parent_prefixed */
	T0* a5; /* parenthesis_call */
	T0* a6; /* parent_type */
};

/* Struct for type ET_STATIC_CALL_INSTRUCTION */
struct S1281 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* parenthesis_call */
};

/* Struct for type ET_PRECURSOR_EXPRESSION */
struct S1282 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* parent_name */
	T0* a3; /* arguments */
	T0* a4; /* precursor_keyword */
	T1 a5; /* is_parent_prefixed */
	T0* a6; /* parenthesis_call */
	T0* a7; /* parent_type */
};

/* Struct for type ET_FEATURE_ADDRESS */
struct S1283 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* name */
};

/* Struct for type ET_CURRENT_ADDRESS */
struct S1284 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* current_keyword */
};

/* Struct for type ET_RESULT_ADDRESS */
struct S1285 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* result_keyword */
};

/* Struct for type ET_EXPRESSION_ADDRESS */
struct S1286 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* expression */
};

/* Struct for type ET_INFIX_EXPRESSION */
struct S1287 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* name */
	T0* a4; /* right */
	T1 a5; /* is_boolean_operator */
};

/* Struct for type ET_INFIX_AND_THEN_OPERATOR */
struct S1288 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* and_keyword */
	T0* a2; /* then_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_INFIX_OR_ELSE_OPERATOR */
struct S1289 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* or_keyword */
	T0* a2; /* else_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_MANIFEST_TYPE */
struct S1290 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* type */
	T0* a3; /* left_brace */
	T0* a4; /* right_brace */
};

/* Struct for type ET_PREFIX_EXPRESSION */
struct S1291 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* expression */
	T1 a4; /* is_boolean_operator */
};

/* Struct for type ET_OLD_EXPRESSION */
struct S1292 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* old_keyword */
	T0* a3; /* expression */
};

/* Struct for type ET_OLD_OBJECT_TEST */
struct S1293 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* attached_keyword */
	T0* a4; /* as_keyword */
	T0* a5; /* left_brace */
	T0* a6; /* colon */
	T0* a7; /* declared_type */
	T0* a8; /* right_brace */
	T0* a9; /* expression */
};

/* Struct for type ET_ONCE_MANIFEST_STRING */
struct S1294 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* once_keyword */
	T0* a3; /* manifest_string */
	T6 a4; /* id */
};

/* Struct for type ET_DO_FUNCTION_INLINE_AGENT */
struct S1295 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* formal_arguments */
	T0* a3; /* declared_type */
	T0* a4; /* end_keyword */
	T0* a5; /* implicit_result */
	T0* a6; /* object_tests */
	T0* a7; /* across_components */
	T0* a8; /* actual_arguments */
	T0* a9; /* agent_keyword */
	T0* a10; /* preconditions */
	T0* a11; /* locals */
	T0* a12; /* compound */
	T0* a13; /* postconditions */
	T0* a14; /* rescue_clause */
	T0* a15; /* target */
};

/* Struct for type ET_ONCE_FUNCTION_INLINE_AGENT */
struct S1296 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* formal_arguments */
	T0* a3; /* declared_type */
	T0* a4; /* end_keyword */
	T0* a5; /* implicit_result */
	T0* a6; /* object_tests */
	T0* a7; /* across_components */
	T0* a8; /* actual_arguments */
	T0* a9; /* agent_keyword */
	T0* a10; /* preconditions */
	T0* a11; /* locals */
	T0* a12; /* keys */
	T0* a13; /* compound */
	T0* a14; /* postconditions */
	T0* a15; /* rescue_clause */
	T0* a16; /* target */
};

/* Struct for type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
struct S1297 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* language */
	T0* a3; /* object_tests */
	T0* a4; /* across_components */
	T0* a5; /* actual_arguments */
	T0* a6; /* agent_keyword */
	T0* a7; /* preconditions */
	T0* a8; /* alias_clause */
	T0* a9; /* postconditions */
	T0* a10; /* formal_arguments */
	T0* a11; /* declared_type */
	T0* a12; /* end_keyword */
	T0* a13; /* implicit_result */
	T0* a14; /* target */
};

/* Struct for type ET_DO_PROCEDURE_INLINE_AGENT */
struct S1298 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* formal_arguments */
	T0* a3; /* end_keyword */
	T0* a4; /* object_tests */
	T0* a5; /* across_components */
	T0* a6; /* actual_arguments */
	T0* a7; /* agent_keyword */
	T0* a8; /* preconditions */
	T0* a9; /* locals */
	T0* a10; /* compound */
	T0* a11; /* postconditions */
	T0* a12; /* rescue_clause */
	T0* a13; /* target */
};

/* Struct for type ET_ONCE_PROCEDURE_INLINE_AGENT */
struct S1299 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* formal_arguments */
	T0* a3; /* end_keyword */
	T0* a4; /* object_tests */
	T0* a5; /* across_components */
	T0* a6; /* actual_arguments */
	T0* a7; /* agent_keyword */
	T0* a8; /* preconditions */
	T0* a9; /* locals */
	T0* a10; /* keys */
	T0* a11; /* compound */
	T0* a12; /* postconditions */
	T0* a13; /* rescue_clause */
	T0* a14; /* target */
};

/* Struct for type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
struct S1300 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* language */
	T0* a3; /* object_tests */
	T0* a4; /* across_components */
	T0* a5; /* actual_arguments */
	T0* a6; /* agent_keyword */
	T0* a7; /* preconditions */
	T0* a8; /* alias_clause */
	T0* a9; /* postconditions */
	T0* a10; /* formal_arguments */
	T0* a11; /* end_keyword */
	T0* a12; /* target */
};

/* Struct for type ET_AGENT_OPEN_TARGET */
struct S1301 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a3; /* right_brace */
	T6 a4; /* index */
};

/* Struct for type ET_AGENT_TYPED_OPEN_ARGUMENT */
struct S1302 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a3; /* right_brace */
	T0* a4; /* question_mark */
	T6 a5; /* index */
};

/* Struct for type ET_TAGGED_ASSERTION */
struct S1304 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tag */
	T0* a2; /* expression */
};

/* Struct for type ET_FILE_POSITION */
struct S1305 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
	T0* a2; /* filename */
};

/* Struct for type DS_QUICK_SORTER [ET_QUERY] */
struct S1306 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type DS_QUICK_SORTER [ET_PROCEDURE] */
struct S1307 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_REDECLARED_FEATURE */
struct S1309 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* flattened_feature */
	T0* a3; /* parent_feature */
	T6 a4; /* first_seed */
	T0* a5; /* other_seeds */
	T1 a6; /* is_selected */
	T0* a7; /* replicated_features */
	T0* a8; /* replicated_seeds */
};

/* Struct for type ET_FEATURE_IDS */
struct S1310 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* feature_ids */
};

/* Struct for type CONSOLE */
struct S1316 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* file_pointer */
	T6 a2; /* mode */
	T0* a3; /* last_string */
	T0* a4; /* internal_name */
	T0* a5; /* internal_detachable_name_pointer */
	T2 a6; /* last_character */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S1317 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_LIKE_N */
struct S1319 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* previous */
	T0* a3; /* type_mark */
	T0* a4; /* like_keyword */
};

/* Struct for type SPECIAL [ET_BASE_TYPE] */
struct S1320 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
struct S1321 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ARRAY [IMMUTABLE_STRING_32] */
struct S1322 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
	T1 a4; /* object_comparison */
};

/* Struct for type SPECIAL [IMMUTABLE_STRING_32] */
struct S1323 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
struct S1324 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
struct S1325 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] TUPLE [ET_XACE_CLUSTER] */
struct S1326 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
struct S1327 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
struct S1328 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
struct S1329 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
struct S1331 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
struct S1333 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
struct S1334 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_DOTNET_ASSEMBLY] */
struct S1335 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
struct S1337 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
	T0* a6; /* equality_tester */
};

/* Struct for type ET_BRACED_TYPE_LIST */
struct S1339 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type DS_ARRAYED_LIST [ET_MASTER_CLASS] */
struct S1340 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* equality_tester */
	T0* a6; /* internal_cursor */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_UNIVERSE] */
struct S1341 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_UNIVERSE] */
struct S1342 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
struct S1344 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
struct S1345 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
struct S1347 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_INTERNAL_UNIVERSE] */
struct S1348 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER1 */
struct S1349 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER2 */
struct S1350 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
struct S1351 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER3 */
struct S1352 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
struct S1353 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_STACK [YY_BUFFER] */
struct S1354 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
};

/* Struct for type UT_SYNTAX_ERROR */
struct S1355 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_TOO_MANY_INCLUDES_ERROR */
struct S1356 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_DYNAMIC_TARGET_LIST */
struct S1358 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type XM_NAMESPACE_RESOLVER_CONTEXT */
struct S1359 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* context */
};

/* Struct for type DS_LINKED_QUEUE [STRING_8] */
struct S1361 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
};

/* Struct for type detachable KL_EQUALITY_TESTER [XM_NAMESPACE] */
struct S1362 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
struct S1363 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
struct S1364 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [XM_NAMESPACE] */
struct S1365 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type XM_EIFFEL_CHARACTER_ENTITY */
struct S1366 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* code */
};

/* Struct for type detachable DS_BILINKABLE [XM_POSITION] */
struct S1367 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
struct S1368 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [XM_EIFFEL_SCANNER] */
struct S1369 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
struct S1370 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S1373 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
struct S1374 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
struct S1375 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
struct S1376 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
struct S1377 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1378 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1379 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [STRING_8] */
struct S1380 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_BILINKABLE [STRING_8] */
struct S1381 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type SPECIAL [ET_ECF_TARGET] */
struct S1382 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
struct S1383 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
struct S1384 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_ADAPTED_LIBRARY] */
struct S1385 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
struct S1386 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
struct S1387 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_LIBRARY] */
struct S1388 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIBRARY] */
struct S1389 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_LIBRARY] */
struct S1390 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1391 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1392 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1393 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [NATIVE_STRING] */
struct S1394 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
struct S1395 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [detachable ET_OBJECT_TEST_LIST] */
struct S1396 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
struct S1397 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ACROSS_COMPONENT_LIST] */
struct S1398 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST] */
struct S1399 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ASSERTION_ITEM] */
struct S1400 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
struct S1401 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
struct S1402 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
struct S1403 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
struct S1404 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
struct S1405 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_NAMED_CLASS] */
struct S1406 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
struct S1408 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
struct S1410 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* modulus */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* internal_cursor */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
struct S1411 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
struct S1414 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* cycle */
	T0* a2; /* sorted_items */
	T0* a3; /* items */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* indexes */
};

/* Struct for type detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
struct S1415 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_FORMAL_PARAMETER_TYPE */
struct S1416 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_class */
	T6 a2; /* index */
	T0* a3; /* type_mark */
	T0* a4; /* name */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1417 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_FLATTENED_FEATURE] */
struct S1418 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
struct S1421 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1423 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
struct S1424 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CLIENT_LIST] */
struct S1425 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
struct S1426 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
struct S1428 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT] */
struct S1429 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CLIENT] */
struct S1430 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME] */
struct S1431 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* internal_cursor */
	T6 a4; /* count */
	T0* a5; /* item_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* position */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* modulus */
	T0* a12; /* equality_tester */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* key_storage */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_CALL_NAME_TESTER */
struct S1432 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET [ET_CALL_NAME] */
struct S1434 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* internal_cursor */
	T6 a4; /* count */
	T0* a5; /* item_storage */
	T6 a6; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* position */
	T0* a10; /* equality_tester */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME] */
struct S1435 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 a3; /* found_position */
	T0* a4; /* internal_cursor */
	T0* a5; /* key_storage */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* position */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* modulus */
	T0* a13; /* equality_tester */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* special_item_routines */
	T0* a17; /* clashes */
	T0* a18; /* slots */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME] */
struct S1436 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a11; /* slots_position */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* internal_cursor */
	T0* a15; /* key_storage */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1437 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ET_REPLICATED_FEATURE */
struct S1439 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* features */
	T6 a2; /* selected_count */
};

/* Struct for type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
struct S1440 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
struct S1441 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_DOTNET_SIGNATURE_TESTER */
struct S1442 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET [ET_DOTNET_FEATURE] */
struct S1443 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T6 a9; /* count */
	T6 a10; /* slots_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* internal_cursor */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1445 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
struct S1447 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
struct S1448 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* cycle */
	T0* a2; /* counts */
	T0* a3; /* successors */
	T0* a4; /* items */
	T0* a5; /* sorted_items */
	T0* a6; /* indexes */
};

/* Struct for type detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
struct S1449 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1450 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_LINKED_LIST [ET_PARENT_FEATURE] */
struct S1451 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
struct S1452 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* slots_position */
	T6 a17; /* count */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
struct S1453 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS] */
struct S1456 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_PROCEDURE] */
struct S1458 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_QUERY] */
struct S1459 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
struct S1460 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
struct S1461 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
struct S1462 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
struct S1464 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT] */
struct S1465 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [NATURAL_8] */
struct S1468 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
struct S1469 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type STRING_8_SEARCHER */
struct S1470 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* deltas */
};

/* Struct for type detachable ARRAYED_LIST [INTEGER_32] */
struct S1471 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area_v2 */
	T6 a2; /* index */
};

/* Struct for type ET_XACE_INVALID_EXPRESSION_ERROR */
struct S1473 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
struct S1476 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* last_position */
	T6 a3; /* capacity */
	T6 a4; /* slots_position */
	T6 a5; /* count */
	T6 a6; /* modulus */
	T6 a7; /* clashes_previous_position */
	T0* a8; /* key_equality_tester */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* item_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T6 a17; /* free_slot */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
struct S1477 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1478 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type KL_AGENT_ROUTINES [ET_UNIVERSE] */
struct S1479 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [ET_UNIVERSE]] */
struct S1480 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
struct S1481 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], [attached] PREDICATE [[attached] TUPLE [ET_UNIVERSE]]] */
struct S1482 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type KL_AGENT_HASH_FUNCTION [STRING_8] */
struct S1485 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* hash_agent */
};

/* Struct for type [attached] TUPLE [STRING_8] */
struct S1486 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] FUNCTION [[attached] TUPLE [STRING_8], INTEGER_32] */
struct S1487 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [KL_STRING_ROUTINES] */
struct S1488 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
struct S1489 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
	T0* a5; /* agent_type */
	T1 a6; /* is_dynamic_types_readonly */
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
struct S1491 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type XM_COMMENT */
struct S1492 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* data */
	T0* a2; /* parent */
};

/* Struct for type XM_PROCESSING_INSTRUCTION */
struct S1493 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* data */
	T0* a3; /* parent */
};

/* Struct for type XM_CHARACTER_DATA */
struct S1494 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T0* a2; /* parent */
};

/* Struct for type detachable DS_CELL [detachable ET_CLASS] */
struct S1496 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type [attached] TUPLE [detachable DS_CELL [detachable ET_CLASS]] */
struct S1497 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
struct S1498 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type DS_ARRAYED_LIST [ET_CLUSTER] */
struct S1499 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
struct S1503 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_UNQUALIFIED_CALL_INSTRUCTION */
struct S1504 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* arguments */
	T0* a3; /* parenthesis_call */
};

/* Struct for type ET_SEEDED_QUERY_COMPARATOR */
struct S1507 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SEEDED_PROCEDURE_COMPARATOR */
struct S1510 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [ET_CLIENT_LIST] */
struct S1514 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_FORMAL_COMMA_ARGUMENT */
struct S1516 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type ET_LOCAL_COMMA_VARIABLE */
struct S1517 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* name_item */
	T1 a3; /* is_used */
};

/* Struct for type ET_LABELED_COMMA_ACTUAL_PARAMETER */
struct S1518 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type ET_KEYWORD_EXPRESSION */
struct S1520 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* expression */
	T0* a2; /* keyword */
};

/* Struct for type ET_CLUSTER_ERROR */
struct S1522 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* cluster */
};

/* Struct for type ET_SYNTAX_ERROR */
struct S1523 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* filename */
	T0* a6; /* position */
	T1 a7; /* ise_reported */
	T1 a8; /* ise_fatal */
	T1 a9; /* ge_reported */
	T1 a10; /* ge_fatal */
};

/* Struct for type [attached] TUPLE [ET_MASTER_CLASS, ET_SYSTEM_PROCESSOR] */
struct S1530 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
struct S1536 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_state */
	T1 a2; /* internal_overflowed */
	T11 a3; /* part1 */
	T11 a4; /* part2 */
	T0* a5; /* leading_separators */
	T0* a6; /* trailing_separators */
	T6 a7; /* sign */
	T6 a8; /* conversion_type */
	T2 a9; /* internal_lookahead */
	T1 a10; /* leading_separators_acceptable */
	T1 a11; /* trailing_separators_acceptable */
};

/* Struct for type ET_AGENT_IMPLICIT_CURRENT_TARGET */
struct S1540 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_expression */
};

/* Struct for type detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
struct S1550 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type INTEGER_OVERFLOW_CHECKER */
struct S1557 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* integer_overflow_state1 */
	T0* a2; /* integer_overflow_state2 */
	T0* a3; /* natural_overflow_state1 */
	T0* a4; /* natural_overflow_state2 */
};

/* Struct for type SPECIAL [ARRAY [INTEGER_32]] */
struct S1558 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
struct S1559 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
struct S1560 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
struct S1561 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
struct S1562 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
struct S1563 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1564 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
struct S1565 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
struct S1566 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
struct S1567 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
struct S1568 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
struct S1569 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_CONDITION] */
struct S1570 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type detachable DS_LINKABLE [XM_DOCUMENT_NODE] */
struct S1572 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_QUEUE [CHARACTER_8] */
struct S1577 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
};

/* Struct for type UC_UTF16_ROUTINES */
struct S1578 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ADAPTED_UNIVERSE] */
struct S1579 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
struct S1580 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
struct S1581 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type LX_DFA_WILDCARD */
struct S1582 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pattern */
	T1 a2; /* is_case_insensitive */
	T0* a3; /* yy_nxt */
	T0* a4; /* yy_accept */
	T6 a5; /* yyNb_rows */
	T6 a6; /* match_count */
	T6 a7; /* subject_start */
	T6 a8; /* subject_end */
	T0* a9; /* subject */
	T6 a10; /* matched_start */
	T6 a11; /* matched_end */
};

/* Struct for type DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
struct S1583 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type ET_STANDARD_ONCE_KEYS */
struct S1585 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
struct S1587 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
struct S1588 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [ET_XACE_CLUSTER] */
struct S1589 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
struct S1590 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
struct S1591 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
struct S1592 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
struct S1593 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [YY_BUFFER] */
struct S1595 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [YY_BUFFER] */
struct S1596 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TARGET] */
struct S1597 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
struct S1598 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1600 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1601 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* before */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* after */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
struct S1602 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
struct S1603 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
struct S1604 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1605 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T0* a5; /* equality_tester */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_cursor */
	T6 a8; /* found_position */
	T0* a9; /* item_storage */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* hash_function */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
struct S1606 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME] */
struct S1607 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_RENAME] */
struct S1608 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CALL_NAME] */
struct S1613 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME] */
struct S1614 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
struct S1615 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CALL_NAME] */
struct S1616 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME] */
struct S1617 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME] */
struct S1620 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1621 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1622 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
struct S1624 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
struct S1625 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_LINKABLE [ET_ADAPTED_FEATURE] */
struct S1626 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
struct S1627 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_PARENT_FEATURE] */
struct S1628 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1629 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_DOTNET_FEATURE] */
struct S1630 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
struct S1631 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
struct S1632 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1633 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1636 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1637 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
struct S1638 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_LINKABLE [ET_DOTNET_FEATURE] */
struct S1639 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
struct S1640 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T6 a5; /* modulus */
	T6 a6; /* capacity */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T0* a9; /* internal_cursor */
	T6 a10; /* found_position */
	T0* a11; /* item_storage */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* hash_function */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
};

/* Struct for type SPECIAL [ET_LIKE_FEATURE] */
struct S1641 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
struct S1642 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
struct S1643 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
struct S1645 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
struct S1646 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
struct S1647 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* position */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
struct S1648 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_DOTNET_ASSEMBLY_ERROR */
struct S1649 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* assembly */
};

/* Struct for type [attached] TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1650 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_XACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1651 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1652 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type KL_CHARACTER_ROUTINES */
struct S1661 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
struct S1662 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type ET_ACTUAL_PARAMETER_SUBLIST */
struct S1663 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* actual_parameters */
	T6 a2; /* upper */
	T6 a3; /* lower */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
struct S1664 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* actual_parameters */
	T6 a3; /* tuple_position */
	T0* a4; /* tuple_type */
};

/* Struct for type SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S1669 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
struct S1670 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENTHESIS_INSTRUCTION */
struct S1671 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
};

/* Struct for type ET_PARENTHESIS_SYMBOL */
struct S1675 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
};

/* Struct for type ET_INFIX_CAST_EXPRESSION */
struct S1681 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* type */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
struct S1693 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* left_symbol */
	T0* a3; /* actual_arguments */
	T0* a4; /* storage */
	T0* a5; /* right_symbol */
};

/* Struct for type [attached] TUPLE [ET_ASSERTIONS] */
struct S1694 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [ET_ASSERTIONS]] */
struct S1695 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
struct S1697 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
struct S1698 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* agent_expression */
	T6 a2; /* argument_index */
	T6 a3; /* index */
};

/* Struct for type detachable DS_LINKABLE [XM_ELEMENT_NODE] */
struct S1704 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* right */
	T0* a2; /* item */
};

/* Struct for type [attached] TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8] */
struct S1705 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T8 z3;
};

/* Struct for type [attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
struct S1710 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
struct S1711 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_INTERNAL_UNIVERSE, ET_ECF_STATE] */
struct S1712 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [ET_ECF_EXTERNAL_OBJECT] */
struct S1713 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
struct S1714 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
struct S1715 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
struct S1716 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type detachable DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S1717 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] TUPLE [LX_WILDCARD] */
struct S1718 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [LX_WILDCARD]] */
struct S1719 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
struct S1720 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [STRING_8]] */
struct S1722 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [KL_STRING_ROUTINES, STRING_8] */
struct S1723 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type SPECIAL [ET_CLUSTER] */
struct S1728 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLUSTER] */
struct S1729 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
struct S1730 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
struct S1732 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
struct S1733 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table_cursor */
	T0* a2; /* container */
};

/* Struct for type SPECIAL [NATURAL_64] */
struct S1735 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T11 z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_ECF_CLUSTER] */
struct S1736 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
struct S1737 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
struct S1738 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
struct S1739 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
struct S1740 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
struct S1741 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1742 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1743 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1744 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
struct S1745 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
struct S1746 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
struct S1747 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
struct S1748 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_FILE_RULE] */
struct S1749 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
struct S1750 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
struct S1751 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
struct S1752 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
struct S1753 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
struct S1754 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
struct S1755 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
struct S1756 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
struct S1757 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
struct S1758 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
struct S1759 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_CONDITION] */
struct S1760 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_CONDITION] */
struct S1761 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION] */
struct S1762 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type detachable DS_LINKABLE [CHARACTER_8] */
struct S1763 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type LX_WILDCARD_PARSER */
struct S1764 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* successful */
	T0* a2; /* pending_rules */
	T0* a3; /* start_condition_stack */
	T0* a4; /* action_factory */
	T0* a5; /* old_singleton_lines */
	T0* a6; /* old_singleton_columns */
	T0* a7; /* old_singleton_counts */
	T0* a8; /* old_regexp_lines */
	T0* a9; /* old_regexp_columns */
	T0* a10; /* old_regexp_counts */
	T0* a11; /* description */
	T0* a12; /* last_string_value */
	T0* a13; /* last_lx_symbol_class_value */
	T0* a14; /* error_handler */
	T0* a15; /* name_definitions */
	T0* a16; /* character_classes */
	T6 a17; /* line_nb */
	T0* a18; /* yyss */
	T0* a19; /* input_buffer */
	T6 a20; /* yy_end */
	T6 a21; /* yy_position */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_parsing_status */
	T6 a25; /* yy_suspended_yystacksize */
	T6 a26; /* yy_suspended_yystate */
	T6 a27; /* yy_suspended_yyn */
	T6 a28; /* yy_suspended_yychar1 */
	T6 a29; /* yy_suspended_index */
	T6 a30; /* yy_suspended_yyss_top */
	T6 a31; /* yy_suspended_yy_goto */
	T0* a32; /* yyr1 */
	T6 a33; /* yyssp */
	T0* a34; /* yypgoto */
	T0* a35; /* yycheck */
	T0* a36; /* yytable */
	T0* a37; /* yydefgoto */
	T6 a38; /* error_count */
	T1 a39; /* yy_lookahead_needed */
	T6 a40; /* yyerrstatus */
	T0* a41; /* yypact */
	T6 a42; /* last_token */
	T0* a43; /* yytranslate */
	T0* a44; /* yydefact */
	T0* a45; /* yy_pushed_start_conditions */
	T0* a46; /* yyspecial_routines1 */
	T6 a47; /* yyvsc1 */
	T0* a48; /* yyvs1 */
	T0* a49; /* yyspecial_routines2 */
	T6 a50; /* yyvsc2 */
	T0* a51; /* yyvs2 */
	T0* a52; /* yyspecial_routines3 */
	T6 a53; /* yyvsc3 */
	T0* a54; /* yyvs3 */
	T0* a55; /* yyspecial_routines4 */
	T6 a56; /* yyvsc4 */
	T0* a57; /* yyvs4 */
	T0* a58; /* yyspecial_routines5 */
	T6 a59; /* yyvsc5 */
	T0* a60; /* yyvs5 */
	T0* a61; /* yytypes1 */
	T0* a62; /* yytypes2 */
	T6 a63; /* yy_start */
	T6 a64; /* yyvsp1 */
	T6 a65; /* yyvsp2 */
	T6 a66; /* yyvsp3 */
	T6 a67; /* yyvsp4 */
	T6 a68; /* yyvsp5 */
	T1 a69; /* yy_more_flag */
	T6 a70; /* yy_more_len */
	T6 a71; /* line */
	T6 a72; /* column */
	T6 a73; /* position */
	T6 a74; /* yy_start_state */
	T0* a75; /* yy_state_stack */
	T6 a76; /* yy_state_count */
	T0* a77; /* yy_content_area */
	T0* a78; /* yy_ec */
	T0* a79; /* yy_content */
	T0* a80; /* yy_accept */
	T6 a81; /* yy_last_accepting_state */
	T6 a82; /* yy_last_accepting_cpos */
	T0* a83; /* yy_chk */
	T0* a84; /* yy_base */
	T0* a85; /* yy_def */
	T0* a86; /* yy_meta */
	T0* a87; /* yy_nxt */
	T6 a88; /* yy_lp */
	T0* a89; /* yy_acclist */
	T6 a90; /* yy_looking_for_trail_begin */
	T6 a91; /* yy_full_match */
	T6 a92; /* yy_full_state */
	T6 a93; /* yy_full_lp */
	T1 a94; /* yy_rejected */
	T0* a95; /* last_detachable_any_value */
	T6 a96; /* last_integer_value */
	T1 a97; /* in_trail_context */
	T0* a98; /* rule */
	T1 a99; /* has_trail_context */
	T6 a100; /* head_count */
	T6 a101; /* head_line */
	T6 a102; /* head_column */
	T6 a103; /* trail_count */
	T6 a104; /* rule_line_nb */
};

/* Struct for type LX_DESCRIPTION */
struct S1765 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equiv_classes */
	T1 a2; /* equiv_classes_used */
	T1 a3; /* full_table */
	T1 a4; /* meta_equiv_classes_used */
	T1 a5; /* reject_used */
	T1 a6; /* variable_trail_context */
	T0* a7; /* rules */
	T0* a8; /* start_conditions */
	T6 a9; /* characters_count */
	T6 a10; /* array_size */
	T1 a11; /* line_pragma */
	T1 a12; /* inspect_used */
	T0* a13; /* eof_rules */
	T0* a14; /* eiffel_header */
	T1 a15; /* case_insensitive */
	T0* a16; /* input_filename */
	T1 a17; /* actions_separated */
	T0* a18; /* eiffel_code */
	T1 a19; /* bol_needed */
	T1 a20; /* pre_action_used */
	T1 a21; /* post_action_used */
	T1 a22; /* pre_eof_action_used */
	T1 a23; /* post_eof_action_used */
	T1 a24; /* line_used */
	T1 a25; /* position_used */
};

/* Struct for type LX_FULL_DFA */
struct S1766 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* yy_nxt */
	T0* a2; /* yy_accept */
	T6 a3; /* yyNb_rows */
	T0* a4; /* input_filename */
	T6 a5; /* characters_count */
	T6 a6; /* array_size */
	T1 a7; /* inspect_used */
	T1 a8; /* actions_separated */
	T0* a9; /* eiffel_code */
	T0* a10; /* eiffel_header */
	T1 a11; /* bol_needed */
	T1 a12; /* pre_action_used */
	T1 a13; /* post_action_used */
	T1 a14; /* pre_eof_action_used */
	T1 a15; /* post_eof_action_used */
	T1 a16; /* line_pragma */
	T0* a17; /* yy_start_conditions */
	T0* a18; /* yy_ec */
	T6 a19; /* yyNull_equiv_class */
	T6 a20; /* yyNb_rules */
	T0* a21; /* yy_rules */
	T6 a22; /* yyEnd_of_buffer */
	T1 a23; /* yyLine_used */
	T1 a24; /* yyPosition_used */
	T6 a25; /* minimum_symbol */
	T6 a26; /* maximum_symbol */
	T0* a27; /* states */
	T6 a28; /* backing_up_count */
	T0* a29; /* partitions */
	T6 a30; /* start_states_count */
	T1 a31; /* yyBacking_up */
	T0* a32; /* yy_eof_rules */
};

/* Struct for type SPECIAL [LX_WILDCARD] */
struct S1768 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_WILDCARD] */
struct S1771 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1772 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1774 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
struct S1776 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
struct S1777 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
struct S1780 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
struct S1781 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type CHARACTER_PROPERTY */
struct S1782 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [ET_GROUP] */
struct S1783 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]], [attached] PREDICATE [[attached] TUPLE [ET_CLASS]]] */
struct S1784 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type AP_OPTION_COMPARATOR */
struct S1785 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_QUICK_SORTER [AP_OPTION] */
struct S1786 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_DYNAMIC_EQUALITY_EXPRESSION */
struct S1793 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* static_equality */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
};

/* Struct for type ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
struct S1794 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* static_equality */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
};

/* Struct for type detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1795 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_UNIVERSE_ERROR */
struct S1796 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* universe */
};

/* Struct for type ET_CONVERT_BUILTIN_EXPRESSION */
struct S1800 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* convert_feature */
	T0* a3; /* expression */
	T0* a4; /* type */
};

/* Struct for type ET_CONVERT_FROM_EXPRESSION */
struct S1801 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* convert_feature */
	T0* a3; /* expression */
	T0* a4; /* type */
};

/* Struct for type ET_CONVERT_TO_EXPRESSION */
struct S1802 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* convert_feature */
	T0* a3; /* expression */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
struct S1808 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1811 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1812 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [LX_RULE] */
struct S1813 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_START_CONDITIONS */
struct S1814 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_ACTION_FACTORY */
struct S1815 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type LX_SYMBOL_CLASS */
struct S1816 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T1 a4; /* sort_needed */
	T1 a5; /* negated */
	T0* a6; /* internal_cursor */
	T6 a7; /* count */
	T0* a8; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8] */
struct S1817 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* free_slot */
	T6 a10; /* last_position */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
struct S1818 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [LX_SYMBOL_CLASS] */
struct S1819 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_NFA] */
struct S1820 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type LX_NFA */
struct S1821 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* in_trail_context */
	T0* a2; /* states */
};

/* Struct for type SPECIAL [LX_NFA] */
struct S1822 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_EQUIVALENCE_CLASSES */
struct S1823 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type LX_RULE */
struct S1824 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* pattern */
	T0* a3; /* action */
	T6 a4; /* head_count */
	T6 a5; /* trail_count */
	T6 a6; /* line_count */
	T6 a7; /* column_count */
	T6 a8; /* line_nb */
	T1 a9; /* has_trail_context */
	T1 a10; /* is_useful */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8] */
struct S1825 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type LX_UNRECOGNIZED_RULE_ERROR */
struct S1826 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_MISSING_QUOTE_ERROR */
struct S1827 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_CLASS_ERROR */
struct S1828 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_ERROR */
struct S1829 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_META_ERROR */
struct S1830 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_REJECT_ERROR */
struct S1831 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
struct S1832 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_CHARACTER_OUT_OF_RANGE_ERROR */
struct S1833 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ARRAY [LX_RULE] */
struct S1834 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [LX_RULE] */
struct S1835 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_DFA_STATE */
struct S1836 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* accepted_rules */
	T0* a2; /* states */
	T0* a3; /* transitions */
	T0* a4; /* accepted_head_rules */
	T6 a5; /* code */
	T6 a6; /* id */
};

/* Struct for type DS_ARRAYED_LIST [LX_NFA_STATE] */
struct S1837 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* equality_tester */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [LX_DFA_STATE] */
struct S1838 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_SYMBOL_PARTITIONS */
struct S1839 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* symbols */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type KL_ARRAY_ROUTINES [LX_RULE] */
struct S1840 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type LX_START_CONDITION */
struct S1841 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* id */
	T1 a3; /* is_exclusive */
	T0* a4; /* patterns */
	T0* a5; /* bol_patterns */
};

/* Struct for type LX_TRANSITION_TABLE [LX_DFA_STATE] */
struct S1842 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* array_routines */
	T6 a3; /* count */
};

/* Struct for type DS_ARRAYED_LIST [LX_NFA] */
struct S1843 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_HASH_TABLE [LX_NFA, INTEGER_32] */
struct S1844 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* count */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* free_slot */
	T6 a8; /* last_position */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type LX_NFA_STATE */
struct S1845 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* in_trail_context */
	T0* a2; /* transition */
	T0* a3; /* epsilon_transition */
	T6 a4; /* id */
	T0* a5; /* accepted_rule */
};

/* Struct for type [attached] TUPLE [ET_ECF_LIBRARY] */
struct S1849 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_ECF_CLUSTER] */
struct S1852 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_ECF_CLUSTER]] */
struct S1853 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
struct S1854 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [ET_ECF_FILE_RULE] */
struct S1855 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_ECF_FILE_RULE]] */
struct S1856 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_FILE_RULES] */
struct S1857 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [ET_ECF_FILE_RULE]] */
struct S1858 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_STATE] */
struct S1859 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type detachable DS_LINKABLE [ET_PARENT_FEATURE] */
struct S1861 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type ET_AST_NULL_LEAF */
struct S1863 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
};

/* Struct for type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
struct S1864 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type SPECIAL [NATURAL_16] */
struct S1865 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T9 z2[1]; /* item */
};

/* Struct for type SPECIAL [NATURAL_32] */
struct S1866 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T10 z2[1]; /* item */
};

/* Struct for type ARRAY [NATURAL_16] */
struct S1867 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ARRAY [NATURAL_32] */
struct S1868 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1869 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1870 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1871 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_RULE] */
struct S1872 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_RULE] */
struct S1873 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_ARRAY_ROUTINES [STRING_8] */
struct S1874 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [LX_START_CONDITION] */
struct S1875 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
struct S1876 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
struct S1877 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
struct S1880 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* target */
};

/* Struct for type LX_EPSILON_TRANSITION [LX_NFA_STATE] */
struct S1882 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
};

/* Struct for type LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
struct S1884 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* label */
	T0* a2; /* target */
};

/* Struct for type ARRAY [DS_BILINKABLE [INTEGER_32]] */
struct S1885 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_BILINKABLE [INTEGER_32] */
struct S1886 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type SPECIAL [DS_BILINKABLE [INTEGER_32]] */
struct S1887 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_ACTION */
struct S1889 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* text */
};

/* Struct for type DS_BUBBLE_SORTER [LX_NFA_STATE] */
struct S1890 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type DS_BUBBLE_SORTER [LX_RULE] */
struct S1892 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type SPECIAL [LX_NFA_STATE] */
struct S1894 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
struct S1896 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
struct S1897 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [LX_DFA_STATE] */
struct S1899 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
struct S1900 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
struct S1901 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_ARRAY [LX_RULE] */
struct S1902 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ARRAY [detachable LX_DFA_STATE] */
struct S1903 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type KL_ARRAY_ROUTINES [detachable LX_DFA_STATE] */
struct S1904 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_NFA] */
struct S1905 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
struct S1907 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1908 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1909 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LACE_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1910 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LACE_DOTNET_GAC_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1911 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1912 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1913 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type DS_SHELL_SORTER [INTEGER_32] */
struct S1917 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [LX_RULE] */
struct S1918 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
struct S1921 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_ARRAY [STRING_8] */
struct S1924 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
struct S1925 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
struct S1926 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};


extern T1 GE_default1;
extern T2 GE_default2;
extern T3 GE_default3;
extern T4 GE_default4;
extern T5 GE_default5;
extern T6 GE_default6;
extern T7 GE_default7;
extern T8 GE_default8;
extern T9 GE_default9;
extern T10 GE_default10;
extern T11 GE_default11;
extern T12 GE_default12;
extern T13 GE_default13;
extern T14 GE_default14;
extern T15 GE_default15;
extern T16 GE_default16;
extern T17 GE_default17;
extern T18 GE_default18;
extern T19 GE_default19;
extern T20 GE_default20;
extern T24 GE_default24;
extern T25 GE_default25;
extern T26 GE_default26;
extern T27 GE_default27;
extern T28 GE_default28;
extern T29 GE_default29;
extern T30 GE_default30;
extern T31 GE_default31;
extern T32 GE_default32;
extern T33 GE_default33;
extern T34 GE_default34;
extern T35 GE_default35;
extern T36 GE_default36;
extern T38 GE_default38;
extern T39 GE_default39;
extern T40 GE_default40;
extern T41 GE_default41;
extern T42 GE_default42;
extern T44 GE_default44;
extern T45 GE_default45;
extern T46 GE_default46;
extern T47 GE_default47;
extern T51 GE_default51;
extern T53 GE_default53;
extern T54 GE_default54;
extern T55 GE_default55;
extern T56 GE_default56;
extern T58 GE_default58;
extern T59 GE_default59;
extern T62 GE_default62;
extern T63 GE_default63;
extern T64 GE_default64;
extern T65 GE_default65;
extern T66 GE_default66;
extern T67 GE_default67;
extern T68 GE_default68;
extern T69 GE_default69;
extern T70 GE_default70;
extern T71 GE_default71;
extern T72 GE_default72;
extern T73 GE_default73;
extern T76 GE_default76;
extern T77 GE_default77;
extern T78 GE_default78;
extern T79 GE_default79;
extern T80 GE_default80;
extern T81 GE_default81;
extern T82 GE_default82;
extern T83 GE_default83;
extern T85 GE_default85;
extern T87 GE_default87;
extern T88 GE_default88;
extern T89 GE_default89;
extern T91 GE_default91;
extern T93 GE_default93;
extern T95 GE_default95;
extern T96 GE_default96;
extern T97 GE_default97;
extern T98 GE_default98;
extern T99 GE_default99;
extern T100 GE_default100;
extern T101 GE_default101;
extern T104 GE_default104;
extern T105 GE_default105;
extern T106 GE_default106;
extern T107 GE_default107;
extern T108 GE_default108;
extern T109 GE_default109;
extern T110 GE_default110;
extern T111 GE_default111;
extern T112 GE_default112;
extern T113 GE_default113;
extern T114 GE_default114;
extern T115 GE_default115;
extern T116 GE_default116;
extern T117 GE_default117;
extern T118 GE_default118;
extern T119 GE_default119;
extern T120 GE_default120;
extern T121 GE_default121;
extern T122 GE_default122;
extern T123 GE_default123;
extern T124 GE_default124;
extern T125 GE_default125;
extern T127 GE_default127;
extern T129 GE_default129;
extern T130 GE_default130;
extern T131 GE_default131;
extern T132 GE_default132;
extern T133 GE_default133;
extern T134 GE_default134;
extern T135 GE_default135;
extern T136 GE_default136;
extern T137 GE_default137;
extern T139 GE_default139;
extern T140 GE_default140;
extern T141 GE_default141;
extern T142 GE_default142;
extern T143 GE_default143;
extern T144 GE_default144;
extern T145 GE_default145;
extern T146 GE_default146;
extern T147 GE_default147;
extern T150 GE_default150;
extern T153 GE_default153;
extern T154 GE_default154;
extern T155 GE_default155;
extern T156 GE_default156;
extern T157 GE_default157;
extern T159 GE_default159;
extern T160 GE_default160;
extern T161 GE_default161;
extern T162 GE_default162;
extern T163 GE_default163;
extern T164 GE_default164;
extern T165 GE_default165;
extern T166 GE_default166;
extern T169 GE_default169;
extern T170 GE_default170;
extern T172 GE_default172;
extern T173 GE_default173;
extern T174 GE_default174;
extern T175 GE_default175;
extern T176 GE_default176;
extern T177 GE_default177;
extern T179 GE_default179;
extern T180 GE_default180;
extern T181 GE_default181;
extern T183 GE_default183;
extern T185 GE_default185;
extern T188 GE_default188;
extern T189 GE_default189;
extern T190 GE_default190;
extern T191 GE_default191;
extern T193 GE_default193;
extern T194 GE_default194;
extern T195 GE_default195;
extern T196 GE_default196;
extern T197 GE_default197;
extern T198 GE_default198;
extern T199 GE_default199;
extern T201 GE_default201;
extern T202 GE_default202;
extern T203 GE_default203;
extern T204 GE_default204;
extern T205 GE_default205;
extern T206 GE_default206;
extern T207 GE_default207;
extern T208 GE_default208;
extern T211 GE_default211;
extern T212 GE_default212;
extern T213 GE_default213;
extern T214 GE_default214;
extern T215 GE_default215;
extern T216 GE_default216;
extern T217 GE_default217;
extern T218 GE_default218;
extern T219 GE_default219;
extern T220 GE_default220;
extern T221 GE_default221;
extern T222 GE_default222;
extern T223 GE_default223;
extern T224 GE_default224;
extern T225 GE_default225;
extern T226 GE_default226;
extern T227 GE_default227;
extern T228 GE_default228;
extern T229 GE_default229;
extern T230 GE_default230;
extern T231 GE_default231;
extern T232 GE_default232;
extern T233 GE_default233;
extern T234 GE_default234;
extern T235 GE_default235;
extern T236 GE_default236;
extern T237 GE_default237;
extern T238 GE_default238;
extern T239 GE_default239;
extern T240 GE_default240;
extern T241 GE_default241;
extern T242 GE_default242;
extern T247 GE_default247;
extern T251 GE_default251;
extern T259 GE_default259;
extern T260 GE_default260;
extern T261 GE_default261;
extern T262 GE_default262;
extern T263 GE_default263;
extern T264 GE_default264;
extern T265 GE_default265;
extern T266 GE_default266;
extern T267 GE_default267;
extern T268 GE_default268;
extern T269 GE_default269;
extern T270 GE_default270;
extern T271 GE_default271;
extern T272 GE_default272;
extern T273 GE_default273;
extern T274 GE_default274;
extern T275 GE_default275;
extern T276 GE_default276;
extern T277 GE_default277;
extern T278 GE_default278;
extern T279 GE_default279;
extern T280 GE_default280;
extern T281 GE_default281;
extern T282 GE_default282;
extern T284 GE_default284;
extern T285 GE_default285;
extern T286 GE_default286;
extern T287 GE_default287;
extern T288 GE_default288;
extern T289 GE_default289;
extern T290 GE_default290;
extern T291 GE_default291;
extern T292 GE_default292;
extern T293 GE_default293;
extern T294 GE_default294;
extern T295 GE_default295;
extern T296 GE_default296;
extern T297 GE_default297;
extern T298 GE_default298;
extern T299 GE_default299;
extern T300 GE_default300;
extern T301 GE_default301;
extern T302 GE_default302;
extern T303 GE_default303;
extern T304 GE_default304;
extern T305 GE_default305;
extern T308 GE_default308;
extern T309 GE_default309;
extern T310 GE_default310;
extern T311 GE_default311;
extern T312 GE_default312;
extern T313 GE_default313;
extern T314 GE_default314;
extern T315 GE_default315;
extern T316 GE_default316;
extern T317 GE_default317;
extern T318 GE_default318;
extern T319 GE_default319;
extern T320 GE_default320;
extern T321 GE_default321;
extern T322 GE_default322;
extern T323 GE_default323;
extern T324 GE_default324;
extern T325 GE_default325;
extern T326 GE_default326;
extern T327 GE_default327;
extern T328 GE_default328;
extern T329 GE_default329;
extern T330 GE_default330;
extern T331 GE_default331;
extern T332 GE_default332;
extern T336 GE_default336;
extern T338 GE_default338;
extern T339 GE_default339;
extern T340 GE_default340;
extern T341 GE_default341;
extern T344 GE_default344;
extern T345 GE_default345;
extern T349 GE_default349;
extern T350 GE_default350;
extern T354 GE_default354;
extern T355 GE_default355;
extern T356 GE_default356;
extern T357 GE_default357;
extern T361 GE_default361;
extern T368 GE_default368;
extern T369 GE_default369;
extern T370 GE_default370;
extern T371 GE_default371;
extern T372 GE_default372;
extern T373 GE_default373;
extern T374 GE_default374;
extern T375 GE_default375;
extern T378 GE_default378;
extern T380 GE_default380;
extern T382 GE_default382;
extern T383 GE_default383;
extern T384 GE_default384;
extern T386 GE_default386;
extern T387 GE_default387;
extern T389 GE_default389;
extern T390 GE_default390;
extern T391 GE_default391;
extern T392 GE_default392;
extern T393 GE_default393;
extern T394 GE_default394;
extern T396 GE_default396;
extern T398 GE_default398;
extern T399 GE_default399;
extern T400 GE_default400;
extern T401 GE_default401;
extern T402 GE_default402;
extern T403 GE_default403;
extern T404 GE_default404;
extern T405 GE_default405;
extern T406 GE_default406;
extern T407 GE_default407;
extern T408 GE_default408;
extern T409 GE_default409;
extern T410 GE_default410;
extern T411 GE_default411;
extern T412 GE_default412;
extern T413 GE_default413;
extern T414 GE_default414;
extern T416 GE_default416;
extern T418 GE_default418;
extern T420 GE_default420;
extern T421 GE_default421;
extern T422 GE_default422;
extern T423 GE_default423;
extern T425 GE_default425;
extern T426 GE_default426;
extern T427 GE_default427;
extern T429 GE_default429;
extern T430 GE_default430;
extern T431 GE_default431;
extern T433 GE_default433;
extern T435 GE_default435;
extern T436 GE_default436;
extern T437 GE_default437;
extern T438 GE_default438;
extern T439 GE_default439;
extern T441 GE_default441;
extern T443 GE_default443;
extern T444 GE_default444;
extern T446 GE_default446;
extern T447 GE_default447;
extern T448 GE_default448;
extern T449 GE_default449;
extern T450 GE_default450;
extern T451 GE_default451;
extern T452 GE_default452;
extern T454 GE_default454;
extern T455 GE_default455;
extern T456 GE_default456;
extern T457 GE_default457;
extern T458 GE_default458;
extern T459 GE_default459;
extern T460 GE_default460;
extern T462 GE_default462;
extern T463 GE_default463;
extern T464 GE_default464;
extern T465 GE_default465;
extern T466 GE_default466;
extern T467 GE_default467;
extern T468 GE_default468;
extern T469 GE_default469;
extern T470 GE_default470;
extern T471 GE_default471;
extern T472 GE_default472;
extern T473 GE_default473;
extern T474 GE_default474;
extern T475 GE_default475;
extern T476 GE_default476;
extern T477 GE_default477;
extern T478 GE_default478;
extern T479 GE_default479;
extern T481 GE_default481;
extern T482 GE_default482;
extern T483 GE_default483;
extern T484 GE_default484;
extern T485 GE_default485;
extern T486 GE_default486;
extern T487 GE_default487;
extern T488 GE_default488;
extern T489 GE_default489;
extern T490 GE_default490;
extern T491 GE_default491;
extern T492 GE_default492;
extern T493 GE_default493;
extern T494 GE_default494;
extern T495 GE_default495;
extern T496 GE_default496;
extern T497 GE_default497;
extern T498 GE_default498;
extern T499 GE_default499;
extern T500 GE_default500;
extern T502 GE_default502;
extern T503 GE_default503;
extern T504 GE_default504;
extern T505 GE_default505;
extern T506 GE_default506;
extern T507 GE_default507;
extern T508 GE_default508;
extern T509 GE_default509;
extern T510 GE_default510;
extern T511 GE_default511;
extern T514 GE_default514;
extern T515 GE_default515;
extern T516 GE_default516;
extern T517 GE_default517;
extern T520 GE_default520;
extern T524 GE_default524;
extern T525 GE_default525;
extern T526 GE_default526;
extern T529 GE_default529;
extern T530 GE_default530;
extern T531 GE_default531;
extern T532 GE_default532;
extern T533 GE_default533;
extern T535 GE_default535;
extern T536 GE_default536;
extern T539 GE_default539;
extern T540 GE_default540;
extern T541 GE_default541;
extern T542 GE_default542;
extern T544 GE_default544;
extern T546 GE_default546;
extern T547 GE_default547;
extern T548 GE_default548;
extern T549 GE_default549;
extern T551 GE_default551;
extern T552 GE_default552;
extern T553 GE_default553;
extern T554 GE_default554;
extern T555 GE_default555;
extern T556 GE_default556;
extern T557 GE_default557;
extern T558 GE_default558;
extern T559 GE_default559;
extern T560 GE_default560;
extern T561 GE_default561;
extern T562 GE_default562;
extern T563 GE_default563;
extern T564 GE_default564;
extern T565 GE_default565;
extern T571 GE_default571;
extern T572 GE_default572;
extern T573 GE_default573;
extern T574 GE_default574;
extern T575 GE_default575;
extern T577 GE_default577;
extern T578 GE_default578;
extern T579 GE_default579;
extern T581 GE_default581;
extern T583 GE_default583;
extern T584 GE_default584;
extern T585 GE_default585;
extern T586 GE_default586;
extern T587 GE_default587;
extern T588 GE_default588;
extern T589 GE_default589;
extern T590 GE_default590;
extern T591 GE_default591;
extern T592 GE_default592;
extern T593 GE_default593;
extern T594 GE_default594;
extern T595 GE_default595;
extern T596 GE_default596;
extern T597 GE_default597;
extern T598 GE_default598;
extern T599 GE_default599;
extern T600 GE_default600;
extern T601 GE_default601;
extern T602 GE_default602;
extern T603 GE_default603;
extern T604 GE_default604;
extern T605 GE_default605;
extern T606 GE_default606;
extern T607 GE_default607;
extern T608 GE_default608;
extern T611 GE_default611;
extern T612 GE_default612;
extern T614 GE_default614;
extern T615 GE_default615;
extern T616 GE_default616;
extern T617 GE_default617;
extern T618 GE_default618;
extern T621 GE_default621;
extern T622 GE_default622;
extern T625 GE_default625;
extern T626 GE_default626;
extern T627 GE_default627;
extern T628 GE_default628;
extern T629 GE_default629;
extern T630 GE_default630;
extern T631 GE_default631;
extern T632 GE_default632;
extern T634 GE_default634;
extern T635 GE_default635;
extern T637 GE_default637;
extern T640 GE_default640;
extern T641 GE_default641;
extern T642 GE_default642;
extern T643 GE_default643;
extern T644 GE_default644;
extern T645 GE_default645;
extern T646 GE_default646;
extern T647 GE_default647;
extern T650 GE_default650;
extern T654 GE_default654;
extern T655 GE_default655;
extern T657 GE_default657;
extern T658 GE_default658;
extern T659 GE_default659;
extern T661 GE_default661;
extern T662 GE_default662;
extern T663 GE_default663;
extern T664 GE_default664;
extern T665 GE_default665;
extern T666 GE_default666;
extern T667 GE_default667;
extern T668 GE_default668;
extern T669 GE_default669;
extern T670 GE_default670;
extern T671 GE_default671;
extern T672 GE_default672;
extern T673 GE_default673;
extern T674 GE_default674;
extern T675 GE_default675;
extern T676 GE_default676;
extern T677 GE_default677;
extern T678 GE_default678;
extern T679 GE_default679;
extern T680 GE_default680;
extern T681 GE_default681;
extern T682 GE_default682;
extern T683 GE_default683;
extern T684 GE_default684;
extern T685 GE_default685;
extern T687 GE_default687;
extern T688 GE_default688;
extern T690 GE_default690;
extern T691 GE_default691;
extern T693 GE_default693;
extern T694 GE_default694;
extern T695 GE_default695;
extern T696 GE_default696;
extern T697 GE_default697;
extern T698 GE_default698;
extern T699 GE_default699;
extern T701 GE_default701;
extern T702 GE_default702;
extern T703 GE_default703;
extern T704 GE_default704;
extern T705 GE_default705;
extern T706 GE_default706;
extern T707 GE_default707;
extern T709 GE_default709;
extern T710 GE_default710;
extern T711 GE_default711;
extern T712 GE_default712;
extern T713 GE_default713;
extern T714 GE_default714;
extern T715 GE_default715;
extern T716 GE_default716;
extern T717 GE_default717;
extern T718 GE_default718;
extern T719 GE_default719;
extern T720 GE_default720;
extern T721 GE_default721;
extern T722 GE_default722;
extern T723 GE_default723;
extern T724 GE_default724;
extern T725 GE_default725;
extern T726 GE_default726;
extern T727 GE_default727;
extern T728 GE_default728;
extern T729 GE_default729;
extern T730 GE_default730;
extern T731 GE_default731;
extern T732 GE_default732;
extern T733 GE_default733;
extern T734 GE_default734;
extern T735 GE_default735;
extern T736 GE_default736;
extern T737 GE_default737;
extern T738 GE_default738;
extern T739 GE_default739;
extern T740 GE_default740;
extern T741 GE_default741;
extern T743 GE_default743;
extern T744 GE_default744;
extern T745 GE_default745;
extern T746 GE_default746;
extern T747 GE_default747;
extern T748 GE_default748;
extern T749 GE_default749;
extern T750 GE_default750;
extern T751 GE_default751;
extern T752 GE_default752;
extern T754 GE_default754;
extern T755 GE_default755;
extern T756 GE_default756;
extern T757 GE_default757;
extern T758 GE_default758;
extern T759 GE_default759;
extern T760 GE_default760;
extern T761 GE_default761;
extern T762 GE_default762;
extern T763 GE_default763;
extern T764 GE_default764;
extern T765 GE_default765;
extern T766 GE_default766;
extern T768 GE_default768;
extern T769 GE_default769;
extern T771 GE_default771;
extern T772 GE_default772;
extern T774 GE_default774;
extern T775 GE_default775;
extern T776 GE_default776;
extern T777 GE_default777;
extern T778 GE_default778;
extern T779 GE_default779;
extern T780 GE_default780;
extern T781 GE_default781;
extern T782 GE_default782;
extern T783 GE_default783;
extern T784 GE_default784;
extern T785 GE_default785;
extern T786 GE_default786;
extern T787 GE_default787;
extern T789 GE_default789;
extern T790 GE_default790;
extern T791 GE_default791;
extern T792 GE_default792;
extern T794 GE_default794;
extern T795 GE_default795;
extern T796 GE_default796;
extern T797 GE_default797;
extern T798 GE_default798;
extern T799 GE_default799;
extern T800 GE_default800;
extern T801 GE_default801;
extern T803 GE_default803;
extern T804 GE_default804;
extern T806 GE_default806;
extern T807 GE_default807;
extern T809 GE_default809;
extern T810 GE_default810;
extern T811 GE_default811;
extern T812 GE_default812;
extern T813 GE_default813;
extern T814 GE_default814;
extern T815 GE_default815;
extern T816 GE_default816;
extern T817 GE_default817;
extern T818 GE_default818;
extern T819 GE_default819;
extern T820 GE_default820;
extern T821 GE_default821;
extern T822 GE_default822;
extern T823 GE_default823;
extern T824 GE_default824;
extern T825 GE_default825;
extern T826 GE_default826;
extern T827 GE_default827;
extern T828 GE_default828;
extern T829 GE_default829;
extern T830 GE_default830;
extern T831 GE_default831;
extern T832 GE_default832;
extern T833 GE_default833;
extern T834 GE_default834;
extern T835 GE_default835;
extern T836 GE_default836;
extern T838 GE_default838;
extern T839 GE_default839;
extern T840 GE_default840;
extern T841 GE_default841;
extern T842 GE_default842;
extern T843 GE_default843;
extern T844 GE_default844;
extern T845 GE_default845;
extern T846 GE_default846;
extern T847 GE_default847;
extern T849 GE_default849;
extern T850 GE_default850;
extern T851 GE_default851;
extern T852 GE_default852;
extern T853 GE_default853;
extern T854 GE_default854;
extern T855 GE_default855;
extern T856 GE_default856;
extern T857 GE_default857;
extern T858 GE_default858;
extern T859 GE_default859;
extern T860 GE_default860;
extern T861 GE_default861;
extern T863 GE_default863;
extern T864 GE_default864;
extern T865 GE_default865;
extern T866 GE_default866;
extern T868 GE_default868;
extern T869 GE_default869;
extern T870 GE_default870;
extern T871 GE_default871;
extern T872 GE_default872;
extern T873 GE_default873;
extern T874 GE_default874;
extern T876 GE_default876;
extern T877 GE_default877;
extern T878 GE_default878;
extern T879 GE_default879;
extern T880 GE_default880;
extern T881 GE_default881;
extern T882 GE_default882;
extern T883 GE_default883;
extern T884 GE_default884;
extern T885 GE_default885;
extern T886 GE_default886;
extern T887 GE_default887;
extern T888 GE_default888;
extern T890 GE_default890;
extern T891 GE_default891;
extern T893 GE_default893;
extern T894 GE_default894;
extern T896 GE_default896;
extern T897 GE_default897;
extern T898 GE_default898;
extern T899 GE_default899;
extern T900 GE_default900;
extern T902 GE_default902;
extern T903 GE_default903;
extern T904 GE_default904;
extern T905 GE_default905;
extern T906 GE_default906;
extern T908 GE_default908;
extern T909 GE_default909;
extern T910 GE_default910;
extern T911 GE_default911;
extern T912 GE_default912;
extern T913 GE_default913;
extern T914 GE_default914;
extern T916 GE_default916;
extern T917 GE_default917;
extern T918 GE_default918;
extern T919 GE_default919;
extern T920 GE_default920;
extern T922 GE_default922;
extern T923 GE_default923;
extern T924 GE_default924;
extern T925 GE_default925;
extern T926 GE_default926;
extern T927 GE_default927;
extern T928 GE_default928;
extern T929 GE_default929;
extern T930 GE_default930;
extern T931 GE_default931;
extern T933 GE_default933;
extern T934 GE_default934;
extern T935 GE_default935;
extern T936 GE_default936;
extern T937 GE_default937;
extern T938 GE_default938;
extern T939 GE_default939;
extern T941 GE_default941;
extern T942 GE_default942;
extern T943 GE_default943;
extern T944 GE_default944;
extern T945 GE_default945;
extern T946 GE_default946;
extern T947 GE_default947;
extern T948 GE_default948;
extern T949 GE_default949;
extern T950 GE_default950;
extern T951 GE_default951;
extern T952 GE_default952;
extern T953 GE_default953;
extern T954 GE_default954;
extern T955 GE_default955;
extern T956 GE_default956;
extern T957 GE_default957;
extern T958 GE_default958;
extern T959 GE_default959;
extern T960 GE_default960;
extern T961 GE_default961;
extern T963 GE_default963;
extern T964 GE_default964;
extern T965 GE_default965;
extern T966 GE_default966;
extern T968 GE_default968;
extern T969 GE_default969;
extern T970 GE_default970;
extern T971 GE_default971;
extern T972 GE_default972;
extern T973 GE_default973;
extern T974 GE_default974;
extern T975 GE_default975;
extern T976 GE_default976;
extern T977 GE_default977;
extern T978 GE_default978;
extern T980 GE_default980;
extern T981 GE_default981;
extern T983 GE_default983;
extern T984 GE_default984;
extern T985 GE_default985;
extern T986 GE_default986;
extern T987 GE_default987;
extern T988 GE_default988;
extern T989 GE_default989;
extern T990 GE_default990;
extern T991 GE_default991;
extern T992 GE_default992;
extern T993 GE_default993;
extern T994 GE_default994;
extern T995 GE_default995;
extern T996 GE_default996;
extern T997 GE_default997;
extern T998 GE_default998;
extern T999 GE_default999;
extern T1000 GE_default1000;
extern T1002 GE_default1002;
extern T1003 GE_default1003;
extern T1005 GE_default1005;
extern T1006 GE_default1006;
extern T1007 GE_default1007;
extern T1008 GE_default1008;
extern T1009 GE_default1009;
extern T1010 GE_default1010;
extern T1011 GE_default1011;
extern T1012 GE_default1012;
extern T1013 GE_default1013;
extern T1014 GE_default1014;
extern T1015 GE_default1015;
extern T1016 GE_default1016;
extern T1017 GE_default1017;
extern T1018 GE_default1018;
extern T1019 GE_default1019;
extern T1020 GE_default1020;
extern T1021 GE_default1021;
extern T1023 GE_default1023;
extern T1024 GE_default1024;
extern T1025 GE_default1025;
extern T1026 GE_default1026;
extern T1027 GE_default1027;
extern T1028 GE_default1028;
extern T1029 GE_default1029;
extern T1031 GE_default1031;
extern T1032 GE_default1032;
extern T1034 GE_default1034;
extern T1035 GE_default1035;
extern T1036 GE_default1036;
extern T1037 GE_default1037;
extern T1039 GE_default1039;
extern T1040 GE_default1040;
extern T1041 GE_default1041;
extern T1042 GE_default1042;
extern T1043 GE_default1043;
extern T1045 GE_default1045;
extern T1046 GE_default1046;
extern T1047 GE_default1047;
extern T1048 GE_default1048;
extern T1049 GE_default1049;
extern T1050 GE_default1050;
extern T1051 GE_default1051;
extern T1052 GE_default1052;
extern T1053 GE_default1053;
extern T1054 GE_default1054;
extern T1055 GE_default1055;
extern T1056 GE_default1056;
extern T1058 GE_default1058;
extern T1059 GE_default1059;
extern T1060 GE_default1060;
extern T1061 GE_default1061;
extern T1063 GE_default1063;
extern T1064 GE_default1064;
extern T1065 GE_default1065;
extern T1066 GE_default1066;
extern T1068 GE_default1068;
extern T1069 GE_default1069;
extern T1071 GE_default1071;
extern T1072 GE_default1072;
extern T1074 GE_default1074;
extern T1075 GE_default1075;
extern T1076 GE_default1076;
extern T1077 GE_default1077;
extern T1081 GE_default1081;
extern T1082 GE_default1082;
extern T1083 GE_default1083;
extern T1085 GE_default1085;
extern T1086 GE_default1086;
extern T1087 GE_default1087;
extern T1088 GE_default1088;
extern T1089 GE_default1089;
extern T1092 GE_default1092;
extern T1094 GE_default1094;
extern T1095 GE_default1095;
extern T1096 GE_default1096;
extern T1097 GE_default1097;
extern T1098 GE_default1098;
extern T1099 GE_default1099;
extern T1100 GE_default1100;
extern T1101 GE_default1101;
extern T1102 GE_default1102;
extern T1103 GE_default1103;
extern T1104 GE_default1104;
extern T1105 GE_default1105;
extern T1106 GE_default1106;
extern T1107 GE_default1107;
extern T1108 GE_default1108;
extern T1111 GE_default1111;
extern T1112 GE_default1112;
extern T1113 GE_default1113;
extern T1114 GE_default1114;
extern T1115 GE_default1115;
extern T1118 GE_default1118;
extern T1119 GE_default1119;
extern T1120 GE_default1120;
extern T1122 GE_default1122;
extern T1123 GE_default1123;
extern T1124 GE_default1124;
extern T1125 GE_default1125;
extern T1126 GE_default1126;
extern T1127 GE_default1127;
extern T1129 GE_default1129;
extern T1130 GE_default1130;
extern T1131 GE_default1131;
extern T1133 GE_default1133;
extern T1134 GE_default1134;
extern T1135 GE_default1135;
extern T1136 GE_default1136;
extern T1137 GE_default1137;
extern T1138 GE_default1138;
extern T1139 GE_default1139;
extern T1140 GE_default1140;
extern T1141 GE_default1141;
extern T1142 GE_default1142;
extern T1143 GE_default1143;
extern T1144 GE_default1144;
extern T1147 GE_default1147;
extern T1148 GE_default1148;
extern T1149 GE_default1149;
extern T1150 GE_default1150;
extern T1151 GE_default1151;
extern T1152 GE_default1152;
extern T1154 GE_default1154;
extern T1155 GE_default1155;
extern T1156 GE_default1156;
extern T1157 GE_default1157;
extern T1158 GE_default1158;
extern T1159 GE_default1159;
extern T1160 GE_default1160;
extern T1161 GE_default1161;
extern T1162 GE_default1162;
extern T1163 GE_default1163;
extern T1164 GE_default1164;
extern T1165 GE_default1165;
extern T1166 GE_default1166;
extern T1167 GE_default1167;
extern T1168 GE_default1168;
extern T1170 GE_default1170;
extern T1171 GE_default1171;
extern T1172 GE_default1172;
extern T1173 GE_default1173;
extern T1174 GE_default1174;
extern T1176 GE_default1176;
extern T1177 GE_default1177;
extern T1178 GE_default1178;
extern T1179 GE_default1179;
extern T1180 GE_default1180;
extern T1181 GE_default1181;
extern T1182 GE_default1182;
extern T1184 GE_default1184;
extern T1185 GE_default1185;
extern T1186 GE_default1186;
extern T1187 GE_default1187;
extern T1191 GE_default1191;
extern T1192 GE_default1192;
extern T1194 GE_default1194;
extern T1195 GE_default1195;
extern T1196 GE_default1196;
extern T1198 GE_default1198;
extern T1202 GE_default1202;
extern T1203 GE_default1203;
extern T1204 GE_default1204;
extern T1205 GE_default1205;
extern T1206 GE_default1206;
extern T1207 GE_default1207;
extern T1211 GE_default1211;
extern T1214 GE_default1214;
extern T1215 GE_default1215;
extern T1216 GE_default1216;
extern T1217 GE_default1217;
extern T1218 GE_default1218;
extern T1221 GE_default1221;
extern T1222 GE_default1222;
extern T1223 GE_default1223;
extern T1224 GE_default1224;
extern T1225 GE_default1225;
extern T1226 GE_default1226;
extern T1227 GE_default1227;
extern T1228 GE_default1228;
extern T1229 GE_default1229;
extern T1230 GE_default1230;
extern T1231 GE_default1231;
extern T1232 GE_default1232;
extern T1234 GE_default1234;
extern T1235 GE_default1235;
extern T1236 GE_default1236;
extern T1237 GE_default1237;
extern T1239 GE_default1239;
extern T1240 GE_default1240;
extern T1241 GE_default1241;
extern T1242 GE_default1242;
extern T1243 GE_default1243;
extern T1244 GE_default1244;
extern T1245 GE_default1245;
extern T1246 GE_default1246;
extern T1247 GE_default1247;
extern T1248 GE_default1248;
extern T1250 GE_default1250;
extern T1251 GE_default1251;
extern T1253 GE_default1253;
extern T1254 GE_default1254;
extern T1255 GE_default1255;
extern T1257 GE_default1257;
extern T1258 GE_default1258;
extern T1259 GE_default1259;
extern T1260 GE_default1260;
extern T1261 GE_default1261;
extern T1262 GE_default1262;
extern T1263 GE_default1263;
extern T1266 GE_default1266;
extern T1268 GE_default1268;
extern T1269 GE_default1269;
extern T1270 GE_default1270;
extern T1271 GE_default1271;
extern T1272 GE_default1272;
extern T1273 GE_default1273;
extern T1274 GE_default1274;
extern T1275 GE_default1275;
extern T1276 GE_default1276;
extern T1277 GE_default1277;
extern T1278 GE_default1278;
extern T1279 GE_default1279;
extern T1281 GE_default1281;
extern T1282 GE_default1282;
extern T1283 GE_default1283;
extern T1284 GE_default1284;
extern T1285 GE_default1285;
extern T1286 GE_default1286;
extern T1287 GE_default1287;
extern T1288 GE_default1288;
extern T1289 GE_default1289;
extern T1290 GE_default1290;
extern T1291 GE_default1291;
extern T1292 GE_default1292;
extern T1293 GE_default1293;
extern T1294 GE_default1294;
extern T1295 GE_default1295;
extern T1296 GE_default1296;
extern T1297 GE_default1297;
extern T1298 GE_default1298;
extern T1299 GE_default1299;
extern T1300 GE_default1300;
extern T1301 GE_default1301;
extern T1302 GE_default1302;
extern T1304 GE_default1304;
extern T1305 GE_default1305;
extern T1306 GE_default1306;
extern T1307 GE_default1307;
extern T1309 GE_default1309;
extern T1310 GE_default1310;
extern T1316 GE_default1316;
extern T1317 GE_default1317;
extern T1319 GE_default1319;
extern T1320 GE_default1320;
extern T1321 GE_default1321;
extern T1322 GE_default1322;
extern T1323 GE_default1323;
extern T1324 GE_default1324;
extern T1325 GE_default1325;
extern T1326 GE_default1326;
extern T1327 GE_default1327;
extern T1328 GE_default1328;
extern T1329 GE_default1329;
extern T1331 GE_default1331;
extern T1333 GE_default1333;
extern T1334 GE_default1334;
extern T1335 GE_default1335;
extern T1337 GE_default1337;
extern T1339 GE_default1339;
extern T1340 GE_default1340;
extern T1341 GE_default1341;
extern T1342 GE_default1342;
extern T1344 GE_default1344;
extern T1345 GE_default1345;
extern T1347 GE_default1347;
extern T1348 GE_default1348;
extern T1349 GE_default1349;
extern T1350 GE_default1350;
extern T1351 GE_default1351;
extern T1352 GE_default1352;
extern T1353 GE_default1353;
extern T1354 GE_default1354;
extern T1355 GE_default1355;
extern T1356 GE_default1356;
extern T1358 GE_default1358;
extern T1359 GE_default1359;
extern T1361 GE_default1361;
extern T1362 GE_default1362;
extern T1363 GE_default1363;
extern T1364 GE_default1364;
extern T1365 GE_default1365;
extern T1366 GE_default1366;
extern T1367 GE_default1367;
extern T1368 GE_default1368;
extern T1369 GE_default1369;
extern T1370 GE_default1370;
extern T1373 GE_default1373;
extern T1374 GE_default1374;
extern T1375 GE_default1375;
extern T1376 GE_default1376;
extern T1377 GE_default1377;
extern T1378 GE_default1378;
extern T1379 GE_default1379;
extern T1380 GE_default1380;
extern T1381 GE_default1381;
extern T1382 GE_default1382;
extern T1383 GE_default1383;
extern T1384 GE_default1384;
extern T1385 GE_default1385;
extern T1386 GE_default1386;
extern T1387 GE_default1387;
extern T1388 GE_default1388;
extern T1389 GE_default1389;
extern T1390 GE_default1390;
extern T1391 GE_default1391;
extern T1392 GE_default1392;
extern T1393 GE_default1393;
extern T1394 GE_default1394;
extern T1395 GE_default1395;
extern T1396 GE_default1396;
extern T1397 GE_default1397;
extern T1398 GE_default1398;
extern T1399 GE_default1399;
extern T1400 GE_default1400;
extern T1401 GE_default1401;
extern T1402 GE_default1402;
extern T1403 GE_default1403;
extern T1404 GE_default1404;
extern T1405 GE_default1405;
extern T1406 GE_default1406;
extern T1408 GE_default1408;
extern T1410 GE_default1410;
extern T1411 GE_default1411;
extern T1414 GE_default1414;
extern T1415 GE_default1415;
extern T1416 GE_default1416;
extern T1417 GE_default1417;
extern T1418 GE_default1418;
extern T1421 GE_default1421;
extern T1423 GE_default1423;
extern T1424 GE_default1424;
extern T1425 GE_default1425;
extern T1426 GE_default1426;
extern T1428 GE_default1428;
extern T1429 GE_default1429;
extern T1430 GE_default1430;
extern T1431 GE_default1431;
extern T1432 GE_default1432;
extern T1434 GE_default1434;
extern T1435 GE_default1435;
extern T1436 GE_default1436;
extern T1437 GE_default1437;
extern T1439 GE_default1439;
extern T1440 GE_default1440;
extern T1441 GE_default1441;
extern T1442 GE_default1442;
extern T1443 GE_default1443;
extern T1445 GE_default1445;
extern T1447 GE_default1447;
extern T1448 GE_default1448;
extern T1449 GE_default1449;
extern T1450 GE_default1450;
extern T1451 GE_default1451;
extern T1452 GE_default1452;
extern T1453 GE_default1453;
extern T1456 GE_default1456;
extern T1458 GE_default1458;
extern T1459 GE_default1459;
extern T1460 GE_default1460;
extern T1461 GE_default1461;
extern T1462 GE_default1462;
extern T1464 GE_default1464;
extern T1465 GE_default1465;
extern T1468 GE_default1468;
extern T1469 GE_default1469;
extern T1470 GE_default1470;
extern T1471 GE_default1471;
extern T1473 GE_default1473;
extern T1476 GE_default1476;
extern T1477 GE_default1477;
extern T1478 GE_default1478;
extern T1479 GE_default1479;
extern T1480 GE_default1480;
extern T1481 GE_default1481;
extern T1482 GE_default1482;
extern T1485 GE_default1485;
extern T1486 GE_default1486;
extern T1487 GE_default1487;
extern T1488 GE_default1488;
extern T1489 GE_default1489;
extern T1490 GE_default1490;
extern T1491 GE_default1491;
extern T1492 GE_default1492;
extern T1493 GE_default1493;
extern T1494 GE_default1494;
extern T1496 GE_default1496;
extern T1497 GE_default1497;
extern T1498 GE_default1498;
extern T1499 GE_default1499;
extern T1503 GE_default1503;
extern T1504 GE_default1504;
extern T1507 GE_default1507;
extern T1510 GE_default1510;
extern T1514 GE_default1514;
extern T1516 GE_default1516;
extern T1517 GE_default1517;
extern T1518 GE_default1518;
extern T1520 GE_default1520;
extern T1522 GE_default1522;
extern T1523 GE_default1523;
extern T1530 GE_default1530;
extern T1536 GE_default1536;
extern T1540 GE_default1540;
extern T1550 GE_default1550;
extern T1557 GE_default1557;
extern T1558 GE_default1558;
extern T1559 GE_default1559;
extern T1560 GE_default1560;
extern T1561 GE_default1561;
extern T1562 GE_default1562;
extern T1563 GE_default1563;
extern T1564 GE_default1564;
extern T1565 GE_default1565;
extern T1566 GE_default1566;
extern T1567 GE_default1567;
extern T1568 GE_default1568;
extern T1569 GE_default1569;
extern T1570 GE_default1570;
extern T1572 GE_default1572;
extern T1577 GE_default1577;
extern T1578 GE_default1578;
extern T1579 GE_default1579;
extern T1580 GE_default1580;
extern T1581 GE_default1581;
extern T1582 GE_default1582;
extern T1583 GE_default1583;
extern T1585 GE_default1585;
extern T1587 GE_default1587;
extern T1588 GE_default1588;
extern T1589 GE_default1589;
extern T1590 GE_default1590;
extern T1591 GE_default1591;
extern T1592 GE_default1592;
extern T1593 GE_default1593;
extern T1595 GE_default1595;
extern T1596 GE_default1596;
extern T1597 GE_default1597;
extern T1598 GE_default1598;
extern T1600 GE_default1600;
extern T1601 GE_default1601;
extern T1602 GE_default1602;
extern T1603 GE_default1603;
extern T1604 GE_default1604;
extern T1605 GE_default1605;
extern T1606 GE_default1606;
extern T1607 GE_default1607;
extern T1608 GE_default1608;
extern T1613 GE_default1613;
extern T1614 GE_default1614;
extern T1615 GE_default1615;
extern T1616 GE_default1616;
extern T1617 GE_default1617;
extern T1620 GE_default1620;
extern T1621 GE_default1621;
extern T1622 GE_default1622;
extern T1624 GE_default1624;
extern T1625 GE_default1625;
extern T1626 GE_default1626;
extern T1627 GE_default1627;
extern T1628 GE_default1628;
extern T1629 GE_default1629;
extern T1630 GE_default1630;
extern T1631 GE_default1631;
extern T1632 GE_default1632;
extern T1633 GE_default1633;
extern T1636 GE_default1636;
extern T1637 GE_default1637;
extern T1638 GE_default1638;
extern T1639 GE_default1639;
extern T1640 GE_default1640;
extern T1641 GE_default1641;
extern T1642 GE_default1642;
extern T1643 GE_default1643;
extern T1645 GE_default1645;
extern T1646 GE_default1646;
extern T1647 GE_default1647;
extern T1648 GE_default1648;
extern T1649 GE_default1649;
extern T1650 GE_default1650;
extern T1651 GE_default1651;
extern T1652 GE_default1652;
extern T1661 GE_default1661;
extern T1662 GE_default1662;
extern T1663 GE_default1663;
extern T1664 GE_default1664;
extern T1669 GE_default1669;
extern T1670 GE_default1670;
extern T1671 GE_default1671;
extern T1675 GE_default1675;
extern T1681 GE_default1681;
extern T1693 GE_default1693;
extern T1694 GE_default1694;
extern T1695 GE_default1695;
extern T1697 GE_default1697;
extern T1698 GE_default1698;
extern T1704 GE_default1704;
extern T1705 GE_default1705;
extern T1710 GE_default1710;
extern T1711 GE_default1711;
extern T1712 GE_default1712;
extern T1713 GE_default1713;
extern T1714 GE_default1714;
extern T1715 GE_default1715;
extern T1716 GE_default1716;
extern T1717 GE_default1717;
extern T1718 GE_default1718;
extern T1719 GE_default1719;
extern T1720 GE_default1720;
extern T1722 GE_default1722;
extern T1723 GE_default1723;
extern T1728 GE_default1728;
extern T1729 GE_default1729;
extern T1730 GE_default1730;
extern T1732 GE_default1732;
extern T1733 GE_default1733;
extern T1735 GE_default1735;
extern T1736 GE_default1736;
extern T1737 GE_default1737;
extern T1738 GE_default1738;
extern T1739 GE_default1739;
extern T1740 GE_default1740;
extern T1741 GE_default1741;
extern T1742 GE_default1742;
extern T1743 GE_default1743;
extern T1744 GE_default1744;
extern T1745 GE_default1745;
extern T1746 GE_default1746;
extern T1747 GE_default1747;
extern T1748 GE_default1748;
extern T1749 GE_default1749;
extern T1750 GE_default1750;
extern T1751 GE_default1751;
extern T1752 GE_default1752;
extern T1753 GE_default1753;
extern T1754 GE_default1754;
extern T1755 GE_default1755;
extern T1756 GE_default1756;
extern T1757 GE_default1757;
extern T1758 GE_default1758;
extern T1759 GE_default1759;
extern T1760 GE_default1760;
extern T1761 GE_default1761;
extern T1762 GE_default1762;
extern T1763 GE_default1763;
extern T1764 GE_default1764;
extern T1765 GE_default1765;
extern T1766 GE_default1766;
extern T1768 GE_default1768;
extern T1771 GE_default1771;
extern T1772 GE_default1772;
extern T1774 GE_default1774;
extern T1776 GE_default1776;
extern T1777 GE_default1777;
extern T1780 GE_default1780;
extern T1781 GE_default1781;
extern T1782 GE_default1782;
extern T1783 GE_default1783;
extern T1784 GE_default1784;
extern T1785 GE_default1785;
extern T1786 GE_default1786;
extern T1793 GE_default1793;
extern T1794 GE_default1794;
extern T1795 GE_default1795;
extern T1796 GE_default1796;
extern T1800 GE_default1800;
extern T1801 GE_default1801;
extern T1802 GE_default1802;
extern T1808 GE_default1808;
extern T1811 GE_default1811;
extern T1812 GE_default1812;
extern T1813 GE_default1813;
extern T1814 GE_default1814;
extern T1815 GE_default1815;
extern T1816 GE_default1816;
extern T1817 GE_default1817;
extern T1818 GE_default1818;
extern T1819 GE_default1819;
extern T1820 GE_default1820;
extern T1821 GE_default1821;
extern T1822 GE_default1822;
extern T1823 GE_default1823;
extern T1824 GE_default1824;
extern T1825 GE_default1825;
extern T1826 GE_default1826;
extern T1827 GE_default1827;
extern T1828 GE_default1828;
extern T1829 GE_default1829;
extern T1830 GE_default1830;
extern T1831 GE_default1831;
extern T1832 GE_default1832;
extern T1833 GE_default1833;
extern T1834 GE_default1834;
extern T1835 GE_default1835;
extern T1836 GE_default1836;
extern T1837 GE_default1837;
extern T1838 GE_default1838;
extern T1839 GE_default1839;
extern T1840 GE_default1840;
extern T1841 GE_default1841;
extern T1842 GE_default1842;
extern T1843 GE_default1843;
extern T1844 GE_default1844;
extern T1845 GE_default1845;
extern T1849 GE_default1849;
extern T1852 GE_default1852;
extern T1853 GE_default1853;
extern T1854 GE_default1854;
extern T1855 GE_default1855;
extern T1856 GE_default1856;
extern T1857 GE_default1857;
extern T1858 GE_default1858;
extern T1859 GE_default1859;
extern T1861 GE_default1861;
extern T1863 GE_default1863;
extern T1864 GE_default1864;
extern T1865 GE_default1865;
extern T1866 GE_default1866;
extern T1867 GE_default1867;
extern T1868 GE_default1868;
extern T1869 GE_default1869;
extern T1870 GE_default1870;
extern T1871 GE_default1871;
extern T1872 GE_default1872;
extern T1873 GE_default1873;
extern T1874 GE_default1874;
extern T1875 GE_default1875;
extern T1876 GE_default1876;
extern T1877 GE_default1877;
extern T1880 GE_default1880;
extern T1882 GE_default1882;
extern T1884 GE_default1884;
extern T1885 GE_default1885;
extern T1886 GE_default1886;
extern T1887 GE_default1887;
extern T1889 GE_default1889;
extern T1890 GE_default1890;
extern T1892 GE_default1892;
extern T1894 GE_default1894;
extern T1896 GE_default1896;
extern T1897 GE_default1897;
extern T1899 GE_default1899;
extern T1900 GE_default1900;
extern T1901 GE_default1901;
extern T1902 GE_default1902;
extern T1903 GE_default1903;
extern T1904 GE_default1904;
extern T1905 GE_default1905;
extern T1907 GE_default1907;
extern T1908 GE_default1908;
extern T1909 GE_default1909;
extern T1910 GE_default1910;
extern T1911 GE_default1911;
extern T1912 GE_default1912;
extern T1913 GE_default1913;
extern T1917 GE_default1917;
extern T1918 GE_default1918;
extern T1921 GE_default1921;
extern T1924 GE_default1924;
extern T1925 GE_default1925;
extern T1926 GE_default1926;

extern T0* GE_new_str8(T6 c);
extern T0* GE_new_str32(T6 c);
extern T0* GE_new_istr32(T6 c);
/* Call to ANY.same_type */
extern T1 T22x27T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.is_equal_seed */
extern T6 T35x4730(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.default_create_seed */
extern T6 T35x4728(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.detachable_any_type */
extern T0* T35x6292(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.is_dotnet */
extern T1 T35x4723(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_type */
extern T0* T35x6291(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.array_detachable_any_type */
extern T0* T35x6299(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.array_like_current_type */
extern T0* T35x6300(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.array_any_type */
extern T0* T35x6298(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.detachable_none_type */
extern T0* T35x6324(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.copy_seed */
extern T6 T35x4729(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.iteration_cursor_forth_seed */
extern T6 T35x4736(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.iteration_cursor_after_seed */
extern T6 T35x4735(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.iterable_new_cursor_seed */
extern T6 T35x4734(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.routine_call_seed */
extern T6 T35x4732(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.character_32_type */
extern T0* T35x6304(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_clients */
extern T0* T35x6297(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.real_32_type */
extern T0* T35x6329(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.string_32_type */
extern T0* T35x6337(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.string_8_type */
extern T0* T35x6336(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.registered_feature_count */
extern T6 T35x4750(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.function_item_seed */
extern T6 T35x4733(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_parent */
extern T0* T35x6295(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.alias_transition_mode */
extern T1 T35x4764(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.scoop_mode */
extern T1 T35x4761(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.system_object_parents */
extern T0* T35x6339(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_parents */
extern T0* T35x6296(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.type_any_type */
extern T0* T35x6345(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.dispose_seed */
extern T6 T35x4731(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.console_application_mode */
extern T1 T35x4759(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.multithreaded_mode */
extern T1 T35x4760(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.exception_trace_mode */
extern T1 T35x4762(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.trace_mode */
extern T1 T35x4763(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.attachment_type_conformance_mode */
extern T1 T35x6414(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_object_pathnames */
extern T0* T35x4768(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_library_pathnames */
extern T0* T35x4769(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_include_pathnames */
extern T0* T35x4767(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_boehm_gc */
extern T1 T35x4765(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.class_count_recursive */
extern T6 T35x6288(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.universe */
extern T0* T35x9600(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.ise_exception_manager_type */
extern T0* T35x6316(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.pointer_type */
extern T0* T35x6325(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.detachable_tuple_type */
extern T0* T35x6342(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.routine_type */
extern T0* T35x6331(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.typed_pointer_any_type */
extern T0* T35x6353(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.special_any_type */
extern T0* T35x6332(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.immutable_string_32_type */
extern T0* T35x6310(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.character_8_type */
extern T0* T35x6303(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.real_64_type */
extern T0* T35x6330(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_64_type */
extern T0* T35x6322(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_32_type */
extern T0* T35x6321(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_16_type */
extern T0* T35x6320(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_8_type */
extern T0* T35x6319(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_64_type */
extern T0* T35x6315(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_32_type */
extern T0* T35x6314(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_16_type */
extern T0* T35x6313(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_8_type */
extern T0* T35x6312(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.boolean_type */
extern T0* T35x6301(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.root_creation */
extern T0* T35x4725(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.none_type */
extern T0* T35x6323(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.root_type */
extern T0* T35x4724(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.master_classes */
extern T0* T35x6264(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.system_name */
extern T0* T35x4766(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.name */
extern T0* T37x5062(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_to_string */
extern T6 T37x4822T0T6T6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* Call to KI_CHARACTER_INPUT_STREAM.is_closable */
extern T1 T37x5057(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.end_of_input */
extern T1 T37x5060(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.last_character */
extern T2 T37x5063(GE_context* ac, T0* C);
/* Call to AP_OPTION.short_form */
extern T2 T48x10195(GE_context* ac, T0* C);
/* Call to AP_OPTION.long_form */
extern T0* T48x10190(GE_context* ac, T0* C);
/* Call to AP_OPTION.description */
extern T0* T48x10188(GE_context* ac, T0* C);
/* Call to AP_OPTION.names */
extern T0* T48x10192(GE_context* ac, T0* C);
/* Call to AP_OPTION.is_hidden */
extern T1 T48x10199(GE_context* ac, T0* C);
/* Call to AP_OPTION.example */
extern T0* T48x10189(GE_context* ac, T0* C);
/* Call to AP_OPTION.name */
extern T0* T48x10191(GE_context* ac, T0* C);
/* Call to AP_OPTION.needs_parameter */
extern T1 T48x10201(GE_context* ac, T0* C);
/* Call to AP_OPTION.has_short_form */
extern T1 T48x10198(GE_context* ac, T0* C);
/* Call to AP_OPTION.allows_parameter */
extern T1 T48x10196(GE_context* ac, T0* C);
/* Call to AP_OPTION.maximum_occurrences */
extern T6 T48x10194(GE_context* ac, T0* C);
/* Call to AP_OPTION.occurrences */
extern T6 T48x10193(GE_context* ac, T0* C);
/* Call to AP_OPTION.was_found */
extern T1 T48x10203(GE_context* ac, T0* C);
/* Call to AP_OPTION.is_mandatory */
extern T1 T48x10200(GE_context* ac, T0* C);
/* Call to UT_ERROR.default_message */
extern T0* T52x6166(GE_context* ac, T0* C);
/* Call to detachable KL_EQUALITY_TESTER [STRING_8].test */
extern T1 T59x10437T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.same_base_type_with_type_marks */
extern T1 T75x9395T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.conforms_to_type */
extern T1 T75x9408T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_BASE_TYPE.is_type_reference_with_type_mark */
extern T1 T75x9377T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T75x9411T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T75x9403T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.actual_parameters */
extern T0* T75x9044(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.to_text */
extern T0* T75x9420(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.type_with_type_mark */
extern T0* T75x9368T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.base_class */
extern T0* T75x14114(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.base_type_index_of_label */
extern T6 T75x9361T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.base_type_actual */
extern T0* T75x9359T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_BASE_TYPE.shallow_base_type_with_type_mark */
extern T0* T75x9358T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_attached_with_type_mark */
extern T1 T75x9379T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.named_base_class */
extern T0* T75x14115(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.actual_parameter_count */
extern T6 T75x9052(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.index_of_label */
extern T6 T75x9049T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.is_type_detachable_with_type_mark */
extern T1 T75x9381T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T75x9412T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T75x9410T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T75x9407T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_base_class_type_with_type_marks */
extern T1 T75x9405T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.conforms_to_type_with_type_marks */
extern T1 T75x9409T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.is_type_expanded_with_type_mark */
extern T1 T75x9375T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T75x9404T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_named_class_type_with_type_marks */
extern T1 T75x9402T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.unaliased_to_text */
extern T0* T75x9422(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.shallow_named_type_with_type_mark */
extern T0* T75x9365T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.base_type_with_type_mark */
extern T0* T75x9356T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.base_type_actual_count */
extern T6 T75x9370T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.named_type_with_type_mark */
extern T0* T75x9363T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.same_named_type_with_type_marks */
extern T1 T75x9393T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.is_expanded */
extern T1 T75x9056(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.same_as_base_class */
extern T1 T75x9061(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.same_named_type */
extern T1 T75x9392T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to READABLE_STRING_GENERAL.code */
extern T10 T103x713T6(GE_context* ac, T0* C, T6 a1);
/* Call to READABLE_STRING_GENERAL.count */
extern T6 T103x751(GE_context* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.substring */
extern T0* T103x792T6T6(GE_context* ac, T0* C, T6 a1, T6 a2);
/* Call to READABLE_STRING_GENERAL.item */
extern T3 T103x714T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_POSITION.column */
extern T6 T187x7409(GE_context* ac, T0* C);
/* Call to ET_POSITION.line */
extern T6 T187x7408(GE_context* ac, T0* C);
/* Call to ET_POSITION.to_text */
extern T0* T187x7414(GE_context* ac, T0* C);
/* Call to ET_POSITION.is_null */
extern T1 T187x7410(GE_context* ac, T0* C);
/* Call to ET_ADAPTED_DOTNET_ASSEMBLY.dotnet_assembly */
extern T0* T200x9600(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T240x13992T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T240x14019T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.is_basic */
extern T1 T240x13987(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_expanded */
extern T1 T240x14590(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.base_type */
extern T0* T240x13996(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T240x13984(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T240x14020T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.base_class */
extern T0* T240x13997(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T240x14017T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T240x14018T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.queries */
extern T0* T240x14015(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.attribute_count */
extern T6 T240x14011(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.id */
extern T6 T240x14006(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_special */
extern T1 T240x13985(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_builtin_attribute */
extern T1 T240x14023T0T8T8(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* Call to ET_DYNAMIC_TYPE.meta_type */
extern T0* T240x13998(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.has_nested_reference_attributes */
extern T1 T240x14013(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.hash_code */
extern T6 T240x22(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_generic */
extern T1 T240x13983(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_alive */
extern T1 T240x13979(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.next_type */
extern T0* T240x14036(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.procedure_calls */
extern T0* T240x14026(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.query_calls */
extern T0* T240x14025(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.procedures */
extern T0* T240x14016(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.static_type */
extern T0* T240x14595(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.conforming_ancestors */
extern T0* T240x14002(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_tuple */
extern T1 T240x13986(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.has_static */
extern T1 T240x13988(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.last_leaf */
extern T0* T244x14646(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.name */
extern T0* T244x8501(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_tuple_label */
extern T1 T244x8510(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.position */
extern T0* T244x14642(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.seed */
extern T6 T244x8503(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.hash_code */
extern T6 T244x22(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.lower_name */
extern T0* T244x8502(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.same_feature_name */
extern T1 T244x7446T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.first_leaf */
extern T0* T244x14645(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.across_cursor_name */
extern T0* T244x8546(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_across_cursor */
extern T1 T244x8508(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.object_test_local_name */
extern T0* T244x8545(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_object_test_local */
extern T1 T244x8507(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.local_name */
extern T0* T244x8543(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_local */
extern T1 T244x8506(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.argument_name */
extern T0* T244x8544(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_argument */
extern T1 T244x8509(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_prefix */
extern T1 T244x8532(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_infix */
extern T1 T244x8512(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.hash_code */
extern T6 T245x22(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_exported_to */
extern T1 T245x8598T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_PROCEDURE.first_seed */
extern T6 T245x23214(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_creation_exported_to */
extern T1 T245x8600T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_PROCEDURE.arguments_count */
extern T6 T245x8597(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.arguments */
extern T0* T245x23213(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.overloaded_alias_name */
extern T0* T245x8558(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.alias_name */
extern T0* T245x8554(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.overloaded_name */
extern T0* T245x8557(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.name */
extern T0* T245x23211(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.has_seed */
extern T1 T245x23209T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_PROCEDURE.new_synonym */
extern T0* T245x8621T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.implementation_class */
extern T0* T245x8857(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.postconditions */
extern T0* T245x19378(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.preconditions */
extern T0* T245x19377(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_parenthesisable */
extern T1 T245x8591(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_frozen */
extern T1 T245x8578(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_deferred */
extern T1 T245x8579(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_attribute */
extern T1 T246x8582(GE_context* ac, T0* C);
/* Call to ET_QUERY.type */
extern T0* T246x23212(GE_context* ac, T0* C);
/* Call to ET_QUERY.lower_name */
extern T0* T246x8855(GE_context* ac, T0* C);
/* Call to ET_QUERY.hash_code */
extern T6 T246x22(GE_context* ac, T0* C);
/* Call to ET_QUERY.first_seed */
extern T6 T246x23214(GE_context* ac, T0* C);
/* Call to ET_QUERY.assigner */
extern T0* T246x8674(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_exported_to */
extern T1 T246x8598T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_QUERY.overloaded_alias_name */
extern T0* T246x8558(GE_context* ac, T0* C);
/* Call to ET_QUERY.alias_name */
extern T0* T246x8554(GE_context* ac, T0* C);
/* Call to ET_QUERY.overloaded_name */
extern T0* T246x8557(GE_context* ac, T0* C);
/* Call to ET_QUERY.name */
extern T0* T246x23211(GE_context* ac, T0* C);
/* Call to ET_QUERY.arguments */
extern T0* T246x23213(GE_context* ac, T0* C);
/* Call to ET_QUERY.arguments_count */
extern T6 T246x8597(GE_context* ac, T0* C);
/* Call to ET_QUERY.has_seed */
extern T1 T246x23209T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_QUERY.implementation_feature */
extern T0* T246x19381(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_unique_attribute */
extern T1 T246x8584(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_constant_attribute */
extern T1 T246x8583(GE_context* ac, T0* C);
/* Call to ET_QUERY.new_synonym */
extern T0* T246x8621T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.implementation_class */
extern T0* T246x8857(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_prefixable */
extern T1 T246x8589(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_infixable */
extern T1 T246x8588(GE_context* ac, T0* C);
/* Call to ET_QUERY.postconditions */
extern T0* T246x19378(GE_context* ac, T0* C);
/* Call to ET_QUERY.preconditions */
extern T0* T246x19377(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_once */
extern T1 T246x19369(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_parenthesisable */
extern T1 T246x8591(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_bracketable */
extern T1 T246x8590(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_frozen */
extern T1 T246x8578(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_deferred */
extern T1 T246x8579(GE_context* ac, T0* C);
/* Call to ET_TYPE.to_text */
extern T0* T249x9420(GE_context* ac, T0* C);
/* Call to ET_TYPE.same_base_type_with_type_marks */
extern T1 T249x9395T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.base_class */
extern T0* T249x9353T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.named_type */
extern T0* T249x9362T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_syntactical_type */
extern T1 T249x9390T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.resolved_formal_parameters */
extern T0* T249x9413T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_identifier_anchored_type */
extern T1 T249x9383(GE_context* ac, T0* C);
/* Call to ET_TYPE.depends_on_qualified_anchored_type */
extern T1 T249x9384T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_formal_types */
extern T1 T249x9385T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_anchored_type */
extern T1 T249x9382(GE_context* ac, T0* C);
/* Call to ET_TYPE.conforms_to_type */
extern T1 T249x9408T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_type */
extern T1 T249x9392T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.type_with_type_mark */
extern T0* T249x9368T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T249x9398T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T249x9401T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T249x9396T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_type_with_type_marks */
extern T1 T249x9393T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.position */
extern T0* T249x14642(GE_context* ac, T0* C);
/* Call to ET_TYPE.last_leaf */
extern T0* T249x14646(GE_context* ac, T0* C);
/* Call to ET_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T249x9400T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T249x9399T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T249x9397T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_type_with_type_marks */
extern T1 T249x9391T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.is_type_reference_with_type_mark */
extern T1 T249x9377T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T249x9411T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T249x9403T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.is_type_detachable */
extern T1 T249x9380T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_like_current */
extern T1 T249x9371(GE_context* ac, T0* C);
/* Call to ET_TYPE.shallow_named_type */
extern T0* T249x9364T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_base_type */
extern T1 T249x9373(GE_context* ac, T0* C);
/* Call to ET_TYPE.is_type_attached */
extern T1 T249x9378T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_named_type */
extern T1 T249x9372(GE_context* ac, T0* C);
/* Call to ET_TYPE.is_type_expanded */
extern T1 T249x9374T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.shallow_base_type */
extern T0* T249x9357T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.shallow_base_type_with_type_mark */
extern T0* T249x9358T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.base_type_index_of_label */
extern T6 T249x9361T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.base_type_actual */
extern T0* T249x9359T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE.is_type_attached_with_type_mark */
extern T1 T249x9379T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.base_type_with_type_mark */
extern T0* T249x9356T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.shallow_named_type_with_type_mark */
extern T0* T249x9365T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.named_type_with_type_mark */
extern T0* T249x9363T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_to_type_with_type_marks */
extern T1 T249x9409T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.is_type_expanded_with_type_mark */
extern T1 T249x9375T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.named_base_class */
extern T0* T249x9354T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_detachable_with_type_mark */
extern T1 T249x9381T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T249x9404T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_class_type_with_type_marks */
extern T1 T249x9402T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T249x9412T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T249x9410T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.base_type_actual_count */
extern T6 T249x9370T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T249x9407T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_base_class_type_with_type_marks */
extern T1 T249x9405T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.is_type_reference */
extern T1 T249x9376T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.base_type */
extern T0* T249x9355T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.type */
extern T0* T249x14641(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.root_context */
extern T0* T250x14112(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.as_nested_type_context */
extern T0* T250x14158(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.is_root_context */
extern T1 T250x14125(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_actual */
extern T0* T250x14118T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_TYPE_CONTEXT.base_type_actual_count */
extern T6 T250x14123(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_class */
extern T0* T250x14114(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.to_nested_type_context */
extern T0* T250x14159(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T250x14137(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.same_base_type_with_type_marks */
extern T1 T250x14144T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.scoop_mode */
extern T1 T250x14138(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.named_type */
extern T0* T250x14121(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T250x14130T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T250x14132T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T250x14156T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T250x14146T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T250x14152T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T250x14134T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T250x14117T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T250x14128T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T250x14157T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T250x14155T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T250x14147T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T250x14145T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_base_tuple_type_with_type_marks */
extern T1 T250x14150T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_base_class_type_with_type_marks */
extern T1 T250x14148T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.named_base_class */
extern T0* T250x14115(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T250x14122T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T250x14140T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_UNIVERSE.adapted_universe */
extern T0* T252x6278T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.shortest_path */
extern T0* T252x6279T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.full_lower_name */
extern T0* T252x6283T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_UNIVERSE.kind_name */
extern T0* T252x6285(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.master_class */
extern T0* T252x6265T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.hash_code */
extern T6 T252x22(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_32_convert_feature */
extern T0* T252x6423(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_32_type */
extern T0* T252x6304(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_8_convert_feature */
extern T0* T252x6422(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_8_type */
extern T0* T252x6303(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_64_convert_feature */
extern T0* T252x6433(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_64_type */
extern T0* T252x6330(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_32_convert_feature */
extern T0* T252x6432(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_32_type */
extern T0* T252x6329(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_64_convert_feature */
extern T0* T252x6431(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_64_type */
extern T0* T252x6322(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_32_convert_feature */
extern T0* T252x6430(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_32_type */
extern T0* T252x6321(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_16_convert_feature */
extern T0* T252x6429(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_16_type */
extern T0* T252x6320(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_8_convert_feature */
extern T0* T252x6428(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_8_type */
extern T0* T252x6319(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_64_convert_feature */
extern T0* T252x6427(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_64_type */
extern T0* T252x6315(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_32_convert_feature */
extern T0* T252x6426(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_32_type */
extern T0* T252x6314(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_16_convert_feature */
extern T0* T252x6425(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_16_type */
extern T0* T252x6313(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_8_convert_feature */
extern T0* T252x6424(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_8_type */
extern T0* T252x6312(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_32_convert_feature */
extern T0* T252x6435(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_32_type */
extern T0* T252x6337(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_8_convert_feature */
extern T0* T252x6434(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_8_type */
extern T0* T252x6336(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.has_master_class */
extern T1 T252x6259T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.relative_name */
extern T0* T252x6280T0T2(GE_context* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_UNIVERSE.attachment_type_conformance_mode */
extern T1 T252x6414(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.boolean_type */
extern T0* T252x6301(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.target_type_attachment_mode */
extern T1 T252x6416(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.implicit_attachment_type_mark */
extern T0* T252x6415(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.tuple_type */
extern T0* T252x6341(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.function_type */
extern T0* T252x6309(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.predicate_like_current_type */
extern T0* T252x6326(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.procedure_like_current_type */
extern T0* T252x6327(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_tuple_type */
extern T0* T252x6342(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.pointer_type */
extern T0* T252x6325(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.typed_pointer_like_current_type */
extern T0* T252x6354(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.array_any_type */
extern T0* T252x6298(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_like_current_type */
extern T0* T252x6352(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.tuple_like_current_type */
extern T0* T252x6343(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.any_type */
extern T0* T252x6291(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_type */
extern T0* T252x6311(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.immutable_string_32_type */
extern T0* T252x6310(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_any_type */
extern T0* T252x6292(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.iterable_detachable_any_type */
extern T0* T252x6317(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_type */
extern T0* T252x6334(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_separate_any_type */
extern T0* T252x6293(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.double_type */
extern T0* T252x6305(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_type */
extern T0* T252x6328(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_string_type */
extern T0* T252x6335(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.special_any_type */
extern T0* T252x6332(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_any_type */
extern T0* T252x6347(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.special_detachable_any_type */
extern T0* T252x6333(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.exception_manager_type */
extern T0* T252x6308(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_exception_type */
extern T0* T252x6351(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.exception_type */
extern T0* T252x6306(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_type_exception_type */
extern T0* T252x6350(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_exception_type */
extern T0* T252x6307(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_like_current_type */
extern T0* T252x6349(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.relative_lower_name */
extern T0* T252x6281T0T2(GE_context* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_UNIVERSE.unfolded_empty_tuple_actual_parameters */
extern T0* T252x6344(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.obsolete_routine_type_mode */
extern T1 T252x6417(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.system_string_type */
extern T0* T252x6340(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.current_system */
extern T0* T252x6277(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.full_name */
extern T0* T252x6282T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_UNIVERSE.classes_in_group */
extern T0* T252x6272T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.system_object_parents */
extern T0* T252x6339(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.any_parents */
extern T0* T252x6296(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.system_object_type */
extern T0* T252x6338(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_type */
extern T0* T252x6318(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.wide_character_type */
extern T0* T252x6355(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_type */
extern T0* T252x6302(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.resolved_formal_parameters_with_type */
extern T0* T253x14663T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.type */
extern T0* T253x14660(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.actual_parameter */
extern T0* T253x14659(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.position */
extern T0* T255x14642(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_detachable_mark */
extern T1 T255x9772(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_attached_mark */
extern T1 T255x9771(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_attachment_mark */
extern T1 T255x9770(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_separateness_mark */
extern T1 T255x9768(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_expanded_mark */
extern T1 T255x9766(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_expandedness_mark */
extern T1 T255x9765(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_implicit_mark */
extern T1 T255x9773(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.text */
extern T0* T255x9782(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.overridden_type_mark */
extern T0* T255x9781T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_MARK.is_separate_mark */
extern T1 T255x9769(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_reference_mark */
extern T1 T255x9767(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.last_leaf */
extern T0* T256x14646(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.count */
extern T6 T256x9745(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T256x9746T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETERS.type */
extern T0* T256x9747T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETERS.is_empty */
extern T1 T256x9751(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T256x9757T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T256x9762T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T256x9753(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.index_of_label */
extern T6 T256x9749T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T256x9754T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T256x9755T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.has_anchored_type */
extern T1 T256x9752(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.same_named_types */
extern T1 T256x9758T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T256x9759T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_ACTUAL_PARAMETERS.named_types */
extern T0* T256x9748T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.static_type */
extern T0* T258x14595(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_expanded */
extern T1 T258x14590(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_never_void */
extern T1 T258x14591(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.can_be_void */
extern T1 T258x14592(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_type */
extern T0* T258x22848T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPE_SET.count */
extern T6 T258x22851(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_expanded */
extern T1 T258x22855(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_types */
extern T0* T258x14600(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_empty */
extern T1 T258x22852(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.special_type */
extern T0* T258x22849(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_type */
extern T1 T258x22853T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXPRESSION.last_leaf */
extern T0* T302x14646(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.position */
extern T0* T302x14642(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.index */
extern T6 T302x18273(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T302x8647T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_EXPRESSION.unparenthesized_expression */
extern T0* T302x8640(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_false */
extern T1 T302x8643(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_current */
extern T1 T302x8642(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_true */
extern T1 T302x8644(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_never_void */
extern T1 T302x8641(GE_context* ac, T0* C);
/* Call to ET_FEATURE.lower_name */
extern T0* T306x8855(GE_context* ac, T0* C);
/* Call to ET_FEATURE.name */
extern T0* T306x23211(GE_context* ac, T0* C);
/* Call to ET_FEATURE.has_seed */
extern T1 T306x23209T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.arguments */
extern T0* T306x23213(GE_context* ac, T0* C);
/* Call to ET_FEATURE.version */
extern T6 T306x8563(GE_context* ac, T0* C);
/* Call to ET_FEATURE.extended_name */
extern T0* T306x8555(GE_context* ac, T0* C);
/* Call to ET_FEATURE.alias_name */
extern T0* T306x8554(GE_context* ac, T0* C);
/* Call to ET_FEATURE.clients */
extern T0* T306x8859(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_deferred */
extern T1 T306x8579(GE_context* ac, T0* C);
/* Call to ET_FEATURE.first_seed */
extern T6 T306x23214(GE_context* ac, T0* C);
/* Call to ET_FEATURE.postconditions */
extern T0* T306x19378(GE_context* ac, T0* C);
/* Call to ET_FEATURE.other_precursors */
extern T0* T306x8565(GE_context* ac, T0* C);
/* Call to ET_FEATURE.first_precursor */
extern T0* T306x8856(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_exported_to */
extern T1 T306x8598T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FEATURE.arguments_count */
extern T6 T306x8597(GE_context* ac, T0* C);
/* Call to ET_FEATURE.implementation_feature */
extern T0* T306x19381(GE_context* ac, T0* C);
/* Call to ET_FEATURE.implementation_class */
extern T0* T306x8857(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_procedure */
extern T1 T306x8586(GE_context* ac, T0* C);
/* Call to ET_FEATURE.other_seeds */
extern T0* T306x23215(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_unique_attribute */
extern T1 T306x8584(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_constant_attribute */
extern T1 T306x8583(GE_context* ac, T0* C);
/* Call to ET_FEATURE.type */
extern T0* T306x23212(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_once_per_process */
extern T1 T306x19370(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_attribute */
extern T1 T306x8582(GE_context* ac, T0* C);
/* Call to ET_FEATURE.id */
extern T6 T306x8562(GE_context* ac, T0* C);
/* Call to ET_FEATURE.hash_code */
extern T6 T306x22(GE_context* ac, T0* C);
/* Call to ET_FEATURE.preconditions */
extern T0* T306x19377(GE_context* ac, T0* C);
/* Call to ET_FEATURE.has_validity_error */
extern T1 T306x8861(GE_context* ac, T0* C);
/* Call to ET_FEATURE.validity_checked */
extern T1 T306x8860(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_frozen */
extern T1 T306x8578(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_infixable */
extern T1 T306x8588(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_prefixable */
extern T1 T306x8589(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_parenthesisable */
extern T1 T306x8591(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_bracketable */
extern T1 T306x8590(GE_context* ac, T0* C);
/* Call to ET_FEATURE.renamed_feature */
extern T0* T306x8622T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.undefined_feature */
extern T0* T306x8623T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.same_version */
extern T1 T306x8604T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.is_dotnet */
extern T1 T306x23208(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_query */
extern T1 T306x8585(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_once */
extern T1 T306x19369(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.last_leaf */
extern T0* T307x14646(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.feature_name */
extern T0* T307x22334(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.name */
extern T0* T333x18331(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.arguments */
extern T0* T333x18332(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.position */
extern T0* T333x14642(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.is_tuple_label */
extern T1 T333x18334(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.is_call_agent */
extern T1 T333x18335(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.seed */
extern T6 T334x8503(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_tuple_label */
extern T1 T334x8510(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.position */
extern T0* T334x14642(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.lower_name */
extern T0* T334x8502(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else */
extern T1 T334x8526(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_implies */
extern T1 T334x8520(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then */
extern T1 T334x8514(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.precursor_keyword */
extern T0* T334x8542(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_precursor */
extern T1 T334x8540(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.hash_code */
extern T6 T334x22(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_not */
extern T1 T334x8536(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_plus */
extern T1 T334x8534(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_minus */
extern T1 T334x8533(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_dotdot */
extern T1 T334x8531(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_xor */
extern T1 T334x8530(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_times */
extern T1 T334x8529(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_power */
extern T1 T334x8528(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_plus */
extern T1 T334x8527(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or */
extern T1 T334x8525(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_mod */
extern T1 T334x8524(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_minus */
extern T1 T334x8523(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_lt */
extern T1 T334x8522(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_le */
extern T1 T334x8521(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_gt */
extern T1 T334x8519(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_ge */
extern T1 T334x8518(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_divide */
extern T1 T334x8516(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_div */
extern T1 T334x8515(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and */
extern T1 T334x8513(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_parenthesis */
extern T1 T334x8538(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_bracket */
extern T1 T334x8537(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.same_call_name */
extern T1 T334x8541T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CALL_NAME.feature_name */
extern T0* T334x8547(GE_context* ac, T0* C);
/* Call to ET_AGENT.target */
extern T0* T337x18252(GE_context* ac, T0* C);
/* Call to ET_AGENT.arguments */
extern T0* T337x18253(GE_context* ac, T0* C);
/* Call to ET_AGENT.implicit_target_position */
extern T0* T337x18262(GE_context* ac, T0* C);
/* Call to ET_AGENT.position */
extern T0* T337x14642(GE_context* ac, T0* C);
/* Call to ET_AGENT.is_inline_agent */
extern T1 T337x18258(GE_context* ac, T0* C);
/* Call to ET_AGENT.index */
extern T6 T337x18273(GE_context* ac, T0* C);
/* Call to ET_AGENT.is_qualified_call */
extern T1 T337x18255(GE_context* ac, T0* C);
/* Call to ET_AGENT.implicit_result */
extern T0* T337x18254(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.expression */
extern T0* T338x17792(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.index */
extern T6 T338x18273(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.type */
extern T0* T338x17791(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.name */
extern T0* T338x17793(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_integer_constant */
extern T1 T343x18266(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_character_constant */
extern T1 T343x18265(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_string_constant */
extern T1 T343x18268(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_boolean_constant */
extern T1 T343x18264(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.index */
extern T6 T343x18273(GE_context* ac, T0* C);
/* Call to ET_TARGET_TYPE.type */
extern T0* T351x14674(GE_context* ac, T0* C);
/* Call to ET_TARGET_TYPE.position */
extern T0* T351x14642(GE_context* ac, T0* C);
/* Call to ET_TARGET_TYPE.last_leaf */
extern T0* T351x14646(GE_context* ac, T0* C);
/* Call to ET_ARGUMENT_OPERANDS.actual_argument */
extern T0* T358x22348T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ARGUMENT_OPERANDS.count */
extern T6 T358x22349(GE_context* ac, T0* C);
/* Call to ET_ARGUMENT_OPERANDS.is_empty */
extern T1 T358x22346(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION_ITEM.expression */
extern T0* T360x22339(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION_ITEM.position */
extern T0* T360x14642(GE_context* ac, T0* C);
/* Call to ET_OPERAND.index */
extern T6 T363x18273(GE_context* ac, T0* C);
/* Call to ET_OPERAND.is_open_operand */
extern T1 T363x18272(GE_context* ac, T0* C);
/* Call to ET_AGENT_TARGET.index */
extern T6 T364x18273(GE_context* ac, T0* C);
/* Call to ET_AGENT_TARGET.position */
extern T0* T364x14642(GE_context* ac, T0* C);
/* Call to ET_AGENT_TARGET.is_open_operand */
extern T1 T364x18272(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_open_operand */
extern T1 T366x18272(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.index */
extern T6 T366x18273(GE_context* ac, T0* C);
/* Call to ET_SYMBOL.position */
extern T0* T369x14642(GE_context* ac, T0* C);
/* Call to ET_SYMBOL.is_question_mark */
extern T1 T369x9779(GE_context* ac, T0* C);
/* Call to ET_SYMBOL.is_bang */
extern T1 T369x9780(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.actual_argument */
extern T0* T377x22348T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_ARGUMENTS.count */
extern T6 T377x22349(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.is_empty */
extern T1 T377x22346(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPES.dynamic_type */
extern T0* T379x22848T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPES.count */
extern T6 T379x22851(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPES.index_of */
extern T6 T379x22850T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPES.has_type */
extern T1 T379x22853T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.cast_type */
extern T0* T385x9430(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.position */
extern T0* T385x14642(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.index */
extern T6 T385x18273(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.value */
extern T0* T385x9428(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_validity_error */
extern T1 T397x8861(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_feature */
extern T0* T397x19381(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.postconditions */
extern T0* T397x19378(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.preconditions */
extern T0* T397x19377(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_invariants */
extern T0* T397x8866(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_invariants */
extern T1 T397x8854(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_feature */
extern T0* T397x8865(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_feature */
extern T1 T397x8853(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.first_precursor */
extern T0* T397x8856(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.locals */
extern T0* T397x19376(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.arguments */
extern T0* T397x19374(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.type */
extern T0* T397x19373(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.clients */
extern T0* T397x8859(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_class */
extern T0* T397x8857(GE_context* ac, T0* C);
/* Call to ET_ASSERTION.expression */
extern T0* T417x22342(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.relative_lower_name */
extern T0* T419x6802T0T2(GE_context* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_PRIMARY_GROUP.kind_name */
extern T0* T419x6808(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.full_lower_name */
extern T0* T419x6804T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_PRIMARY_GROUP.use_obsolete_syntax */
extern T1 T419x6792(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.current_system */
extern T0* T419x6798(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.universe */
extern T0* T419x6797(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_cluster */
extern T1 T419x6785(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.cluster */
extern T0* T419x6821(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_override */
extern T1 T419x6790(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.dotnet_assembly */
extern T0* T419x6823(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_dotnet_assembly */
extern T1 T419x6787(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_unknown */
extern T1 T419x6789(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_none */
extern T1 T419x6788(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.full_lower_name */
extern T0* T440x6804T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_CLUSTER.scm_write_mapping_recursive */
extern T0* T440x6218(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.absolute_pathname */
extern T0* T440x6807(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_abstract */
extern T1 T440x6180(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_read_only */
extern T1 T440x6791(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_override */
extern T1 T440x6790(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.dependant_constraint */
extern T0* T440x6212(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.overridden_constraint_enabled */
extern T1 T440x6213(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.scm_mapping_constraint_enabled */
extern T1 T440x6214(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.provider_constraint */
extern T0* T440x6211(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.full_pathname */
extern T0* T440x6805(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_implicit */
extern T1 T440x6188(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_preparsed */
extern T1 T440x6793(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.parent */
extern T0* T440x6824(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.universe */
extern T0* T440x6797(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.subclusters */
extern T0* T440x6210(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_valid_directory_name */
extern T1 T440x6194T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.is_recursive */
extern T1 T440x6182(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_valid_eiffel_filename */
extern T1 T440x6193T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.scm_write_mapping */
extern T0* T440x6216(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.scm_read_mapping */
extern T0* T440x6215(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_UNIVERSE.hash_code */
extern T6 T461x22(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.dotnet_assembly */
extern T0* T464x9600(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T464x6804T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_DOTNET_ASSEMBLY.hash_code */
extern T6 T464x22(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.is_consumable */
extern T1 T464x6505(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.alias_name */
extern T0* T534x22331(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.feature_name */
extern T0* T534x22330(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.same_call_name */
extern T1 T534x22333T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXTENDED_FEATURE_NAME.position */
extern T0* T534x14642(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.same_extended_feature_name */
extern T1 T534x22332T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.start_condition */
extern T6 T574x13400(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T574x31530T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.end_of_file */
extern T1 T574x13406(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.last_value */
extern T0* T574x31541(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.last_token */
extern T6 T574x13396(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.error_position */
extern T0* T574x31539(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.last_leaf */
extern T0* T652x14646(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T652x14655T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.type */
extern T0* T652x14660(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.label */
extern T0* T652x14661(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.position */
extern T0* T652x14642(GE_context* ac, T0* C);
/* Call to ET_NAMED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T653x9398T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T653x9401T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T653x9396T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_base_type_with_type_marks */
extern T1 T653x9395T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T653x9400T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T653x9399T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.to_text */
extern T0* T653x9420(GE_context* ac, T0* C);
/* Call to ET_NAMED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T653x9397T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T653x9391T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.base_type_index_of_label */
extern T6 T653x9361T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.base_type_actual */
extern T0* T653x9359T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_NAMED_TYPE.type_with_type_mark */
extern T0* T653x9368T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.has_formal_types */
extern T1 T653x9385T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.is_type_reference_with_type_mark */
extern T1 T653x9377T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.conforms_to_type_with_type_marks */
extern T1 T653x9409T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.is_type_expanded_with_type_mark */
extern T1 T653x9375T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.named_base_class */
extern T0* T653x9354T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.same_named_type_with_type_marks */
extern T1 T653x9393T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.is_type_detachable_with_type_mark */
extern T1 T653x9381T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_attached_with_type_mark */
extern T1 T653x9379T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T653x9403T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T653x9404T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_class_type_with_type_marks */
extern T1 T653x9402T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T653x9411T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T653x9412T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T653x9410T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T653x9407T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_base_class_type_with_type_marks */
extern T1 T653x9405T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.base_class */
extern T0* T653x9353T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.cast_type */
extern T0* T692x9469(GE_context* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.index */
extern T6 T692x18273(GE_context* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.value */
extern T3 T692x9468(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.cast_type */
extern T0* T700x9179(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.index */
extern T6 T700x18273(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_integer_32 */
extern T6 T700x9172(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.literal */
extern T0* T700x9168(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.sign */
extern T0* T700x9178(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.value_position */
extern T0* T700x9183(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_64 */
extern T1 T700x9198(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.value */
extern T11 T700x9169(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_binary */
extern T1 T700x9189(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T700x9188(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_64 */
extern T1 T700x9194(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_32 */
extern T1 T700x9193(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_32 */
extern T1 T700x9197(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_16 */
extern T1 T700x9196(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_8 */
extern T1 T700x9195(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_16 */
extern T1 T700x9192(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_8 */
extern T1 T700x9191(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_natural_64 */
extern T11 T700x9177(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_natural_32 */
extern T10 T700x9176(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_natural_16 */
extern T9 T700x9175(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_natural_8 */
extern T8 T700x9174(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_integer_64 */
extern T7 T700x9173(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_integer_16 */
extern T5 T700x9171(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_integer_8 */
extern T4 T700x9170(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND_ITEM.agent_actual_argument */
extern T0* T742x22351(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.same_call_name */
extern T1 T750x8541T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.same_alias_name */
extern T1 T750x16700T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.is_infix_minus */
extern T1 T750x8523(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_infix_plus */
extern T1 T750x8527(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_minus */
extern T1 T750x8533(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_plus */
extern T1 T750x8534(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.hash_code */
extern T6 T750x22(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.alias_lower_name */
extern T0* T750x16687(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefixable */
extern T1 T750x16682(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_infixable */
extern T1 T750x16683(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_infix */
extern T1 T750x8512(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_parenthesis */
extern T1 T750x8538(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_bracket */
extern T1 T750x8537(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefix */
extern T1 T750x8532(GE_context* ac, T0* C);
/* Call to ET_ASSIGNER.feature_name */
extern T0* T753x22336(GE_context* ac, T0* C);
/* Call to ET_CHOICE.upper */
extern T0* T767x22359(GE_context* ac, T0* C);
/* Call to ET_CHOICE.is_range */
extern T1 T767x22357(GE_context* ac, T0* C);
/* Call to ET_CHOICE.lower */
extern T0* T767x22358(GE_context* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.position */
extern T0* T770x14642(GE_context* ac, T0* C);
/* Call to ET_CHOICE_ITEM.choice */
extern T0* T773x22361(GE_context* ac, T0* C);
/* Call to ET_CONDITIONAL.expression */
extern T0* T788x22340(GE_context* ac, T0* C);
/* Call to ET_CONDITIONAL.position */
extern T0* T788x14642(GE_context* ac, T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.resolved_syntactical_constraint_with_type */
extern T0* T793x14669T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.type */
extern T0* T793x14667(GE_context* ac, T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.position */
extern T0* T793x14668(GE_context* ac, T0* C);
/* Call to ET_CONSTRAINT_TYPE.resolved_syntactical_constraint */
extern T0* T802x14671T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_CONVERT_FEATURE.name */
extern T0* T805x20228(GE_context* ac, T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_to */
extern T1 T805x20227(GE_context* ac, T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_from */
extern T1 T805x20226(GE_context* ac, T0* C);
/* Call to ET_EXTERNAL_ALIAS.manifest_string */
extern T0* T848x18317(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME_ITEM.feature_name */
extern T0* T862x22330(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME_ITEM.position */
extern T0* T862x14642(GE_context* ac, T0* C);
/* Call to ET_INDEXING_TERM.indexing_term_value */
extern T0* T892x22363(GE_context* ac, T0* C);
/* Call to ET_INDEXING_TERM.position */
extern T0* T892x14642(GE_context* ac, T0* C);
/* Call to ET_INDEXING_TERM.has_indexing_term_value */
extern T1 T892x22364T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INDEXING_TERM_ITEM.indexing_term */
extern T0* T895x22362(GE_context* ac, T0* C);
/* Call to ET_INDEXING_TERM_ITEM.position */
extern T0* T895x14642(GE_context* ac, T0* C);
/* Call to ET_INDEXING_TERM_ITEM.has_indexing_term_value */
extern T1 T895x22364T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.implicit_result */
extern T0* T901x18254(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.formal_arguments */
extern T0* T901x19374(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.actual_arguments */
extern T0* T901x18253(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.target */
extern T0* T901x18252(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.locals */
extern T0* T901x19376(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.type */
extern T0* T901x19373(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.to_text */
extern T0* T915x9420(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.position */
extern T0* T915x14642(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.resolved_formal_parameters */
extern T0* T915x9413T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_LIKE_TYPE.like_keyword */
extern T0* T915x8702(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.has_formal_types */
extern T1 T915x9385T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING_ITEM.manifest_string */
extern T0* T932x26027(GE_context* ac, T0* C);
/* Call to ET_TYPE_ITEM.type */
extern T0* T979x14641(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.adapted_feature */
extern T0* T1022x23220(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_adapted */
extern T1 T1022x23207(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.inherited_feature */
extern T0* T1022x23218(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_inherited */
extern T1 T1022x23205(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.redeclared_feature */
extern T0* T1022x23219(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_redeclared */
extern T1 T1022x23206(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_immediate */
extern T1 T1022x23204(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.flattened_feature */
extern T0* T1022x23216(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.immediate_feature */
extern T0* T1022x23217(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.type */
extern T0* T1093x19373(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.locals */
extern T0* T1093x19376(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.arguments */
extern T0* T1093x19374(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.across_components */
extern T0* T1093x19380(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.object_tests */
extern T0* T1093x19379(GE_context* ac, T0* C);
/* Call to ET_CLUSTERS.clusters */
extern T0* T1133x9803(GE_context* ac, T0* C);
/* Call to ET_ECF_CONDITION.is_enabled */
extern T1 T1175x22469T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.name */
extern T0* T1188x18331(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.target */
extern T0* T1188x18330(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments_count */
extern T6 T1188x19484(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.parenthesis_call */
extern T0* T1188x19487(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T1188x18332(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.index */
extern T6 T1188x18273(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_call_agent */
extern T1 T1188x18335(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_tuple_label */
extern T1 T1188x18334(GE_context* ac, T0* C);
/* Call to XM_DOCUMENT_NODE.parent */
extern T0* T1197x21008(GE_context* ac, T0* C);
/* Call to ET_ADAPTED_UNIVERSE.lower_name */
extern T0* T1212x9597(GE_context* ac, T0* C);
/* Call to ET_ADAPTED_UNIVERSE.name */
extern T0* T1212x9596(GE_context* ac, T0* C);
/* Call to ET_DECLARED_TYPE.last_leaf */
extern T0* T1252x14646(GE_context* ac, T0* C);
/* Call to ET_DECLARED_TYPE.type */
extern T0* T1252x14673(GE_context* ac, T0* C);
/* Call to ET_EXTERNAL_LANGUAGE.manifest_string */
extern T0* T1256x23357(GE_context* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.position */
extern T0* T1303x14642(GE_context* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.assertion */
extern T0* T1303x22344(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.implementation_class */
extern T0* T1416x8713(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T1416x8712(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.name */
extern T0* T1416x8648(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T1416x9381T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T1416x9379T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T1416x9352T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T1416x14641(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.first_feature */
extern T0* T1438x33621(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.replicated_feature */
extern T0* T1438x33620(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.has_replication */
extern T1 T1438x33619(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.selected_count */
extern T6 T1438x33622(GE_context* ac, T0* C);
/* Call to DS_ARRAYED_LIST [ET_CLUSTER].item */
extern T0* T1499x10384T6(GE_context* ac, T0* C, T6 a1);
/* Call to DS_ARRAYED_LIST [ET_CLUSTER].count */
extern T6 T1499x10365(GE_context* ac, T0* C);
/* Call to ET_AST_LEAF.last_position */
extern T0* T1501x14644(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.position */
extern T0* T1502x14642(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_tuple_label */
extern T1 T1502x8510(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_prefix_not */
extern T1 T1502x8536(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and_then */
extern T1 T1502x8514(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and */
extern T1 T1502x8513(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_implies */
extern T1 T1502x8520(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or_else */
extern T1 T1502x8526(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or */
extern T1 T1502x8525(GE_context* ac, T0* C);
/* Call to ET_GROUP.full_lower_name */
extern T0* T1505x6804T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_GROUP.kind_lower_name */
extern T0* T1505x6809(GE_context* ac, T0* C);
/* Call to ET_GROUP.is_cluster */
extern T1 T1505x6785(GE_context* ac, T0* C);
/* Call to ET_GROUP.absolute_pathname */
extern T0* T1505x6807(GE_context* ac, T0* C);
/* Call to ET_GROUP.universe */
extern T0* T1505x6797(GE_context* ac, T0* C);
/* Call to ET_GROUP.parent */
extern T0* T1505x6824(GE_context* ac, T0* C);
/* Call to ET_GROUP.full_name */
extern T0* T1505x6803T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_GROUP.cluster */
extern T0* T1505x6821(GE_context* ac, T0* C);
/* Call to XM_ELEMENT_NODE.parent */
extern T0* T1528x21008(GE_context* ac, T0* C);
/* Call to ET_AST_NODE.position */
extern T0* T1555x14642(GE_context* ac, T0* C);
/* Call to ET_FREE_NAME.operator_name */
extern T0* T1571x31911(GE_context* ac, T0* C);
/* Call to ET_FREE_NAME.hash_code */
extern T6 T1571x22(GE_context* ac, T0* C);
/* Call to ET_FREE_NAME.is_infix_freeop */
extern T1 T1571x8517(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.target */
extern T0* T1654x18330(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.name */
extern T0* T1654x18331(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_call_agent */
extern T1 T1654x18335(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_tuple_label */
extern T1 T1654x18334(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.arguments */
extern T0* T1654x18332(GE_context* ac, T0* C);
/* Call to ET_ROUTINE.implementation_feature */
extern T0* T1656x19381(GE_context* ac, T0* C);
/* Call to ET_ROUTINE.arguments */
extern T0* T1656x23213(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.implicit_result */
extern T0* T1658x18254(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.implementation_feature */
extern T0* T1659x19381(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.is_once_per_process */
extern T1 T1659x19370(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.is_once */
extern T1 T1659x19369(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.lower_name */
extern T0* T1659x8855(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.rescue_clause */
extern T0* T1659x18321(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.compound */
extern T0* T1659x18319(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.arguments */
extern T0* T1659x23213(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.locals */
extern T0* T1660x19376(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.compound */
extern T0* T1660x18319(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.is_once_per_process */
extern T1 T1660x19370(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.rescue_clause */
extern T0* T1660x18321(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL.target */
extern T0* T1674x18330(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL.name */
extern T0* T1674x18331(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.parenthesis_call */
extern T0* T1676x19487(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.name */
extern T0* T1676x18331(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.target */
extern T0* T1676x18330(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.arguments */
extern T0* T1676x18332(GE_context* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.expression */
extern T0* T1680x19364(GE_context* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.convert_feature */
extern T0* T1680x19365(GE_context* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.index */
extern T6 T1680x18273(GE_context* ac, T0* C);
/* Call to ET_QUERY_INLINE_AGENT.type */
extern T0* T1685x19373(GE_context* ac, T0* C);
/* Call to ET_QUERY_INLINE_AGENT.formal_arguments */
extern T0* T1685x19374(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T1688x19374(GE_context* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENTS.arguments */
extern T0* T1689x19483(GE_context* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENTS.name */
extern T0* T1689x19482(GE_context* ac, T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T1690x18332(GE_context* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENT_LIST.arguments */
extern T0* T1692x19483(GE_context* ac, T0* C);
/* Call to ET_LIKE_IDENTIFIER.name */
extern T0* T1700x9311(GE_context* ac, T0* C);
/* Call to ET_LIKE_IDENTIFIER.to_text */
extern T0* T1700x9420(GE_context* ac, T0* C);
/* Call to detachable LX_TRANSITION [LX_NFA_STATE].target */
extern T0* T1881x38477(GE_context* ac, T0* C);
/* Call to detachable LX_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T1881x38480T6(GE_context* ac, T0* C, T6 a1);
/* Call to EXCEPTION.set_type_name */
extern void T21x2811T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_recipient_name */
extern void T21x2807T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_description */
extern void T21x2799T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_exception_trace */
extern void T21x2813T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_throwing_exception */
extern void T21x2806T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.register_inline_constant */
extern void T35x4752T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.register_class */
extern void T35x4746T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.register_feature */
extern void T35x4749T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.set_iteration_cursor_forth_seed */
extern void T35x4745T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_iteration_cursor_after_seed */
extern void T35x4744T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_iterable_new_cursor_seed */
extern void T35x4743T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_dispose_seed */
extern void T35x4740T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_function_item_seed */
extern void T35x4742T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_routine_call_seed */
extern void T35x4741T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_is_equal_seed */
extern void T35x4739T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_copy_seed */
extern void T35x4738T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_default_create_seed */
extern void T35x4737T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.master_classes_do_recursive_until */
extern void T35x6451T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_SYSTEM.preparse_recursive */
extern void T35x6466T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.classes_do_recursive */
extern void T35x6441T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.classes_do_recursive_until */
extern void T35x6442T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to KI_CHARACTER_INPUT_STREAM.close */
extern void T37x5064(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_character */
extern void T37x5054(GE_context* ac, T0* C);
/* Call to AP_OPTION.record_occurrence */
extern void T48x10214T0(GE_context* ac, T0* C, T0* a1);
/* Call to AP_OPTION.reset */
extern void T48x10215(GE_context* ac, T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_integer */
extern void T84x20269T6(GE_context* ac, T0* C, T6 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_character */
extern void T84x20283T2(GE_context* ac, T0* C, T2 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_new_line */
extern void T84x6162(GE_context* ac, T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_string */
extern void T84x20267T0(GE_context* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.append */
extern void T84x20284T0(GE_context* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_line */
extern void T84x6161T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS_FILTER.set_next */
extern void T167x21239T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_xml_declaration */
extern void T168x21196T0T0T1(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* Call to XM_CALLBACKS.on_error */
extern void T168x21197T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start_tag_finish */
extern void T168x21202(GE_context* ac, T0* C);
/* Call to XM_CALLBACKS.on_finish */
extern void T168x21195(GE_context* ac, T0* C);
/* Call to XM_CALLBACKS.on_attribute */
extern void T168x21201T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to XM_CALLBACKS.on_end_tag */
extern void T168x21203T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_start_tag */
extern void T168x21200T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_content */
extern void T168x21204T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_processing_instruction */
extern void T168x21198T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to XM_CALLBACKS.on_comment */
extern void T168x21199T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start */
extern void T168x21194(GE_context* ac, T0* C);
/* Call to ET_ADAPTED_DOTNET_ASSEMBLY.export_classes */
extern void T200x9606T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_query_call */
extern void T240x14027T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_procedure_call */
extern void T240x14028T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_target */
extern void T240x14597T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.put_object_equality_expression */
extern void T240x14032T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_equality_expression */
extern void T240x14031T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_static */
extern void T240x13995T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_DYNAMIC_TYPE.use_all_attributes */
extern void T240x14022T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_meta_type */
extern void T240x14008T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_alive */
extern void T240x13993(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.set_attribute_position */
extern void T240x14021T0T6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* Call to ET_DYNAMIC_TYPE.set_next_type */
extern void T240x14037T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_hash_code */
extern void T240x14010T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPE.set_id */
extern void T240x14009T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE_NAME.reset */
extern void T244x8500(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.set_seed */
extern void T244x8504T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_PROCEDURE.reset_after_interface_checked */
extern void T245x8550(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.reset_after_features_flattened */
extern void T245x8549(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.reset */
extern void T245x8548(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.reset_validity_checked */
extern void T245x8864(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.set_across_components */
extern void T245x19383T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_object_tests */
extern void T245x19382T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_frozen_keyword */
extern void T245x8615T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.reset_after_interface_checked */
extern void T246x8550(GE_context* ac, T0* C);
/* Call to ET_QUERY.reset_after_features_flattened */
extern void T246x8549(GE_context* ac, T0* C);
/* Call to ET_QUERY.reset */
extern void T246x8548(GE_context* ac, T0* C);
/* Call to ET_QUERY.reset_validity_checked */
extern void T246x8864(GE_context* ac, T0* C);
/* Call to ET_QUERY.set_across_components */
extern void T246x19383T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_object_tests */
extern void T246x19382T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_frozen_keyword */
extern void T246x8615T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_to_expression */
extern void T248x6892T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_from_expression */
extern void T248x6890T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_builtin_expression */
extern void T248x6886T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_cast_expression */
extern void T248x6953T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unqualified_call_instruction */
extern void T248x7044T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_instruction */
extern void T248x7028T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_instruction */
extern void T248x7005T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_instruction */
extern void T248x6894T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bang_instruction */
extern void T248x6861T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_loop_instruction */
extern void T248x6976T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment_attempt */
extern void T248x6856T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment */
extern void T248x6855T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assigner_instruction */
extern void T248x6854T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constrained_formal_parameter */
extern void T248x6884T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_special_manifest_string */
extern void T248x7026T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_verbatim_string */
extern void T248x7046T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c3_character_constant */
extern void T248x6870T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inspect_instruction */
extern void T248x6959T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_instruction */
extern void T248x6946T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter */
extern void T248x6936T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_debug_instruction */
extern void T248x6900T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_check_instruction */
extern void T248x6872T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_across_instruction */
extern void T248x6836T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_retry_instruction */
extern void T248x7024T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_call_instruction */
extern void T248x7012T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_tuple_type */
extern void T248x7035T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function */
extern void T248x6922T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class_type */
extern void T248x6877T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter_type */
extern void T248x6939T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_n */
extern void T248x6971T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure_inline_agent */
extern void T248x6925T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure_inline_agent */
extern void T248x6993T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure_inline_agent */
extern void T248x6906T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function_inline_agent */
extern void T248x6923T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function_inline_agent */
extern void T248x6990T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function_inline_agent */
extern void T248x6904T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_manifest_string */
extern void T248x6991T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_object_test */
extern void T248x6988T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_expression */
extern void T248x6987T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_prefix_expression */
extern void T248x7007T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_type */
extern void T248x6982T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_expression */
extern void T248x6955T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_expression_address */
extern void T248x6918T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result_address */
extern void T248x7023T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current_address */
extern void T248x6898T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_feature_address */
extern void T248x6927T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_expression */
extern void T248x7004T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_like_type */
extern void T248x7014T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_like_braced_type */
extern void T248x7013T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_feature */
extern void T248x6970T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure */
extern void T248x6924T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure */
extern void T248x6992T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_function */
extern void T248x6901T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function */
extern void T248x6989T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function */
extern void T248x6903T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c2_character_constant */
extern void T248x6869T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c1_character_constant */
extern void T248x6868T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_false_constant */
extern void T248x6926T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_true_constant */
extern void T248x7034T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_real_constant */
extern void T248x7038T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_real_constant */
extern void T248x7018T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_binary_integer_constant */
extern void T248x6862T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_octal_integer_constant */
extern void T248x6986T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_hexadecimal_integer_constant */
extern void T248x6941T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_integer_constant */
extern void T248x7037T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_integer_constant */
extern void T248x7016T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_manifest_string */
extern void T248x7017T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_named_object_test */
extern void T248x6983T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_strip_expression */
extern void T248x7029T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_expression */
extern void T248x7027T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_parenthesized_expression */
extern void T248x7001T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_array */
extern void T248x6978T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_expression */
extern void T248x6945T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_agent */
extern void T248x6871T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bracket_expression */
extern void T248x6866T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_across_expression */
extern void T248x6835T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_void */
extern void T248x7047T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_procedure */
extern void T248x6902T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure */
extern void T248x6905T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_current */
extern void T248x6969T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_attribute */
extern void T248x6860T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unique_attribute */
extern void T248x7042T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constant_attribute */
extern void T248x6883T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_extended_attribute */
extern void T248x6920T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_expression */
extern void T248x6893T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_equality_expression */
extern void T248x6916T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_object_equality_expression */
extern void T248x6984T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_object_test */
extern void T248x6985T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_tuple */
extern void T248x6981T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unqualified_call_expression */
extern void T248x7043T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result */
extern void T248x7022T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_call_expression */
extern void T248x7011T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current */
extern void T248x6897T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_identifier */
extern void T248x6942T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class */
extern void T248x6876T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.reset_qualified_anchored_types */
extern void T249x9350(GE_context* ac, T0* C);
/* Call to ET_TYPE.reset */
extern void T249x9349(GE_context* ac, T0* C);
/* Call to ET_TYPE.append_to_string */
extern void T249x9421T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.append_unaliased_to_string */
extern void T249x9423T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.process */
extern void T249x14651T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.universes_do_if */
extern void T252x6455T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.universes_do_all */
extern void T252x6454T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.master_classes_do_if_until */
extern void T252x6449T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_UNIVERSE.master_classes_do_if */
extern void T252x6448T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_if */
extern void T252x6438T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.master_classes_do_all */
extern void T252x6446T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.master_classes_do_until */
extern void T252x6447T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_until */
extern void T252x6437T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_all */
extern void T252x6436T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T256x9744(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.reset */
extern void T256x9743(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.append_to_string */
extern void T256x9763T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.append_unaliased_to_string */
extern void T256x9764T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.put_target */
extern void T258x14597T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE_SET.set_never_void */
extern void T258x14594(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.propagate_can_be_void */
extern void T258x22847T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.put_type_from_type_set */
extern void T258x22845T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_EXPRESSION.process */
extern void T302x14651T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXPRESSION.reset */
extern void T302x22341(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.set_index */
extern void T302x18274T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_id */
extern void T306x8605T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.process */
extern void T306x14651T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_validity_error */
extern void T306x8863(GE_context* ac, T0* C);
/* Call to ET_FEATURE.set_validity_checked */
extern void T306x8862(GE_context* ac, T0* C);
/* Call to ET_FEATURE.set_other_seeds */
extern void T306x8612T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_seed */
extern void T306x8611T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_clients */
extern void T306x8603T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_version */
extern void T306x8608T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_other_precursors */
extern void T306x8614T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_precursor */
extern void T306x8613T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.reset_postconditions */
extern void T306x8619(GE_context* ac, T0* C);
/* Call to ET_FEATURE.reset_preconditions */
extern void T306x8618(GE_context* ac, T0* C);
/* Call to ET_FEATURE.set_implementation_class */
extern void T306x8609T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_feature */
extern void T306x8610T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CALL_NAME.set_seed */
extern void T334x8504T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_AGENT.set_arguments */
extern void T337x18261T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AGENT.process */
extern void T337x14651T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CONSTANT.set_index */
extern void T343x18274T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_CONSTANT.process */
extern void T343x14651T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_OPERAND.set_index */
extern void T363x18274T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.process */
extern void T364x14651T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AGENT_TARGET.set_index */
extern void T364x18274T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.reset */
extern void T364x18271(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.process */
extern void T366x14651T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AGENT_ARGUMENT_OPERAND.reset */
extern void T366x18271(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.set_index */
extern void T385x18274T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_MANIFEST_STRING.set_type */
extern void T385x9437T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.set_cast_type */
extern void T385x9436T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ASSERTION.process */
extern void T417x14651T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ASSERTION.reset */
extern void T417x22341(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.process */
extern void T440x6251T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_dependant_constraint */
extern void T440x6236T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_provider_constraint */
extern void T440x6235T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.add_recursive_cluster */
extern void T440x6240T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_preparsed */
extern void T440x6230T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_CLUSTER.set_scm_write_mapping */
extern void T440x6238T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_scm_read_mapping */
extern void T440x6237T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTERNAL_UNIVERSE.clusters_do_explicit */
extern void T461x9577T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTERNAL_UNIVERSE.dotnet_assemblies_do_if */
extern void T461x9585T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T464x6504T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T464x6460T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DOTNET_ASSEMBLY.import_classes */
extern void T464x6469(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.preparse */
extern void T464x6465T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DOTNET_ASSEMBLY.consume */
extern void T464x6510T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXTENDED_FEATURE_NAME.reset */
extern void T534x22329(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.close_input */
extern void T574x31526(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T574x31525T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.set_encoding */
extern void T574x31531T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T574x31522(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.read_token */
extern void T574x13414(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_stream */
extern void T574x31524T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.set_index */
extern void T692x18274T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_CHARACTER_CONSTANT.set_cast_type */
extern void T692x9474T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.set_type */
extern void T692x9475T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_index */
extern void T700x18274T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.set_cast_type */
extern void T700x9201T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_type */
extern void T700x9202T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_sign */
extern void T700x9200T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.reset */
extern void T750x8500(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.set_prefix */
extern void T750x16697(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.set_infix */
extern void T750x16698(GE_context* ac, T0* C);
/* Call to ET_ASSIGNER.reset */
extern void T753x22335(GE_context* ac, T0* C);
/* Call to ET_CHOICE.reset */
extern void T767x22356(GE_context* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.reset */
extern void T770x22356(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.set_across_components */
extern void T901x19383T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_object_tests */
extern void T901x19382T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_actual_arguments */
extern void T901x18261T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INSTRUCTION.process */
extern void T907x14651T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INSTRUCTION.reset */
extern void T907x18325(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.reset_qualified_anchored_types */
extern void T915x9350(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.reset */
extern void T915x9349(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.append_to_string */
extern void T915x9421T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.set_index */
extern void T1188x18274T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TARGET.propagate_can_be_void */
extern void T1190x22847T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TARGET.put_type_from_type_set */
extern void T1190x22845T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_DOCUMENT_NODE.node_set_parent */
extern void T1197x21031T0(GE_context* ac, T0* C, T0* a1);
/* Call to DS_ARRAYED_LIST [ET_CLUSTER].remove */
extern void T1499x10404T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_OPERATOR.reset */
extern void T1502x8500(GE_context* ac, T0* C);
/* Call to XM_ELEMENT_NODE.node_set_parent */
extern void T1528x21031T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_REGULAR_FEATURE_CALL.set_parenthesis_call */
extern void T1676x19489T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENT_LIST.set_arguments */
extern void T1692x22397T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable LX_TRANSITION [LX_NFA_STATE].record */
extern void T1881x38481T0(GE_context* ac, T0* C, T0* a1);
/* New instance of type SPECIAL [CHARACTER_8] */
extern T0* GE_new15(T6 a1, T1 initialize);
/* New instance of type SPECIAL [CHARACTER_32] */
extern T0* GE_new16(T6 a1, T1 initialize);
/* New instance of type STRING_8 */
extern T0* GE_new17(T1 initialize);
/* New instance of type STRING_32 */
extern T0* GE_new18(T1 initialize);
/* New instance of type IMMUTABLE_STRING_32 */
extern T0* GE_new19(T1 initialize);
/* New instance of type ISE_EXCEPTION_MANAGER */
extern T0* GE_new20(T1 initialize);
/* New instance of type GEC */
extern T0* GE_new24(T1 initialize);
/* New instance of type CELL [detachable EXCEPTION] */
extern T0* GE_new25(T1 initialize);
/* New instance of type HASH_TABLE [INTEGER_32, INTEGER_32] */
extern T0* GE_new26(T1 initialize);
/* New instance of type CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
extern T0* GE_new27(T1 initialize);
/* New instance of type CELL [NO_MORE_MEMORY] */
extern T0* GE_new28(T1 initialize);
/* New instance of type C_STRING */
extern T0* GE_new29(T1 initialize);
/* New instance of type [attached] TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
extern T0* GE_new30(T1 initialize);
/* New instance of type KL_TEXT_INPUT_FILE */
extern T0* GE_new31(T1 initialize);
/* New instance of type KL_ARGUMENTS */
extern T0* GE_new32(T1 initialize);
/* New instance of type ET_ISE_VARIABLES */
extern T0* GE_new33(T1 initialize);
/* New instance of type ET_ERROR_HANDLER */
extern T0* GE_new34(T1 initialize);
/* New instance of type ET_SYSTEM */
extern T0* GE_new35(T1 initialize);
/* New instance of type KL_STRING_ROUTINES */
extern T0* GE_new36(T1 initialize);
/* New instance of type KL_EXCEPTIONS */
extern T0* GE_new38(T1 initialize);
/* New instance of type AP_PARSER */
extern T0* GE_new39(T1 initialize);
/* New instance of type AP_ALTERNATIVE_OPTIONS_LIST */
extern T0* GE_new40(T1 initialize);
/* New instance of type AP_ERROR */
extern T0* GE_new41(T1 initialize);
/* New instance of type AP_FLAG */
extern T0* GE_new42(T1 initialize);
/* New instance of type AP_ENUMERATION_OPTION */
extern T0* GE_new44(T1 initialize);
/* New instance of type AP_BOOLEAN_OPTION */
extern T0* GE_new45(T1 initialize);
/* New instance of type AP_INTEGER_OPTION */
extern T0* GE_new46(T1 initialize);
/* New instance of type AP_STRING_OPTION */
extern T0* GE_new47(T1 initialize);
/* New instance of type AP_DISPLAY_HELP_FLAG */
extern T0* GE_new51(T1 initialize);
/* New instance of type ET_XACE_SYSTEM_PARSER */
extern T0* GE_new53(T1 initialize);
/* New instance of type ET_XACE_DEFAULT_ERROR_HANDLER */
extern T0* GE_new54(T1 initialize);
/* New instance of type DS_HASH_TABLE [STRING_8, STRING_8] */
extern T0* GE_new55(T1 initialize);
/* New instance of type ST_SPLITTER */
extern T0* GE_new56(T1 initialize);
/* New instance of type UC_STRING_EQUALITY_TESTER */
extern T0* GE_new58(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [STRING_8] */
extern T0* GE_new59(T1 initialize);
/* New instance of type ET_XACE_SYSTEM */
extern T0* GE_new62(T1 initialize);
/* New instance of type ET_ECF_SYSTEM_PARSER */
extern T0* GE_new63(T1 initialize);
/* New instance of type ET_ECF_ERROR_HANDLER */
extern T0* GE_new64(T1 initialize);
/* New instance of type ET_ECF_SYSTEM */
extern T0* GE_new65(T1 initialize);
/* New instance of type ET_ECF_TARGET */
extern T0* GE_new66(T1 initialize);
/* New instance of type KL_EXECUTION_ENVIRONMENT */
extern T0* GE_new67(T1 initialize);
/* New instance of type ET_ECF_VARIABLES */
extern T0* GE_new68(T1 initialize);
/* New instance of type ET_LACE_PARSER */
extern T0* GE_new69(T1 initialize);
/* New instance of type ET_LACE_ERROR_HANDLER */
extern T0* GE_new70(T1 initialize);
/* New instance of type ET_LACE_SYSTEM */
extern T0* GE_new71(T1 initialize);
/* New instance of type ET_DYNAMIC_SYSTEM */
extern T0* GE_new72(T1 initialize);
/* New instance of type ET_SYSTEM_PROCESSOR */
extern T0* GE_new73(T1 initialize);
/* New instance of type ET_C_GENERATOR */
extern T0* GE_new76(T1 initialize);
/* New instance of type KL_SHELL_COMMAND */
extern T0* GE_new77(T1 initialize);
/* New instance of type DS_HASH_SET [STRING_8] */
extern T0* GE_new78(T1 initialize);
/* New instance of type UT_VERSION */
extern T0* GE_new79(T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
extern T0* GE_new80(T1 initialize);
/* New instance of type ET_CLASS_TYPE */
extern T0* GE_new81(T1 initialize);
/* New instance of type ET_TOKEN_CONSTANTS */
extern T0* GE_new82(T1 initialize);
/* New instance of type ET_CLASS */
extern T0* GE_new83(T1 initialize);
/* New instance of type KL_OPERATING_SYSTEM */
extern T0* GE_new85(T1 initialize);
/* New instance of type UT_CANNOT_READ_FILE_ERROR */
extern T0* GE_new87(T1 initialize);
/* New instance of type UT_VERSION_NUMBER */
extern T0* GE_new88(T1 initialize);
/* New instance of type VOID_TARGET */
extern T0* GE_new89(T1 initialize);
/* New instance of type ROUTINE_FAILURE */
extern T0* GE_new91(T1 initialize);
/* New instance of type OLD_VIOLATION */
extern T0* GE_new93(T1 initialize);
/* New instance of type NO_MORE_MEMORY */
extern T0* GE_new95(T1 initialize);
/* New instance of type INVARIANT_VIOLATION */
extern T0* GE_new96(T1 initialize);
/* New instance of type OPERATING_SYSTEM_SIGNAL_FAILURE */
extern T0* GE_new97(T1 initialize);
/* New instance of type IO_FAILURE */
extern T0* GE_new98(T1 initialize);
/* New instance of type OPERATING_SYSTEM_FAILURE */
extern T0* GE_new99(T1 initialize);
/* New instance of type COM_FAILURE */
extern T0* GE_new100(T1 initialize);
/* New instance of type EIFFEL_RUNTIME_PANIC */
extern T0* GE_new101(T1 initialize);
/* New instance of type PRECONDITION_VIOLATION */
extern T0* GE_new104(T1 initialize);
/* New instance of type POSTCONDITION_VIOLATION */
extern T0* GE_new105(T1 initialize);
/* New instance of type FLOATING_POINT_FAILURE */
extern T0* GE_new106(T1 initialize);
/* New instance of type CHECK_VIOLATION */
extern T0* GE_new107(T1 initialize);
/* New instance of type BAD_INSPECT_VALUE */
extern T0* GE_new108(T1 initialize);
/* New instance of type VARIANT_VIOLATION */
extern T0* GE_new109(T1 initialize);
/* New instance of type LOOP_INVARIANT_VIOLATION */
extern T0* GE_new110(T1 initialize);
/* New instance of type RESCUE_FAILURE */
extern T0* GE_new111(T1 initialize);
/* New instance of type RESUMPTION_FAILURE */
extern T0* GE_new112(T1 initialize);
/* New instance of type CREATE_ON_DEFERRED */
extern T0* GE_new113(T1 initialize);
/* New instance of type EXTERNAL_FAILURE */
extern T0* GE_new114(T1 initialize);
/* New instance of type VOID_ASSIGNED_TO_EXPANDED */
extern T0* GE_new115(T1 initialize);
/* New instance of type EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
extern T0* GE_new116(T1 initialize);
/* New instance of type MISMATCH_FAILURE */
extern T0* GE_new117(T1 initialize);
/* New instance of type DEVELOPER_EXCEPTION */
extern T0* GE_new118(T1 initialize);
/* New instance of type ADDRESS_APPLIED_TO_MELTED_FEATURE */
extern T0* GE_new119(T1 initialize);
/* New instance of type SERIALIZATION_FAILURE */
extern T0* GE_new120(T1 initialize);
/* New instance of type KL_WINDOWS_FILE_SYSTEM */
extern T0* GE_new121(T1 initialize);
/* New instance of type KL_UNIX_FILE_SYSTEM */
extern T0* GE_new122(T1 initialize);
/* New instance of type PRIMES */
extern T0* GE_new123(T1 initialize);
/* New instance of type SPECIAL [INTEGER_32] */
extern T0* GE_new124(T6 a1, T1 initialize);
/* New instance of type SPECIAL [BOOLEAN] */
extern T0* GE_new125(T6 a1, T1 initialize);
/* New instance of type detachable KL_LINKABLE [CHARACTER_8] */
extern T0* GE_new127(T1 initialize);
/* New instance of type MANAGED_POINTER */
extern T0* GE_new129(T1 initialize);
/* New instance of type FILE_INFO */
extern T0* GE_new130(T1 initialize);
/* New instance of type MUTEX */
extern T0* GE_new131(T1 initialize);
/* New instance of type UT_ERROR_HANDLER */
extern T0* GE_new132(T1 initialize);
/* New instance of type KL_STANDARD_FILES */
extern T0* GE_new133(T1 initialize);
/* New instance of type KL_STDERR_FILE */
extern T0* GE_new134(T1 initialize);
/* New instance of type KL_STDOUT_FILE */
extern T0* GE_new135(T1 initialize);
/* New instance of type UC_STRING */
extern T0* GE_new136(T1 initialize);
/* New instance of type KL_ANY_ROUTINES */
extern T0* GE_new137(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [STRING_8] */
extern T0* GE_new139(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [AP_OPTION] */
extern T0* GE_new140(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new141(T1 initialize);
/* New instance of type AP_ERROR_HANDLER */
extern T0* GE_new142(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [AP_OPTION] */
extern T0* GE_new143(T1 initialize);
/* New instance of type ARRAY [STRING_8] */
extern T0* GE_new144(T1 initialize);
/* New instance of type SPECIAL [STRING_8] */
extern T0* GE_new145(T6 a1, T1 initialize);
/* New instance of type DS_LINKED_LIST [STRING_8] */
extern T0* GE_new146(T1 initialize);
/* New instance of type KL_STRING_EQUALITY_TESTER */
extern T0* GE_new147(T1 initialize);
/* New instance of type DS_LINKED_LIST [BOOLEAN] */
extern T0* GE_new150(T1 initialize);
/* New instance of type DS_LINKED_LIST [INTEGER_32] */
extern T0* GE_new153(T1 initialize);
/* New instance of type ET_XACE_AST_FACTORY */
extern T0* GE_new154(T1 initialize);
/* New instance of type XM_DOCUMENT */
extern T0* GE_new155(T1 initialize);
/* New instance of type XM_ELEMENT */
extern T0* GE_new156(T1 initialize);
/* New instance of type XM_POSITION_TABLE */
extern T0* GE_new157(T1 initialize);
/* New instance of type XM_TREE_CALLBACKS_PIPE */
extern T0* GE_new159(T1 initialize);
/* New instance of type XM_STOP_ON_ERROR_FILTER */
extern T0* GE_new160(T1 initialize);
/* New instance of type XM_CALLBACKS_TO_TREE_FILTER */
extern T0* GE_new161(T1 initialize);
/* New instance of type ET_XACE_VALIDATOR */
extern T0* GE_new162(T1 initialize);
/* New instance of type ET_XACE_PREPROCESSOR */
extern T0* GE_new163(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8] */
extern T0* GE_new164(T1 initialize);
/* New instance of type XM_EXPAT_PARSER_FACTORY */
extern T0* GE_new165(T1 initialize);
/* New instance of type XM_EIFFEL_PARSER */
extern T0* GE_new166(T1 initialize);
/* New instance of type ET_XACE_LIBRARY_CONFIG_PARSER */
extern T0* GE_new169(T1 initialize);
/* New instance of type UT_MESSAGE */
extern T0* GE_new170(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [STRING_8] */
extern T0* GE_new172(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
extern T0* GE_new173(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [INTEGER_32] */
extern T0* GE_new174(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [STRING_8] */
extern T0* GE_new175(T1 initialize);
/* New instance of type DS_HASH_SET [INTEGER_32] */
extern T0* GE_new176(T1 initialize);
/* New instance of type ET_ECF_AST_FACTORY */
extern T0* GE_new177(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
extern T0* GE_new179(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
extern T0* GE_new180(T1 initialize);
/* New instance of type ET_COMPRESSED_POSITION */
extern T0* GE_new181(T1 initialize);
/* New instance of type ET_IDENTIFIER */
extern T0* GE_new183(T1 initialize);
/* New instance of type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
extern T0* GE_new185(T1 initialize);
/* New instance of type ET_ECF_STATE */
extern T0* GE_new188(T1 initialize);
/* New instance of type ET_ECF_TARGETS */
extern T0* GE_new189(T1 initialize);
/* New instance of type ET_ECF_LIBRARY */
extern T0* GE_new190(T1 initialize);
/* New instance of type ET_ADAPTED_LIBRARIES */
extern T0* GE_new191(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ADAPTED_LIBRARY] */
extern T0* GE_new193(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_ADAPTED_LIBRARY]] */
extern T0* GE_new194(T1 initialize);
/* New instance of type detachable TUPLE */
extern T0* GE_new195(T1 initialize);
/* New instance of type ET_ECF_LIBRARY_PARSER */
extern T0* GE_new196(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_LIBRARY */
extern T0* GE_new197(T1 initialize);
/* New instance of type ET_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new198(T1 initialize);
/* New instance of type ET_ECF_DOTNET_ASSEMBLY */
extern T0* GE_new199(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
extern T0* GE_new201(T1 initialize);
/* New instance of type ET_ECF_ERROR */
extern T0* GE_new202(T1 initialize);
/* New instance of type EXECUTION_ENVIRONMENT */
extern T0* GE_new203(T1 initialize);
/* New instance of type ET_LACE_AST_FACTORY */
extern T0* GE_new204(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
extern T0* GE_new205(T1 initialize);
/* New instance of type YY_FILE_BUFFER */
extern T0* GE_new206(T1 initialize);
/* New instance of type YY_BUFFER */
extern T0* GE_new207(T1 initialize);
/* New instance of type DS_HASH_SET [ET_IDENTIFIER] */
extern T0* GE_new208(T1 initialize);
/* New instance of type SPECIAL [detachable ANY] */
extern T0* GE_new211(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ANY] */
extern T0* GE_new212(T1 initialize);
/* New instance of type SPECIAL [ET_IDENTIFIER] */
extern T0* GE_new213(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
extern T0* GE_new214(T1 initialize);
/* New instance of type ET_LACE_CLUSTERS */
extern T0* GE_new215(T1 initialize);
/* New instance of type ET_LACE_CLUSTER */
extern T0* GE_new216(T1 initialize);
/* New instance of type ET_LACE_EXCLUDE */
extern T0* GE_new217(T1 initialize);
/* New instance of type ET_LACE_DOTNET_ASSEMBLY */
extern T0* GE_new218(T1 initialize);
/* New instance of type SPECIAL [ET_LACE_SYSTEM] */
extern T0* GE_new219(T6 a1, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LACE_CLUSTERS] */
extern T0* GE_new220(T6 a1, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
extern T0* GE_new221(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM] */
extern T0* GE_new222(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS] */
extern T0* GE_new223(T1 initialize);
/* New instance of type SPECIAL [ET_LACE_CLUSTER] */
extern T0* GE_new224(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
extern T0* GE_new225(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LACE_EXCLUDE] */
extern T0* GE_new226(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE] */
extern T0* GE_new227(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
extern T0* GE_new228(T1 initialize);
/* New instance of type SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
extern T0* GE_new229(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
extern T0* GE_new230(T1 initialize);
/* New instance of type ET_LACE_DOTNET_GAC_ASSEMBLY */
extern T0* GE_new231(T1 initialize);
/* New instance of type KL_PLATFORM */
extern T0* GE_new232(T1 initialize);
/* New instance of type KL_INTEGER_ROUTINES */
extern T0* GE_new233(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
extern T0* GE_new234(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
extern T0* GE_new235(T1 initialize);
/* New instance of type [attached] TUPLE [ET_CLASS] */
extern T0* GE_new236(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_CLASS]] */
extern T0* GE_new237(T1 initialize);
/* New instance of type [attached] TUPLE [INTEGER_32] */
extern T0* GE_new238(T1 initialize);
/* New instance of type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
extern T0* GE_new239(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE */
extern T0* GE_new240(T1 initialize);
/* New instance of type DT_DATE_TIME */
extern T0* GE_new241(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DYNAMIC_SYSTEM] */
extern T0* GE_new242(T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE */
extern T0* GE_new247(T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_LIST */
extern T0* GE_new251(T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION */
extern T0* GE_new259(T1 initialize);
/* New instance of type ET_TUPLE_TYPE */
extern T0* GE_new260(T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT_LIST */
extern T0* GE_new261(T1 initialize);
/* New instance of type detachable ARRAY [ET_TYPE] */
extern T0* GE_new262(T1 initialize);
/* New instance of type SPECIAL [ET_TYPE] */
extern T0* GE_new263(T6 a1, T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT */
extern T0* GE_new264(T1 initialize);
/* New instance of type ET_QUERY_LIST */
extern T0* GE_new265(T1 initialize);
/* New instance of type ET_PROCEDURE_LIST */
extern T0* GE_new266(T1 initialize);
/* New instance of type DT_SHARED_SYSTEM_CLOCK */
extern T0* GE_new267(T1 initialize);
/* New instance of type DT_SYSTEM_CLOCK */
extern T0* GE_new268(T1 initialize);
/* New instance of type ET_EIFFEL_PREPARSER */
extern T0* GE_new269(T1 initialize);
/* New instance of type ET_MASTER_CLASS_CHECKER */
extern T0* GE_new270(T1 initialize);
/* New instance of type ET_EIFFEL_PARSER */
extern T0* GE_new271(T1 initialize);
/* New instance of type ET_PROVIDER_CHECKER */
extern T0* GE_new272(T1 initialize);
/* New instance of type ET_ANCESTOR_BUILDER */
extern T0* GE_new273(T1 initialize);
/* New instance of type ET_FEATURE_FLATTENER */
extern T0* GE_new274(T1 initialize);
/* New instance of type ET_INTERFACE_CHECKER */
extern T0* GE_new275(T1 initialize);
/* New instance of type ET_IMPLEMENTATION_CHECKER */
extern T0* GE_new276(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLASS] */
extern T0* GE_new277(T1 initialize);
/* New instance of type [attached] TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
extern T0* GE_new278(T1 initialize);
/* New instance of type ET_AST_NULL_PROCESSOR */
extern T0* GE_new279(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [INTEGER_32] */
extern T0* GE_new280(T1 initialize);
/* New instance of type ET_AST_FACTORY */
extern T0* GE_new281(T1 initialize);
/* New instance of type ET_NULL_ERROR_HANDLER */
extern T0* GE_new282(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
extern T0* GE_new284(T1 initialize);
/* New instance of type DT_DATE_TIME_DURATION */
extern T0* GE_new285(T1 initialize);
/* New instance of type KL_NULL_TEXT_OUTPUT_STREAM */
extern T0* GE_new286(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_SET_LIST */
extern T0* GE_new287(T1 initialize);
/* New instance of type KL_STRING_OUTPUT_STREAM */
extern T0* GE_new288(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_IDENTIFIER] */
extern T0* GE_new289(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_HASH_LIST */
extern T0* GE_new290(T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET */
extern T0* GE_new291(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_EXPRESSION] */
extern T0* GE_new292(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_EXPRESSION] */
extern T0* GE_new293(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32] */
extern T0* GE_new294(T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
extern T0* GE_new295(T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_TYPE] */
extern T0* GE_new296(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new297(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_OBJECT_TEST] */
extern T0* GE_new298(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new299(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new300(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_AGENT] */
extern T0* GE_new301(T1 initialize);
/* New instance of type ET_EXPRESSION */
extern T0* GE_new302(T1 initialize);
/* New instance of type ET_CURRENT */
extern T0* GE_new303(T1 initialize);
/* New instance of type ET_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new304(T1 initialize);
/* New instance of type ET_QUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new305(T1 initialize);
/* New instance of type ET_QUALIFIED_CALL_EXPRESSION */
extern T0* GE_new308(T1 initialize);
/* New instance of type ET_UNQUALIFIED_CALL_EXPRESSION */
extern T0* GE_new309(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new310(T1 initialize);
/* New instance of type ET_MANIFEST_TUPLE */
extern T0* GE_new311(T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new312(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_FEATURE] */
extern T0* GE_new313(T1 initialize);
/* New instance of type ARRAY [INTEGER_32] */
extern T0* GE_new314(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
extern T0* GE_new315(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
extern T0* GE_new316(T1 initialize);
/* New instance of type DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
extern T0* GE_new317(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
extern T0* GE_new318(T1 initialize);
/* New instance of type DS_HASH_TABLE [BOOLEAN, STRING_8] */
extern T0* GE_new319(T1 initialize);
/* New instance of type ET_IDENTIFIER_TESTER */
extern T0* GE_new320(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [ET_IDENTIFIER] */
extern T0* GE_new321(T1 initialize);
/* New instance of type RX_PCRE_REGULAR_EXPRESSION */
extern T0* GE_new322(T1 initialize);
/* New instance of type KL_TEXT_OUTPUT_FILE */
extern T0* GE_new323(T1 initialize);
/* New instance of type ET_DYNAMIC_TUPLE_TYPE */
extern T0* GE_new324(T1 initialize);
/* New instance of type UT_TEMPLATE_EXPANDER */
extern T0* GE_new325(T1 initialize);
/* New instance of type UT_CANNOT_WRITE_TO_FILE_ERROR */
extern T0* GE_new326(T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE_LIST */
extern T0* GE_new327(T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR */
extern T0* GE_new328(T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR_LIST */
extern T0* GE_new329(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE] */
extern T0* GE_new330(T1 initialize);
/* New instance of type ET_RESULT */
extern T0* GE_new331(T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
extern T0* GE_new332(T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
extern T0* GE_new336(T1 initialize);
/* New instance of type ET_OBJECT_TEST */
extern T0* GE_new338(T1 initialize);
/* New instance of type ET_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new339(T1 initialize);
/* New instance of type ET_EQUALITY_EXPRESSION */
extern T0* GE_new340(T1 initialize);
/* New instance of type ET_DYNAMIC_SPECIAL_TYPE */
extern T0* GE_new341(T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_DYNAMIC_TYPE] */
extern T0* GE_new344(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_COMPARATOR_BY_ID */
extern T0* GE_new345(T1 initialize);
/* New instance of type ET_CREATE_EXPRESSION */
extern T0* GE_new349(T1 initialize);
/* New instance of type ET_QUALIFIED_CALL */
extern T0* GE_new350(T1 initialize);
/* New instance of type KL_DIRECTORY */
extern T0* GE_new354(T1 initialize);
/* New instance of type ET_EXTENDED_ATTRIBUTE */
extern T0* GE_new355(T1 initialize);
/* New instance of type ET_COMPOUND */
extern T0* GE_new356(T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE_LIST */
extern T0* GE_new357(T1 initialize);
/* New instance of type DS_QUICK_SORTER [INTEGER_32] */
extern T0* GE_new361(T1 initialize);
/* New instance of type ET_IMPLICIT_TYPE_MARK */
extern T0* GE_new368(T1 initialize);
/* New instance of type ET_SYMBOL */
extern T0* GE_new369(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE] */
extern T0* GE_new370(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new371(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new372(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new373(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new374(T1 initialize);
/* New instance of type UT_INTEGER_FORMATTER */
extern T0* GE_new375(T1 initialize);
/* New instance of type STD_FILES */
extern T0* GE_new378(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new380(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
extern T0* GE_new382(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new383(T1 initialize);
/* New instance of type ET_CONSTANT_ATTRIBUTE */
extern T0* GE_new384(T1 initialize);
/* New instance of type ET_UNIQUE_ATTRIBUTE */
extern T0* GE_new386(T1 initialize);
/* New instance of type ET_ATTRIBUTE */
extern T0* GE_new387(T1 initialize);
/* New instance of type NATIVE_STRING */
extern T0* GE_new389(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [STRING_8] */
extern T0* GE_new390(T1 initialize);
/* New instance of type ET_FEATURE_CHECKER */
extern T0* GE_new391(T1 initialize);
/* New instance of type DS_CELL [INTEGER_32] */
extern T0* GE_new392(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
extern T0* GE_new393(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new394(T1 initialize);
/* New instance of type ET_TYPE_CHECKER */
extern T0* GE_new396(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
extern T0* GE_new398(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new399(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new400(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new401(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new402(T1 initialize);
/* New instance of type ET_NESTED_TYPE_CONTEXT */
extern T0* GE_new403(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
extern T0* GE_new404(T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE */
extern T0* GE_new405(T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE_BUILDER */
extern T0* GE_new406(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
extern T0* GE_new407(T1 initialize);
/* New instance of type ET_ACROSS_CURSOR_SCOPE */
extern T0* GE_new408(T1 initialize);
/* New instance of type ET_ATTACHMENT_SCOPE */
extern T0* GE_new409(T1 initialize);
/* New instance of type ET_ATTACHMENT_SCOPE_BUILDER */
extern T0* GE_new410(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new411(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_INDEXING_TERM] */
extern T0* GE_new412(T1 initialize);
/* New instance of type ET_PRECONDITIONS */
extern T0* GE_new413(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE] */
extern T0* GE_new414(T1 initialize);
/* New instance of type ET_FEATURE_LIST */
extern T0* GE_new416(T1 initialize);
/* New instance of type ET_UNKNOWN_GROUP */
extern T0* GE_new418(T1 initialize);
/* New instance of type ET_BASE_TYPE_LIST */
extern T0* GE_new420(T1 initialize);
/* New instance of type ET_KEYWORD */
extern T0* GE_new421(T1 initialize);
/* New instance of type ET_CLASS_CODES */
extern T0* GE_new422(T1 initialize);
/* New instance of type PATH */
extern T0* GE_new423(T1 initialize);
/* New instance of type ARGUMENTS_32 */
extern T0* GE_new425(T1 initialize);
/* New instance of type ET_INTERNAL_ERROR */
extern T0* GE_new426(T1 initialize);
/* New instance of type ST_WORD_WRAPPER */
extern T0* GE_new427(T1 initialize);
/* New instance of type ET_XACE_EXTERNALS */
extern T0* GE_new429(T1 initialize);
/* New instance of type ET_XACE_OPTIONS */
extern T0* GE_new430(T1 initialize);
/* New instance of type XM_ATTRIBUTE */
extern T0* GE_new431(T1 initialize);
/* New instance of type ET_XACE_OPTION_NAMES */
extern T0* GE_new433(T1 initialize);
/* New instance of type ET_XACE_CLUSTER */
extern T0* GE_new435(T1 initialize);
/* New instance of type ET_XACE_CLUSTERS */
extern T0* GE_new436(T1 initialize);
/* New instance of type ET_XACE_MOUNTED_LIBRARY */
extern T0* GE_new437(T1 initialize);
/* New instance of type ET_XACE_MOUNTED_LIBRARIES */
extern T0* GE_new438(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new439(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
extern T0* GE_new441(T1 initialize);
/* New instance of type ET_XACE_LIBRARY_CONFIG */
extern T0* GE_new443(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, STRING_8] */
extern T0* GE_new444(T1 initialize);
/* New instance of type ET_XACE_CLASS_OPTIONS */
extern T0* GE_new446(T1 initialize);
/* New instance of type ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
extern T0* GE_new447(T1 initialize);
/* New instance of type ET_XACE_BOOLEAN_EXPECTED_ERROR */
extern T0* GE_new448(T1 initialize);
/* New instance of type ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
extern T0* GE_new449(T1 initialize);
/* New instance of type ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
extern T0* GE_new450(T1 initialize);
/* New instance of type ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
extern T0* GE_new451(T1 initialize);
/* New instance of type ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
extern T0* GE_new452(T1 initialize);
/* New instance of type UT_COUNTER */
extern T0* GE_new454(T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ET_CLASS] */
extern T0* GE_new455(T1 initialize);
/* New instance of type [attached] TUPLE [UT_COUNTER] */
extern T0* GE_new456(T1 initialize);
/* New instance of type [attached] TUPLE [KL_AGENT_ROUTINES [ET_CLASS], [attached] PROCEDURE [[attached] TUPLE]] */
extern T0* GE_new457(T1 initialize);
/* New instance of type [attached] TUPLE [ET_UNIVERSE] */
extern T0* GE_new458(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_UNIVERSE]] */
extern T0* GE_new459(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]]] */
extern T0* GE_new460(T1 initialize);
/* New instance of type DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new462(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLIES */
extern T0* GE_new463(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY */
extern T0* GE_new464(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new465(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new466(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new467(T1 initialize);
/* New instance of type [attached] TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new468(T1 initialize);
/* New instance of type [attached] TUPLE [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new469(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new470(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]], [attached] PREDICATE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]]] */
extern T0* GE_new471(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DOTNET_ASSEMBLIES] */
extern T0* GE_new472(T1 initialize);
/* New instance of type [attached] TUPLE [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new473(T1 initialize);
/* New instance of type ET_LIBRARY */
extern T0* GE_new474(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LIBRARY] */
extern T0* GE_new475(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_LIBRARY]] */
extern T0* GE_new476(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]], detachable FUNCTION [[attached] TUPLE, BOOLEAN]] */
extern T0* GE_new477(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [STRING_8] */
extern T0* GE_new478(T1 initialize);
/* New instance of type ET_CLASS_NAME_TESTER */
extern T0* GE_new479(T1 initialize);
/* New instance of type ET_PARENT */
extern T0* GE_new481(T1 initialize);
/* New instance of type ET_PARENT_LIST */
extern T0* GE_new482(T1 initialize);
/* New instance of type ET_CLIENT_LIST */
extern T0* GE_new483(T1 initialize);
/* New instance of type ET_BUILTIN_CONVERT_FEATURE */
extern T0* GE_new484(T1 initialize);
/* New instance of type ET_MASTER_CLASS */
extern T0* GE_new485(T1 initialize);
/* New instance of type DS_HASH_SET [ET_UNIVERSE] */
extern T0* GE_new486(T1 initialize);
/* New instance of type [attached] TUPLE [ET_CLUSTER] */
extern T0* GE_new487(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_CLUSTER]] */
extern T0* GE_new488(T1 initialize);
/* New instance of type [attached] TUPLE [ET_XACE_SYSTEM] */
extern T0* GE_new489(T1 initialize);
/* New instance of type DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new490(T1 initialize);
/* New instance of type [attached] TUPLE [ET_AST_PROCESSOR] */
extern T0* GE_new491(T1 initialize);
/* New instance of type [attached] TUPLE [ET_MASTER_CLASS] */
extern T0* GE_new492(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]] */
extern T0* GE_new493(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new494(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
extern T0* GE_new495(T1 initialize);
/* New instance of type ET_ANCESTORS_STATUS_CHECKER */
extern T0* GE_new496(T1 initialize);
/* New instance of type ET_FLATTENING_STATUS_CHECKER */
extern T0* GE_new497(T1 initialize);
/* New instance of type ET_INTERFACE_STATUS_CHECKER */
extern T0* GE_new498(T1 initialize);
/* New instance of type ET_IMPLEMENTATION_STATUS_CHECKER */
extern T0* GE_new499(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [ET_CLASS]] */
extern T0* GE_new500(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
extern T0* GE_new502(T1 initialize);
/* New instance of type [attached] TUPLE [ET_FLATTENING_STATUS_CHECKER] */
extern T0* GE_new503(T1 initialize);
/* New instance of type [attached] TUPLE [ET_INTERFACE_STATUS_CHECKER] */
extern T0* GE_new504(T1 initialize);
/* New instance of type [attached] TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
extern T0* GE_new505(T1 initialize);
/* New instance of type [attached] TUPLE [BOOLEAN] */
extern T0* GE_new506(T1 initialize);
/* New instance of type ET_CLIENT */
extern T0* GE_new507(T1 initialize);
/* New instance of type ET_ATTACHMENT_SEPARATE_KEYWORDS */
extern T0* GE_new508(T1 initialize);
/* New instance of type ET_RENAME_LIST */
extern T0* GE_new509(T1 initialize);
/* New instance of type ET_EXPORT_LIST */
extern T0* GE_new510(T1 initialize);
/* New instance of type ET_KEYWORD_FEATURE_NAME_LIST */
extern T0* GE_new511(T1 initialize);
/* New instance of type ET_LIKE_CURRENT */
extern T0* GE_new514(T1 initialize);
/* New instance of type ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new515(T1 initialize);
/* New instance of type ET_NONE_GROUP */
extern T0* GE_new516(T1 initialize);
/* New instance of type [attached] TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
extern T0* GE_new517(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLUSTER]]] */
extern T0* GE_new520(T1 initialize);
/* New instance of type [attached] TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new524(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]]] */
extern T0* GE_new525(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]], FUNCTION [[attached] TUPLE [ET_CLASS], BOOLEAN]] */
extern T0* GE_new526(T1 initialize);
/* New instance of type XM_NAMESPACE */
extern T0* GE_new529(T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [INTEGER_32] */
extern T0* GE_new530(T1 initialize);
/* New instance of type ET_DYNAMIC_PROCEDURE_TYPE */
extern T0* GE_new531(T1 initialize);
/* New instance of type ET_DYNAMIC_FUNCTION_TYPE */
extern T0* GE_new532(T1 initialize);
/* New instance of type ET_DO_PROCEDURE */
extern T0* GE_new533(T1 initialize);
/* New instance of type UT_CONFIG_PARSER */
extern T0* GE_new535(T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
extern T0* GE_new536(T1 initialize);
/* New instance of type ET_DEFERRED_PROCEDURE */
extern T0* GE_new539(T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET */
extern T0* GE_new540(T1 initialize);
/* New instance of type CELL [INTEGER_32] */
extern T0* GE_new542(T1 initialize);
/* New instance of type KL_PATHNAME */
extern T0* GE_new544(T1 initialize);
/* New instance of type READABLE_STRING_32 */
extern T0* GE_new546(T1 initialize);
/* New instance of type SPECIAL [NATURAL_8] */
extern T0* GE_new547(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
extern T0* GE_new549(T1 initialize);
/* New instance of type SPECIAL [AP_OPTION] */
extern T0* GE_new551(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [AP_OPTION] */
extern T0* GE_new552(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new553(T1 initialize);
/* New instance of type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new554(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new555(T1 initialize);
/* New instance of type detachable DS_LINKABLE [STRING_8] */
extern T0* GE_new556(T1 initialize);
/* New instance of type detachable DS_LINKABLE [BOOLEAN] */
extern T0* GE_new557(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [BOOLEAN] */
extern T0* GE_new558(T1 initialize);
/* New instance of type detachable DS_LINKABLE [INTEGER_32] */
extern T0* GE_new559(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [INTEGER_32] */
extern T0* GE_new560(T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER */
extern T0* GE_new561(T1 initialize);
/* New instance of type ARRAY [XM_CALLBACKS_FILTER] */
extern T0* GE_new562(T1 initialize);
/* New instance of type SPECIAL [XM_CALLBACKS_FILTER] */
extern T0* GE_new563(T6 a1, T1 initialize);
/* New instance of type XM_CALLBACKS_NULL */
extern T0* GE_new564(T1 initialize);
/* New instance of type DS_HASH_SET [XM_NAMESPACE] */
extern T0* GE_new565(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8] */
extern T0* GE_new571(T1 initialize);
/* New instance of type SPECIAL [ET_XACE_LIBRARY_CONFIG] */
extern T0* GE_new572(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG] */
extern T0* GE_new573(T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER */
extern T0* GE_new574(T1 initialize);
/* New instance of type XM_DEFAULT_POSITION */
extern T0* GE_new575(T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_POSITION] */
extern T0* GE_new577(T1 initialize);
/* New instance of type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
extern T0* GE_new578(T1 initialize);
/* New instance of type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
extern T0* GE_new579(T1 initialize);
/* New instance of type XM_NULL_EXTERNAL_RESOLVER */
extern T0* GE_new581(T1 initialize);
/* New instance of type XM_DTD_CALLBACKS_NULL */
extern T0* GE_new583(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new584(T1 initialize);
/* New instance of type XM_EIFFEL_PARSER_NAME */
extern T0* GE_new585(T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new586(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new587(T1 initialize);
/* New instance of type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new588(T1 initialize);
/* New instance of type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new589(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
extern T0* GE_new590(T1 initialize);
/* New instance of type XM_DTD_EXTERNAL_ID */
extern T0* GE_new591(T1 initialize);
/* New instance of type SPECIAL [XM_DTD_EXTERNAL_ID] */
extern T0* GE_new592(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new593(T1 initialize);
/* New instance of type XM_DTD_ELEMENT_CONTENT */
extern T0* GE_new594(T1 initialize);
/* New instance of type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new595(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new596(T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new597(T1 initialize);
/* New instance of type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new598(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new599(T1 initialize);
/* New instance of type XM_DTD_ATTRIBUTE_CONTENT */
extern T0* GE_new600(T1 initialize);
/* New instance of type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new601(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
extern T0* GE_new602(T1 initialize);
/* New instance of type DS_BILINKED_LIST [STRING_8] */
extern T0* GE_new603(T1 initialize);
/* New instance of type SPECIAL [DS_BILINKED_LIST [STRING_8]] */
extern T0* GE_new604(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [BOOLEAN] */
extern T0* GE_new605(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
extern T0* GE_new606(T1 initialize);
/* New instance of type XM_EIFFEL_DECLARATION */
extern T0* GE_new607(T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_DECLARATION] */
extern T0* GE_new608(T6 a1, T1 initialize);
/* New instance of type XM_EIFFEL_ENTITY_DEF */
extern T0* GE_new611(T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER_DTD */
extern T0* GE_new612(T1 initialize);
/* New instance of type XM_EIFFEL_PE_ENTITY_DEF */
extern T0* GE_new614(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [INTEGER_32] */
extern T0* GE_new615(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [INTEGER_32] */
extern T0* GE_new616(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
extern T0* GE_new617(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_LIBRARY] */
extern T0* GE_new618(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
extern T0* GE_new621(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new622(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
extern T0* GE_new625(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new626(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_TARGET] */
extern T0* GE_new627(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
extern T0* GE_new628(T1 initialize);
/* New instance of type DS_HASH_SET [ET_LIBRARY] */
extern T0* GE_new629(T1 initialize);
/* New instance of type [attached] TUPLE [DS_HASH_SET [ET_LIBRARY]] */
extern T0* GE_new630(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new631(T1 initialize);
/* New instance of type HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
extern T0* GE_new632(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
extern T0* GE_new634(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
extern T0* GE_new635(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
extern T0* GE_new637(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
extern T0* GE_new640(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
extern T0* GE_new641(T1 initialize);
/* New instance of type SPECIAL [ET_MASTER_CLASS] */
extern T0* GE_new642(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
extern T0* GE_new643(T1 initialize);
/* New instance of type SPECIAL [ET_CLASS_NAME] */
extern T0* GE_new644(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TYPE] */
extern T0* GE_new645(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
extern T0* GE_new646(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
extern T0* GE_new647(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_LIST */
extern T0* GE_new650(T1 initialize);
/* New instance of type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new654(T6 a1, T1 initialize);
/* New instance of type ET_BRACKET_SYMBOL */
extern T0* GE_new655(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new657(T1 initialize);
/* New instance of type C_DATE */
extern T0* GE_new658(T1 initialize);
/* New instance of type KL_STDIN_FILE */
extern T0* GE_new659(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [INTEGER_32] */
extern T0* GE_new661(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new662(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new663(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_KEYWORD] */
extern T0* GE_new664(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_SYMBOL] */
extern T0* GE_new665(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new666(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new667(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
extern T0* GE_new668(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_QUERY] */
extern T0* GE_new669(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_PROCEDURE] */
extern T0* GE_new670(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new671(T1 initialize);
/* New instance of type DS_HASH_SET [ET_NAMED_CLASS] */
extern T0* GE_new672(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
extern T0* GE_new673(T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD] */
extern T0* GE_new674(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new675(T1 initialize);
/* New instance of type ET_AGENT_KEYWORD */
extern T0* GE_new676(T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new677(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new678(T1 initialize);
/* New instance of type ET_PRECURSOR_KEYWORD */
extern T0* GE_new679(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new680(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
extern T0* GE_new681(T1 initialize);
/* New instance of type SPECIAL [detachable ET_SYMBOL] */
extern T0* GE_new682(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
extern T0* GE_new683(T1 initialize);
/* New instance of type SPECIAL [detachable ET_POSITION] */
extern T0* GE_new684(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new685(T1 initialize);
/* New instance of type SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new687(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
extern T0* GE_new688(T1 initialize);
/* New instance of type SPECIAL [detachable ET_BREAK] */
extern T0* GE_new690(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new691(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new693(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
extern T0* GE_new694(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CURRENT] */
extern T0* GE_new695(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
extern T0* GE_new696(T1 initialize);
/* New instance of type ET_FREE_OPERATOR */
extern T0* GE_new697(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FREE_OPERATOR] */
extern T0* GE_new698(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new699(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new701(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new702(T1 initialize);
/* New instance of type ET_KEYWORD_OPERATOR */
extern T0* GE_new703(T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new704(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
extern T0* GE_new705(T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING] */
extern T0* GE_new706(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
extern T0* GE_new707(T1 initialize);
/* New instance of type SPECIAL [detachable ET_REAL_CONSTANT] */
extern T0* GE_new709(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
extern T0* GE_new710(T1 initialize);
/* New instance of type SPECIAL [detachable ET_RESULT] */
extern T0* GE_new711(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new712(T1 initialize);
/* New instance of type ET_RETRY_INSTRUCTION */
extern T0* GE_new713(T1 initialize);
/* New instance of type SPECIAL [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new714(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new715(T1 initialize);
/* New instance of type ET_SYMBOL_OPERATOR */
extern T0* GE_new716(T1 initialize);
/* New instance of type SPECIAL [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new717(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_VOID] */
extern T0* GE_new718(T1 initialize);
/* New instance of type ET_VOID */
extern T0* GE_new719(T1 initialize);
/* New instance of type SPECIAL [detachable ET_VOID] */
extern T0* GE_new720(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new721(T1 initialize);
/* New instance of type ET_SEMICOLON_SYMBOL */
extern T0* GE_new722(T1 initialize);
/* New instance of type SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new723(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new724(T1 initialize);
/* New instance of type SPECIAL [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new725(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new726(T1 initialize);
/* New instance of type ET_QUESTION_MARK_SYMBOL */
extern T0* GE_new727(T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new728(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new729(T1 initialize);
/* New instance of type ET_ACROSS_EXPRESSION */
extern T0* GE_new730(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new731(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new732(T1 initialize);
/* New instance of type ET_ACROSS_INSTRUCTION */
extern T0* GE_new733(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new734(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new735(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new736(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new737(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new738(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new739(T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new740(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new741(T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new743(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new744(T1 initialize);
/* New instance of type ET_AGENT_ARGUMENT_OPERAND_LIST */
extern T0* GE_new745(T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new746(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
extern T0* GE_new747(T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_TARGET] */
extern T0* GE_new748(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
extern T0* GE_new749(T1 initialize);
/* New instance of type ET_ALIAS_NAME */
extern T0* GE_new750(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ALIAS_NAME] */
extern T0* GE_new751(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
extern T0* GE_new752(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ASSIGNER] */
extern T0* GE_new754(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new755(T1 initialize);
/* New instance of type ET_BRACKET_EXPRESSION */
extern T0* GE_new756(T1 initialize);
/* New instance of type SPECIAL [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new757(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
extern T0* GE_new758(T1 initialize);
/* New instance of type ET_CALL_AGENT */
extern T0* GE_new759(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CALL_AGENT] */
extern T0* GE_new760(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new761(T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new762(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new763(T1 initialize);
/* New instance of type ET_CHECK_INSTRUCTION */
extern T0* GE_new764(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new765(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
extern T0* GE_new766(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE] */
extern T0* GE_new768(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new769(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new771(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
extern T0* GE_new772(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_ITEM] */
extern T0* GE_new774(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
extern T0* GE_new775(T1 initialize);
/* New instance of type ET_CHOICE_LIST */
extern T0* GE_new776(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_LIST] */
extern T0* GE_new777(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
extern T0* GE_new778(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLASS] */
extern T0* GE_new779(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
extern T0* GE_new780(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLIENT_ITEM] */
extern T0* GE_new781(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
extern T0* GE_new782(T1 initialize);
/* New instance of type ET_CLIENTS */
extern T0* GE_new783(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLIENTS] */
extern T0* GE_new784(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
extern T0* GE_new785(T1 initialize);
/* New instance of type SPECIAL [detachable ET_COMPOUND] */
extern T0* GE_new786(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
extern T0* GE_new787(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONDITIONAL] */
extern T0* GE_new789(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
extern T0* GE_new790(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTANT] */
extern T0* GE_new791(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new792(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new794(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new795(T1 initialize);
/* New instance of type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
extern T0* GE_new796(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new797(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new798(T1 initialize);
/* New instance of type ET_CONSTRAINT_CREATOR */
extern T0* GE_new799(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new800(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new801(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new803(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new804(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new806(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new807(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new809(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new810(T1 initialize);
/* New instance of type ET_CONVERT_FEATURE_LIST */
extern T0* GE_new811(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new812(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new813(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new814(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
extern T0* GE_new815(T1 initialize);
/* New instance of type ET_CREATOR */
extern T0* GE_new816(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATOR] */
extern T0* GE_new817(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
extern T0* GE_new818(T1 initialize);
/* New instance of type ET_CREATOR_LIST */
extern T0* GE_new819(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATOR_LIST] */
extern T0* GE_new820(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new821(T1 initialize);
/* New instance of type ET_DEBUG_INSTRUCTION */
extern T0* GE_new822(T1 initialize);
/* New instance of type SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new823(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
extern T0* GE_new824(T1 initialize);
/* New instance of type ET_ELSEIF_EXPRESSION */
extern T0* GE_new825(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
extern T0* GE_new826(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
extern T0* GE_new827(T1 initialize);
/* New instance of type ET_ELSEIF_EXPRESSION_LIST */
extern T0* GE_new828(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
extern T0* GE_new829(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
extern T0* GE_new830(T1 initialize);
/* New instance of type ET_ELSEIF_PART */
extern T0* GE_new831(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_PART] */
extern T0* GE_new832(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new833(T1 initialize);
/* New instance of type ET_ELSEIF_PART_LIST */
extern T0* GE_new834(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new835(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
extern T0* GE_new836(T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPORT] */
extern T0* GE_new838(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
extern T0* GE_new839(T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPORT_LIST] */
extern T0* GE_new840(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
extern T0* GE_new841(T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPRESSION] */
extern T0* GE_new842(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
extern T0* GE_new843(T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPRESSION_ITEM] */
extern T0* GE_new844(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new845(T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new846(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new847(T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new849(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new850(T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE */
extern T0* GE_new851(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new852(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new853(T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE_LIST */
extern T0* GE_new854(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new855(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new856(T1 initialize);
/* New instance of type ET_FEATURE_EXPORT */
extern T0* GE_new857(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new858(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
extern T0* GE_new859(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_NAME] */
extern T0* GE_new860(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new861(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new863(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new864(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new865(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new866(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new868(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new869(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new870(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new871(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER */
extern T0* GE_new872(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new873(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new874(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new876(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new877(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new878(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
extern T0* GE_new879(T1 initialize);
/* New instance of type ET_IF_EXPRESSION */
extern T0* GE_new880(T1 initialize);
/* New instance of type SPECIAL [detachable ET_IF_EXPRESSION] */
extern T0* GE_new881(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new882(T1 initialize);
/* New instance of type ET_IF_INSTRUCTION */
extern T0* GE_new883(T1 initialize);
/* New instance of type SPECIAL [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new884(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST] */
extern T0* GE_new885(T1 initialize);
/* New instance of type ET_INDEXING_LIST */
extern T0* GE_new886(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INDEXING_LIST] */
extern T0* GE_new887(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM] */
extern T0* GE_new888(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INDEXING_ITEM] */
extern T0* GE_new890(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM] */
extern T0* GE_new891(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INDEXING_TERM] */
extern T0* GE_new893(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM] */
extern T0* GE_new894(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INDEXING_TERM_ITEM] */
extern T0* GE_new896(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST] */
extern T0* GE_new897(T1 initialize);
/* New instance of type ET_INDEXING_TERM_LIST */
extern T0* GE_new898(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INDEXING_TERM_LIST] */
extern T0* GE_new899(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
extern T0* GE_new900(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_AGENT] */
extern T0* GE_new902(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new903(T1 initialize);
/* New instance of type ET_INSPECT_INSTRUCTION */
extern T0* GE_new904(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new905(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
extern T0* GE_new906(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INSTRUCTION] */
extern T0* GE_new908(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
extern T0* GE_new909(T1 initialize);
/* New instance of type ET_INVARIANTS */
extern T0* GE_new910(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INVARIANTS] */
extern T0* GE_new911(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new912(T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new913(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
extern T0* GE_new914(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LIKE_TYPE] */
extern T0* GE_new916(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new917(T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE */
extern T0* GE_new918(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new919(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new920(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new922(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new923(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new924(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new925(T1 initialize);
/* New instance of type ET_LOOP_INVARIANTS */
extern T0* GE_new926(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new927(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new928(T1 initialize);
/* New instance of type ET_MANIFEST_ARRAY */
extern T0* GE_new929(T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new930(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new931(T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new933(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new934(T1 initialize);
/* New instance of type ET_MANIFEST_STRING_LIST */
extern T0* GE_new935(T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new936(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new937(T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new938(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
extern T0* GE_new939(T1 initialize);
/* New instance of type SPECIAL [detachable ET_OBSOLETE] */
extern T0* GE_new941(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new942(T1 initialize);
/* New instance of type ET_PARENTHESIZED_EXPRESSION */
extern T0* GE_new943(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new944(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
extern T0* GE_new945(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT] */
extern T0* GE_new946(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
extern T0* GE_new947(T1 initialize);
/* New instance of type ET_PARENT_CLAUSE_LIST */
extern T0* GE_new948(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
extern T0* GE_new949(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
extern T0* GE_new950(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_ITEM] */
extern T0* GE_new951(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
extern T0* GE_new952(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_LIST] */
extern T0* GE_new953(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
extern T0* GE_new954(T1 initialize);
/* New instance of type ET_POSTCONDITIONS */
extern T0* GE_new955(T1 initialize);
/* New instance of type SPECIAL [detachable ET_POSTCONDITIONS] */
extern T0* GE_new956(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
extern T0* GE_new957(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PRECONDITIONS] */
extern T0* GE_new958(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
extern T0* GE_new959(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PROCEDURE] */
extern T0* GE_new960(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new961(T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new963(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
extern T0* GE_new964(T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUERY] */
extern T0* GE_new965(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
extern T0* GE_new966(T1 initialize);
/* New instance of type SPECIAL [detachable ET_RENAME_ITEM] */
extern T0* GE_new968(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
extern T0* GE_new969(T1 initialize);
/* New instance of type SPECIAL [detachable ET_RENAME_LIST] */
extern T0* GE_new970(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new971(T1 initialize);
/* New instance of type ET_STATIC_CALL_EXPRESSION */
extern T0* GE_new972(T1 initialize);
/* New instance of type SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new973(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new974(T1 initialize);
/* New instance of type ET_STRIP_EXPRESSION */
extern T0* GE_new975(T1 initialize);
/* New instance of type SPECIAL [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new976(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
extern T0* GE_new977(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
extern T0* GE_new978(T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_ITEM] */
extern T0* GE_new980(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
extern T0* GE_new981(T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_LIST] */
extern T0* GE_new983(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
extern T0* GE_new984(T1 initialize);
/* New instance of type ET_VARIANT */
extern T0* GE_new985(T1 initialize);
/* New instance of type SPECIAL [detachable ET_VARIANT] */
extern T0* GE_new986(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
extern T0* GE_new987(T1 initialize);
/* New instance of type ET_WHEN_PART */
extern T0* GE_new988(T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_PART] */
extern T0* GE_new989(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new990(T1 initialize);
/* New instance of type ET_WHEN_PART_LIST */
extern T0* GE_new991(T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new992(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
extern T0* GE_new993(T1 initialize);
/* New instance of type SPECIAL [detachable ET_WRITABLE] */
extern T0* GE_new994(T6 a1, T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
extern T0* GE_new995(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new996(T1 initialize);
/* New instance of type ET_PARENT_CHECKER1 */
extern T0* GE_new997(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER1 */
extern T0* GE_new998(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new999(T1 initialize);
/* New instance of type ET_FEATURE_NAME_TESTER */
extern T0* GE_new1000(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new1002(T1 initialize);
/* New instance of type ET_ALIAS_NAME_TESTER */
extern T0* GE_new1003(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLIENT_LIST] */
extern T0* GE_new1005(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1006(T1 initialize);
/* New instance of type ET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1007(T1 initialize);
/* New instance of type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1008(T1 initialize);
/* New instance of type ET_IDENTIFIER_TYPE_RESOLVER */
extern T0* GE_new1009(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
extern T0* GE_new1010(T1 initialize);
/* New instance of type ET_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1011(T1 initialize);
/* New instance of type ET_SIGNATURE_CHECKER */
extern T0* GE_new1012(T1 initialize);
/* New instance of type ET_PARENT_CHECKER2 */
extern T0* GE_new1013(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER2 */
extern T0* GE_new1014(T1 initialize);
/* New instance of type ET_BUILTIN_FEATURE_CHECKER */
extern T0* GE_new1015(T1 initialize);
/* New instance of type ET_PRECURSOR_CHECKER */
extern T0* GE_new1016(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
extern T0* GE_new1017(T1 initialize);
/* New instance of type DS_HASH_SET [ET_CLASS] */
extern T0* GE_new1018(T1 initialize);
/* New instance of type ET_PARENT_CHECKER3 */
extern T0* GE_new1019(T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1020(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
extern T0* GE_new1021(T1 initialize);
/* New instance of type ET_PARENT_FEATURE */
extern T0* GE_new1023(T1 initialize);
/* New instance of type ET_INHERITED_FEATURE */
extern T0* GE_new1024(T1 initialize);
/* New instance of type DS_HASH_SET [ET_PROCEDURE] */
extern T0* GE_new1025(T1 initialize);
/* New instance of type DS_HASH_SET [ET_QUERY] */
extern T0* GE_new1026(T1 initialize);
/* New instance of type ET_SUPPLIER_BUILDER */
extern T0* GE_new1027(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
extern T0* GE_new1028(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
extern T0* GE_new1029(T1 initialize);
/* New instance of type ET_SYSTEM_ERROR */
extern T0* GE_new1031(T1 initialize);
/* New instance of type ET_VALIDITY_ERROR */
extern T0* GE_new1032(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new1034(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new1035(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
extern T0* GE_new1036(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
extern T0* GE_new1037(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
extern T0* GE_new1039(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new1040(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new1041(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
extern T0* GE_new1042(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new1043(T1 initialize);
/* New instance of type SPECIAL [ET_OBJECT_TEST] */
extern T0* GE_new1045(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
extern T0* GE_new1046(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
extern T0* GE_new1047(T1 initialize);
/* New instance of type SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new1048(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new1049(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new1050(T1 initialize);
/* New instance of type SPECIAL [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new1051(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new1052(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new1053(T1 initialize);
/* New instance of type SPECIAL [ET_AGENT] */
extern T0* GE_new1054(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT] */
extern T0* GE_new1055(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
extern T0* GE_new1056(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new1058(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new1059(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new1060(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new1061(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE] */
extern T0* GE_new1063(T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE] */
extern T0* GE_new1064(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE] */
extern T0* GE_new1065(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
extern T0* GE_new1066(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
extern T0* GE_new1068(T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_CONSTANT] */
extern T0* GE_new1069(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
extern T0* GE_new1071(T1 initialize);
/* New instance of type SPECIAL [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new1072(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
extern T0* GE_new1074(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new1075(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
extern T0* GE_new1076(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
extern T0* GE_new1077(T1 initialize);
/* New instance of type RX_BYTE_CODE */
extern T0* GE_new1081(T1 initialize);
/* New instance of type RX_CHARACTER_SET */
extern T0* GE_new1082(T1 initialize);
/* New instance of type RX_CASE_MAPPING */
extern T0* GE_new1083(T1 initialize);
/* New instance of type ARRAY [RX_CHARACTER_SET] */
extern T0* GE_new1085(T1 initialize);
/* New instance of type SPECIAL [RX_CHARACTER_SET] */
extern T0* GE_new1086(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1088(T1 initialize);
/* New instance of type ARRAY [BOOLEAN] */
extern T0* GE_new1089(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
extern T0* GE_new1092(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
extern T0* GE_new1094(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new1095(T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new1096(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new1097(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new1098(T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new1099(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new1100(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new1101(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_FEATURE] */
extern T0* GE_new1102(T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new1103(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new1104(T1 initialize);
/* New instance of type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new1105(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new1106(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new1107(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1108(T1 initialize);
/* New instance of type ET_NAMED_OBJECT_TEST */
extern T0* GE_new1111(T1 initialize);
/* New instance of type SPECIAL [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1112(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1113(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1114(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
extern T0* GE_new1115(T1 initialize);
/* New instance of type SPECIAL [ET_ACROSS_COMPONENT] */
extern T0* GE_new1118(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT] */
extern T0* GE_new1119(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ACROSS_COMPONENT] */
extern T0* GE_new1120(T1 initialize);
/* New instance of type SPECIAL [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new1122(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new1123(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new1124(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_INDEXING_TERM] */
extern T0* GE_new1125(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE] */
extern T0* GE_new1126(T1 initialize);
/* New instance of type SPECIAL [ET_ASSERTIONS] */
extern T0* GE_new1127(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ASSERTIONS] */
extern T0* GE_new1129(T1 initialize);
/* New instance of type DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
extern T0* GE_new1130(T1 initialize);
/* New instance of type STRING_TO_INTEGER_CONVERTOR */
extern T0* GE_new1131(T1 initialize);
/* New instance of type ET_CLUSTERS */
extern T0* GE_new1133(T1 initialize);
/* New instance of type UC_UNICODE_ROUTINES */
extern T0* GE_new1134(T1 initialize);
/* New instance of type ET_XACE_FEATURE_OPTIONS */
extern T0* GE_new1135(T1 initialize);
/* New instance of type detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
extern T0* GE_new1136(T1 initialize);
/* New instance of type ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
extern T0* GE_new1137(T1 initialize);
/* New instance of type ET_XACE_MISSING_ATTRIBUTE_ERROR */
extern T0* GE_new1138(T1 initialize);
/* New instance of type ET_XACE_UNKNOWN_ELEMENT_ERROR */
extern T0* GE_new1139(T1 initialize);
/* New instance of type ET_XACE_MISSING_ELEMENT_ERROR */
extern T0* GE_new1140(T1 initialize);
/* New instance of type ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
extern T0* GE_new1141(T1 initialize);
/* New instance of type ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
extern T0* GE_new1142(T1 initialize);
/* New instance of type ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
extern T0* GE_new1143(T1 initialize);
/* New instance of type ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
extern T0* GE_new1144(T1 initialize);
/* New instance of type UT_TRISTATE */
extern T0* GE_new1147(T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ANY] */
extern T0* GE_new1148(T1 initialize);
/* New instance of type [attached] TUPLE [UT_TRISTATE] */
extern T0* GE_new1149(T1 initialize);
/* New instance of type [attached] TUPLE [KL_AGENT_ROUTINES [ANY], [attached] PROCEDURE [[attached] TUPLE]] */
extern T0* GE_new1150(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [ET_MASTER_CLASS]] */
extern T0* GE_new1151(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE] */
extern T0* GE_new1152(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]], detachable FUNCTION [[attached] TUPLE, BOOLEAN]] */
extern T0* GE_new1154(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]], FUNCTION [[attached] TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
extern T0* GE_new1155(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]], FUNCTION [[attached] TUPLE [ET_MASTER_CLASS], BOOLEAN], detachable FUNCTION [[attached] TUPLE, BOOLEAN]] */
extern T0* GE_new1156(T1 initialize);
/* New instance of type ET_ECF_CLUSTER */
extern T0* GE_new1157(T1 initialize);
/* New instance of type ET_ECF_CLUSTERS */
extern T0* GE_new1158(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_LIBRARIES */
extern T0* GE_new1159(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new1160(T1 initialize);
/* New instance of type ET_ECF_FILE_RULE */
extern T0* GE_new1161(T1 initialize);
/* New instance of type ET_ECF_FILE_RULES */
extern T0* GE_new1162(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_INCLUDE */
extern T0* GE_new1163(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_INCLUDES */
extern T0* GE_new1164(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_OBJECT */
extern T0* GE_new1165(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_OBJECTS */
extern T0* GE_new1166(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LIBRARY */
extern T0* GE_new1167(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LIBRARIES */
extern T0* GE_new1168(T1 initialize);
/* New instance of type ET_ECF_SETTINGS */
extern T0* GE_new1170(T1 initialize);
/* New instance of type ET_ECF_OPTIONS */
extern T0* GE_new1171(T1 initialize);
/* New instance of type ET_ECF_CONDITIONS */
extern T0* GE_new1172(T1 initialize);
/* New instance of type ET_ECF_ROOT_CLASS */
extern T0* GE_new1173(T1 initialize);
/* New instance of type ET_ECF_ROOT_ALL_CLASSES */
extern T0* GE_new1174(T1 initialize);
/* New instance of type ET_ECF_PLATFORM_CONDITION */
extern T0* GE_new1176(T1 initialize);
/* New instance of type ET_ECF_BUILD_CONDITION */
extern T0* GE_new1177(T1 initialize);
/* New instance of type ET_ECF_MULTITHREADED_CONDITION */
extern T0* GE_new1178(T1 initialize);
/* New instance of type ET_ECF_CONCURRENCY_CONDITION */
extern T0* GE_new1179(T1 initialize);
/* New instance of type ET_ECF_DOTNET_CONDITION */
extern T0* GE_new1180(T1 initialize);
/* New instance of type ET_ECF_DYNAMIC_RUNTIME_CONDITION */
extern T0* GE_new1181(T1 initialize);
/* New instance of type ET_ECF_CUSTOM_CONDITION */
extern T0* GE_new1182(T1 initialize);
/* New instance of type ET_ECF_COMPILER_VERSION_CONDITION */
extern T0* GE_new1184(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_SYSTEM] */
extern T0* GE_new1185(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_SYSTEM] */
extern T0* GE_new1186(T1 initialize);
/* New instance of type ET_PARENTHESIS_EXPRESSION */
extern T0* GE_new1187(T1 initialize);
/* New instance of type ET_REGULAR_MANIFEST_STRING */
extern T0* GE_new1191(T1 initialize);
/* New instance of type ET_INFIX_FREE_NAME */
extern T0* GE_new1192(T1 initialize);
/* New instance of type EXCEPTIONS */
extern T0* GE_new1195(T1 initialize);
/* New instance of type XM_LINKED_LIST [XM_DOCUMENT_NODE] */
extern T0* GE_new1196(T1 initialize);
/* New instance of type XM_LINKED_LIST [XM_ELEMENT_NODE] */
extern T0* GE_new1198(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new1202(T1 initialize);
/* New instance of type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new1203(T1 initialize);
/* New instance of type DS_PAIR [XM_POSITION, XM_NODE] */
extern T0* GE_new1204(T1 initialize);
/* New instance of type UC_UTF8_ROUTINES */
extern T0* GE_new1205(T1 initialize);
/* New instance of type UC_UTF8_STRING */
extern T0* GE_new1206(T1 initialize);
/* New instance of type XM_EIFFEL_INPUT_STREAM */
extern T0* GE_new1207(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1211(T1 initialize);
/* New instance of type KL_CHARACTER_BUFFER */
extern T0* GE_new1214(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_CLUSTER] */
extern T0* GE_new1215(T1 initialize);
/* New instance of type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
extern T0* GE_new1216(T1 initialize);
/* New instance of type KL_STRING_INPUT_STREAM */
extern T0* GE_new1217(T1 initialize);
/* New instance of type ET_TEXT_GROUP */
extern T0* GE_new1218(T1 initialize);
/* New instance of type ET_OBJECT_TEST_LIST */
extern T0* GE_new1221(T1 initialize);
/* New instance of type ET_ACROSS_COMPONENT_LIST */
extern T0* GE_new1222(T1 initialize);
/* New instance of type ET_C3_CHARACTER_CONSTANT */
extern T0* GE_new1223(T1 initialize);
/* New instance of type ET_VERBATIM_STRING */
extern T0* GE_new1224(T1 initialize);
/* New instance of type ET_SPECIAL_MANIFEST_STRING */
extern T0* GE_new1225(T1 initialize);
/* New instance of type ET_REGULAR_INTEGER_CONSTANT */
extern T0* GE_new1226(T1 initialize);
/* New instance of type ET_UNDERSCORED_INTEGER_CONSTANT */
extern T0* GE_new1227(T1 initialize);
/* New instance of type ET_HEXADECIMAL_INTEGER_CONSTANT */
extern T0* GE_new1228(T1 initialize);
/* New instance of type ET_OCTAL_INTEGER_CONSTANT */
extern T0* GE_new1229(T1 initialize);
/* New instance of type ET_BINARY_INTEGER_CONSTANT */
extern T0* GE_new1230(T1 initialize);
/* New instance of type ET_REGULAR_REAL_CONSTANT */
extern T0* GE_new1231(T1 initialize);
/* New instance of type ET_UNDERSCORED_REAL_CONSTANT */
extern T0* GE_new1232(T1 initialize);
/* New instance of type ET_TRUE_CONSTANT */
extern T0* GE_new1234(T1 initialize);
/* New instance of type ET_FALSE_CONSTANT */
extern T0* GE_new1235(T1 initialize);
/* New instance of type ET_C1_CHARACTER_CONSTANT */
extern T0* GE_new1236(T1 initialize);
/* New instance of type ET_C2_CHARACTER_CONSTANT */
extern T0* GE_new1237(T1 initialize);
/* New instance of type ET_TAGGED_INDEXING */
extern T0* GE_new1239(T1 initialize);
/* New instance of type ET_INDEXING */
extern T0* GE_new1240(T1 initialize);
/* New instance of type ET_CUSTOM_ATTRIBUTE */
extern T0* GE_new1241(T1 initialize);
/* New instance of type ET_CONSTRAINED_FORMAL_PARAMETER */
extern T0* GE_new1242(T1 initialize);
/* New instance of type ET_CONSTRAINT_NAMED_TYPE */
extern T0* GE_new1243(T1 initialize);
/* New instance of type ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD */
extern T0* GE_new1244(T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new1245(T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new1246(T1 initialize);
/* New instance of type ET_RENAME */
extern T0* GE_new1247(T1 initialize);
/* New instance of type ET_ALL_EXPORT */
extern T0* GE_new1248(T1 initialize);
/* New instance of type ET_CONVERT_FUNCTION */
extern T0* GE_new1250(T1 initialize);
/* New instance of type ET_CONVERT_PROCEDURE */
extern T0* GE_new1251(T1 initialize);
/* New instance of type ET_DO_FUNCTION */
extern T0* GE_new1253(T1 initialize);
/* New instance of type ET_ONCE_FUNCTION */
extern T0* GE_new1254(T1 initialize);
/* New instance of type ET_DEFERRED_FUNCTION */
extern T0* GE_new1255(T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE */
extern T0* GE_new1257(T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE */
extern T0* GE_new1258(T1 initialize);
/* New instance of type ET_PREFIX_NAME */
extern T0* GE_new1259(T1 initialize);
/* New instance of type ET_PREFIX_FREE_NAME */
extern T0* GE_new1260(T1 initialize);
/* New instance of type ET_INFIX_NAME */
extern T0* GE_new1261(T1 initialize);
/* New instance of type ET_ALIASED_FEATURE_NAME */
extern T0* GE_new1262(T1 initialize);
/* New instance of type ET_ALIAS_FREE_NAME */
extern T0* GE_new1263(T1 initialize);
/* New instance of type ET_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new1266(T1 initialize);
/* New instance of type ET_LIKE_FEATURE */
extern T0* GE_new1268(T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_BRACED_TYPE */
extern T0* GE_new1269(T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_TYPE */
extern T0* GE_new1270(T1 initialize);
/* New instance of type ET_ASSIGNER_INSTRUCTION */
extern T0* GE_new1271(T1 initialize);
/* New instance of type ET_ASSIGNMENT */
extern T0* GE_new1272(T1 initialize);
/* New instance of type ET_ASSIGNMENT_ATTEMPT */
extern T0* GE_new1273(T1 initialize);
/* New instance of type ET_LOOP_INSTRUCTION */
extern T0* GE_new1274(T1 initialize);
/* New instance of type ET_NULL_INSTRUCTION */
extern T0* GE_new1275(T1 initialize);
/* New instance of type ET_BANG_INSTRUCTION */
extern T0* GE_new1276(T1 initialize);
/* New instance of type ET_CREATE_INSTRUCTION */
extern T0* GE_new1277(T1 initialize);
/* New instance of type ET_CHOICE_RANGE */
extern T0* GE_new1278(T1 initialize);
/* New instance of type ET_PRECURSOR_INSTRUCTION */
extern T0* GE_new1279(T1 initialize);
/* New instance of type ET_STATIC_CALL_INSTRUCTION */
extern T0* GE_new1281(T1 initialize);
/* New instance of type ET_PRECURSOR_EXPRESSION */
extern T0* GE_new1282(T1 initialize);
/* New instance of type ET_FEATURE_ADDRESS */
extern T0* GE_new1283(T1 initialize);
/* New instance of type ET_CURRENT_ADDRESS */
extern T0* GE_new1284(T1 initialize);
/* New instance of type ET_RESULT_ADDRESS */
extern T0* GE_new1285(T1 initialize);
/* New instance of type ET_EXPRESSION_ADDRESS */
extern T0* GE_new1286(T1 initialize);
/* New instance of type ET_INFIX_EXPRESSION */
extern T0* GE_new1287(T1 initialize);
/* New instance of type ET_INFIX_AND_THEN_OPERATOR */
extern T0* GE_new1288(T1 initialize);
/* New instance of type ET_INFIX_OR_ELSE_OPERATOR */
extern T0* GE_new1289(T1 initialize);
/* New instance of type ET_MANIFEST_TYPE */
extern T0* GE_new1290(T1 initialize);
/* New instance of type ET_PREFIX_EXPRESSION */
extern T0* GE_new1291(T1 initialize);
/* New instance of type ET_OLD_EXPRESSION */
extern T0* GE_new1292(T1 initialize);
/* New instance of type ET_OLD_OBJECT_TEST */
extern T0* GE_new1293(T1 initialize);
/* New instance of type ET_ONCE_MANIFEST_STRING */
extern T0* GE_new1294(T1 initialize);
/* New instance of type ET_DO_FUNCTION_INLINE_AGENT */
extern T0* GE_new1295(T1 initialize);
/* New instance of type ET_ONCE_FUNCTION_INLINE_AGENT */
extern T0* GE_new1296(T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
extern T0* GE_new1297(T1 initialize);
/* New instance of type ET_DO_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1298(T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1299(T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1300(T1 initialize);
/* New instance of type ET_AGENT_OPEN_TARGET */
extern T0* GE_new1301(T1 initialize);
/* New instance of type ET_AGENT_TYPED_OPEN_ARGUMENT */
extern T0* GE_new1302(T1 initialize);
/* New instance of type ET_TAGGED_ASSERTION */
extern T0* GE_new1304(T1 initialize);
/* New instance of type ET_FILE_POSITION */
extern T0* GE_new1305(T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_QUERY] */
extern T0* GE_new1306(T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_PROCEDURE] */
extern T0* GE_new1307(T1 initialize);
/* New instance of type ET_REDECLARED_FEATURE */
extern T0* GE_new1309(T1 initialize);
/* New instance of type ET_FEATURE_IDS */
extern T0* GE_new1310(T1 initialize);
/* New instance of type CONSOLE */
extern T0* GE_new1316(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new1317(T1 initialize);
/* New instance of type ET_LIKE_N */
extern T0* GE_new1319(T1 initialize);
/* New instance of type SPECIAL [ET_BASE_TYPE] */
extern T0* GE_new1320(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
extern T0* GE_new1321(T1 initialize);
/* New instance of type ARRAY [IMMUTABLE_STRING_32] */
extern T0* GE_new1322(T1 initialize);
/* New instance of type SPECIAL [IMMUTABLE_STRING_32] */
extern T0* GE_new1323(T6 a1, T1 initialize);
/* New instance of type detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
extern T0* GE_new1324(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
extern T0* GE_new1325(T1 initialize);
/* New instance of type [attached] TUPLE [ET_XACE_CLUSTER] */
extern T0* GE_new1326(T1 initialize);
/* New instance of type SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new1327(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new1328(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new1329(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
extern T0* GE_new1331(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1333(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1334(T1 initialize);
/* New instance of type SPECIAL [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1335(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1337(T1 initialize);
/* New instance of type ET_BRACED_TYPE_LIST */
extern T0* GE_new1339(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_MASTER_CLASS] */
extern T0* GE_new1340(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_UNIVERSE] */
extern T0* GE_new1341(T1 initialize);
/* New instance of type SPECIAL [ET_UNIVERSE] */
extern T0* GE_new1342(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
extern T0* GE_new1344(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1345(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1347(T1 initialize);
/* New instance of type SPECIAL [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1348(T6 a1, T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER1 */
extern T0* GE_new1349(T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER2 */
extern T0* GE_new1350(T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
extern T0* GE_new1351(T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER3 */
extern T0* GE_new1352(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
extern T0* GE_new1353(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [YY_BUFFER] */
extern T0* GE_new1354(T1 initialize);
/* New instance of type UT_SYNTAX_ERROR */
extern T0* GE_new1355(T1 initialize);
/* New instance of type UT_TOO_MANY_INCLUDES_ERROR */
extern T0* GE_new1356(T1 initialize);
/* New instance of type ET_DYNAMIC_TARGET_LIST */
extern T0* GE_new1358(T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER_CONTEXT */
extern T0* GE_new1359(T1 initialize);
/* New instance of type DS_LINKED_QUEUE [STRING_8] */
extern T0* GE_new1361(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [XM_NAMESPACE] */
extern T0* GE_new1362(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
extern T0* GE_new1363(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
extern T0* GE_new1364(T1 initialize);
/* New instance of type SPECIAL [XM_NAMESPACE] */
extern T0* GE_new1365(T6 a1, T1 initialize);
/* New instance of type XM_EIFFEL_CHARACTER_ENTITY */
extern T0* GE_new1366(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [XM_POSITION] */
extern T0* GE_new1367(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
extern T0* GE_new1368(T1 initialize);
/* New instance of type detachable DS_LINKABLE [XM_EIFFEL_SCANNER] */
extern T0* GE_new1369(T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1370(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
extern T0* GE_new1373(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1374(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1375(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1376(T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1377(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1378(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1379(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [STRING_8] */
extern T0* GE_new1380(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [STRING_8] */
extern T0* GE_new1381(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_TARGET] */
extern T0* GE_new1382(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
extern T0* GE_new1383(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
extern T0* GE_new1384(T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1385(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1386(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1387(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_LIBRARY] */
extern T0* GE_new1388(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIBRARY] */
extern T0* GE_new1389(T1 initialize);
/* New instance of type SPECIAL [ET_LIBRARY] */
extern T0* GE_new1390(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1391(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1392(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1393(T1 initialize);
/* New instance of type SPECIAL [NATIVE_STRING] */
extern T0* GE_new1394(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
extern T0* GE_new1395(T1 initialize);
/* New instance of type SPECIAL [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1396(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1397(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new1398(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new1399(T1 initialize);
/* New instance of type SPECIAL [ET_ASSERTION_ITEM] */
extern T0* GE_new1400(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
extern T0* GE_new1401(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
extern T0* GE_new1402(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
extern T0* GE_new1403(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
extern T0* GE_new1404(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1405(T1 initialize);
/* New instance of type SPECIAL [ET_NAMED_CLASS] */
extern T0* GE_new1406(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
extern T0* GE_new1408(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
extern T0* GE_new1410(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new1411(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
extern T0* GE_new1414(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
extern T0* GE_new1415(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_TYPE */
extern T0* GE_new1416(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new1417(T1 initialize);
/* New instance of type SPECIAL [ET_FLATTENED_FEATURE] */
extern T0* GE_new1418(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
extern T0* GE_new1421(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new1423(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
extern T0* GE_new1424(T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT_LIST] */
extern T0* GE_new1425(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
extern T0* GE_new1426(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1428(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT] */
extern T0* GE_new1429(T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT] */
extern T0* GE_new1430(T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME] */
extern T0* GE_new1431(T1 initialize);
/* New instance of type ET_CALL_NAME_TESTER */
extern T0* GE_new1432(T1 initialize);
/* New instance of type DS_HASH_SET [ET_CALL_NAME] */
extern T0* GE_new1434(T1 initialize);
/* New instance of type DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME] */
extern T0* GE_new1435(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME] */
extern T0* GE_new1436(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new1437(T1 initialize);
/* New instance of type ET_REPLICATED_FEATURE */
extern T0* GE_new1439(T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
extern T0* GE_new1440(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
extern T0* GE_new1441(T1 initialize);
/* New instance of type ET_DOTNET_SIGNATURE_TESTER */
extern T0* GE_new1442(T1 initialize);
/* New instance of type DS_HASH_SET [ET_DOTNET_FEATURE] */
extern T0* GE_new1443(T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new1445(T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
extern T0* GE_new1447(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
extern T0* GE_new1448(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
extern T0* GE_new1449(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
extern T0* GE_new1450(T1 initialize);
/* New instance of type detachable DS_LINKED_LIST [ET_PARENT_FEATURE] */
extern T0* GE_new1451(T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
extern T0* GE_new1452(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
extern T0* GE_new1453(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_CLASS] */
extern T0* GE_new1456(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_PROCEDURE] */
extern T0* GE_new1458(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_QUERY] */
extern T0* GE_new1459(T1 initialize);
/* New instance of type SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1460(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1461(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1462(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1464(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT] */
extern T0* GE_new1465(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [NATURAL_8] */
extern T0* GE_new1468(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
extern T0* GE_new1469(T1 initialize);
/* New instance of type STRING_8_SEARCHER */
extern T0* GE_new1470(T1 initialize);
/* New instance of type detachable ARRAYED_LIST [INTEGER_32] */
extern T0* GE_new1471(T1 initialize);
/* New instance of type ET_XACE_INVALID_EXPRESSION_ERROR */
extern T0* GE_new1473(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
extern T0* GE_new1476(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
extern T0* GE_new1477(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1478(T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ET_UNIVERSE] */
extern T0* GE_new1479(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [ET_UNIVERSE]] */
extern T0* GE_new1480(T1 initialize);
/* New instance of type [attached] TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
extern T0* GE_new1481(T1 initialize);
/* New instance of type [attached] TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], [attached] PREDICATE [[attached] TUPLE [ET_UNIVERSE]]] */
extern T0* GE_new1482(T1 initialize);
/* New instance of type KL_AGENT_HASH_FUNCTION [STRING_8] */
extern T0* GE_new1485(T1 initialize);
/* New instance of type [attached] TUPLE [STRING_8] */
extern T0* GE_new1486(T1 initialize);
/* New instance of type [attached] FUNCTION [[attached] TUPLE [STRING_8], INTEGER_32] */
extern T0* GE_new1487(T1 initialize);
/* New instance of type [attached] TUPLE [KL_STRING_ROUTINES] */
extern T0* GE_new1488(T1 initialize);
/* New instance of type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
extern T0* GE_new1489(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
extern T0* GE_new1491(T1 initialize);
/* New instance of type XM_COMMENT */
extern T0* GE_new1492(T1 initialize);
/* New instance of type XM_PROCESSING_INSTRUCTION */
extern T0* GE_new1493(T1 initialize);
/* New instance of type XM_CHARACTER_DATA */
extern T0* GE_new1494(T1 initialize);
/* New instance of type detachable DS_CELL [detachable ET_CLASS] */
extern T0* GE_new1496(T1 initialize);
/* New instance of type [attached] TUPLE [detachable DS_CELL [detachable ET_CLASS]] */
extern T0* GE_new1497(T1 initialize);
/* New instance of type [attached] TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new1498(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLUSTER] */
extern T0* GE_new1499(T1 initialize);
/* New instance of type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
extern T0* GE_new1503(T1 initialize);
/* New instance of type ET_UNQUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new1504(T1 initialize);
/* New instance of type ET_SEEDED_QUERY_COMPARATOR */
extern T0* GE_new1507(T1 initialize);
/* New instance of type ET_SEEDED_PROCEDURE_COMPARATOR */
extern T0* GE_new1510(T1 initialize);
/* New instance of type [attached] TUPLE [ET_CLIENT_LIST] */
extern T0* GE_new1514(T1 initialize);
/* New instance of type ET_FORMAL_COMMA_ARGUMENT */
extern T0* GE_new1516(T1 initialize);
/* New instance of type ET_LOCAL_COMMA_VARIABLE */
extern T0* GE_new1517(T1 initialize);
/* New instance of type ET_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new1518(T1 initialize);
/* New instance of type ET_KEYWORD_EXPRESSION */
extern T0* GE_new1520(T1 initialize);
/* New instance of type ET_CLUSTER_ERROR */
extern T0* GE_new1522(T1 initialize);
/* New instance of type ET_SYNTAX_ERROR */
extern T0* GE_new1523(T1 initialize);
/* New instance of type [attached] TUPLE [ET_MASTER_CLASS, ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1530(T1 initialize);
/* New instance of type HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
extern T0* GE_new1536(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_CURRENT_TARGET */
extern T0* GE_new1540(T1 initialize);
/* New instance of type detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1550(T1 initialize);
/* New instance of type INTEGER_OVERFLOW_CHECKER */
extern T0* GE_new1557(T1 initialize);
/* New instance of type SPECIAL [ARRAY [INTEGER_32]] */
extern T0* GE_new1558(T6 a1, T1 initialize);
/* New instance of type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
extern T0* GE_new1559(T6 a1, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
extern T0* GE_new1560(T1 initialize);
/* New instance of type detachable DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
extern T0* GE_new1561(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
extern T0* GE_new1562(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1563(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1564(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1565(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
extern T0* GE_new1566(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1567(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1568(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1569(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_CONDITION] */
extern T0* GE_new1570(T1 initialize);
/* New instance of type detachable DS_LINKABLE [XM_DOCUMENT_NODE] */
extern T0* GE_new1572(T1 initialize);
/* New instance of type DS_LINKED_QUEUE [CHARACTER_8] */
extern T0* GE_new1577(T1 initialize);
/* New instance of type UC_UTF16_ROUTINES */
extern T0* GE_new1578(T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1579(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1580(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1581(T1 initialize);
/* New instance of type LX_DFA_WILDCARD */
extern T0* GE_new1582(T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
extern T0* GE_new1583(T1 initialize);
/* New instance of type ET_STANDARD_ONCE_KEYS */
extern T0* GE_new1585(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
extern T0* GE_new1587(T1 initialize);
/* New instance of type detachable DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
extern T0* GE_new1588(T1 initialize);
/* New instance of type SPECIAL [ET_XACE_CLUSTER] */
extern T0* GE_new1589(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
extern T0* GE_new1590(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
extern T0* GE_new1591(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1592(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
extern T0* GE_new1593(T1 initialize);
/* New instance of type SPECIAL [YY_BUFFER] */
extern T0* GE_new1595(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [YY_BUFFER] */
extern T0* GE_new1596(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TARGET] */
extern T0* GE_new1597(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
extern T0* GE_new1598(T1 initialize);
/* New instance of type DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new1600(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new1601(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1602(T1 initialize);
/* New instance of type attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1603(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
extern T0* GE_new1604(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
extern T0* GE_new1605(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
extern T0* GE_new1606(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME] */
extern T0* GE_new1607(T1 initialize);
/* New instance of type SPECIAL [ET_RENAME] */
extern T0* GE_new1608(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_CALL_NAME] */
extern T0* GE_new1613(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RENAME] */
extern T0* GE_new1614(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
extern T0* GE_new1615(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_CALL_NAME] */
extern T0* GE_new1616(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME] */
extern T0* GE_new1617(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME] */
extern T0* GE_new1620(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new1621(T1 initialize);
/* New instance of type SPECIAL [ET_REPLICABLE_FEATURE] */
extern T0* GE_new1622(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
extern T0* GE_new1624(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
extern T0* GE_new1625(T1 initialize);
/* New instance of type detachable DS_LINKABLE [ET_ADAPTED_FEATURE] */
extern T0* GE_new1626(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
extern T0* GE_new1627(T1 initialize);
/* New instance of type SPECIAL [ET_PARENT_FEATURE] */
extern T0* GE_new1628(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
extern T0* GE_new1629(T1 initialize);
/* New instance of type SPECIAL [ET_DOTNET_FEATURE] */
extern T0* GE_new1630(T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
extern T0* GE_new1631(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
extern T0* GE_new1632(T1 initialize);
/* New instance of type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new1633(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new1636(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new1637(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
extern T0* GE_new1638(T1 initialize);
/* New instance of type detachable DS_LINKABLE [ET_DOTNET_FEATURE] */
extern T0* GE_new1639(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
extern T0* GE_new1640(T1 initialize);
/* New instance of type SPECIAL [ET_LIKE_FEATURE] */
extern T0* GE_new1641(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
extern T0* GE_new1642(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
extern T0* GE_new1643(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
extern T0* GE_new1645(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
extern T0* GE_new1646(T1 initialize);
/* New instance of type DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
extern T0* GE_new1647(T1 initialize);
/* New instance of type SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
extern T0* GE_new1648(T6 a1, T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_ERROR */
extern T0* GE_new1649(T1 initialize);
/* New instance of type [attached] TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1650(T1 initialize);
/* New instance of type [attached] TUPLE [ET_XACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1651(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1652(T1 initialize);
/* New instance of type KL_CHARACTER_ROUTINES */
extern T0* GE_new1661(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
extern T0* GE_new1662(T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_SUBLIST */
extern T0* GE_new1663(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new1664(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new1669(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new1670(T1 initialize);
/* New instance of type ET_PARENTHESIS_INSTRUCTION */
extern T0* GE_new1671(T1 initialize);
/* New instance of type ET_PARENTHESIS_SYMBOL */
extern T0* GE_new1675(T1 initialize);
/* New instance of type ET_INFIX_CAST_EXPRESSION */
extern T0* GE_new1681(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new1693(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ASSERTIONS] */
extern T0* GE_new1694(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [ET_ASSERTIONS]] */
extern T0* GE_new1695(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
extern T0* GE_new1697(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
extern T0* GE_new1698(T1 initialize);
/* New instance of type detachable DS_LINKABLE [XM_ELEMENT_NODE] */
extern T0* GE_new1704(T1 initialize);
/* New instance of type [attached] TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8] */
extern T0* GE_new1705(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1710(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
extern T0* GE_new1711(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_INTERNAL_UNIVERSE, ET_ECF_STATE] */
extern T0* GE_new1712(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1713(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
extern T0* GE_new1714(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1715(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
extern T0* GE_new1716(T1 initialize);
/* New instance of type detachable DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new1717(T1 initialize);
/* New instance of type [attached] TUPLE [LX_WILDCARD] */
extern T0* GE_new1718(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [LX_WILDCARD]] */
extern T0* GE_new1719(T1 initialize);
/* New instance of type [attached] TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
extern T0* GE_new1720(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [STRING_8]] */
extern T0* GE_new1722(T1 initialize);
/* New instance of type [attached] TUPLE [KL_STRING_ROUTINES, STRING_8] */
extern T0* GE_new1723(T1 initialize);
/* New instance of type SPECIAL [ET_CLUSTER] */
extern T0* GE_new1728(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLUSTER] */
extern T0* GE_new1729(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
extern T0* GE_new1730(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
extern T0* GE_new1732(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1733(T1 initialize);
/* New instance of type SPECIAL [NATURAL_64] */
extern T0* GE_new1735(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_CLUSTER] */
extern T0* GE_new1736(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
extern T0* GE_new1737(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
extern T0* GE_new1738(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1739(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1740(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1741(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1742(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1743(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1744(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1745(T1 initialize);
/* New instance of type SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1746(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1747(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
extern T0* GE_new1748(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_FILE_RULE] */
extern T0* GE_new1749(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
extern T0* GE_new1750(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1751(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1752(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1753(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1754(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1755(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1756(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1757(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1758(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1759(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_CONDITION] */
extern T0* GE_new1760(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_CONDITION] */
extern T0* GE_new1761(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION] */
extern T0* GE_new1762(T1 initialize);
/* New instance of type detachable DS_LINKABLE [CHARACTER_8] */
extern T0* GE_new1763(T1 initialize);
/* New instance of type LX_WILDCARD_PARSER */
extern T0* GE_new1764(T1 initialize);
/* New instance of type LX_DESCRIPTION */
extern T0* GE_new1765(T1 initialize);
/* New instance of type LX_FULL_DFA */
extern T0* GE_new1766(T1 initialize);
/* New instance of type SPECIAL [LX_WILDCARD] */
extern T0* GE_new1768(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_WILDCARD] */
extern T0* GE_new1771(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new1772(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
extern T0* GE_new1774(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
extern T0* GE_new1776(T1 initialize);
/* New instance of type SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
extern T0* GE_new1777(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
extern T0* GE_new1780(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
extern T0* GE_new1781(T1 initialize);
/* New instance of type CHARACTER_PROPERTY */
extern T0* GE_new1782(T1 initialize);
/* New instance of type [attached] TUPLE [ET_GROUP] */
extern T0* GE_new1783(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]], [attached] PREDICATE [[attached] TUPLE [ET_CLASS]]] */
extern T0* GE_new1784(T1 initialize);
/* New instance of type AP_OPTION_COMPARATOR */
extern T0* GE_new1785(T1 initialize);
/* New instance of type DS_QUICK_SORTER [AP_OPTION] */
extern T0* GE_new1786(T1 initialize);
/* New instance of type ET_DYNAMIC_EQUALITY_EXPRESSION */
extern T0* GE_new1793(T1 initialize);
/* New instance of type ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new1794(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1795(T1 initialize);
/* New instance of type ET_UNIVERSE_ERROR */
extern T0* GE_new1796(T1 initialize);
/* New instance of type ET_CONVERT_BUILTIN_EXPRESSION */
extern T0* GE_new1800(T1 initialize);
/* New instance of type ET_CONVERT_FROM_EXPRESSION */
extern T0* GE_new1801(T1 initialize);
/* New instance of type ET_CONVERT_TO_EXPRESSION */
extern T0* GE_new1802(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
extern T0* GE_new1808(T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new1811(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new1812(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_RULE] */
extern T0* GE_new1813(T1 initialize);
/* New instance of type LX_START_CONDITIONS */
extern T0* GE_new1814(T1 initialize);
/* New instance of type LX_ACTION_FACTORY */
extern T0* GE_new1815(T1 initialize);
/* New instance of type LX_SYMBOL_CLASS */
extern T0* GE_new1816(T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8] */
extern T0* GE_new1817(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
extern T0* GE_new1818(T1 initialize);
/* New instance of type SPECIAL [LX_SYMBOL_CLASS] */
extern T0* GE_new1819(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_NFA] */
extern T0* GE_new1820(T1 initialize);
/* New instance of type LX_NFA */
extern T0* GE_new1821(T1 initialize);
/* New instance of type SPECIAL [LX_NFA] */
extern T0* GE_new1822(T6 a1, T1 initialize);
/* New instance of type LX_EQUIVALENCE_CLASSES */
extern T0* GE_new1823(T1 initialize);
/* New instance of type LX_RULE */
extern T0* GE_new1824(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8] */
extern T0* GE_new1825(T1 initialize);
/* New instance of type LX_UNRECOGNIZED_RULE_ERROR */
extern T0* GE_new1826(T1 initialize);
/* New instance of type LX_MISSING_QUOTE_ERROR */
extern T0* GE_new1827(T1 initialize);
/* New instance of type LX_BAD_CHARACTER_CLASS_ERROR */
extern T0* GE_new1828(T1 initialize);
/* New instance of type LX_BAD_CHARACTER_ERROR */
extern T0* GE_new1829(T1 initialize);
/* New instance of type LX_FULL_AND_META_ERROR */
extern T0* GE_new1830(T1 initialize);
/* New instance of type LX_FULL_AND_REJECT_ERROR */
extern T0* GE_new1831(T1 initialize);
/* New instance of type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
extern T0* GE_new1832(T1 initialize);
/* New instance of type LX_CHARACTER_OUT_OF_RANGE_ERROR */
extern T0* GE_new1833(T1 initialize);
/* New instance of type ARRAY [LX_RULE] */
extern T0* GE_new1834(T1 initialize);
/* New instance of type SPECIAL [LX_RULE] */
extern T0* GE_new1835(T6 a1, T1 initialize);
/* New instance of type LX_DFA_STATE */
extern T0* GE_new1836(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_NFA_STATE] */
extern T0* GE_new1837(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_DFA_STATE] */
extern T0* GE_new1838(T1 initialize);
/* New instance of type LX_SYMBOL_PARTITIONS */
extern T0* GE_new1839(T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [LX_RULE] */
extern T0* GE_new1840(T1 initialize);
/* New instance of type LX_START_CONDITION */
extern T0* GE_new1841(T1 initialize);
/* New instance of type LX_TRANSITION_TABLE [LX_DFA_STATE] */
extern T0* GE_new1842(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_NFA] */
extern T0* GE_new1843(T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_NFA, INTEGER_32] */
extern T0* GE_new1844(T1 initialize);
/* New instance of type LX_NFA_STATE */
extern T0* GE_new1845(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_LIBRARY] */
extern T0* GE_new1849(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_CLUSTER] */
extern T0* GE_new1852(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_ECF_CLUSTER]] */
extern T0* GE_new1853(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
extern T0* GE_new1854(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_FILE_RULE] */
extern T0* GE_new1855(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_ECF_FILE_RULE]] */
extern T0* GE_new1856(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_FILE_RULES] */
extern T0* GE_new1857(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [ET_ECF_FILE_RULE]] */
extern T0* GE_new1858(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_STATE] */
extern T0* GE_new1859(T1 initialize);
/* New instance of type detachable DS_LINKABLE [ET_PARENT_FEATURE] */
extern T0* GE_new1861(T1 initialize);
/* New instance of type ET_AST_NULL_LEAF */
extern T0* GE_new1863(T1 initialize);
/* New instance of type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
extern T0* GE_new1864(T1 initialize);
/* New instance of type SPECIAL [NATURAL_16] */
extern T0* GE_new1865(T6 a1, T1 initialize);
/* New instance of type SPECIAL [NATURAL_32] */
extern T0* GE_new1866(T6 a1, T1 initialize);
/* New instance of type ARRAY [NATURAL_16] */
extern T0* GE_new1867(T1 initialize);
/* New instance of type ARRAY [NATURAL_32] */
extern T0* GE_new1868(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1869(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1870(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1871(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_RULE] */
extern T0* GE_new1872(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_RULE] */
extern T0* GE_new1873(T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [STRING_8] */
extern T0* GE_new1874(T1 initialize);
/* New instance of type SPECIAL [LX_START_CONDITION] */
extern T0* GE_new1875(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
extern T0* GE_new1876(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
extern T0* GE_new1877(T1 initialize);
/* New instance of type LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new1880(T1 initialize);
/* New instance of type LX_EPSILON_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new1882(T1 initialize);
/* New instance of type LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new1884(T1 initialize);
/* New instance of type ARRAY [DS_BILINKABLE [INTEGER_32]] */
extern T0* GE_new1885(T1 initialize);
/* New instance of type DS_BILINKABLE [INTEGER_32] */
extern T0* GE_new1886(T1 initialize);
/* New instance of type SPECIAL [DS_BILINKABLE [INTEGER_32]] */
extern T0* GE_new1887(T6 a1, T1 initialize);
/* New instance of type LX_ACTION */
extern T0* GE_new1889(T1 initialize);
/* New instance of type DS_BUBBLE_SORTER [LX_NFA_STATE] */
extern T0* GE_new1890(T1 initialize);
/* New instance of type DS_BUBBLE_SORTER [LX_RULE] */
extern T0* GE_new1892(T1 initialize);
/* New instance of type SPECIAL [LX_NFA_STATE] */
extern T0* GE_new1894(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
extern T0* GE_new1896(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
extern T0* GE_new1897(T1 initialize);
/* New instance of type SPECIAL [LX_DFA_STATE] */
extern T0* GE_new1899(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
extern T0* GE_new1900(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
extern T0* GE_new1901(T1 initialize);
/* New instance of type KL_ARRAY [LX_RULE] */
extern T0* GE_new1902(T1 initialize);
/* New instance of type ARRAY [detachable LX_DFA_STATE] */
extern T0* GE_new1903(T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [detachable LX_DFA_STATE] */
extern T0* GE_new1904(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_NFA] */
extern T0* GE_new1905(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
extern T0* GE_new1907(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1908(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1909(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1910(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_DOTNET_GAC_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1911(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1912(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1913(T1 initialize);
/* New instance of type DS_SHELL_SORTER [INTEGER_32] */
extern T0* GE_new1917(T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [LX_RULE] */
extern T0* GE_new1918(T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
extern T0* GE_new1921(T1 initialize);
/* New instance of type KL_ARRAY [STRING_8] */
extern T0* GE_new1924(T1 initialize);
/* New instance of type [attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1925(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
extern T0* GE_new1926(T1 initialize);
/* GEC.execute */
extern T0* T24c39(GE_context* ac);
/* GEC.report_cannot_read_error */
extern void T24f45(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error */
extern void T34f175(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T34f178(GE_context* ac, T0* C, T0* a1);
/* MUTEX.unlock */
extern void T131f12(GE_context* ac, T0* C);
/* MUTEX.eif_thr_mutex_unlock */
extern void T131f15(GE_context* ac, T0* C, T14 a1);
/* MUTEX.default_pointer */
extern T14 T131f5(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.set_has_error */
extern void T34f179(GE_context* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T34f178p1(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_line */
extern void T134f6(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_new_line */
extern void T134f9(GE_context* ac, T0* C);
/* KL_STDERR_FILE.put_string */
extern void T134f7(GE_context* ac, T0* C, T0* a1);
/* CONSOLE.put_string */
extern void T1316f21(GE_context* ac, T0* C, T0* a1);
/* CONSOLE.console_ps */
extern void T1316f26(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDERR_FILE.console */
extern T0* T134f2(GE_context* ac, T0* C);
/* STD_FILES.error */
extern T0* T378f4(GE_context* ac, T0* C);
/* CONSOLE.make_open_stderr */
extern T0* T1316c23(GE_context* ac, T0* a1);
/* CONSOLE.set_write_mode */
extern void T1316f25(GE_context* ac, T0* C);
/* CONSOLE.console_def */
extern T14 T1316f12(GE_context* ac, T0* C, T6 a1);
/* CONSOLE.make_with_name */
extern void T1316f24(GE_context* ac, T0* C, T0* a1);
/* STRING_8.make_empty */
extern T0* T17c50(GE_context* ac);
/* STRING_8.make */
extern void T17f45(GE_context* ac, T0* C, T6 a1);
/* STRING_8.make */
extern T0* T17c45(GE_context* ac, T6 a1);
/* SPECIAL [CHARACTER_8].make_filled */
extern T0* T15c12(GE_context* ac, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].fill_with */
extern void T15f14(GE_context* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].extend */
extern void T15f16(GE_context* ac, T0* C, T2 a1);
/* INTEGER_32.min */
extern T6 T6f16(GE_context* ac, T6* C, T6 a1);
/* INTEGER_32.is_less_equal */
extern T1 T6f14(GE_context* ac, T6* C, T6 a1);
/* SPECIAL [CHARACTER_8].make_empty */
extern void T15f15(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].make_empty */
extern T0* T15c15(GE_context* ac, T6 a1);
/* CONSOLE.default_pointer */
extern T14 T1316f9(GE_context* ac, T0* C);
/* CONSOLE.set_name */
extern void T1316f28(GE_context* ac, T0* C, T0* a1);
/* FILE_INFO.file_name_to_pointer */
extern T0* T130f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* C_STRING.set_string */
extern void T29f11(GE_context* ac, T0* C, T0* a1);
/* C_STRING.set_substring */
extern void T29f13(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* MANAGED_POINTER.put_natural_8 */
extern void T129f14(GE_context* ac, T0* C, T8 a1, T6 a2);
/* POINTER.memory_copy */
extern void T14f13(GE_context* ac, T14* C, T14 a1, T6 a2);
/* POINTER.c_memcpy */
extern void T14f17(GE_context* ac, T14* C, T14 a1, T14 a2, T6 a3);
/* NATURAL_32.to_natural_8 */
extern T8 T10f5(GE_context* ac, T10* C);
/* C_STRING.make_shared_from_pointer_and_count */
extern void T29f10(GE_context* ac, T0* C, T14 a1, T6 a2);
/* C_STRING.make_shared_from_pointer_and_count */
extern T0* T29c10(GE_context* ac, T14 a1, T6 a2);
/* MANAGED_POINTER.share_from_pointer */
extern T0* T129c13(GE_context* ac, T14 a1, T6 a2);
/* MANAGED_POINTER.increment_counter */
extern void T129f15(GE_context* ac, T0* C);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_8_0_pointer */
extern void T541f14(GE_context* ac, T541* C, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* CELL [INTEGER_32].put */
extern void T542f2(GE_context* ac, T0* C, T6 a1);
/* CELL [INTEGER_32].put */
extern T0* T542c2(GE_context* ac, T6 a1);
/* NATURAL_32.is_less_equal */
extern T1 T10f4(GE_context* ac, T10* C, T10 a1);
/* UTF_CONVERTER.to_natural_32 */
extern T10 T541f10(GE_context* ac, T541* C, T0* a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parsed_natural_32 */
extern T10 T1536f12(GE_context* ac, T0* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_string_with_type */
extern void T1536f19(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T1536f19ot1(T0* a1, T0** a2);
extern T1 T1536f19ot2(T0* a1, T0** a2);
/* NATURAL_32.is_valid_character_8_code */
extern T1 T10f17(GE_context* ac, T10* C);
/* INTEGER_32.to_natural_32 */
extern T10 T6f20(GE_context* ac, T6* C);
/* CHARACTER_32.is_character_8 */
extern T1 T3f3(GE_context* ac, T3* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_character */
extern void T1536f22(GE_context* ac, T0* C, T2 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflowed */
extern T1 T1536f16(GE_context* ac, T0* C);
/* INTEGER_OVERFLOW_CHECKER.will_overflow */
extern T1 T1557f7(GE_context* ac, T0* C, T11 a1, T11 a2, T6 a3, T6 a4);
/* NATURAL_64.is_greater */
extern T1 T11f5(GE_context* ac, T11* C, T11 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflow_checker */
extern T0* T1536f15(GE_context* ac, T0* C);
/* INTEGER_OVERFLOW_CHECKER.make */
extern T0* T1557c13(GE_context* ac);
/* NATURAL_64.to_natural_64 */
extern T11 T11f18(GE_context* ac, T11* C);
/* NATURAL_32.to_natural_64 */
extern T11 T10f21(GE_context* ac, T10* C);
/* NATURAL_16.to_natural_64 */
extern T11 T9f14(GE_context* ac, T9* C);
/* NATURAL_8.to_natural_64 */
extern T11 T8f16(GE_context* ac, T8* C);
/* INTEGER_64.to_natural_64 */
extern T11 T7f9(GE_context* ac, T7* C);
/* INTEGER_16.to_natural_64 */
extern T11 T5f8(GE_context* ac, T5* C);
/* INTEGER_8.to_natural_64 */
extern T11 T4f8(GE_context* ac, T4* C);
/* SPECIAL [NATURAL_64].extend */
extern void T1735f5(GE_context* ac, T0* C, T11 a1);
/* SPECIAL [NATURAL_64].make_empty */
extern T0* T1735c4(GE_context* ac, T6 a1);
/* STRING_8.has */
extern T1 T17f41(GE_context* ac, T0* C, T2 a1);
/* STRING_8.area_lower */
extern T6 T17f17(GE_context* ac, T0* C);
/* INTEGER_32.to_natural_64 */
extern T11 T6f26(GE_context* ac, T6* C);
/* CHARACTER_8.is_less_equal */
extern T1 T2f7(GE_context* ac, T2* C, T2 a1);
/* CHARACTER_8.is_less */
extern T1 T2f6(GE_context* ac, T2* C, T2 a1);
/* CHARACTER_8.natural_32_code */
extern T10 T2f12(GE_context* ac, T2* C);
/* CHARACTER_8.is_greater_equal */
extern T1 T2f5(GE_context* ac, T2* C, T2 a1);
/* CHARACTER_8.is_hexa_digit */
extern T1 T2f27(GE_context* ac, T2* C);
/* NATURAL_8.is_greater */
extern T1 T8f2(GE_context* ac, T8* C, T8 a1);
/* CHARACTER_8.character_types */
extern T8 T2f10(GE_context* ac, T2* C, T6 a1);
/* CHARACTER_8.internal_character_types */
extern T0* T2f13(GE_context* ac, T2* C);
/* SPECIAL [NATURAL_8].fill_with */
extern void T547f8(GE_context* ac, T0* C, T8 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_8].extend */
extern void T547f7(GE_context* ac, T0* C, T8 a1);
/* SPECIAL [NATURAL_8].make_empty */
extern void T547f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_8].make_empty */
extern T0* T547c6(GE_context* ac, T6 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.reset */
extern void T1536f18(GE_context* ac, T0* C, T6 a1);
/* UTF_CONVERTER.ctoi_convertor */
extern T0* T541f11(GE_context* ac, T541* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_trailing_separators_acceptable */
extern void T1536f21(GE_context* ac, T0* C, T1 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_leading_separators_acceptable */
extern void T1536f20(GE_context* ac, T0* C, T1 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.make */
extern T0* T1536c17(GE_context* ac);
/* STRING_8.make_from_string */
extern T0* T17c66(GE_context* ac, T0* a1);
/* SPECIAL [CHARACTER_8].copy_data */
extern void T15f18(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_8].force */
extern void T15f19(GE_context* ac, T0* C, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].move_data */
extern void T15f20(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].overlapping_move */
extern void T15f17(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].non_overlapping_move */
extern void T15f21(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UTF_CONVERTER.is_hexa_decimal */
extern T1 T541f9(GE_context* ac, T541* C, T0* a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.is_integral_integer */
extern T1 T1536f14(GE_context* ac, T0* C);
/* INTEGER_32.is_greater_equal */
extern T1 T6f12(GE_context* ac, T6* C, T6 a1);
/* UTF_CONVERTER.utf_8_bytes_count */
extern T6 T541f6(GE_context* ac, T541* C, T0* a1, T6 a2, T6 a3);
/* INTEGER_32.do_nothing */
extern void T6f30(GE_context* ac, T6* C);
/* FILE_INFO.multi_byte_to_utf_16 */
extern T6 T130f10(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* FILE_INFO.default_pointer */
extern T14 T130f9(GE_context* ac, T0* C);
/* C_STRING.item */
extern T14 T29f4(GE_context* ac, T0* C);
/* C_STRING.make */
extern T0* T29c9(GE_context* ac, T0* a1);
/* C_STRING.make_empty */
extern void T29f7(GE_context* ac, T0* C, T6 a1);
/* C_STRING.make_empty */
extern T0* T29c7(GE_context* ac, T6 a1);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_16_0_pointer */
extern void T541f13(GE_context* ac, T541* C, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* MANAGED_POINTER.put_natural_16 */
extern void T129f16(GE_context* ac, T0* C, T9 a1, T6 a2);
/* NATURAL_32.to_natural_16 */
extern T9 T10f10(GE_context* ac, T10* C);
/* NATURAL_32.is_greater */
extern T1 T10f9(GE_context* ac, T10* C, T10 a1);
/* UTF_CONVERTER.utf_16_bytes_count */
extern T6 T541f7(GE_context* ac, T541* C, T0* a1, T6 a2, T6 a3);
/* MANAGED_POINTER.resize */
extern void T129f11(GE_context* ac, T0* C, T6 a1);
/* POINTER.memory_set */
extern void T14f12(GE_context* ac, T14* C, T6 a1, T6 a2);
/* POINTER.c_memset */
extern void T14f16(GE_context* ac, T14* C, T14 a1, T6 a2, T6 a3);
/* EXCEPTIONS.raise */
extern void T1195f2(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.raise */
extern void T118f16(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.raise */
extern void T20f19(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.code */
extern T6 T118f8(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.default_pointer */
extern T14 T20f9(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.set_last_exception */
extern void T20f17(GE_context* ac, T0* C, T0* a1);
/* CELL [detachable EXCEPTION].put */
extern void T25f2(GE_context* ac, T0* C, T0* a1);
/* CELL [detachable EXCEPTION].put */
extern T0* T25c2(GE_context* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.last_exception_cell */
extern T0* T20f2(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.in_rescue */
extern T1 T20f8(GE_context* ac, T0* C);
/* DEVELOPER_EXCEPTION.is_ignored */
extern T1 T118f7(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.is_ignored */
extern T1 T20f13(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].has */
extern T1 T26f34(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].same_keys */
extern T1 T26f26(GE_context* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].hash_code_of */
extern T6 T26f25(GE_context* ac, T0* C, T6 a1);
/* INTEGER_32.hash_code */
extern T6 T6f17(GE_context* ac, T6* C);
/* ISE_EXCEPTION_MANAGER.ignored_exceptions */
extern T0* T20f3(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].make */
extern T0* T26c35(GE_context* ac, T6 a1);
/* SPECIAL [INTEGER_32].make_filled */
extern T0* T124c9(GE_context* ac, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].fill_with */
extern void T124f12(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].extend */
extern void T124f13(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].make_filled */
extern T0* T125c6(GE_context* ac, T1 a1, T6 a2);
/* SPECIAL [BOOLEAN].fill_with */
extern void T125f9(GE_context* ac, T0* C, T1 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].extend */
extern void T125f11(GE_context* ac, T0* C, T1 a1);
/* SPECIAL [BOOLEAN].make_empty */
extern void T125f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].make_empty */
extern T0* T125c8(GE_context* ac, T6 a1);
/* SPECIAL [INTEGER_32].make_empty */
extern void T124f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].make_empty */
extern T0* T124c8(GE_context* ac, T6 a1);
/* PRIMES.higher_prime */
extern T6 T123f1(GE_context* ac, T0* C, T6 a1);
/* PRIMES.is_prime */
extern T1 T123f3(GE_context* ac, T0* C, T6 a1);
/* PRIMES.default_create */
extern T0* T123c5(GE_context* ac);
/* DEVELOPER_EXCEPTION.exception_manager */
extern T0* T118f6(GE_context* ac, T0* C);
/* DEVELOPER_EXCEPTION.default_create */
extern T0* T118c10(GE_context* ac);
/* EXCEPTIONS.default_create */
extern T0* T1195c1(GE_context* ac);
/* MANAGED_POINTER.default_pointer */
extern T14 T129f5(GE_context* ac, T0* C);
/* POINTER.memory_realloc */
extern T14 T14f4(GE_context* ac, T14* C, T6 a1);
/* POINTER.c_realloc */
extern T14 T14f8(GE_context* ac, T14* C, T14 a1, T6 a2);
/* INTEGER_32.max */
extern T6 T6f13(GE_context* ac, T6* C, T6 a1);
/* MANAGED_POINTER.make */
extern T0* T129c9(GE_context* ac, T6 a1);
/* POINTER.memory_calloc */
extern T14 T14f3(GE_context* ac, T14* C, T6 a1, T6 a2);
/* POINTER.c_calloc */
extern T14 T14f6(GE_context* ac, T14* C, T6 a1, T6 a2);
/* PLATFORM.is_windows */
extern T1 T545s1(GE_context* ac);
/* CONSOLE.buffered_file_info */
extern T0* T1316f10(GE_context* ac, T0* C);
/* FILE_INFO.make */
extern T0* T130c19(GE_context* ac);
/* FILE_INFO.make_filled_area */
extern void T130f21(GE_context* ac, T0* C, T8 a1, T6 a2);
/* SPECIAL [NATURAL_8].make_filled */
extern T0* T547c5(GE_context* ac, T8 a1, T6 a2);
/* FILE_INFO.stat_size */
extern T6 T130f7(GE_context* ac, T0* C);
/* KL_STDERR_FILE.io */
extern T0* T134f4(GE_context* ac, T0* C);
/* STD_FILES.set_output_default */
extern void T378f8(GE_context* ac, T0* C);
/* STD_FILES.output */
extern T0* T378f3(GE_context* ac, T0* C);
/* CONSOLE.make_open_stdout */
extern T0* T1316c19(GE_context* ac, T0* a1);
/* STD_FILES.default_create */
extern T0* T378c6(GE_context* ac);
/* KL_STRING_ROUTINES.as_string */
extern T0* T36f6(GE_context* ac, T0* C, T0* a1);
extern T1 T36f6ot1(T0* a1, T0** a2);
/* UC_UTF8_STRING.string */
extern T0* T1206f22(GE_context* ac, T0* C);
/* UC_UTF8_STRING.next_byte_index */
extern T6 T1206f38(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_byte_count */
extern T6 T1205f3(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.utf8 */
extern T0* T1206f31(GE_context* ac, T0* C);
/* UC_UTF8_ROUTINES.default_create */
extern T0* T1205c36(GE_context* ac);
/* KL_INTEGER_ROUTINES.to_character */
extern T2 T233f1(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.integer_ */
extern T0* T1206f44(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.default_create */
extern T0* T233c5(GE_context* ac);
/* KL_PLATFORM.maximum_character_code */
extern T6 T232f1(GE_context* ac, T0* C);
/* UC_UTF8_STRING.platform */
extern T0* T1206f37(GE_context* ac, T0* C);
/* KL_PLATFORM.default_create */
extern T0* T232c3(GE_context* ac);
/* UC_UTF8_STRING.item_code_at_byte_index */
extern T6 T1206f35(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_next_value */
extern T6 T1205f6(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.encoded_first_value */
extern T6 T1205f4(GE_context* ac, T0* C, T2 a1);
/* STRING_8.append_character */
extern void T17f47(GE_context* ac, T0* C, T2 a1);
/* STRING_8.reset_hash_codes */
extern void T17f49(GE_context* ac, T0* C);
/* STRING_8.resize */
extern void T17f48(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].aliased_resized_area_with_default */
extern T0* T15f4(GE_context* ac, T0* C, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].aliased_resized_area */
extern T0* T15f5(GE_context* ac, T0* C, T6 a1);
/* STRING_8.additional_space */
extern T6 T17f6(GE_context* ac, T0* C);
/* STRING_8.capacity */
extern T6 T17f5(GE_context* ac, T0* C);
/* UC_UTF8_STRING.byte_item */
extern T2 T1206f33(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.old_item */
extern T2 T1206f49(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.set_count */
extern void T1206f82(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.reset_byte_index_cache */
extern void T1206f91(GE_context* ac, T0* C);
/* STRING_8.string */
extern T0* T17f23(GE_context* ac, T0* C);
/* UC_UTF8_STRING.as_string */
extern T0* T1206f21(GE_context* ac, T0* C);
/* UC_UTF8_STRING.to_utf8 */
extern T0* T1206f43(GE_context* ac, T0* C);
/* KL_ANY_ROUTINES.same_types */
extern T1 T137f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.any_ */
extern T0* T36f2(GE_context* ac, T0* C);
/* KL_ANY_ROUTINES.default_create */
extern T0* T137c3(GE_context* ac);
/* KL_STDERR_FILE.string_ */
extern T0* T134f1(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.default_create */
extern T0* T36c19(GE_context* ac);
/* MUTEX.lock */
extern void T131f11(GE_context* ac, T0* C);
/* MUTEX.current_thread_id */
extern T14 T131f6(GE_context* ac, T0* C);
/* MUTEX.eif_thr_mutex_lock */
extern void T131f14(GE_context* ac, T0* C, T14 a1);
/* ET_ERROR_HANDLER.message */
extern T0* T34f22(GE_context* ac, T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.make */
extern T0* T87c8(GE_context* ac, T0* a1);
/* ARRAY [STRING_8].put */
extern void T144f12(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [STRING_8].make_filled */
extern T0* T144c11(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [STRING_8].make_filled_area */
extern void T144f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].make_filled */
extern T0* T145c7(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [STRING_8].fill_with */
extern void T145f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].extend */
extern void T145f10(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [STRING_8].make_empty */
extern void T145f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].make_empty */
extern T0* T145c8(GE_context* ac, T6 a1);
/* GEC.process_system */
extern void T24f44(GE_context* ac, T0* C, T0* a1);
/* KL_SHELL_COMMAND.execute */
extern void T77f13(GE_context* ac, T0* C);
/* KL_SHELL_COMMAND.operating_system */
extern T0* T77f6(GE_context* ac, T0* C);
/* KL_OPERATING_SYSTEM.default_create */
extern T0* T85c6(GE_context* ac);
/* KL_SHELL_COMMAND.system */
extern void T77f14(GE_context* ac, T0* C, T0* a1);
/* KL_SHELL_COMMAND.system_call */
extern T6 T77f9(GE_context* ac, T0* C, T14 a1);
/* NATIVE_STRING.item */
extern T14 T389f3(GE_context* ac, T0* C);
/* NATIVE_STRING.make */
extern T0* T389c9(GE_context* ac, T0* a1);
/* NATIVE_STRING.set_string */
extern void T389f12(GE_context* ac, T0* C, T0* a1);
/* NATIVE_STRING.set_substring */
extern void T389f13(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* NATIVE_STRING.unit_size */
extern T6 T389f5(GE_context* ac, T0* C);
/* NATIVE_STRING.upper_cell */
extern T0* T389f7(GE_context* ac, T0* C);
/* NATIVE_STRING.make_empty */
extern void T389f11(GE_context* ac, T0* C, T6 a1);
/* KL_SHELL_COMMAND.default_shell */
extern T0* T77f8(GE_context* ac, T0* C);
/* STRING_32.make_empty */
extern T0* T18c14(GE_context* ac);
/* STRING_32.make */
extern void T18f15(GE_context* ac, T0* C, T6 a1);
/* STRING_32.make */
extern T0* T18c15(GE_context* ac, T6 a1);
/* SPECIAL [CHARACTER_32].make_filled */
extern T0* T16c7(GE_context* ac, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].fill_with */
extern void T16f12(GE_context* ac, T0* C, T3 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].extend */
extern void T16f11(GE_context* ac, T0* C, T3 a1);
/* SPECIAL [CHARACTER_32].make_empty */
extern void T16f10(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_32].make_empty */
extern T0* T16c10(GE_context* ac, T6 a1);
/* KL_SHELL_COMMAND.item */
extern T0* T77f10(GE_context* ac, T0* C, T0* a1);
/* NATIVE_STRING.string */
extern T0* T389f6(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_8_0_pointer_to_escaped_string_32 */
extern T0* T541f2(GE_context* ac, T541* C, T0* a1);
/* UTF_CONVERTER.utf_8_0_pointer_into_escaped_string_32 */
extern void T541f18(GE_context* ac, T541* C, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_8_0_subpointer_into_escaped_string_32 */
extern void T541f23(GE_context* ac, T541* C, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* UTF_CONVERTER.escape_code_into */
extern void T541f24(GE_context* ac, T541* C, T0* a1, T9 a2);
/* NATURAL_16.to_hex_string */
extern T0* T9f7(GE_context* ac, T9* C);
/* STRING_8.put */
extern void T17f64(GE_context* ac, T0* C, T2 a1, T6 a2);
/* INTEGER_32.to_hex_character */
extern T2 T6f28(GE_context* ac, T6* C);
/* NATURAL_16.to_integer_32 */
extern T6 T9f11(GE_context* ac, T9* C);
/* STRING_8.fill_blank */
extern void T17f78(GE_context* ac, T0* C);
/* STRING_8.fill_character */
extern void T17f69(GE_context* ac, T0* C, T2 a1);
/* STRING_32.append_string_general */
extern void T18f16(GE_context* ac, T0* C, T0* a1);
/* STRING_32.append */
extern void T18f16p1(GE_context* ac, T0* C, T0* a1);
/* STRING_32.reset_hash_codes */
extern void T18f22(GE_context* ac, T0* C);
/* STRING_32.set_count */
extern void T18f21(GE_context* ac, T0* C, T6 a1);
/* STRING_32.append_code */
extern void T18f20(GE_context* ac, T0* C, T10 a1);
/* STRING_32.put_code */
extern void T18f23(GE_context* ac, T0* C, T10 a1, T6 a2);
/* STRING_32.resize */
extern void T18f19(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_32].aliased_resized_area_with_default */
extern T0* T16f3(GE_context* ac, T0* C, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].aliased_resized_area */
extern T0* T16f4(GE_context* ac, T0* C, T6 a1);
/* STRING_32.capacity */
extern T6 T18f6(GE_context* ac, T0* C);
/* STRING_32.append */
extern void T18f18(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_32].copy_data */
extern void T16f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_32].force */
extern void T16f14(GE_context* ac, T0* C, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].move_data */
extern void T16f13(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].overlapping_move */
extern void T16f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].non_overlapping_move */
extern void T16f15(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_32.additional_space */
extern T6 T18f5(GE_context* ac, T0* C);
/* NATURAL_8.to_hex_string */
extern T0* T8f12(GE_context* ac, T8* C);
/* NATURAL_8.to_integer_32 */
extern T6 T8f8(GE_context* ac, T8* C);
/* NATURAL_16.is_less_equal */
extern T1 T9f5(GE_context* ac, T9* C, T9 a1);
/* STRING_32.append_character */
extern void T18f17(GE_context* ac, T0* C, T3 a1);
/* NATURAL_8.to_natural_16 */
extern T9 T8f10(GE_context* ac, T8* C);
/* STRING_32.extend */
extern void T18f25(GE_context* ac, T0* C, T3 a1);
/* NATURAL_8.is_less_equal */
extern T1 T8f6(GE_context* ac, T8* C, T8 a1);
/* MANAGED_POINTER.read_natural_8 */
extern T8 T129f6(GE_context* ac, T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_8].memory_copy */
extern void T1194f2(GE_context* ac, T1194* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_8].c_memcpy */
extern void T1194f3(GE_context* ac, T1194* C, T14 a1, T14 a2, T6 a3);
/* STRING_32.grow */
extern void T18f24(GE_context* ac, T0* C, T6 a1);
/* UTF_CONVERTER.utf_16_0_pointer_to_escaped_string_32 */
extern T0* T541f1(GE_context* ac, T541* C, T0* a1);
/* UTF_CONVERTER.utf_16_0_pointer_into_escaped_string_32 */
extern void T541f17(GE_context* ac, T541* C, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_16_0_subpointer_into_escaped_string_32 */
extern void T541f22(GE_context* ac, T541* C, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* NATURAL_32.is_greater_equal */
extern T1 T10f13(GE_context* ac, T10* C, T10 a1);
/* NATURAL_16.to_natural_32 */
extern T10 T9f4(GE_context* ac, T9* C);
/* MANAGED_POINTER.read_natural_16 */
extern T9 T129f7(GE_context* ac, T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_16].memory_copy */
extern void T1490f2(GE_context* ac, T1490* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_16].c_memcpy */
extern void T1490f3(GE_context* ac, T1490* C, T14 a1, T14 a2, T6 a3);
/* NATIVE_STRING.make_from_pointer */
extern T0* T389c10(GE_context* ac, T14 a1);
/* MANAGED_POINTER.make_from_pointer */
extern T0* T129c12(GE_context* ac, T14 a1, T6 a2);
/* POINTER.memory_alloc */
extern T14 T14f5(GE_context* ac, T14* C, T6 a1);
/* POINTER.c_malloc */
extern T14 T14f9(GE_context* ac, T14* C, T6 a1);
/* NATIVE_STRING.pointer_length_in_bytes */
extern T6 T389f4(GE_context* ac, T0* C, T14 a1);
/* NATURAL_64.to_integer_32 */
extern T6 T11f2(GE_context* ac, T11* C);
/* NATURAL_64.is_less_equal */
extern T1 T11f19(GE_context* ac, T11* C, T11 a1);
/* NATIVE_STRING.c_pointer_length_in_bytes */
extern T11 T389f8(GE_context* ac, T0* C, T14 a1);
/* KL_SHELL_COMMAND.eif_getenv */
extern T14 T77f11(GE_context* ac, T0* C, T14 a1);
/* UC_UTF8_STRING.old_is_empty */
extern T1 T1206f20(GE_context* ac, T0* C);
/* KL_SHELL_COMMAND.make */
extern T0* T77c12(GE_context* ac, T0* a1);
/* KL_SHELL_COMMAND.string_ */
extern T0* T77f7(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.absolute_pathname */
extern T0* T122f1(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname */
extern T0* T122f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.appended_string */
extern T0* T36f8(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T36f8ot1(T0* a1, T0** a2);
extern T1 T36f8ot2(T0* a1, T0** a2);
/* STRING_8.append_string */
extern void T17f51(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append */
extern void T17f56(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.area_lower */
extern T6 T1206f36(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.concat */
extern T0* T36f10(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T36f10ot1(T0* a1, T0** a2);
extern T1 T36f10ot2(T0* a1, T0** a2);
/* UC_UTF8_STRING.prefixed_string */
extern T0* T1206f30(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.make */
extern void T1206f72(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.make */
extern T0* T1206c72(GE_context* ac, T6 a1);
/* UC_UTF8_STRING.old_set_count */
extern void T1206f80(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.reset_hash_codes */
extern void T1206f97(GE_context* ac, T0* C);
/* UC_UTF8_STRING.byte_capacity */
extern T6 T1206f52(GE_context* ac, T0* C);
/* UC_UTF8_STRING.capacity */
extern T6 T1206f52p1(GE_context* ac, T0* C);
/* UC_UTF8_STRING.make */
extern void T1206f72p1(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.substring_byte_count */
extern T6 T1205f22(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
extern T1 T1205f22ot1(T0* a1, T0** a2);
extern T1 T1205f22ot2(T0* a1, T0** a2);
/* UC_UTF8_ROUTINES.code_byte_count */
extern T6 T1205f24(GE_context* ac, T0* C, T6 a1);
/* NATURAL_32.to_integer_32 */
extern T6 T10f18(GE_context* ac, T10* C);
/* UC_UTF8_STRING.shifted_byte_index */
extern T6 T1206f64(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.byte_index */
extern T6 T1206f34(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.dummy_uc_string */
extern T0* T1205f27(GE_context* ac, T0* C);
/* UC_STRING.make_empty */
extern T0* T136c9(GE_context* ac);
/* UC_STRING.make */
extern void T136f10(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.old_set_count */
extern void T136f13(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.reset_hash_codes */
extern void T136f14(GE_context* ac, T0* C);
/* UC_STRING.set_count */
extern void T136f12(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.byte_capacity */
extern T6 T136f8(GE_context* ac, T0* C);
/* UC_STRING.capacity */
extern T6 T136f8p1(GE_context* ac, T0* C);
/* UC_STRING.make */
extern void T136f10p1(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.reset_byte_index_cache */
extern void T136f11(GE_context* ac, T0* C);
/* UC_UTF8_ROUTINES.character_byte_count */
extern T6 T1205f23(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.any_ */
extern T0* T1205f25(GE_context* ac, T0* C);
/* UC_UTF8_STRING.append_string */
extern void T1206f68(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.append */
extern void T1206f86(GE_context* ac, T0* C, T0* a1);
extern T1 T1206f86ot1(T0* a1, T0** a2);
extern T1 T1206f86ot2(T0* a1);
/* UC_UTF8_STRING.dummy_uc_string */
extern T0* T1206f57(GE_context* ac, T0* C);
/* UC_UTF8_STRING.gobo_append_substring */
extern void T1206f70(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_substring_at_byte_index */
extern void T1206f90(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4, T6 a5);
extern T1 T1206f90ot1(T0* a1, T0** a2);
extern T1 T1206f90ot2(T0* a1, T0** a2);
extern T1 T1206f90ot3(T0* a1, T0** a2);
/* UC_UTF8_STRING.put_code_at_byte_index */
extern void T1206f101(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_character_at_byte_index */
extern void T1206f89(GE_context* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_byte */
extern void T1206f102(GE_context* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.old_put */
extern void T1206f88(GE_context* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.resize_byte_storage */
extern void T1206f87(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.resize */
extern void T1206f103(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.cloned_string */
extern T0* T1206f41(GE_context* ac, T0* C);
/* UC_UTF8_STRING.twin */
extern T0* T1206f14(GE_context* ac, T0* C);
/* UC_UTF8_STRING.copy */
extern void T1206f78(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.copy */
extern void T1206f78p1(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].resized_area */
extern T0* T15f7(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.append */
extern void T1206f86p1(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.additional_space */
extern T6 T1206f58(GE_context* ac, T0* C);
/* ISE_RUNTIME.check_assert */
extern T1 T1576s1(GE_context* ac, T1 a1);
/* UC_UTF8_STRING.as_string_8 */
extern T0* T1206f18(GE_context* ac, T0* C);
/* STRING_8.put_code */
extern void T17f62(GE_context* ac, T0* C, T10 a1, T6 a2);
/* UC_UTF8_STRING.put_code */
extern void T1206f81(GE_context* ac, T0* C, T10 a1, T6 a2);
/* UC_UTF8_STRING.put_item_code */
extern void T1206f100(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.move_bytes_right */
extern void T1206f93(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.move_bytes_left */
extern void T1206f92(GE_context* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.valid_code */
extern T1 T17f33(GE_context* ac, T0* C, T10 a1);
/* UC_UTF8_STRING.valid_code */
extern T1 T1206f42(GE_context* ac, T0* C, T10 a1);
/* STRING_8.set_count */
extern void T17f61(GE_context* ac, T0* C, T6 a1);
/* STRING_8.as_string_8 */
extern T0* T17f21(GE_context* ac, T0* C);
/* UC_UTF8_STRING.any_ */
extern T0* T1206f55(GE_context* ac, T0* C);
/* UC_UTF8_STRING.append_character */
extern void T1206f69(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.item */
extern T2 T1206f13(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.character_item_at_byte_index */
extern T2 T1206f40(GE_context* ac, T0* C, T6 a1);
/* STRING_8.item */
extern T2 T17f11(GE_context* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.cloned_string */
extern T0* T36f9(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.string_ */
extern T0* T122f21(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.cwd */
extern T0* T122f13(GE_context* ac, T0* C);
/* PATH.utf_8_name */
extern T0* T423f6(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_32_string_to_utf_8_string_8 */
extern T0* T541f3(GE_context* ac, T541* C, T0* a1);
/* UTF_CONVERTER.utf_32_string_into_utf_8_string_8 */
extern void T541f19(GE_context* ac, T541* C, T0* a1, T0* a2);
/* STRING_8.extend */
extern void T17f76(GE_context* ac, T0* C, T2 a1);
/* IMMUTABLE_STRING_32.code */
extern T10 T19f6(GE_context* ac, T0* C, T6 a1);
/* STRING_8.grow */
extern void T17f75(GE_context* ac, T0* C, T6 a1);
/* PATH.name */
extern T0* T423f4(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_8_string_8_to_escaped_string_32 */
extern T0* T541f5(GE_context* ac, T541* C, T0* a1);
/* UTF_CONVERTER.utf_8_string_8_into_escaped_string_32 */
extern void T541f21(GE_context* ac, T541* C, T0* a1, T0* a2);
/* IMMUTABLE_STRING_32.make_from_string */
extern T0* T19c12(GE_context* ac, T0* a1);
/* STRING_32.area_lower */
extern T6 T18f8(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_16le_string_8_to_escaped_string_32 */
extern T0* T541f4(GE_context* ac, T541* C, T0* a1);
/* UTF_CONVERTER.utf_16le_string_8_into_escaped_string_32 */
extern void T541f20(GE_context* ac, T541* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.current_working_path */
extern T0* T203f2(GE_context* ac, T0* C);
/* PATH.make_from_pointer */
extern T0* T423c17(GE_context* ac, T14 a1);
/* PATH.reset_internal_data */
extern void T423f20(GE_context* ac, T0* C);
/* PATH.normalize */
extern void T423f19(GE_context* ac, T0* C);
/* STRING_8.remove_tail */
extern void T17f55(GE_context* ac, T0* C, T6 a1);
/* PATH.directory_separator */
extern T2 T423f13(GE_context* ac, T0* C);
/* STRING_8.remove_head */
extern void T17f65(GE_context* ac, T0* C, T6 a1);
/* STRING_8.keep_tail */
extern void T17f70(GE_context* ac, T0* C, T6 a1);
/* PATH.root_end_position */
extern T6 T423f12(GE_context* ac, T0* C);
/* PATH.next_directory_separator */
extern T6 T423f15(GE_context* ac, T0* C, T6 a1);
/* CHARACTER_8.as_lower */
extern T2 T2f23(GE_context* ac, T2* C);
/* CHARACTER_8.is_upper */
extern T1 T2f24(GE_context* ac, T2* C);
/* STRING_8.keep_head */
extern void T17f59(GE_context* ac, T0* C, T6 a1);
/* PATH.is_character */
extern T1 T423f8(GE_context* ac, T0* C, T0* a1, T6 a2, T2 a3);
/* C_STRING.substring */
extern T0* T29f3(GE_context* ac, T0* C, T6 a1, T6 a2);
/* C_STRING.read_substring_into */
extern void T29f12(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* NATURAL_8.to_natural_32 */
extern T10 T8f5(GE_context* ac, T8* C);
/* PATH.unit_size */
extern T6 T423f5(GE_context* ac, T0* C);
/* PATH.pointer_length_in_bytes */
extern T6 T423f7(GE_context* ac, T0* C, T14 a1);
/* PATH.c_pointer_length_in_bytes */
extern T11 T423f14(GE_context* ac, T0* C, T14 a1);
/* PATH.make_from_string */
extern T0* T423c16(GE_context* ac, T0* a1);
/* PATH.internal_append_into */
extern void T423f18(GE_context* ac, T0* C, T0* a1, T0* a2, T2 a3);
/* UTF_CONVERTER.escaped_utf_32_string_into_utf_8_string_8 */
extern void T541f16(GE_context* ac, T541* C, T0* a1, T0* a2);
/* UTF_CONVERTER.escaped_utf_32_string_into_utf_16le_string_8 */
extern void T541f15(GE_context* ac, T541* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.eif_dir_current */
extern T6 T203f4(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_UNIX_FILE_SYSTEM.execution_environment */
extern T0* T122f23(GE_context* ac, T0* C);
/* EXECUTION_ENVIRONMENT.default_create */
extern T0* T203c8(GE_context* ac);
/* KL_UNIX_FILE_SYSTEM.is_absolute_pathname */
extern T1 T122f12(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.absolute_pathname */
extern T0* T121f26(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.current_drive */
extern T0* T121f15(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_directory_separator */
extern T1 T121f18(GE_context* ac, T0* C, T2 a1);
/* KL_WINDOWS_FILE_SYSTEM.string_ */
extern T0* T121f14(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname */
extern T0* T121f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.cwd */
extern T0* T121f13(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.execution_environment */
extern T0* T121f25(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_relative_pathname */
extern T1 T121f5(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_absolute_pathname */
extern T1 T121f12(GE_context* ac, T0* C, T0* a1);
/* GEC.file_system */
extern T0* T24f35(GE_context* ac, T0* C);
/* GEC.unix_file_system */
extern T0* T24f38(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.make */
extern T0* T122c31(GE_context* ac);
/* KL_OPERATING_SYSTEM.is_unix */
extern T1 T85f2(GE_context* ac, T0* C);
/* KL_OPERATING_SYSTEM.current_working_directory */
extern T0* T85f4(GE_context* ac, T0* C);
/* KL_OPERATING_SYSTEM.execution_environment */
extern T0* T85f5(GE_context* ac, T0* C);
/* STRING_8.is_equal */
extern T1 T17f38(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].same_items */
extern T1 T15f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_OPERATING_SYSTEM.variable_value */
extern T0* T85f3(GE_context* ac, T0* C, T0* a1);
/* STRING_32.as_string_8 */
extern T0* T18f7(GE_context* ac, T0* C);
/* EXECUTION_ENVIRONMENT.item */
extern T0* T203f6(GE_context* ac, T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.eif_getenv */
extern T14 T203f3(GE_context* ac, T0* C, T14 a1);
/* GEC.windows_file_system */
extern T0* T24f37(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.make */
extern T0* T121c34(GE_context* ac);
/* UC_UTF8_STRING.plus */
extern T0* T1206f12(GE_context* ac, T0* C, T0* a1);
/* STRING_8.plus */
extern T0* T17f10(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append_string_general */
extern void T17f57(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append */
extern void T17f57p1(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append_code */
extern void T17f60(GE_context* ac, T0* C, T10 a1);
/* STRING_8.new_string */
extern T0* T17f16(GE_context* ac, T0* C, T6 a1);
/* KL_OPERATING_SYSTEM.is_windows */
extern T1 T85f1(GE_context* ac, T0* C);
/* GEC.operating_system */
extern T0* T24f34(GE_context* ac, T0* C);
/* GEC.no_c_compile */
extern T1 T24f33(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.parameter */
extern T1 T45f12(GE_context* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].last */
extern T1 T150f7(GE_context* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].is_empty */
extern T1 T150f6(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.put_new_line */
extern void T135f8(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.put_integer */
extern void T135f7(GE_context* ac, T0* C, T6 a1);
/* KL_STDOUT_FILE.put_integer_64 */
extern void T135f11(GE_context* ac, T0* C, T7 a1);
/* KL_STDOUT_FILE.put_character */
extern void T135f10(GE_context* ac, T0* C, T2 a1);
/* CONSOLE.put_character */
extern void T1316f22(GE_context* ac, T0* C, T2 a1);
/* CONSOLE.console_pc */
extern void T1316f27(GE_context* ac, T0* C, T14 a1, T2 a2);
/* KL_STDOUT_FILE.console */
extern T0* T135f2(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.io */
extern T0* T135f4(GE_context* ac, T0* C);
/* INTEGER_32.to_integer_64 */
extern T7 T6f18(GE_context* ac, T6* C);
/* KL_STDOUT_FILE.put_string */
extern void T135f6(GE_context* ac, T0* C, T0* a1);
/* KL_STDOUT_FILE.string_ */
extern T0* T135f1(GE_context* ac, T0* C);
/* ET_C_GENERATOR.generate */
extern void T76f497(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].wipe_out */
extern void T55f72(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_wipe_out */
extern void T55f81(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_wipe_out */
extern void T55f80(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_wipe_out */
extern void T55f79(GE_context* ac, T0* C);
/* SPECIAL [STRING_8].keep_head */
extern void T145f11(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].set_count */
extern void T145f13(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_wipe_out */
extern void T55f78(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].unset_found_item */
extern void T55f55(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_all_cursors_after */
extern void T55f77(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_next_cursor */
extern void T173f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_after */
extern void T173f17(GE_context* ac, T0* C);
/* ET_C_GENERATOR.generate_compilation_script */
extern void T76f501(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.report_cannot_write_error */
extern void T76f503(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error */
extern void T282f187(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T282f192(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.set_has_error */
extern void T282f197(GE_context* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T282f192p1(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.message */
extern T0* T282f17(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.error_handler */
extern T0* T76f133(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.make */
extern T0* T326c8(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.set_fatal_error */
extern void T76f502(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.change_mode */
extern void T323f35(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.old_change_mode */
extern void T323f44(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.file_chmod */
extern void T323f51(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.internal_name_pointer */
extern T0* T323f20(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_exists */
extern T1 T323f16(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_exists */
extern T1 T323f26(GE_context* ac, T0* C, T14 a1);
/* KL_TEXT_OUTPUT_FILE.old_is_closed */
extern T1 T323f22(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.string_name */
extern T0* T323f14(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.close */
extern void T323f34(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_close */
extern void T323f40(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.default_pointer */
extern T14 T323f18(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_close */
extern void T323f48(GE_context* ac, T0* C, T14 a1);
/* KL_UNIX_FILE_SYSTEM.file_exists */
extern T1 T122f8(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.exists */
extern T1 T31f32(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_plain */
extern T1 T31f34(GE_context* ac, T0* C);
/* FILE_INFO.is_plain */
extern T1 T130f13(GE_context* ac, T0* C);
/* FILE_INFO.file_info */
extern T6 T130f14(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.buffered_file_info */
extern T0* T31f29(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.set_buffer */
extern void T31f73(GE_context* ac, T0* C);
/* FILE_INFO.fast_update */
extern void T130f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* FILE_INFO.eif_file_stat */
extern T6 T130f12(GE_context* ac, T0* C, T14 a1, T14 a2, T1 a3);
/* KL_TEXT_INPUT_FILE.internal_name_pointer */
extern T0* T31f23(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_exists */
extern T1 T31f15(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_exists */
extern T1 T31f30(GE_context* ac, T0* C, T14 a1);
/* KL_TEXT_INPUT_FILE.old_is_closed */
extern T1 T31f12(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.string_name */
extern T0* T31f13(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.reset */
extern void T31f74(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.tmp_file */
extern T0* T122f22(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.file_exists */
extern T1 T121f8(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_file */
extern T0* T121f24(GE_context* ac, T0* C);
/* ET_C_GENERATOR.file_system */
extern T0* T76f115(GE_context* ac, T0* C);
/* ET_C_GENERATOR.unix_file_system */
extern T0* T76f433(GE_context* ac, T0* C);
/* ET_C_GENERATOR.windows_file_system */
extern T0* T76f432(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].found_item */
extern T0* T55f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_item */
extern T0* T55f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].found */
extern T1 T55f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].search */
extern void T55f75(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].search_position */
extern void T55f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].hash_position */
extern T6 T55f29(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.hash_code */
extern T6 T1206f10(GE_context* ac, T0* C);
/* UC_UTF8_STRING.hash_code */
extern T6 T1206f10p1(GE_context* ac, T0* C);
/* STRING_8.hash_code */
extern T6 T17f22(GE_context* ac, T0* C);
/* KL_AGENT_HASH_FUNCTION [STRING_8].hash_code */
extern T6 T1485f2(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_item */
extern T0* T55f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_item */
extern T6 T55f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_item */
extern T6 T55f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].back */
extern void T173f16(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_back */
extern void T55f89(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].add_traversing_cursor */
extern void T55f85(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_position */
extern void T173f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove_traversing_cursor */
extern void T55f84(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_before */
extern void T173f20(GE_context* ac, T0* C);
/* UT_TEMPLATE_EXPANDER.expand_from_values */
extern T0* T325f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].value */
extern T0* T55f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].position_of_key */
extern T6 T55f46(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.append_substring_to_string */
extern void T36f21(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
extern T1 T36f21ot1(T0* a1, T0** a2);
/* KL_STRING_ROUTINES.appended_substring */
extern T0* T36f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
extern T1 T36f5ot1(T0* a1, T0** a2);
extern T1 T36f5ot2(T0* a1, T0** a2);
/* UC_UTF8_STRING.new_empty_string */
extern T0* T1206f16(GE_context* ac, T0* C, T6 a1);
/* UT_TEMPLATE_EXPANDER.string_ */
extern T0* T325f2(GE_context* ac, T0* C);
/* ET_C_GENERATOR.template_expander */
extern T0* T76f130(GE_context* ac, T0* C);
/* UT_TEMPLATE_EXPANDER.make */
extern T0* T325c3(GE_context* ac);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].item */
extern T0* T173f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_item */
extern T0* T55f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].before */
extern T1 T173f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].finish */
extern void T173f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_finish */
extern void T55f88(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_off */
extern T1 T55f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].off */
extern T1 T173f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].is_empty */
extern T1 T55f30(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.is_open_write */
extern T1 T323f23(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_open_write */
extern T1 T323f19(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T323f29(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.is_closed */
extern T1 T323f17(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_write */
extern void T323f41(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T323f41p1(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_open */
extern T14 T323f21(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.make */
extern T0* T323c27(GE_context* ac, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_make */
extern void T323f39(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.make_with_name */
extern void T323f47(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.set_name */
extern void T323f52(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.buffered_file_info */
extern T0* T323f25(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.string_ */
extern T0* T323f12(GE_context* ac, T0* C);
/* ET_C_GENERATOR.operating_system */
extern T0* T76f270(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].forth */
extern void T173f14(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_forth */
extern void T55f83(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].key */
extern T0* T173f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_key */
extern T0* T55f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].is_first */
extern T1 T173f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_is_first */
extern T1 T55f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].after */
extern T1 T173f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].start */
extern void T173f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_start */
extern void T55f82(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_cursor */
extern T0* T55f27(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].make */
extern T0* T173c12(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item */
extern T0* T55f43(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.add_external_c_files */
extern void T76f534(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* KL_DIRECTORY.close */
extern void T354f34(GE_context* ac, T0* C);
/* KL_DIRECTORY.default_pointer */
extern T14 T354f17(GE_context* ac, T0* C);
/* KL_DIRECTORY.old_close */
extern void T354f36(GE_context* ac, T0* C);
/* KL_DIRECTORY.dir_close */
extern void T354f40(GE_context* ac, T0* C, T14 a1);
/* KL_STRING_ROUTINES.replaced_all_substrings */
extern T0* T36f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* KL_STRING_ROUTINES.substring_index */
extern T6 T36f14(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* UC_UTF8_STRING.item_code */
extern T6 T1206f9(GE_context* ac, T0* C, T6 a1);
/* STRING_8.item_code */
extern T6 T17f8(GE_context* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.platform */
extern T0* T36f15(GE_context* ac, T0* C);
/* UC_UTF8_STRING.substring_index */
extern T6 T1206f25(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T1206f25ot1(T0* a1, T0** a2);
extern T1 T1206f25ot2(T0* a1, T0** a2);
/* STRING_8.substring_index */
extern T6 T17f37(GE_context* ac, T0* C, T0* a1, T6 a2);
/* STRING_8_SEARCHER.substring_index */
extern T6 T1470f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_8_SEARCHER.substring_index_with_deltas */
extern T6 T1470f2(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_8_SEARCHER.internal_initialize_deltas */
extern void T1470f8(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* STRING_8.string_searcher */
extern T0* T17f40(GE_context* ac, T0* C);
/* STRING_8_SEARCHER.make */
extern T0* T1470c6(GE_context* ac);
/* ET_C_GENERATOR.multithreaded_mode */
extern T1 T76f263(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_last */
extern void T55f53(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_put */
extern void T55f61(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [STRING_8].force */
extern void T172f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_put */
extern void T55f60(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_put */
extern void T55f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].resize */
extern void T55f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_resize */
extern void T55f66(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].aliased_resized_area_with_default */
extern T0* T174f1(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].aliased_resized_area_with_default */
extern T0* T124f4(GE_context* ac, T0* C, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].aliased_resized_area */
extern T0* T124f5(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].special_integer_ */
extern T0* T55f28(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [INTEGER_32].default_create */
extern T0* T174c6(GE_context* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_resize */
extern void T55f65(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].aliased_resized_area */
extern T0* T172f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].aliased_resized_area */
extern T0* T145f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_resize */
extern void T55f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_resize */
extern void T55f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_modulus */
extern T6 T55f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_capacity */
extern T6 T55f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_put */
extern void T55f57(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_UNIX_FILE_SYSTEM.extension */
extern T0* T122f10(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.extension */
extern T0* T121f10(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.ends_with */
extern T1 T1206f24(GE_context* ac, T0* C, T0* a1);
/* STRING_8.area_upper */
extern T6 T17f18(GE_context* ac, T0* C);
/* UC_UTF8_STRING.area_upper */
extern T6 T1206f46(GE_context* ac, T0* C);
/* STRING_8.ends_with */
extern T1 T17f31(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.read_entry */
extern void T354f33(GE_context* ac, T0* C);
/* KL_DIRECTORY.last_entry_8 */
extern T0* T354f15(GE_context* ac, T0* C);
/* FILE_INFO.pointer_to_file_name_8 */
extern T0* T130f15(GE_context* ac, T0* C, T14 a1);
/* C_STRING.string */
extern T0* T29f5(GE_context* ac, T0* C);
/* C_STRING.c_strlen */
extern T6 T29f6(GE_context* ac, T0* C, T14 a1);
/* C_STRING.make_shared_from_pointer */
extern T0* T29c14(GE_context* ac, T14 a1);
/* FILE_INFO.utf_16_to_multi_byte */
extern T6 T130f18(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_DIRECTORY.file_info */
extern T0* T354f24(GE_context* ac, T0* C);
/* KL_DIRECTORY.readentry */
extern void T354f38(GE_context* ac, T0* C);
/* KL_DIRECTORY.eif_dir_next */
extern T14 T354f22(GE_context* ac, T0* C, T14 a1);
/* ET_C_GENERATOR.report_cannot_read_error */
extern void T76f600(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.is_open_read */
extern T1 T354f26(GE_context* ac, T0* C);
/* KL_DIRECTORY.is_closed */
extern T1 T354f16(GE_context* ac, T0* C);
/* KL_DIRECTORY.open_read */
extern void T354f32(GE_context* ac, T0* C);
/* KL_DIRECTORY.old_open_read */
extern void T354f37(GE_context* ac, T0* C);
/* KL_DIRECTORY.dir_open */
extern T14 T354f20(GE_context* ac, T0* C, T14 a1);
/* KL_DIRECTORY.internal_name_pointer */
extern T0* T354f19(GE_context* ac, T0* C);
/* KL_DIRECTORY.old_is_readable */
extern T1 T354f13(GE_context* ac, T0* C);
/* KL_DIRECTORY.eif_dir_is_readable */
extern T1 T354f28(GE_context* ac, T0* C, T14 a1);
/* KL_DIRECTORY.old_exists */
extern T1 T354f12(GE_context* ac, T0* C);
/* KL_DIRECTORY.eif_dir_exists */
extern T1 T354f27(GE_context* ac, T0* C, T14 a1);
/* KL_DIRECTORY.make */
extern void T354f30(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.make */
extern T0* T354c30(GE_context* ac, T0* a1);
/* KL_DIRECTORY.old_make */
extern void T354f35(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.make_with_name */
extern void T354f39(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.set_name */
extern void T354f41(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.string_ */
extern T0* T354f23(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring */
extern T0* T322f57(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_end_position */
extern T6 T322f79(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_start_position */
extern T6 T322f70(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.recognizes */
extern T1 T322f55(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_matched */
extern T1 T322f58(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_key_equality_tester */
extern void T55f52(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.string_equality_tester */
extern T0* T76f112(GE_context* ac, T0* C);
/* KL_STRING_EQUALITY_TESTER.default_create */
extern T0* T147c2(GE_context* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern void T55f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern T0* T55c51(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_with_equality_testers */
extern void T55f54(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_sparse_container */
extern void T55f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_internal_cursor */
extern void T55f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_slots */
extern void T55f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_clashes */
extern void T55f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_key_storage */
extern void T55f68(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].make */
extern T0* T172f2(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].default_create */
extern T0* T172c3(GE_context* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_item_storage */
extern void T55f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].force */
extern void T55f87(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_EXECUTION_ENVIRONMENT.interpreted_string */
extern T0* T67f4(GE_context* ac, T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.variable_value */
extern T0* T67f3(GE_context* ac, T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.environment_impl */
extern T0* T67f1(GE_context* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.string_ */
extern T0* T67f2(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.replace_all */
extern T0* T322f232(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replace_all_to_string */
extern void T322f306(GE_context* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_unbounded_substring */
extern void T322f320(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_substring */
extern void T322f318(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_it */
extern void T322f333(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_start */
extern T1 T322f150(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_internal */
extern T6 T322f233(GE_context* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_type */
extern T6 T322f297(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.match_not_repeated_characters */
extern T6 T322f296(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.infinity */
extern T6 T322f59(GE_context* ac, T0* C);
/* KL_PLATFORM.maximum_integer */
extern T6 T232f2(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.platform */
extern T0* T322f195(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_characters */
extern T6 T322f295(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_BYTE_CODE.character_item */
extern T6 T1081f8(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_classes */
extern T6 T322f294(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.character_set_has */
extern T1 T1081f10(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_refs */
extern T6 T322f293(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_ref */
extern T6 T322f299(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.space_set */
extern T0* T322f151(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.make */
extern T0* T1082c5(GE_context* ac, T0* a1);
/* RX_CHARACTER_SET.add_string */
extern void T1082f10(GE_context* ac, T0* C, T0* a1);
/* RX_CHARACTER_SET.add_character */
extern void T1082f9(GE_context* ac, T0* C, T6 a1);
/* RX_CHARACTER_SET.make_empty */
extern void T1082f4(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.make_empty */
extern T0* T1082c4(GE_context* ac);
/* KL_SPECIAL_ROUTINES [BOOLEAN].make_filled */
extern T0* T605f3(GE_context* ac, T0* C, T1 a1, T6 a2);
/* RX_CHARACTER_SET.special_boolean_ */
extern T0* T1082f3(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [BOOLEAN].default_create */
extern T0* T605c5(GE_context* ac);
/* RX_PCRE_REGULAR_EXPRESSION.digit_set */
extern T0* T322f167(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.has */
extern T1 T1082f2(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ims_options */
extern void T322f331(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_dotall */
extern T1 T322f86(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_multiline */
extern T1 T322f85(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_caseless */
extern T1 T322f84(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_match_count */
extern void T322f340(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_next_start */
extern void T322f339(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_recursive */
extern T6 T322f292(GE_context* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* RX_BYTE_CODE.integer_item */
extern T6 T1081f11(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.next_matching_alternate */
extern T6 T322f290(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_additional_bracket */
extern T6 T322f271(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.opcode_item */
extern T6 T1081f7(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.special_integer_ */
extern T0* T322f54(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.flip_case */
extern T6 T1083f4(GE_context* ac, T0* C, T6 a1);
/* RX_CASE_MAPPING.to_lower */
extern T6 T1083f3(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replacement_to_string */
extern void T322f319(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.append_code */
extern void T1206f76(GE_context* ac, T0* C, T10 a1);
/* UC_UTF8_STRING.append_item_code */
extern void T1206f96(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_captured_substring_to_string */
extern void T322f334(GE_context* ac, T0* C, T0* a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.string_ */
extern T0* T322f228(GE_context* ac, T0* C);
/* ET_C_GENERATOR.execution_environment */
extern T0* T76f127(GE_context* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.default_create */
extern T0* T67c5(GE_context* ac);
/* KL_STRING_ROUTINES.new_empty_string */
extern T0* T36f7(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T36f7ot1(T0* a1, T0** a2);
/* UC_UTF8_STRING.old_wipe_out */
extern void T1206f77(GE_context* ac, T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T1206f94(GE_context* ac, T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T1206f77p1(GE_context* ac, T0* C);
/* STRING_8.wipe_out */
extern void T17f73(GE_context* ac, T0* C);
/* ET_C_GENERATOR.string_ */
extern T0* T76f126(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match */
extern void T322f305(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].item */
extern T0* T139f8(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.current_system */
extern T0* T76f109(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_case_insensitive */
extern void T322f304(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_caseless */
extern void T322f317(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T322f303(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T322f303p1(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_startline */
extern void T322f316(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_startline */
extern T1 T322f231(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.first_significant_code */
extern T6 T322f190(GE_context* ac, T0* C, T6 a1, T6 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.find_firstchar */
extern T6 T322f230(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_anchored */
extern void T322f315(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.can_anchored */
extern T1 T322f229(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.ims_options */
extern T6 T322f148(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_dotall */
extern T6 T322f132(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_multiline */
extern T6 T322f130(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_caseless */
extern T6 T322f128(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_regexp */
extern void T322f314(GE_context* ac, T0* C, T6 a1, T1 a2, T1 a3, T6 a4);
/* RX_BYTE_CODE.set_count */
extern void T1081f18(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.find_fixed_code_length */
extern T6 T322f64(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.put_integer */
extern void T1081f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_branch */
extern void T322f332(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.meta_set */
extern T0* T322f147(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.maxlit */
extern T6 T322f146(GE_context* ac, T0* C);
/* RX_BYTE_CODE.append_character */
extern void T1081f19(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.put_character */
extern void T1081f25(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.resize_byte_code */
extern void T1081f24(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.special_integer_ */
extern T0* T1081f9(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_escape */
extern T6 T322f141(GE_context* ac, T0* C, T6 a1, T1 a2);
/* RX_PCRE_REGULAR_EXPRESSION.scan_hex_number */
extern T6 T322f223(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.xdigit_set */
extern T0* T322f245(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_octal_number */
extern T6 T322f222(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.escape_character */
extern T6 T322f218(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.to_option_ims */
extern T6 T322f135(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ichanged */
extern void T322f330(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_dotall */
extern T6 T322f133(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_multiline */
extern T6 T322f131(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_caseless */
extern T6 T322f129(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.scan_decimal_number */
extern T6 T322f110(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_repeats */
extern void T322f337(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5);
/* RX_BYTE_CODE.append_subcopy */
extern void T1081f23(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.put_opcode */
extern void T1081f22(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.move_right */
extern void T1081f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_single_repeat */
extern void T322f338(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* RX_PCRE_REGULAR_EXPRESSION.compile_character_class */
extern void T322f336(GE_context* ac, T0* C);
/* RX_BYTE_CODE.append_character_set */
extern void T1081f20(GE_context* ac, T0* C, T0* a1, T1 a2);
/* RX_BYTE_CODE.resize_character_sets */
extern void T1081f26(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].aliased_resized_area_with_default */
extern T0* T605f4(GE_context* ac, T0* C, T0* a1, T1 a2, T6 a3);
/* SPECIAL [BOOLEAN].aliased_resized_area_with_default */
extern T0* T125f5(GE_context* ac, T0* C, T1 a1, T6 a2);
/* SPECIAL [BOOLEAN].aliased_resized_area */
extern T0* T125f4(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.special_boolean_ */
extern T0* T1081f12(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.add_set */
extern void T1082f8(GE_context* ac, T0* C, T0* a1);
/* RX_CHARACTER_SET.add_negated_set */
extern void T1082f7(GE_context* ac, T0* C, T0* a1);
/* ARRAY [RX_CHARACTER_SET].item */
extern T0* T1085f4(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.class_sets */
extern T0* T322f159(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.default_word_set */
extern T0* T322f76(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.punct_set */
extern T0* T322f244(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.print_set */
extern T0* T322f243(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.graph_set */
extern T0* T322f242(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.cntrl_set */
extern T0* T322f241(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.ascii_set */
extern T0* T322f240(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alnum_set */
extern T0* T322f239(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.upper_set */
extern T0* T322f238(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.lower_set */
extern T0* T322f237(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alpha_set */
extern T0* T322f235(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_name */
extern T6 T322f157(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [STRING_8].item */
extern T0* T144f5(GE_context* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].count */
extern T6 T144f6(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.class_names */
extern T0* T322f236(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_syntax */
extern T6 T322f155(GE_context* ac, T0* C, T6 a1);
/* RX_CHARACTER_SET.wipe_out */
extern void T1082f6(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.actual_set */
extern T0* T322f152(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.compile_counted_repeats */
extern T1 T322f88(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.scan_comment */
extern void T322f335(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_undef */
extern T1 T322f61(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.append_integer */
extern void T1081f16(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.append_opcode */
extern void T1081f15(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_error */
extern void T322f313(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_internal_options */
extern void T322f312(GE_context* ac, T0* C);
/* RX_BYTE_CODE.wipe_out */
extern void T1081f14(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T322f311(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T322f311p1(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern T0* T322c302(GE_context* ac);
/* KL_SPECIAL_ROUTINES [INTEGER_32].make_filled */
extern T0* T174f5(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern void T322f302p1(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_options */
extern void T322f310(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_strict */
extern void T322f329(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_greedy */
extern void T322f328(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_eol */
extern void T322f327(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_bol */
extern void T322f326(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dollar_endonly */
extern void T322f325(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_empty_allowed */
extern void T322f324(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_extended */
extern void T322f323(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dotall */
extern void T322f322(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_multiline */
extern void T322f321(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_word_set */
extern void T322f309(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_character_case_mapping */
extern void T322f308(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.default_character_case_mapping */
extern T0* T322f75(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.make */
extern T0* T1083c6(GE_context* ac, T0* a1, T0* a2);
/* RX_CASE_MAPPING.add */
extern void T1083f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* RX_CASE_MAPPING.make_default */
extern void T1083f7(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.clear */
extern void T1083f9(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.special_integer_ */
extern T0* T1083f5(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T322f307(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T322f307p1(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.wipe_out */
extern void T36f20(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.keep_head */
extern void T1206f73(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.empty_pattern_buffer */
extern T0* T322f74(GE_context* ac, T0* C);
/* RX_BYTE_CODE.make */
extern T0* T1081c13(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].twin */
extern T0* T55f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].copy */
extern void T55f90(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].copy */
extern void T55f90p1(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_clashes */
extern void T55f95(GE_context* ac, T0* C);
/* SPECIAL [INTEGER_32].resized_area */
extern T0* T124f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].copy_data */
extern void T124f15(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [INTEGER_32].force */
extern void T124f11(GE_context* ac, T0* C, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].move_data */
extern void T124f17(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].overlapping_move */
extern void T124f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].non_overlapping_move */
extern void T124f18(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_slots */
extern void T55f94(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_key_storage */
extern void T55f93(GE_context* ac, T0* C);
/* SPECIAL [STRING_8].resized_area */
extern T0* T145f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].copy_data */
extern void T145f12(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [STRING_8].force */
extern void T145f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].move_data */
extern void T145f14(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].overlapping_move */
extern void T145f17(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].non_overlapping_move */
extern void T145f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_item_storage */
extern void T55f92(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].valid_cursor */
extern T1 T55f48(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.c_config */
extern T0* T76f125(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.parse_file */
extern void T535f180(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.parse */
extern void T535f184(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_pop_last_value */
extern void T535f197(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_push_error_value */
extern void T535f196(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ANY].force */
extern void T212f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ANY].fill_with */
extern void T211f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ANY].extend */
extern void T211f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ANY].aliased_resized_area */
extern T0* T212f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ANY].aliased_resized_area */
extern T0* T211f3(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_do_action */
extern void T535f195(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].force */
extern void T605f6(GE_context* ac, T0* C, T0* a1, T1 a2, T6 a3);
/* KL_SPECIAL_ROUTINES [BOOLEAN].aliased_resized_area */
extern T0* T605f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* UT_CONFIG_PARSER.is_defined */
extern T1 T535f136(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].has */
extern T1 T55f49(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.process_include */
extern void T535f208(GE_context* ac, T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.make */
extern T0* T1356c8(GE_context* ac, T6 a1);
/* INTEGER_32.out */
extern T0* T6f3(GE_context* ac, T6* C);
/* STRING_8.append_integer */
extern void T17f46(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].put */
extern void T1354f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].force */
extern void T1596f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [YY_BUFFER].fill_with */
extern void T1595f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [YY_BUFFER].extend */
extern void T1595f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [INTEGER_32].put */
extern void T661f13(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.execution_environment */
extern T0* T535f162(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].is_full */
extern T1 T1354f5(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.undefine_value */
extern void T535f207(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove */
extern void T55f96(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove_position */
extern void T55f97(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_keep_head */
extern void T55f101(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_keep_head */
extern void T55f100(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_cursors_forth */
extern void T55f99(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].internal_set_key_equality_tester */
extern void T55f98(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.ignored */
extern T1 T535f133(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_push_last_value */
extern void T535f194(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.accept */
extern void T535f193(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_do_error_action */
extern void T535f191(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.report_error */
extern void T535f206(GE_context* ac, T0* C, T0* a1);
extern T1 T535f206ot1(T0* a1, T0** a2);
/* UT_SYNTAX_ERROR.make */
extern T0* T1355c8(GE_context* ac, T0* a1, T6 a2);
/* UT_CONFIG_PARSER.report_eof_expected_error */
extern void T535f205(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.read_token */
extern void T535f190(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_execute_action */
extern void T535f204(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_set_beginning_of_line */
extern void T535f213(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_beginning_of_line */
extern void T206f28(GE_context* ac, T0* C, T1 a1);
/* YY_BUFFER.set_beginning_of_line */
extern void T207f17(GE_context* ac, T0* C, T1 a1);
/* UT_CONFIG_PARSER.text_item */
extern T2 T535f161(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.text_substring */
extern T0* T535f155(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.substring */
extern T0* T1214f6(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UT_CONFIG_PARSER.text_count */
extern T6 T535f154(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.string_ */
extern T0* T535f150(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.text */
extern T0* T535f149(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.set_start_condition */
extern void T535f211(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_execute_eof_action */
extern void T535f203(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.terminate */
extern void T535f212(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.wrap */
extern T1 T535f128(GE_context* ac, T0* C);
extern T1 T535f128ot1(T0* a1, T0** a2);
/* DS_ARRAYED_STACK [YY_BUFFER].remove */
extern void T1354f10(GE_context* ac, T0* C);
/* SPECIAL [YY_BUFFER].keep_head */
extern void T1595f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [YY_BUFFER].set_count */
extern void T1595f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].remove */
extern void T661f10(GE_context* ac, T0* C);
/* SPECIAL [INTEGER_32].keep_head */
extern void T124f14(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].set_count */
extern void T124f16(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].item */
extern T6 T661f5(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].item */
extern T0* T1354f7(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].is_empty */
extern T1 T1354f6(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_refill_input_buffer */
extern void T535f202(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_set_content */
extern void T535f200(GE_context* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.count */
extern T6 T1214f4(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.fill */
extern void T206f20(GE_context* ac, T0* C);
/* KL_CHARACTER_BUFFER.fill_from_stream */
extern T6 T1214f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_CHARACTER_BUFFER.put */
extern void T1214f10(GE_context* ac, T0* C, T2 a1, T6 a2);
/* YY_FILE_BUFFER.compact_left */
extern void T206f22(GE_context* ac, T0* C);
/* KL_CHARACTER_BUFFER.move_left */
extern void T1214f11(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_8.subcopy */
extern void T17f79(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* YY_FILE_BUFFER.resize */
extern void T206f24(GE_context* ac, T0* C);
/* KL_CHARACTER_BUFFER.resize */
extern void T1214f12(GE_context* ac, T0* C, T6 a1);
/* YY_FILE_BUFFER.default_capacity */
extern T6 T206f13(GE_context* ac, T0* C);
/* YY_BUFFER.fill */
extern void T207f15(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_index */
extern void T206f18(GE_context* ac, T0* C, T6 a1);
/* YY_BUFFER.set_index */
extern void T207f13(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_null_trans_state */
extern T6 T535f127(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_previous_state */
extern T6 T535f126(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.fatal_error */
extern void T535f201(GE_context* ac, T0* C, T0* a1);
/* UT_MESSAGE.make */
extern T0* T170c8(GE_context* ac, T0* a1);
/* KL_CHARACTER_BUFFER.item */
extern T2 T1214f3(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].force */
extern void T174f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_SPECIAL_ROUTINES [INTEGER_32].aliased_resized_area */
extern T0* T174f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* UT_CONFIG_PARSER.special_integer_ */
extern T0* T535f104(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_init_value_stacks */
extern void T535f189(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_clear_all */
extern void T535f198(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.clear_all */
extern void T535f209(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.clear_stacks */
extern void T535f214(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_clear_value_stacks */
extern void T535f215(GE_context* ac, T0* C);
/* SPECIAL [BOOLEAN].keep_head */
extern void T125f12(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].set_count */
extern void T125f13(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].keep_head */
extern void T211f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].set_count */
extern void T211f8(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.abort */
extern void T535f192(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.set_input_buffer */
extern void T535f183(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_load_input_buffer */
extern void T535f188(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_position */
extern void T206f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* YY_BUFFER.set_position */
extern void T207f14(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UT_CONFIG_PARSER.new_file_buffer */
extern T0* T535f103(GE_context* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.make */
extern T0* T206c17(GE_context* ac, T0* a1);
/* YY_FILE_BUFFER.make_with_size */
extern void T206f21(GE_context* ac, T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.make_with_size */
extern T0* T206c21(GE_context* ac, T0* a1, T6 a2);
/* YY_FILE_BUFFER.set_file */
extern void T206f23(GE_context* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.set_file_with_size */
extern void T206f25(GE_context* ac, T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.flush */
extern void T206f26(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.new_default_buffer */
extern T0* T206f15(GE_context* ac, T0* C, T6 a1);
/* KL_CHARACTER_BUFFER.make */
extern T0* T1214c9(GE_context* ac, T6 a1);
/* STRING_8.make_filled */
extern T0* T17c63(GE_context* ac, T2 a1, T6 a2);
/* ET_C_GENERATOR.console_application_mode */
extern T1 T76f435(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.define_value */
extern void T535f179(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UT_CONFIG_PARSER.make */
extern T0* T535c178(GE_context* ac, T0* a1);
/* DS_ARRAYED_STACK [INTEGER_32].make */
extern T0* T661c8(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].make */
extern T0* T174f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].make */
extern T0* T1354c8(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].make */
extern T0* T1596f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [YY_BUFFER].make_empty */
extern T0* T1595c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].default_create */
extern T0* T1596c2(GE_context* ac);
/* UT_CONFIG_PARSER.string_equality_tester */
extern T0* T535f97(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.make_parser_skeleton */
extern void T535f182(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_build_parser_tables */
extern void T535f187(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yycheck_template */
extern T0* T535f82(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yyfixed_array */
extern T0* T535f173(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].to_special */
extern T0* T174f4(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yytable_template */
extern T0* T535f81(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yypgoto_template */
extern T0* T535f135(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yypact_template */
extern T0* T535f134(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yydefgoto_template */
extern T0* T535f132(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yydefact_template */
extern T0* T535f129(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytypes2_template */
extern T0* T535f123(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytypes1_template */
extern T0* T535f121(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yyr1_template */
extern T0* T535f116(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytranslate_template */
extern T0* T535f115(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytranslate_template_2 */
extern void T535f217(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yyarray_subcopy */
extern void T535f224(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* KL_ARRAY_ROUTINES [INTEGER_32].subcopy */
extern void T530f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ARRAY [INTEGER_32].subcopy */
extern void T314f17(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* UT_CONFIG_PARSER.integer_array_ */
extern T0* T535f177(GE_context* ac, T0* C);
/* KL_ARRAY_ROUTINES [INTEGER_32].default_create */
extern T0* T530c2(GE_context* ac);
/* UT_CONFIG_PARSER.yytranslate_template_1 */
extern void T535f216(GE_context* ac, T0* C, T0* a1);
/* ARRAY [INTEGER_32].make_filled */
extern T0* T314c10(GE_context* ac, T6 a1, T6 a2, T6 a3);
/* ARRAY [INTEGER_32].make_filled_area */
extern void T314f12(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UT_CONFIG_PARSER.yy_create_value_stacks */
extern void T535f186(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [BOOLEAN].make */
extern T0* T605f1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ANY].make */
extern T0* T212f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].make_empty */
extern T0* T211c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ANY].default_create */
extern T0* T212c3(GE_context* ac);
/* UT_CONFIG_PARSER.make_scanner */
extern void T535f181(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.make_with_buffer */
extern void T535f185(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T535f199(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T535f199p1(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_build_tables */
extern void T535f210(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_accept_template */
extern T0* T535f169(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_fixed_array */
extern T0* T535f175(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_meta_template */
extern T0* T535f168(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_ec_template */
extern T0* T535f167(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_ec_template_2 */
extern void T535f223(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_array_subcopy */
extern void T535f225(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* UT_CONFIG_PARSER.yy_ec_template_1 */
extern void T535f222(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_def_template */
extern T0* T535f166(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_base_template */
extern T0* T535f165(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_chk_template */
extern T0* T535f164(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_chk_template_2 */
extern void T535f221(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_chk_template_1 */
extern void T535f220(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_nxt_template */
extern T0* T535f163(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_nxt_template_2 */
extern void T535f219(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_nxt_template_1 */
extern void T535f218(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.empty_buffer */
extern T0* T535f83(GE_context* ac, T0* C);
/* YY_BUFFER.make */
extern T0* T207c12(GE_context* ac, T0* a1);
/* YY_BUFFER.make_from_buffer */
extern void T207f16(GE_context* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.fill_from_string */
extern void T1214f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* YY_BUFFER.new_default_buffer */
extern T0* T207f11(GE_context* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.has_extension */
extern T1 T122f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.has_extension */
extern T1 T121f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].put_new */
extern void T55f86(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.right_adjust */
extern void T36f23(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.left_adjust */
extern void T36f22(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.remove_head */
extern void T1206f75(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.keep_tail */
extern void T1206f95(GE_context* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.nested_pathname */
extern T0* T122f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.nested_pathname */
extern T0* T121f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.generate_c_code */
extern void T76f500(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.dummy_feature */
extern T0* T76f111(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.make */
extern T0* T247c31(GE_context* ac, T0* a1, T0* a2, T0* a3);
extern T1 T247f31ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_set_reference_field_feature */
extern void T72f99(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.use_all_attributes */
extern void T72f100(GE_context* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_set_reference_field_dynamic_types */
extern void T239f23(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_set_reference_field_dynamic_types */
extern void T80f113(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_giaaa_error */
extern void T282f175(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_internal_error */
extern void T282f189(GE_context* ac, T0* C, T0* a1);
/* KL_STANDARD_FILES.error */
extern T0* T133f1(GE_context* ac, T0* C);
/* KL_STDERR_FILE.make */
extern T0* T134c5(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.std */
extern T0* T282f18(GE_context* ac, T0* C);
/* KL_STANDARD_FILES.default_create */
extern T0* T133c4(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.set_has_internal_error */
extern void T282f195(GE_context* ac, T0* C, T1 a1);
/* ET_INTERNAL_ERROR.make_giaaa */
extern T0* T426c13(GE_context* ac);
/* ET_ERROR_HANDLER.report_giaaa_error */
extern void T34f180(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_internal_error */
extern void T34f181(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.std */
extern T0* T34f23(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.set_has_internal_error */
extern void T34f182(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.error_handler */
extern T0* T80f82(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_fatal_error */
extern void T80f101(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_formal_argument_dynamic_types */
extern void T80f116(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.item */
extern T0* T327f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].item */
extern T0* T235f9(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_reference_field_feature */
extern void T72f98(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_reference_field_dynamic_types */
extern void T239f22(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_reference_field_dynamic_types */
extern void T80f112(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_result_dynamic_types */
extern void T80f111(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_new_type_instance_of_feature */
extern void T72f97(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T239f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T80f110(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.create_meta_type */
extern void T72f96(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.meta_type */
extern T0* T72f67(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.make_generic */
extern T0* T81c107(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.put_first */
extern void T251f27(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].force */
extern void T657f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T654f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].extend */
extern void T654f10(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.fixed_array */
extern T0* T251f12(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T657c3(GE_context* ac);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T251c26(GE_context* ac, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T251f26p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T657f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T654c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.right_bracket_symbol */
extern T0* T82f247(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_bracket */
extern T0* T369c72(GE_context* ac);
/* ET_SYMBOL.make_leaf */
extern void T369f83(GE_context* ac, T0* C);
/* ET_SYMBOL.tokens */
extern T0* T369f57(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_create */
extern T0* T82c1507(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_bracket_symbol */
extern T0* T82f246(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.make */
extern T0* T655c102(GE_context* ac);
/* ET_BRACKET_SYMBOL.make_leaf */
extern void T655f104(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.tokens */
extern T0* T655f58(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T251f10(GE_context* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.name */
extern T0* T1516f5(GE_context* ac, T0* C);
/* ET_IDENTIFIER.identifier */
extern T0* T183f75(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.name */
extern T0* T264f5(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.put_last */
extern void T287f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].force */
extern void T1035f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].fill_with */
extern void T1034f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].extend */
extern void T1034f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.fixed_array */
extern T0* T287f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].default_create */
extern T0* T1035c3(GE_context* ac);
/* ET_FORMAL_COMMA_ARGUMENT.type */
extern T0* T1516f4(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.type */
extern T0* T264f4(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.argument_type_set */
extern T0* T328f25(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.item */
extern T0* T287f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.argument_type_set */
extern T0* T247f26(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.formal_argument */
extern T0* T261f7(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_COMMA_ARGUMENT.formal_argument */
extern T0* T1516f6(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.formal_argument */
extern T0* T264f6(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.item */
extern T0* T261f6(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.make_with_capacity */
extern T0* T287c9(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].make */
extern T0* T1035f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].make_empty */
extern T0* T1034c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T239f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T80f63(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.make */
extern T0* T540c15(GE_context* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type */
extern void T540f20(GE_context* ac, T0* C, T0* a1);
extern T1 T540f20ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_TYPE_HASH_LIST.force_last */
extern void T290f22(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].force */
extern void T646f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].fill_with */
extern void T645f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].extend */
extern void T645f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.fixed_array */
extern T0* T290f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].default_create */
extern T0* T646c3(GE_context* ac);
/* ET_DYNAMIC_TYPE_HASH_LIST.hash_position */
extern T6 T290f12(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.modulus */
extern T6 T290f15(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_HASH_LIST.resize */
extern void T290f18(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.special_integer_ */
extern T0* T290f7(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T646f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T645f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.new_modulus */
extern T6 T290f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.new_capacity */
extern T6 T290f13(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.capacity */
extern T6 T290f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_HASH_LIST.put_last */
extern void T290f19(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.append_last */
extern void T290f21(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.make_with_capacity */
extern T0* T290c17(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].make */
extern T0* T646f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].make_empty */
extern T0* T645c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.alive_conforming_descendants */
extern T0* T239f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].found_item */
extern T0* T394f37(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T394f30(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].found */
extern T1 T394f35(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].search */
extern void T394f43(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].search_position */
extern void T394f47(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].hash_position */
extern T6 T394f28(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T394f32(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T394f21(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].slots_item */
extern T6 T394f24(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_map_default */
extern T0* T394c40(GE_context* ac);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_map */
extern void T394f44(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T394f48(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T394f51(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T394f57(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T394f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make */
extern T0* T1317c8(GE_context* ac, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].unset_found_item */
extern void T394f56(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_slots */
extern void T394f55(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T394f31(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_clashes */
extern void T394f54(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_key_storage */
extern void T394f53(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_item_storage */
extern void T394f52(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].default_capacity */
extern T6 T394f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.alive_conforming_descendants */
extern T0* T80f57(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.object_id_dynamic_type_set */
extern T0* T239f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.mark_type_alive */
extern void T239f16(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_alive_conforming_descendants */
extern void T239f21(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].forth */
extern void T394f42(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_forth */
extern void T394f46(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T394f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T1317f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_position */
extern void T1317f11(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T394f49(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_after */
extern void T1317f9(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T394f34(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_item */
extern T0* T394f26(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].key_for_iteration */
extern T0* T394f27(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_key */
extern T0* T394f25(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T394f20(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_after */
extern T1 T394f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T1317f4(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].start */
extern void T394f41(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_start */
extern void T394f45(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_off */
extern T1 T394f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].off */
extern T1 T1317f7(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].is_empty */
extern T1 T394f38(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_regular */
extern void T328f35(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_regular */
extern void T247f33(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.item */
extern T0* T329f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.current_system */
extern T0* T239f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_type_alive */
extern void T80f90(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_alive_conforming_descendants */
extern void T80f95(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_system */
extern T0* T80f67(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.dynamic_type */
extern T0* T72f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.initialize_dynamic_types */
extern void T72f85(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_DYNAMIC_SYSTEM.propagate_alive_conforming_descendants */
extern void T72f95(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.propagate_attribute_type_sets */
extern void T72f94(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.propagate_type_of_type_result_type */
extern void T72f93(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.initialize_predicate_type */
extern void T72f92(GE_context* ac, T0* C, T0* a1);
extern T1 T72f92ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_FUNCTION_TYPE.set_set_rout_disp_final_feature */
extern void T532f66(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_set_rout_disp_final_feature */
extern void T531f66(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_predicate_class */
extern T1 T83f80(GE_context* ac, T0* C);
/* ET_CLASS.class_codes */
extern T0* T83f155(GE_context* ac, T0* C);
/* ET_CLASS_CODES.default_create */
extern T0* T422c35(GE_context* ac);
/* ET_DYNAMIC_SYSTEM.initialize_function_type */
extern void T72f91(GE_context* ac, T0* C, T0* a1);
extern T1 T72f91ot1(T0* a1, T0** a2);
/* ET_CLASS.is_function_class */
extern T1 T83f79(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_procedure_type */
extern void T72f90(GE_context* ac, T0* C, T0* a1);
extern T1 T72f90ot1(T0* a1, T0** a2);
/* ET_CLASS.is_procedure_class */
extern T1 T83f78(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_typed_pointer_type */
extern void T72f89(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_typed_pointer_class */
extern T1 T83f126(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_array_type */
extern void T72f88(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_array_class */
extern T1 T83f125(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_special_type */
extern void T72f87(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_special_class */
extern T1 T83f75(GE_context* ac, T0* C);
/* ET_CLASS.has_interface_error */
extern T1 T83f99(GE_context* ac, T0* C);
/* ET_CLASS.interface_checked */
extern T1 T83f93(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_fatal_error */
extern void T72f84(GE_context* ac, T0* C);
/* ET_CLASS.has_implementation_error */
extern T1 T83f85(GE_context* ac, T0* C);
/* ET_CLASS.implementation_checked */
extern T1 T83f84(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_type_mark */
extern T0* T82f21(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_separate_mark */
extern void T368f16(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLICIT_TYPE_MARK.set_attached_mark */
extern void T368f15(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLICIT_TYPE_MARK.make */
extern T0* T368c14(GE_context* ac);
/* ET_DYNAMIC_SYSTEM.tokens */
extern T0* T72f64(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_dynamic_type */
extern T0* T72f56(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.register_dynamic_type */
extern void T72f86(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_index */
extern void T83f246(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].force_last */
extern void T235f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].resize */
extern void T235f19(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T235f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].extendible */
extern T1 T235f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.make */
extern T0* T240c49(GE_context* ac, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type */
extern void T291f17(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make_empty */
extern T0* T291c13(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make */
extern T0* T296c36(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T296f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T296f17(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T1042c9(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].unset_found_item */
extern void T296f45(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_slots */
extern void T296f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_modulus */
extern T6 T296f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_clashes */
extern void T296f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_key_storage */
extern void T296f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_item_storage */
extern void T296f41(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.empty_features */
extern T0* T240f24(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.make */
extern T0* T327c13(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].make */
extern T0* T1075f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].make_empty */
extern T0* T1072c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.fixed_array */
extern T0* T327f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].default_create */
extern T0* T1075c3(GE_context* ac);
/* ET_CLASS.hash_code */
extern T6 T83f227(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_predicate_type */
extern T0* T72f62(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.make */
extern T0* T532c52(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_FUNCTION_TYPE.make_type */
extern void T532f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.empty_features */
extern T0* T532f40(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.empty_dynamic_type_sets */
extern T0* T72f63(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.make */
extern T0* T287c14(GE_context* ac);
/* ET_DYNAMIC_SYSTEM.new_function_type */
extern T0* T72f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.new_procedure_type */
extern T0* T72f60(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.make */
extern T0* T531c52(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.make_type */
extern void T531f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.empty_features */
extern T0* T531f42(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_type_type */
extern T0* T72f59(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_class */
extern T1 T83f77(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_tuple_type */
extern T0* T72f58(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.make */
extern T0* T324c50(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.make_type */
extern void T324f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.empty_features */
extern T0* T324f40(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_special_type */
extern T0* T72f57(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.make */
extern T0* T341c50(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.make_type */
extern void T341f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.empty_features */
extern T0* T341f40(GE_context* ac, T0* C);
/* ET_CLASS.is_tuple_class */
extern T1 T83f76(GE_context* ac, T0* C);
/* ET_CLASS.is_generic */
extern T1 T83f164(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.tokens */
extern T0* T247f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.empty_dynamic_type_sets */
extern T0* T247f17(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.make */
extern T0* T533c73(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.empty_clients */
extern T0* T82f147(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.make */
extern T0* T483c12(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].make */
extern T0* T780f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].make_empty */
extern T0* T781c5(GE_context* ac, T6 a1);
/* ET_CLIENT_LIST.fixed_array */
extern T0* T483f3(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].default_create */
extern T0* T780c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.end_keyword */
extern T0* T82f90(GE_context* ac, T0* C);
/* ET_KEYWORD.make_end */
extern T0* T421c37(GE_context* ac);
/* ET_KEYWORD.make_token */
extern void T421f40(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_leaf */
extern void T421f41(GE_context* ac, T0* C);
/* ET_KEYWORD.tokens */
extern T0* T421f19(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.tokens */
extern T0* T533f31(GE_context* ac, T0* C);
/* ET_IDENTIFIER.make */
extern T0* T183c109(GE_context* ac, T0* a1);
/* ET_IDENTIFIER.make_with_hash_code */
extern void T183f119(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_with_hash_code */
extern T0* T183c119(GE_context* ac, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_leaf */
extern void T183f120(GE_context* ac, T0* C);
/* ET_IDENTIFIER.new_hash_code */
extern T6 T183f10(GE_context* ac, T0* C, T0* a1);
/* CHARACTER_8.upper */
extern T2 T2f22(GE_context* ac, T2* C);
/* CHARACTER_8.is_lower */
extern T1 T2f25(GE_context* ac, T2* C);
/* ET_C_GENERATOR.close_cpp_file */
extern void T76f533(GE_context* ac, T0* C);
/* ET_C_GENERATOR.close_c_file */
extern void T76f532(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.delete_file */
extern void T122f33(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.delete */
extern void T31f76(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_delete */
extern void T31f79(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_unlink */
extern void T31f81(GE_context* ac, T0* C, T14 a1);
/* KL_WINDOWS_FILE_SYSTEM.delete_file */
extern void T121f36(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_file */
extern void T76f531(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.rename_file */
extern void T122f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_TEXT_INPUT_FILE.change_name */
extern void T31f75(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.old_change_name */
extern void T31f78(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.rename_file */
extern void T31f80(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.set_name */
extern void T31f72(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.file_rename */
extern void T31f82(GE_context* ac, T0* C, T14 a1, T14 a2);
/* KL_TEXT_INPUT_FILE.same_physical_file */
extern T1 T31f35(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.canonical_pathname */
extern T0* T122f4(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname_to_string */
extern T0* T122f18(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.item */
extern T0* T544f8(GE_context* ac, T0* C, T6 a1);
/* KL_PATHNAME.is_parent */
extern T1 T544f7(GE_context* ac, T0* C, T6 a1);
/* KL_PATHNAME.is_current */
extern T1 T544f11(GE_context* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.root_directory */
extern T0* T122f15(GE_context* ac, T0* C);
/* KL_PATHNAME.set_canonical */
extern void T544f21(GE_context* ac, T0* C);
/* KL_PATHNAME.append_current */
extern void T544f23(GE_context* ac, T0* C);
/* KL_PATHNAME.append_name */
extern void T544f28(GE_context* ac, T0* C, T0* a1);
/* ARRAY [STRING_8].force */
extern void T144f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [STRING_8].capacity */
extern T6 T144f9(GE_context* ac, T0* C);
/* ARRAY [STRING_8].set_area */
extern void T144f16(GE_context* ac, T0* C, T0* a1);
/* ARRAY [STRING_8].make_empty_area */
extern void T144f15(GE_context* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].additional_space */
extern T6 T144f8(GE_context* ac, T0* C);
/* ARRAY [STRING_8].empty_area */
extern T1 T144f7(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.string_to_pathname */
extern T0* T122f19(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.append_parent */
extern void T544f24(GE_context* ac, T0* C);
/* KL_PATHNAME.set_relative */
extern void T544f22(GE_context* ac, T0* C, T1 a1);
/* KL_PATHNAME.make */
extern T0* T544c20(GE_context* ac);
/* KL_WINDOWS_FILE_SYSTEM.canonical_pathname */
extern T0* T121f4(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.pathname_to_string */
extern T0* T121f21(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.root_directory */
extern T0* T121f17(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.string_to_pathname */
extern T0* T121f20(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_drive */
extern void T544f27(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_sharename */
extern void T544f26(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_hostname */
extern void T544f25(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.file_system */
extern T0* T31f43(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.unix_file_system */
extern T0* T31f53(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.windows_file_system */
extern T0* T31f52(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.operating_system */
extern T0* T31f51(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.time_stamp */
extern T6 T31f42(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.date */
extern T6 T31f50(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.eif_file_date */
extern T6 T31f56(GE_context* ac, T0* C, T14 a1);
/* KL_TEXT_INPUT_FILE.count */
extern T6 T31f41(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_count */
extern T6 T31f49(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_size */
extern T6 T31f55(GE_context* ac, T0* C, T14 a1);
/* FILE_INFO.size */
extern T6 T130f17(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_write */
extern T1 T31f54(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.inode */
extern T6 T31f40(GE_context* ac, T0* C);
/* FILE_INFO.inode */
extern T6 T130f16(GE_context* ac, T0* C);
/* UC_UTF8_STRING.same_string */
extern T1 T1206f8(GE_context* ac, T0* C, T0* a1);
/* STRING_8.same_string */
extern T1 T17f9(GE_context* ac, T0* C, T0* a1);
/* STRING_8.same_characters */
extern T1 T17f15(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_TEXT_INPUT_FILE.tmp_file1 */
extern T0* T31f39(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.string_ */
extern T0* T31f28(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.rename_file */
extern void T121f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].wipe_out */
extern void T317f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T317f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T317f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T317f41(GE_context* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_TYPE].keep_head */
extern void T645f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].set_count */
extern void T645f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T317f40(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].keep_head */
extern void T1072f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].set_count */
extern void T1072f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].unset_found_item */
extern void T317f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T317f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T1074f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].set_after */
extern void T1074f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].wipe_out */
extern void T316f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].slots_wipe_out */
extern void T316f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].clashes_wipe_out */
extern void T316f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].key_storage_wipe_out */
extern void T316f47(GE_context* ac, T0* C);
/* SPECIAL [ET_INLINE_CONSTANT].keep_head */
extern void T1069f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].set_count */
extern void T1069f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].item_storage_wipe_out */
extern void T316f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].unset_found_item */
extern void T316f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].move_all_cursors_after */
extern void T316f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].set_next_cursor */
extern void T1068f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].set_after */
extern void T1068f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].wipe_out */
extern void T315f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_wipe_out */
extern void T315f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_wipe_out */
extern void T315f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_wipe_out */
extern void T315f48(GE_context* ac, T0* C);
/* SPECIAL [ET_FEATURE].keep_head */
extern void T1064f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].set_count */
extern void T1064f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_wipe_out */
extern void T315f47(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_CONSTANT].keep_head */
extern void T791f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTANT].set_count */
extern void T791f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].unset_found_item */
extern void T315f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].move_all_cursors_after */
extern void T315f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_next_cursor */
extern void T1066f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_after */
extern void T1066f9(GE_context* ac, T0* C);
/* ARRAY [INTEGER_32].fill_with */
extern void T314f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].wipe_out */
extern void T313f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].slots_wipe_out */
extern void T313f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].clashes_wipe_out */
extern void T313f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].key_storage_wipe_out */
extern void T313f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].item_storage_wipe_out */
extern void T313f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].unset_found_item */
extern void T313f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].move_all_cursors_after */
extern void T313f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE].set_next_cursor */
extern void T1063f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE].set_after */
extern void T1063f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].wipe_out */
extern void T319f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_wipe_out */
extern void T319f58(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_wipe_out */
extern void T319f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_wipe_out */
extern void T319f56(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_wipe_out */
extern void T319f55(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].unset_found_item */
extern void T319f54(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].move_all_cursors_after */
extern void T319f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_next_cursor */
extern void T1077f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_after */
extern void T1077f9(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].wipe_out */
extern void T78f43(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].slots_wipe_out */
extern void T78f62(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].clashes_wipe_out */
extern void T78f61(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].key_storage_wipe_out */
extern void T78f60(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].item_storage_wipe_out */
extern void T78f59(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].unset_found_item */
extern void T78f46(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].move_all_cursors_after */
extern void T78f58(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].set_next_cursor */
extern void T390f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_after */
extern void T390f10(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].forth */
extern void T319f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_forth */
extern void T319f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].add_traversing_cursor */
extern void T319f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_position */
extern void T1077f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].remove_traversing_cursor */
extern void T319f65(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_item */
extern T6 T319f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_for_iteration */
extern T0* T319f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_key */
extern T0* T319f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_item */
extern T0* T319f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_for_iteration */
extern T1 T319f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_item */
extern T1 T319f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_item */
extern T1 T319f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].after */
extern T1 T319f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_after */
extern T1 T319f36(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].after */
extern T1 T1077f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].start */
extern void T319f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_start */
extern void T319f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_off */
extern T1 T319f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].off */
extern T1 T1077f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].is_empty */
extern T1 T319f31(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].forth */
extern void T78f42(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_forth */
extern void T78f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].add_traversing_cursor */
extern void T78f68(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_position */
extern void T390f12(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].remove_traversing_cursor */
extern void T78f67(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].clashes_item */
extern T6 T78f20(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.include_runtime_file */
extern void T76f530(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [STRING_8].item_for_iteration */
extern T0* T78f36(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_item */
extern T0* T78f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].item_storage_item */
extern T0* T78f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].after */
extern T1 T78f25(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_after */
extern T1 T78f29(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].after */
extern T1 T390f7(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].start */
extern void T78f41(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_start */
extern void T78f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].cursor_off */
extern T1 T78f34(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].off */
extern T1 T390f5(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].is_empty */
extern T1 T78f33(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_end_extern_c */
extern void T76f529(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_main_function */
extern void T76f528(GE_context* ac, T0* C);
/* ET_C_GENERATOR.dedent */
extern void T76f576(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.remove_last */
extern void T287f11(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].keep_head */
extern void T1035f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].keep_head */
extern void T1034f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].set_count */
extern void T1034f10(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_creation_expression */
extern void T76f599(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].wipe_out */
extern void T293f13(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_EXPRESSION].keep_head */
extern void T842f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION].set_count */
extern void T842f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].move_all_cursors_after */
extern void T293f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_next_cursor */
extern void T1037f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_after */
extern void T1037f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attachment_expression */
extern void T76f634(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_boxed_attribute_item_access */
extern void T76f604(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_void_expression */
extern void T76f612(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_expression */
extern void T76f611(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_item_name */
extern void T76f594(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_expression */
extern void T76f655(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_cast */
extern void T76f649(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_name */
extern void T76f593(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [INTEGER_32].wipe_out */
extern void T280f17(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].move_all_cursors_after */
extern void T280f24(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_next_cursor */
extern void T1029f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_after */
extern void T1029f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_last_new */
extern void T55f76(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [INTEGER_32].item */
extern T6 T280f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].sort */
extern void T280f20(GE_context* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort */
extern void T361f3(GE_context* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort_with_comparator */
extern void T361f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [INTEGER_32].subsort_with_comparator */
extern void T361f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ARRAY [INTEGER_32].force */
extern void T314f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].capacity */
extern T6 T314f7(GE_context* ac, T0* C);
/* ARRAY [INTEGER_32].set_area */
extern void T314f16(GE_context* ac, T0* C, T0* a1);
/* ARRAY [INTEGER_32].make_empty_area */
extern void T314f15(GE_context* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].additional_space */
extern T6 T314f6(GE_context* ac, T0* C);
/* ARRAY [INTEGER_32].empty_area */
extern T1 T314f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].swap */
extern void T280f26(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER_32].replace */
extern void T280f23(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].less_than */
extern T1 T536f1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].detachable_less_than */
extern T1 T536f2(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].attached_less_than */
extern T1 T536f3(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].put */
extern void T314f13(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_C_GENERATOR.dynamic_type_id_sorter */
extern T0* T76f230(GE_context* ac, T0* C);
/* DS_QUICK_SORTER [INTEGER_32].make */
extern T0* T361c2(GE_context* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].make */
extern T0* T536c4(GE_context* ac);
/* DS_ARRAYED_LIST [INTEGER_32].is_empty */
extern T1 T280f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].put_last */
extern void T280f22(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].resize */
extern void T280f21(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.argument_type_set_in_feature */
extern T0* T76f255(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].item */
extern T0* T293f6(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_creation_procedure_name */
extern void T76f648(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_type_name */
extern void T76f595(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.new_temp_variable */
extern T0* T76f140(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].force_last */
extern void T280f18(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_capacity */
extern T6 T280f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].extendible */
extern T1 T280f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].force_last */
extern void T289f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].force */
extern void T214f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].fill_with */
extern void T213f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].extend */
extern void T213f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].resize */
extern void T289f12(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].aliased_resized_area */
extern T0* T214f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IDENTIFIER].aliased_resized_area */
extern T0* T213f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_capacity */
extern T6 T289f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].extendible */
extern T1 T289f7(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_temporary */
extern void T183f116(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].item */
extern T0* T289f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].replace */
extern void T235f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.same_declaration_types */
extern T1 T76f436(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_writable */
extern void T76f647(GE_context* ac, T0* C, T0* a1);
extern T1 T76f647ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_attribute_access */
extern void T76f574(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_attribute_name */
extern void T76f596(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_type_cast */
extern void T76f570(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.current_keyword */
extern T0* T82f26(GE_context* ac, T0* C);
/* ET_CURRENT.make */
extern T0* T303c31(GE_context* ac);
/* ET_CURRENT.make_token */
extern void T303f33(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.make_leaf */
extern void T303f34(GE_context* ac, T0* C);
/* ET_CURRENT.tokens */
extern T0* T303f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.tokens */
extern T0* T76f472(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].remove */
extern void T208f43(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].remove_position */
extern void T208f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_put */
extern void T208f73(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_put */
extern void T208f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_keep_head */
extern void T208f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_keep_head */
extern void T208f71(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].keep_head */
extern void T213f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].set_count */
extern void T213f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_put */
extern void T208f60(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].slots_put */
extern void T208f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_item */
extern T6 T208f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].move_cursors_forth */
extern void T208f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_position */
extern void T635f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_next_cursor */
extern void T635f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_after */
extern void T635f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].internal_set_key_equality_tester */
extern void T208f69(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_equality_tester */
extern T0* T208f24(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].slots_item */
extern T6 T208f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].hash_position */
extern T6 T208f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_item */
extern T0* T208f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_item */
extern T0* T208f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].search_position */
extern void T208f44(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TESTER.test */
extern T1 T320f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.same_identifier */
extern T1 T183f24(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.same_case_insensitive */
extern T1 T36f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* CHARACTER_8.lower */
extern T2 T2f21(GE_context* ac, T2* C);
/* UC_UNICODE_ROUTINES.lower_code */
extern T6 T1134f1(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_codes */
extern T0* T1134f2(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_plane */
extern T0* T1134f5(GE_context* ac, T0* C);
/* SPECIAL [ARRAY [INTEGER_32]].make_filled */
extern T0* T1558c4(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [ARRAY [INTEGER_32]].fill_with */
extern void T1558f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ARRAY [INTEGER_32]].extend */
extern void T1558f8(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [ARRAY [INTEGER_32]].make_empty */
extern void T1558f6(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.empty_lower_code_segment */
extern T0* T1134f12(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.to_integer */
extern T6 T233f4(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.integer_ */
extern T0* T1134f23(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1 */
extern T0* T1134f4(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1_segment_4 */
extern T0* T1134f22(GE_context* ac, T0* C);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].make_filled */
extern T0* T1559c4(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].fill_with */
extern void T1559f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].extend */
extern void T1559f8(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].make_empty */
extern void T1559f6(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_code_plane_0 */
extern T0* T1134f3(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_255 */
extern T0* T1134f21(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_167 */
extern T0* T1134f20(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_166 */
extern T0* T1134f19(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_44 */
extern T0* T1134f18(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_36 */
extern T0* T1134f17(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_33 */
extern T0* T1134f16(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_31 */
extern T0* T1134f15(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_30 */
extern T0* T1134f14(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_16 */
extern T0* T1134f13(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_5 */
extern T0* T1134f11(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_4 */
extern T0* T1134f10(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_3 */
extern T0* T1134f9(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_2 */
extern T0* T1134f8(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_1 */
extern T0* T1134f7(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_0 */
extern T0* T1134f6(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.unicode */
extern T0* T36f13(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.default_create */
extern T0* T1134c52(GE_context* ac);
/* ET_IDENTIFIER.string_ */
extern T0* T183f35(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].unset_found_item */
extern void T208f49(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_local_variable */
extern void T76f662(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_local_name */
extern void T76f667(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_IDENTIFIER].has */
extern T1 T208f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].force_last */
extern void T208f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].resize */
extern void T208f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_resize */
extern void T208f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].special_integer_ */
extern T0* T208f35(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_resize */
extern void T208f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_resize */
extern void T208f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].slots_resize */
extern void T208f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_modulus */
extern T6 T208f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_capacity */
extern T6 T208f19(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_across_cursor */
extern void T76f661(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_cursor_name */
extern void T76f666(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_temporary_variable */
extern void T76f660(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_temporary */
extern T1 T183f30(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_formal_argument */
extern void T76f659(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_argument_name */
extern void T76f619(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_STACK [ET_EXPRESSION].force */
extern void T292f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].force */
extern void T841f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPRESSION].fill_with */
extern void T842f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPRESSION].extend */
extern void T842f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].resize */
extern void T292f11(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].aliased_resized_area */
extern T0* T841f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPRESSION].aliased_resized_area */
extern T0* T842f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].new_capacity */
extern T6 T292f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].extendible */
extern T1 T292f6(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.fill_call_operands */
extern void T76f646(GE_context* ac, T0* C, T6 a1);
extern T1 T76f646ot1(T0* a1, T0** a2);
/* DS_ARRAYED_STACK [ET_EXPRESSION].prune */
extern void T292f10(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.mark_temp_variable_free */
extern void T76f575(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.is_temp_variable_frozen */
extern T1 T76f275(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].i_th */
extern T0* T292f5(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].put_last */
extern void T293f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].resize */
extern void T293f16(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_operand */
extern void T76f645(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.arguments */
extern T0* T349f6(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.name */
extern T0* T349f5(GE_context* ac, T0* C);
/* ET_C_GENERATOR.dynamic_type_set */
extern T0* T76f243(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.item */
extern T0* T295f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.valid_index */
extern T1 T295f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.valid_index */
extern T1 T287f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.force_last */
extern void T287f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.resize */
extern void T287f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T1035f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T1034f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.new_capacity */
extern T6 T287f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.capacity */
extern T6 T287f6(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.make */
extern T0* T349c26(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.create_keyword */
extern T0* T82f261(GE_context* ac, T0* C);
/* ET_KEYWORD.make_create */
extern T0* T421c42(GE_context* ac);
/* ET_CREATE_EXPRESSION.tokens */
extern T0* T349f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.make */
extern T0* T350c5(GE_context* ac, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_show_console_call */
extern void T76f598(GE_context* ac, T0* C);
/* ARRAY [INTEGER_32].item */
extern T6 T314f4(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_routine_name */
extern void T76f591(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T76f591ot1(T0* a1, T0** a2);
/* ET_CLASS.upper_name */
extern T0* T83f158(GE_context* ac, T0* C);
/* ET_IDENTIFIER.upper_name */
extern T0* T183f22(GE_context* ac, T0* C);
/* UC_UTF8_STRING.as_upper */
extern T0* T1206f26(GE_context* ac, T0* C);
/* UC_UTF8_STRING.to_upper */
extern void T1206f84(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code */
extern T6 T1134f29(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.upper_codes */
extern T0* T1134f30(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_plane */
extern T0* T1134f33(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_segment */
extern T0* T1134f40(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1 */
extern T0* T1134f32(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1_segment_4 */
extern T0* T1134f51(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0 */
extern T0* T1134f31(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_255 */
extern T0* T1134f50(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_167 */
extern T0* T1134f49(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_166 */
extern T0* T1134f48(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_45 */
extern T0* T1134f47(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_44 */
extern T0* T1134f46(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_36 */
extern T0* T1134f45(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_33 */
extern T0* T1134f44(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_31 */
extern T0* T1134f43(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_30 */
extern T0* T1134f42(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_29 */
extern T0* T1134f41(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_5 */
extern T0* T1134f39(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_4 */
extern T0* T1134f38(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_3 */
extern T0* T1134f37(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_2 */
extern T0* T1134f36(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_1 */
extern T0* T1134f35(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_0 */
extern T0* T1134f34(GE_context* ac, T0* C);
/* UC_UTF8_STRING.unicode */
extern T0* T1206f54(GE_context* ac, T0* C);
/* STRING_8.as_upper */
extern T0* T17f30(GE_context* ac, T0* C);
/* STRING_8.to_upper */
extern void T17f68(GE_context* ac, T0* C);
/* STRING_8.to_upper_area */
extern void T17f72(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_escaped_string */
extern void T76f592(GE_context* ac, T0* C, T0* a1);
/* UT_INTEGER_FORMATTER.put_octal_integer */
extern void T375f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.integer_formatter_ */
extern T0* T76f260(GE_context* ac, T0* C);
/* UT_INTEGER_FORMATTER.default_create */
extern T0* T375c1(GE_context* ac);
/* ET_C_GENERATOR.print_temp_name */
extern void T76f569(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.temp_variable */
extern T0* T76f150(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_type_declaration */
extern void T76f565(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_eif_any_type_name */
extern void T76f537(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_indentation */
extern void T76f567(GE_context* ac, T0* C);
/* ET_C_GENERATOR.indent */
extern void T76f566(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_types_array */
extern void T76f527(GE_context* ac, T0* C);
extern T1 T76f527ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_SYSTEM.is_new_instance_type */
extern T1 T72f68(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].has */
extern T1 T78f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].search_position */
extern void T78f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].hash_position */
extern T6 T78f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].key_storage_item */
extern T0* T78f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].key_equality_tester */
extern T0* T78f26(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].slots_item */
extern T6 T78f21(GE_context* ac, T0* C, T6 a1);
/* STRING_8.replace_substring_all */
extern void T17f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* SPECIAL [CHARACTER_8].resized_area_with_default */
extern T0* T15f8(GE_context* ac, T0* C, T2 a1, T6 a2);
/* detachable ARRAYED_LIST [INTEGER_32].area */
extern T0* T1471f3(GE_context* ac, T0* C);
/* STRING_8_SEARCHER.substring_index_list_with_deltas */
extern T0* T1470f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* detachable ARRAYED_LIST [INTEGER_32].extend */
extern void T1471f9(GE_context* ac, T0* C, T6 a1);
/* detachable ARRAYED_LIST [INTEGER_32].additional_space */
extern T6 T1471f5(GE_context* ac, T0* C);
/* detachable ARRAYED_LIST [INTEGER_32].capacity */
extern T6 T1471f6(GE_context* ac, T0* C);
/* detachable ARRAYED_LIST [INTEGER_32].count */
extern T6 T1471f4(GE_context* ac, T0* C);
/* detachable ARRAYED_LIST [INTEGER_32].make */
extern T0* T1471c8(GE_context* ac, T6 a1);
/* STRING_8_SEARCHER.initialize_deltas */
extern void T1470f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_deferred */
extern T1 T83f109(GE_context* ac, T0* C);
/* ET_CLASS.has_deferred_mark */
extern T1 T83f108(GE_context* ac, T0* C);
/* ET_KEYWORD.is_deferred */
extern T1 T421f32(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_special_item_name */
extern void T76f597(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.item_feature_name */
extern T0* T82f28(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].wipe_out */
extern void T235f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T235f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T647f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_after */
extern void T647f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].sort */
extern void T235f14(GE_context* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [ET_DYNAMIC_TYPE].sort */
extern void T344f3(GE_context* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [ET_DYNAMIC_TYPE].sort_with_comparator */
extern void T344f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [ET_DYNAMIC_TYPE].subsort_with_comparator */
extern void T344f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].swap */
extern void T235f22(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_DYNAMIC_TYPE_COMPARATOR_BY_ID.less_than */
extern T1 T345f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].is_empty */
extern T1 T235f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].append_last */
extern void T235f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].extend_last */
extern void T235f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].forth */
extern void T1042f14(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_forth */
extern void T296f48(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T296f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T1042f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_position */
extern void T1042f12(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T296f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_after */
extern void T1042f10(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_item */
extern T6 T296f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].item */
extern T0* T1042f6(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_item */
extern T0* T296f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T296f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].after */
extern T1 T1042f8(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].start */
extern void T1042f13(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_start */
extern void T296f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_off */
extern T1 T296f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].off */
extern T1 T1042f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].is_empty */
extern T1 T296f20(GE_context* ac, T0* C);
/* DS_QUICK_SORTER [ET_DYNAMIC_TYPE].make */
extern T0* T344c2(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.dynamic_type_comparator */
extern T0* T76f158(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_COMPARATOR_BY_ID.make */
extern T0* T345c2(GE_context* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].make */
extern T0* T235c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T235f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T235f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T647c5(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].found_item */
extern T0* T317f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T317f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].found */
extern T1 T317f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].search */
extern void T317f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].search_position */
extern void T317f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].hash_position */
extern T6 T317f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T317f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T317f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].slots_item */
extern T6 T317f21(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_dynamic_type_id_set_constants */
extern void T76f526(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].forth */
extern void T55f74(GE_context* ac, T0* C);
/* UC_UTF8_STRING.occurrences */
extern T6 T1206f11(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.code_occurrences */
extern T6 T1206f39(GE_context* ac, T0* C, T6 a1);
/* STRING_8.occurrences */
extern T6 T17f28(GE_context* ac, T0* C, T2 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_for_iteration */
extern T0* T55f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_for_iteration */
extern T0* T55f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].after */
extern T1 T55f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_after */
extern T1 T55f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].start */
extern void T55f73(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_init_const_function */
extern void T76f525(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].forth */
extern void T316f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_forth */
extern void T316f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].add_traversing_cursor */
extern void T316f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].set_position */
extern void T1068f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].remove_traversing_cursor */
extern void T316f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].clashes_item */
extern T6 T316f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].item_for_iteration */
extern T0* T316f20(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_item */
extern T0* T316f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].item_storage_item */
extern T0* T316f36(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.constant */
extern T0* T1294f16(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_inline_constant_name */
extern void T76f589(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].key_for_iteration */
extern T0* T316f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_key */
extern T0* T316f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].key_storage_item */
extern T0* T316f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].after */
extern T1 T316f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_after */
extern T1 T316f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].after */
extern T1 T1068f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].start */
extern void T316f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_start */
extern void T316f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_off */
extern T1 T316f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].off */
extern T1 T1068f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].is_empty */
extern T1 T316f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].forth */
extern void T315f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_forth */
extern void T315f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].add_traversing_cursor */
extern void T315f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_position */
extern void T1066f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].remove_traversing_cursor */
extern void T315f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_item */
extern T6 T315f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_for_iteration */
extern T0* T315f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_item */
extern T0* T315f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_item */
extern T0* T315f20(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_once_value_name */
extern void T76f588(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_once_status_name */
extern void T76f590(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].has */
extern T1 T313f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].search_position */
extern void T313f36(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].hash_position */
extern T6 T313f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].key_storage_item */
extern T0* T313f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].clashes_item */
extern T6 T313f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].slots_item */
extern T6 T313f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_for_iteration */
extern T0* T315f22(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_key */
extern T0* T315f27(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_item */
extern T0* T315f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].after */
extern T1 T315f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_after */
extern T1 T315f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].after */
extern T1 T1066f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].start */
extern void T315f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_start */
extern void T315f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_off */
extern T1 T315f29(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].off */
extern T1 T1066f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].is_empty */
extern T1 T315f28(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_constants_declaration */
extern void T76f524(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_functions */
extern void T76f523(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].wipe_out */
extern void T297f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T297f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T297f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T297f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T297f50(GE_context* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].keep_head */
extern void T1040f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].set_count */
extern void T1040f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].unset_found_item */
extern void T297f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T297f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T1043f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].set_after */
extern void T1043f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].forth */
extern void T297f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_forth */
extern void T297f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T297f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].set_position */
extern void T1043f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T297f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T297f24(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_deep_twin_polymorphic_call_function */
extern void T76f587(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_default_entity_value */
extern void T76f624(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_default_name */
extern void T76f571(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].wipe_out */
extern void T294f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_wipe_out */
extern void T294f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_wipe_out */
extern void T294f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_wipe_out */
extern void T294f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_wipe_out */
extern void T294f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].unset_found_item */
extern void T294f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].move_all_cursors_after */
extern void T294f45(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].set_next_cursor */
extern void T1039f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].set_after */
extern void T1039f7(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_binary_search_polymorphic_call */
extern void T76f644(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_adapted_deep_twin_call */
extern void T76f643(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_deep_twin_call */
extern T0* T76f643ac1(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [attached] PROCEDURE [[attached] TUPLE].set_rout_disp_final */
extern void T370f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_C_GENERATOR.print_deep_twin_call */
extern void T76f658(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_target_expression */
extern void T76f638(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_adapted_expression */
extern void T76f651(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item */
extern T0* T294f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_item */
extern T0* T294f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].search_position */
extern void T294f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].hash_position */
extern T6 T294f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_item */
extern T6 T294f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_item */
extern T6 T294f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_item */
extern T6 T294f21(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_attribute_type_id_access */
extern void T76f620(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_type_id_name */
extern void T76f606(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].force_last */
extern void T294f36(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_put */
extern void T294f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_put */
extern void T294f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_put */
extern void T294f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].resize */
extern void T294f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_resize */
extern void T294f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].special_integer_ */
extern T0* T294f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_resize */
extern void T294f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_resize */
extern void T294f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_resize */
extern void T294f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_modulus */
extern T6 T294f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_capacity */
extern T6 T294f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_put */
extern void T294f43(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.print_current_name */
extern void T76f618(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T297f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_item */
extern T0* T297f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T297f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T297f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_after */
extern T1 T297f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T1043f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].start */
extern void T297f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_start */
extern void T297f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_off */
extern T1 T297f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].off */
extern T1 T1043f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].is_empty */
extern T1 T297f22(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_function */
extern void T76f586(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f586ac1(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #2 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f586ac2(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #3 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f586ac3(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #4 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f586ac4(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #5 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f586ac5(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #6 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f586ac6(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #7 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f586ac7(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #8 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f586ac8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #9 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f586ac9(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #10 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f586ac10(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #11 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f586ac11(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #12 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f586ac12(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T76f586ot1(T0* a1, T0** a2);
extern T1 T76f586ot2(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_attribute_tuple_item_access */
extern void T76f585(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_attribute_tuple_item_name */
extern void T76f609(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_special_indexed_item_access */
extern void T76f641(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.reset_temp_variables */
extern void T76f577(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_set_deep_twined_attribute */
extern void T76f642(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_deep_twined_attribute */
extern void T76f657(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_types */
extern void T291f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].force_last_new */
extern void T297f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_put */
extern void T297f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_put */
extern void T297f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].force */
extern void T1041f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].fill_with */
extern void T1040f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].extend */
extern void T1040f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_put */
extern void T297f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_put */
extern void T297f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_item */
extern T6 T297f38(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].hash_position */
extern T6 T297f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].resize */
extern void T297f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_resize */
extern void T297f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T297f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T297f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T297f64(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T1041f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T1040f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T297f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_resize */
extern void T297f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T297f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T297f34(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.force_last */
extern void T295f11(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.fixed_array */
extern T0* T295f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].default_create */
extern T0* T1041c3(GE_context* ac);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.resize */
extern void T295f9(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.new_capacity */
extern T6 T295f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.capacity */
extern T6 T295f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make */
extern T0* T291c18(GE_context* ac, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset */
extern void T291f16(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.wipe_out */
extern void T290f20(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].keep_head */
extern void T646f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].found_item */
extern T0* T297f27(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].found */
extern T1 T297f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].search */
extern void T297f43(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].search_position */
extern void T297f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].force_last */
extern void T296f40(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_put */
extern void T296f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_put */
extern void T296f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_item */
extern T6 T296f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].hash_position */
extern T6 T296f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].resize */
extern void T296f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_resize */
extern void T296f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T296f32(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_resize */
extern void T296f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_resize */
extern void T296f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T296f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_resize */
extern void T296f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T296f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_put */
extern void T296f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].search_position */
extern void T296f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_equality_tester */
extern T0* T296f30(GE_context* ac, T0* C);
/* ET_C_GENERATOR.result_type_set_in_feature */
extern T0* T76f236(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_special_count_access */
extern void T76f573(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_count_name */
extern void T76f614(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.first */
extern T0* T327f4(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_special_item_access */
extern void T76f584(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_TOKEN_CONSTANTS.result_keyword */
extern T0* T82f27(GE_context* ac, T0* C);
/* ET_RESULT.make */
extern T0* T331c30(GE_context* ac);
/* ET_RESULT.make_token */
extern void T331f32(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT.make_leaf */
extern void T331f33(GE_context* ac, T0* C);
/* ET_RESULT.tokens */
extern T0* T331f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_special_capacity_access */
extern void T76f572(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_capacity_name */
extern void T76f613(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_result_name */
extern void T76f568(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].wipe_out */
extern void T312f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_wipe_out */
extern void T312f51(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_wipe_out */
extern void T312f50(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_wipe_out */
extern void T312f49(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_wipe_out */
extern void T312f48(GE_context* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].keep_head */
extern void T1060f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].set_count */
extern void T1060f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].unset_found_item */
extern void T312f43(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].move_all_cursors_after */
extern void T312f47(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_next_cursor */
extern void T1059f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_after */
extern void T1059f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].forth */
extern void T312f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_forth */
extern void T312f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].add_traversing_cursor */
extern void T312f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_position */
extern void T1059f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].remove_traversing_cursor */
extern void T312f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_item */
extern T6 T312f23(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_manifest_tuple_function */
extern void T76f522(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_for_iteration */
extern T0* T312f29(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_item */
extern T0* T312f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_item */
extern T0* T312f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T312f34(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_after */
extern T1 T312f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T1059f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].start */
extern void T312f36(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_start */
extern void T312f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_off */
extern T1 T312f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].off */
extern T1 T1059f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].is_empty */
extern T1 T312f21(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_big_manifest_array_function */
extern void T76f521(GE_context* ac, T0* C, T0* a1);
extern T1 T76f521ot1(T0* a1, T0** a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].wipe_out */
extern void T296f39(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T296f53(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T296f52(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T296f51(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T296f50(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T296f49(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].forth */
extern void T296f38(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_manifest_array_function */
extern void T76f520(GE_context* ac, T0* C, T0* a1);
extern T1 T76f520ot1(T0* a1, T0** a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T296f33(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].after */
extern T1 T296f22(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_after */
extern T1 T296f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].start */
extern void T296f37(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_tuple_label_call_functions */
extern void T76f519(GE_context* ac, T0* C);
extern T1 T76f519ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_polymorphic_call_function */
extern void T76f578(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T76f578ot1(T0* a1, T0** a2);
extern T1 T76f578ot2(T0* a1, T0** a2);
/* ET_MANIFEST_TUPLE.wipe_out */
extern void T311f31(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].keep_head */
extern void T843f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].keep_head */
extern void T844f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].set_count */
extern void T844f9(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.fixed_array */
extern T0* T311f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].default_create */
extern T0* T843c3(GE_context* ac);
/* ET_C_GENERATOR.print_binary_search_polymorphic_calls */
extern void T76f625(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T6 a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.print_named_procedure_call */
extern void T76f623(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_procedure_call */
extern void T76f654(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_inlined_procedure_call */
extern void T76f665(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_ARRAYED_LIST [ET_EXPRESSION].first */
extern T0* T293f10(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_procedure_call */
extern void T76f664(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_procedure_call */
extern void T76f684(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_set_object_comparison_call */
extern void T76f755(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_adapted_attribute_access */
extern void T76f668(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_boxed_attribute_access */
extern void T76f685(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_builtin_special_procedure_call */
extern void T76f683(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_put_call */
extern void T76f754(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_procedure_call */
extern void T76f682(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_set_item_call */
extern void T76f753(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_unboxed_expression */
extern void T76f637(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_procedure_call */
extern void T76f681(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_fast_call_call */
extern void T76f752(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_call_call */
extern void T76f751(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_routine_call_call */
extern void T76f953(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T76f953ot1(T0* a1, T0** a2);
extern T1 T76f953ot2(T0* a1, T0** a2);
extern T1 T76f953ot3(T0* a1, T0** a2);
extern T1 T76f953ot4(T0* a1, T0** a2);
extern T1 T76f953ot5(T0* a1, T0** a2);
extern T1 T76f953ot6(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_call_operands_unfrozen */
extern void T76f957(GE_context* ac, T0* C);
extern T1 T76f957ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_temp_variable_unfrozen */
extern void T76f959(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.make */
extern T0* T332c12(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_CALL_EXPRESSION.set_target */
extern void T308f26(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.new_agent_tuple_item_expression */
extern T0* T76f431(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].replace */
extern void T310f11(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_QUALIFIED_CALL_EXPRESSION.make */
extern T0* T308c25(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.make_qualified_call */
extern void T308f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_tuple_label */
extern void T183f118(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].item */
extern T0* T310f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].put_last */
extern void T310f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].force */
extern void T761f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].fill_with */
extern void T762f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].extend */
extern void T762f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].resize */
extern void T310f9(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T761f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T762f4(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.mark_call_operands_frozen */
extern void T76f956(GE_context* ac, T0* C);
extern T1 T76f956ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_temp_variable_frozen */
extern void T76f958(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset_with_types */
extern void T291f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.result_type_set */
extern T0* T531f33(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_typed_default_entity_value */
extern void T76f954(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.is_ise */
extern T1 T73f38(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_procedure */
extern T1 T328f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_procedure */
extern T1 T247f18(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_pointer_ref_procedure_call */
extern void T76f680(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_set_item_call */
extern void T76f750(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_procedure_call */
extern void T76f679(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_free_call */
extern void T76f749(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_c_call */
extern void T76f952(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T1 a5);
/* ET_C_GENERATOR.print_builtin_ise_runtime_procedure_call */
extern void T76f678(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_unmark_object_call */
extern void T76f748(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_unlock_marking_call */
extern void T76f747(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_reference_field_at_call */
extern void T76f746(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_reference_field_call */
extern void T76f745(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_64_field_at_call */
extern void T76f744(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_64_field_call */
extern void T76f743(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_32_field_at_call */
extern void T76f742(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_32_field_call */
extern void T76f741(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pointer_field_at_call */
extern void T76f740(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pointer_field_call */
extern void T76f739(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_64_field_at_call */
extern void T76f738(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_64_field_call */
extern void T76f737(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_32_field_at_call */
extern void T76f736(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_32_field_call */
extern void T76f735(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_16_field_at_call */
extern void T76f734(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_16_field_call */
extern void T76f733(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_8_field_at_call */
extern void T76f732(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_8_field_call */
extern void T76f731(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_64_field_at_call */
extern void T76f730(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_64_field_call */
extern void T76f729(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_32_field_at_call */
extern void T76f728(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_32_field_call */
extern void T76f727(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_16_field_at_call */
extern void T76f726(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_16_field_call */
extern void T76f725(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_8_field_at_call */
extern void T76f724(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_8_field_call */
extern void T76f723(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_32_field_at_call */
extern void T76f722(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_32_field_call */
extern void T76f721(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_8_field_at_call */
extern void T76f720(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_8_field_call */
extern void T76f719(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_boolean_field_at_call */
extern void T76f718(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_boolean_field_call */
extern void T76f717(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_mark_object_call */
extern void T76f716(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_lock_marking_call */
extern void T76f715(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_exception_manager_procedure_call */
extern void T76f677(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_exception_manager_developer_raise_call */
extern void T76f714(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_procedure_call */
extern void T76f676(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_set_item_call */
extern void T76f713(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_procedure_call */
extern void T76f675(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_object_id_free_call */
extern void T76f712(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_procedure_call */
extern void T76f674(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_cwin_local_free_call */
extern void T76f711(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_procedure_call */
extern void T76f673(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_set_item_call */
extern void T76f710(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_procedure_call */
extern void T76f672(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_set_item_call */
extern void T76f709(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_procedure_call */
extern void T76f671(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_call */
extern void T76f708(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T76f708ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_info_message_call */
extern void T76f951(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_copy_call */
extern void T76f707(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_DYNAMIC_PRECURSOR.is_builtin */
extern T1 T328f20(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin */
extern T1 T247f27(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_tuple_label_setter_call */
extern void T76f653(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T76f653ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_adapted_named_query_call */
extern void T76f622(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_named_query_call */
extern T0* T76f622ac1(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T76f622ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_adapted_query_call */
extern void T76f652(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_query_call */
extern T0* T76f652ac1(GE_context* ac, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_query_call */
extern void T76f663(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T76f663ot1(T0* a1, T0** a2);
extern T1 T76f663ot2(T0* a1, T0** a2);
extern T1 T76f663ot3(T0* a1, T0** a2);
extern T1 T76f663ot4(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_non_inlined_query_call */
extern void T76f670(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_query_call */
extern void T76f669(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_query_call */
extern void T76f706(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_runtime_name_call */
extern void T76f950(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_type_id_call */
extern void T76f949(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_expanded_call */
extern void T76f948(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_deferred_call */
extern void T76f947(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_attached_call */
extern void T76f946(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_has_default_call */
extern void T76f945(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_count_call */
extern void T76f944(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_default_call */
extern void T76f943(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_query_call */
extern void T76f705(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_object_comparison_call */
extern void T76f942(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_count_call */
extern void T76f941(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T76f941ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_special_query_call */
extern void T76f704(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_item_call */
extern void T76f940(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_element_size_call */
extern void T76f939(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T76f939ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_special_count_call */
extern void T76f938(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_capacity_call */
extern void T76f937(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_base_address_call */
extern void T76f936(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_query_call */
extern void T76f703(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_positive_infinity_call */
extern void T76f935(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_negative_infinity_call */
extern void T76f934(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_nan_call */
extern void T76f933(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_item_call */
extern void T76f932(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_query_call */
extern void T76f702(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_real_call */
extern void T76f931(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_integer_64_call */
extern void T76f930(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_integer_call */
extern void T76f929(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_to_double_call */
extern void T76f928(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_quotient_call */
extern void T76f927(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_product_call */
extern void T76f926(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_power_call */
extern void T76f925(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_plus_call */
extern void T76f924(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_opposite_call */
extern void T76f923(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_minus_call */
extern void T76f922(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_positive_infinity_call */
extern void T76f921(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_negative_infinity_call */
extern void T76f920(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_nan_call */
extern void T76f919(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_less_call */
extern void T76f918(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_identity_call */
extern void T76f917(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_floor_real_64_call */
extern void T76f916(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_floor_real_32_call */
extern void T76f915(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ceiling_real_64_call */
extern void T76f914(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ceiling_real_32_call */
extern void T76f913(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_query_call */
extern void T76f701(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_item_call */
extern void T76f912(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_query_call */
extern void T76f700(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_to_integer_32_call */
extern void T76f911(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_plus_call */
extern void T76f910(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_is_default_pointer_call */
extern void T76f909(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.current_universe_impl */
extern T0* T76f274(GE_context* ac, T0* C);
/* ET_CLASS.universe */
extern T0* T83f102(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_pointer_hash_code_call */
extern void T76f908(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_query_call */
extern void T76f699(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_wide_character_bytes_call */
extern void T76f907(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_real_bytes_call */
extern void T76f906(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_pointer_bytes_call */
extern void T76f905(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_windows_call */
extern void T76f904(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vxworks_call */
extern void T76f903(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vms_call */
extern void T76f902(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_unix_call */
extern void T76f901(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_thread_capable_call */
extern void T76f900(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_scoop_capable_call */
extern void T76f899(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_mac_call */
extern void T76f898(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_dotnet_call */
extern void T76f897(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_64_bits_call */
extern void T76f896(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_integer_bytes_call */
extern void T76f895(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_double_bytes_call */
extern void T76f894(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_character_bytes_call */
extern void T76f893(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_boolean_bytes_call */
extern void T76f892(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_query_call */
extern void T76f698(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_find_referers_call */
extern void T76f891(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_declaration_type_cast */
extern void T76f632(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_ise_runtime_query_call */
extern void T76f697(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_type_id_from_name_call */
extern void T76f890(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_query_c_call */
extern void T76f955(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T1 a5);
/* ET_C_GENERATOR.print_builtin_ise_runtime_type_conforms_to_call */
extern void T76f889(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_storable_version_of_type_call */
extern void T76f888(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_at_offset_call */
extern void T76f887(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_at_call */
extern void T76f886(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_call */
extern void T76f885(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_64_field_at_call */
extern void T76f884(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_64_field_call */
extern void T76f883(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_32_field_at_call */
extern void T76f882(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_32_field_call */
extern void T76f881(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_raw_reference_field_at_offset_call */
extern void T76f880(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_raw_reference_field_at_call */
extern void T76f879(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pointer_field_at_call */
extern void T76f878(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pointer_field_call */
extern void T76f877(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_persistent_field_count_of_type_call */
extern void T76f876(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_once_objects_call */
extern void T76f875(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_object_size_call */
extern void T76f874(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_type_instance_of_call */
extern void T76f873(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_tuple_instance_of_call */
extern void T76f872(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_special_of_reference_instance_of_call */
extern void T76f871(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_instance_of_call */
extern void T76f870(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_64_field_at_call */
extern void T76f869(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_64_field_call */
extern void T76f868(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_32_field_at_call */
extern void T76f867(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_32_field_call */
extern void T76f866(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_16_field_at_call */
extern void T76f865(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_16_field_call */
extern void T76f864(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_8_field_at_call */
extern void T76f863(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_8_field_call */
extern void T76f862(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_tuple_type_call */
extern void T76f861(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_tuple_call */
extern void T76f860(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_type_call */
extern void T76f859(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_or_basic_type_call */
extern void T76f858(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_call */
extern void T76f857(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_expanded_call */
extern void T76f856(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_copy_semantics_item_call */
extern void T76f855(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_call */
extern void T76f854(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_object_marked_call */
extern void T76f853(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_field_transient_of_type_call */
extern void T76f852(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_field_expanded_of_type_call */
extern void T76f851(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_expanded_call */
extern void T76f850(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_copy_semantics_field_call */
extern void T76f849(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_attached_type_call */
extern void T76f848(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_64_field_at_call */
extern void T76f847(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_64_field_call */
extern void T76f846(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_32_field_at_call */
extern void T76f845(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_32_field_call */
extern void T76f844(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_16_field_at_call */
extern void T76f843(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_16_field_call */
extern void T76f842(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_8_field_at_call */
extern void T76f841(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_8_field_call */
extern void T76f840(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generic_parameter_count_call */
extern void T76f839(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generator_of_type_call */
extern void T76f838(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generating_type_of_type_call */
extern void T76f837(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_type_of_type_call */
extern void T76f836(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_static_type_of_type_call */
extern void T76f835(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_offset_of_type_call */
extern void T76f834(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_name_of_type_call */
extern void T76f833(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_count_of_type_call */
extern void T76f832(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_eif_gen_param_id_call */
extern void T76f831(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_dynamic_type_at_offset_call */
extern void T76f830(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_dynamic_type_call */
extern void T76f829(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_detachable_type_call */
extern void T76f828(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_compiler_version_call */
extern void T76f827(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_check_assert_call */
extern void T76f826(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_32_field_at_call */
extern void T76f825(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_32_field_call */
extern void T76f824(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_8_field_at_call */
extern void T76f823(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_8_field_call */
extern void T76f822(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_boolean_field_at_call */
extern void T76f821(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_boolean_field_call */
extern void T76f820(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_attached_type_call */
extern void T76f819(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_query_call */
extern void T76f696(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_item_call */
extern void T76f818(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_query_call */
extern void T76f695(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_64_call */
extern void T76f817(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_32_call */
extern void T76f816(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_call */
extern void T76f815(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_double_call */
extern void T76f814(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_character_32_call */
extern void T76f813(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_character_8_call */
extern void T76f812(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_quotient_call */
extern void T76f811(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_product_call */
extern void T76f810(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_power_call */
extern void T76f809(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_plus_call */
extern void T76f808(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_opposite_call */
extern void T76f807(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_minus_call */
extern void T76f806(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_is_less_call */
extern void T76f805(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_integer_remainder_call */
extern void T76f804(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_integer_quotient_call */
extern void T76f803(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_identity_call */
extern void T76f802(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_xor_call */
extern void T76f801(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_shift_right_call */
extern void T76f800(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_shift_left_call */
extern void T76f799(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_or_call */
extern void T76f798(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_not_call */
extern void T76f797(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_and_call */
extern void T76f796(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_64_call */
extern void T76f795(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_32_call */
extern void T76f794(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_16_call */
extern void T76f793(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_8_call */
extern void T76f792(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_64_call */
extern void T76f791(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_32_call */
extern void T76f790(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_16_call */
extern void T76f789(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_8_call */
extern void T76f788(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_query_call */
extern void T76f694(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_object_id_call */
extern void T76f787(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_id_object_call */
extern void T76f786(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_query_call */
extern void T76f693(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_item_call */
extern void T76f785(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_fast_item_call */
extern void T76f784(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_query_call */
extern void T76f692(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_cwin_error_text_call */
extern void T76f783(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_character_size_call */
extern void T76f782(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_facility_call */
extern void T76f781(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_code_call */
extern void T76f780(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_call */
extern void T76f779(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_c_strlen_call */
extern void T76f778(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_query_call */
extern void T76f691(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_item_call */
extern void T76f777(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_query_call */
extern void T76f690(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_to_character_32_call */
extern void T76f776(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_to_character_8_call */
extern void T76f775(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_natural_32_code_call */
extern void T76f774(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_code_call */
extern void T76f773(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_query_call */
extern void T76f689(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_item_call */
extern void T76f772(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_query_call */
extern void T76f688(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_xor_call */
extern void T76f771(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_else_call */
extern void T76f770(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_call */
extern void T76f769(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_not_call */
extern void T76f768(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_implies_call */
extern void T76f767(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_then_call */
extern void T76f766(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_call */
extern void T76f765(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_query_call */
extern void T76f687(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_i_th_argument_string_call */
extern void T76f764(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_i_th_argument_pointer_call */
extern void T76f763(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_argument_count_call */
extern void T76f762(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_query_call */
extern void T76f686(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call */
extern void T76f761(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T76f761ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_same_type_call */
extern void T76f760(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_is_equal_call */
extern void T76f759(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generator_call */
extern void T76f758(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generating_type_call */
extern void T76f757(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_deep_twin_call */
extern void T76f756(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].force_last */
extern void T315f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_put */
extern void T315f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].force */
extern void T1065f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FEATURE].fill_with */
extern void T1064f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].extend */
extern void T1064f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_put */
extern void T315f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_put */
extern void T315f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_item */
extern T6 T315f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].hash_position */
extern T6 T315f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].resize */
extern void T315f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_resize */
extern void T315f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].special_integer_ */
extern T0* T315f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_resize */
extern void T315f64(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].aliased_resized_area */
extern T0* T1065f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE].aliased_resized_area */
extern T0* T1064f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_resize */
extern void T315f63(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].aliased_resized_area */
extern T0* T790f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTANT].aliased_resized_area */
extern T0* T791f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_resize */
extern void T315f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_modulus */
extern T6 T315f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_capacity */
extern T6 T315f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_put */
extern void T315f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].force */
extern void T790f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTANT].fill_with */
extern void T791f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTANT].extend */
extern void T791f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].search_position */
extern void T315f53(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.set_polymorphic_call_argument_type_sets */
extern void T76f621(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T76f621ot1(T0* a1, T0** a2);
extern T1 T76f621ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_static_type */
extern void T291f19(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.put_last */
extern void T295f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_call_agent */
extern T1 T336f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_call_agent */
extern T1 T332f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_tuple_label */
extern T1 T336f8(GE_context* ac, T0* C);
/* ET_C_GENERATOR.dynamic_type_set_in_feature */
extern T0* T76f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.dynamic_type_set */
extern T0* T328f23(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.dynamic_type_set */
extern T0* T247f19(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.expression */
extern T0* T311f9(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.item */
extern T0* T311f12(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_name */
extern void T76f617(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T76f617ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_call_name_comment */
extern void T76f616(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T76f616ot1(T0* a1, T0** a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].force_last_new */
extern void T294f34(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].has */
extern T1 T294f25(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].replace */
extern void T293f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_MANIFEST_TUPLE.put_first */
extern void T311f29(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].force */
extern void T843f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].fill_with */
extern void T844f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].extend */
extern void T844f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.resize */
extern void T311f28(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T843f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T844f4(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.capacity */
extern T6 T311f7(GE_context* ac, T0* C);
/* ET_C_GENERATOR.fill_call_formal_arguments */
extern void T76f615(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.static_feature */
extern T0* T336f7(GE_context* ac, T0* C);
/* ET_CLASS.seeded_procedure */
extern T0* T83f161(GE_context* ac, T0* C, T6 a1);
/* ET_PROCEDURE_LIST.seeded_feature */
extern T0* T266f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.static_feature */
extern T0* T332f9(GE_context* ac, T0* C);
/* ET_CLASS.seeded_query */
extern T0* T83f160(GE_context* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.seeded_feature */
extern T0* T265f4(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.formal_argument */
extern T0* T76f229(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].put_last */
extern void T289f13(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_argument */
extern void T183f117(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].force_last */
extern void T293f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_capacity */
extern T6 T293f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].extendible */
extern T1 T293f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_next */
extern void T332f13(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.same_declared_signature */
extern T1 T76f148(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T76f148ot1(T0* a1);
extern T1 T76f148ot2(T0* a1);
extern T1 T76f148ot3(T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_tuple_label */
extern T1 T332f7(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_feature */
extern void T76f518(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].wipe_out */
extern void T300f11(GE_context* ac, T0* C);
/* SPECIAL [ET_EQUALITY_EXPRESSION].keep_head */
extern void T1051f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_EQUALITY_EXPRESSION].set_count */
extern void T1051f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].move_all_cursors_after */
extern void T300f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].set_next_cursor */
extern void T1053f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].set_after */
extern void T1053f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_equality_function */
extern void T76f583(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_BRACKET_SYMBOL.is_not_equal */
extern T1 T655f66(GE_context* ac, T0* C);
/* ET_SYMBOL.is_not_equal */
extern T1 T369f66(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_equality_expression */
extern void T76f640(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].force_last */
extern void T300f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].force */
extern void T1052f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EQUALITY_EXPRESSION].fill_with */
extern void T1051f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EQUALITY_EXPRESSION].extend */
extern void T1051f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].resize */
extern void T300f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T1052f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T1051f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].new_capacity */
extern T6 T300f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].extendible */
extern T1 T300f7(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_target_operand */
extern void T76f656(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_equality_function_name */
extern void T76f639(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].item */
extern T0* T300f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].wipe_out */
extern void T299f11(GE_context* ac, T0* C);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].keep_head */
extern void T1048f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].set_count */
extern void T1048f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].move_all_cursors_after */
extern void T299f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION].set_next_cursor */
extern void T1050f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION].set_after */
extern void T1050f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_equality_function */
extern void T76f582(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_BRACKET_SYMBOL.is_not_tilde */
extern T1 T655f65(GE_context* ac, T0* C);
/* ET_SYMBOL.is_not_tilde */
extern T1 T369f65(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_equality_expression */
extern void T76f636(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].force_last */
extern void T299f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION].force */
extern void T1049f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].fill_with */
extern void T1048f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].extend */
extern void T1048f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].resize */
extern void T299f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T1049f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T1048f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].new_capacity */
extern T6 T299f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].extendible */
extern T1 T299f7(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_object_equality_function_name */
extern void T76f635(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].item */
extern T0* T299f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].wipe_out */
extern void T298f11(GE_context* ac, T0* C);
/* SPECIAL [ET_OBJECT_TEST].keep_head */
extern void T1045f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_TEST].set_count */
extern void T1045f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].move_all_cursors_after */
extern void T298f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].set_next_cursor */
extern void T1047f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].set_after */
extern void T1047f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_function */
extern void T76f581(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE_HASH_LIST.is_empty */
extern T1 T290f9(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_function_name */
extern void T76f633(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].item */
extern T0* T298f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].wipe_out */
extern void T301f11(GE_context* ac, T0* C);
/* SPECIAL [ET_AGENT].keep_head */
extern void T1054f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT].set_count */
extern void T1054f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].move_all_cursors_after */
extern void T301f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_next_cursor */
extern void T1056f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_after */
extern void T1056f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_agent_declaration */
extern void T76f580(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T76f580ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_agent_closed_operand_access */
extern void T76f631(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_agent_creation_name */
extern void T76f630(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_agent_body_declaration */
extern void T76f629(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.put_first */
extern void T304f15(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T304f9(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.resize */
extern void T304f14(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.capacity */
extern T6 T304f8(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.wipe_out */
extern void T304f13(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_agent_open_operand_access */
extern void T76f628(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_function_name */
extern void T76f627(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.make */
extern T0* T260c103(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.tuple_keyword */
extern T0* T82f92(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.tokens */
extern T0* T260f23(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_type_mark */
extern T0* T82f35(GE_context* ac, T0* C);
/* ET_IDENTIFIER.set_agent_closed_operand */
extern void T183f113(GE_context* ac, T0* C, T1 a1);
/* ET_IDENTIFIER.set_agent_open_operand */
extern void T183f110(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_AGENT].item */
extern T0* T301f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_semistrict */
extern T1 T328f28(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.is_semistrict */
extern T1 T247f21(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].remove_last */
extern void T318f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].move_last_cursors_after */
extern void T318f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T1076f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_after */
extern void T1076f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].last */
extern T0* T318f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].is_empty */
extern T1 T318f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].force_last */
extern void T318f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].force */
extern void T1075f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].fill_with */
extern void T1072f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].extend */
extern void T1072f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].resize */
extern void T318f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T1075f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T1072f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T318f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].extendible */
extern T1 T318f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_generated */
extern void T328f34(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_generated */
extern void T247f32(GE_context* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_object_allocation_functions */
extern void T76f517(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_allocation_function */
extern void T76f579(GE_context* ac, T0* C, T0* a1);
extern T1 T76f579ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_dispose_registration */
extern void T76f626(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T76f626ot1(T0* a1, T0** a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].force_last_new */
extern void T317f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].key_storage_put */
extern void T317f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].item_storage_put */
extern void T317f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].slots_put */
extern void T317f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].clashes_put */
extern void T317f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].resize */
extern void T317f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].clashes_resize */
extern void T317f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T317f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T317f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T317f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].slots_resize */
extern void T317f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T317f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T317f32(GE_context* ac, T0* C, T6 a1);
/* ET_COMPOUND.is_empty */
extern T1 T356f5(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_procedure_call_functions */
extern void T76f516(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_next */
extern void T336f14(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_polymorphic_query_call_functions */
extern void T76f515(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_new_immutable_string_32_function */
extern void T76f514(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_new_string_32_function */
extern void T76f513(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_new_string_8_function */
extern void T76f512(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_default_declarations */
extern void T76f511(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_default_declaration */
extern void T76f564(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_default_object_value */
extern void T76f610(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T76f610ot1(T0* a1, T0** a2);
extern T1 T76f610ot2(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_default_attribute_value */
extern void T76f650(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.flush_to_c_file */
extern void T76f510(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T323f36(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_append */
extern void T323f45(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T323f45p1(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_types */
extern void T76f509(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_type_struct */
extern void T76f563(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_flags_name */
extern void T76f607(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_struct_name */
extern void T76f605(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_struct */
extern void T76f562(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T76f562ot1(T0* a1, T0** a2);
extern T1 T76f562ot2(T0* a1, T0** a2);
extern T1 T76f562ot3(T0* a1, T0** a2);
/* ET_C_GENERATOR.print */
extern void T76f608(GE_context* ac, T0* C, T0* a1);
/* STD_FILES.put_string */
extern void T378f7(GE_context* ac, T0* C, T0* a1);
/* STD_FILES.standard_default */
extern T0* T378f2(GE_context* ac, T0* C);
/* STRING_8.out */
extern T0* T17f19(GE_context* ac, T0* C);
/* ET_C_GENERATOR.io */
extern T0* T76f266(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_struct_name */
extern void T76f601(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].has_cycle */
extern T1 T330f8(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].sort */
extern void T330f15(GE_context* ac, T0* C);
/* ARRAY [BOOLEAN].item */
extern T1 T1089f4(GE_context* ac, T0* C, T6 a1);
/* ARRAY [BOOLEAN].put */
extern void T1089f6(GE_context* ac, T0* C, T1 a1, T6 a2);
/* ARRAY [BOOLEAN].make_filled */
extern T0* T1089c5(GE_context* ac, T1 a1, T6 a2, T6 a3);
/* ARRAY [BOOLEAN].make_filled_area */
extern void T1089f7(GE_context* ac, T0* C, T1 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].put_last */
extern void T235f21(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].replace */
extern void T1088f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].item */
extern T0* T1088f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].cloned_object */
extern T0* T1088f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].twin */
extern T0* T1088f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].copy */
extern void T1088f16(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].resized_area */
extern T0* T1460f4(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].copy_data */
extern void T1460f10(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].force */
extern void T1460f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].extend */
extern void T1460f12(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].move_data */
extern void T1460f13(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].overlapping_move */
extern void T1460f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].fill_with */
extern void T1460f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].non_overlapping_move */
extern void T1460f15(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].make_empty */
extern T0* T1460c6(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].new_cursor */
extern T0* T1088f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T1462c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].set_internal_cursor */
extern void T1088f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].valid_cursor */
extern T1 T1088f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].move_all_cursors_after */
extern void T1088f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].set_next_cursor */
extern void T1462f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].set_after */
extern void T1462f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].cloned_object */
extern T0* T280f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].twin */
extern T0* T280f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].copy */
extern void T280f27(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_cursor */
extern T0* T280f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].make */
extern T0* T1029c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].set_internal_cursor */
extern void T280f25(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].valid_cursor */
extern T1 T280f15(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].reset */
extern void T330f20(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_boxed_type_definition */
extern void T76f561(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_type_definition */
extern void T76f560(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_function */
extern void T76f559(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_type_id_access */
extern void T76f603(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_type_declaration */
extern void T76f602(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].force_relation */
extern void T330f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].put_indexed_relation */
extern void T330f19(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_LINKABLE [INTEGER_32].put_right */
extern void T559f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [INTEGER_32].make */
extern T0* T559c3(GE_context* ac, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].count */
extern T6 T330f10(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].index_of */
extern T6 T330f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].found_item */
extern T6 T393f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_item */
extern T6 T393f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].found */
extern T1 T393f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].search */
extern void T393f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].search_position */
extern void T393f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].hash_position */
extern T6 T393f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T393f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T393f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_item */
extern T6 T393f22(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_type_definition */
extern void T76f558(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_pointer_type_definition */
extern void T76f557(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_64_type_definition */
extern void T76f556(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_32_type_definition */
extern void T76f555(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_64_type_definition */
extern void T76f554(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_32_type_definition */
extern void T76f553(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_16_type_definition */
extern void T76f552(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_8_type_definition */
extern void T76f551(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_64_type_definition */
extern void T76f550(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_32_type_definition */
extern void T76f549(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_16_type_definition */
extern void T76f548(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_8_type_definition */
extern void T76f547(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_32_type_definition */
extern void T76f546(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_8_type_definition */
extern void T76f545(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boolean_type_definition */
extern void T76f544(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].force */
extern void T330f13(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].put */
extern void T330f18(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].put_last */
extern void T1088f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].force */
extern void T1461f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].put_new */
extern void T393f38(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_put */
extern void T393f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_put */
extern void T393f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_put */
extern void T393f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_put */
extern void T393f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].unset_found_item */
extern void T393f42(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].resize */
extern void T1088f12(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].aliased_resized_area */
extern T0* T1461f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].aliased_resized_area */
extern T0* T1460f5(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].resize */
extern void T393f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_resize */
extern void T393f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T393f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T393f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T393f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_resize */
extern void T393f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T393f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].capacity */
extern T6 T330f7(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].has */
extern T1 T330f9(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].has */
extern T1 T393f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].make_default */
extern T0* T330c12(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].make */
extern void T330f16(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].make */
extern T0* T330c16(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T1088c11(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T1461f1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].default_create */
extern T0* T1461c3(GE_context* ac);
/* DS_ARRAYED_LIST [INTEGER_32].make */
extern void T280f19(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].make */
extern T0* T280c19(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_map */
extern T0* T393c35(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T393f40(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T393f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T393f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T393f29(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].make */
extern T0* T1092c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_slots */
extern void T393f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_clashes */
extern void T393f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_key_storage */
extern void T393f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_item_storage */
extern void T393f56(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_aliased_double_type_definition */
extern void T76f543(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.double_class_name */
extern T0* T82f34(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_real_type_definition */
extern void T76f542(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.real_class_name */
extern T0* T82f33(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_natural_type_definition */
extern void T76f541(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.natural_class_name */
extern T0* T82f32(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_integer_type_definition */
extern void T76f540(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.integer_class_name */
extern T0* T82f31(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_wide_character_type_definition */
extern void T76f539(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.wide_character_class_name */
extern T0* T82f30(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_character_type_definition */
extern void T76f538(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.character_class_name */
extern T0* T82f29(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_start_extern_c */
extern void T76f508(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_runtime_header_file */
extern void T76f507(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_C_GENERATOR.include_runtime_c_file */
extern void T76f536(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [STRING_8].force_last */
extern void T78f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].slots_put */
extern void T78f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].clashes_put */
extern void T78f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].resize */
extern void T78f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].clashes_resize */
extern void T78f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].special_integer_ */
extern T0* T78f35(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].key_storage_resize */
extern void T78f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_resize */
extern void T78f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].slots_resize */
extern void T78f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_modulus */
extern T6 T78f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_capacity */
extern T6 T78f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_put */
extern void T78f47(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].force_last */
extern void T319f48(GE_context* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_put */
extern void T319f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_put */
extern void T319f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_put */
extern void T319f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_item */
extern T6 T319f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].hash_position */
extern T6 T319f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].resize */
extern void T319f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_resize */
extern void T319f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].special_integer_ */
extern T0* T319f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_resize */
extern void T319f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_resize */
extern void T319f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_resize */
extern void T319f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_modulus */
extern T6 T319f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_capacity */
extern T6 T319f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_put */
extern void T319f59(GE_context* ac, T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].search_position */
extern void T319f49(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].replace */
extern void T319f47(GE_context* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item */
extern T1 T319f34(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].has */
extern T1 T319f33(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.exception_trace_mode */
extern T1 T76f195(GE_context* ac, T0* C);
/* ET_C_GENERATOR.trace_mode */
extern T1 T76f135(GE_context* ac, T0* C);
/* ET_C_GENERATOR.generate_ids */
extern void T76f506(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_id */
extern void T328f37(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_id */
extern void T247f37(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.sort_types */
extern void T76f535(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].put_relation */
extern void T330f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].force */
extern void T296f65(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.open_cpp_file */
extern void T76f505(GE_context* ac, T0* C);
/* ET_C_GENERATOR.open_c_file */
extern void T76f504(GE_context* ac, T0* C);
/* ET_C_GENERATOR.set_split_threshold */
extern void T76f496(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.set_split_mode */
extern void T76f495(GE_context* ac, T0* C, T1 a1);
/* GEC.no_split */
extern T1 T24f32(GE_context* ac, T0* C);
/* ET_C_GENERATOR.set_finalize_mode */
extern void T76f494(GE_context* ac, T0* C, T1 a1);
/* GEC.is_finalize */
extern T1 T24f22(GE_context* ac, T0* C);
/* ET_C_GENERATOR.set_use_boehm_gc */
extern void T76f493(GE_context* ac, T0* C, T1 a1);
/* GEC.use_boehm_gc */
extern T1 T24f31(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.parameter */
extern T0* T44f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].last */
extern T0* T139f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].is_empty */
extern T1 T139f19(GE_context* ac, T0* C);
/* ET_C_GENERATOR.make */
extern T0* T76c492(GE_context* ac, T0* a1, T0* a2);
/* ET_C_GENERATOR.make_external_regexps */
extern void T76f499(GE_context* ac, T0* C);
/* ET_C_GENERATOR.make_rescue_data */
extern void T76f498(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].set_equality_tester */
extern void T208f41(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.identifier_tester */
extern T0* T76f113(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TESTER.default_create */
extern T0* T320c2(GE_context* ac);
/* DS_HASH_SET [ET_IDENTIFIER].make */
extern T0* T208c37(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].set_internal_cursor */
extern void T208f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_cursor */
extern T0* T208f36(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].make */
extern T0* T635c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_slots */
extern void T208f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_clashes */
extern void T208f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_key_storage */
extern void T208f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_item_storage */
extern void T208f45(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].make */
extern T0* T214f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].make_empty */
extern T0* T213c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].default_create */
extern T0* T214c3(GE_context* ac);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].set_key_equality_tester */
extern void T319f43(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make */
extern T0* T319c42(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_with_equality_testers */
extern void T319f50(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_sparse_container */
extern void T319f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].set_internal_cursor */
extern void T319f75(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_cursor */
extern T0* T319f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].make */
extern T0* T1077c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_slots */
extern void T319f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_clashes */
extern void T319f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_key_storage */
extern void T319f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_item_storage */
extern void T319f71(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [STRING_8].default_create */
extern T0* T59c2(GE_context* ac);
/* DS_HASH_SET [STRING_8].set_equality_tester */
extern void T78f40(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].make */
extern void T78f39(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make */
extern T0* T78c39(GE_context* ac, T6 a1);
/* DS_HASH_SET [STRING_8].set_internal_cursor */
extern void T78f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].new_cursor */
extern T0* T78f24(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].make */
extern T0* T390c9(GE_context* ac, T0* a1);
/* DS_HASH_SET [STRING_8].make_slots */
extern void T78f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_clashes */
extern void T78f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_key_storage */
extern void T78f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_item_storage */
extern void T78f51(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].make */
extern T0* T318c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].set_internal_cursor */
extern void T318f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T318f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].make */
extern T0* T1076c5(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_map */
extern T0* T317c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T317f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T317f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T317f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T317f30(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make */
extern T0* T1074c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_slots */
extern void T317f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_clashes */
extern void T317f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_key_storage */
extern void T317f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_item_storage */
extern void T317f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_map */
extern T0* T316c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_with_equality_testers */
extern void T316f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_sparse_container */
extern void T316f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].set_internal_cursor */
extern void T316f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].new_cursor */
extern T0* T316f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make */
extern T0* T1068c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_slots */
extern void T316f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].new_modulus */
extern T6 T316f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_clashes */
extern void T316f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_key_storage */
extern void T316f56(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].make */
extern T0* T1071f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].make_empty */
extern T0* T1069c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].default_create */
extern T0* T1071c3(GE_context* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_item_storage */
extern void T316f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_map */
extern T0* T315c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_with_equality_testers */
extern void T315f44(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_sparse_container */
extern void T315f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].set_internal_cursor */
extern void T315f70(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T315f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T1066c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_slots */
extern void T315f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_clashes */
extern void T315f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_key_storage */
extern void T315f67(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].make */
extern T0* T1065f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].make_empty */
extern T0* T1064c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].default_create */
extern T0* T1065c3(GE_context* ac);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_item_storage */
extern void T315f66(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].make */
extern T0* T790f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTANT].make_empty */
extern T0* T791c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].default_create */
extern T0* T790c3(GE_context* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_map */
extern T0* T313c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_with_equality_testers */
extern void T313f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_sparse_container */
extern void T313f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].set_internal_cursor */
extern void T313f49(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].new_cursor */
extern T0* T313f25(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE].make */
extern T0* T1063c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_slots */
extern void T313f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].new_modulus */
extern T6 T313f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_clashes */
extern void T313f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_key_storage */
extern void T313f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_item_storage */
extern void T313f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T312c35(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].set_internal_cursor */
extern void T312f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_cursor */
extern T0* T312f33(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T1059c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_slots */
extern void T312f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_modulus */
extern T6 T312f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_clashes */
extern void T312f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_key_storage */
extern void T312f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_item_storage */
extern void T312f39(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T1061f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make_empty */
extern T0* T1060c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].default_create */
extern T0* T1061c3(GE_context* ac);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern T0* T311c27(GE_context* ac, T6 a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern void T311f27p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].make */
extern T0* T843f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].make_empty */
extern T0* T844c5(GE_context* ac, T6 a1);
/* ET_MANIFEST_TUPLE.tokens */
extern T0* T311f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T310c8(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].set_internal_cursor */
extern void T310f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].new_cursor */
extern T0* T310f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T1058c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T761f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].make_empty */
extern T0* T762c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].default_create */
extern T0* T761c3(GE_context* ac);
/* ET_UNQUALIFIED_CALL_EXPRESSION.make */
extern T0* T309c27(GE_context* ac, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL_INSTRUCTION.make */
extern T0* T305c9(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_INSTRUCTION.make_qualified_call */
extern void T305f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T304f12(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T304c12(GE_context* ac, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T304f12p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_parenthesis_symbol */
extern T0* T82f258(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_parenthesis */
extern T0* T369c74(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_parenthesis_symbol */
extern T0* T82f257(GE_context* ac, T0* C);
/* ET_SYMBOL.make_left_parenthesis */
extern T0* T369c73(GE_context* ac);
/* ET_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T304f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_AGENT].make */
extern T0* T301c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].set_internal_cursor */
extern void T301f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].new_cursor */
extern T0* T301f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].make */
extern T0* T1056c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].make */
extern T0* T1055f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT].make_empty */
extern T0* T1054c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].default_create */
extern T0* T1055c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].make */
extern T0* T300c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].set_internal_cursor */
extern void T300f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].new_cursor */
extern T0* T300f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].make */
extern T0* T1053c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].make */
extern T0* T1052f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_EQUALITY_EXPRESSION].make_empty */
extern T0* T1051c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].default_create */
extern T0* T1052c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].make */
extern T0* T299c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].set_internal_cursor */
extern void T299f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].new_cursor */
extern T0* T299f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION].make */
extern T0* T1050c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION].make */
extern T0* T1049f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].make_empty */
extern T0* T1048c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION].default_create */
extern T0* T1049c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].make */
extern T0* T298c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].set_internal_cursor */
extern void T298f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].new_cursor */
extern T0* T298f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].make */
extern T0* T1047c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].make */
extern T0* T1046f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_TEST].make_empty */
extern T0* T1045c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].default_create */
extern T0* T1046c3(GE_context* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_map */
extern T0* T297c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T297f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T297f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T297f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T297f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make */
extern T0* T1043c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_slots */
extern void T297f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_clashes */
extern void T297f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_key_storage */
extern void T297f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_item_storage */
extern void T297f67(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T1041f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make_empty */
extern T0* T1040c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.make_with_capacity */
extern T0* T295c8(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_map */
extern T0* T294c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_with_equality_testers */
extern void T294f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_sparse_container */
extern void T294f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].set_internal_cursor */
extern void T294f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_cursor */
extern T0* T294f30(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].make */
extern T0* T1039c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_slots */
extern void T294f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_clashes */
extern void T294f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_key_storage */
extern void T294f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_item_storage */
extern void T294f55(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].make */
extern T0* T293c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].set_internal_cursor */
extern void T293f18(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_cursor */
extern T0* T293f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].make */
extern T0* T1037c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].make */
extern T0* T841f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION].make_empty */
extern T0* T842c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].default_create */
extern T0* T841c3(GE_context* ac);
/* DS_ARRAYED_STACK [ET_EXPRESSION].make */
extern T0* T292c8(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].make */
extern T0* T289c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].set_internal_cursor */
extern void T289f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_cursor */
extern T0* T289f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].make */
extern T0* T1036c3(GE_context* ac, T0* a1);
/* KL_STRING_OUTPUT_STREAM.make */
extern T0* T288c4(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.null_output_stream */
extern T0* T76f110(GE_context* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.make */
extern T0* T286c3(GE_context* ac, T0* a1);
/* ET_CLASS.lower_name */
extern T0* T83f73(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_class */
extern T0* T82f1(GE_context* ac, T0* C);
/* ET_CLASS.set_implementation_error */
extern void T83f242(GE_context* ac, T0* C);
/* ET_CLASS.set_interface_error */
extern void T83f241(GE_context* ac, T0* C);
/* ET_CLASS.set_flattening_error */
extern void T83f240(GE_context* ac, T0* C);
/* ET_CLASS.set_ancestors_error */
extern void T83f239(GE_context* ac, T0* C);
/* ET_CLASS.set_syntax_error */
extern void T83f238(GE_context* ac, T0* C);
/* ET_CLASS.set_group */
extern void T83f237(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.unknown_group */
extern T0* T82f2(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.make */
extern T0* T418c30(GE_context* ac);
/* ET_CLASS.make_unknown */
extern T0* T83c236(GE_context* ac);
/* ET_CLASS.make */
extern void T83f243(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.make */
extern T0* T83c243(GE_context* ac, T0* a1);
/* ET_CLASS_CODES.class_code */
extern T8 T422f1(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].found_item */
extern T8 T1130f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_item */
extern T8 T1130f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].found */
extern T1 T1130f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].search */
extern void T1130f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].search_position */
extern void T1130f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].hash_position */
extern T6 T1130f23(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_NAME_TESTER.test */
extern T1 T479f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.same_class_name */
extern T1 T183f48(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_item */
extern T0* T1130f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_item */
extern T6 T1130f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_item */
extern T6 T1130f26(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS_CODES.codes_by_name */
extern T0* T422f2(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.iteration_cursor_class_name */
extern T0* T82f143(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.iterable_class_name */
extern T0* T82f142(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disposable_class_name */
extern T0* T82f141(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.system_object_class_name */
extern T0* T82f140(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.any_class_name */
extern T0* T82f139(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.array_class_name */
extern T0* T82f138(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.typed_pointer_class_name */
extern T0* T82f137(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_class_name */
extern T0* T82f136(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.special_class_name */
extern T0* T82f135(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.routine_class_name */
extern T0* T82f134(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.procedure_class_name */
extern T0* T82f133(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.predicate_class_name */
extern T0* T82f132(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.function_class_name */
extern T0* T82f131(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.tuple_class_name */
extern T0* T82f130(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_class_name */
extern T0* T82f129(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_class_name */
extern T0* T82f128(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_class_name */
extern T0* T82f127(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_class_name */
extern T0* T82f126(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_class_name */
extern T0* T82f125(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_class_name */
extern T0* T82f124(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_class_name */
extern T0* T82f123(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_class_name */
extern T0* T82f122(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_class_name */
extern T0* T82f121(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_class_name */
extern T0* T82f120(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_class_name */
extern T0* T82f119(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_class_name */
extern T0* T82f118(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_class_name */
extern T0* T82f117(GE_context* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].force_last */
extern void T1130f37(GE_context* ac, T0* C, T8 a1, T0* a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_put */
extern void T1130f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].force */
extern void T643f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].fill_with */
extern void T644f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].extend */
extern void T644f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_put */
extern void T1130f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_put */
extern void T1130f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].resize */
extern void T1130f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_resize */
extern void T1130f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].special_integer_ */
extern T0* T1130f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_resize */
extern void T1130f49(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].aliased_resized_area */
extern T0* T643f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME].aliased_resized_area */
extern T0* T644f3(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_resize */
extern void T1130f48(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].aliased_resized_area */
extern T0* T1468f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [NATURAL_8].aliased_resized_area */
extern T0* T547f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_resize */
extern void T1130f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_modulus */
extern T6 T1130f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_capacity */
extern T6 T1130f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_put */
extern void T1130f41(GE_context* ac, T0* C, T8 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [NATURAL_8].force */
extern void T1468f4(GE_context* ac, T0* C, T0* a1, T8 a2, T6 a3);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].unset_found_item */
extern void T1130f40(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_class_name */
extern T0* T82f116(GE_context* ac, T0* C);
/* ET_CLASS_CODES.tokens */
extern T0* T422f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].set_key_equality_tester */
extern void T1130f36(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_CODES.class_name_tester */
extern T0* T422f4(GE_context* ac, T0* C);
/* ET_CLASS_NAME_TESTER.default_create */
extern T0* T479c2(GE_context* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_map */
extern T0* T1130c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_with_equality_testers */
extern void T1130f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_sparse_container */
extern void T1130f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].set_internal_cursor */
extern void T1130f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_cursor */
extern T0* T1130f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME].make */
extern T0* T1469c4(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_slots */
extern void T1130f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_clashes */
extern void T1130f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_key_storage */
extern void T1130f52(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].make */
extern T0* T643f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME].make_empty */
extern T0* T644c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].default_create */
extern T0* T643c3(GE_context* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_item_storage */
extern void T1130f51(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].make */
extern T0* T1468f2(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].default_create */
extern T0* T1468c3(GE_context* ac);
/* MUTEX.make */
extern T0* T131c9(GE_context* ac);
/* MUTEX.eif_thr_mutex_create */
extern T14 T131f4(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.class_keyword */
extern T0* T82f89(GE_context* ac, T0* C);
/* ET_KEYWORD.make_class */
extern T0* T421c36(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_procedures */
extern T0* T82f88(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.make_with_capacity */
extern T0* T266c8(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].make */
extern T0* T959f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PROCEDURE].make_empty */
extern T0* T960c5(GE_context* ac, T6 a1);
/* ET_PROCEDURE_LIST.fixed_array */
extern T0* T266f7(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].default_create */
extern T0* T959c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_queries */
extern T0* T82f87(GE_context* ac, T0* C);
/* ET_QUERY_LIST.make_with_capacity */
extern T0* T265c8(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUERY].make */
extern T0* T964f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUERY].make_empty */
extern T0* T965c5(GE_context* ac, T6 a1);
/* ET_QUERY_LIST.fixed_array */
extern T0* T265f7(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_QUERY].default_create */
extern T0* T964c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_ancestors */
extern T0* T82f86(GE_context* ac, T0* C);
/* ET_BASE_TYPE_LIST.make_with_capacity */
extern T0* T420c7(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].make */
extern T0* T1321f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE].make_empty */
extern T0* T1320c5(GE_context* ac, T6 a1);
/* ET_BASE_TYPE_LIST.fixed_array */
extern T0* T420f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].default_create */
extern T0* T1321c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.unknown_class_name */
extern T0* T82f85(GE_context* ac, T0* C);
/* ET_CLASS.tokens */
extern T0* T83f60(GE_context* ac, T0* C);
/* GEC.tokens */
extern T0* T24f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile */
extern void T72f76(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.compile_system */
extern void T72f79(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.build_dynamic_type_sets */
extern void T72f83(GE_context* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T239f19(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T80f93(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_validity */
extern void T80f97(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_call_validity */
extern void T80f102(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_target_validity */
extern void T80f104(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f104ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.seeded_dynamic_feature */
extern T0* T336f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.seeded_dynamic_feature */
extern T0* T332f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_catcall_error */
extern void T80f108(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_catcall_error */
extern void T282f188(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info_message */
extern void T282f194(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.set_has_eiffel_error */
extern void T282f193(GE_context* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_catcall_error */
extern void T34f194(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info_message */
extern void T34f174(GE_context* ac, T0* C, T0* a1);
/* KL_STDOUT_FILE.put_line */
extern void T135f9(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_eiffel_error */
extern void T34f197(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.append_catcall_error_message */
extern void T80f109(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.position */
extern T0* T336f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.position */
extern T0* T332f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.string_ */
extern T0* T80f56(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.shared_error_message */
extern T0* T80f55(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_feature_dynamic_type_sets */
extern void T80f96(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.wipe_out */
extern void T287f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].wipe_out */
extern void T393f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T393f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T393f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T393f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T393f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T393f41(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T1092f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].set_after */
extern void T1092f7(GE_context* ac, T0* C);
/* DS_CELL [INTEGER_32].put */
extern void T392f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_built */
extern void T328f40(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_built */
extern void T247f39(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_validity */
extern void T80f100(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE.wipe_out */
extern void T409f12(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].wipe_out */
extern void T176f50(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].slots_wipe_out */
extern void T176f59(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].clashes_wipe_out */
extern void T176f58(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].key_storage_wipe_out */
extern void T176f57(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].item_storage_wipe_out */
extern void T176f56(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].unset_found_item */
extern void T176f45(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].move_all_cursors_after */
extern void T176f55(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_next_cursor */
extern void T615f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_after */
extern void T615f10(GE_context* ac, T0* C);
/* ET_ACROSS_CURSOR_SCOPE.wipe_out */
extern void T408f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].wipe_out */
extern void T1120f11(GE_context* ac, T0* C);
/* SPECIAL [ET_ACROSS_COMPONENT].keep_head */
extern void T1118f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACROSS_COMPONENT].set_count */
extern void T1118f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].move_all_cursors_after */
extern void T1120f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT].set_next_cursor */
extern void T1465f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT].set_after */
extern void T1465f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].wipe_out */
extern void T407f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].slots_wipe_out */
extern void T407f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].clashes_wipe_out */
extern void T407f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].key_storage_wipe_out */
extern void T407f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_storage_wipe_out */
extern void T407f50(GE_context* ac, T0* C);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].keep_head */
extern void T1105f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].set_count */
extern void T1105f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].unset_found_item */
extern void T407f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].move_all_cursors_after */
extern void T407f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].set_next_cursor */
extern void T1115f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].set_after */
extern void T1115f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].forth */
extern void T407f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].cursor_forth */
extern void T407f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].add_traversing_cursor */
extern void T407f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].set_position */
extern void T1115f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].remove_traversing_cursor */
extern void T407f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].clashes_item */
extern T6 T407f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_for_iteration */
extern T0* T407f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].cursor_item */
extern T0* T407f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_storage_item */
extern T0* T407f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].after */
extern T1 T407f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].cursor_after */
extern T1 T407f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].after */
extern T1 T1115f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].start */
extern void T407f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].cursor_start */
extern void T407f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].cursor_off */
extern T1 T407f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].off */
extern T1 T1115f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].is_empty */
extern T1 T407f27(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.wipe_out */
extern void T405f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].wipe_out */
extern void T1114f11(GE_context* ac, T0* C);
/* SPECIAL [ET_NAMED_OBJECT_TEST].keep_head */
extern void T1112f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_OBJECT_TEST].set_count */
extern void T1112f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T1114f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T1464f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].set_after */
extern void T1464f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].wipe_out */
extern void T404f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_wipe_out */
extern void T404f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_wipe_out */
extern void T404f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_wipe_out */
extern void T404f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_wipe_out */
extern void T404f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].unset_found_item */
extern void T404f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T404f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T1108f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_after */
extern void T1108f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].forth */
extern void T404f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_forth */
extern void T404f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].add_traversing_cursor */
extern void T404f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_position */
extern void T1108f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].remove_traversing_cursor */
extern void T404f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_item */
extern T6 T404f33(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_context */
extern void T80f98(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.reset */
extern void T403f52(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.wipe_out */
extern void T403f54(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE].keep_head */
extern void T977f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].keep_head */
extern void T263f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE].set_count */
extern void T263f9(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.fixed_array */
extern T0* T403f4(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE].default_create */
extern T0* T977c3(GE_context* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tokens */
extern T0* T80f71(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].force_last */
extern void T402f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].force */
extern void T1106f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].fill_with */
extern void T1105f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].extend */
extern void T1105f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].resize */
extern void T402f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T1106f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T1105f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_capacity */
extern T6 T402f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].extendible */
extern T1 T402f8(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_for_iteration */
extern T0* T404f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_item */
extern T0* T404f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_item */
extern T0* T404f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].after */
extern T1 T404f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_after */
extern T1 T404f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].after */
extern T1 T1108f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].start */
extern void T404f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_start */
extern void T404f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_off */
extern T1 T404f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].off */
extern T1 T1108f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].is_empty */
extern T1 T404f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_preconditions_attachment_scope */
extern void T80f103(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_attachment_scope */
extern void T80f107(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].force_last */
extern void T411f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].force */
extern void T1123f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ATTACHMENT_SCOPE].fill_with */
extern void T1122f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ATTACHMENT_SCOPE].extend */
extern void T1122f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].resize */
extern void T411f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T1123f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T1122f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].new_capacity */
extern T6 T411f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].extendible */
extern T1 T411f8(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].forth */
extern void T414f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_forth */
extern void T414f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].add_traversing_cursor */
extern void T414f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].set_next_cursor */
extern void T1126f9(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].set_position */
extern void T1126f10(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].remove_traversing_cursor */
extern void T414f58(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].set_after */
extern void T1126f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_item */
extern T6 T414f28(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE.merge_scope */
extern void T409f14(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].forth */
extern void T176f54(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_forth */
extern void T176f64(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].add_traversing_cursor */
extern void T176f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_position */
extern void T615f14(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].remove_traversing_cursor */
extern void T176f70(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].clashes_item */
extern T6 T176f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].remove */
extern void T176f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].remove_position */
extern void T176f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_storage_put */
extern void T176f76(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].item_storage_put */
extern void T176f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].key_storage_keep_head */
extern void T176f75(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_keep_head */
extern void T176f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].clashes_put */
extern void T176f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].slots_put */
extern void T176f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].move_cursors_forth */
extern void T176f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].internal_set_key_equality_tester */
extern void T176f72(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].key_equality_tester */
extern T0* T176f30(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].slots_item */
extern T6 T176f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].hash_position */
extern T6 T176f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_storage_item */
extern T6 T176f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_item */
extern T6 T176f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].search_position */
extern void T176f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].has */
extern T1 T176f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_for_iteration */
extern T6 T176f27(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_item */
extern T6 T176f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].after */
extern T1 T176f26(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_after */
extern T1 T176f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].after */
extern T1 T615f7(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].start */
extern void T176f52(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_start */
extern void T176f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].cursor_off */
extern T1 T176f36(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].off */
extern T1 T615f8(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].is_empty */
extern T1 T176f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].is_last */
extern T1 T414f25(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_is_last */
extern T1 T414f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].is_empty */
extern T1 T414f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_for_iteration */
extern T0* T414f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_item */
extern T0* T414f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_item */
extern T0* T414f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].start */
extern void T414f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_start */
extern void T414f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_off */
extern T1 T414f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].off */
extern T1 T1126f5(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.copy_scope */
extern void T409f13(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].append_last */
extern void T176f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].extend_last */
extern void T176f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].forth */
extern void T615f13(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].put_last */
extern void T176f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].compress */
extern void T176f77(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].move_all_cursors */
extern void T176f78(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET_CURSOR [INTEGER_32].item */
extern T6 T615f4(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].start */
extern void T615f12(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].new_cursor */
extern T0* T176f20(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].make */
extern T0* T615c9(GE_context* ac, T0* a1);
/* DS_HASH_SET [INTEGER_32].resize */
extern void T176f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].clashes_resize */
extern void T176f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].special_integer_ */
extern T0* T176f37(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].key_storage_resize */
extern void T176f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_resize */
extern void T176f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].slots_resize */
extern void T176f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].new_modulus */
extern T6 T176f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].new_capacity */
extern T6 T176f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].extendible */
extern T1 T176f33(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_attachment_scope */
extern T0* T80f54(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].remove_last */
extern void T411f13(GE_context* ac, T0* C);
/* SPECIAL [ET_ATTACHMENT_SCOPE].keep_head */
extern void T1122f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ATTACHMENT_SCOPE].set_count */
extern void T1122f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].move_last_cursors_after */
extern void T411f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].set_next_cursor */
extern void T1124f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].set_after */
extern void T1124f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].last */
extern T0* T411f6(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.make */
extern T0* T409c11(GE_context* ac);
/* DS_HASH_SET [INTEGER_32].make */
extern T0* T176c38(GE_context* ac, T6 a1);
/* DS_HASH_SET [INTEGER_32].set_internal_cursor */
extern void T176f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].make_slots */
extern void T176f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_clashes */
extern void T176f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_key_storage */
extern void T176f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_item_storage */
extern void T176f41(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].is_empty */
extern T1 T411f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_assertions_attachment_scope */
extern void T80f106(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.build_scope */
extern void T410f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_POSTCONDITIONS.assertion */
extern T0* T955f10(GE_context* ac, T0* C, T6 a1);
/* ET_POSTCONDITIONS.item */
extern T0* T955f7(GE_context* ac, T0* C, T6 a1);
/* ET_PRECONDITIONS.assertion */
extern T0* T413f10(GE_context* ac, T0* C, T6 a1);
/* ET_PRECONDITIONS.item */
extern T0* T413f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].first */
extern T0* T414f20(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].force_last */
extern void T414f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_put */
extern void T414f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_put */
extern void T414f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_put */
extern void T414f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_item */
extern T6 T414f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].hash_position */
extern T6 T414f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].resize */
extern void T414f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_resize */
extern void T414f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].special_integer_ */
extern T0* T414f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_resize */
extern void T414f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_resize */
extern void T414f55(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].aliased_resized_area */
extern T0* T1129f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTIONS].aliased_resized_area */
extern T0* T1127f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_item */
extern T0* T414f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_resize */
extern void T414f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].new_modulus */
extern T6 T414f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].new_capacity */
extern T6 T414f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_put */
extern void T414f46(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].force */
extern void T1129f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ASSERTIONS].fill_with */
extern void T1127f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTIONS].extend */
extern void T1127f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].search_position */
extern void T414f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].unset_found_item */
extern void T414f44(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.add_precursors_with_preconditions_recursive */
extern void T80f105(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_LIST.item */
extern T0* T416f3(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_map */
extern T0* T414c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_with_equality_testers */
extern void T414f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_sparse_container */
extern void T414f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].set_internal_cursor */
extern void T414f64(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].new_cursor */
extern T0* T414f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].make */
extern T0* T1126c7(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_slots */
extern void T414f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_clashes */
extern void T414f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_key_storage */
extern void T414f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_item_storage */
extern void T414f60(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].make */
extern T0* T1129f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTIONS].make_empty */
extern T0* T1127c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].default_create */
extern T0* T1129c3(GE_context* ac);
/* ET_FEATURE_CHECKER.check_preconditions_validity */
extern void T391f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECONDITIONS.set_validity_error */
extern void T413f22(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.set_validity_checked */
extern void T413f21(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.free_context */
extern void T391f66(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.tokens */
extern T0* T391f54(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.keep_object_tests */
extern void T405f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].keep_first */
extern void T1114f12(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.current_universe */
extern T0* T391f45(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.build_scope */
extern void T406f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwbe0a_error */
extern void T282f202(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_validity_error */
extern void T282f191(GE_context* ac, T0* C, T0* a1);
/* KL_STANDARD_FILES.output */
extern T0* T133f2(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.make */
extern T0* T135c5(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.report_info */
extern void T282f196(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vwbe0a */
extern T0* T1032c755(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.set_compilers */
extern void T1032f754(GE_context* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.filename */
extern T0* T1032f21(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.default_message_template */
extern T0* T1032f19(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.null_position */
extern T0* T1032f12(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.make_default */
extern T0* T181c13(GE_context* ac);
/* ET_VALIDITY_ERROR.template_code */
extern T0* T1032f15(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T282f27(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwbe0a_error */
extern void T34f202(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_validity_error */
extern void T34f196(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info */
extern void T34f177(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T34f26(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_type */
extern T1 T403f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_expression_validity */
extern void T391f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_expression_supplier */
extern void T391f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_expression_supplier */
extern void T1027f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.add_supplier */
extern void T1027f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].force_last */
extern void T672f67(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].slots_put */
extern void T672f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_NAMED_CLASS].clashes_put */
extern void T672f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_NAMED_CLASS].slots_item */
extern T6 T672f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].hash_position */
extern T6 T672f30(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.hash_code */
extern T6 T485f33(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].resize */
extern void T672f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].clashes_resize */
extern void T672f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].special_integer_ */
extern T0* T672f35(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_resize */
extern void T672f71(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_resize */
extern void T672f70(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1408f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1406f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_item */
extern T0* T672f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_item */
extern T0* T672f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].clashes_item */
extern T6 T672f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].slots_resize */
extern void T672f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].new_modulus */
extern T6 T672f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].new_capacity */
extern T6 T672f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_put */
extern void T672f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].force */
extern void T1408f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NAMED_CLASS].fill_with */
extern void T1406f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NAMED_CLASS].extend */
extern void T1406f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].search_position */
extern void T672f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].key_equality_tester */
extern T0* T672f28(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].unset_found_item */
extern void T672f46(GE_context* ac, T0* C);
/* ET_CLASS.is_none */
extern T1 T83f163(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.actual_class */
extern T0* T485f23(GE_context* ac, T0* C);
/* ET_CLASS.actual_class */
extern T0* T83f118(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.count */
extern T6 T405f3(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.new_context */
extern T0* T391f38(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove_last */
extern void T402f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_last_cursors_after */
extern void T402f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_next_cursor */
extern void T1107f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_after */
extern void T1107f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].last */
extern T0* T402f6(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.make_with_capacity */
extern T0* T403c51(GE_context* ac, T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.make_ast_list_with_capacity */
extern void T403f53(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE].make */
extern T0* T977f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE].make_empty */
extern T0* T263c5(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].is_empty */
extern T1 T402f10(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.current_universe_impl */
extern T0* T391f42(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.error_handler */
extern T0* T391f40(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_fatal_error */
extern void T391f67(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe */
extern T0* T80f83(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_feature_validity */
extern void T80f99(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.is_precursor */
extern T1 T247f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_current_type_needed */
extern void T328f38(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_current_type_needed */
extern void T247f38(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_dynamic_type_sets */
extern void T328f39(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.set_dynamic_type_sets */
extern void T247f35(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T239f15(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T80f89(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T239f14(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T80f88(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_assertion */
extern void T239f18(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_assertion */
extern void T80f92(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_debug */
extern void T239f17(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_debug */
extern void T80f91(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_creation */
extern void T328f36(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_creation */
extern void T247f34(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.is_creation_directly_exported_to */
extern T1 T83f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR_LIST.is_directly_exported_to */
extern T1 T819f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.is_directly_exported_to */
extern T1 T816f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.has_feature_name */
extern T1 T816f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.has_class */
extern T1 T783f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT.base_class */
extern T0* T507f3(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.has_class */
extern T1 T483f5(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR.is_empty */
extern T1 T816f10(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc5a_error */
extern void T282f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_system_error */
extern void T282f190(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc5a */
extern T0* T1031c32(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T282f24(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc5a_error */
extern void T34f187(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_system_error */
extern void T34f195(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T34f15(GE_context* ac, T0* C);
/* ET_CLASS.named_query */
extern T0* T83f71(GE_context* ac, T0* C, T0* a1);
/* ET_QUERY_LIST.named_feature */
extern T0* T265f5(GE_context* ac, T0* C, T0* a1);
extern T1 T265f5ot1(T0* a1, T0** a2);
/* ET_CLASS.named_procedure */
extern T0* T83f70(GE_context* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.named_feature */
extern T0* T266f5(GE_context* ac, T0* C, T0* a1);
extern T1 T266f5ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vsrc1a_error */
extern void T282f179(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_vsrc1a */
extern T0* T1031c31(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T282f23(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vsrc1a_error */
extern void T34f186(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T34f14(GE_context* ac, T0* C);
/* ET_CLASS.has_syntax_error */
extern T1 T83f66(GE_context* ac, T0* C);
/* ET_CLASS.is_parsed */
extern T1 T83f65(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc4a_error */
extern void T282f178(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc4a */
extern T0* T1031c30(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T282f22(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc4a_error */
extern void T34f185(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T34f13(GE_context* ac, T0* C);
/* ET_CLASS.is_preparsed */
extern T1 T83f55(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc6a_error */
extern void T282f177(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_ERROR.make_gvsrc6a */
extern T0* T1031c29(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T282f21(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc6a_error */
extern void T34f184(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T34f12(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_create_feature_name */
extern T0* T82f4(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc3a_error */
extern void T282f176(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.make_gvsrc3a */
extern T0* T1031c28(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T282f20(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc3a_error */
extern void T34f183(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T34f169(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.error_handler */
extern T0* T72f65(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.stop_requested */
extern T1 T73f43(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile_kernel */
extern void T72f81(GE_context* ac, T0* C, T0* a1);
extern T1 T72f81ot1(T0* a1, T0** a2);
/* ET_TOKEN_CONSTANTS.set_exception_data_feature_name */
extern T0* T82f20(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.once_raise_feature_name */
extern T0* T82f19(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.last_exception_feature_name */
extern T0* T82f18(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.init_exception_manager_feature_name */
extern T0* T82f17(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe6a_error */
extern void T282f186(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkfe6a */
extern T0* T1032c750(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ARRAY [ET_TYPE].item */
extern T0* T262f4(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T282f16(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe6a_error */
extern void T34f193(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T34f21(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe4a_error */
extern void T282f185(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe4a */
extern T0* T1032c749(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T282f15(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe4a_error */
extern void T34f192(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T34f20(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_rout_disp_final_feature_name */
extern T0* T82f16(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.rout_disp_feature_name */
extern T0* T82f15(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.closed_operands_feature_name */
extern T0* T82f14(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_pointer_feature_name */
extern T0* T82f11(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_item_feature_name */
extern T0* T82f10(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.older_ise_version */
extern T1 T73f44(GE_context* ac, T0* C, T0* a1);
/* UT_VERSION.is_less */
extern T1 T79f10(GE_context* ac, T0* C, T0* a1);
/* UT_VERSION.build */
extern T6 T79f9(GE_context* ac, T0* C);
/* UT_VERSION.has_build */
extern T1 T79f8(GE_context* ac, T0* C);
/* UT_VERSION.revision */
extern T6 T79f7(GE_context* ac, T0* C);
/* UT_VERSION.has_revision */
extern T1 T79f6(GE_context* ac, T0* C);
/* UT_VERSION.minor */
extern T6 T79f5(GE_context* ac, T0* C);
/* UT_VERSION.has_minor */
extern T1 T79f13(GE_context* ac, T0* C);
/* UT_VERSION.major */
extern T6 T79f12(GE_context* ac, T0* C);
/* UT_VERSION.has_major */
extern T1 T79f11(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.ise_6_0_6_7057 */
extern T0* T72f66(GE_context* ac, T0* C);
/* UT_VERSION.make */
extern T0* T79c17(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_TOKEN_CONSTANTS.upper_feature_name */
extern T0* T82f9(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.lower_feature_name */
extern T0* T82f8(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.area_feature_name */
extern T0* T82f7(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.capacity_feature_name */
extern T0* T82f6(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe3a_error */
extern void T282f184(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvkfe3a */
extern T0* T1032c748(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T282f14(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe3a_error */
extern void T34f191(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T34f19(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe1a_error */
extern void T282f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe1a */
extern T0* T1032c747(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T282f13(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe1a_error */
extern void T34f190(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T34f18(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe2a_error */
extern void T282f182(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe2a */
extern T0* T1032c746(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T282f12(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe2a_error */
extern void T34f189(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T34f17(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.count_feature_name */
extern T0* T82f5(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvknl1a_error */
extern void T282f181(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvknl1a */
extern T0* T1031c33(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T282f170(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvknl1a_error */
extern void T34f188(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T34f16(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.compile_degree_6 */
extern void T73f54(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_6_metrics */
extern void T73f62(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.record_end_time */
extern void T73f53(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.print_time */
extern void T73f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.out */
extern T0* T285f9(GE_context* ac, T0* C);
/* DT_DATE_TIME_DURATION.append_to_string */
extern void T285f18(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.append_time_to_string */
extern void T285f23(GE_context* ac, T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.append_decimal_integer */
extern void T233f6(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DT_DATE_TIME_DURATION.integer_ */
extern T0* T285f14(GE_context* ac, T0* C);
/* DT_DATE_TIME_DURATION.append_date_to_string */
extern void T285f22(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.set_canonical */
extern void T285f17(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.make_canonical_from_dates */
extern void T285f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.make_precise */
extern void T285f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise */
extern T0* T285c16(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise_time_duration */
extern void T285f20(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_DATE_TIME_DURATION.make_date_duration */
extern void T285f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.days_in_current_month */
extern T6 T241f43(GE_context* ac, T0* C);
/* DT_DATE_TIME.days_in_month */
extern T6 T241f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.leap_year */
extern T1 T241f38(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.days_in_previous_month */
extern T6 T241f42(GE_context* ac, T0* C);
/* DT_DATE_TIME.is_less */
extern T1 T241f41(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.millisecond_count */
extern T6 T241f40(GE_context* ac, T0* C);
/* DT_DATE_TIME.day */
extern T6 T241f10(GE_context* ac, T0* C);
/* DT_DATE_TIME.month */
extern T6 T241f9(GE_context* ac, T0* C);
/* DT_DATE_TIME.year */
extern T6 T241f8(GE_context* ac, T0* C);
/* DT_DATE_TIME.add_duration */
extern void T241f62(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.add_milliseconds */
extern void T241f66(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_normalized_time_storage */
extern void T241f69(GE_context* ac, T0* C, T7 a1);
/* DT_DATE_TIME.add_days */
extern void T241f70(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_from_epoch_days */
extern void T241f68(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_year_month_day */
extern void T241f57(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_to_y2k_days */
extern T6 T241f46(GE_context* ac, T0* C);
/* DT_DATE_TIME.epoch_days */
extern T6 T241f11(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_days_at_month */
extern T6 T241f24(GE_context* ac, T0* C);
/* DT_DATE_TIME.days_at_month */
extern T6 T241f23(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.epoch_leap_years */
extern T6 T241f22(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.div */
extern T6 T233f3(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.integer_ */
extern T0* T241f21(GE_context* ac, T0* C);
/* DT_DATE_TIME.set_day */
extern void T241f67(GE_context* ac, T0* C, T6 a1);
/* INTEGER_64.to_integer */
extern T6 T7f11(GE_context* ac, T7* C);
/* DT_DATE_TIME_DURATION.millisecond_count */
extern T6 T285f15(GE_context* ac, T0* C);
/* DT_DATE_TIME.add_years_months_days */
extern void T241f65(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_time */
extern void T241f61(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.set_date */
extern void T241f60(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.tmp_date_time */
extern T0* T285f8(GE_context* ac, T0* C);
/* DT_DATE_TIME.make */
extern T0* T241c59(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* DT_DATE_TIME.make_time */
extern void T241f64(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.make_date */
extern void T241f63(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.minus */
extern T0* T241f12(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.duration */
extern T0* T241f16(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.millisecond */
extern T6 T241f7(GE_context* ac, T0* C);
/* DT_DATE_TIME.second */
extern T6 T241f6(GE_context* ac, T0* C);
/* DT_DATE_TIME.minute */
extern T6 T241f5(GE_context* ac, T0* C);
/* DT_DATE_TIME.hour */
extern T6 T241f4(GE_context* ac, T0* C);
/* DT_DATE_TIME.day_count */
extern T6 T241f3(GE_context* ac, T0* C);
/* DT_SYSTEM_CLOCK.date_time_now */
extern T0* T268f10(GE_context* ac, T0* C);
/* DT_SYSTEM_CLOCK.set_date_time_to_now */
extern void T268f12(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.set_precise_hour_minute_second */
extern void T241f58(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_SYSTEM_CLOCK.set_local_time */
extern void T268f13(GE_context* ac, T0* C);
/* C_DATE.second_now */
extern T6 T658f6(GE_context* ac, T0* C);
/* C_DATE.get_tm_sec */
extern T6 T658f13(GE_context* ac, T0* C, T14 a1);
/* C_DATE.minute_now */
extern T6 T658f5(GE_context* ac, T0* C);
/* C_DATE.get_tm_min */
extern T6 T658f12(GE_context* ac, T0* C, T14 a1);
/* C_DATE.hour_now */
extern T6 T658f4(GE_context* ac, T0* C);
/* C_DATE.get_tm_hour */
extern T6 T658f11(GE_context* ac, T0* C, T14 a1);
/* C_DATE.day_now */
extern T6 T658f15(GE_context* ac, T0* C);
/* C_DATE.get_tm_mday */
extern T6 T658f10(GE_context* ac, T0* C, T14 a1);
/* C_DATE.month_now */
extern T6 T658f8(GE_context* ac, T0* C);
/* C_DATE.get_tm_mon */
extern T6 T658f9(GE_context* ac, T0* C, T14 a1);
/* C_DATE.year_now */
extern T6 T658f7(GE_context* ac, T0* C);
/* C_DATE.get_tm_year */
extern T6 T658f14(GE_context* ac, T0* C, T14 a1);
/* C_DATE.update */
extern void T658f23(GE_context* ac, T0* C);
/* POINTER.memory_free */
extern void T14f11(GE_context* ac, T14* C);
/* POINTER.default_pointer */
extern T14 T14f10(GE_context* ac, T14* C);
/* POINTER.c_free */
extern void T14f14(GE_context* ac, T14* C, T14 a1);
/* C_DATE.get_millitm */
extern T6 T658f21(GE_context* ac, T0* C, T14 a1);
/* C_DATE.tm_structure_size */
extern T6 T658f20(GE_context* ac, T0* C);
/* C_DATE.localtime */
extern T14 T658f19(GE_context* ac, T0* C, T14 a1);
/* C_DATE.gmtime */
extern T14 T658f18(GE_context* ac, T0* C, T14 a1);
/* C_DATE.get_time */
extern void T658f25(GE_context* ac, T0* C, T14 a1, T14 a2);
/* C_DATE.ftime */
extern void T658f24(GE_context* ac, T0* C, T14 a1);
/* C_DATE.time_t_structure_size */
extern T6 T658f17(GE_context* ac, T0* C);
/* C_DATE.timeb_structure_size */
extern T6 T658f16(GE_context* ac, T0* C);
/* C_DATE.default_create */
extern T0* T658c22(GE_context* ac);
/* DT_DATE_TIME.make_from_storage */
extern T0* T241c56(GE_context* ac, T6 a1, T6 a2);
/* DT_SHARED_SYSTEM_CLOCK.system_clock */
extern T0* T267f1(GE_context* ac, T0* C);
/* DT_SYSTEM_CLOCK.make */
extern T0* T268c11(GE_context* ac);
/* DT_SHARED_SYSTEM_CLOCK.default_create */
extern T0* T267c2(GE_context* ac);
/* ET_SYSTEM_PROCESSOR.benchmark_start_time */
extern T0* T73f41(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.activate_dynamic_type_set_builder */
extern void T72f80(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.compile_all */
extern void T72f78(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.compile_all */
extern T0* T72f78ac1(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [ET_CLASS]].set_rout_disp_final */
extern void T237f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_DYNAMIC_SYSTEM.compile_all_features */
extern void T72f82(GE_context* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.item */
extern T0* T266f6(GE_context* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.item */
extern T0* T265f6(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM_PROCESSOR.compile_all */
extern void T73f52(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_PROCESSOR.compile_all */
extern T0* T73f52ac1(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].force_last */
extern void T277f16(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].force */
extern void T778f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLASS].fill_with */
extern void T779f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLASS].extend */
extern void T779f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].resize */
extern void T277f20(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].aliased_resized_area */
extern T0* T778f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLASS].aliased_resized_area */
extern T0* T779f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_capacity */
extern T6 T277f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].extendible */
extern T1 T277f7(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM_PROCESSOR.compile_classes */
extern void T73f60(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_degree_3 */
extern void T73f75(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_3_metrics */
extern void T73f87(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_metrics */
extern void T73f95(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.report_processor_metrics */
extern void T73f96(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM_PROCESSOR.report_processed_class_count_stack */
extern void T73f97(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.total_processed_class_count */
extern T6 T73f45(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_implementation_internal_error */
extern void T73f86(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].item */
extern T0* T277f9(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM_PROCESSOR.check_implementation_validity */
extern void T73f85(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.reset_processed_class_count */
extern void T73f94(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.reset_total_processed_class_count */
extern void T73f93(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_ast_processor */
extern T0* T82f24(GE_context* ac, T0* C);
/* ET_AST_NULL_PROCESSOR.make */
extern T0* T279c1(GE_context* ac);
/* ET_SYSTEM_PROCESSOR.tokens */
extern T0* T73f39(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.compile_degree_4 */
extern void T73f74(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_4_metrics */
extern void T73f84(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_interface_internal_error */
extern void T73f83(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.check_interface_validity */
extern void T73f82(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.features_flattened */
extern T1 T83f56(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_flattening_internal_error */
extern void T73f81(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.flatten_features */
extern void T73f80(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.ancestors_built */
extern T1 T83f106(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_ancestors_internal_error */
extern void T73f79(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.build_ancestors */
extern void T73f78(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_degree_5 */
extern void T73f73(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_PROCESSOR.check_provider_validity */
extern void T73f77(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_degree_5_2 */
extern void T73f76(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_PROCESSOR.report_degree_5_2_metrics */
extern void T73f92(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_syntax_internal_error */
extern void T73f91(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.parse_classes */
extern void T73f90(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.remove_unmarked_classes */
extern void T73f89(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].keep_first */
extern void T277f18(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].keep_head */
extern void T779f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].set_count */
extern void T779f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].move_all_cursors_after */
extern void T277f21(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_next_cursor */
extern void T1028f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_after */
extern void T1028f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].replace */
extern void T277f17(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_CLASS.is_marked */
extern T1 T83f166(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.parse_marked_classes */
extern void T73f88(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.nested_benchmark_start_time */
extern T0* T73f42(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].make */
extern T0* T277c15(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].set_internal_cursor */
extern void T277f19(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_cursor */
extern T0* T277f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].make */
extern T0* T1028c9(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].make */
extern T0* T778f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].make_empty */
extern T0* T779c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].default_create */
extern T0* T778c3(GE_context* ac);
/* ET_DYNAMIC_SYSTEM.set_dynamic_type_set_builder */
extern void T72f75(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern T0* T80c87(GE_context* ac, T0* a1, T0* a2);
/* DS_CELL [INTEGER_32].make */
extern T0* T392c2(GE_context* ac, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_feature */
extern T0* T80f61(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_feature */
extern T0* T80f59(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.make */
extern T0* T539c72(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DEFERRED_PROCEDURE.make */
extern void T539f72p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.deferred_keyword */
extern T0* T82f723(GE_context* ac, T0* C);
/* ET_KEYWORD.make_deferred */
extern T0* T421c87(GE_context* ac);
/* ET_DEFERRED_PROCEDURE.tokens */
extern T0* T539f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_type */
extern T0* T80f69(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.make */
extern T0* T391c64(GE_context* ac, T0* a1);
/* ET_FEATURE_CHECKER.current_system */
extern T0* T391f46(GE_context* ac, T0* C);
/* ET_CLASS.current_system */
extern T0* T83f120(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_INDEXING_TERM].make */
extern T0* T412c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_INDEXING_TERM].set_internal_cursor */
extern void T412f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INDEXING_TERM].new_cursor */
extern T0* T412f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INDEXING_TERM].make */
extern T0* T1125c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].make */
extern T0* T891f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM].make_empty */
extern T0* T893c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].default_create */
extern T0* T891c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].make */
extern T0* T411c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].set_internal_cursor */
extern void T411f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].new_cursor */
extern T0* T411f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].make */
extern T0* T1124c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].make */
extern T0* T1123f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ATTACHMENT_SCOPE].make_empty */
extern T0* T1122c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].default_create */
extern T0* T1123c3(GE_context* ac);
/* ET_ATTACHMENT_SCOPE_BUILDER.make */
extern T0* T410c3(GE_context* ac);
/* ET_ACROSS_CURSOR_SCOPE.make */
extern T0* T408c6(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].make */
extern T0* T1120c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].set_internal_cursor */
extern void T1120f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].new_cursor */
extern T0* T1120f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT].make */
extern T0* T1465c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT].make */
extern T0* T1119f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACROSS_COMPONENT].make_empty */
extern T0* T1118c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT].default_create */
extern T0* T1119c3(GE_context* ac);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_map */
extern T0* T407c41(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_with_equality_testers */
extern void T407f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_sparse_container */
extern void T407f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].set_internal_cursor */
extern void T407f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].new_cursor */
extern T0* T407f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make */
extern T0* T1115c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_slots */
extern void T407f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].new_modulus */
extern T6 T407f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_clashes */
extern void T407f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_key_storage */
extern void T407f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_item_storage */
extern void T407f57(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T1106f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].make_empty */
extern T0* T1105c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].default_create */
extern T0* T1106c3(GE_context* ac);
/* ET_OBJECT_TEST_SCOPE_BUILDER.make */
extern T0* T406c8(GE_context* ac, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.tokens */
extern T0* T406f6(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.make */
extern T0* T405c6(GE_context* ac);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].make */
extern T0* T1114c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T1114f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T1114f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].make */
extern T0* T1464c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].make */
extern T0* T1113f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_OBJECT_TEST].make_empty */
extern T0* T1112c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].default_create */
extern T0* T1113c3(GE_context* ac);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_map */
extern T0* T404c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_with_equality_testers */
extern void T404f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_sparse_container */
extern void T404f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T404f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T404f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make */
extern T0* T1108c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_slots */
extern void T404f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_modulus */
extern T6 T404f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_clashes */
extern void T404f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_key_storage */
extern void T404f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_item_storage */
extern void T404f55(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T402c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].set_internal_cursor */
extern void T402f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_cursor */
extern T0* T402f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T1107c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T401c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].set_internal_cursor */
extern void T401f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].new_cursor */
extern T0* T401f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T1104c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T1101f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].make_empty */
extern T0* T1103c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].default_create */
extern T0* T1101c3(GE_context* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T400c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].set_internal_cursor */
extern void T400f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_cursor */
extern T0* T400f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T1100c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T1098f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].make_empty */
extern T0* T1099c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].default_create */
extern T0* T1098c3(GE_context* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T399c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].set_internal_cursor */
extern void T399f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_cursor */
extern T0* T399f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T1097c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T1095f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].make_empty */
extern T0* T1096c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].default_create */
extern T0* T1095c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].make */
extern T0* T398c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].set_internal_cursor */
extern void T398f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_cursor */
extern T0* T398f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].make */
extern T0* T1094c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].make */
extern T0* T900f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_AGENT].make_empty */
extern T0* T902c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].default_create */
extern T0* T900c3(GE_context* ac);
/* ET_FEATURE_CHECKER.dummy_feature */
extern T0* T391f41(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.make */
extern T0* T396c18(GE_context* ac, T0* a1);
/* ET_TYPE_CHECKER.dummy_feature */
extern T0* T396f12(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.tokens */
extern T0* T396f17(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.make */
extern void T396f18p1(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.make */
extern void T391f64p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make_feature_checker */
extern void T80f94(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_context */
extern T0* T80f68(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern void T80f94p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_new_instance_types */
extern void T72f74(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].force */
extern void T78f38(GE_context* ac, T0* C, T0* a1);
/* STRING_8.starts_with */
extern T1 T17f14(GE_context* ac, T0* C, T0* a1);
/* STRING_8.is_empty */
extern T1 T17f13(GE_context* ac, T0* C);
/* STRING_8.right_adjust */
extern void T17f53(GE_context* ac, T0* C);
/* CHARACTER_8.is_space */
extern T1 T2f4(GE_context* ac, T2* C);
/* STRING_8.left_adjust */
extern void T17f52(GE_context* ac, T0* C);
/* STRING_8.twin */
extern T0* T17f7(GE_context* ac, T0* C);
/* STRING_8.copy */
extern void T17f54(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.read_line */
extern void T31f63(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.unread_character */
extern void T31f68(GE_context* ac, T0* C, T2 a1);
/* detachable KL_LINKABLE [CHARACTER_8].put_right */
extern void T127f4(GE_context* ac, T0* C, T0* a1);
/* detachable KL_LINKABLE [CHARACTER_8].make */
extern T0* T127c3(GE_context* ac, T2 a1);
/* DS_HASH_SET [STRING_8].make_equal */
extern T0* T78c37(GE_context* ac, T6 a1);
/* AP_STRING_OPTION.parameter */
extern T0* T47f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_catcall_warning_mode */
extern void T72f73(GE_context* ac, T0* C, T1 a1);
/* GEC.catcall_warning_mode */
extern T1 T24f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_catcall_error_mode */
extern void T72f72(GE_context* ac, T0* C, T1 a1);
/* GEC.catcall_error_mode */
extern T1 T24f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_full_class_checking */
extern void T72f71(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_SYSTEM.make */
extern T0* T72c70(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.make */
extern T0* T72f70ac1(GE_context* ac, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.make */
extern T0* T239c13(GE_context* ac, T0* a1);
/* ET_DYNAMIC_SYSTEM.make_basic_types */
extern void T72f77(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_flat_dbc_mode_recursive */
extern void T73f51(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_dbc_mode */
extern void T73f59(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_mode_recursive */
extern void T73f50(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_mode */
extern void T73f58(GE_context* ac, T0* C, T1 a1);
/* GEC.is_gelint */
extern T1 T24f27(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_ise_version_recursive */
extern void T73f49(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_ise_version */
extern void T73f57(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_default_keyword_usage */
extern void T73f63(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_ecma_version */
extern void T73f72(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_use_detachable_keyword */
extern void T73f71(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_attached_keyword */
extern void T73f70(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_reference_keyword */
extern void T73f69(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_note_keyword */
extern void T73f68(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_attribute_keyword */
extern void T73f67(GE_context* ac, T0* C, T1 a1);
/* GEC.ise_latest */
extern T0* T24f26(GE_context* ac, T0* C);
/* UT_VERSION.make_latest */
extern T0* T79c16(GE_context* ac);
/* ET_SYSTEM_PROCESSOR.set_error_handler_recursive */
extern void T73f48(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_error_handler */
extern void T73f56(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.make */
extern T0* T73c47(GE_context* ac);
/* ET_TOKEN_CONSTANTS.standard_error_handler */
extern T0* T82f22(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.make */
extern T0* T276c13(GE_context* ac, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.make_with_feature_checker */
extern void T276f14(GE_context* ac, T0* C, T0* a1);
/* ET_SUPPLIER_BUILDER.set */
extern void T1027f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.make */
extern T0* T1027c5(GE_context* ac);
/* ET_SUPPLIER_BUILDER.dummy_suppliers */
extern T0* T1027f4(GE_context* ac, T0* C);
/* ET_SUPPLIER_BUILDER.tokens */
extern T0* T1027f3(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].make */
extern T0* T672c36(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].set_internal_cursor */
extern void T672f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].new_cursor */
extern T0* T672f33(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].make */
extern T0* T1353c9(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make_slots */
extern void T672f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make_clashes */
extern void T672f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make_key_storage */
extern void T672f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make_item_storage */
extern void T672f42(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].make */
extern T0* T1408f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_CLASS].make_empty */
extern T0* T1406c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].default_create */
extern T0* T1408c3(GE_context* ac);
/* DS_HASH_SET [ET_QUERY].make */
extern T0* T1026c35(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_QUERY].set_internal_cursor */
extern void T1026f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].new_cursor */
extern T0* T1026f33(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_QUERY].make */
extern T0* T1459c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_QUERY].unset_found_item */
extern void T1026f43(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].make_slots */
extern void T1026f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].new_modulus */
extern T6 T1026f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_clashes */
extern void T1026f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_key_storage */
extern void T1026f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_item_storage */
extern void T1026f39(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make */
extern T0* T1025c35(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].set_internal_cursor */
extern void T1025f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].new_cursor */
extern T0* T1025f33(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].make */
extern T0* T1458c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].unset_found_item */
extern void T1025f43(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].make_slots */
extern void T1025f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].new_modulus */
extern T6 T1025f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_clashes */
extern void T1025f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_key_storage */
extern void T1025f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_item_storage */
extern void T1025f39(GE_context* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.make_class_processor */
extern void T276f15(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.tokens */
extern T0* T276f8(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.make */
extern T0* T275c15(GE_context* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern T0* T1021c6(GE_context* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern void T1021f6p1(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.tokens */
extern T0* T1021f4(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.make */
extern T0* T1012c10(GE_context* ac, T0* a1);
/* ET_SIGNATURE_CHECKER.make */
extern void T1012f10p1(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.tokens */
extern T0* T1012f6(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1008c19(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_key_equality_tester */
extern void T1445f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_map */
extern T0* T1445c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_with_equality_testers */
extern void T1445f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_sparse_container */
extern void T1445f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1445f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1445f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1636c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].unset_found_item */
extern void T1445f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_slots */
extern void T1445f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_modulus */
extern T6 T1445f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_clashes */
extern void T1445f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_key_storage */
extern void T1445f58(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].make */
extern T0* T1632f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].make_empty */
extern T0* T1630c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].default_create */
extern T0* T1632c3(GE_context* ac);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_item_storage */
extern void T1445f57(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T1637f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make_empty */
extern T0* T1633c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].default_create */
extern T0* T1637c3(GE_context* ac);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_equality_tester */
extern void T1443f32(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.make */
extern T0* T1442c2(GE_context* ac);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make */
extern T0* T1443c31(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1443f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1443f25(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1631c6(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].unset_found_item */
extern void T1443f41(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_slots */
extern void T1443f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_modulus */
extern T6 T1443f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_clashes */
extern void T1443f39(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_key_storage */
extern void T1443f38(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_item_storage */
extern void T1443f37(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1008f19p1(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1008f12(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1007c25(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_map */
extern T0* T1437c42(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1437f49(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_sparse_container */
extern void T1437f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].set_internal_cursor */
extern void T1437f75(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_cursor */
extern T0* T1437f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T1621c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].unset_found_item */
extern void T1437f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_slots */
extern void T1437f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_modulus */
extern T6 T1437f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_clashes */
extern void T1437f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_key_storage */
extern void T1437f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_item_storage */
extern void T1437f71(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].make */
extern T0* T1624f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].make_empty */
extern T0* T1622c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].default_create */
extern T0* T1624c3(GE_context* ac);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].set_key_equality_tester */
extern void T1436f36(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.alias_name_tester */
extern T0* T1007f17(GE_context* ac, T0* C);
/* ET_ALIAS_NAME_TESTER.default_create */
extern T0* T1003c2(GE_context* ac);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_map */
extern T0* T1436c35(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_with_equality_testers */
extern void T1436f41(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_sparse_container */
extern void T1436f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].set_internal_cursor */
extern void T1436f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].new_cursor */
extern T0* T1436f32(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME].make */
extern T0* T1620c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].unset_found_item */
extern void T1436f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_slots */
extern void T1436f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].new_modulus */
extern T6 T1436f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_clashes */
extern void T1436f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_key_storage */
extern void T1436f59(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].make */
extern T0* T749f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME].make_empty */
extern T0* T751c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].default_create */
extern T0* T749c3(GE_context* ac);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_item_storage */
extern void T1436f58(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].make */
extern T0* T859f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME].make_empty */
extern T0* T860c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].default_create */
extern T0* T859c3(GE_context* ac);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].set_key_equality_tester */
extern void T1435f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_map */
extern T0* T1435c43(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_with_equality_testers */
extern void T1435f52(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_sparse_container */
extern void T1435f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].set_internal_cursor */
extern void T1435f77(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].new_cursor */
extern T0* T1435f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].make */
extern T0* T1617c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].unset_found_item */
extern void T1435f58(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_slots */
extern void T1435f76(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].new_modulus */
extern T6 T1435f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_clashes */
extern void T1435f75(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_key_storage */
extern void T1435f74(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].make */
extern T0* T1615f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CALL_NAME].make_empty */
extern T0* T1613c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].default_create */
extern T0* T1615c3(GE_context* ac);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_item_storage */
extern void T1435f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].set_equality_tester */
extern void T1434f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].make */
extern T0* T1434c37(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].set_internal_cursor */
extern void T1434f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].new_cursor */
extern T0* T1434f20(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].make */
extern T0* T1616c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].unset_found_item */
extern void T1434f50(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].make_slots */
extern void T1434f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].new_modulus */
extern T6 T1434f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].make_clashes */
extern void T1434f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].make_key_storage */
extern void T1434f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].make_item_storage */
extern void T1434f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].set_key_equality_tester */
extern void T1431f41(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.call_name_tester */
extern T0* T1007f19(GE_context* ac, T0* C);
/* ET_CALL_NAME_TESTER.default_create */
extern T0* T1432c2(GE_context* ac);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_map */
extern T0* T1431c40(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_with_equality_testers */
extern void T1431f49(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_sparse_container */
extern void T1431f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].set_internal_cursor */
extern void T1431f79(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].new_cursor */
extern T0* T1431f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].make */
extern T0* T1607c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].unset_found_item */
extern void T1431f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_slots */
extern void T1431f78(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].new_modulus */
extern T6 T1431f39(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_clashes */
extern void T1431f77(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_key_storage */
extern void T1431f76(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_item_storage */
extern void T1431f75(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].make */
extern T0* T1614f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_RENAME].make_empty */
extern T0* T1608c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].default_create */
extern T0* T1614c3(GE_context* ac);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1007f25p1(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1007f18(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_key_equality_tester */
extern void T999f45(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.feature_name_tester */
extern T0* T275f12(GE_context* ac, T0* C);
/* ET_FEATURE_NAME_TESTER.default_create */
extern T0* T1000c2(GE_context* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_map */
extern T0* T999c44(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_with_equality_testers */
extern void T999f54(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_sparse_container */
extern void T999f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_internal_cursor */
extern void T999f73(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T999f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1417c9(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].unset_found_item */
extern void T999f58(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_slots */
extern void T999f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_modulus */
extern T6 T999f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_clashes */
extern void T999f71(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_key_storage */
extern void T999f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_item_storage */
extern void T999f69(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].make */
extern T0* T1421f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].make_empty */
extern T0* T1418c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].default_create */
extern T0* T1421c3(GE_context* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern T0* T1020c8(GE_context* ac, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern void T1020f8p1(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1020f6(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.set_classes_to_be_processed */
extern void T1019f8(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.make */
extern T0* T1019c7(GE_context* ac, T0* a1);
/* ET_PARENT_CHECKER3.make */
extern void T1019f7p1(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.tokens */
extern T0* T1019f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].make */
extern T0* T1018c32(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_CLASS].set_internal_cursor */
extern void T1018f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].new_cursor */
extern T0* T1018f29(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].make */
extern T0* T1456c6(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_CLASS].unset_found_item */
extern void T1018f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].make_slots */
extern void T1018f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_modulus */
extern T6 T1018f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_clashes */
extern void T1018f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_key_storage */
extern void T1018f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_item_storage */
extern void T1018f34(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.make */
extern void T275f15p1(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.tokens */
extern T0* T275f11(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.make */
extern T0* T274c29(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_map */
extern T0* T1017c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1017f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_sparse_container */
extern void T1017f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].set_internal_cursor */
extern void T1017f76(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_cursor */
extern T0* T1017f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].make */
extern T0* T1453c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].unset_found_item */
extern void T1017f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_slots */
extern void T1017f75(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_modulus */
extern T6 T1017f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_clashes */
extern void T1017f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_key_storage */
extern void T1017f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_item_storage */
extern void T1017f72(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.make */
extern T0* T1016c10(GE_context* ac, T0* a1);
/* ET_PRECURSOR_CHECKER.dummy_feature */
extern T0* T1016f6(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.make */
extern T0* T1309c27(GE_context* ac, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.other_seeds */
extern T0* T1023f10(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.first_seed */
extern T6 T1023f9(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.make */
extern T0* T1023c22(GE_context* ac, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.current_system */
extern T0* T1016f7(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.make */
extern void T1016f10p1(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.tokens */
extern T0* T1016f5(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.make */
extern T0* T1015c12(GE_context* ac, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.make */
extern void T1015f12p1(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.tokens */
extern T0* T1015f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_map */
extern T0* T1452c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_with_equality_testers */
extern void T1452f34(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_sparse_container */
extern void T1452f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].set_internal_cursor */
extern void T1452f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].new_cursor */
extern T0* T1452f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make */
extern T0* T1645c4(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].unset_found_item */
extern void T1452f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_slots */
extern void T1452f39(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].new_modulus */
extern T6 T1452f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_clashes */
extern void T1452f38(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_key_storage */
extern void T1452f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_item_storage */
extern void T1452f36(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].make */
extern T0* T1646f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].make_empty */
extern T0* T1648c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].default_create */
extern T0* T1646c3(GE_context* ac);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern T0* T1014c8(GE_context* ac, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern void T1014f8p1(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.tokens */
extern T0* T1014f5(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.make */
extern T0* T1013c9(GE_context* ac, T0* a1);
/* ET_PARENT_CHECKER2.make */
extern void T1013f9p1(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.tokens */
extern T0* T1013f5(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern T0* T1011c8(GE_context* ac, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].make_default */
extern T0* T1448c10(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].make */
extern void T1448f13(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_map */
extern T0* T1640c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_with_equality_testers */
extern void T1640f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_sparse_container */
extern void T1640f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].set_internal_cursor */
extern void T1640f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].new_cursor */
extern T0* T1640f26(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].make */
extern T0* T1776c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].unset_found_item */
extern void T1640f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_slots */
extern void T1640f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].new_modulus */
extern T6 T1640f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_clashes */
extern void T1640f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_key_storage */
extern void T1640f54(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].make */
extern T0* T1642f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LIKE_FEATURE].make_empty */
extern T0* T1641c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].default_create */
extern T0* T1642c3(GE_context* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_item_storage */
extern void T1640f53(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].make */
extern T0* T1449c10(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].set_internal_cursor */
extern void T1449f13(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].new_cursor */
extern T0* T1449f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].make */
extern T0* T1643c9(GE_context* ac, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern void T1011f8p1(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1011f7(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern T0* T1010c6(GE_context* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern void T1010f6p1(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.tokens */
extern T0* T1010f4(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern T0* T1009c7(GE_context* ac, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.tokens */
extern T0* T1009f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_map */
extern T0* T1006c41(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_with_equality_testers */
extern void T1006f42(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_sparse_container */
extern void T1006f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].set_internal_cursor */
extern void T1006f49(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_cursor */
extern T0* T1006f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].make */
extern T0* T1428c10(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].unset_found_item */
extern void T1006f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_slots */
extern void T1006f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_modulus */
extern T6 T1006f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_clashes */
extern void T1006f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_key_storage */
extern void T1006f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_item_storage */
extern void T1006f44(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].make */
extern T0* T1429f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT].make_empty */
extern T0* T1430c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].default_create */
extern T0* T1429c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].make */
extern T0* T1005c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].set_internal_cursor */
extern void T1005f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].new_cursor */
extern T0* T1005f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].make */
extern T0* T1426c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].make */
extern T0* T1424f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_LIST].make_empty */
extern T0* T1425c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].default_create */
extern T0* T1424c3(GE_context* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_key_equality_tester */
extern void T1002f35(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.alias_name_tester */
extern T0* T274f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_map */
extern T0* T1002c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_with_equality_testers */
extern void T1002f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_sparse_container */
extern void T1002f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_internal_cursor */
extern void T1002f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T1002f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1423c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].unset_found_item */
extern void T1002f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_slots */
extern void T1002f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_modulus */
extern T6 T1002f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_clashes */
extern void T1002f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_key_storage */
extern void T1002f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_item_storage */
extern void T1002f57(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].make */
extern T0* T670c15(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].set_internal_cursor */
extern void T670f22(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_cursor */
extern T0* T670f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].make */
extern T0* T1404c9(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].make */
extern T0* T669c15(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].set_internal_cursor */
extern void T669f22(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_cursor */
extern T0* T669f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].make */
extern T0* T1403c9(GE_context* ac, T0* a1);
/* ET_FEATURE_FLATTENER.feature_name_tester */
extern T0* T274f22(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.make */
extern void T274f29p1(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.tokens */
extern T0* T274f21(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.make */
extern T0* T273c13(GE_context* ac, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern T0* T998c11(GE_context* ac, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make_default */
extern T0* T1414c10(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make */
extern void T1414f13(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_map */
extern T0* T1605c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_with_equality_testers */
extern void T1605f35(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_sparse_container */
extern void T1605f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].set_internal_cursor */
extern void T1605f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1605f29(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].make */
extern T0* T1774c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].unset_found_item */
extern void T1605f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_slots */
extern void T1605f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].new_modulus */
extern T6 T1605f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_clashes */
extern void T1605f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_key_storage */
extern void T1605f44(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].make */
extern T0* T871f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].make_empty */
extern T0* T873c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].default_create */
extern T0* T871c3(GE_context* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_item_storage */
extern void T1605f43(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].make */
extern T0* T1415c11(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].set_internal_cursor */
extern void T1415f14(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1415f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].make */
extern T0* T1606c9(GE_context* ac, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern void T998f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.tokens */
extern T0* T998f9(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER1.make */
extern T0* T997c8(GE_context* ac, T0* a1);
/* ET_PARENT_CHECKER1.tokens */
extern T0* T997f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_map */
extern T0* T996c40(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_with_equality_testers */
extern void T996f46(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_sparse_container */
extern void T996f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].set_internal_cursor */
extern void T996f72(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_cursor */
extern T0* T996f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].make */
extern T0* T1411c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].unset_found_item */
extern void T996f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_slots */
extern void T996f71(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_modulus */
extern T6 T996f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_clashes */
extern void T996f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_key_storage */
extern void T996f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_item_storage */
extern void T996f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make_default */
extern T0* T995c11(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make */
extern void T995f16(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_map */
extern T0* T1410c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_with_equality_testers */
extern void T1410f40(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_sparse_container */
extern void T1410f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].set_internal_cursor */
extern void T1410f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_cursor */
extern T0* T1410f32(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].make */
extern T0* T1604c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].unset_found_item */
extern void T1410f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_slots */
extern void T1410f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_modulus */
extern T6 T1410f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_clashes */
extern void T1410f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_key_storage */
extern void T1410f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_item_storage */
extern void T1410f56(GE_context* ac, T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.make */
extern void T273f13p1(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.tokens */
extern T0* T273f9(GE_context* ac, T0* C);
/* ET_PROVIDER_CHECKER.make */
extern T0* T272c6(GE_context* ac, T0* a1);
/* ET_PROVIDER_CHECKER.tokens */
extern T0* T272f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.make */
extern T0* T271c955(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.make_parser_skeleton */
extern void T271f957(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_build_parser_tables */
extern void T271f960(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yycheck_template */
extern T0* T271f626(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yyfixed_array */
extern T0* T271f685(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_36 */
extern void T271f1059(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyarray_subcopy */
extern void T271f1123(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.integer_array_ */
extern T0* T271f692(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yycheck_template_35 */
extern void T271f1058(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_34 */
extern void T271f1057(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_33 */
extern void T271f1056(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_32 */
extern void T271f1055(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_31 */
extern void T271f1054(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_30 */
extern void T271f1053(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_29 */
extern void T271f1052(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_28 */
extern void T271f1051(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_27 */
extern void T271f1050(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_26 */
extern void T271f1049(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_25 */
extern void T271f1048(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_24 */
extern void T271f1047(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_23 */
extern void T271f1046(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_22 */
extern void T271f1045(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_21 */
extern void T271f1044(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_20 */
extern void T271f1043(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_19 */
extern void T271f1042(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_18 */
extern void T271f1041(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_17 */
extern void T271f1040(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_16 */
extern void T271f1039(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_15 */
extern void T271f1038(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_14 */
extern void T271f1037(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_13 */
extern void T271f1036(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_12 */
extern void T271f1035(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_11 */
extern void T271f1034(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_10 */
extern void T271f1033(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_9 */
extern void T271f1032(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_8 */
extern void T271f1031(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_7 */
extern void T271f1030(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_6 */
extern void T271f1029(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_5 */
extern void T271f1028(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_4 */
extern void T271f1027(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_3 */
extern void T271f1026(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_2 */
extern void T271f1025(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_1 */
extern void T271f1024(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template */
extern T0* T271f619(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytable_template_36 */
extern void T271f1023(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_35 */
extern void T271f1022(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_34 */
extern void T271f1021(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_33 */
extern void T271f1020(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_32 */
extern void T271f1019(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_31 */
extern void T271f1018(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_30 */
extern void T271f1017(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_29 */
extern void T271f1016(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_28 */
extern void T271f1015(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_27 */
extern void T271f1014(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_26 */
extern void T271f1013(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_25 */
extern void T271f1012(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_24 */
extern void T271f1011(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_23 */
extern void T271f1010(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_22 */
extern void T271f1009(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_21 */
extern void T271f1008(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_20 */
extern void T271f1007(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_19 */
extern void T271f1006(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_18 */
extern void T271f1005(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_17 */
extern void T271f1004(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_16 */
extern void T271f1003(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_15 */
extern void T271f1002(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_14 */
extern void T271f1001(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_13 */
extern void T271f1000(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_12 */
extern void T271f999(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_11 */
extern void T271f998(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_10 */
extern void T271f997(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_9 */
extern void T271f996(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_8 */
extern void T271f995(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_7 */
extern void T271f994(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_6 */
extern void T271f993(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_5 */
extern void T271f992(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_4 */
extern void T271f991(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_3 */
extern void T271f990(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_2 */
extern void T271f989(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_1 */
extern void T271f988(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template */
extern T0* T271f617(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yypgoto_template_2 */
extern void T271f987(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template_1 */
extern void T271f986(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template */
extern T0* T271f615(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yypact_template_9 */
extern void T271f985(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_8 */
extern void T271f984(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_7 */
extern void T271f983(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_6 */
extern void T271f982(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_5 */
extern void T271f981(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_4 */
extern void T271f980(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_3 */
extern void T271f979(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_2 */
extern void T271f978(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_1 */
extern void T271f977(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template */
extern T0* T271f704(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yydefgoto_template_2 */
extern void T271f976(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template_1 */
extern void T271f975(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template */
extern T0* T271f695(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yydefact_template_9 */
extern void T271f974(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_8 */
extern void T271f973(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_7 */
extern void T271f972(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_6 */
extern void T271f971(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_5 */
extern void T271f970(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_4 */
extern void T271f969(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_3 */
extern void T271f968(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_2 */
extern void T271f967(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_1 */
extern void T271f966(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes2_template */
extern T0* T271f684(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template */
extern T0* T271f681(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template_9 */
extern void T271f1116(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_8 */
extern void T271f1115(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_7 */
extern void T271f1114(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_6 */
extern void T271f1113(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_5 */
extern void T271f1112(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_4 */
extern void T271f1111(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_3 */
extern void T271f1110(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_2 */
extern void T271f1109(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_1 */
extern void T271f1108(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template */
extern T0* T271f677(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yyr1_template_5 */
extern void T271f1104(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_4 */
extern void T271f1103(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_3 */
extern void T271f1102(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_2 */
extern void T271f1101(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_1 */
extern void T271f1100(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytranslate_template */
extern T0* T271f673(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytranslate_template_2 */
extern void T271f1094(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytranslate_template_1 */
extern void T271f1093(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_create_value_stacks */
extern void T271f959(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].make */
extern T0* T993f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WRITABLE].make_empty */
extern T0* T994c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].default_create */
extern T0* T993c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].make */
extern T0* T990f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].make_empty */
extern T0* T992c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].default_create */
extern T0* T990c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].make */
extern T0* T987f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].make_empty */
extern T0* T989c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].default_create */
extern T0* T987c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].make */
extern T0* T984f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].make_empty */
extern T0* T986c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].default_create */
extern T0* T984c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].make */
extern T0* T981f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].make_empty */
extern T0* T983c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].default_create */
extern T0* T981c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].make */
extern T0* T978f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].make_empty */
extern T0* T980c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].default_create */
extern T0* T978c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].make */
extern T0* T974f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].make_empty */
extern T0* T976c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].default_create */
extern T0* T974c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].make */
extern T0* T971f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].make_empty */
extern T0* T973c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].default_create */
extern T0* T971c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].make */
extern T0* T969f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].make_empty */
extern T0* T970c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].default_create */
extern T0* T969c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].make */
extern T0* T966f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].make_empty */
extern T0* T968c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].default_create */
extern T0* T966c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make */
extern T0* T961f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make_empty */
extern T0* T963c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].default_create */
extern T0* T961c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].make */
extern T0* T957f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECONDITIONS].make_empty */
extern T0* T958c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].default_create */
extern T0* T957c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].make */
extern T0* T954f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].make_empty */
extern T0* T956c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].default_create */
extern T0* T954c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].make */
extern T0* T952f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].make_empty */
extern T0* T953c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].default_create */
extern T0* T952c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].make */
extern T0* T950f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].make_empty */
extern T0* T951c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].default_create */
extern T0* T950c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].make */
extern T0* T947f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].make_empty */
extern T0* T949c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].default_create */
extern T0* T947c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].make */
extern T0* T945f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].make_empty */
extern T0* T946c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].default_create */
extern T0* T945c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T942f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].make_empty */
extern T0* T944c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].default_create */
extern T0* T942c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].make */
extern T0* T939f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].make_empty */
extern T0* T941c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].default_create */
extern T0* T939c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].make */
extern T0* T937f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].make_empty */
extern T0* T938c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].default_create */
extern T0* T937c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].make */
extern T0* T934f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].make_empty */
extern T0* T936c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].default_create */
extern T0* T934c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].make */
extern T0* T931f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].make_empty */
extern T0* T933c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T931c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].make */
extern T0* T928f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].make_empty */
extern T0* T930c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].default_create */
extern T0* T928c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].make */
extern T0* T925f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].make_empty */
extern T0* T927c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].default_create */
extern T0* T925c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T923f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].make_empty */
extern T0* T924c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].default_create */
extern T0* T923c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T920f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].make_empty */
extern T0* T922c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T920c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].make */
extern T0* T917f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].make_empty */
extern T0* T919c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].default_create */
extern T0* T917c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].make */
extern T0* T914f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].make_empty */
extern T0* T916c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].default_create */
extern T0* T914c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T912f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].make_empty */
extern T0* T913c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].default_create */
extern T0* T912c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].make */
extern T0* T909f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].make_empty */
extern T0* T911c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].default_create */
extern T0* T909c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].make */
extern T0* T906f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].make_empty */
extern T0* T908c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].default_create */
extern T0* T906c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].make */
extern T0* T903f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].make_empty */
extern T0* T905c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].default_create */
extern T0* T903c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].make */
extern T0* T897f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].make_empty */
extern T0* T899c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].default_create */
extern T0* T897c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].make */
extern T0* T894f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].make_empty */
extern T0* T896c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].default_create */
extern T0* T894c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].make */
extern T0* T888f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_ITEM].make_empty */
extern T0* T890c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].default_create */
extern T0* T888c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].make */
extern T0* T885f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_LIST].make_empty */
extern T0* T887c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].default_create */
extern T0* T885c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].make */
extern T0* T882f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].make_empty */
extern T0* T884c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].default_create */
extern T0* T882c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].make */
extern T0* T879f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_EXPRESSION].make_empty */
extern T0* T881c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].default_create */
extern T0* T879c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].make */
extern T0* T877f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].make_empty */
extern T0* T878c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].default_create */
extern T0* T877c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T874f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].make_empty */
extern T0* T876c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T874c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T869f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].make_empty */
extern T0* T870c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].default_create */
extern T0* T869c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T866f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].make_empty */
extern T0* T868c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T866c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].make */
extern T0* T864f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].make_empty */
extern T0* T865c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].default_create */
extern T0* T864c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].make */
extern T0* T861f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].make_empty */
extern T0* T863c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].default_create */
extern T0* T861c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].make */
extern T0* T856f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].make_empty */
extern T0* T858c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].default_create */
extern T0* T856c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].make */
extern T0* T853f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].make_empty */
extern T0* T855c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].default_create */
extern T0* T853c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].make */
extern T0* T850f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].make_empty */
extern T0* T852c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].default_create */
extern T0* T850c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].make */
extern T0* T847f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].make_empty */
extern T0* T849c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].default_create */
extern T0* T847c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].make */
extern T0* T845f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].make_empty */
extern T0* T846c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].default_create */
extern T0* T845c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].make */
extern T0* T839f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].make_empty */
extern T0* T840c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].default_create */
extern T0* T839c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].make */
extern T0* T836f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].make_empty */
extern T0* T838c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].default_create */
extern T0* T836c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].make */
extern T0* T833f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].make_empty */
extern T0* T835c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].default_create */
extern T0* T833c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].make */
extern T0* T830f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].make_empty */
extern T0* T832c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].default_create */
extern T0* T830c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].make */
extern T0* T827f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].make_empty */
extern T0* T829c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].default_create */
extern T0* T827c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].make */
extern T0* T824f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].make_empty */
extern T0* T826c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].default_create */
extern T0* T824c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].make */
extern T0* T821f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].make_empty */
extern T0* T823c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].default_create */
extern T0* T821c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].make */
extern T0* T818f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].make_empty */
extern T0* T820c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].default_create */
extern T0* T818c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].make */
extern T0* T815f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].make_empty */
extern T0* T817c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].default_create */
extern T0* T815c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].make */
extern T0* T813f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].make_empty */
extern T0* T814c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].default_create */
extern T0* T813c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].make */
extern T0* T810f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].make_empty */
extern T0* T812c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].default_create */
extern T0* T810c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].make */
extern T0* T807f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].make_empty */
extern T0* T809c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T807c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].make */
extern T0* T804f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].make_empty */
extern T0* T806c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].default_create */
extern T0* T804c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T801f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].make_empty */
extern T0* T803c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].default_create */
extern T0* T801c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].make */
extern T0* T798f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].make_empty */
extern T0* T800c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].default_create */
extern T0* T798c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T795f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T797c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T795c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T792f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T794c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T792c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].make */
extern T0* T787f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].make_empty */
extern T0* T789c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].default_create */
extern T0* T787c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].make */
extern T0* T785f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].make_empty */
extern T0* T786c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].default_create */
extern T0* T785c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].make */
extern T0* T782f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].make_empty */
extern T0* T784c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].default_create */
extern T0* T782c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].make */
extern T0* T775f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].make_empty */
extern T0* T777c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].default_create */
extern T0* T775c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].make */
extern T0* T772f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].make_empty */
extern T0* T774c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].default_create */
extern T0* T772c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].make */
extern T0* T769f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].make_empty */
extern T0* T771c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].default_create */
extern T0* T769c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].make */
extern T0* T766f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].make_empty */
extern T0* T768c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].default_create */
extern T0* T766c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].make */
extern T0* T763f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].make_empty */
extern T0* T765c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].default_create */
extern T0* T763c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].make */
extern T0* T758f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].make_empty */
extern T0* T760c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].default_create */
extern T0* T758c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].make */
extern T0* T755f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].make_empty */
extern T0* T757c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].default_create */
extern T0* T755c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].make */
extern T0* T752f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].make_empty */
extern T0* T754c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].default_create */
extern T0* T752c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].make */
extern T0* T747f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].make_empty */
extern T0* T748c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].default_create */
extern T0* T747c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T744f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make_empty */
extern T0* T746c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].default_create */
extern T0* T744c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T741f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make_empty */
extern T0* T743c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T741c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T739f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].make_empty */
extern T0* T740c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].default_create */
extern T0* T739c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T737f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T738c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T737c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T735f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].make_empty */
extern T0* T736c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T735c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].make */
extern T0* T732f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].make_empty */
extern T0* T734c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].default_create */
extern T0* T732c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].make */
extern T0* T729f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].make_empty */
extern T0* T731c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].default_create */
extern T0* T729c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].make */
extern T0* T726f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].make_empty */
extern T0* T728c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].default_create */
extern T0* T726c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].make */
extern T0* T724f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].make_empty */
extern T0* T725c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].default_create */
extern T0* T724c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].make */
extern T0* T721f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].make_empty */
extern T0* T723c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].default_create */
extern T0* T721c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].make */
extern T0* T718f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].make_empty */
extern T0* T720c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].default_create */
extern T0* T718c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].make */
extern T0* T715f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].make_empty */
extern T0* T717c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].default_create */
extern T0* T715c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].make */
extern T0* T712f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].make_empty */
extern T0* T714c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].default_create */
extern T0* T712c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].make */
extern T0* T710f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].make_empty */
extern T0* T711c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].default_create */
extern T0* T710c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].make */
extern T0* T707f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].make_empty */
extern T0* T709c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].default_create */
extern T0* T707c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].make */
extern T0* T705f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].make_empty */
extern T0* T706c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].default_create */
extern T0* T705c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].make */
extern T0* T702f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].make_empty */
extern T0* T704c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].default_create */
extern T0* T702c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].make */
extern T0* T699f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].make_empty */
extern T0* T701c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].default_create */
extern T0* T699c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].make */
extern T0* T696f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].make_empty */
extern T0* T698c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].default_create */
extern T0* T696c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].make */
extern T0* T694f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].make_empty */
extern T0* T695c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].default_create */
extern T0* T694c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].make */
extern T0* T691f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].make_empty */
extern T0* T693c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].default_create */
extern T0* T691c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].make */
extern T0* T688f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].make_empty */
extern T0* T690c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].default_create */
extern T0* T688c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].make */
extern T0* T685f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].make_empty */
extern T0* T687c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].default_create */
extern T0* T685c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].make */
extern T0* T683f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].make_empty */
extern T0* T684c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].default_create */
extern T0* T683c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].make */
extern T0* T681f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL].make_empty */
extern T0* T682c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].default_create */
extern T0* T681c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].make */
extern T0* T678f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].make_empty */
extern T0* T680c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].default_create */
extern T0* T678c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].make */
extern T0* T675f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].make_empty */
extern T0* T677c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].default_create */
extern T0* T675c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].make */
extern T0* T673f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD].make_empty */
extern T0* T674c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].default_create */
extern T0* T673c3(GE_context* ac);
/* ET_EIFFEL_PARSER.special_integer_ */
extern T0* T271f669(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.make_eiffel_scanner */
extern void T271f956(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.tokens */
extern T0* T271f622(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.make_with_buffer */
extern void T271f958(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_load_input_buffer */
extern void T271f962(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_set_content */
extern void T271f964(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T271f961(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T271f961p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_build_tables */
extern void T271f963(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_acclist_template */
extern T0* T271f682(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_fixed_array */
extern T0* T271f686(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_3 */
extern void T271f1119(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_array_subcopy */
extern void T271f1124(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.yy_acclist_template_2 */
extern void T271f1118(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_1 */
extern void T271f1117(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template */
extern T0* T271f680(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_accept_template_3 */
extern void T271f1107(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template_2 */
extern void T271f1106(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template_1 */
extern void T271f1105(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_meta_template */
extern T0* T271f678(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template */
extern T0* T271f676(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template_2 */
extern void T271f1099(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_1 */
extern void T271f1098(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template */
extern T0* T271f674(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_def_template_3 */
extern void T271f1097(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template_2 */
extern void T271f1096(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template_1 */
extern void T271f1095(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template */
extern T0* T271f672(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_base_template_3 */
extern void T271f1092(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template_2 */
extern void T271f1091(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template_1 */
extern void T271f1090(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template */
extern T0* T271f670(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_chk_template_15 */
extern void T271f1089(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_14 */
extern void T271f1088(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_13 */
extern void T271f1087(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_12 */
extern void T271f1086(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_11 */
extern void T271f1085(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_10 */
extern void T271f1084(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_9 */
extern void T271f1083(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_8 */
extern void T271f1082(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_7 */
extern void T271f1081(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_6 */
extern void T271f1080(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_5 */
extern void T271f1079(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_4 */
extern void T271f1078(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_3 */
extern void T271f1077(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_2 */
extern void T271f1076(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_1 */
extern void T271f1075(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template */
extern T0* T271f668(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_nxt_template_15 */
extern void T271f1074(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_14 */
extern void T271f1073(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_13 */
extern void T271f1072(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_12 */
extern void T271f1071(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_11 */
extern void T271f1070(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_10 */
extern void T271f1069(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_9 */
extern void T271f1068(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_8 */
extern void T271f1067(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_7 */
extern void T271f1066(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_6 */
extern void T271f1065(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_5 */
extern void T271f1064(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_4 */
extern void T271f1063(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_3 */
extern void T271f1062(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_2 */
extern void T271f1061(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_1 */
extern void T271f1060(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.empty_buffer */
extern T0* T271f634(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T671c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].set_internal_cursor */
extern void T671f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_cursor */
extern T0* T671f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T1405c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].make */
extern T0* T668c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].set_internal_cursor */
extern void T668f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_cursor */
extern T0* T668f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].make */
extern T0* T1402c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].make */
extern T0* T1401f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].make_empty */
extern T0* T1400c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].default_create */
extern T0* T1401c3(GE_context* ac);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].make */
extern T0* T667c10(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].make */
extern T0* T1399f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].make_empty */
extern T0* T1398c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].default_create */
extern T0* T1399c3(GE_context* ac);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T666c10(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T1397f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].make_empty */
extern T0* T1396c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].default_create */
extern T0* T1397c3(GE_context* ac);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].make */
extern T0* T665c8(GE_context* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].make */
extern T0* T664c8(GE_context* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T663c9(GE_context* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T662c9(GE_context* ac, T6 a1);
/* KL_STANDARD_FILES.input */
extern T0* T133f3(GE_context* ac, T0* C);
/* KL_STDIN_FILE.make */
extern T0* T659c12(GE_context* ac);
/* ET_EIFFEL_PARSER.std */
extern T0* T271f697(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.make */
extern void T271f955p1(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.make */
extern T0* T270c7(GE_context* ac, T0* a1);
/* ET_MASTER_CLASS.make */
extern T0* T485c50(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.empty_master_classes */
extern T0* T82f761(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].make */
extern T0* T1340c14(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].set_internal_cursor */
extern void T1340f21(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].new_cursor */
extern T0* T1340f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].make */
extern T0* T1593c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].make */
extern T0* T641f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].make_empty */
extern T0* T642c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].default_create */
extern T0* T641c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_classes */
extern T0* T82f760(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.tokens */
extern T0* T485f22(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_system */
extern T0* T82f3(GE_context* ac, T0* C);
/* ET_SYSTEM.make */
extern T0* T35c134(GE_context* ac, T0* a1);
/* ET_SYSTEM.set_default_class_mapping */
extern void T35f140(GE_context* ac, T0* C);
/* ET_SYSTEM.set_wide_character_ref_class_mapping */
extern void T35f194(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_class_mapping */
extern void T35f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.set_mapped_class */
extern void T485f53(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.set_marked */
extern void T485f51(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.set_marked */
extern void T83f264(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.is_unknown */
extern T1 T83f54(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_marked */
extern T1 T485f21(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.wide_character_ref_class_name */
extern T0* T82f177(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_ref_class_name */
extern T0* T82f158(GE_context* ac, T0* C);
/* ET_SYSTEM.set_wide_character_class_mapping */
extern void T35f193(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_string_class_mapping */
extern void T35f192(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.string_class_name */
extern T0* T82f169(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_8_class_name */
extern T0* T82f157(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_ref_class_mapping */
extern void T35f191(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.real_ref_class_name */
extern T0* T82f176(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_ref_class_name */
extern T0* T82f156(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_class_mapping */
extern void T35f190(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_natural_ref_class_mapping */
extern void T35f189(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.natural_ref_class_name */
extern T0* T82f175(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_ref_class_name */
extern T0* T82f155(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_class_mapping */
extern void T35f188(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_integer_ref_class_mapping */
extern void T35f187(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.integer_ref_class_name */
extern T0* T82f174(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_ref_class_name */
extern T0* T82f154(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_class_mapping */
extern void T35f186(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_double_ref_class_mapping */
extern void T35f185(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.double_ref_class_name */
extern T0* T82f173(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_ref_class_name */
extern T0* T82f153(GE_context* ac, T0* C);
/* ET_SYSTEM.set_double_class_mapping */
extern void T35f184(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_character_ref_class_mapping */
extern void T35f183(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.character_ref_class_name */
extern T0* T82f172(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_ref_class_name */
extern T0* T82f152(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_class_mapping */
extern void T35f182(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.tokens */
extern T0* T35f116(GE_context* ac, T0* C);
/* ET_SYSTEM.set_kernel_types */
extern void T35f139(GE_context* ac, T0* C);
/* ET_SYSTEM.set_wide_character_type */
extern void T35f181(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.make */
extern T0* T81c108(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_SYSTEM.set_typed_pointer_type */
extern void T35f180(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.like_current */
extern T0* T82f162(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.make */
extern T0* T514c70(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.like_keyword */
extern T0* T82f762(GE_context* ac, T0* C);
/* ET_KEYWORD.make_like */
extern T0* T421c47(GE_context* ac);
/* ET_LIKE_CURRENT.tokens */
extern T0* T514f4(GE_context* ac, T0* C);
/* ET_SYSTEM.set_type_type */
extern void T35f179(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.detachable_like_current */
extern T0* T82f171(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.detachable_keyword */
extern T0* T82f159(GE_context* ac, T0* C);
/* ET_KEYWORD.make_detachable */
extern T0* T421c38(GE_context* ac);
/* ET_SYSTEM.set_system_string_type */
extern void T35f178(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.system_string_class_name */
extern T0* T82f170(GE_context* ac, T0* C);
/* ET_SYSTEM.set_system_object_type */
extern void T35f177(GE_context* ac, T0* C);
/* ET_PARENT_LIST.put_first */
extern void T482f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].force */
extern void T950f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_ITEM].fill_with */
extern void T951f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_ITEM].extend */
extern void T951f10(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_LIST.fixed_array */
extern T0* T482f9(GE_context* ac, T0* C);
/* ET_PARENT_LIST.make_with_capacity */
extern T0* T482c11(GE_context* ac, T6 a1);
/* ET_PARENT_LIST.make_with_capacity */
extern void T482f11p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.inherit_keyword */
extern T0* T82f719(GE_context* ac, T0* C);
/* ET_KEYWORD.make_inherit */
extern T0* T421c83(GE_context* ac);
/* ET_PARENT_LIST.tokens */
extern T0* T482f8(GE_context* ac, T0* C);
/* ET_PARENT.make */
extern T0* T481c11(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_PARENT.tokens */
extern T0* T481f9(GE_context* ac, T0* C);
/* ET_PARENT.has_feature_adaptation */
extern T1 T481f8(GE_context* ac, T0* C);
/* ET_SYSTEM.set_string_type */
extern void T35f176(GE_context* ac, T0* C);
/* ET_SYSTEM.set_string_32_type */
extern void T35f175(GE_context* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.make */
extern T0* T484c6(GE_context* ac, T0* a1);
/* ET_BRACED_TYPE_LIST.make */
extern T0* T1339c8(GE_context* ac);
/* ET_BRACED_TYPE_LIST.make */
extern void T1339f8p1(GE_context* ac, T0* C);
/* ET_BRACED_TYPE_LIST.fixed_array */
extern T0* T1339f6(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.right_brace_symbol */
extern T0* T82f688(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_brace */
extern T0* T369c88(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_brace_symbol */
extern T0* T82f687(GE_context* ac, T0* C);
/* ET_SYMBOL.make_left_brace */
extern T0* T369c87(GE_context* ac);
/* ET_BRACED_TYPE_LIST.tokens */
extern T0* T1339f5(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_32_class_name */
extern T0* T82f168(GE_context* ac, T0* C);
/* ET_SYSTEM.set_string_8_type */
extern void T35f174(GE_context* ac, T0* C);
/* ET_SYSTEM.set_special_type */
extern void T35f173(GE_context* ac, T0* C);
/* ET_SYSTEM.set_routine_type */
extern void T35f172(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_64_type */
extern void T35f171(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_32_type */
extern void T35f170(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_type */
extern void T35f169(GE_context* ac, T0* C);
/* ET_SYSTEM.set_procedure_type */
extern void T35f168(GE_context* ac, T0* C);
/* ET_SYSTEM.set_predicate_type */
extern void T35f167(GE_context* ac, T0* C);
/* ET_SYSTEM.set_pointer_type */
extern void T35f166(GE_context* ac, T0* C);
/* ET_SYSTEM.set_none_type */
extern void T35f165(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.add_first_local_class */
extern void T485f52(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_first_local_non_override_class */
extern void T485f57(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.update_intrinsic_class */
extern void T485f59(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.set_intrinsic_class */
extern void T485f61(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T485f61ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T485f61ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T485f61ac3(GE_context* ac, T0* a1);
extern T1 T485f61ot1(T0* a1, T0** a2);
/* [attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]].set_rout_disp_final */
extern void T493f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_MASTER_CLASS.mark_overridden */
extern void T485f58(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_overriding_class */
extern void T485f60(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].force_last */
extern void T1340f16(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].force */
extern void T641f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_MASTER_CLASS].fill_with */
extern void T642f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_MASTER_CLASS].extend */
extern void T642f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].resize */
extern void T1340f22(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].aliased_resized_area */
extern T0* T641f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MASTER_CLASS].aliased_resized_area */
extern T0* T642f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].new_capacity */
extern T6 T1340f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].extendible */
extern T1 T1340f9(GE_context* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.is_override */
extern T1 T485f24(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_override */
extern T1 T83f122(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].do_all */
extern void T1340f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].item */
extern T0* T1340f7(GE_context* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.unmark_overridden */
extern void T485f62(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_overriding_class */
extern void T485f63(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove_first */
extern void T1340f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove */
extern void T1340f20(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].keep_head */
extern void T642f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].set_count */
extern void T642f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_left */
extern void T1340f27(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_cursors_left */
extern void T1340f26(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_position */
extern void T1593f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove_last */
extern void T1340f25(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_last_cursors_after */
extern void T1340f31(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_next_cursor */
extern void T1593f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_after */
extern void T1593f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].first */
extern T0* T1340f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].is_empty */
extern T1 T1340f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].delete */
extern void T1340f18(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_all_cursors_after */
extern void T1340f24(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].force_first */
extern void T277f22(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].put */
extern void T277f25(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_cursors_right */
extern void T277f27(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_position */
extern void T1028f12(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].move_right */
extern void T277f26(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].put_last */
extern void T277f23(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_first_local_override_class */
extern void T485f56(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_in_override_group */
extern T1 T83f121(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.add_first_local_ignored_class */
extern void T485f55(GE_context* ac, T0* C, T0* a1);
/* ET_NONE_GROUP.make */
extern T0* T516c29(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.none_class_name */
extern T0* T82f167(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_64_type */
extern void T35f164(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_32_type */
extern void T35f163(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_16_type */
extern void T35f162(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_8_type */
extern void T35f161(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_type */
extern void T35f160(GE_context* ac, T0* C);
/* ET_SYSTEM.set_iterable_type */
extern void T35f159(GE_context* ac, T0* C);
/* ET_SYSTEM.set_ise_exception_manager_type */
extern void T35f158(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ise_exception_manager_class_name */
extern T0* T82f166(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_64_type */
extern void T35f157(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_32_type */
extern void T35f156(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_16_type */
extern void T35f155(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_8_type */
extern void T35f154(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_type */
extern void T35f153(GE_context* ac, T0* C);
/* ET_SYSTEM.set_immutable_string_32_type */
extern void T35f152(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.immutable_string_32_class_name */
extern T0* T82f165(GE_context* ac, T0* C);
/* ET_SYSTEM.set_function_type */
extern void T35f151(GE_context* ac, T0* C);
/* ET_SYSTEM.set_exception_manager_type */
extern void T35f150(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_manager_class_name */
extern T0* T82f164(GE_context* ac, T0* C);
/* ET_SYSTEM.set_exception_type */
extern void T35f149(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_class_name */
extern T0* T82f163(GE_context* ac, T0* C);
/* ET_SYSTEM.set_double_type */
extern void T35f148(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_32_type */
extern void T35f147(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_8_type */
extern void T35f146(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_type */
extern void T35f145(GE_context* ac, T0* C);
/* ET_SYSTEM.set_boolean_type */
extern void T35f144(GE_context* ac, T0* C);
/* ET_SYSTEM.set_array_type */
extern void T35f143(GE_context* ac, T0* C);
/* ET_SYSTEM.set_tuple_type */
extern void T35f142(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T515c17(GE_context* ac, T0* a1);
/* ET_SYSTEM.set_any_type */
extern void T35f141(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.put_first */
extern void T483f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].force */
extern void T780f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLIENT_ITEM].fill_with */
extern void T781f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLIENT_ITEM].extend */
extern void T781f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT.make */
extern T0* T507c6(GE_context* ac, T0* a1, T0* a2);
/* ET_CLIENT_LIST.make_with_capacity */
extern T0* T483c10(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.separate_keyword */
extern T0* T82f161(GE_context* ac, T0* C);
/* ET_KEYWORD.make_separate */
extern T0* T421c39(GE_context* ac);
/* ET_TOKEN_CONSTANTS.detachable_separate_type_mark */
extern T0* T82f160(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.make */
extern T0* T508c18(GE_context* ac, T0* a1, T0* a2);
/* ET_SYSTEM.make_adapted */
extern void T35f138(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.default_read_only_value */
extern T1 T35f127(GE_context* ac, T0* C);
/* ET_SYSTEM.set_unknown_kernel_types */
extern void T35f137(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_convert_feature */
extern T0* T82f151(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_generic_class_type */
extern T0* T82f150(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.make */
extern T0* T251c29(GE_context* ac);
/* ET_ACTUAL_PARAMETER_LIST.make */
extern void T251f29p1(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.empty_actual_parameters */
extern T0* T82f149(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_tuple_type */
extern T0* T82f148(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_parents */
extern T0* T82f146(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_parent */
extern T0* T82f145(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_class_type */
extern T0* T82f144(GE_context* ac, T0* C);
/* ET_SYSTEM.set_system_name */
extern void T35f136(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].make */
extern void T139f22(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].make */
extern T0* T139c22(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].set_internal_cursor */
extern void T139f28(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].new_cursor */
extern T0* T139f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].make */
extern T0* T478c9(GE_context* ac, T0* a1);
/* ET_SYSTEM.initialize */
extern void T35f135(GE_context* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.make_empty */
extern T0* T198c6(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T631c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T631f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T631f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1393c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1392f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T1391c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T1392c3(GE_context* ac);
/* ET_CLUSTERS.make_empty */
extern T0* T1133c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_CLUSTER].make */
extern T0* T1499c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].set_internal_cursor */
extern void T1499f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].new_cursor */
extern T0* T1499f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLUSTER].make */
extern T0* T1730c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].make */
extern T0* T1729f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLUSTER].make_empty */
extern T0* T1728c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].default_create */
extern T0* T1729c3(GE_context* ac);
/* ET_ADAPTED_LIBRARIES.make_empty */
extern T0* T191c6(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].make */
extern T0* T628c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].set_internal_cursor */
extern void T628f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].new_cursor */
extern T0* T628f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY].make */
extern T0* T1387c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].make */
extern T0* T1386f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_LIBRARY].make_empty */
extern T0* T1385c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].default_create */
extern T0* T1386c3(GE_context* ac);
/* ET_SYSTEM.initialize */
extern void T35f135p1(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].set_key_equality_tester */
extern void T234f39(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.class_name_tester */
extern T0* T35f128(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_map */
extern T0* T234c38(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_with_equality_testers */
extern void T234f41(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_sparse_container */
extern void T234f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].set_internal_cursor */
extern void T234f48(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T234f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].make */
extern T0* T640c10(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].unset_found_item */
extern void T234f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_slots */
extern void T234f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_modulus */
extern T6 T234f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_clashes */
extern void T234f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_key_storage */
extern void T234f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_item_storage */
extern void T234f43(GE_context* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS_CHECKER.tokens */
extern T0* T270f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.make */
extern T0* T269c134(GE_context* ac, T0* a1);
/* ET_EIFFEL_PREPARSER.make_eiffel_scanner */
extern void T269f135(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.tokens */
extern T0* T269f57(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.make_with_buffer */
extern void T269f136(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_load_input_buffer */
extern void T269f138(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_content */
extern void T269f140(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T269f137(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T269f137p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_build_tables */
extern void T269f139(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template */
extern T0* T269f88(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_fixed_array */
extern T0* T269f91(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_4 */
extern void T269f165(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_array_subcopy */
extern void T269f176(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PREPARSER.integer_array_ */
extern T0* T269f97(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_3 */
extern void T269f164(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_2 */
extern void T269f163(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_1 */
extern void T269f162(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template */
extern T0* T269f81(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_accept_template_3 */
extern void T269f161(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template_2 */
extern void T269f160(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template_1 */
extern void T269f159(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_meta_template */
extern T0* T269f78(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template */
extern T0* T269f72(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template_2 */
extern void T269f158(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_1 */
extern void T269f157(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template */
extern T0* T269f70(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_def_template_3 */
extern void T269f156(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_2 */
extern void T269f155(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_1 */
extern void T269f154(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template */
extern T0* T269f68(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_base_template_3 */
extern void T269f153(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template_2 */
extern void T269f152(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template_1 */
extern void T269f151(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template */
extern T0* T269f58(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template_10 */
extern void T269f150(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_9 */
extern void T269f149(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_8 */
extern void T269f148(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_7 */
extern void T269f147(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_6 */
extern void T269f146(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_5 */
extern void T269f145(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_4 */
extern void T269f144(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_3 */
extern void T269f143(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_2 */
extern void T269f142(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_1 */
extern void T269f141(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template */
extern T0* T269f90(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_10 */
extern void T269f175(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_9 */
extern void T269f174(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_8 */
extern void T269f173(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_7 */
extern void T269f172(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_6 */
extern void T269f171(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_5 */
extern void T269f170(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_4 */
extern void T269f169(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_3 */
extern void T269f168(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_2 */
extern void T269f167(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_1 */
extern void T269f166(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.special_integer_ */
extern T0* T269f61(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.empty_buffer */
extern T0* T269f82(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.std */
extern T0* T269f71(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.make_null */
extern void T73f55(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.make_null */
extern T0* T73c55(GE_context* ac);
/* ET_SYSTEM_PROCESSOR.set_qualified_anchored_types_cycle_detection_enabled */
extern void T73f66(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_unknown_builtin_reported */
extern void T73f65(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_preparse_shallow_mode */
extern void T73f64(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.make */
extern T0* T284c3(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.null_error_handler */
extern T0* T82f25(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.make_null */
extern T0* T282c174(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.make_null */
extern void T282f174p1(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.null_output_stream */
extern T0* T282f19(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_ast_factory */
extern T0* T82f23(GE_context* ac, T0* C);
/* ET_AST_FACTORY.make */
extern T0* T281c357(GE_context* ac);
/* DS_ARRAYED_LIST [INTEGER_32].make_default */
extern T0* T280c16(GE_context* ac);
/* DS_ARRAYED_LIST [INTEGER_32].default_capacity */
extern T6 T280f6(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.set_ise */
extern void T34f176(GE_context* ac, T0* C);
/* GEC.is_verbose */
extern T1 T24f25(GE_context* ac, T0* C);
/* GEC.is_silent */
extern T1 T24f24(GE_context* ac, T0* C);
/* GEC.parse_ace_file */
extern void T24f43(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.syntax_error */
extern T1 T69f141(GE_context* ac, T0* C);
/* ET_LACE_PARSER.parse_file */
extern void T69f248(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yyparse */
extern void T69f252(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_pop_last_value */
extern void T69f265(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.yy_push_error_value */
extern void T69f264(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_do_action */
extern void T69f263(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.add_external_value */
extern void T69f278(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.object_option */
extern T0* T69f223(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_identifier */
extern T0* T69f140(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_position */
extern void T183f114(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].force_last */
extern void T139f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].resize */
extern void T139f29(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].new_capacity */
extern T6 T139f18(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].extendible */
extern T1 T139f17(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.include_path_option */
extern T0* T69f222(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_gac_assembly */
extern T0* T69f174(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_public_key_token_id */
extern void T231f121(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_public_key_token */
extern void T231f126(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_culture_id */
extern void T231f120(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_culture */
extern void T231f125(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_version_id */
extern void T231f119(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_version */
extern void T231f124(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.tokens */
extern T0* T69f241(GE_context* ac, T0* C);
/* ET_LACE_AST_FACTORY.new_gac_assembly */
extern T0* T204f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make */
extern T0* T231c117(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_dotnet_gac_assembly */
extern void T231f122(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_dotnet_assembly */
extern void T231f127(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_from_system */
extern void T231f128(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_default_class_mapping */
extern void T231f133(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T231f187(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_class_mapping */
extern void T231f188(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_class */
extern T0* T231f102(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].force_last_new */
extern void T234f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_put */
extern void T234f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_put */
extern void T234f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_put */
extern void T234f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_put */
extern void T234f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_item */
extern T6 T234f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].hash_position */
extern T6 T234f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].resize */
extern void T234f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_resize */
extern void T234f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].special_integer_ */
extern T0* T234f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_resize */
extern void T234f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_resize */
extern void T234f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_item */
extern T0* T234f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_item */
extern T6 T234f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_resize */
extern void T234f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_capacity */
extern T6 T234f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].found_item */
extern T0* T234f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_item */
extern T0* T234f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].found */
extern T1 T234f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].search */
extern void T234f49(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].search_position */
extern void T234f51(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_wide_character_class_mapping */
extern void T231f186(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_class_mapping */
extern void T231f185(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_ref_class_mapping */
extern void T231f184(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_class_mapping */
extern void T231f183(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_ref_class_mapping */
extern void T231f182(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_class_mapping */
extern void T231f181(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_ref_class_mapping */
extern void T231f180(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_class_mapping */
extern void T231f179(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_double_ref_class_mapping */
extern void T231f178(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_double_class_mapping */
extern void T231f177(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_ref_class_mapping */
extern void T231f176(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_class_mapping */
extern void T231f175(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.tokens */
extern T0* T231f107(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_kernel_types */
extern void T231f132(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_wide_character_type */
extern void T231f174(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_typed_pointer_type */
extern void T231f173(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_type_type */
extern void T231f172(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_system_string_type */
extern void T231f171(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_system_object_type */
extern void T231f170(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_type */
extern void T231f169(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_32_type */
extern void T231f168(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_8_type */
extern void T231f167(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_special_type */
extern void T231f166(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_routine_type */
extern void T231f165(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_64_type */
extern void T231f164(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_32_type */
extern void T231f163(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_type */
extern void T231f162(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_procedure_type */
extern void T231f161(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_predicate_type */
extern void T231f160(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_pointer_type */
extern void T231f159(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_none_type */
extern void T231f158(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.add_first_imported_class */
extern void T485f54(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].force_first */
extern void T1340f15(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].put */
extern void T1340f23(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_cursors_right */
extern void T1340f30(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_right */
extern void T1340f29(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].put_last */
extern void T1340f28(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_64_type */
extern void T231f157(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_32_type */
extern void T231f156(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_16_type */
extern void T231f155(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_8_type */
extern void T231f154(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_type */
extern void T231f153(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_iterable_type */
extern void T231f152(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_ise_exception_manager_type */
extern void T231f151(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_64_type */
extern void T231f150(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_32_type */
extern void T231f149(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_16_type */
extern void T231f148(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_8_type */
extern void T231f147(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_type */
extern void T231f146(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_immutable_string_32_type */
extern void T231f145(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_function_type */
extern void T231f144(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_exception_manager_type */
extern void T231f143(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_exception_type */
extern void T231f142(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_double_type */
extern void T231f141(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_32_type */
extern void T231f140(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_8_type */
extern void T231f139(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_type */
extern void T231f138(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_boolean_type */
extern void T231f137(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_array_type */
extern void T231f136(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_tuple_type */
extern void T231f135(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_any_type */
extern void T231f134(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_adapted */
extern void T231f131(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.default_read_only_value */
extern T1 T231f101(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_unknown_kernel_types */
extern void T231f130(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.initialize */
extern void T231f129(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.class_name_tester */
extern T0* T231f109(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLIES.make_empty */
extern T0* T463c5(GE_context* ac);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].make */
extern T0* T1337c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1337f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1337f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY].make */
extern T0* T1592c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].make */
extern T0* T1334f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_ASSEMBLY].make_empty */
extern T0* T1335c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].default_create */
extern T0* T1334c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].force */
extern void T230f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].fill_with */
extern void T229f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].extend */
extern void T229f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T230f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T229f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_classname_prefix_id */
extern void T231f118(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_classname_prefix */
extern void T231f123(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_classname_prefix_id */
extern void T218f111(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T218f113(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.new_assembly */
extern T0* T69f171(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_AST_FACTORY.new_assembly */
extern T0* T204f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.make */
extern T0* T218c110(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.make_dotnet_assembly */
extern void T218f112(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.make_from_system */
extern void T218f114(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.set_default_class_mapping */
extern void T218f119(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T218f173(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_class_mapping */
extern void T218f174(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.master_class */
extern T0* T218f95(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_wide_character_class_mapping */
extern void T218f172(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_class_mapping */
extern void T218f171(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_ref_class_mapping */
extern void T218f170(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_class_mapping */
extern void T218f169(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_ref_class_mapping */
extern void T218f168(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_class_mapping */
extern void T218f167(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_ref_class_mapping */
extern void T218f166(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_class_mapping */
extern void T218f165(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_double_ref_class_mapping */
extern void T218f164(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_double_class_mapping */
extern void T218f163(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_ref_class_mapping */
extern void T218f162(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_class_mapping */
extern void T218f161(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.tokens */
extern T0* T218f100(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_kernel_types */
extern void T218f118(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T218f160(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T218f159(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_type_type */
extern void T218f158(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_system_string_type */
extern void T218f157(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_system_object_type */
extern void T218f156(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_type */
extern void T218f155(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_32_type */
extern void T218f154(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_8_type */
extern void T218f153(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_special_type */
extern void T218f152(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_routine_type */
extern void T218f151(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_64_type */
extern void T218f150(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_32_type */
extern void T218f149(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_type */
extern void T218f148(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_procedure_type */
extern void T218f147(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_predicate_type */
extern void T218f146(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_pointer_type */
extern void T218f145(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_none_type */
extern void T218f144(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T218f143(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T218f142(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T218f141(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T218f140(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_type */
extern void T218f139(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_iterable_type */
extern void T218f138(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T218f137(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T218f136(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T218f135(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T218f134(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T218f133(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_type */
extern void T218f132(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T218f131(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_function_type */
extern void T218f130(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T218f129(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_exception_type */
extern void T218f128(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_double_type */
extern void T218f127(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_32_type */
extern void T218f126(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_8_type */
extern void T218f125(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_type */
extern void T218f124(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_boolean_type */
extern void T218f123(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_array_type */
extern void T218f122(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_tuple_type */
extern void T218f121(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_any_type */
extern void T218f120(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.make_adapted */
extern void T218f117(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T218f94(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T218f116(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.initialize */
extern void T218f115(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T218f102(GE_context* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T198f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T631f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T1392f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T1391f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T1391f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T631f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1392f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1391f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T631f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T631f7(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_assemblies */
extern T0* T69f168(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_assemblies */
extern T0* T204f4(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.make */
extern T0* T198c10(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].put_last */
extern void T631f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].force */
extern void T228f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].fill_with */
extern void T221f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].extend */
extern void T221f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].aliased_resized_area */
extern T0* T228f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].aliased_resized_area */
extern T0* T221f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_EXCLUDE.put_last */
extern void T217f7(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_EXCLUDE.make */
extern T0* T217c6(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].force */
extern void T227f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LACE_EXCLUDE].fill_with */
extern void T226f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LACE_EXCLUDE].extend */
extern void T226f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].aliased_resized_area */
extern T0* T227f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LACE_EXCLUDE].aliased_resized_area */
extern T0* T226f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_CLUSTER.set_subclusters */
extern void T216f58(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_parent */
extern void T215f5(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_parent */
extern void T216f62(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_exclude */
extern void T216f57(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.new_cluster */
extern T0* T69f158(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].force_last */
extern void T205f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_put */
extern void T205f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_put */
extern void T205f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_put */
extern void T205f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_item */
extern T6 T205f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].hash_position */
extern T6 T205f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].resize */
extern void T205f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_resize */
extern void T205f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].special_integer_ */
extern T0* T205f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_resize */
extern void T205f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_resize */
extern void T205f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_item */
extern T0* T205f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_item */
extern T6 T205f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_resize */
extern void T205f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_modulus */
extern T6 T205f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_capacity */
extern T6 T205f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_put */
extern void T205f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search_position */
extern void T205f44(GE_context* ac, T0* C, T0* a1);
/* detachable KL_EQUALITY_TESTER [ET_IDENTIFIER].test */
extern T1 T321f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.is_equal */
extern T1 T183f27(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.any_ */
extern T0* T183f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].unset_found_item */
extern void T205f39(GE_context* ac, T0* C);
/* ET_LACE_AST_FACTORY.new_cluster */
extern T0* T204f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_CLUSTER.make */
extern T0* T216c53(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T216f59(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T215f6(GE_context* ac, T0* C, T1 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].aliased_resized_area */
extern T0* T225f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_CLUSTER].aliased_resized_area */
extern T0* T224f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_qualified_subcluster */
extern T0* T69f156(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LACE_PARSER.report_error */
extern void T69f276(GE_context* ac, T0* C, T0* a1);
extern T1 T69f276ot1(T0* a1, T0** a2);
/* ET_LACE_ERROR_HANDLER.report_error */
extern void T70f7(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.report_error_message */
extern void T70f8(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.message */
extern T0* T70f5(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.integer_ */
extern T0* T69f219(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.add_subcluster */
extern void T216f61(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make_empty */
extern T0* T215c7(GE_context* ac);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].make */
extern T0* T637c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].set_internal_cursor */
extern void T637f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_cursor */
extern T0* T637f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].make */
extern T0* T1395c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].make */
extern T0* T225f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTER].make_empty */
extern T0* T224c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].default_create */
extern T0* T225c3(GE_context* ac);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found_item */
extern T0* T205f27(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_item */
extern T0* T205f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found */
extern T1 T205f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search */
extern void T205f35(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_read_only */
extern void T216f56(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_recursive */
extern void T216f55(GE_context* ac, T0* C, T1 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].force */
extern void T225f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].fill_with */
extern void T224f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].extend */
extern void T224f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_abstract */
extern void T216f54(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTERS.put_last */
extern void T215f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].force_last */
extern void T637f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].resize */
extern void T637f14(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_capacity */
extern T6 T637f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].extendible */
extern T1 T637f7(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_clusters */
extern T0* T69f151(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_clusters */
extern T0* T204f2(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make */
extern T0* T215c3(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].put_last */
extern void T637f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].force */
extern void T223f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LACE_CLUSTERS].fill_with */
extern void T220f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LACE_CLUSTERS].extend */
extern void T220f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].aliased_resized_area */
extern T0* T223f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LACE_CLUSTERS].aliased_resized_area */
extern T0* T220f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_default_value */
extern T0* T69f146(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.trace_option */
extern T0* T69f240(GE_context* ac, T0* C);
/* ET_LACE_PARSER.metadata_cache_path_option */
extern T0* T69f239(GE_context* ac, T0* C);
/* ET_LACE_PARSER.msil_clr_version_option */
extern T0* T69f238(GE_context* ac, T0* C);
/* ET_LACE_PARSER.exception_trace_option */
extern T0* T69f237(GE_context* ac, T0* C);
/* ET_LACE_PARSER.no_value */
extern T0* T69f236(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yes_value */
extern T0* T69f235(GE_context* ac, T0* C);
/* ET_LACE_PARSER.console_application_option */
extern T0* T69f234(GE_context* ac, T0* C);
/* ET_LACE_PARSER.override_cluster_option */
extern T0* T69f233(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM].aliased_resized_area */
extern T0* T222f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_SYSTEM].aliased_resized_area */
extern T0* T219f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_system */
extern T0* T69f142(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_system */
extern T0* T204f1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.make */
extern T0* T71c148(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.set_default_class_mapping */
extern void T71f166(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_wide_character_ref_class_mapping */
extern void T71f229(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_class_mapping */
extern void T71f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.set_wide_character_class_mapping */
extern void T71f228(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_string_class_mapping */
extern void T71f227(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_real_ref_class_mapping */
extern void T71f226(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_real_class_mapping */
extern void T71f225(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_natural_ref_class_mapping */
extern void T71f224(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_natural_class_mapping */
extern void T71f223(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_integer_ref_class_mapping */
extern void T71f222(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_integer_class_mapping */
extern void T71f221(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_double_ref_class_mapping */
extern void T71f220(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_double_class_mapping */
extern void T71f219(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_character_ref_class_mapping */
extern void T71f218(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_character_class_mapping */
extern void T71f217(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.tokens */
extern T0* T71f141(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_kernel_types */
extern void T71f165(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_wide_character_type */
extern void T71f216(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_typed_pointer_type */
extern void T71f215(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_type_type */
extern void T71f214(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_system_string_type */
extern void T71f213(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_system_object_type */
extern void T71f212(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_string_type */
extern void T71f211(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_string_32_type */
extern void T71f210(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_string_8_type */
extern void T71f209(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_special_type */
extern void T71f208(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_routine_type */
extern void T71f207(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_real_64_type */
extern void T71f206(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_real_32_type */
extern void T71f205(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_real_type */
extern void T71f204(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_procedure_type */
extern void T71f203(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_predicate_type */
extern void T71f202(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_pointer_type */
extern void T71f201(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_none_type */
extern void T71f200(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_64_type */
extern void T71f199(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_32_type */
extern void T71f198(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_16_type */
extern void T71f197(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_8_type */
extern void T71f196(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_type */
extern void T71f195(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_iterable_type */
extern void T71f194(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_ise_exception_manager_type */
extern void T71f193(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_64_type */
extern void T71f192(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_32_type */
extern void T71f191(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_16_type */
extern void T71f190(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_8_type */
extern void T71f189(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_type */
extern void T71f188(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_immutable_string_32_type */
extern void T71f187(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_function_type */
extern void T71f186(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_exception_manager_type */
extern void T71f185(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_exception_type */
extern void T71f184(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_double_type */
extern void T71f183(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_character_32_type */
extern void T71f182(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_character_8_type */
extern void T71f181(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_character_type */
extern void T71f180(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_boolean_type */
extern void T71f179(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_array_type */
extern void T71f178(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_tuple_type */
extern void T71f177(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_any_type */
extern void T71f176(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.make_adapted */
extern void T71f164(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.default_read_only_value */
extern T1 T71f134(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_unknown_kernel_types */
extern void T71f163(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_system_name */
extern void T71f162(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.initialize */
extern void T71f161(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.initialize */
extern void T71f161p1(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.class_name_tester */
extern T0* T71f138(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM].force */
extern void T222f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LACE_SYSTEM].fill_with */
extern void T219f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_SYSTEM].extend */
extern void T219f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_root_creation */
extern void T71f157(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_root_type */
extern void T71f156(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_dotnet_assemblies */
extern void T71f155(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_clusters */
extern void T71f154(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.set_system */
extern void T69f277(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_trace_mode */
extern void T71f153(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_exception_trace_mode */
extern void T71f152(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_console_application_mode */
extern void T71f151(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_external_object_pathnames */
extern void T71f150(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_external_include_pathnames */
extern void T71f149(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].forth */
extern void T208f40(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_forth */
extern void T208f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].add_traversing_cursor */
extern void T208f64(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].remove_traversing_cursor */
extern void T208f63(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_override */
extern void T216f60(GE_context* ac, T0* C, T1 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_for_iteration */
extern T0* T208f31(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_item */
extern T0* T208f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].after */
extern T1 T208f23(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_after */
extern T1 T208f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].after */
extern T1 T635f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].start */
extern void T208f39(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_start */
extern void T208f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_off */
extern T1 T208f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].off */
extern T1 T635f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].is_empty */
extern T1 T208f32(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_push_last_value */
extern void T69f262(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.accept */
extern void T69f261(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_do_error_action */
extern void T69f259(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.report_eof_expected_error */
extern void T69f275(GE_context* ac, T0* C);
/* ET_LACE_PARSER.read_token */
extern void T69f258(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_execute_action */
extern void T69f274(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.text_item */
extern T2 T69f221(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.string_ */
extern T0* T69f132(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_identifier_from_buffer */
extern T0* T69f220(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.platform */
extern T0* T69f218(GE_context* ac, T0* C);
/* STRING_8.to_integer */
extern T6 T17f24(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parsed_integer */
extern T6 T1131f13(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parse_string_with_type */
extern void T1131f17(GE_context* ac, T0* C, T0* a1, T6 a2);
/* STRING_TO_INTEGER_CONVERTOR.parse_character */
extern void T1131f23(GE_context* ac, T0* C, T2 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflowed */
extern T1 T1131f15(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.overflow_checker */
extern T0* T1131f14(GE_context* ac, T0* C);
/* CHARACTER_8.is_digit */
extern T1 T2f26(GE_context* ac, T2* C);
/* STRING_TO_INTEGER_CONVERTOR.reset */
extern void T1131f22(GE_context* ac, T0* C, T6 a1);
/* STRING_8.ctoi_convertor */
extern T0* T17f34(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators_acceptable */
extern void T1131f21(GE_context* ac, T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators_acceptable */
extern void T1131f20(GE_context* ac, T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators */
extern void T1131f19(GE_context* ac, T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators */
extern void T1131f18(GE_context* ac, T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.make */
extern T0* T1131c16(GE_context* ac);
/* ET_LACE_PARSER.set_start_condition */
extern void T69f282(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.text_substring */
extern T0* T69f215(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_LACE_PARSER.text */
extern T0* T69f199(GE_context* ac, T0* C);
/* ET_LACE_PARSER.text_count */
extern T6 T69f191(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_execute_eof_action */
extern void T69f273(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.terminate */
extern void T69f281(GE_context* ac, T0* C);
/* ET_LACE_PARSER.wrap */
extern T1 T69f126(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_refill_input_buffer */
extern void T69f272(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_set_content */
extern void T69f270(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_null_trans_state */
extern T6 T69f125(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.yy_previous_state */
extern T6 T69f217(GE_context* ac, T0* C);
/* ET_LACE_PARSER.fatal_error */
extern void T69f271(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_character */
extern void T134f8(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_PARSER.std */
extern T0* T69f188(GE_context* ac, T0* C);
/* ET_LACE_PARSER.special_integer_ */
extern T0* T69f161(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_init_value_stacks */
extern void T69f257(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_clear_all */
extern void T69f266(GE_context* ac, T0* C);
/* ET_LACE_PARSER.clear_all */
extern void T69f279(GE_context* ac, T0* C);
/* ET_LACE_PARSER.clear_stacks */
extern void T69f283(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_clear_value_stacks */
extern void T69f285(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].keep_head */
extern void T221f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].set_count */
extern void T221f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_SYSTEM].keep_head */
extern void T219f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_SYSTEM].set_count */
extern void T219f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].keep_head */
extern void T229f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].set_count */
extern void T229f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_EXCLUDE].keep_head */
extern void T226f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_EXCLUDE].set_count */
extern void T226f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_CLUSTERS].keep_head */
extern void T220f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_CLUSTERS].set_count */
extern void T220f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTER].keep_head */
extern void T224f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTER].set_count */
extern void T224f9(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.abort */
extern void T69f260(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].wipe_out */
extern void T139f27(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].move_all_cursors_after */
extern void T139f33(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T478f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_after */
extern void T478f10(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].wipe_out */
extern void T208f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].slots_wipe_out */
extern void T208f55(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_wipe_out */
extern void T208f54(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_wipe_out */
extern void T208f53(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_wipe_out */
extern void T208f52(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].move_all_cursors_after */
extern void T208f51(GE_context* ac, T0* C);
/* ET_LACE_PARSER.set_input_buffer */
extern void T69f251(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_load_input_buffer */
extern void T69f256(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_file_buffer */
extern T0* T69f143(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].wipe_out */
extern void T205f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_wipe_out */
extern void T205f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_wipe_out */
extern void T205f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_wipe_out */
extern void T205f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_wipe_out */
extern void T205f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].move_all_cursors_after */
extern void T205f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_next_cursor */
extern void T634f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_after */
extern void T634f7(GE_context* ac, T0* C);
/* ET_LACE_PARSER.reset */
extern void T69f250(GE_context* ac, T0* C);
/* ET_LACE_PARSER.reset_compressed_scanner_skeleton */
extern void T69f255(GE_context* ac, T0* C);
/* ET_LACE_PARSER.reset */
extern void T69f255p1(GE_context* ac, T0* C);
/* ET_LACE_PARSER.make */
extern T0* T69c247(GE_context* ac, T0* a1);
/* ET_LACE_PARSER.make_with_factory */
extern void T69f249(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_parser_skeleton */
extern void T69f254(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_build_parser_tables */
extern void T69f269(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yycheck_template */
extern T0* T69f187(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yyfixed_array */
extern T0* T69f242(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yycheck_template_2 */
extern void T69f291(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yyarray_subcopy */
extern void T69f298(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_LACE_PARSER.integer_array_ */
extern T0* T69f246(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yycheck_template_1 */
extern void T69f290(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yytable_template */
extern T0* T69f186(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytable_template_2 */
extern void T69f289(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yytable_template_1 */
extern void T69f288(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yypgoto_template */
extern T0* T69f185(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yypact_template */
extern T0* T69f184(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yydefgoto_template */
extern T0* T69f183(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yydefact_template */
extern T0* T69f182(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytypes2_template */
extern T0* T69f181(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytypes1_template */
extern T0* T69f180(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yyr1_template */
extern T0* T69f179(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytranslate_template */
extern T0* T69f178(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytranslate_template_2 */
extern void T69f287(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yytranslate_template_1 */
extern void T69f286(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_create_value_stacks */
extern void T69f268(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].make */
extern T0* T228f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].make_empty */
extern T0* T221c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].default_create */
extern T0* T228c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM].make */
extern T0* T222f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_SYSTEM].make_empty */
extern T0* T219c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM].default_create */
extern T0* T222c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T230f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].make_empty */
extern T0* T229c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].default_create */
extern T0* T230c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].make */
extern T0* T227f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_EXCLUDE].make_empty */
extern T0* T226c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].default_create */
extern T0* T227c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].make */
extern T0* T223f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_CLUSTERS].make_empty */
extern T0* T220c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].default_create */
extern T0* T223c3(GE_context* ac);
/* ET_LACE_PARSER.make_lace_scanner */
extern void T69f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_with_buffer */
extern void T69f267(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_initialize */
extern void T69f280(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_initialize */
extern void T69f280p1(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_build_tables */
extern void T69f284(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_accept_template */
extern T0* T69f231(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_fixed_array */
extern T0* T69f244(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_meta_template */
extern T0* T69f230(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_ec_template */
extern T0* T69f229(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_ec_template_2 */
extern void T69f297(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_array_subcopy */
extern void T69f299(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_LACE_PARSER.yy_ec_template_1 */
extern void T69f296(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_def_template */
extern T0* T69f228(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_base_template */
extern T0* T69f227(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_chk_template */
extern T0* T69f226(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_chk_template_2 */
extern void T69f295(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_chk_template_1 */
extern void T69f294(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_nxt_template */
extern T0* T69f225(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_nxt_template_2 */
extern void T69f293(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_nxt_template_1 */
extern void T69f292(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.empty_buffer */
extern T0* T69f135(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T205c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_with_equality_testers */
extern void T205f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_sparse_container */
extern void T205f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].set_internal_cursor */
extern void T205f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_cursor */
extern T0* T205f30(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T634c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_slots */
extern void T205f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_clashes */
extern void T205f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_key_storage */
extern void T205f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_item_storage */
extern void T205f55(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [ET_IDENTIFIER].default_create */
extern T0* T321c2(GE_context* ac);
/* ET_LACE_AST_FACTORY.make */
extern T0* T204c7(GE_context* ac);
/* ET_LACE_ERROR_HANDLER.make_standard */
extern T0* T70c6(GE_context* ac);
/* ET_LACE_ERROR_HANDLER.std */
extern T0* T70f4(GE_context* ac, T0* C);
/* GEC.parse_ecf_file */
extern void T24f42(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.to_boolean */
extern T1 T1206f60(GE_context* ac, T0* C);
/* STRING_8.to_boolean */
extern T1 T17f43(GE_context* ac, T0* C);
/* UC_UTF8_STRING.is_boolean */
extern T1 T1206f59(GE_context* ac, T0* C);
/* STRING_8.is_boolean */
extern T1 T17f42(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.value */
extern T0* T68f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.has_error */
extern T1 T64f5(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_file */
extern void T63f99(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].wipe_out */
extern void T180f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_wipe_out */
extern void T180f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_wipe_out */
extern void T180f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_wipe_out */
extern void T180f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_wipe_out */
extern void T180f42(GE_context* ac, T0* C);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].keep_head */
extern void T622f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].set_count */
extern void T622f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].unset_found_item */
extern void T180f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].move_all_cursors_after */
extern void T180f40(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_next_cursor */
extern void T625f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_after */
extern void T625f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].wipe_out */
extern void T179f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_wipe_out */
extern void T179f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_wipe_out */
extern void T179f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_wipe_out */
extern void T179f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_wipe_out */
extern void T179f48(GE_context* ac, T0* C);
/* SPECIAL [ET_ECF_LIBRARY].keep_head */
extern void T618f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_LIBRARY].set_count */
extern void T618f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].unset_found_item */
extern void T179f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].move_all_cursors_after */
extern void T179f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_next_cursor */
extern void T617f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_after */
extern void T617f9(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_file */
extern void T63f99p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.last_error_description */
extern T0* T166f128(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.position */
extern T0* T166f120(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_POSITION].first */
extern T0* T577f6(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.positions */
extern T0* T166f93(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_positions */
extern T0* T166f122(GE_context* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].remove */
extern void T578f7(GE_context* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].item */
extern T0* T578f4(GE_context* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].is_empty */
extern T1 T578f3(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_POSITION].force_last */
extern void T577f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_POSITION].put_right */
extern void T1367f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_POSITION].attach_left */
extern void T1367f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_POSITION].make */
extern T0* T1367c4(GE_context* ac, T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].make */
extern T0* T577c7(GE_context* ac);
/* DS_BILINKED_LIST [XM_POSITION].set_internal_cursor */
extern void T577f9(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].new_cursor */
extern T0* T577f5(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_POSITION].make */
extern T0* T1368c3(GE_context* ac, T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].copy */
extern void T578f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_EIFFEL_SCANNER].put_right */
extern void T1369f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_EIFFEL_SCANNER].make */
extern T0* T1369c3(GE_context* ac, T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].make */
extern T0* T578c5(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.report_syntax_error */
extern void T64f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_error */
extern void T64f13(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_error_message */
extern void T64f14(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_error_message */
extern void T64f14p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.message */
extern T0* T64f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.default_message */
extern T0* T202f9(GE_context* ac, T0* C);
/* ET_ECF_ERROR.message */
extern T0* T202f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.arguments */
extern T0* T202f6(GE_context* ac, T0* C);
/* KL_ARGUMENTS.make */
extern T0* T32c5(GE_context* ac);
/* KL_ARGUMENTS.argument */
extern T0* T32f2(GE_context* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.as_string_8 */
extern T0* T19f9(GE_context* ac, T0* C);
/* ARGUMENTS_32.argument */
extern T0* T425f1(GE_context* ac, T0* C, T6 a1);
/* ARRAY [IMMUTABLE_STRING_32].item */
extern T0* T1322f5(GE_context* ac, T0* C, T6 a1);
/* ARGUMENTS_32.internal_argument_array */
extern T0* T425f3(GE_context* ac, T0* C);
/* ARRAY [IMMUTABLE_STRING_32].put */
extern void T1322f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [IMMUTABLE_STRING_32].compare_objects */
extern void T1322f7(GE_context* ac, T0* C);
/* ARRAY [IMMUTABLE_STRING_32].make_filled */
extern T0* T1322c6(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [IMMUTABLE_STRING_32].make_filled_area */
extern void T1322f9(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [IMMUTABLE_STRING_32].make_filled */
extern T0* T1323c6(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [IMMUTABLE_STRING_32].fill_with */
extern void T1323f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [IMMUTABLE_STRING_32].extend */
extern void T1323f8(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [IMMUTABLE_STRING_32].make_empty */
extern void T1323f4(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [IMMUTABLE_STRING_32].make_empty */
extern T0* T1323c4(GE_context* ac, T6 a1);
/* IMMUTABLE_STRING_32.make_empty */
extern T0* T19c16(GE_context* ac);
/* IMMUTABLE_STRING_32.make */
extern void T19f17(GE_context* ac, T0* C, T6 a1);
/* KL_ARGUMENTS.internal_arguments */
extern T0* T32f3(GE_context* ac, T0* C);
/* ARGUMENTS_32.default_create */
extern T0* T425c5(GE_context* ac);
/* ARRAY [STRING_8].valid_index */
extern T1 T144f4(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.to_integer */
extern T6 T1206f29(GE_context* ac, T0* C);
/* UC_UTF8_STRING.ctoi_convertor */
extern T0* T1206f48(GE_context* ac, T0* C);
/* UC_UTF8_STRING.is_integer */
extern T1 T1206f28(GE_context* ac, T0* C);
/* UC_UTF8_STRING.is_valid_integer_or_natural */
extern T1 T1206f47(GE_context* ac, T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.is_integral_integer */
extern T1 T1131f12(GE_context* ac, T0* C);
/* STRING_8.is_integer */
extern T1 T17f36(GE_context* ac, T0* C);
/* STRING_8.is_valid_integer_or_natural */
extern T1 T17f39(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ERROR.string_ */
extern T0* T202f8(GE_context* ac, T0* C);
/* ET_ECF_ERROR.make_syntax */
extern T0* T202c190(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.filename */
extern T0* T202f14(GE_context* ac, T0* C);
/* ET_ECF_ERROR.default_message_template */
extern T0* T202f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.add_dependent_universes */
extern void T202f274(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T202f274ot1(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].item */
extern T0* T1211f9(GE_context* ac, T0* C, T6 a1);
/* XM_TREE_CALLBACKS_PIPE.last_error */
extern T0* T159f8(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.make */
extern T0* T181c11(GE_context* ac, T6 a1, T6 a2);
/* ET_COMPRESSED_POSITION.set_position */
extern void T181f12(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_ECF_ERROR_HANDLER.report_eabx_error */
extern void T64f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabx */
extern T0* T202c189(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.element_name */
extern T0* T63f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_POSITION_TABLE.item */
extern T0* T157f2(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].forth */
extern void T1202f11(GE_context* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_forth */
extern void T1203f12(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].add_traversing_cursor */
extern void T1203f13(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_next_cursor */
extern void T1202f14(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].remove_traversing_cursor */
extern void T1203f14(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set */
extern void T1202f12(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].go_after */
extern void T1202f10(GE_context* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_go_after */
extern void T1203f11(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_after */
extern void T1202f13(GE_context* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_off */
extern T1 T1203f6(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].off */
extern T1 T1202f7(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].item */
extern T0* T1202f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].start */
extern void T1202f9(GE_context* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_start */
extern void T1203f10(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].new_cursor */
extern T0* T1203f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T1202c8(GE_context* ac, T0* a1);
/* XM_POSITION_TABLE.has */
extern T1 T157f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_system */
extern T0* T177f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.make */
extern T0* T65c155(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.make_system */
extern void T65f165(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_default_class_mapping */
extern void T65f180(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_wide_character_ref_class_mapping */
extern void T65f242(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_class_mapping */
extern void T65f244(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.set_wide_character_class_mapping */
extern void T65f241(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_string_class_mapping */
extern void T65f240(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_real_ref_class_mapping */
extern void T65f239(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_real_class_mapping */
extern void T65f238(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_natural_ref_class_mapping */
extern void T65f237(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_natural_class_mapping */
extern void T65f236(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_integer_ref_class_mapping */
extern void T65f235(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_integer_class_mapping */
extern void T65f234(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_double_ref_class_mapping */
extern void T65f233(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_double_class_mapping */
extern void T65f232(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_character_ref_class_mapping */
extern void T65f231(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_character_class_mapping */
extern void T65f230(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.tokens */
extern T0* T65f132(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_kernel_types */
extern void T65f179(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_wide_character_type */
extern void T65f229(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_typed_pointer_type */
extern void T65f228(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_type_type */
extern void T65f227(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_string_type */
extern void T65f226(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_object_type */
extern void T65f225(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_type */
extern void T65f224(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_32_type */
extern void T65f223(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_8_type */
extern void T65f222(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_special_type */
extern void T65f221(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_routine_type */
extern void T65f220(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_64_type */
extern void T65f219(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_32_type */
extern void T65f218(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_type */
extern void T65f217(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_procedure_type */
extern void T65f216(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_predicate_type */
extern void T65f215(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_pointer_type */
extern void T65f214(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_none_type */
extern void T65f213(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_64_type */
extern void T65f212(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_32_type */
extern void T65f211(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_16_type */
extern void T65f210(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_8_type */
extern void T65f209(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_type */
extern void T65f208(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_iterable_type */
extern void T65f207(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_ise_exception_manager_type */
extern void T65f206(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_64_type */
extern void T65f205(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_32_type */
extern void T65f204(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_16_type */
extern void T65f203(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_8_type */
extern void T65f202(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_type */
extern void T65f201(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_immutable_string_32_type */
extern void T65f200(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_function_type */
extern void T65f199(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_exception_manager_type */
extern void T65f198(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_exception_type */
extern void T65f197(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_double_type */
extern void T65f196(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_32_type */
extern void T65f195(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_8_type */
extern void T65f194(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_type */
extern void T65f193(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_boolean_type */
extern void T65f192(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_array_type */
extern void T65f191(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_tuple_type */
extern void T65f190(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_any_type */
extern void T65f189(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.make_adapted */
extern void T65f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.default_read_only_value */
extern T1 T65f142(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_unknown_kernel_types */
extern void T65f177(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_name */
extern void T65f176(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.initialize */
extern void T65f175(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.initialize */
extern void T65f175p1(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.class_name_tester */
extern T0* T65f146(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.make */
extern void T65f155p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.build_system_config */
extern void T63f101(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.build_system_config */
extern T0* T63f101ac1(GE_context* ac);
/* [attached] PROCEDURE [[attached] TUPLE [ET_ADAPTED_LIBRARY]].set_rout_disp_final */
extern void T194f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_LIBRARY.propagate_read_only */
extern void T197f21(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_read_only */
extern void T190f209(GE_context* ac, T0* C, T1 a1);
/* ET_LIBRARY.set_read_only */
extern void T474f181(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM_PARSER.parse_dotnet_assemblies */
extern void T63f104(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T63f104ot1(T0* a1, T0** a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].force_last_new */
extern void T180f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_put */
extern void T180f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_put */
extern void T180f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].force */
extern void T626f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].fill_with */
extern void T622f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].extend */
extern void T622f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_put */
extern void T180f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_put */
extern void T180f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_item */
extern T6 T180f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].hash_position */
extern T6 T180f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].resize */
extern void T180f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_resize */
extern void T180f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].special_integer_ */
extern T0* T180f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_resize */
extern void T180f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_resize */
extern void T180f54(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T626f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T622f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_item */
extern T0* T180f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_item */
extern T6 T180f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_resize */
extern void T180f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_modulus */
extern T6 T180f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_capacity */
extern T6 T180f21(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_dotnet_assembly */
extern T0* T177f2(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.make */
extern T0* T199c105(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.make_from_system */
extern void T199f106(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.set_default_class_mapping */
extern void T199f111(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T199f165(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_class_mapping */
extern void T199f166(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_class */
extern T0* T199f91(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_class_mapping */
extern void T199f164(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_class_mapping */
extern void T199f163(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_ref_class_mapping */
extern void T199f162(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_class_mapping */
extern void T199f161(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_ref_class_mapping */
extern void T199f160(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_class_mapping */
extern void T199f159(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_ref_class_mapping */
extern void T199f158(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_class_mapping */
extern void T199f157(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_ref_class_mapping */
extern void T199f156(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_class_mapping */
extern void T199f155(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_ref_class_mapping */
extern void T199f154(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_class_mapping */
extern void T199f153(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.tokens */
extern T0* T199f101(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_kernel_types */
extern void T199f110(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T199f152(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T199f151(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_type_type */
extern void T199f150(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_system_string_type */
extern void T199f149(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_system_object_type */
extern void T199f148(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_type */
extern void T199f147(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_32_type */
extern void T199f146(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_8_type */
extern void T199f145(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_special_type */
extern void T199f144(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_routine_type */
extern void T199f143(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_64_type */
extern void T199f142(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_32_type */
extern void T199f141(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_type */
extern void T199f140(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_procedure_type */
extern void T199f139(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_predicate_type */
extern void T199f138(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_pointer_type */
extern void T199f137(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_none_type */
extern void T199f136(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T199f135(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T199f134(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T199f133(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T199f132(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_type */
extern void T199f131(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_iterable_type */
extern void T199f130(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T199f129(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T199f128(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T199f127(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T199f126(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T199f125(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_type */
extern void T199f124(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T199f123(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_function_type */
extern void T199f122(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T199f121(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_exception_type */
extern void T199f120(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_type */
extern void T199f119(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_32_type */
extern void T199f118(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_8_type */
extern void T199f117(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_type */
extern void T199f116(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_boolean_type */
extern void T199f115(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_array_type */
extern void T199f114(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_tuple_type */
extern void T199f113(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_any_type */
extern void T199f112(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.make_adapted */
extern void T199f109(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T199f90(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T199f108(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.initialize */
extern void T199f107(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T199f89(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_dotnet_assembly */
extern void T201f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].found_item */
extern T0* T180f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_item */
extern T0* T180f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].found */
extern T1 T180f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].search */
extern void T180f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].search_position */
extern void T180f46(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.as_lower */
extern T0* T1206f17(GE_context* ac, T0* C);
/* UC_UTF8_STRING.to_lower */
extern void T1206f83(GE_context* ac, T0* C);
/* STRING_8.as_lower */
extern T0* T17f26(GE_context* ac, T0* C);
/* STRING_8.to_lower */
extern void T17f67(GE_context* ac, T0* C);
/* STRING_8.to_lower_area */
extern void T17f71(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_ECF_SYSTEM_PARSER.operating_system */
extern T0* T63f21(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.dirname */
extern T0* T122f6(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.is_root_directory */
extern T1 T122f14(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.dirname */
extern T0* T121f6(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_root_directory */
extern T1 T121f16(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.is_relative_pathname */
extern T1 T122f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.execution_environment */
extern T0* T63f20(GE_context* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T198f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T631f9(GE_context* ac, T0* C, T6 a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T198f2(GE_context* ac, T0* C);
/* ET_ECF_TARGET.fill_options */
extern void T66f36(GE_context* ac, T0* C, T0* a1);
extern T1 T66f36ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.set_trace_mode */
extern void T65f270(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_obsolete_routine_type_mode */
extern void T65f269(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_obsolete_routine_type_mode */
extern void T190f193(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.ecf_1_15_0 */
extern T0* T66f17(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_type_mark */
extern T0* T82f78(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_detachable_mark */
extern void T368f19(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_implicit_attachment_type_mark */
extern void T65f268(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_implicit_attachment_type_mark */
extern void T190f192(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.tokens */
extern T0* T66f16(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_target_type_attachment_mode */
extern void T65f267(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_target_type_attachment_mode */
extern void T190f191(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_attachment_type_conformance_mode */
extern void T65f266(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_attachment_type_conformance_mode */
extern void T190f190(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_OPTIONS.value */
extern T0* T1171f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.fill_settings */
extern void T66f40(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_exception_trace_mode */
extern void T65f274(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_multithreaded_mode */
extern void T65f273(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.string_ */
extern T0* T66f23(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_console_application_mode */
extern void T65f272(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SETTINGS.value */
extern T0* T1170f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.fill_root */
extern void T66f39(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.fill_root */
extern void T1173f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_root_creation */
extern void T65f276(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_root_type */
extern void T65f275(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_ALL_CLASSES.fill_root */
extern void T1174f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.unset_root_type */
extern void T65f277(GE_context* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.do_adapted */
extern void T191f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].do_all */
extern void T628f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].item */
extern T0* T628f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].forth */
extern void T179f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_forth */
extern void T179f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].add_traversing_cursor */
extern void T179f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_position */
extern void T617f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].remove_traversing_cursor */
extern void T179f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_item */
extern T6 T179f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_for_iteration */
extern T0* T179f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_item */
extern T0* T179f29(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_item */
extern T0* T179f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].after */
extern T1 T179f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_after */
extern T1 T179f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].after */
extern T1 T617f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].start */
extern void T179f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_start */
extern void T179f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_off */
extern T1 T179f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].off */
extern T1 T617f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].is_empty */
extern T1 T179f21(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_libraries */
extern void T63f103(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.select_target */
extern void T190f121(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.fill_universe */
extern void T66f37(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T66f37ot1(T0* a1);
/* ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern void T1168f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern T0* T1168f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY]].set_rout_disp_final */
extern void T1716f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_LIBRARY.fill_external_libraries */
extern void T1167f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARY.file_system */
extern T0* T1167f4(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.unix_file_system */
extern T0* T1167f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.windows_file_system */
extern T0* T1167f6(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.operating_system */
extern T0* T1167f5(GE_context* ac, T0* C);
/* UC_UTF8_STRING.starts_with */
extern T1 T1206f62(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.is_enabled */
extern T1 T1167f3(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].do_all */
extern void T1569f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].item */
extern T0* T1569f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern void T1166f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern T0* T1166f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_OBJECT]].set_rout_disp_final */
extern void T1714f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_OBJECT.fill_external_objects */
extern void T1165f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_OBJECT.file_system */
extern T0* T1165f4(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.unix_file_system */
extern T0* T1165f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.windows_file_system */
extern T0* T1165f6(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.operating_system */
extern T0* T1165f5(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.is_enabled */
extern T1 T1165f3(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].do_all */
extern void T1568f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].item */
extern T0* T1568f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern void T1164f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern T0* T1164f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE]].set_rout_disp_final */
extern void T1711f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_INCLUDE.fill_external_includes */
extern void T1163f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDE.file_system */
extern T0* T1163f4(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.unix_file_system */
extern T0* T1163f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.windows_file_system */
extern T0* T1163f6(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.operating_system */
extern T0* T1163f5(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.is_enabled */
extern T1 T1163f3(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].do_all */
extern void T1567f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].item */
extern T0* T1567f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_dotnet */
extern void T65f271(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.is_enabled */
extern T1 T201f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T1160f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T1564f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T1160f3(GE_context* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.put_last */
extern void T191f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].force_last */
extern void T628f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].force */
extern void T1386f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_LIBRARY].fill_with */
extern void T1385f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_LIBRARY].extend */
extern void T1385f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].resize */
extern void T628f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1386f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1385f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].new_capacity */
extern T6 T628f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].extendible */
extern T1 T628f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_LIBRARY.is_enabled */
extern T1 T197f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.library */
extern T0* T1159f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].item */
extern T0* T1563f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_LIBRARIES.count */
extern T6 T1159f3(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.fill_file_rules */
extern void T1157f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_CLUSTER.fill_file_rules */
extern T0* T1157f71ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [ET_ECF_CLUSTER]].set_rout_disp_final */
extern void T1853f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_CLUSTERS.do_all */
extern void T1158f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.fill_file_rules */
extern void T1162f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T1162f7ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T1162f7ac2(GE_context* ac, T0* a1);
/* [attached] PREDICATE [[attached] TUPLE [ET_ECF_FILE_RULE]].set_rout_disp_final */
extern void T1858f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_FILE_RULE.is_enabled */
extern T1 T1161f8(GE_context* ac, T0* C, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [ET_ECF_FILE_RULE]].set_rout_disp_final */
extern void T1856f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_FILE_RULES.put_last */
extern void T1162f5(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].force_last */
extern void T1566f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].force */
extern void T1748f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_FILE_RULE].fill_with */
extern void T1749f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_FILE_RULE].extend */
extern void T1749f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].resize */
extern void T1566f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T1748f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T1749f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].new_capacity */
extern T6 T1566f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].extendible */
extern T1 T1566f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].do_if */
extern void T1566f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].item */
extern T0* T1566f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_TARGET.fill_file_rules */
extern void T66f41(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_FILE_RULES.make_empty */
extern T0* T1162c6(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].make */
extern T0* T1566c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].set_internal_cursor */
extern void T1566f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].new_cursor */
extern T0* T1566f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE].make */
extern T0* T1750c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].make */
extern T0* T1748f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_FILE_RULE].make_empty */
extern T0* T1749c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].default_create */
extern T0* T1748c3(GE_context* ac);
/* ET_ECF_CLUSTER.fill_subclusters */
extern void T1157f70(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.add_subcluster */
extern void T1157f76(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_parent */
extern void T1157f66(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.put_last */
extern void T1158f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].force_last */
extern void T1562f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].force */
extern void T1737f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_CLUSTER].fill_with */
extern void T1736f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_CLUSTER].extend */
extern void T1736f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].resize */
extern void T1562f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T1737f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T1736f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].new_capacity */
extern T6 T1562f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].extendible */
extern T1 T1562f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.set_subclusters */
extern void T1157f77(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_parent */
extern void T1158f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.make_empty */
extern T0* T1158c8(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].make */
extern T0* T1562c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].set_internal_cursor */
extern void T1562f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].new_cursor */
extern T0* T1562f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].make */
extern T0* T1738c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].make */
extern T0* T1737f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].make_empty */
extern T0* T1736c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].default_create */
extern T0* T1737c3(GE_context* ac);
/* ET_CLUSTERS.put_last */
extern void T1133f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].force_last */
extern void T1499f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].force */
extern void T1729f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLUSTER].fill_with */
extern void T1728f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLUSTER].extend */
extern void T1728f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].resize */
extern void T1499f13(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].aliased_resized_area */
extern T0* T1729f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLUSTER].aliased_resized_area */
extern T0* T1728f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].new_capacity */
extern T6 T1499f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].extendible */
extern T1 T1499f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.is_enabled */
extern T1 T1157f34(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.cluster */
extern T0* T1158f4(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTERS.count */
extern T6 T1158f3(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eabw_error */
extern void T64f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabw */
extern T0* T202c192(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.set_library */
extern void T197f15(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.parse_adapted_library */
extern void T196f99(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.parse_file */
extern void T196f101(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.parse_file */
extern void T196f101p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.element_name */
extern T0* T196f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.build_system_config */
extern void T196f102(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY_PARSER.new_library */
extern T0* T196f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].force_last_new */
extern void T179f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_put */
extern void T179f69(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_put */
extern void T179f68(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].force */
extern void T621f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_LIBRARY].fill_with */
extern void T618f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_LIBRARY].extend */
extern void T618f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_put */
extern void T179f67(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_put */
extern void T179f66(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_item */
extern T6 T179f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].hash_position */
extern T6 T179f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].resize */
extern void T179f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_resize */
extern void T179f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].special_integer_ */
extern T0* T179f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_resize */
extern void T179f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_resize */
extern void T179f71(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T621f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T618f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_item */
extern T0* T179f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_resize */
extern void T179f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_modulus */
extern T6 T179f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_capacity */
extern T6 T179f32(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_LIBRARY_PARSER.fill_system_config */
extern void T196f103(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T196f103ot1(T0* a1, T0** a2);
/* ET_ECF_LIBRARY.set_library_target */
extern void T190f126(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.target_by_name */
extern T0* T189f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.string_ */
extern T0* T189f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].item */
extern T0* T627f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_eabq_error */
extern void T64f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabq */
extern T0* T202c197(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabp_error */
extern void T64f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabp */
extern T0* T202c196(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.set_targets */
extern void T190f125(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eaby_error */
extern void T64f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaby */
extern T0* T202c195(GE_context* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].forth */
extern void T441f12(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_forth */
extern void T1198f15(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].add_traversing_cursor */
extern void T1198f19(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_next_cursor */
extern void T441f17(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_traversing_cursor */
extern void T1198f20(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set */
extern void T441f15(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_ECF_TARGETS.put_last */
extern void T189f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].force_last */
extern void T627f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].force */
extern void T1383f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET].fill_with */
extern void T1382f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET].extend */
extern void T1382f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].resize */
extern void T627f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].aliased_resized_area */
extern T0* T1383f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_TARGET].aliased_resized_area */
extern T0* T1382f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].new_capacity */
extern T6 T627f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].extendible */
extern T1 T627f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_targets */
extern T0* T177f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.make */
extern T0* T189c8(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].put_last */
extern void T627f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].make */
extern T0* T627c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].set_internal_cursor */
extern void T627f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].new_cursor */
extern T0* T627f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET].make */
extern T0* T1384c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].make */
extern T0* T1383f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_TARGET].make_empty */
extern T0* T1382c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].default_create */
extern T0* T1383c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_target */
extern T0* T196f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T196f27ot1(T0* a1, T0** a2);
/* ET_ECF_TARGET.set_external_objects */
extern void T66f35(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_libraries */
extern void T66f34(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_includes */
extern void T66f33(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_file_rules */
extern void T66f32(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_dotnet_assemblies */
extern void T66f31(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_libraries */
extern void T66f30(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_clusters */
extern void T66f29(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.add_option */
extern void T196f106(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_OPTIONS.set_primary_value */
extern void T1171f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_value */
extern T0* T1171f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.add_setting */
extern void T196f105(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SETTINGS.set_primary_value */
extern void T1170f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SETTINGS.primary_value */
extern T0* T1170f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_esve_error */
extern void T64f95(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_esve */
extern T0* T202c273(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_esvm_error */
extern void T64f94(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_esvm */
extern T0* T202c272(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_esne_error */
extern void T64f93(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_esne */
extern T0* T202c271(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_esnm_error */
extern void T64f92(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_esnm */
extern T0* T202c270(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.add_variable */
extern void T196f104(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_VARIABLES.set_primary_value */
extern void T68f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_VARIABLES.primary_value */
extern T0* T68f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabu_error */
extern void T64f91(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabu */
extern T0* T202c269(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabt_error */
extern void T64f90(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabt */
extern T0* T202c268(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabs_error */
extern void T64f89(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabs */
extern T0* T202c267(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabr_error */
extern void T64f88(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabr */
extern T0* T202c266(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_TARGET.set_root */
extern void T66f28(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.new_root */
extern T0* T196f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ROOT_CLASS.set_creation_procedure_name */
extern void T1173f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacc_error */
extern void T64f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacc */
extern T0* T202c236(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_root_class */
extern T0* T177f21(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.make */
extern T0* T1173c3(GE_context* ac, T0* a1);
/* ET_ECF_LIBRARY_PARSER.attribute_value */
extern T0* T196f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacb_error */
extern void T64f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacb */
extern T0* T202c235(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaca_error */
extern void T64f56(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaca */
extern T0* T202c234(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_root_all_classes */
extern T0* T177f20(GE_context* ac, T0* C);
/* ET_ECF_ROOT_ALL_CLASSES.make */
extern T0* T1174c1(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.report_eabz_error */
extern void T64f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabz */
extern T0* T202c233(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY_PARSER.is_false */
extern T1 T196f53(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.is_true */
extern T1 T196f52(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECTS.put_last */
extern void T1166f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].force_last */
extern void T1568f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].force */
extern void T1754f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].fill_with */
extern void T1755f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].extend */
extern void T1755f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].resize */
extern void T1568f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T1754f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T1755f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].new_capacity */
extern T6 T1568f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].extendible */
extern T1 T1568f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_objects */
extern T0* T177f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECTS.make */
extern T0* T1166c3(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].put_last */
extern void T1568f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1568c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].set_internal_cursor */
extern void T1568f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].new_cursor */
extern T0* T1568f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1756c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1754f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].make_empty */
extern T0* T1755c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].default_create */
extern T0* T1754c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_external_object */
extern T0* T196f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T196f44ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_OBJECT.set_condition */
extern void T1165f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONDITIONS.put_last */
extern void T1172f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].force_last */
extern void T1570f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION].force */
extern void T1760f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_CONDITION].fill_with */
extern void T1761f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_CONDITION].extend */
extern void T1761f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].resize */
extern void T1570f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION].aliased_resized_area */
extern T0* T1760f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_CONDITION].aliased_resized_area */
extern T0* T1761f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].new_capacity */
extern T6 T1570f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].extendible */
extern T1 T1570f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_conditions */
extern T0* T177f13(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONDITIONS.make_ored */
extern T0* T1172c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].put_last */
extern void T1570f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].make */
extern T0* T1570c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].set_internal_cursor */
extern void T1570f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].new_cursor */
extern T0* T1570f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION].make */
extern T0* T1762c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION].make */
extern T0* T1760f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CONDITION].make_empty */
extern T0* T1761c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION].default_create */
extern T0* T1760c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_condition */
extern T0* T196f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T196f56ot1(T0* a1, T0** a2);
/* ET_ECF_LIBRARY_PARSER.new_version_condition */
extern T0* T196f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabj_error */
extern void T64f87(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabj */
extern T0* T202c265(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_COMPILER_VERSION_CONDITION.make */
extern T0* T1184c5(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabi_error */
extern void T64f86(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabi */
extern T0* T202c264(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabh_error */
extern void T64f85(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR.make_eabh */
extern T0* T202c263(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR_HANDLER.report_eabg_error */
extern void T64f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabg */
extern T0* T202c262(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabf_error */
extern void T64f83(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabf */
extern T0* T202c261(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* UT_VERSION.make_major_minor */
extern T0* T79c19(GE_context* ac, T6 a1, T6 a2);
/* UT_VERSION.make_major */
extern T0* T79c18(GE_context* ac, T6 a1);
/* ET_ECF_LIBRARY_PARSER.new_custom_condition */
extern T0* T196f82(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaar_error */
extern void T64f82(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaar */
extern T0* T202c260(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaas_error */
extern void T64f81(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaas */
extern T0* T202c259(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_custom_condition */
extern T0* T177f29(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_ECF_CUSTOM_CONDITION.make */
extern T0* T1182c7(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_CUSTOM_CONDITION.make_excluded */
extern T0* T1182c6(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaaq_error */
extern void T64f80(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaaq */
extern T0* T202c258(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaap_error */
extern void T64f79(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaap */
extern T0* T202c257(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaao_error */
extern void T64f78(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaao */
extern T0* T202c256(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaan_error */
extern void T64f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaan */
extern T0* T202c255(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.new_dynamic_runtime_condition */
extern T0* T196f80(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaaw_error */
extern void T64f76(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaaw */
extern T0* T202c254(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_dynamic_runtime_condition */
extern T0* T177f28(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.make */
extern T0* T1181c3(GE_context* ac, T1 a1);
/* ET_ECF_ERROR_HANDLER.report_eaav_error */
extern void T64f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaav */
extern T0* T202c253(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.new_dotnet_condition */
extern T0* T196f78(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaau_error */
extern void T64f74(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaau */
extern T0* T202c252(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_dotnet_condition */
extern T0* T177f27(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_DOTNET_CONDITION.make */
extern T0* T1180c3(GE_context* ac, T1 a1);
/* ET_ECF_ERROR_HANDLER.report_eaat_error */
extern void T64f73(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaat */
extern T0* T202c251(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.new_concurrency_condition */
extern T0* T196f76(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eade_error */
extern void T64f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eade */
extern T0* T202c250(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eadd_error */
extern void T64f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eadd */
extern T0* T202c249(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_concurrency_condition */
extern T0* T177f26(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_CONCURRENCY_CONDITION.make */
extern T0* T1179c6(GE_context* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.make_excluded */
extern T0* T1179c5(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eadc_error */
extern void T64f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eadc */
extern T0* T202c248(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eadb_error */
extern void T64f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadb */
extern T0* T202c247(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY_PARSER.new_multithreaded_condition */
extern T0* T196f74(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaay_error */
extern void T64f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaay */
extern T0* T202c246(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_multithreaded_condition */
extern T0* T177f25(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_MULTITHREADED_CONDITION.make */
extern T0* T1178c3(GE_context* ac, T1 a1);
/* ET_ECF_ERROR_HANDLER.report_eaax_error */
extern void T64f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaax */
extern T0* T202c245(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.new_build_condition */
extern T0* T196f72(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaag_error */
extern void T64f66(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaag */
extern T0* T202c244(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaah_error */
extern void T64f65(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaah */
extern T0* T202c243(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_build_condition */
extern T0* T177f24(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_BUILD_CONDITION.make */
extern T0* T1177c6(GE_context* ac, T0* a1);
/* ET_ECF_BUILD_CONDITION.make_excluded */
extern T0* T1177c5(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eaaf_error */
extern void T64f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaaf */
extern T0* T202c242(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaae_error */
extern void T64f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaae */
extern T0* T202c241(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY_PARSER.new_platform_condition */
extern T0* T196f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabb_error */
extern void T64f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabb */
extern T0* T202c240(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabc_error */
extern void T64f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabc */
extern T0* T202c239(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_platform_condition */
extern T0* T177f23(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_PLATFORM_CONDITION.make */
extern T0* T1176c7(GE_context* ac, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.make_excluded */
extern T0* T1176c6(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eaba_error */
extern void T64f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaba */
extern T0* T202c238(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaaz_error */
extern void T64f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaaz */
extern T0* T202c237(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_condition */
extern T0* T177f22(GE_context* ac, T0* C);
/* ET_ECF_CONDITIONS.make_anded_empty */
extern T0* T1172c7(GE_context* ac);
/* ET_ECF_AST_FACTORY.new_external_object */
extern T0* T177f19(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECT.make */
extern T0* T1165c8(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacn_error */
extern void T64f54(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacn */
extern T0* T202c232(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacm_error */
extern void T64f53(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacm */
extern T0* T202c231(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARIES.put_last */
extern void T1168f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].force_last */
extern void T1569f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].force */
extern void T1757f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].fill_with */
extern void T1758f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].extend */
extern void T1758f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].resize */
extern void T1569f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T1757f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T1758f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].new_capacity */
extern T6 T1569f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].extendible */
extern T1 T1569f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_libraries */
extern T0* T177f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARIES.make */
extern T0* T1168c3(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].put_last */
extern void T1569f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1569c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].set_internal_cursor */
extern void T1569f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].new_cursor */
extern T0* T1569f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1759c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1757f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].make_empty */
extern T0* T1758c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].default_create */
extern T0* T1757c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_external_library */
extern T0* T196f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T196f42ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_LIBRARY.set_condition */
extern void T1167f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_library */
extern T0* T177f18(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.make */
extern T0* T1167c8(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacl_error */
extern void T64f52(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacl */
extern T0* T202c230(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eack_error */
extern void T64f51(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eack */
extern T0* T202c229(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDES.put_last */
extern void T1164f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].force_last */
extern void T1567f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].force */
extern void T1751f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].fill_with */
extern void T1752f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].extend */
extern void T1752f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].resize */
extern void T1567f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T1751f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T1752f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].new_capacity */
extern T6 T1567f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].extendible */
extern T1 T1567f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_includes */
extern T0* T177f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDES.make */
extern T0* T1164c3(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].put_last */
extern void T1567f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1567c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].set_internal_cursor */
extern void T1567f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].new_cursor */
extern T0* T1567f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1753c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1751f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].make_empty */
extern T0* T1752c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].default_create */
extern T0* T1751c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_external_include */
extern T0* T196f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T196f40ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_INCLUDE.set_condition */
extern void T1163f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_include */
extern T0* T177f17(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDE.make */
extern T0* T1163c8(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacj_error */
extern void T64f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacj */
extern T0* T202c228(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaci_error */
extern void T64f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaci */
extern T0* T202c227(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_file_rules */
extern T0* T177f8(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.make */
extern T0* T1162c4(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].put_last */
extern void T1566f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.new_file_rule */
extern T0* T196f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T196f38ot1(T0* a1, T0** a2);
/* ET_ECF_FILE_RULE.set_condition */
extern void T1161f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_file_rule */
extern T0* T177f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_FILE_RULE.make */
extern T0* T1161c10(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_FILE_RULE.compiled_regexp */
extern T0* T1161f6(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].forth */
extern void T390f14(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].put_last */
extern void T1565f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].force */
extern void T1745f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].fill_with */
extern void T1746f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].extend */
extern void T1746f7(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_compiled */
extern T1 T322f301(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].item */
extern T0* T390f8(GE_context* ac, T0* C);
/* ET_ECF_FILE_RULE.operating_system */
extern T0* T1161f7(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].start */
extern void T390f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1565c9(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].set_internal_cursor */
extern void T1565f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].new_cursor */
extern T0* T1565f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1747c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1745f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].make_empty */
extern T0* T1746c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].default_create */
extern T0* T1745c2(GE_context* ac);
/* XM_ELEMENT.text */
extern T0* T156f20(GE_context* ac, T0* C);
extern T1 T156f20ot1(T0* a1, T0** a2);
/* XM_ELEMENT.string_ */
extern T0* T156f21(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T1160f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T1564f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T1743f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T1742f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T1742f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T1564f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1743f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1742f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1564f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T1564f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_adapted_dotnet_assemblies */
extern T0* T177f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.make */
extern T0* T1160c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].put_last */
extern void T1564f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1564c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1564f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1564f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1744c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1743f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T1742c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T1743c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_adapted_dotnet_assembly */
extern T0* T196f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T196f36ot1(T0* a1, T0** a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_condition */
extern void T201f18(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_class_renamings */
extern void T201f17(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacs_error */
extern void T64f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacs */
extern T0* T202c221(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.case_insensitive_string_equality_tester */
extern T0* T196f11(GE_context* ac, T0* C);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.default_create */
extern T0* T185c3(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.report_eacr_error */
extern void T64f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacr */
extern T0* T202c220(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacq_error */
extern void T64f41(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacq */
extern T0* T202c219(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacp_error */
extern void T64f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacp */
extern T0* T202c218(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaco_error */
extern void T64f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaco */
extern T0* T202c217(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T201f16(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacw_error */
extern void T64f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eacw */
extern T0* T202c226(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_read_only */
extern void T201f15(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_AST_FACTORY.new_adapted_dotnet_assembly */
extern T0* T177f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make */
extern T0* T201c14(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make_adapted_dotnet_assembly */
extern void T201f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T201f11(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_dotnet_assembly */
extern T0* T82f282(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.make */
extern T0* T464c105(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.make_from_system */
extern void T464f106(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.set_default_class_mapping */
extern void T464f111(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T464f165(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_class_mapping */
extern void T464f166(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_class */
extern T0* T464f91(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_wide_character_class_mapping */
extern void T464f164(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_string_class_mapping */
extern void T464f163(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_real_ref_class_mapping */
extern void T464f162(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_real_class_mapping */
extern void T464f161(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_natural_ref_class_mapping */
extern void T464f160(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_natural_class_mapping */
extern void T464f159(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_integer_ref_class_mapping */
extern void T464f158(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_integer_class_mapping */
extern void T464f157(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_double_ref_class_mapping */
extern void T464f156(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_double_class_mapping */
extern void T464f155(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_character_ref_class_mapping */
extern void T464f154(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_character_class_mapping */
extern void T464f153(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.tokens */
extern T0* T464f98(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_kernel_types */
extern void T464f110(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T464f152(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T464f151(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_type_type */
extern void T464f150(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_system_string_type */
extern void T464f149(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_system_object_type */
extern void T464f148(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_type */
extern void T464f147(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_32_type */
extern void T464f146(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_8_type */
extern void T464f145(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_special_type */
extern void T464f144(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_routine_type */
extern void T464f143(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_64_type */
extern void T464f142(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_32_type */
extern void T464f141(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_type */
extern void T464f140(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_procedure_type */
extern void T464f139(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_predicate_type */
extern void T464f138(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_pointer_type */
extern void T464f137(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_none_type */
extern void T464f136(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T464f135(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T464f134(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T464f133(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T464f132(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_type */
extern void T464f131(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_iterable_type */
extern void T464f130(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T464f129(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T464f128(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T464f127(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T464f126(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T464f125(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_type */
extern void T464f124(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T464f123(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_function_type */
extern void T464f122(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T464f121(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_exception_type */
extern void T464f120(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_double_type */
extern void T464f119(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_32_type */
extern void T464f118(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_8_type */
extern void T464f117(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_type */
extern void T464f116(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_boolean_type */
extern void T464f115(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_array_type */
extern void T464f114(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_tuple_type */
extern void T464f113(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_any_type */
extern void T464f112(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.make_adapted */
extern void T464f109(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T464f90(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T464f108(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.initialize */
extern void T464f107(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T464f89(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.tokens */
extern T0* T201f10(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eada_error */
extern void T64f47(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eada */
extern T0* T202c225(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacz_error */
extern void T64f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacz */
extern T0* T202c224(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacy_error */
extern void T64f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacy */
extern T0* T202c223(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacx_error */
extern void T64f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacx */
extern T0* T202c222(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_LIBRARIES.put_last */
extern void T1159f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].force_last */
extern void T1563f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].force */
extern void T1740f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].fill_with */
extern void T1739f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].extend */
extern void T1739f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].resize */
extern void T1563f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1740f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1739f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].new_capacity */
extern T6 T1563f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].extendible */
extern T1 T1563f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_adapted_libraries */
extern T0* T177f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.make */
extern T0* T1159c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].put_last */
extern void T1563f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1563c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].set_internal_cursor */
extern void T1563f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].new_cursor */
extern T0* T1563f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1741c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1740f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].make_empty */
extern T0* T1739c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].default_create */
extern T0* T1740c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_adapted_library */
extern T0* T196f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T196f34ot1(T0* a1, T0** a2);
/* ET_ECF_ADAPTED_LIBRARY.set_condition */
extern void T197f20(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_class_renamings */
extern void T197f19(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_classname_prefix */
extern void T197f18(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacv_error */
extern void T64f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eacv */
extern T0* T202c216(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.set_read_only */
extern void T197f17(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_AST_FACTORY.new_adapted_library */
extern T0* T177f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.make */
extern T0* T197c14(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.make_adapted_library */
extern void T197f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_LIBRARY.default_read_only_value */
extern T1 T197f10(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_library */
extern T0* T82f231(GE_context* ac, T0* C);
/* ET_LIBRARY.make */
extern T0* T474c106(GE_context* ac, T0* a1, T0* a2);
/* ET_LIBRARY.make_from_system */
extern void T474f107(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.set_default_class_mapping */
extern void T474f112(GE_context* ac, T0* C);
/* ET_LIBRARY.set_wide_character_ref_class_mapping */
extern void T474f166(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_class_mapping */
extern void T474f167(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.set_wide_character_class_mapping */
extern void T474f165(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_string_class_mapping */
extern void T474f164(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_real_ref_class_mapping */
extern void T474f163(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_real_class_mapping */
extern void T474f162(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_natural_ref_class_mapping */
extern void T474f161(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_natural_class_mapping */
extern void T474f160(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_integer_ref_class_mapping */
extern void T474f159(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_integer_class_mapping */
extern void T474f158(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_double_ref_class_mapping */
extern void T474f157(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_double_class_mapping */
extern void T474f156(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_character_ref_class_mapping */
extern void T474f155(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_character_class_mapping */
extern void T474f154(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.tokens */
extern T0* T474f100(GE_context* ac, T0* C);
/* ET_LIBRARY.set_kernel_types */
extern void T474f111(GE_context* ac, T0* C);
/* ET_LIBRARY.set_wide_character_type */
extern void T474f153(GE_context* ac, T0* C);
/* ET_LIBRARY.set_typed_pointer_type */
extern void T474f152(GE_context* ac, T0* C);
/* ET_LIBRARY.set_type_type */
extern void T474f151(GE_context* ac, T0* C);
/* ET_LIBRARY.set_system_string_type */
extern void T474f150(GE_context* ac, T0* C);
/* ET_LIBRARY.set_system_object_type */
extern void T474f149(GE_context* ac, T0* C);
/* ET_LIBRARY.set_string_type */
extern void T474f148(GE_context* ac, T0* C);
/* ET_LIBRARY.set_string_32_type */
extern void T474f147(GE_context* ac, T0* C);
/* ET_LIBRARY.set_string_8_type */
extern void T474f146(GE_context* ac, T0* C);
/* ET_LIBRARY.set_special_type */
extern void T474f145(GE_context* ac, T0* C);
/* ET_LIBRARY.set_routine_type */
extern void T474f144(GE_context* ac, T0* C);
/* ET_LIBRARY.set_real_64_type */
extern void T474f143(GE_context* ac, T0* C);
/* ET_LIBRARY.set_real_32_type */
extern void T474f142(GE_context* ac, T0* C);
/* ET_LIBRARY.set_real_type */
extern void T474f141(GE_context* ac, T0* C);
/* ET_LIBRARY.set_procedure_type */
extern void T474f140(GE_context* ac, T0* C);
/* ET_LIBRARY.set_predicate_type */
extern void T474f139(GE_context* ac, T0* C);
/* ET_LIBRARY.set_pointer_type */
extern void T474f138(GE_context* ac, T0* C);
/* ET_LIBRARY.set_none_type */
extern void T474f137(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_64_type */
extern void T474f136(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_32_type */
extern void T474f135(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_16_type */
extern void T474f134(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_8_type */
extern void T474f133(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_type */
extern void T474f132(GE_context* ac, T0* C);
/* ET_LIBRARY.set_iterable_type */
extern void T474f131(GE_context* ac, T0* C);
/* ET_LIBRARY.set_ise_exception_manager_type */
extern void T474f130(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_64_type */
extern void T474f129(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_32_type */
extern void T474f128(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_16_type */
extern void T474f127(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_8_type */
extern void T474f126(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_type */
extern void T474f125(GE_context* ac, T0* C);
/* ET_LIBRARY.set_immutable_string_32_type */
extern void T474f124(GE_context* ac, T0* C);
/* ET_LIBRARY.set_function_type */
extern void T474f123(GE_context* ac, T0* C);
/* ET_LIBRARY.set_exception_manager_type */
extern void T474f122(GE_context* ac, T0* C);
/* ET_LIBRARY.set_exception_type */
extern void T474f121(GE_context* ac, T0* C);
/* ET_LIBRARY.set_double_type */
extern void T474f120(GE_context* ac, T0* C);
/* ET_LIBRARY.set_character_32_type */
extern void T474f119(GE_context* ac, T0* C);
/* ET_LIBRARY.set_character_8_type */
extern void T474f118(GE_context* ac, T0* C);
/* ET_LIBRARY.set_character_type */
extern void T474f117(GE_context* ac, T0* C);
/* ET_LIBRARY.set_boolean_type */
extern void T474f116(GE_context* ac, T0* C);
/* ET_LIBRARY.set_array_type */
extern void T474f115(GE_context* ac, T0* C);
/* ET_LIBRARY.set_tuple_type */
extern void T474f114(GE_context* ac, T0* C);
/* ET_LIBRARY.set_any_type */
extern void T474f113(GE_context* ac, T0* C);
/* ET_LIBRARY.make_adapted */
extern void T474f110(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.default_read_only_value */
extern T1 T474f91(GE_context* ac, T0* C);
/* ET_LIBRARY.set_unknown_kernel_types */
extern void T474f109(GE_context* ac, T0* C);
/* ET_LIBRARY.initialize */
extern void T474f108(GE_context* ac, T0* C);
/* ET_LIBRARY.initialize */
extern void T474f108p1(GE_context* ac, T0* C);
/* ET_LIBRARY.class_name_tester */
extern T0* T474f90(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.tokens */
extern T0* T197f11(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eaad_error */
extern void T64f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaad */
extern T0* T202c215(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaac_error */
extern void T64f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaac */
extern T0* T202c214(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaab_error */
extern void T64f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaab */
extern T0* T202c213(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaaa_error */
extern void T64f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaaa */
extern T0* T202c212(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.new_override */
extern T0* T196f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T196f32ot1(T0* a1, T0** a2);
/* ET_ECF_CLUSTER.set_condition */
extern void T1157f63(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_ecf_file_rules */
extern void T1157f62(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_ecf_subclusters */
extern void T1157f61(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacu_error */
extern void T64f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eacu */
extern T0* T202c211(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.set_read_only */
extern void T1157f60(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ERROR_HANDLER.report_each_error */
extern void T64f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_each */
extern T0* T202c210(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.set_recursive */
extern void T1157f59(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_override */
extern void T1157f58(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_AST_FACTORY.new_cluster */
extern T0* T177f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.make */
extern T0* T1157c57(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.set_use_obsolete_syntax */
extern void T1157f65(GE_context* ac, T0* C, T1 a1);
/* UT_VERSION.is_less_equal */
extern T1 T79f14(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.ecf_1_4_0 */
extern T0* T1157f33(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T1157f64(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T1158f9(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ERROR_HANDLER.report_eacg_error */
extern void T64f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacg */
extern T0* T202c209(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eace_error */
extern void T64f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eace */
extern T0* T202c208(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacf_error */
extern void T64f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacf */
extern T0* T202c207(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacd_error */
extern void T64f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacd */
extern T0* T202c206(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_clusters */
extern T0* T177f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.make */
extern T0* T1158c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].put_last */
extern void T1562f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.new_cluster */
extern T0* T196f30(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
extern T1 T196f30ot1(T0* a1, T0** a2);
/* ET_ECF_ERROR_HANDLER.report_eact_error */
extern void T64f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eact */
extern T0* T202c205(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaam_error */
extern void T64f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaam */
extern T0* T202c204(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaal_error */
extern void T64f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaal */
extern T0* T202c203(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaaj_error */
extern void T64f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaaj */
extern T0* T202c202(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaak_error */
extern void T64f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaak */
extern T0* T202c201(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaai_error */
extern void T64f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaai */
extern T0* T202c200(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_target */
extern T0* T177f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.make */
extern T0* T66c27(GE_context* ac, T0* a1);
/* ET_ECF_OPTIONS.make */
extern T0* T1171c7(GE_context* ac);
/* Creation of agent #1 in feature ET_ECF_OPTIONS.make */
extern T0* T1171f7ac1(GE_context* ac, T0* a1);
/* [attached] FUNCTION [[attached] TUPLE [STRING_8], INTEGER_32].set_rout_disp_final */
extern void T1487f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* KL_STRING_ROUTINES.case_insensitive_hash_code */
extern T6 T36f16(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_hash_function */
extern void T55f102(GE_context* ac, T0* C, T0* a1);
/* KL_AGENT_HASH_FUNCTION [STRING_8].make */
extern T0* T1485c3(GE_context* ac, T0* a1);
/* ET_ECF_OPTIONS.string_ */
extern T0* T1171f4(GE_context* ac, T0* C);
/* ET_ECF_OPTIONS.case_insensitive_string_equality_tester */
extern T0* T1171f3(GE_context* ac, T0* C);
/* ET_ECF_SETTINGS.make */
extern T0* T1170c7(GE_context* ac);
/* Creation of agent #1 in feature ET_ECF_SETTINGS.make */
extern T0* T1170f7ac1(GE_context* ac, T0* a1);
/* ET_ECF_SETTINGS.string_ */
extern T0* T1170f4(GE_context* ac, T0* C);
/* ET_ECF_SETTINGS.case_insensitive_string_equality_tester */
extern T0* T1170f3(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.set_secondary_variables */
extern void T68f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.execution_environment */
extern T0* T66f20(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.make */
extern T0* T68c8(GE_context* ac);
/* Creation of agent #1 in feature ET_ECF_VARIABLES.make */
extern T0* T68f8ac1(GE_context* ac, T0* a1);
/* ET_ECF_VARIABLES.string_ */
extern T0* T68f6(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.case_insensitive_string_equality_tester */
extern T0* T68f5(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.execution_environment */
extern T0* T68f4(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eabe_error */
extern void T64f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabe */
extern T0* T202c199(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabd_error */
extern void T64f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabd */
extern T0* T202c198(GE_context* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].item */
extern T0* T441f8(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].start */
extern void T441f11(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_start */
extern void T1198f14(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_off */
extern T1 T1198f6(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].off */
extern T1 T441f9(GE_context* ac, T0* C);
/* XM_ELEMENT.new_cursor */
extern T0* T156f9(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].new_cursor */
extern T0* T1198f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].make */
extern T0* T441c10(GE_context* ac, T0* a1);
/* ET_ECF_LIBRARY.set_ecf_version */
extern void T190f124(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.ecf_version */
extern T0* T196f25(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.matches */
extern T1 T322f188(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_ecf_namespace */
extern void T190f123(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_uuid */
extern void T190f122(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabn_error */
extern void T64f98(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabn */
extern T0* T202c277(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.attribute_name */
extern T0* T196f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabm_error */
extern void T64f97(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabm */
extern T0* T202c276(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].found_item */
extern T0* T179f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].found */
extern T1 T179f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].search */
extern void T179f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].search_position */
extern void T179f64(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabo_error */
extern void T64f96(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabo */
extern T0* T202c275(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_library */
extern T0* T177f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.make */
extern T0* T190c120(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.make_library */
extern void T190f128(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.make_from_system */
extern void T190f129(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.set_default_class_mapping */
extern void T190f134(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_wide_character_ref_class_mapping */
extern void T190f188(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_class_mapping */
extern void T190f189(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.set_wide_character_class_mapping */
extern void T190f187(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_string_class_mapping */
extern void T190f186(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_real_ref_class_mapping */
extern void T190f185(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_real_class_mapping */
extern void T190f184(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_natural_ref_class_mapping */
extern void T190f183(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_natural_class_mapping */
extern void T190f182(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_integer_ref_class_mapping */
extern void T190f181(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_integer_class_mapping */
extern void T190f180(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_double_ref_class_mapping */
extern void T190f179(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_double_class_mapping */
extern void T190f178(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_character_ref_class_mapping */
extern void T190f177(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_character_class_mapping */
extern void T190f176(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.tokens */
extern T0* T190f111(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_kernel_types */
extern void T190f133(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_wide_character_type */
extern void T190f175(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_typed_pointer_type */
extern void T190f174(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_type_type */
extern void T190f173(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_system_string_type */
extern void T190f172(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_system_object_type */
extern void T190f171(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_type */
extern void T190f170(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_32_type */
extern void T190f169(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_8_type */
extern void T190f168(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_special_type */
extern void T190f167(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_routine_type */
extern void T190f166(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_64_type */
extern void T190f165(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_32_type */
extern void T190f164(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_type */
extern void T190f163(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_procedure_type */
extern void T190f162(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_predicate_type */
extern void T190f161(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_pointer_type */
extern void T190f160(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_none_type */
extern void T190f159(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_64_type */
extern void T190f158(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_32_type */
extern void T190f157(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_16_type */
extern void T190f156(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_8_type */
extern void T190f155(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_type */
extern void T190f154(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_iterable_type */
extern void T190f153(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_ise_exception_manager_type */
extern void T190f152(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_64_type */
extern void T190f151(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_32_type */
extern void T190f150(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_16_type */
extern void T190f149(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_8_type */
extern void T190f148(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_type */
extern void T190f147(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_immutable_string_32_type */
extern void T190f146(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_function_type */
extern void T190f145(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_exception_manager_type */
extern void T190f144(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_exception_type */
extern void T190f143(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_double_type */
extern void T190f142(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_32_type */
extern void T190f141(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_8_type */
extern void T190f140(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_type */
extern void T190f139(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_boolean_type */
extern void T190f138(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_array_type */
extern void T190f137(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_tuple_type */
extern void T190f136(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_any_type */
extern void T190f135(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.make_adapted */
extern void T190f132(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.default_read_only_value */
extern T1 T190f102(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_unknown_kernel_types */
extern void T190f131(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.initialize */
extern void T190f130(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.initialize */
extern void T190f130p1(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.class_name_tester */
extern T0* T190f101(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.make_config */
extern void T190f127(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.attribute_by_name */
extern T0* T156f5(GE_context* ac, T0* C, T0* a1);
extern T1 T156f5ot1(T0* a1, T0** a2);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].go_after */
extern void T441f14(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_go_after */
extern void T1198f17(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_after */
extern void T441f16(GE_context* ac, T0* C);
/* XM_ELEMENT.attribute_same_name */
extern T1 T156f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_string */
extern T1 T156f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.string_equality_tester */
extern T0* T156f15(GE_context* ac, T0* C);
/* UC_STRING_EQUALITY_TESTER.default_create */
extern T0* T58c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.string_ */
extern T0* T196f16(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY_PARSER.windows_file_system */
extern T0* T196f15(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY_PARSER.file_system */
extern T0* T196f14(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY_PARSER.unix_file_system */
extern T0* T196f21(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY_PARSER.operating_system */
extern T0* T196f20(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eabv_error */
extern void T64f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabv */
extern T0* T202c191(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ADAPTED_LIBRARIES.library */
extern T0* T191f4(GE_context* ac, T0* C, T6 a1);
/* ET_ADAPTED_LIBRARIES.count */
extern T6 T191f3(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.select_target */
extern void T65f156(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.update_state */
extern void T66f38(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_STATE.set_dotnet */
extern void T188f11(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.set_scoop */
extern void T188f10(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.set_multithreaded */
extern void T188f9(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.set_finalize_mode */
extern void T188f8(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.make */
extern T0* T188c7(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_TARGETS.target */
extern T0* T189f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_TARGETS.count */
extern T6 T189f3(GE_context* ac, T0* C);
/* ET_ECF_TARGETS.is_empty */
extern T1 T189f4(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_system */
extern T0* T63f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.fill_system_config */
extern void T63f105(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T63f105ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.set_library_target */
extern void T65f164(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.attribute_name */
extern T0* T63f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.set_targets */
extern void T65f163(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_target */
extern T0* T63f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f27ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.add_option */
extern void T63f108(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_setting */
extern void T63f107(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_variable */
extern void T63f106(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.new_root */
extern T0* T63f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.attribute_value */
extern T0* T63f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.is_false */
extern T1 T63f54(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.is_true */
extern T1 T63f53(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_object */
extern T0* T63f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f45ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_condition */
extern T0* T63f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f57ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_version_condition */
extern T0* T63f85(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_custom_condition */
extern T0* T63f83(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_dynamic_runtime_condition */
extern T0* T63f81(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_dotnet_condition */
extern T0* T63f79(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_concurrency_condition */
extern T0* T63f77(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_multithreaded_condition */
extern T0* T63f75(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_build_condition */
extern T0* T63f73(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_platform_condition */
extern T0* T63f71(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_external_library */
extern T0* T63f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f43ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_external_include */
extern T0* T63f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f41ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_file_rule */
extern T0* T63f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f39ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assembly */
extern T0* T63f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f37ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.case_insensitive_string_equality_tester */
extern T0* T63f14(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_adapted_library */
extern T0* T63f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f35ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_override */
extern T0* T63f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f33ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_cluster */
extern T0* T63f31(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
extern T1 T63f31ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.set_ecf_version */
extern void T65f162(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.ecf_version */
extern T0* T63f25(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_ecf_namespace */
extern void T65f161(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_uuid */
extern void T65f160(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabl_error */
extern void T64f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabl */
extern T0* T202c194(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabk_error */
extern void T64f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabk */
extern T0* T202c193(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.string_ */
extern T0* T63f19(GE_context* ac, T0* C);
/* XM_TREE_CALLBACKS_PIPE.document */
extern T0* T159f5(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.is_correct */
extern T1 T166f140(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.parse_from_stream */
extern void T166f206(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.parse_with_events */
extern void T166f213(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_finish */
extern void T166f219(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.parse */
extern void T166f218(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_pop_last_value */
extern void T166f228(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.yy_push_error_value */
extern void T166f227(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_do_action */
extern void T166f226(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_notation_declaration */
extern void T166f256(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_notation_declaration */
extern void T583f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.set_public */
extern void T591f5(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T590f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T592f4(GE_context* ac, T0* C, T6 a1);
/* XM_DTD_EXTERNAL_ID.set_system */
extern void T591f4(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_external_id */
extern T0* T166f174(GE_context* ac, T0* C);
/* XM_DTD_EXTERNAL_ID.make */
extern T0* T591c3(GE_context* ac);
/* XM_EIFFEL_PARSER.when_pe_entity_declared */
extern void T166f255(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].force_new */
extern void T579f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_put */
extern void T579f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_put */
extern void T579f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].force */
extern void T1374f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].fill_with */
extern void T1370f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].extend */
extern void T1370f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_put */
extern void T579f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_put */
extern void T579f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_item */
extern T6 T579f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].hash_position */
extern T6 T579f27(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_item */
extern T6 T579f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].resize */
extern void T579f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_resize */
extern void T579f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].special_integer_ */
extern T0* T579f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_resize */
extern void T579f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_resize */
extern void T579f55(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1374f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1370f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_item */
extern T0* T579f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_resize */
extern void T579f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_modulus */
extern T6 T579f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_capacity */
extern T6 T579f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].unset_found_item */
extern void T579f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].has */
extern T1 T579f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].search_position */
extern void T579f40(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_def */
extern T0* T614c210(GE_context* ac, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_literal */
extern void T614f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.default_create */
extern T0* T581c3(GE_context* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.make_scanner */
extern void T614f213(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T614f215(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset_sent */
extern void T614f218(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T614f215p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T614f215p0(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T614f215p2(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T614f215p3(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.make_with_buffer */
extern void T614f214(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_load_input_buffer */
extern void T614f217(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_content */
extern void T614f220(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T614f216(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T614f216p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_build_tables */
extern void T614f219(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template */
extern T0* T614f54(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_fixed_array */
extern T0* T614f57(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_5 */
extern void T614f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_array_subcopy */
extern void T614f292(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PE_ENTITY_DEF.integer_array_ */
extern T0* T614f59(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_4 */
extern void T614f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_3 */
extern void T614f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_2 */
extern void T614f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_1 */
extern void T614f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_meta_template */
extern T0* T614f52(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template */
extern T0* T614f93(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_2 */
extern void T614f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_1 */
extern void T614f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template */
extern T0* T614f71(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_5 */
extern void T614f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_4 */
extern void T614f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_3 */
extern void T614f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_2 */
extern void T614f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_1 */
extern void T614f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template */
extern T0* T614f61(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_5 */
extern void T614f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_4 */
extern void T614f224(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_3 */
extern void T614f223(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_2 */
extern void T614f222(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_1 */
extern void T614f221(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template */
extern T0* T614f55(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_27 */
extern void T614f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_26 */
extern void T614f290(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_25 */
extern void T614f289(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_24 */
extern void T614f288(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_23 */
extern void T614f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_22 */
extern void T614f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_21 */
extern void T614f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_20 */
extern void T614f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_19 */
extern void T614f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_18 */
extern void T614f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_17 */
extern void T614f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_16 */
extern void T614f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_15 */
extern void T614f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_14 */
extern void T614f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_13 */
extern void T614f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_12 */
extern void T614f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_11 */
extern void T614f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_10 */
extern void T614f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_9 */
extern void T614f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_8 */
extern void T614f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_7 */
extern void T614f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_6 */
extern void T614f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_5 */
extern void T614f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_4 */
extern void T614f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_3 */
extern void T614f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_2 */
extern void T614f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_1 */
extern void T614f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template */
extern T0* T614f51(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_27 */
extern void T614f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_26 */
extern void T614f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_25 */
extern void T614f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_24 */
extern void T614f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_23 */
extern void T614f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_22 */
extern void T614f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_21 */
extern void T614f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_20 */
extern void T614f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_19 */
extern void T614f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_18 */
extern void T614f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_17 */
extern void T614f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_16 */
extern void T614f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_15 */
extern void T614f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_14 */
extern void T614f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_13 */
extern void T614f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_12 */
extern void T614f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_11 */
extern void T614f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_10 */
extern void T614f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_9 */
extern void T614f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_8 */
extern void T614f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_7 */
extern void T614f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_6 */
extern void T614f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_5 */
extern void T614f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_4 */
extern void T614f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_3 */
extern void T614f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_2 */
extern void T614f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_1 */
extern void T614f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.special_integer_ */
extern T0* T614f56(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.empty_buffer */
extern T0* T614f53(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.make */
extern T0* T1366c8(GE_context* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.make_external */
extern void T614f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_external_entity */
extern T0* T166f173(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.make_external */
extern T0* T611c209(GE_context* ac, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_scanner */
extern void T611f210(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T611f212(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T611f212p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T611f212p0(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T611f212p2(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.make_with_buffer */
extern void T611f211(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_load_input_buffer */
extern void T611f214(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_content */
extern void T611f216(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T611f213(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T611f213p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_build_tables */
extern void T611f215(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template */
extern T0* T611f52(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_fixed_array */
extern T0* T611f55(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_5 */
extern void T611f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_array_subcopy */
extern void T611f288(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_ENTITY_DEF.integer_array_ */
extern T0* T611f57(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_4 */
extern void T611f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_3 */
extern void T611f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_2 */
extern void T611f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_1 */
extern void T611f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_meta_template */
extern T0* T611f50(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template */
extern T0* T611f90(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template_2 */
extern void T611f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template_1 */
extern void T611f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template */
extern T0* T611f69(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_5 */
extern void T611f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_4 */
extern void T611f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_3 */
extern void T611f224(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_2 */
extern void T611f223(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_1 */
extern void T611f222(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template */
extern T0* T611f59(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_5 */
extern void T611f221(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_4 */
extern void T611f220(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_3 */
extern void T611f219(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_2 */
extern void T611f218(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_1 */
extern void T611f217(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template */
extern T0* T611f53(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_27 */
extern void T611f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_26 */
extern void T611f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_25 */
extern void T611f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_24 */
extern void T611f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_23 */
extern void T611f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_22 */
extern void T611f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_21 */
extern void T611f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_20 */
extern void T611f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_19 */
extern void T611f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_18 */
extern void T611f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_17 */
extern void T611f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_16 */
extern void T611f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_15 */
extern void T611f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_14 */
extern void T611f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_13 */
extern void T611f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_12 */
extern void T611f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_11 */
extern void T611f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_10 */
extern void T611f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_9 */
extern void T611f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_8 */
extern void T611f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_7 */
extern void T611f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_6 */
extern void T611f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_5 */
extern void T611f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_4 */
extern void T611f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_3 */
extern void T611f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_2 */
extern void T611f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_1 */
extern void T611f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template */
extern T0* T611f49(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_27 */
extern void T611f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_26 */
extern void T611f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_25 */
extern void T611f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_24 */
extern void T611f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_23 */
extern void T611f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_22 */
extern void T611f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_21 */
extern void T611f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_20 */
extern void T611f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_19 */
extern void T611f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_18 */
extern void T611f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_17 */
extern void T611f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_16 */
extern void T611f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_15 */
extern void T611f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_14 */
extern void T611f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_13 */
extern void T611f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_12 */
extern void T611f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_11 */
extern void T611f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_10 */
extern void T611f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_9 */
extern void T611f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_8 */
extern void T611f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_7 */
extern void T611f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_6 */
extern void T611f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_5 */
extern void T611f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_4 */
extern void T611f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_3 */
extern void T611f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_2 */
extern void T611f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_1 */
extern void T611f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.special_integer_ */
extern T0* T611f70(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.empty_buffer */
extern T0* T611f65(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_entity_declaration */
extern void T166f254(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_DTD_CALLBACKS_NULL.on_entity_declaration */
extern void T583f7(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_EIFFEL_PARSER.when_entity_declared */
extern void T166f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_literal_entity */
extern T0* T166f172(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_literal */
extern T0* T611c208(GE_context* ac, T0* a1, T0* a2);
/* XM_DTD_ATTRIBUTE_CONTENT.set_default_value */
extern void T600f26(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_fixed */
extern void T600f25(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_implied */
extern void T600f24(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_required */
extern void T600f23(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].aliased_resized_area */
extern T0* T602f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].aliased_resized_area */
extern T0* T604f4(GE_context* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING_8].force_last */
extern void T603f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [STRING_8].put_right */
extern void T1381f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [STRING_8].attach_left */
extern void T1381f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [STRING_8].make */
extern T0* T1381c4(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.new_string_bilinked_list */
extern T0* T166f169(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].set_equality_tester */
extern void T603f12(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.string_equality_tester */
extern T0* T166f184(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].make */
extern T0* T603c10(GE_context* ac);
/* DS_BILINKED_LIST [STRING_8].set_internal_cursor */
extern void T603f13(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].new_cursor */
extern T0* T603f6(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].make */
extern T0* T1380c8(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].force */
extern void T602f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].fill_with */
extern void T604f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].extend */
extern void T604f10(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration_list */
extern void T600f22(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration */
extern void T600f27(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.default_enumeration_list */
extern T0* T600f11(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].make */
extern T0* T146c17(GE_context* ac);
/* DS_LINKED_LIST [STRING_8].set_internal_cursor */
extern void T146f22(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].new_cursor */
extern T0* T146f11(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].make */
extern T0* T175c8(GE_context* ac, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_notation */
extern void T600f21(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_token */
extern void T600f20(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_entity */
extern void T600f19(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_list_type */
extern void T600f18(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id_ref */
extern void T600f17(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id */
extern void T600f16(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_data */
extern void T600f15(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content */
extern T0* T166f168(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T599f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T601f4(GE_context* ac, T0* C, T6 a1);
/* XM_DTD_ATTRIBUTE_CONTENT.make */
extern T0* T600c12(GE_context* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].force */
extern void T599f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].fill_with */
extern void T601f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].extend */
extern void T601f10(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.copy_default */
extern void T600f14(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_implied */
extern T1 T600f10(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_required */
extern T1 T600f9(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.has_default_value */
extern T1 T600f8(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_fixed */
extern T1 T600f7(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_name */
extern void T600f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].force */
extern void T596f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].fill_with */
extern void T598f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].extend */
extern void T598f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T596f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T598f4(GE_context* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].force_last */
extern void T597f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].put_right */
extern void T1379f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].attach_left */
extern void T1379f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1379c4(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content_list */
extern T0* T166f166(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T597c7(GE_context* ac);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].set_internal_cursor */
extern void T597f9(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].new_cursor */
extern T0* T597f5(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1378c8(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.on_attribute_declarations */
extern void T166f252(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].forth */
extern void T1378f10(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_forth */
extern void T597f11(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].add_traversing_cursor */
extern void T597f12(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set_next_cursor */
extern void T1378f12(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].remove_traversing_cursor */
extern void T597f13(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set */
extern void T1378f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* XM_EIFFEL_PARSER.on_attribute_declaration */
extern void T166f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_DTD_CALLBACKS_NULL.on_attribute_declaration */
extern void T583f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].item */
extern T0* T1378f6(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].start */
extern void T1378f9(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_start */
extern void T597f10(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_off */
extern T1 T597f6(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].off */
extern T1 T1378f7(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_more */
extern void T594f11(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_mixed */
extern T0* T594c10(GE_context* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_mixed */
extern void T594f21(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_choice */
extern void T594f19(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_list */
extern void T594f16(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_default */
extern void T594f22(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one */
extern void T594f12(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_sequence */
extern void T594f20(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1377c6(GE_context* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].set_internal_cursor */
extern void T1377f9(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].new_cursor */
extern T0* T1377f5(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1602c3(GE_context* ac, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_sequence */
extern T0* T594c9(GE_context* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_last */
extern void T1377f8(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].put_right */
extern void T1603f5(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].attach_left */
extern void T1603f6(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1603c4(GE_context* ac, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_choice */
extern T0* T594c8(GE_context* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_first */
extern void T1377f7(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.element_name */
extern T0* T166f161(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_name */
extern T0* T594c15(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.set_element_repetition */
extern void T166f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_one */
extern void T594f14(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one_or_more */
extern void T594f13(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_any */
extern T0* T594c7(GE_context* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_any */
extern void T594f18(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].force */
extern void T593f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].fill_with */
extern void T595f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].extend */
extern void T595f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T593f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T595f4(GE_context* ac, T0* C, T6 a1);
/* XM_DTD_ELEMENT_CONTENT.make_empty */
extern T0* T594c6(GE_context* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_empty */
extern void T594f17(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_element_declaration */
extern void T166f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_element_declaration */
extern void T583f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_attribute */
extern void T166f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].has */
extern T1 T588f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].search_position */
extern void T588f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].hash_position */
extern T6 T588f24(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.hash_code */
extern T6 T585f16(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.item */
extern T0* T585f17(GE_context* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING_8].item */
extern T0* T603f8(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].test */
extern T1 T1375f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_item */
extern T0* T588f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_item */
extern T0* T588f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_item */
extern T6 T588f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_equality_tester */
extern T0* T588f17(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_item */
extern T6 T588f25(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].force */
extern void T587f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].fill_with */
extern void T589f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].extend */
extern void T589f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T587f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T589f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].force_new */
extern void T588f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_put */
extern void T588f39(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_put */
extern void T588f38(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_put */
extern void T588f37(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].resize */
extern void T588f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_resize */
extern void T588f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].special_integer_ */
extern T0* T588f28(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_resize */
extern void T588f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_resize */
extern void T588f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_resize */
extern void T588f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_modulus */
extern T6 T588f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_capacity */
extern T6 T588f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].unset_found_item */
extern void T588f35(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_name_set */
extern T0* T166f154(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_equal */
extern T0* T588c31(GE_context* ac, T6 a1);
/* detachable KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T1375c2(GE_context* ac);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make */
extern void T588f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].set_internal_cursor */
extern void T588f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_cursor */
extern T0* T588f21(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME].make */
extern T0* T1376c4(GE_context* ac, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_slots */
extern void T588f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_clashes */
extern void T588f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_key_storage */
extern void T588f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_item_storage */
extern void T588f40(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].make */
extern T0* T584f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].make_empty */
extern T0* T586c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T584c3(GE_context* ac);
/* XM_EIFFEL_PARSER.on_start_tag */
extern void T166f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER.on_end_tag */
extern void T166f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER_NAME.local_part */
extern T0* T585f11(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].forth */
extern void T1380f10(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_forth */
extern void T603f15(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].add_traversing_cursor */
extern void T603f16(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T1380f12(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T603f17(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set */
extern void T1380f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [STRING_8].item */
extern T0* T1380f6(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].start */
extern void T1380f9(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_start */
extern void T603f14(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].cursor_off */
extern T1 T603f9(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].off */
extern T1 T1380f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.string_ */
extern T0* T585f10(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.last */
extern T0* T585f9(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].last */
extern T0* T603f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.ns_prefix */
extern T0* T585f8(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.is_namespace_name */
extern T1 T585f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern void T585f18(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern T0* T585c18(GE_context* ac);
/* XM_EIFFEL_PARSER_NAME.new_string_bilinked_list */
extern T0* T585f15(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.string_equality_tester */
extern T0* T585f14(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_start_tag_finish */
extern void T166f246(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.is_equal */
extern T1 T585f6(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.same_string */
extern T1 T585f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.when_external_dtd */
extern void T166f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern T0* T612c201(GE_context* ac);
/* XM_EIFFEL_SCANNER_DTD.set_start_condition */
extern void T612f208(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern void T612f201p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T612f210(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T612f210p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T612f210p0(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_with_buffer */
extern void T612f209(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_load_input_buffer */
extern void T612f220(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_content */
extern void T612f221(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T612f219(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T612f219p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_build_tables */
extern void T612f224(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template */
extern T0* T612f195(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_fixed_array */
extern T0* T612f198(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_5 */
extern void T612f295(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_array_subcopy */
extern void T612f296(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER_DTD.integer_array_ */
extern T0* T612f200(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_4 */
extern void T612f294(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_3 */
extern void T612f293(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_2 */
extern void T612f292(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_1 */
extern void T612f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_meta_template */
extern T0* T612f194(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template */
extern T0* T612f193(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template_2 */
extern void T612f290(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template_1 */
extern void T612f289(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template */
extern T0* T612f192(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_5 */
extern void T612f288(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_4 */
extern void T612f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_3 */
extern void T612f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_2 */
extern void T612f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_1 */
extern void T612f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template */
extern T0* T612f191(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_5 */
extern void T612f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_4 */
extern void T612f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_3 */
extern void T612f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_2 */
extern void T612f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_1 */
extern void T612f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template */
extern T0* T612f190(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_27 */
extern void T612f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_26 */
extern void T612f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_25 */
extern void T612f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_24 */
extern void T612f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_23 */
extern void T612f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_22 */
extern void T612f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_21 */
extern void T612f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_20 */
extern void T612f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_19 */
extern void T612f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_18 */
extern void T612f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_17 */
extern void T612f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_16 */
extern void T612f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_15 */
extern void T612f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_14 */
extern void T612f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_13 */
extern void T612f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_12 */
extern void T612f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_11 */
extern void T612f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_10 */
extern void T612f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_9 */
extern void T612f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_8 */
extern void T612f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_7 */
extern void T612f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_6 */
extern void T612f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_5 */
extern void T612f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_4 */
extern void T612f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_3 */
extern void T612f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_2 */
extern void T612f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_1 */
extern void T612f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template */
extern T0* T612f189(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_27 */
extern void T612f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_26 */
extern void T612f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_25 */
extern void T612f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_24 */
extern void T612f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_23 */
extern void T612f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_22 */
extern void T612f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_21 */
extern void T612f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_20 */
extern void T612f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_19 */
extern void T612f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_18 */
extern void T612f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_17 */
extern void T612f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_16 */
extern void T612f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_15 */
extern void T612f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_14 */
extern void T612f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_13 */
extern void T612f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_12 */
extern void T612f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_11 */
extern void T612f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_10 */
extern void T612f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_9 */
extern void T612f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_8 */
extern void T612f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_7 */
extern void T612f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_6 */
extern void T612f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_5 */
extern void T612f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_4 */
extern void T612f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_3 */
extern void T612f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_2 */
extern void T612f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_1 */
extern void T612f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.special_integer_ */
extern T0* T612f62(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.empty_buffer */
extern T0* T612f50(GE_context* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].force */
extern void T578f8(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.null_resolver */
extern T0* T166f94(GE_context* ac, T0* C);
/* XM_NULL_EXTERNAL_RESOLVER.last_error */
extern T0* T581f1(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.resolve_external_id */
extern void T166f261(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.resolve */
extern void T581f5(GE_context* ac, T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_public */
extern void T581f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].force */
extern void T590f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].fill_with */
extern void T592f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].extend */
extern void T592f10(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_end */
extern void T166f244(GE_context* ac, T0* C);
/* XM_DTD_CALLBACKS_NULL.on_dtd_end */
extern void T583f5(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_doctype */
extern void T166f243(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.on_doctype */
extern void T583f4(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_DECLARATION.set_encoding */
extern void T607f9(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_DECLARATION.set_stand_alone */
extern void T607f8(GE_context* ac, T0* C, T1 a1);
/* XM_EIFFEL_DECLARATION.set_version */
extern void T607f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].force */
extern void T606f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].fill_with */
extern void T608f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].extend */
extern void T608f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T606f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T608f4(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_DECLARATION.make */
extern T0* T607c7(GE_context* ac);
/* XM_EIFFEL_DECLARATION.process */
extern void T607f10(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_xml_declaration */
extern void T166f287(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_PARSER.apply_encoding */
extern void T166f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_content */
extern void T166f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_processing_instruction */
extern void T166f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_dtd_processing_instruction */
extern void T583f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_processing_instruction */
extern void T166f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_dtd_comment */
extern void T166f238(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_CALLBACKS_NULL.on_dtd_comment */
extern void T583f2(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_comment */
extern void T166f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.entity_referenced_in_entity_value */
extern T0* T166f144(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.defined_entity_referenced */
extern T0* T166f196(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.external_entity_to_string */
extern T0* T166f202(GE_context* ac, T0* C, T0* a1);
/* STRING_8.remove */
extern void T17f74(GE_context* ac, T0* C, T6 a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_finish */
extern void T581f6(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_string */
extern void T1207f30(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.string_ */
extern T0* T1207f8(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.platform */
extern T0* T233f2(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.integer_ */
extern T0* T166f203(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.make_from_stream */
extern T0* T1207c29(GE_context* ac, T0* a1);
/* DS_LINKED_QUEUE [CHARACTER_8].make */
extern T0* T1577c5(GE_context* ac);
/* XM_NULL_EXTERNAL_RESOLVER.last_stream */
extern T0* T581f2(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item */
extern T0* T579f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_item */
extern T0* T579f35(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.string_ */
extern T0* T166f89(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.force_error */
extern void T166f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.report_error */
extern void T166f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_error */
extern void T166f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.last_error_extended_description */
extern T0* T166f92(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.safe_error_component */
extern T0* T166f87(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_safe_error_character */
extern T1 T166f97(GE_context* ac, T0* C, T2 a1);
/* XM_EIFFEL_PARSER.setup_error_state */
extern void T166f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.onstring_utf8 */
extern T0* T166f133(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.maximum_item_code */
extern T6 T166f191(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_latin1 */
extern T1 T166f190(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_from_utf8 */
extern T0* T166f186(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.make_from_utf8 */
extern T0* T1206c67(GE_context* ac, T0* a1);
/* UC_UTF8_STRING.append_utf8 */
extern void T1206f85(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_ROUTINES.valid_utf8 */
extern T1 T1205f1(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_ROUTINES.is_encoded_next_byte */
extern T1 T1205f10(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.is_encoded_second_byte */
extern T1 T1205f5(GE_context* ac, T0* C, T2 a1, T2 a2);
/* UC_UTF8_ROUTINES.is_encoded_first_byte */
extern T1 T1205f2(GE_context* ac, T0* C, T2 a1);
/* XM_EIFFEL_PARSER.utf8 */
extern T0* T166f189(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.is_string_mode_ascii */
extern T1 T166f187(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.onstring_ascii */
extern T0* T166f131(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_unicode */
extern T1 T166f185(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string */
extern T0* T166f142(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_string */
extern T0* T166f195(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_uc */
extern T0* T166f194(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_empty */
extern T0* T166f201(GE_context* ac, T0* C);
/* UC_UTF8_STRING.make_empty */
extern T0* T1206c71(GE_context* ac);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].force */
extern void T584f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].fill_with */
extern void T586f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].extend */
extern void T586f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T584f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T586f4(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.namespace_force_last */
extern void T166f235(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER_NAME.force_last */
extern void T585f19(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.can_force_last */
extern T1 T585f12(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_namespace_name */
extern T0* T166f141(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_namespaces */
extern T0* T585c20(GE_context* ac);
/* XM_EIFFEL_PARSER.yy_push_last_value */
extern void T166f225(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.accept */
extern void T166f224(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_do_error_action */
extern void T166f222(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.report_eof_expected_error */
extern void T166f233(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.read_token */
extern void T166f221(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.process_attribute_entity */
extern void T166f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity_scanner */
extern void T166f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_start_condition */
extern void T611f290(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_start_condition */
extern void T614f294(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.apply_input_buffer */
extern void T611f289(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.make */
extern T0* T1217c9(GE_context* ac, T0* a1);
/* UC_UTF8_ROUTINES.to_utf8 */
extern T0* T1205f32(GE_context* ac, T0* C, T0* a1);
extern T1 T1205f32ot1(T0* a1, T0** a2);
/* UC_UTF8_ROUTINES.append_code_to_utf8 */
extern void T1205f37(GE_context* ac, T0* C, T0* a1, T6 a2);
/* UC_UTF8_ROUTINES.integer_ */
extern T0* T1205f29(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.utf8 */
extern T0* T611f68(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.fatal_error */
extern void T611f297(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.apply_input_buffer */
extern void T614f293(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.utf8 */
extern T0* T614f70(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.fatal_error */
extern void T614f301(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_literal */
extern T1 T611f63(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.is_external */
extern T1 T611f66(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_literal */
extern T1 T614f65(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_external */
extern T1 T614f68(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.process_entity */
extern void T166f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_pe_entity */
extern void T166f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.special_integer_ */
extern T0* T166f124(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_init_value_stacks */
extern void T166f220(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_clear_all */
extern void T166f229(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.clear_all */
extern void T166f257(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.clear_stacks */
extern void T166f263(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T166f264(GE_context* ac, T0* C);
/* SPECIAL [XM_EIFFEL_DECLARATION].keep_head */
extern void T608f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].set_count */
extern void T608f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].keep_head */
extern void T604f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].set_count */
extern void T604f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].keep_head */
extern void T601f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].set_count */
extern void T601f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].keep_head */
extern void T598f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].set_count */
extern void T598f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].keep_head */
extern void T595f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].set_count */
extern void T595f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].keep_head */
extern void T592f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].set_count */
extern void T592f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].keep_head */
extern void T589f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].set_count */
extern void T589f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].keep_head */
extern void T586f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].set_count */
extern void T586f9(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.abort */
extern void T166f223(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_start */
extern void T166f217(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.reset_error_state */
extern void T166f216(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.reset */
extern void T166f212(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].wipe_out */
extern void T579f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_wipe_out */
extern void T579f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_wipe_out */
extern void T579f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_wipe_out */
extern void T579f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_wipe_out */
extern void T579f44(GE_context* ac, T0* C);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].keep_head */
extern void T1370f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].set_count */
extern void T1370f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].move_all_cursors_after */
extern void T579f42(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_next_cursor */
extern void T1373f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_after */
extern void T1373f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.make_scanner */
extern void T166f210(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.make_scanner */
extern T0* T574c199(GE_context* ac);
/* XM_EIFFEL_SCANNER.reset */
extern void T574f207(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T574f207p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T574f207p0(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.make_with_buffer */
extern void T574f206(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_load_input_buffer */
extern void T574f215(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_set_content */
extern void T574f216(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T574f214(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T574f214p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_build_tables */
extern void T574f222(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template */
extern T0* T574f193(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_fixed_array */
extern T0* T574f196(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_5 */
extern void T574f293(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_array_subcopy */
extern void T574f294(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER.integer_array_ */
extern T0* T574f198(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template_4 */
extern void T574f292(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_3 */
extern void T574f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_2 */
extern void T574f290(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_1 */
extern void T574f289(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_meta_template */
extern T0* T574f192(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template */
extern T0* T574f191(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template_2 */
extern void T574f288(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_ec_template_1 */
extern void T574f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template */
extern T0* T574f190(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_def_template_5 */
extern void T574f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_4 */
extern void T574f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_3 */
extern void T574f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_2 */
extern void T574f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_1 */
extern void T574f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template */
extern T0* T574f189(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_base_template_5 */
extern void T574f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_4 */
extern void T574f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_3 */
extern void T574f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_2 */
extern void T574f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_1 */
extern void T574f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template */
extern T0* T574f188(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_27 */
extern void T574f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_26 */
extern void T574f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_25 */
extern void T574f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_24 */
extern void T574f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_23 */
extern void T574f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_22 */
extern void T574f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_21 */
extern void T574f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_20 */
extern void T574f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_19 */
extern void T574f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_18 */
extern void T574f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_17 */
extern void T574f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_16 */
extern void T574f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_15 */
extern void T574f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_14 */
extern void T574f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_13 */
extern void T574f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_12 */
extern void T574f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_11 */
extern void T574f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_10 */
extern void T574f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_9 */
extern void T574f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_8 */
extern void T574f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_7 */
extern void T574f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_6 */
extern void T574f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_5 */
extern void T574f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_4 */
extern void T574f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_3 */
extern void T574f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_2 */
extern void T574f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_1 */
extern void T574f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template */
extern T0* T574f187(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_nxt_template_27 */
extern void T574f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_26 */
extern void T574f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_25 */
extern void T574f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_24 */
extern void T574f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_23 */
extern void T574f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_22 */
extern void T574f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_21 */
extern void T574f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_20 */
extern void T574f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_19 */
extern void T574f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_18 */
extern void T574f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_17 */
extern void T574f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_16 */
extern void T574f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_15 */
extern void T574f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_14 */
extern void T574f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_13 */
extern void T574f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_12 */
extern void T574f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_11 */
extern void T574f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_10 */
extern void T574f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_9 */
extern void T574f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_8 */
extern void T574f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_7 */
extern void T574f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_6 */
extern void T574f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_5 */
extern void T574f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_4 */
extern void T574f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_3 */
extern void T574f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_2 */
extern void T574f224(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_1 */
extern void T574f223(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.special_integer_ */
extern T0* T574f51(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.empty_buffer */
extern T0* T574f70(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.pathname_from_file_system */
extern T0* T122f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.any_ */
extern T0* T122f17(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname_from_file_system */
extern T0* T121f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.any_ */
extern T0* T121f19(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.windows_file_system */
extern T0* T63f16(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.file_system */
extern T0* T63f12(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.unix_file_system */
extern T0* T63f22(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.set_finalize_mode */
extern void T63f98(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM_PARSER.make */
extern T0* T63c97(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T63f100(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.create_library_parser */
extern void T63f102(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.set_parsed_dotnet_assemblies */
extern void T196f98(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.set_parsed_libraries */
extern void T196f97(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.make_with_factory */
extern T0* T196c96(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.make_with_factory */
extern void T196f96p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.create_library_parser */
extern void T196f100(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.string_equality_tester */
extern T0* T196f13(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY_PARSER.make_with_factory */
extern void T196f96p0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.ise_latest */
extern T0* T196f12(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.enable_position_table */
extern void T161f10(GE_context* ac, T0* C, T0* a1);
/* XM_POSITION_TABLE.make */
extern T0* T157c4(GE_context* ac);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T1203c7(GE_context* ac);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].set_internal_cursor */
extern void T1203f8(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.set_callbacks */
extern void T166f208(GE_context* ac, T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.make */
extern T0* T159c10(GE_context* ac);
/* XM_TREE_CALLBACKS_PIPE.callbacks_pipe */
extern T0* T159f9(GE_context* ac, T0* C, T0* a1);
/* ARRAY [XM_CALLBACKS_FILTER].item */
extern T0* T562f4(GE_context* ac, T0* C, T6 a1);
/* XM_CALLBACKS_TO_TREE_FILTER.make_null */
extern T0* T161c9(GE_context* ac);
/* XM_CALLBACKS_TO_TREE_FILTER.make_next */
extern void T161f11(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.initialize */
extern void T161f12(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_equal */
extern T0* T565c31(GE_context* ac, T6 a1);
/* detachable KL_EQUALITY_TESTER [XM_NAMESPACE].default_create */
extern T0* T1362c2(GE_context* ac);
/* DS_HASH_SET [XM_NAMESPACE].make */
extern void T565f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].set_internal_cursor */
extern void T565f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].new_cursor */
extern T0* T565f24(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [XM_NAMESPACE].make */
extern T0* T1363c4(GE_context* ac, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].unset_found_item */
extern void T565f37(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_slots */
extern void T565f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_modulus */
extern T6 T565f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_clashes */
extern void T565f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_key_storage */
extern void T565f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_item_storage */
extern void T565f33(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].make */
extern T0* T1364f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_NAMESPACE].make_empty */
extern T0* T1365c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].default_create */
extern T0* T1364c3(GE_context* ac);
/* XM_DOCUMENT.make */
extern T0* T155c10(GE_context* ac);
/* XM_DOCUMENT.make_with_root_named */
extern void T155f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DOCUMENT.force_last */
extern void T155f12(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].force_last */
extern void T1196f12(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].force_last */
extern void T1196f12p1(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_DOCUMENT_NODE].put_right */
extern void T1572f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_DOCUMENT_NODE].make */
extern T0* T1572c3(GE_context* ac, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].before_addition */
extern void T1196f14(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.before_addition */
extern void T155f13(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.equality_delete */
extern void T156f28(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].remove */
extern void T441f13(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_at_cursor */
extern void T1198f16(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_all_cursors */
extern void T1198f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_current_cell */
extern void T441f18(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_ELEMENT_NODE].put */
extern void T1704f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_ELEMENT_NODE].put_right */
extern void T1704f4(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_last_cell */
extern void T1198f23(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_ELEMENT_NODE].forget_right */
extern void T1704f5(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_last */
extern void T1198f22(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_last_cursors_after */
extern void T1198f27(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].wipe_out */
extern void T1198f25(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_all_cursors_after */
extern void T1198f28(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].is_last */
extern T1 T441f7(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_is_last */
extern T1 T1198f10(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_first */
extern void T1198f21(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_first_cell */
extern void T1198f26(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].is_first */
extern T1 T441f6(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_is_first */
extern T1 T1198f9(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.equality_delete */
extern void T155f14(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].forth */
extern void T1491f13(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_forth */
extern void T1196f17(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].add_traversing_cursor */
extern void T1196f18(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_next_cursor */
extern void T1491f16(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_traversing_cursor */
extern void T1196f23(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set */
extern void T1491f15(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].remove */
extern void T1491f12(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_at_cursor */
extern void T1196f16(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_all_cursors */
extern void T1196f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_current_cell */
extern void T1491f17(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_DOCUMENT_NODE].put */
extern void T1572f6(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_last_cell */
extern void T1196f21(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_DOCUMENT_NODE].forget_right */
extern void T1572f5(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_last */
extern void T1196f20(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_last_cursors_after */
extern void T1196f26(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_after */
extern void T1491f18(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].wipe_out */
extern void T1196f24(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_all_cursors_after */
extern void T1196f27(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].is_last */
extern T1 T1491f7(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_is_last */
extern T1 T1196f10(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_first */
extern void T1196f19(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_first_cell */
extern void T1196f25(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].is_first */
extern T1 T1491f6(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_is_first */
extern T1 T1196f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].item */
extern T0* T1491f8(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].start */
extern void T1491f11(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_start */
extern void T1196f15(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_off */
extern T1 T1196f8(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].off */
extern T1 T1491f9(GE_context* ac, T0* C);
/* XM_DOCUMENT.new_cursor */
extern T0* T155f7(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].new_cursor */
extern T0* T1196f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].make */
extern T0* T1491c10(GE_context* ac, T0* a1);
/* XM_DOCUMENT.last */
extern T0* T155f6(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].last */
extern T0* T1196f7(GE_context* ac, T0* C);
/* XM_DOCUMENT.is_empty */
extern T1 T155f5(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].is_empty */
extern T1 T1196f6(GE_context* ac, T0* C);
/* XM_ELEMENT.make */
extern T0* T156c22(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].make */
extern T0* T1198c11(GE_context* ac);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_internal_cursor */
extern void T1198f12(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].make */
extern T0* T1196c11(GE_context* ac);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_internal_cursor */
extern void T1196f13(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.default_ns */
extern T0* T155f3(GE_context* ac, T0* C);
/* XM_NAMESPACE.make_default */
extern T0* T529c7(GE_context* ac);
/* XM_NAMESPACE.make */
extern void T529f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE.make */
extern T0* T529c8(GE_context* ac, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.null_callbacks */
extern T0* T161f7(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.make */
extern T0* T564c1(GE_context* ac);
/* XM_TREE_CALLBACKS_PIPE.new_stop_on_error */
extern T0* T159f7(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.make_null */
extern T0* T160c5(GE_context* ac);
/* XM_STOP_ON_ERROR_FILTER.make_next */
extern void T160f6(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.initialize */
extern void T160f7(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.null_callbacks */
extern T0* T160f4(GE_context* ac, T0* C);
/* XM_TREE_CALLBACKS_PIPE.new_namespace_resolver */
extern T0* T159f6(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.make_null */
extern T0* T561c26(GE_context* ac);
/* XM_NAMESPACE_RESOLVER.make_next */
extern void T561f37(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.initialize */
extern void T561f38(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_make */
extern void T561f42(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.new_string_queue */
extern T0* T561f20(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].make */
extern T0* T1361c6(GE_context* ac);
/* XM_NAMESPACE_RESOLVER_CONTEXT.make */
extern T0* T1359c10(GE_context* ac);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1600c8(GE_context* ac);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].set_internal_cursor */
extern void T1600f11(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].new_cursor */
extern T0* T1600f6(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1601c8(GE_context* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER.null_callbacks */
extern T0* T561f13(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.set_string_mode_mixed */
extern void T166f207(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.make */
extern T0* T166c205(GE_context* ac);
/* XM_EIFFEL_PARSER.new_entities_table */
extern T0* T166f91(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].set_key_equality_tester */
extern void T579f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map_default */
extern T0* T579c36(GE_context* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map */
extern void T579f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_with_equality_testers */
extern void T579f53(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_sparse_container */
extern void T579f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].set_internal_cursor */
extern void T579f63(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_cursor */
extern T0* T579f34(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].make */
extern T0* T1373c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_slots */
extern void T579f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_clashes */
extern void T579f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_key_storage */
extern void T579f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_item_storage */
extern void T579f59(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].make */
extern T0* T1374f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].make_empty */
extern T0* T1370c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].default_create */
extern T0* T1374c3(GE_context* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].default_capacity */
extern T6 T579f30(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.make_parser */
extern void T166f211(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_build_parser_tables */
extern void T166f215(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yycheck_template */
extern T0* T166f88(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yyfixed_array */
extern T0* T166f183(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_4 */
extern void T166f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyarray_subcopy */
extern void T166f286(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PARSER.integer_array_ */
extern T0* T166f204(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yycheck_template_3 */
extern void T166f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_2 */
extern void T166f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_1 */
extern void T166f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template */
extern T0* T166f86(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytable_template_4 */
extern void T166f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_3 */
extern void T166f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_2 */
extern void T166f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_1 */
extern void T166f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypgoto_template */
extern T0* T166f84(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yypact_template */
extern T0* T166f129(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yypact_template_3 */
extern void T166f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypact_template_2 */
extern void T166f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypact_template_1 */
extern void T166f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefgoto_template */
extern T0* T166f127(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yydefact_template */
extern T0* T166f125(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yydefact_template_3 */
extern void T166f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefact_template_2 */
extern void T166f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefact_template_1 */
extern void T166f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes2_template */
extern T0* T166f123(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template */
extern T0* T166f121(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template_3 */
extern void T166f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes1_template_2 */
extern void T166f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes1_template_1 */
extern void T166f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyr1_template */
extern T0* T166f119(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yyr1_template_2 */
extern void T166f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyr1_template_1 */
extern void T166f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytranslate_template */
extern T0* T166f106(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytranslate_template_2 */
extern void T166f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytranslate_template_1 */
extern void T166f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yy_create_value_stacks */
extern void T166f214(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].make */
extern T0* T606f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].make_empty */
extern T0* T608c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].default_create */
extern T0* T606c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].make */
extern T0* T602f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].make_empty */
extern T0* T604c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].default_create */
extern T0* T602c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T599f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].make_empty */
extern T0* T601c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].default_create */
extern T0* T599c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T596f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make_empty */
extern T0* T598c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].default_create */
extern T0* T596c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T593f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].make_empty */
extern T0* T595c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].default_create */
extern T0* T593c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].make */
extern T0* T590f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].make_empty */
extern T0* T592c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].default_create */
extern T0* T590c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make */
extern T0* T587f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make_empty */
extern T0* T589c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].default_create */
extern T0* T587c3(GE_context* ac);
/* XM_EIFFEL_PARSER.initialize */
extern void T166f209(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.null_dtd_callbacks */
extern T0* T166f112(GE_context* ac, T0* C);
/* XM_DTD_CALLBACKS_NULL.make */
extern T0* T583c1(GE_context* ac);
/* XM_EIFFEL_PARSER.null_callbacks */
extern T0* T166f104(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_key_equality_tester */
extern void T180f36(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.string_equality_tester */
extern T0* T63f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_map */
extern T0* T180c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_with_equality_testers */
extern void T180f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_sparse_container */
extern void T180f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_internal_cursor */
extern void T180f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_cursor */
extern T0* T180f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make */
extern T0* T625c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_slots */
extern void T180f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_clashes */
extern void T180f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_key_storage */
extern void T180f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_item_storage */
extern void T180f57(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].make */
extern T0* T626f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].make_empty */
extern T0* T622c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].default_create */
extern T0* T626c3(GE_context* ac);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].set_key_equality_tester */
extern void T179f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_map */
extern T0* T179c40(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_with_equality_testers */
extern void T179f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_sparse_container */
extern void T179f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].set_internal_cursor */
extern void T179f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_cursor */
extern T0* T179f27(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].make */
extern T0* T617c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_slots */
extern void T179f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_clashes */
extern void T179f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_key_storage */
extern void T179f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_item_storage */
extern void T179f57(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].make */
extern T0* T621f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_LIBRARY].make_empty */
extern T0* T618c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].default_create */
extern T0* T621c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T63f100p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ise_latest */
extern T0* T63f17(GE_context* ac, T0* C);
/* ET_ECF_AST_FACTORY.make */
extern T0* T177c31(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.make_standard */
extern T0* T64c8(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.std */
extern T0* T64f6(GE_context* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.set_variable_value */
extern void T67f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.put */
extern void T203f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.eif_putenv */
extern T6 T203f7(GE_context* ac, T0* C, T14 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].force */
extern void T632f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* SPECIAL [NATIVE_STRING].force */
extern void T1394f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [NATIVE_STRING].extend */
extern void T1394f7(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].position */
extern T6 T632f22(GE_context* ac, T0* C);
/* SPECIAL [IMMUTABLE_STRING_32].force */
extern void T1323f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [BOOLEAN].force */
extern void T125f7(GE_context* ac, T0* C, T1 a1, T6 a2);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].deleted_position */
extern T6 T632f21(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].add_space */
extern void T632f37(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].accommodate */
extern void T632f38(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_indexes_map */
extern void T632f42(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_deleted_marks */
extern void T632f41(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_keys */
extern void T632f40(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_content */
extern void T632f39(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].put */
extern void T632f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_conflict */
extern void T632f45(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].found */
extern T1 T632f31(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].occupied */
extern T1 T632f29(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].empty_duplicate */
extern T0* T632f28(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].compare_objects */
extern void T632f44(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].make */
extern T0* T632c34(GE_context* ac, T6 a1);
/* SPECIAL [NATIVE_STRING].make_empty */
extern T0* T1394c4(GE_context* ac, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].soon_full */
extern T1 T632f20(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].not_found */
extern T1 T632f19(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].internal_search */
extern void T632f36(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].same_keys */
extern T1 T632f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* IMMUTABLE_STRING_32.is_equal */
extern T1 T19f8(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_32].same_items */
extern T1 T16f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].hash_code_of */
extern T6 T632f25(GE_context* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.hash_code */
extern T6 T19f7(GE_context* ac, T0* C);
/* IMMUTABLE_STRING_32.item */
extern T3 T19f10(GE_context* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.make_from_string_general */
extern T0* T19c11(GE_context* ac, T0* a1);
/* UC_UTF8_STRING.to_string_32 */
extern T0* T1206f19(GE_context* ac, T0* C);
/* STRING_8.to_string_32 */
extern T0* T17f35(GE_context* ac, T0* C);
/* IMMUTABLE_STRING_32.make_from_string_32 */
extern void T19f14(GE_context* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.make_from_string_8 */
extern void T19f13(GE_context* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.make_from_area_and_bounds */
extern void T19f15(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* EXECUTION_ENVIRONMENT.environ */
extern T0* T203f5(GE_context* ac, T0* C);
/* GEC.execution_environment */
extern T0* T24f21(GE_context* ac, T0* C);
/* GEC.parse_xace_file */
extern void T24f41(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.has_error */
extern T1 T54f5(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.parse_file */
extern void T53f258(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_parser_error */
extern void T54f9(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error */
extern void T54f10(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T54f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T54f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.message */
extern T0* T54f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_VALIDATOR.validate_system_doc */
extern void T162f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_root_element_error */
extern void T54f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.make */
extern T0* T1137c8(GE_context* ac, T0* a1, T0* a2);
/* XM_DEFAULT_POSITION.out */
extern T0* T575f6(GE_context* ac, T0* C);
/* XM_DEFAULT_POSITION.string_ */
extern T0* T575f5(GE_context* ac, T0* C);
/* XM_ELEMENT.position */
extern T0* T156f7(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.null_position */
extern T0* T156f11(GE_context* ac, T0* C);
/* XM_DEFAULT_POSITION.make */
extern T0* T575c7(GE_context* ac, T0* a1, T6 a2, T6 a3, T6 a4);
/* ET_XACE_VALIDATOR.validate_system */
extern void T162f35(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T162f35ot1(T0* a1, T0** a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_element_error */
extern void T54f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.make */
extern T0* T1139c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.validate_external */
extern void T162f38(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T162f38ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_export */
extern void T162f42(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T162f42ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_feature */
extern T0* T162f29(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_class */
extern T0* T162f27(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_export */
extern T0* T162f26(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_link_library */
extern T0* T162f25(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_location */
extern T0* T162f13(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_include_dir */
extern T0* T162f24(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_element_obsoleted_by_element_warning */
extern void T54f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning */
extern void T54f18(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning_message */
extern void T54f19(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T452c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_external */
extern T0* T162f11(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_option */
extern void T162f37(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T162f37ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_optimize */
extern T0* T162f23(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_debug */
extern T0* T162f22(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_check */
extern T0* T162f21(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_loop */
extern T0* T162f20(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_invariant */
extern T0* T162f19(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_ensure */
extern T0* T162f18(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_require */
extern T0* T162f17(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_value */
extern T0* T162f16(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_option_warning */
extern void T54f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.make */
extern T0* T1143c9(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.uc_name */
extern T0* T1143f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].has */
extern T1 T444f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search_position */
extern void T444f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].hash_position */
extern T6 T444f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_item */
extern T0* T444f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_item */
extern T6 T444f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_item */
extern T6 T444f27(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTION_NAMES.option_codes */
extern T0* T433f2(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].put_new */
extern void T444f40(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_put */
extern void T444f47(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_put */
extern void T444f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_put */
extern void T444f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_put */
extern void T444f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].unset_found_item */
extern void T444f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_key_equality_tester */
extern void T444f39(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTION_NAMES.string_equality_tester */
extern T0* T433f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_map */
extern T0* T444c37(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_with_equality_testers */
extern void T444f42(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_sparse_container */
extern void T444f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_internal_cursor */
extern void T444f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_cursor */
extern T0* T444f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8].make */
extern T0* T1331c4(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_slots */
extern void T444f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_modulus */
extern T6 T444f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_clashes */
extern void T444f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_key_storage */
extern void T444f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_item_storage */
extern void T444f49(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_VALIDATOR.options */
extern T0* T162f15(GE_context* ac, T0* C);
/* ET_XACE_OPTION_NAMES.default_create */
extern T0* T433c228(GE_context* ac);
/* ET_XACE_VALIDATOR.uc_option */
extern T0* T162f10(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_mount */
extern void T162f36(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T162f36ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_exclude */
extern void T162f41(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_exclude_element_warning */
extern void T54f25(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.make */
extern T0* T1142c8(GE_context* ac, T0* a1);
/* ET_XACE_VALIDATOR.uc_exclude */
extern T0* T162f14(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_mount */
extern T0* T162f9(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_cluster */
extern void T162f39(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T162f39ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_class */
extern void T162f43(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T162f43ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_feature */
extern void T162f44(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T162f44ot1(T0* a1, T0** a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_cluster_element_warning */
extern void T54f24(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.make */
extern T0* T1141c8(GE_context* ac, T0* a1);
/* ET_XACE_VALIDATOR.validate_named_cluster */
extern void T162f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_non_empty_attribute_expected_error */
extern void T54f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.make */
extern T0* T449c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_cluster */
extern T0* T162f5(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_description */
extern T0* T162f8(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_root */
extern void T162f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_creation */
extern T0* T162f28(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_element_error */
extern void T54f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ELEMENT_ERROR.make */
extern T0* T1140c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.element_by_name */
extern T0* T156f8(GE_context* ac, T0* C, T0* a1);
extern T1 T156f8ot1(T0* a1, T0** a2);
/* XM_ELEMENT.named_same_name */
extern T1 T156f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_namespace */
extern T1 T156f14(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE.is_equal */
extern T1 T529f4(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE.string_ */
extern T0* T529f3(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_root */
extern T0* T162f12(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_attribute_error */
extern void T54f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.make */
extern T0* T1138c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.has_attribute_by_name */
extern T1 T156f6(GE_context* ac, T0* C, T0* a1);
extern T1 T156f6ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_name */
extern T0* T162f7(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_system */
extern T0* T162f6(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.string_ */
extern T0* T162f3(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].wipe_out */
extern void T164f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].slots_wipe_out */
extern void T164f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].clashes_wipe_out */
extern void T164f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].key_storage_wipe_out */
extern void T164f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].item_storage_wipe_out */
extern void T164f41(GE_context* ac, T0* C);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].keep_head */
extern void T572f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].set_count */
extern void T572f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].unset_found_item */
extern void T164f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].move_all_cursors_after */
extern void T164f39(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8].set_next_cursor */
extern void T571f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8].set_after */
extern void T571f7(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_root_class_name */
extern void T62f153(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.unset_root_type */
extern void T62f175(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_root_type */
extern void T62f174(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_system */
extern T0* T53f151(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.set_multithreaded_mode */
extern void T62f163(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.multithreaded */
extern T1 T430f114(GE_context* ac, T0* C);
/* UT_TRISTATE.is_true */
extern T1 T1147f3(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_multithreaded_declared */
extern T1 T430f139(GE_context* ac, T0* C);
/* UT_TRISTATE.is_undefined */
extern T1 T1147f2(GE_context* ac, T0* C);
/* UT_TRISTATE.is_false */
extern T1 T1147f4(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_use_boehm_gc */
extern void T62f162(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM_PARSER.options */
extern T0* T53f17(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.garbage_collector */
extern T0* T430f113(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_garbage_collector */
extern T0* T430f138(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.options */
extern T0* T430f125(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_trace_mode */
extern void T62f161(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.trace */
extern T1 T430f112(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_trace_declared */
extern T1 T430f134(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_exception_trace_mode */
extern void T62f160(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.exception_trace */
extern T1 T430f111(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_exception_trace_declared */
extern T1 T430f131(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_console_application_mode */
extern void T62f159(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.console_application */
extern T1 T430f110(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_console_application_declared */
extern T1 T430f128(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.replace_all_characters */
extern T0* T53f16(GE_context* ac, T0* C, T0* a1, T2 a2, T2 a3);
/* UC_UTF8_STRING.put */
extern void T1206f74(GE_context* ac, T0* C, T2 a1, T6 a2);
/* ET_XACE_SYSTEM.merge_externals */
extern void T62f158(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.merge_externals */
extern void T438f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].item */
extern T0* T439f10(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_CLUSTERS.merge_externals */
extern void T436f6(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.merge_externals */
extern void T435f70(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].forth */
extern void T478f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_forth */
extern void T139f32(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_position */
extern void T478f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].add_traversing_cursor */
extern void T139f37(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].remove_traversing_cursor */
extern void T139f38(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_EXTERNALS.put_link_library */
extern void T429f7(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].force_last */
extern void T146f18(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [STRING_8].put_right */
extern void T556f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [STRING_8].make */
extern T0* T556c3(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].item */
extern T0* T478f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_item */
extern T0* T139f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].after */
extern T1 T478f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].start */
extern void T478f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_start */
extern void T139f31(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].off */
extern T1 T478f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].before */
extern T1 T478f7(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.link */
extern T0* T430f117(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_link */
extern T0* T430f102(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].set_equality_tester */
extern void T139f39(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.string_equality_tester */
extern T0* T430f124(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_link_declared */
extern T1 T430f100(GE_context* ac, T0* C);
/* ET_XACE_EXTERNALS.put_include_directory */
extern void T429f6(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.header */
extern T0* T430f116(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_header */
extern T0* T430f99(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_header_declared */
extern T1 T430f97(GE_context* ac, T0* C);
/* ET_XACE_EXTERNALS.put_c_compiler_options */
extern void T429f5(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.c_compiler_options */
extern T0* T430f115(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_c_compiler_options */
extern T0* T430f96(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_c_compiler_options_declared */
extern T1 T430f142(GE_context* ac, T0* C);
/* ET_XACE_EXTERNALS.make */
extern T0* T429c4(GE_context* ac);
/* ET_XACE_SYSTEM.mount_libraries */
extern void T62f157(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.mount_libraries */
extern void T438f8(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.mount_libraries */
extern void T436f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTERS.put_last */
extern void T436f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].force_last */
extern void T1325f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].force */
extern void T1590f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].fill_with */
extern void T1589f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].extend */
extern void T1589f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].resize */
extern void T1325f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].aliased_resized_area */
extern T0* T1590f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_CLUSTER].aliased_resized_area */
extern T0* T1589f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].new_capacity */
extern T6 T1325f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].extendible */
extern T1 T1325f7(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_CLUSTER.set_library_prefix */
extern void T435f76(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_library_prefix */
extern void T436f13(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_mounted */
extern void T435f77(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_mounted */
extern void T436f17(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.make_empty */
extern T0* T436c5(GE_context* ac);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].make */
extern T0* T1325c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].set_internal_cursor */
extern void T1325f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].new_cursor */
extern T0* T1325f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].make */
extern T0* T1591c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].make */
extern T0* T1590f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_CLUSTER].make_empty */
extern T0* T1589c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].default_create */
extern T0* T1590c3(GE_context* ac);
/* ET_XACE_SYSTEM_PARSER.fill_system */
extern void T53f261(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T53f261ot1(T0* a1, T0** a2);
extern T1 T53f261ot2(T0* a1, T0** a2);
/* ET_XACE_SYSTEM.set_mounted_libraries */
extern void T62f168(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_options */
extern void T62f167(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_creation_procedure_name */
extern void T62f166(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_root_creation */
extern void T62f184(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_system_name */
extern void T62f165(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_clusters */
extern void T62f164(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG.merge_libraries */
extern void T443f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARIES.merge_libraries */
extern void T438f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARY.set_root */
extern void T437f12(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_MOUNTED_LIBRARY.cloned_object */
extern T0* T437f8(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARY.twin */
extern T0* T437f9(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARY.copy */
extern void T437f13(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.set_root */
extern void T438f7(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].is_empty */
extern T1 T439f6(GE_context* ac, T0* C);
/* ET_XACE_CLUSTERS.merge_libraries */
extern void T436f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.merge_libraries */
extern void T435f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_override */
extern void T435f69(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.cluster_by_name */
extern T0* T436f2(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.string_ */
extern T0* T436f3(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.override_cluster */
extern T0* T430f109(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_override_cluster */
extern T0* T430f127(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_override_cluster_declared */
extern T1 T430f107(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.fill_externals */
extern void T53f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T53f263ot1(T0* a1, T0** a2);
/* ET_XACE_CLUSTER.put_class_option */
extern void T435f61(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].put_last */
extern void T1324f7(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_XACE_CLASS_OPTIONS].put_right */
extern void T1588f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_XACE_CLASS_OPTIONS].make */
extern T0* T1588c3(GE_context* ac, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].make */
extern T0* T1324c6(GE_context* ac);
/* detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].set_internal_cursor */
extern void T1324f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].new_cursor */
extern T0* T1324f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS].make */
extern T0* T1587c3(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_export */
extern T0* T53f146(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T53f146ot1(T0* a1, T0** a2);
/* ET_XACE_OPTIONS.set_export_option */
extern void T430f176(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].is_empty */
extern T1 T1136f6(GE_context* ac, T0* C);
/* ET_XACE_CLASS_OPTIONS.put_feature_option */
extern void T446f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].put_last */
extern void T1136f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_XACE_FEATURE_OPTIONS].put_right */
extern void T1561f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1561c3(GE_context* ac, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1136c7(GE_context* ac);
/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].set_internal_cursor */
extern void T1136f9(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].new_cursor */
extern T0* T1136f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1560c3(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_exported_feature */
extern T0* T53f254(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_AST_FACTORY.new_feature_options */
extern T0* T154f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_FEATURE_OPTIONS.make */
extern T0* T1135c3(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.uc_alias */
extern T0* T53f256(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_feature */
extern T0* T53f253(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_class_options */
extern T0* T154f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLASS_OPTIONS.make */
extern T0* T446c4(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.uc_export */
extern T0* T53f145(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_header */
extern void T430f187(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_include_dir */
extern T0* T53f144(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_link */
extern void T430f198(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_location */
extern T0* T53f143(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_link_library */
extern T0* T53f142(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_options */
extern T0* T154f3(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.make */
extern T0* T430c146(GE_context* ac);
/* ET_XACE_SYSTEM_PARSER.uc_external */
extern T0* T53f28(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.new_options */
extern T0* T53f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.fill_options */
extern void T53f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T53f262ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.uc_debug */
extern T0* T53f141(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_optimize */
extern T0* T53f140(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_check */
extern T0* T53f138(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_loop */
extern T0* T53f135(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_invariant */
extern T0* T53f133(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_ensure */
extern T0* T53f131(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_enable */
extern T0* T53f129(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_require */
extern T0* T53f128(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_wedit */
extern void T430f240(GE_context* ac, T0* C, T1 a1);
/* UT_TRISTATE.set_false */
extern void T1147f8(GE_context* ac, T0* C);
/* UT_TRISTATE.set_true */
extern void T1147f6(GE_context* ac, T0* C);
/* UT_TRISTATE.make_undefined */
extern T0* T1147c7(GE_context* ac);
/* UT_TRISTATE.set_undefined */
extern void T1147f9(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_warning */
extern void T430f239(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_warning */
extern T0* T430f105(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].put_last */
extern void T78f69(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].compress */
extern void T78f70(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].key_storage_keep_head */
extern void T78f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_keep_head */
extern void T78f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].move_all_cursors */
extern void T78f72(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].key_storage_put */
extern void T78f71(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_XACE_OPTIONS.set_void_safety */
extern void T430f238(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_void_safety */
extern T0* T430f103(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_visible_filename */
extern void T430f237(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_version */
extern void T430f236(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_verbose */
extern void T430f235(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_use_full_cluster_name_as_namespace */
extern void T430f234(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_use_cluster_name_as_namespace */
extern void T430f233(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_trace */
extern void T430f232(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_target */
extern void T430f231(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_target */
extern T0* T430f101(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_syntax */
extern void T430f230(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_syntax */
extern T0* T430f98(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_strip_option */
extern void T430f229(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_storable_filename */
extern void T430f228(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_stack_size */
extern void T430f227(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_split */
extern void T430f226(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_shared_library_definition */
extern void T430f225(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_reloads_optimization */
extern void T430f224(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_recursive */
extern void T430f223(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_read_only */
extern void T430f222(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_public_key_token */
extern void T430f221(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_profile */
extern void T430f220(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_prefix_option */
extern void T430f219(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_precompiled */
extern void T430f218(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_portable_code_generation */
extern void T430f217(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_override_cluster */
extern void T430f216(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_old_verbatim_strings */
extern void T430f215(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_no_default_lib */
extern void T430f214(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_namespace */
extern void T430f213(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_multithreaded */
extern void T430f212(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_use_optimized_precompile */
extern void T430f211(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_key_file_name */
extern void T430f210(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_generation_version */
extern void T430f209(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_generation */
extern void T430f208(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_culture */
extern void T430f207(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_clr_version */
extern void T430f206(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_classes_per_module */
extern void T430f205(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_msil_assembly_compatibility */
extern void T430f204(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_metadata_cache_path */
extern void T430f203(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_map */
extern void T430f202(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_manifest_string_trace */
extern void T430f201(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_linux_fpu_double_precision */
extern void T430f200(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_linker */
extern void T430f199(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_linker */
extern T0* T430f95(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_line_generation */
extern void T430f197(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_leaves_optimization */
extern void T430f196(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_layout_optimization */
extern void T430f195(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_layout */
extern void T430f194(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_layout */
extern T0* T430f140(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_jumps_optimization */
extern void T430f193(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_inlining_size */
extern void T430f192(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_inlining */
extern void T430f191(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_inlining */
extern T0* T430f137(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_include */
extern void T430f190(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_il_verifiable */
extern void T430f189(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_high_memory_compiler */
extern void T430f188(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_heap_size */
extern void T430f186(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_gc_info */
extern void T430f185(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_garbage_collector */
extern void T430f184(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_garbage_collector */
extern T0* T430f135(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_full_class_checking */
extern void T430f183(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_fst_optimization */
extern void T430f182(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_positive_integer_expected_error */
extern void T54f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.make */
extern T0* T451c8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_OPTIONS.set_fst_expansion_factor */
extern void T430f181(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_force_32bits */
extern void T430f180(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_flat_fst_optimization */
extern void T430f179(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_finalize_option */
extern void T430f178(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_external_runtime */
extern void T430f177(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_exclude */
extern void T430f175(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_exception_trace */
extern void T430f174(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_enforce_unique_class_names */
extern void T430f173(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_ecf_library */
extern void T430f172(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_dynamic_runtime */
extern void T430f171(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dotnet_naming_convention */
extern void T430f170(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_document */
extern void T430f169(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_debugger */
extern void T430f168(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_debug_tag */
extern void T430f167(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_debug_option */
extern void T430f166(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dead_code_removal */
extern void T430f165(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_dead_code_removal */
extern T0* T430f132(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_c_compiler_options */
extern void T430f164(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_culture */
extern void T430f163(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_create_keyword_extension */
extern void T430f162(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_console_application */
extern void T430f161(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_component */
extern void T430f160(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_cls_compliant */
extern void T430f159(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_clean */
extern void T430f158(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_check_vape */
extern void T430f157(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_case_insensitive */
extern void T430f156(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_callback */
extern void T430f155(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_callback */
extern T0* T430f129(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_automatic_backup */
extern void T430f154(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_attached_by_default */
extern void T430f153(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_attribute_value_error */
extern void T54f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.make */
extern T0* T450c8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.string_ */
extern T0* T450f4(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_assertion */
extern void T430f152(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_assertion */
extern T0* T430f126(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_assembly */
extern void T430f151(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_array_optimization */
extern void T430f150(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_arguments */
extern void T430f149(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_address_expression */
extern void T430f148(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_boolean_expected_error */
extern void T54f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.make */
extern T0* T448c8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_SYSTEM_PARSER.is_false */
extern T1 T53f127(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_abstract */
extern void T430f147(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM_PARSER.is_true */
extern T1 T53f126(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_item */
extern T6 T444f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_item */
extern T6 T444f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found */
extern T1 T444f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search */
extern void T444f38(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.option_codes */
extern T0* T53f30(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.string_equality_tester */
extern T0* T53f13(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_value */
extern T0* T53f29(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_option */
extern T0* T53f26(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.put_last */
extern void T438f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].force_last */
extern void T439f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].force */
extern void T1328f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].fill_with */
extern void T1327f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].extend */
extern void T1327f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].resize */
extern void T439f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].aliased_resized_area */
extern T0* T1328f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].aliased_resized_area */
extern T0* T1327f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].new_capacity */
extern T6 T439f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].extendible */
extern T1 T439f8(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_multiple_library_prefix_error */
extern void T54f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.make */
extern T0* T447c8(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARY.same_library_prefix */
extern T1 T437f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARY.string_ */
extern T0* T437f6(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.item */
extern T0* T438f2(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.string_ */
extern T0* T438f3(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_mounted_libraries */
extern T0* T154f2(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.make_empty */
extern T0* T438c5(GE_context* ac);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T439c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].set_internal_cursor */
extern void T439f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].new_cursor */
extern T0* T439f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T1329c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T1328f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].make_empty */
extern T0* T1327c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].default_create */
extern T0* T1328c3(GE_context* ac);
/* ET_XACE_SYSTEM_PARSER.new_mount */
extern T0* T53f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MOUNTED_LIBRARY.set_library_prefix */
extern void T437f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_prefix */
extern T0* T53f149(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_mounted_library */
extern T0* T154f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MOUNTED_LIBRARY.make */
extern T0* T437c10(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_cannot_read_file_error */
extern void T54f28(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.parse_library */
extern void T169f253(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_library */
extern void T169f254(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T169f254ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG.set_libraries */
extern void T443f12(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG.set_clusters */
extern void T443f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_externals */
extern void T169f256(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T169f256ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_export */
extern T0* T169f139(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T169f139ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_exported_feature */
extern T0* T169f247(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_alias */
extern T0* T169f249(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_feature */
extern T0* T169f246(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_class */
extern T0* T169f142(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_export */
extern T0* T169f138(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_include_dir */
extern T0* T169f137(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_location */
extern T0* T169f136(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_link_library */
extern T0* T169f135(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_external */
extern T0* T169f21(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_options */
extern T0* T169f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_options */
extern void T169f255(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T169f255ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_debug */
extern T0* T169f134(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_optimize */
extern T0* T169f133(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_check */
extern T0* T169f131(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_loop */
extern T0* T169f128(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_invariant */
extern T0* T169f126(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_ensure */
extern T0* T169f124(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_enable */
extern T0* T169f122(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_require */
extern T0* T169f121(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.is_false */
extern T1 T169f120(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.is_true */
extern T1 T169f119(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.option_codes */
extern T0* T169f23(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.string_equality_tester */
extern T0* T169f144(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_value */
extern T0* T169f22(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_option */
extern T0* T169f19(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_mount */
extern T0* T169f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.execution_environment */
extern T0* T169f146(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_mount */
extern T0* T169f17(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG.set_library_prefix */
extern void T443f10(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_prefix */
extern T0* T169f16(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG.set_options */
extern void T443f9(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_cluster */
extern T0* T169f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T169f15ot1(T0* a1, T0** a2);
/* ET_XACE_CLUSTER.set_libraries */
extern void T435f67(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_subclusters */
extern void T435f66(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_parent */
extern void T436f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_parent */
extern void T435f75(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_options */
extern void T435f65(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_read_only */
extern void T435f64(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.read_only */
extern T1 T430f123(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_read_only_declared */
extern T1 T430f122(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.set_recursive */
extern void T435f63(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.recursive */
extern T1 T430f121(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_recursive_declared */
extern T1 T430f120(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.set_abstract */
extern void T435f62(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.abstract */
extern T1 T430f119(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_abstract_declared */
extern T1 T430f118(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_class */
extern T0* T169f143(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T169f143ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_feature */
extern T0* T169f248(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T169f248ot1(T0* a1, T0** a2);
/* ET_XACE_CLUSTER.set_cluster_prefix */
extern void T435f60(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_relative */
extern void T435f59(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_relative */
extern T0* T169f141(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_attribute_obsoleted_by_element_warning */
extern void T54f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T1144c8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_abstract */
extern T0* T169f140(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_cluster */
extern T0* T154f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_CLUSTER.make */
extern T0* T435c58(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T435f68(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T436f12(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_cluster */
extern T0* T169f13(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.string_ */
extern T0* T169f12(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG.set_name */
extern void T443f8(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_name */
extern T0* T169f145(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.execution_environment */
extern T0* T53f153(GE_context* ac, T0* C);
/* UC_UTF8_STRING.has_substring */
extern T1 T1206f63(GE_context* ac, T0* C, T0* a1);
/* STRING_8.has_substring */
extern T1 T17f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].force_new */
extern void T164f52(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].key_storage_put */
extern void T164f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].item_storage_put */
extern void T164f57(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG].force */
extern void T573f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].fill_with */
extern void T572f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].extend */
extern void T572f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].slots_put */
extern void T164f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].clashes_put */
extern void T164f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].slots_item */
extern T6 T164f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].hash_position */
extern T6 T164f27(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].clashes_item */
extern T6 T164f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].resize */
extern void T164f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].clashes_resize */
extern void T164f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].special_integer_ */
extern T0* T164f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].key_storage_resize */
extern void T164f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].item_storage_resize */
extern void T164f60(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG].aliased_resized_area */
extern T0* T573f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].aliased_resized_area */
extern T0* T572f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].key_storage_item */
extern T0* T164f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].slots_resize */
extern void T164f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].new_modulus */
extern T6 T164f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].new_capacity */
extern T6 T164f24(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_AST_FACTORY.new_library */
extern T0* T154f5(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG.make */
extern T0* T443c7(GE_context* ac);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].found_item */
extern T0* T164f22(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].item_storage_item */
extern T0* T164f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].found */
extern T1 T164f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].search */
extern void T164f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].search_position */
extern void T164f53(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_mount */
extern T0* T53f24(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_clusters */
extern T0* T154f1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.make */
extern T0* T436c8(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].put_last */
extern void T1325f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_cluster */
extern T0* T53f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T53f23ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.new_class */
extern T0* T53f150(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T53f150ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.new_feature */
extern T0* T53f255(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T53f255ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.uc_relative */
extern T0* T53f148(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_abstract */
extern T0* T53f147(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_cluster */
extern T0* T53f21(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_creation */
extern T0* T53f20(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_class */
extern T0* T53f19(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_root */
extern T0* T53f18(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.make */
extern T0* T62c152(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.set_default_class_mapping */
extern void T62f173(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_wide_character_ref_class_mapping */
extern void T62f238(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_class_mapping */
extern void T62f248(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.set_wide_character_class_mapping */
extern void T62f237(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_string_class_mapping */
extern void T62f236(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_real_ref_class_mapping */
extern void T62f235(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_real_class_mapping */
extern void T62f234(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_natural_ref_class_mapping */
extern void T62f233(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_natural_class_mapping */
extern void T62f232(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_integer_ref_class_mapping */
extern void T62f231(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_integer_class_mapping */
extern void T62f230(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_double_ref_class_mapping */
extern void T62f229(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_double_class_mapping */
extern void T62f228(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_character_ref_class_mapping */
extern void T62f227(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_character_class_mapping */
extern void T62f226(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.tokens */
extern T0* T62f142(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_kernel_types */
extern void T62f172(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_wide_character_type */
extern void T62f225(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_typed_pointer_type */
extern void T62f224(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_type_type */
extern void T62f223(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_system_string_type */
extern void T62f222(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_system_object_type */
extern void T62f221(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_string_type */
extern void T62f220(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_string_32_type */
extern void T62f219(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_string_8_type */
extern void T62f218(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_special_type */
extern void T62f217(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_routine_type */
extern void T62f216(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_real_64_type */
extern void T62f215(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_real_32_type */
extern void T62f214(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_real_type */
extern void T62f213(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_procedure_type */
extern void T62f212(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_predicate_type */
extern void T62f211(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_pointer_type */
extern void T62f210(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_none_type */
extern void T62f209(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_64_type */
extern void T62f208(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_32_type */
extern void T62f207(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_16_type */
extern void T62f206(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_8_type */
extern void T62f205(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_type */
extern void T62f204(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_iterable_type */
extern void T62f203(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_ise_exception_manager_type */
extern void T62f202(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_64_type */
extern void T62f201(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_32_type */
extern void T62f200(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_16_type */
extern void T62f199(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_8_type */
extern void T62f198(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_type */
extern void T62f197(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_immutable_string_32_type */
extern void T62f196(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_function_type */
extern void T62f195(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_exception_manager_type */
extern void T62f194(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_exception_type */
extern void T62f193(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_double_type */
extern void T62f192(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_character_32_type */
extern void T62f191(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_character_8_type */
extern void T62f190(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_character_type */
extern void T62f189(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_boolean_type */
extern void T62f188(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_array_type */
extern void T62f187(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_tuple_type */
extern void T62f186(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_any_type */
extern void T62f185(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.make_adapted */
extern void T62f171(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.default_read_only_value */
extern T1 T62f139(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_unknown_kernel_types */
extern void T62f170(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.initialize */
extern void T62f169(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.initialize */
extern void T62f169p1(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.class_name_tester */
extern T0* T62f129(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_name */
extern T0* T53f15(GE_context* ac, T0* C);
/* XM_ELEMENT.set_name */
extern void T156f23(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_system */
extern T0* T53f14(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.preprocess_element */
extern void T163f11(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T163f11ot1(T0* a1, T0** a2);
/* ET_XACE_PREPROCESSOR.should_strip_element */
extern T1 T163f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_invalid_expression_error */
extern void T54f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_INVALID_EXPRESSION_ERROR.make */
extern T0* T1473c8(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_PREPROCESSOR.is_expression_true */
extern T1 T163f8(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.template_expander */
extern T0* T163f4(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.string_ */
extern T0* T163f9(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.is_valid_expression */
extern T1 T163f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.uc_unless */
extern T0* T163f6(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.uc_if */
extern T0* T163f5(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.expand_attribute_variables */
extern void T163f12(GE_context* ac, T0* C, T0* a1);
extern T1 T163f12ot1(T0* a1, T0** a2);
/* XM_ATTRIBUTE.set_value */
extern void T431f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_VALIDATOR.validate_library_doc */
extern void T162f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_library */
extern void T162f33(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T162f33ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_library */
extern T0* T162f4(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_library */
extern T0* T53f12(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.string_ */
extern T0* T53f152(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.make_with_variables */
extern T0* T53c257(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.make_with_variables_and_factory */
extern void T53f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM_PARSER.create_library_parser */
extern void T53f260(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.set_parsed_libraries */
extern void T169f251(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.make_with_variables_and_factory */
extern T0* T169c250(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.create_library_parser */
extern void T169f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EXPAT_PARSER_FACTORY.new_expat_parser */
extern T0* T165f2(GE_context* ac, T0* C);
/* XM_EXPAT_PARSER_FACTORY.is_expat_parser_available */
extern T1 T165f1(GE_context* ac, T0* C);
/* XM_EXPAT_PARSER_FACTORY.default_create */
extern T0* T165c3(GE_context* ac);
/* ET_XACE_VALIDATOR.make */
extern T0* T162c30(GE_context* ac, T0* a1);
/* ET_XACE_PREPROCESSOR.make */
extern T0* T163c10(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].set_key_equality_tester */
extern void T164f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_map */
extern T0* T164c35(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_with_equality_testers */
extern void T164f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_sparse_container */
extern void T164f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].set_internal_cursor */
extern void T164f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].new_cursor */
extern T0* T164f29(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8].make */
extern T0* T571c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_slots */
extern void T164f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_clashes */
extern void T164f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_key_storage */
extern void T164f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_item_storage */
extern void T164f46(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG].make */
extern T0* T573f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].make_empty */
extern T0* T572c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG].default_create */
extern T0* T573c3(GE_context* ac);
/* ET_XACE_AST_FACTORY.make */
extern T0* T154c9(GE_context* ac);
/* DS_LINKED_LIST_CURSOR [STRING_8].forth */
extern void T175f10(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_forth */
extern void T146f24(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].add_traversing_cursor */
extern void T146f25(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T175f12(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T146f26(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set */
extern void T175f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* UC_UTF8_STRING.index_of */
extern T6 T1206f23(GE_context* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.index_of_item_code */
extern T6 T1206f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.index_of */
extern T6 T17f29(GE_context* ac, T0* C, T2 a1, T6 a2);
/* DS_LINKED_LIST_CURSOR [STRING_8].item */
extern T0* T175f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].start */
extern void T175f9(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_start */
extern void T146f23(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].cursor_off */
extern T1 T146f13(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].off */
extern T1 T175f7(GE_context* ac, T0* C);
/* ST_SPLITTER.split */
extern T0* T56f6(GE_context* ac, T0* C, T0* a1);
/* ST_SPLITTER.do_split */
extern T0* T56f8(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ST_SPLITTER.string_ */
extern T0* T56f5(GE_context* ac, T0* C);
/* ST_SPLITTER.make */
extern T0* T56c9(GE_context* ac);
/* ST_SPLITTER.set_separators */
extern void T56f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].put */
extern void T176f39(GE_context* ac, T0* C, T6 a1);
/* GEC.string_equality_tester */
extern T0* T24f20(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.make_standard */
extern T0* T54c8(GE_context* ac);
/* ET_XACE_DEFAULT_ERROR_HANDLER.std */
extern T0* T54f6(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.same_string */
extern T1 T36f1(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T36f1ot1(T0* a1, T0** a2);
extern T1 T36f1ot2(T0* a1, T0** a2);
/* KL_STRING_ROUTINES.elks_same_string */
extern T1 T36f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.same_unicode_string */
extern T1 T1206f51(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.unicode_substring_index */
extern T6 T1206f32(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T1206f32ot1(T0* a1, T0** a2);
extern T1 T1206f32ot2(T0* a1, T0** a2);
/* GEC.string_ */
extern T0* T24f18(GE_context* ac, T0* C);
/* INTEGER_32.is_greater */
extern T1 T6f6(GE_context* ac, T6* C, T6 a1);
/* KL_TEXT_INPUT_FILE.is_open_read */
extern T1 T31f14(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_read */
extern T1 T31f27(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T31f61(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_closed */
extern T1 T31f17(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_open_read */
extern void T31f66(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.default_pointer */
extern T14 T31f21(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T31f66p1(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_open */
extern T14 T31f24(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.old_is_readable */
extern T1 T31f16(GE_context* ac, T0* C);
/* FILE_INFO.is_readable */
extern T1 T130f8(GE_context* ac, T0* C);
/* FILE_INFO.file_eaccess */
extern T1 T130f6(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.make */
extern void T31f59(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern T0* T31c59(GE_context* ac, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern void T31f59p1(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.old_make */
extern void T31f64(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make_with_name */
extern void T31f69(GE_context* ac, T0* C, T0* a1);
/* GEC.parse_arguments */
extern void T24f40(GE_context* ac, T0* C);
/* AP_ERROR.make_invalid_parameter_error */
extern T0* T41c21(GE_context* ac, T0* a1, T0* a2);
/* AP_INTEGER_OPTION.parameter */
extern T6 T46f12(GE_context* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].last */
extern T6 T153f7(GE_context* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].is_empty */
extern T1 T153f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].first */
extern T0* T139f11(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.full_usage_instruction */
extern T0* T51f10(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.full_usage_instruction */
extern T0* T39f24(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].forth */
extern void T141f17(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_forth */
extern void T141f21(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_position */
extern void T553f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].add_traversing_cursor */
extern void T141f22(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_next_cursor */
extern void T553f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].remove_traversing_cursor */
extern void T141f23(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.alternative_usage_instruction */
extern T0* T39f26(GE_context* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.wrapped_string */
extern T0* T427f5(GE_context* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.canonify_whitespace */
extern void T427f12(GE_context* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.is_space */
extern T1 T427f8(GE_context* ac, T0* C, T2 a1);
/* ST_WORD_WRAPPER.string_ */
extern T0* T427f4(GE_context* ac, T0* C);
/* ST_WORD_WRAPPER.set_new_line_indentation */
extern void T427f10(GE_context* ac, T0* C, T6 a1);
/* AP_PARSER.wrapper */
extern T0* T39f30(GE_context* ac, T0* C);
/* ST_WORD_WRAPPER.set_maximum_text_width */
extern void T427f11(GE_context* ac, T0* C, T6 a1);
/* ST_WORD_WRAPPER.make */
extern T0* T427c9(GE_context* ac);
/* KL_UNIX_FILE_SYSTEM.basename */
extern T0* T122f2(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.basename */
extern T0* T121f2(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.arguments */
extern T0* T39f23(GE_context* ac, T0* C);
/* AP_PARSER.file_system */
extern T0* T39f27(GE_context* ac, T0* C);
/* AP_PARSER.unix_file_system */
extern T0* T39f33(GE_context* ac, T0* C);
/* AP_PARSER.windows_file_system */
extern T0* T39f32(GE_context* ac, T0* C);
/* AP_PARSER.operating_system */
extern T0* T39f31(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.forth */
extern void T40f17(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_forth */
extern void T40f19(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.add_traversing_cursor */
extern void T40f20(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T143f9(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.remove_traversing_cursor */
extern void T40f21(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set */
extern void T143f8(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* AP_ALTERNATIVE_OPTIONS_LIST.item_for_iteration */
extern T0* T40f6(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_item */
extern T0* T40f8(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.after */
extern T1 T40f5(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_after */
extern T1 T40f7(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.start */
extern void T40f16(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_start */
extern void T40f18(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_off */
extern T1 T40f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].off */
extern T1 T143f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item_for_iteration */
extern T0* T141f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_item */
extern T0* T141f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T141f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_after */
extern T1 T141f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T553f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].start */
extern void T141f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_start */
extern void T141f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_after */
extern void T553f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].is_empty */
extern T1 T141f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].off */
extern T1 T553f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].before */
extern T1 T553f6(GE_context* ac, T0* C);
/* AP_PARSER.usage_instruction */
extern T0* T39f25(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].forth */
extern void T140f20(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_forth */
extern void T140f24(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_position */
extern void T549f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].add_traversing_cursor */
extern void T140f25(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T549f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].remove_traversing_cursor */
extern void T140f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].item_for_iteration */
extern T0* T140f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_item */
extern T0* T140f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].after */
extern T1 T140f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_after */
extern T1 T140f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].after */
extern T1 T549f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].start */
extern void T140f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_start */
extern void T140f23(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_after */
extern void T549f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].is_empty */
extern T1 T140f15(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].off */
extern T1 T549f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].before */
extern T1 T549f6(GE_context* ac, T0* C);
/* GEC.report_version_number */
extern void T24f46(GE_context* ac, T0* C);
/* UT_VERSION_NUMBER.make */
extern T0* T88c8(GE_context* ac, T0* a1);
/* AP_PARSER.parse_arguments */
extern void T39f44(GE_context* ac, T0* C);
/* AP_PARSER.parse_list */
extern void T39f46(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.final_error_action */
extern void T39f50(GE_context* ac, T0* C);
/* AP_PARSER.exceptions */
extern T0* T39f20(GE_context* ac, T0* C);
/* KL_EXCEPTIONS.default_create */
extern T0* T38c1(GE_context* ac);
/* AP_ERROR_HANDLER.report_error_message */
extern void T142f10(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR_HANDLER.report_error_message */
extern void T142f10p1(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.check_options_after_parsing */
extern void T39f49(GE_context* ac, T0* C);
/* AP_ERROR.make_surplus_option_error */
extern T0* T41c23(GE_context* ac, T0* a1);
/* AP_ERROR_HANDLER.report_error */
extern void T142f9(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR_HANDLER.message */
extern T0* T142f6(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_missing_option_error */
extern T0* T41c22(GE_context* ac, T0* a1);
/* AP_PARSER.parse_argument */
extern void T39f48(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.parse_short */
extern void T39f52(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_missing_parameter_error */
extern T0* T41c25(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].off */
extern T1 T139f15(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_off */
extern T1 T139f13(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_unknown_option_error */
extern T0* T41c24(GE_context* ac, T0* a1);
/* CHARACTER_8.out */
extern T0* T2f3(GE_context* ac, T2* C);
/* AP_PARSER.parse_long */
extern void T39f51(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_unnecessary_parameter_error */
extern T0* T41c26(GE_context* ac, T0* a1, T0* a2);
/* AP_PARSER.string_ */
extern T0* T39f22(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].forth */
extern void T139f25(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].item_for_iteration */
extern T0* T139f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].after */
extern T1 T139f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_after */
extern T1 T139f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].start */
extern void T139f24(GE_context* ac, T0* C);
/* AP_PARSER.reset_parser */
extern void T39f47(GE_context* ac, T0* C);
/* AP_PARSER.all_options */
extern T0* T39f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].has */
extern T1 T140f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].make */
extern T0* T140c17(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].set_internal_cursor */
extern void T140f21(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_cursor */
extern T0* T140f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].make */
extern T0* T549c8(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].make */
extern T0* T552f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [AP_OPTION].make_empty */
extern T0* T551c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].default_create */
extern T0* T552c3(GE_context* ac);
/* AP_ERROR_HANDLER.reset */
extern void T142f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].force */
extern void T139f23(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].put */
extern void T139f30(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_cursors_right */
extern void T139f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_right */
extern void T139f35(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].put_last */
extern void T139f34(GE_context* ac, T0* C, T0* a1);
/* KL_ARGUMENTS.argument_count */
extern T6 T32f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].force_last */
extern void T141f15(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].force */
extern void T555f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].fill_with */
extern void T554f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].extend */
extern void T554f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern void T141f19(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T555f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T554f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_capacity */
extern T6 T141f12(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].extendible */
extern T1 T141f10(GE_context* ac, T0* C, T6 a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.make */
extern T0* T40c11(GE_context* ac, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.old_make */
extern void T40f14(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_internal_cursor */
extern void T40f15(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.new_cursor */
extern T0* T40f10(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].make */
extern T0* T143c7(GE_context* ac, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_parameters_description */
extern void T40f13(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_introduction_option */
extern void T40f12(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.make */
extern T0* T42c19(GE_context* ac, T2 a1, T0* a2);
/* AP_FLAG.set_long_form */
extern void T42f21(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.set_short_form */
extern void T42f23(GE_context* ac, T0* C, T2 a1);
/* AP_FLAG.initialize */
extern void T42f20(GE_context* ac, T0* C);
/* AP_STRING_OPTION.set_parameter_description */
extern void T47f25(GE_context* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.set_description */
extern void T47f24(GE_context* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.make_with_long_form */
extern T0* T47c23(GE_context* ac, T0* a1);
/* AP_STRING_OPTION.set_long_form */
extern void T47f27(GE_context* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.initialize */
extern void T47f26(GE_context* ac, T0* C);
/* AP_STRING_OPTION.initialize */
extern void T47f26p1(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.set_parameter_description */
extern void T46f25(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.set_description */
extern void T46f24(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.make_with_long_form */
extern T0* T46c23(GE_context* ac, T0* a1);
/* AP_INTEGER_OPTION.set_long_form */
extern void T46f27(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.initialize */
extern void T46f26(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T46f26p1(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T46f26p0(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.set_parameter_description */
extern void T45f28(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.set_description */
extern void T45f27(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.make_with_long_form */
extern T0* T45c26(GE_context* ac, T0* a1);
/* AP_BOOLEAN_OPTION.set_long_form */
extern void T45f30(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.initialize */
extern void T45f29(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T45f29p1(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T45f29p0(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.set_parameter_description */
extern void T44f28(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.extend */
extern void T44f27(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.update_parameter_description */
extern void T44f32(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].forth */
extern void T146f21(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].is_last */
extern T1 T146f10(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_is_last */
extern T1 T146f8(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].item_for_iteration */
extern T0* T146f9(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_item */
extern T0* T146f7(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].after */
extern T1 T146f12(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_after */
extern T1 T146f6(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].start */
extern void T146f20(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.set_description */
extern void T44f26(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.make_with_long_form */
extern T0* T44c25(GE_context* ac, T0* a1);
/* AP_ENUMERATION_OPTION.set_long_form */
extern void T44f30(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.initialize */
extern void T44f29(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].set_equality_tester */
extern void T146f19(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.string_equality_tester */
extern T0* T44f14(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T44f29p1(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T44f29p0(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].force_last */
extern void T140f18(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].force */
extern void T552f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [AP_OPTION].fill_with */
extern void T551f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].extend */
extern void T551f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].resize */
extern void T140f22(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].aliased_resized_area */
extern T0* T552f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_OPTION].aliased_resized_area */
extern T0* T551f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_capacity */
extern T6 T140f14(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].extendible */
extern T1 T140f13(GE_context* ac, T0* C, T6 a1);
/* AP_FLAG.set_description */
extern void T42f18(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.make_with_long_form */
extern T0* T42c17(GE_context* ac, T0* a1);
/* AP_PARSER.set_parameters_description */
extern void T39f43(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.set_application_description */
extern void T39f42(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.make */
extern T0* T39c41(GE_context* ac);
/* AP_DISPLAY_HELP_FLAG.set_description */
extern void T51f21(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.make */
extern T0* T51c20(GE_context* ac, T2 a1, T0* a2);
/* AP_DISPLAY_HELP_FLAG.set_long_form */
extern void T51f24(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.set_short_form */
extern void T51f23(GE_context* ac, T0* C, T2 a1);
/* AP_DISPLAY_HELP_FLAG.initialize */
extern void T51f22(GE_context* ac, T0* C);
/* AP_PARSER.make_empty */
extern void T39f45(GE_context* ac, T0* C);
/* AP_ERROR_HANDLER.make_standard */
extern T0* T142c7(GE_context* ac);
/* AP_ERROR_HANDLER.std */
extern T0* T142f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T141c14(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].set_internal_cursor */
extern void T141f18(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_cursor */
extern T0* T141f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T553c8(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T555f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make_empty */
extern T0* T554c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].default_create */
extern T0* T555c3(GE_context* ac);
/* ET_ERROR_HANDLER.make_standard */
extern T0* T34c173(GE_context* ac);
/* ET_ERROR_HANDLER.make_standard */
extern void T34f173p1(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.set_ise_library_variable */
extern void T33f7(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.execution_environment */
extern T0* T33f3(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.ise_eiffel_value */
extern T0* T33f2(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.ise_library_value */
extern T0* T33f1(GE_context* ac, T0* C);
/* GEC.ise_variables */
extern T0* T24f23(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.default_create */
extern T0* T33c6(GE_context* ac);
/* KL_ARGUMENTS.set_program_name */
extern void T32f6(GE_context* ac, T0* C, T0* a1);
/* GEC.arguments */
extern T0* T24f17(GE_context* ac, T0* C);
/* KL_EXCEPTIONS.die */
extern void T38f2(GE_context* ac, T0* C, T6 a1);
/* GEC.exceptions */
extern T0* T24f19(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.set_exception_data */
extern void T20f16(GE_context* ac, T0* C, T6 a1, T1 a2, T6 a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T6 a11, T1 a12);
/* ISE_EXCEPTION_MANAGER.exception_from_data */
extern T0* T20f10(GE_context* ac, T0* C);
extern T1 T20f10ot1(T0* a1, T0** a2);
extern T1 T20f10ot2(T0* a1, T0** a2);
extern T1 T20f10ot3(T0* a1, T0** a2);
extern T1 T20f10ot4(T0* a1, T0** a2);
extern T1 T20f10ot5(T0* a1, T0** a2);
extern T1 T20f10ot6(T0* a1, T0** a2);
extern T1 T20f10ot7(T0* a1, T0** a2);
/* COM_FAILURE.set_exception_information */
extern void T100f15(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.ccom_hresult_to_string */
extern T0* T100f11(GE_context* ac, T0* C, T6 a1);
/* INTEGER_32.to_hex_string */
extern T0* T6f24(GE_context* ac, T6* C);
/* COM_FAILURE.set_hresult_code */
extern void T100f14(GE_context* ac, T0* C, T6 a1);
/* OPERATING_SYSTEM_FAILURE.set_error_code */
extern void T99f9(GE_context* ac, T0* C, T6 a1);
/* IO_FAILURE.set_error_code */
extern void T98f11(GE_context* ac, T0* C, T6 a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_signal_code */
extern void T97f9(GE_context* ac, T0* C, T6 a1);
/* INVARIANT_VIOLATION.set_is_entry */
extern void T96f9(GE_context* ac, T0* C, T1 a1);
/* ROUTINE_FAILURE.set_class_name */
extern void T91f10(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_routine_name */
extern void T91f9(GE_context* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_from_code */
extern T0* T20f12(GE_context* ac, T0* C, T6 a1);
/* SERIALIZATION_FAILURE.default_create */
extern T0* T120c6(GE_context* ac);
/* OLD_VIOLATION.default_create */
extern T0* T93c6(GE_context* ac);
/* COM_FAILURE.default_create */
extern T0* T100c12(GE_context* ac);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.default_create */
extern T0* T119c6(GE_context* ac);
/* MISMATCH_FAILURE.default_create */
extern T0* T117c6(GE_context* ac);
/* OPERATING_SYSTEM_FAILURE.default_create */
extern T0* T99c7(GE_context* ac);
/* IO_FAILURE.set_code */
extern void T98f9(GE_context* ac, T0* C, T6 a1);
/* IO_FAILURE.default_create */
extern T0* T98c8(GE_context* ac);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.default_create */
extern T0* T116c6(GE_context* ac);
/* VOID_ASSIGNED_TO_EXPANDED.default_create */
extern T0* T115c6(GE_context* ac);
/* EXTERNAL_FAILURE.default_create */
extern T0* T114c6(GE_context* ac);
/* CREATE_ON_DEFERRED.default_create */
extern T0* T113c6(GE_context* ac);
/* RESUMPTION_FAILURE.default_create */
extern T0* T112c6(GE_context* ac);
/* RESCUE_FAILURE.default_create */
extern T0* T111c6(GE_context* ac);
/* EIFFEL_RUNTIME_PANIC.set_code */
extern void T101f9(GE_context* ac, T0* C, T6 a1);
/* EIFFEL_RUNTIME_PANIC.code */
extern T6 T101f7(GE_context* ac, T0* C);
/* EIFFEL_RUNTIME_PANIC.default_create */
extern T0* T101c8(GE_context* ac);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.default_create */
extern T0* T97c7(GE_context* ac);
/* LOOP_INVARIANT_VIOLATION.default_create */
extern T0* T110c6(GE_context* ac);
/* VARIANT_VIOLATION.default_create */
extern T0* T109c6(GE_context* ac);
/* BAD_INSPECT_VALUE.default_create */
extern T0* T108c6(GE_context* ac);
/* ROUTINE_FAILURE.default_create */
extern T0* T91c8(GE_context* ac);
/* CHECK_VIOLATION.default_create */
extern T0* T107c6(GE_context* ac);
/* INVARIANT_VIOLATION.default_create */
extern T0* T96c7(GE_context* ac);
/* FLOATING_POINT_FAILURE.default_create */
extern T0* T106c6(GE_context* ac);
/* POSTCONDITION_VIOLATION.default_create */
extern T0* T105c6(GE_context* ac);
/* PRECONDITION_VIOLATION.default_create */
extern T0* T104c6(GE_context* ac);
/* NO_MORE_MEMORY.set_code */
extern void T95f10(GE_context* ac, T0* C, T6 a1);
/* NO_MORE_MEMORY.code */
extern T6 T95f7(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.no_memory_exception_object_cell */
extern T0* T20f7(GE_context* ac, T0* C);
/* CELL [NO_MORE_MEMORY].put */
extern T0* T28c2(GE_context* ac, T0* a1);
/* NO_MORE_MEMORY.default_create */
extern T0* T95c8(GE_context* ac);
/* VOID_TARGET.default_create */
extern T0* T89c6(GE_context* ac);
/* ISE_EXCEPTION_MANAGER.exception_data */
extern T0* T20f11(GE_context* ac, T0* C);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].put */
extern void T27f2(GE_context* ac, T0* C, T0* a1);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].put */
extern T0* T27c2(GE_context* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_data_cell */
extern T0* T20f6(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.once_raise */
extern void T20f15(GE_context* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.last_exception */
extern T0* T20f1(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.init_exception_manager */
extern void T20f14(GE_context* ac, T0* C);
/* CELL [NO_MORE_MEMORY].do_nothing */
extern void T28f3(GE_context* ac, T0* C);
/* CELL [detachable EXCEPTION].do_nothing */
extern void T25f3(GE_context* ac, T0* C);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].do_nothing */
extern void T27f3(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.unraisable_exceptions */
extern T0* T20f5(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].force */
extern void T26f37(GE_context* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].position */
extern T6 T26f22(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].deleted_position */
extern T6 T26f21(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].add_space */
extern void T26f39(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].accommodate */
extern void T26f40(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_indexes_map */
extern void T26f44(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_deleted_marks */
extern void T26f43(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_keys */
extern void T26f42(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_content */
extern void T26f41(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].put */
extern void T26f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_conflict */
extern void T26f47(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].found */
extern T1 T26f31(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].occupied */
extern T1 T26f29(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].empty_duplicate */
extern T0* T26f28(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].compare_objects */
extern void T26f46(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].soon_full */
extern T1 T26f20(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].not_found */
extern T1 T26f19(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].internal_search */
extern void T26f38(GE_context* ac, T0* C, T6 a1);
/* ISE_EXCEPTION_MANAGER.unignorable_exceptions */
extern T0* T20f4(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].do_nothing */
extern void T26f36(GE_context* ac, T0* C);
/* KL_DIRECTORY.dispose */
extern void T354f31(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.dispose */
extern void T323f28(GE_context* ac, T0* C);
/* MUTEX.dispose */
extern void T131f10(GE_context* ac, T0* C);
/* MUTEX.destroy */
extern void T131f13(GE_context* ac, T0* C);
/* MUTEX.eif_thr_mutex_destroy */
extern void T131f16(GE_context* ac, T0* C, T14 a1);
/* MUTEX.is_set */
extern T1 T131f3(GE_context* ac, T0* C);
/* PLATFORM.is_thread_capable */
extern T1 T545s2(GE_context* ac);
/* MANAGED_POINTER.dispose */
extern void T129f10(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.dispose */
extern void T31f60(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_close */
extern void T31f65(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_close */
extern void T31f70(GE_context* ac, T0* C, T14 a1);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].record */
extern void T1884f5(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T1839f12(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T1839f12p1(GE_context* ac, T0* C, T6 a1);
/* DS_BILINKABLE [INTEGER_32].forget_left */
extern void T1886f8(GE_context* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].forget_right */
extern void T1886f7(GE_context* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].put_right */
extern void T1886f6(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].attach_left */
extern void T1886f11(GE_context* ac, T0* C, T0* a1);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].item */
extern T0* T1885f4(GE_context* ac, T0* C, T6 a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].record */
extern void T1882f4(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].record */
extern void T1880f5(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.add */
extern void T1839f11(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.item */
extern T6 T1816f14(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.upper */
extern T6 T1839f6(GE_context* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.lower */
extern T6 T1839f7(GE_context* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.add */
extern void T1839f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_INSTRUCTION.set_arguments */
extern void T1671f9(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.set_arguments */
extern void T1504f11(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_arguments */
extern void T1282f31(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.set_arguments */
extern void T1281f14(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_arguments */
extern void T1279f15(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_EXPRESSION.set_arguments */
extern void T1187f12(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.set_arguments */
extern void T972f34(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.set_arguments */
extern void T756f27(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL.set_arguments */
extern void T350f6(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T309f31(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T308f31(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_arguments */
extern void T305f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T1504f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_INSTRUCTION.make */
extern T0* T1671c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T309f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_EXPRESSION.make */
extern T0* T1187c10(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T308f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T305f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CHARACTER_DATA.node_set_parent */
extern void T1494f4(GE_context* ac, T0* C, T0* a1);
/* XM_ATTRIBUTE.node_set_parent */
extern void T431f6(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.reset */
extern void T1289f35(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.reset */
extern void T1288f35(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.reset */
extern void T716f101(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.reset */
extern void T703f56(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.reset */
extern void T697f54(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].remove */
extern void T1562f15(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].keep_head */
extern void T1736f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].set_count */
extern void T1736f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_left */
extern void T1562f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_cursors_left */
extern void T1562f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_position */
extern void T1738f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].remove_last */
extern void T1562f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_last_cursors_after */
extern void T1562f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_next_cursor */
extern void T1738f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_after */
extern void T1738f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].remove */
extern void T1325f15(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_CLUSTER].keep_head */
extern void T1589f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_CLUSTER].set_count */
extern void T1589f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].move_left */
extern void T1325f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].move_cursors_left */
extern void T1325f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].set_position */
extern void T1591f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].remove_last */
extern void T1325f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].move_last_cursors_after */
extern void T1325f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].set_next_cursor */
extern void T1591f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].set_after */
extern void T1591f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].remove */
extern void T637f15(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].move_left */
extern void T637f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].move_cursors_left */
extern void T637f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].set_position */
extern void T1395f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].remove_last */
extern void T637f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].move_last_cursors_after */
extern void T637f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].set_next_cursor */
extern void T1395f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].set_after */
extern void T1395f7(GE_context* ac, T0* C);
/* XM_PROCESSING_INSTRUCTION.node_set_parent */
extern void T1493f6(GE_context* ac, T0* C, T0* a1);
/* XM_COMMENT.node_set_parent */
extern void T1492f5(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.node_set_parent */
extern void T156f24(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T1794f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_type */
extern void T1794f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T239f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T80f511(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_actual_argument_dynamic_types */
extern void T80f176(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.error_handler */
extern T0* T239f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_fatal_error */
extern void T239f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T1793f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_type */
extern void T1793f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_from_type_set */
extern void T336f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_tuple_label */
extern void T336f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T239f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T80f505(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f505ot1(T0* a1, T0** a2);
extern T1 T80f505ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_argument_dynamic_types */
extern void T80f509(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_feature */
extern void T336f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T336f15ot1(T0* a1, T0** a2);
extern T1 T336f15ot2(T0* a1, T0** a2);
extern T1 T336f15ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type */
extern void T1489f20(GE_context* ac, T0* C, T0* a1);
extern T1 T1489f20ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PRECURSOR.is_builtin_function_item */
extern T1 T328f32(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_function_item */
extern T1 T247f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin_procedure_call */
extern T1 T328f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_procedure_call */
extern T1 T247f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_from_type_set */
extern void T332f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_tuple_label */
extern void T332f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T239f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T80f504(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f504ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_result_dynamic_types */
extern void T80f508(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T332f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T332f16p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T332f16p1ot1(T0* a1, T0** a2);
extern T1 T332f16p1ot2(T0* a1, T0** a2);
extern T1 T332f16p1ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T1794f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T1793f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.propagate_can_be_void */
extern void T336f13(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.propagate_can_be_void */
extern void T332f15(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T1504f8(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T1504f8p1(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset_arguments */
extern void T1504f9(GE_context* ac, T0* C);
extern T1 T1504f9ot1(T0* a1, T0** a2);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.reset */
extern void T1693f14(GE_context* ac, T0* C);
extern T1 T1693f14ot1(T0* a1, T0** a2);
/* ET_ACTUAL_ARGUMENT_LIST.reset */
extern void T304f18(GE_context* ac, T0* C);
extern T1 T304f18ot1(T0* a1, T0** a2);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T1281f12(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.type */
extern T0* T1281f6(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T1281f12p1(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset_arguments */
extern void T1281f13(GE_context* ac, T0* C);
extern T1 T1281f13ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_INSTRUCTION.reset */
extern void T1279f13(GE_context* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.reset_arguments */
extern void T1279f14(GE_context* ac, T0* C);
extern T1 T1279f14ot1(T0* a1, T0** a2);
/* ET_CREATE_INSTRUCTION.reset */
extern void T1277f14(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.reset */
extern void T350f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.reset_arguments */
extern void T350f8(GE_context* ac, T0* C);
extern T1 T350f8ot1(T0* a1, T0** a2);
/* ET_CREATE_INSTRUCTION.type */
extern T0* T1277f6(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.reset */
extern void T1276f14(GE_context* ac, T0* C);
/* ET_LOOP_INSTRUCTION.reset */
extern void T1274f15(GE_context* ac, T0* C);
/* ET_LOOP_INSTRUCTION.until_expression */
extern T0* T1274f9(GE_context* ac, T0* C);
/* ET_VARIANT.reset */
extern void T985f7(GE_context* ac, T0* C);
/* ET_LOOP_INVARIANTS.reset */
extern void T926f11(GE_context* ac, T0* C);
/* ET_COMPOUND.reset */
extern void T356f13(GE_context* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.reset */
extern void T1273f7(GE_context* ac, T0* C);
/* ET_ASSIGNMENT.reset */
extern void T1272f7(GE_context* ac, T0* C);
extern T1 T1272f7ot1(T0* a1, T0** a2);
/* ET_ASSIGNER_INSTRUCTION.reset */
extern void T1271f17(GE_context* ac, T0* C);
extern T1 T1271f17ot1(T0* a1, T0** a2);
/* ET_ASSIGNER_INSTRUCTION.dummy_name */
extern T0* T1271f6(GE_context* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.reset */
extern void T904f10(GE_context* ac, T0* C);
/* ET_WHEN_PART_LIST.reset */
extern void T991f7(GE_context* ac, T0* C);
/* ET_WHEN_PART.reset */
extern void T988f4(GE_context* ac, T0* C);
/* ET_CHOICE_LIST.reset */
extern void T776f11(GE_context* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.expression */
extern T0* T904f6(GE_context* ac, T0* C);
/* ET_IF_INSTRUCTION.reset */
extern void T883f12(GE_context* ac, T0* C);
/* ET_ELSEIF_PART_LIST.reset */
extern void T834f7(GE_context* ac, T0* C);
/* ET_ELSEIF_PART.reset */
extern void T831f5(GE_context* ac, T0* C);
/* ET_ELSEIF_PART.expression */
extern T0* T831f3(GE_context* ac, T0* C);
/* ET_IF_INSTRUCTION.expression */
extern T0* T883f7(GE_context* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.reset */
extern void T822f7(GE_context* ac, T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T764f15(GE_context* ac, T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T764f15p1(GE_context* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset */
extern void T733f25(GE_context* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset_unfolded_form */
extern void T733f26(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.reset */
extern void T713f18(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T305f15(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T305f15p1(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T305f15p0(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset_arguments */
extern void T305f17(GE_context* ac, T0* C);
extern T1 T305f17ot1(T0* a1, T0** a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.process */
extern void T1504f7(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.process */
extern void T1281f11(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.process */
extern void T1279f12(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.process */
extern void T1277f13(GE_context* ac, T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.process */
extern void T1276f13(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.process */
extern void T1274f14(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT_ATTEMPT.process */
extern void T1273f6(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT.process */
extern void T1272f6(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.process */
extern void T1271f16(GE_context* ac, T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.process */
extern void T904f9(GE_context* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.process */
extern void T883f11(GE_context* ac, T0* C, T0* a1);
/* ET_DEBUG_INSTRUCTION.process */
extern void T822f6(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.process */
extern void T764f14(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.process */
extern void T733f24(GE_context* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.process */
extern void T713f17(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.process */
extern void T305f14(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1300f36(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1299f42(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1298f38(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1297f37(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1296f43(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1295f39(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_across_components */
extern void T1300f37(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_across_components */
extern void T1299f43(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_across_components */
extern void T1298f39(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_across_components */
extern void T1297f38(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_across_components */
extern void T1296f44(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_across_components */
extern void T1295f40(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_RANGE.reset */
extern void T1278f8(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.set_infix */
extern void T1263f47(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.tokens */
extern T0* T1263f9(GE_context* ac, T0* C);
/* ET_INFIX_NAME.set_infix */
extern void T1261f104(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.set_infix */
extern void T1260f71(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.tokens */
extern T0* T1260f35(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.set_infix */
extern void T1259f90(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.tokens */
extern T0* T1259f26(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.set_infix */
extern void T1192f71(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.set_infix */
extern void T750f86(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.tokens */
extern T0* T750f5(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.set_prefix */
extern void T1263f46(GE_context* ac, T0* C);
/* ET_INFIX_NAME.set_prefix */
extern void T1261f103(GE_context* ac, T0* C);
/* ET_INFIX_NAME.tokens */
extern T0* T1261f43(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.set_prefix */
extern void T1260f70(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.set_prefix */
extern void T1259f89(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.set_prefix */
extern void T1192f70(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.tokens */
extern T0* T1192f32(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.set_prefix */
extern void T750f85(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.reset */
extern void T1263f48(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.reset */
extern void T750f87(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.set_sign */
extern void T1230f71(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_sign */
extern void T1229f71(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_sign */
extern void T1228f71(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_sign */
extern void T1227f71(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_sign */
extern void T1226f71(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_type */
extern void T1230f76(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_type */
extern void T1229f76(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_type */
extern void T1228f76(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_type */
extern void T1227f76(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_type */
extern void T1226f76(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_cast_type */
extern void T1230f74(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_cast_type */
extern void T1229f74(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_cast_type */
extern void T1228f74(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_cast_type */
extern void T1227f74(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_cast_type */
extern void T1226f74(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.set_type */
extern void T1237f48(GE_context* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.set_type */
extern void T1236f48(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_type */
extern void T1223f50(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.set_cast_type */
extern void T1237f45(GE_context* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.set_cast_type */
extern void T1236f45(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_cast_type */
extern void T1223f46(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_stream */
extern void T614f295(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T614f302(GE_context* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.name */
extern T0* T206f16(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T614f302p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.new_file_buffer */
extern T0* T614f73(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_stream */
extern void T612f202(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T612f211(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T612f211p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.new_file_buffer */
extern T0* T612f55(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_stream */
extern void T611f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T611f298(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T611f298p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.new_file_buffer */
extern T0* T611f71(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_stream */
extern void T574f200(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T574f208(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T574f208p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.new_file_buffer */
extern T0* T574f46(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T614f296(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T614f296p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T614f296p0(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_action */
extern void T614f306(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.from_hexadecimal */
extern void T1366f10(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.hexadecimal_to_integer */
extern T6 T36f17(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_CHARACTER_ENTITY.string_ */
extern T0* T1366f7(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.to_utf8 */
extern T0* T1366f3(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.utf8 */
extern T0* T1366f6(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_ascii */
extern T1 T1366f2(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_valid */
extern T1 T1366f5(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_code */
extern T1 T1134f24(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.unicode */
extern T0* T1366f4(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.from_decimal */
extern void T1366f9(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.has_normalized_newline */
extern T1 T614f203(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_substring */
extern T0* T614f183(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_PE_ENTITY_DEF.text_count */
extern T6 T614f182(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.system_literal_text */
extern T0* T614f164(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_item */
extern T2 T614f209(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T614f123(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T614f123p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_line_column */
extern void T614f310(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text */
extern T0* T614f107(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.pop_start_condition */
extern void T614f309(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition */
extern void T614f307(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_last_token */
extern void T614f308(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_eof_action */
extern void T614f305(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.wrap */
extern T1 T614f101(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_refill_input_buffer */
extern void T614f304(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_null_trans_state */
extern T6 T614f100(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_previous_state */
extern T6 T614f99(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.terminate */
extern void T614f303(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T612f203(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T612f203p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_action */
extern void T612f217(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.has_normalized_newline */
extern T1 T612f183(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_substring */
extern T0* T612f163(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER_DTD.text_count */
extern T6 T612f162(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.system_literal_text */
extern T0* T612f144(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_item */
extern T2 T612f197(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.normalized_newline */
extern T0* T612f106(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_line_column */
extern void T612f223(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text */
extern T0* T612f80(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.pop_start_condition */
extern void T612f222(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition */
extern void T612f218(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_eof_action */
extern void T612f216(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.wrap */
extern T1 T612f68(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_refill_input_buffer */
extern void T612f215(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_null_trans_state */
extern T6 T612f67(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_previous_state */
extern T6 T612f66(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.fatal_error */
extern void T612f214(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.terminate */
extern void T612f213(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_last_token */
extern void T612f212(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T611f292(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T611f292p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_action */
extern void T611f301(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.has_normalized_newline */
extern T1 T611f200(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_substring */
extern T0* T611f180(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_ENTITY_DEF.text_count */
extern T6 T611f179(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.system_literal_text */
extern T0* T611f161(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_item */
extern T2 T611f207(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T611f120(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T611f120p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_line_column */
extern void T611f306(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text */
extern T0* T611f104(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.pop_start_condition */
extern void T611f305(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition */
extern void T611f302(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.set_last_token */
extern void T611f304(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_eof_action */
extern void T611f300(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.terminate */
extern void T611f303(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.wrap */
extern T1 T611f98(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_refill_input_buffer */
extern void T611f299(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_null_trans_state */
extern T6 T611f97(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_previous_state */
extern T6 T611f96(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.read_token */
extern void T574f201(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_execute_action */
extern void T574f212(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.has_normalized_newline */
extern T1 T574f181(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.text_substring */
extern T0* T574f161(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER.text_count */
extern T6 T574f160(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.system_literal_text */
extern T0* T574f142(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.text_item */
extern T2 T574f195(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.normalized_newline */
extern T0* T574f101(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_set_line_column */
extern void T574f220(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.text */
extern T0* T574f75(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.pop_start_condition */
extern void T574f219(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.set_start_condition */
extern void T574f221(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.push_start_condition */
extern void T574f213(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.set_last_token */
extern void T574f218(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_execute_eof_action */
extern void T574f211(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.terminate */
extern void T574f217(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.wrap */
extern T1 T574f63(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_refill_input_buffer */
extern void T574f210(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_null_trans_state */
extern T6 T574f62(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_previous_state */
extern T6 T574f61(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.fatal_error */
extern void T574f209(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T614f298(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition_dtd_ignore */
extern void T612f205(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T611f294(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T574f203(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_encoding */
extern void T614f299(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.set_encoding */
extern void T1207f31(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_encoding */
extern void T612f206(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_encoding */
extern void T611f295(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_encoding */
extern void T574f204(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_from_resolver */
extern void T614f300(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_from_resolver */
extern void T612f207(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_from_resolver */
extern void T611f296(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T574f205(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.close_input */
extern void T614f297(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.close_input */
extern void T612f204(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.close_input */
extern void T611f293(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.close_input */
extern void T574f202(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.reset */
extern void T1262f8(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.consume */
extern void T464f167(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assembly */
extern void T284f6(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gaaaa_error */
extern void T282f302(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_assembly_error */
extern void T282f354(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.make_gaaaa */
extern T0* T1649c14(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T282f69(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gaaaa_error */
extern void T34f301(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_assembly_error */
extern void T34f344(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T34f68(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.error_handler */
extern T0* T284f2(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.consume */
extern void T231f189(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_gac_assembly */
extern void T284f7(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.consume */
extern void T218f175(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.consume */
extern void T199f167(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.preparse */
extern void T464f168(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.preparse */
extern void T231f190(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.preparse */
extern void T218f176(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.preparse */
extern void T199f168(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.import_classes */
extern void T464f169(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_kernel_class */
extern void T464f181(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_imported_class */
extern void T485f85(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_imported_class */
extern T1 T485f41(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].has */
extern T1 T1340f13(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.is_declared_locally */
extern T1 T485f31(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T464f180(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.native_array_class_name */
extern T0* T82f808(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.import_classes */
extern void T231f191(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.import_kernel_class */
extern void T231f203(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.import_kernel_classes */
extern void T231f202(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.import_classes */
extern void T218f177(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.import_kernel_class */
extern void T218f189(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T218f188(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.import_classes */
extern void T199f169(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.import_kernel_class */
extern void T199f182(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T199f181(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T464f170(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T464f170ac1(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T467f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_DOTNET_ASSEMBLIES.do_all */
extern void T463f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].item */
extern T0* T1337f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].force_last */
extern void T486f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].slots_put */
extern void T486f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_UNIVERSE].clashes_put */
extern void T486f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_UNIVERSE].slots_item */
extern T6 T486f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].hash_position */
extern T6 T486f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].resize */
extern void T486f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].clashes_resize */
extern void T486f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].special_integer_ */
extern T0* T486f33(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].key_storage_resize */
extern void T486f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_resize */
extern void T486f59(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].aliased_resized_area */
extern T0* T1344f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_UNIVERSE].aliased_resized_area */
extern T0* T1342f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].key_storage_item */
extern T0* T486f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_item */
extern T0* T486f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].clashes_item */
extern T6 T486f17(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].slots_resize */
extern void T486f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].new_modulus */
extern T6 T486f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].new_capacity */
extern T6 T486f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_put */
extern void T486f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].force */
extern void T1344f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_UNIVERSE].fill_with */
extern void T1342f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_UNIVERSE].extend */
extern void T1342f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].search_position */
extern void T486f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].key_equality_tester */
extern T0* T486f25(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].unset_found_item */
extern void T486f47(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].has */
extern T1 T486f24(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.add_universe_recursive */
extern void T231f192(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.add_universe_recursive */
extern T0* T231f192ac1(GE_context* ac, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T218f178(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T218f178ac1(GE_context* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T199f170(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T199f170ac1(GE_context* ac, T0* a1);
/* ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T464f171(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T464f171ac1(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].force_last */
extern void T462f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_put */
extern void T462f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_put */
extern void T462f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_item */
extern T6 T462f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].hash_position */
extern T6 T462f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].resize */
extern void T462f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_resize */
extern void T462f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].special_integer_ */
extern T0* T462f26(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_storage_resize */
extern void T462f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_resize */
extern void T462f45(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1334f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1335f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_storage_item */
extern T0* T462f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_item */
extern T0* T462f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_item */
extern T6 T462f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_resize */
extern void T462f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_modulus */
extern T6 T462f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T462f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_put */
extern void T462f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].force */
extern void T1334f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DOTNET_ASSEMBLY].fill_with */
extern void T1335f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_ASSEMBLY].extend */
extern void T1335f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].search_position */
extern void T462f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_equality_tester */
extern T0* T462f24(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].unset_found_item */
extern void T462f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].has */
extern T1 T462f29(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T231f193(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T231f193ac1(GE_context* ac, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T218f179(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T218f179ac1(GE_context* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T199f171(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T199f171ac1(GE_context* ac, T0* a1);
/* ET_LIBRARY.dotnet_assemblies_do_if */
extern void T474f182(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_if */
extern void T198f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.dotnet_assemblies_do_if */
extern void T190f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.dotnet_assemblies_do_if */
extern void T71f259(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.dotnet_assemblies_do_if */
extern void T65f264(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.dotnet_assemblies_do_if */
extern void T62f268(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.clusters_do_explicit */
extern void T474f183(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTERS.do_explicit */
extern void T1133f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.do_recursive */
extern void T1158f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].item */
extern T0* T1499f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_LIBRARY.clusters_do_explicit */
extern void T190f208(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.clusters_do_explicit */
extern void T71f260(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.do_explicit */
extern void T215f11(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.do_recursive */
extern void T215f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.clusters_do_explicit */
extern void T65f265(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.clusters_do_explicit */
extern void T62f269(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.do_explicit */
extern void T436f15(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.do_recursive */
extern void T436f16(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_scm_read_mapping */
extern void T1157f67(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_scm_read_mapping */
extern void T435f71(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_scm_read_mapping */
extern void T216f65(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_scm_write_mapping */
extern void T1157f68(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_scm_write_mapping */
extern void T435f72(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_scm_write_mapping */
extern void T216f66(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_preparsed */
extern void T1157f74(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_preparsed */
extern void T435f78(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_preparsed */
extern void T216f68(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.add_recursive_cluster */
extern void T1157f75(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.new_recursive_cluster */
extern T0* T1157f41(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_implicit */
extern void T1157f79(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_file_rules */
extern void T1157f78(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.string_ */
extern T0* T1157f40(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.add_recursive_cluster */
extern void T435f79(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.add_subcluster */
extern void T435f82(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.new_recursive_cluster */
extern T0* T435f42(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_use_obsolete_syntax */
extern void T435f84(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_implicit */
extern void T435f83(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.string_ */
extern T0* T435f41(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.add_recursive_cluster */
extern void T216f69(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.new_recursive_cluster */
extern T0* T216f48(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_use_obsolete_syntax */
extern void T216f71(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_implicit */
extern void T216f70(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.name */
extern T0* T216f22(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.string_ */
extern T0* T216f40(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.set_provider_constraint */
extern void T1157f72(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_provider_constraint */
extern void T1158f12(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_provider_constraint */
extern void T435f80(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_provider_constraint */
extern void T436f18(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_provider_constraint */
extern void T216f63(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_provider_constraint */
extern void T215f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_dependant_constraint */
extern void T1157f73(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_dependant_constraint */
extern void T1158f13(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_dependant_constraint */
extern void T435f81(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_dependant_constraint */
extern void T436f19(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_dependant_constraint */
extern void T216f64(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_dependant_constraint */
extern void T215f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.process */
extern void T1157f69(GE_context* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.process_cluster */
extern void T279f3(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.process_cluster */
extern void T269f177(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster */
extern void T269f178(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T269f178ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T269f178ac2(GE_context* ac, T0* a1);
/* [attached] PREDICATE [[attached] TUPLE [ET_CLASS]].set_rout_disp_final */
extern void T500f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_CLASS.is_in_group */
extern T1 T83f176(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_clusters */
extern void T269f182(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.build_dependant_constraint */
extern void T269f181(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make */
extern T0* T1216c17(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].set_key_equality_tester */
extern void T1583f35(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_equality_tester */
extern T0* T1216f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_map */
extern T0* T1583c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_with_equality_testers */
extern void T1583f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_sparse_container */
extern void T1583f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].set_internal_cursor */
extern void T1583f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].new_cursor */
extern T0* T1583f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].make */
extern T0* T1732c9(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].unset_found_item */
extern void T1583f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_slots */
extern void T1583f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].new_modulus */
extern T6 T1583f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_clashes */
extern void T1583f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_key_storage */
extern void T1583f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_item_storage */
extern void T1583f51(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].make */
extern T0* T1771f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].make_empty */
extern T0* T1768c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].default_create */
extern T0* T1771c2(GE_context* ac);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make_with_pathnames */
extern T0* T1216c16(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].put_last */
extern void T1583f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_put */
extern void T1583f44(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_put */
extern void T1583f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_put */
extern void T1583f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_item */
extern T6 T1583f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].compress */
extern void T1583f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].hash_position */
extern T6 T1583f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_wipe_out */
extern void T1583f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_wipe_out */
extern void T1583f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_keep_head */
extern void T1583f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_keep_head */
extern void T1583f47(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].keep_head */
extern void T1768f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].set_count */
extern void T1768f8(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].move_all_cursors */
extern void T1583f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_position */
extern void T1732f12(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_item */
extern T0* T1583f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_item */
extern T0* T1583f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_item */
extern T6 T1583f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_put */
extern void T1583f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].force */
extern void T1771f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_WILDCARD].fill_with */
extern void T1768f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_WILDCARD].extend */
extern void T1768f9(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].search_position */
extern void T1583f39(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.compile */
extern T0* T1582c16(GE_context* ac, T0* a1, T1 a2);
/* LX_FULL_DFA.make */
extern T0* T1766c37(GE_context* ac, T0* a1);
/* LX_FULL_DFA.build */
extern void T1766f40(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_accept_table */
extern void T1766f46(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].first */
extern T0* T1813f6(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_nxt_table */
extern void T1766f45(GE_context* ac, T0* C);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].target */
extern T0* T1842f6(GE_context* ac, T0* C, T6 a1);
/* ARRAY [detachable LX_DFA_STATE].item */
extern T0* T1903f4(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.is_accepting */
extern T1 T1836f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].is_empty */
extern T1 T1813f11(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_transitions */
extern void T1766f44(GE_context* ac, T0* C, T0* a1);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].set_target */
extern void T1842f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [detachable LX_DFA_STATE].put */
extern void T1903f7(GE_context* ac, T0* C, T0* a1, T6 a2);
/* LX_SYMBOL_PARTITIONS.previous_symbol */
extern T6 T1839f4(GE_context* ac, T0* C, T6 a1);
/* LX_FULL_DFA.new_state */
extern T0* T1766f36(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_STATE.set_id */
extern void T1836f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].put_last */
extern void T1838f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].force */
extern void T1900f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_DFA_STATE].fill_with */
extern void T1899f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_DFA_STATE].extend */
extern void T1899f9(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_STATE.is_equal */
extern T1 T1836f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].is_equal */
extern T1 T1837f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].any_ */
extern T0* T1837f17(GE_context* ac, T0* C);
/* LX_DFA_STATE.any_ */
extern T0* T1836f14(GE_context* ac, T0* C);
/* LX_DFA_STATE.new_state */
extern T0* T1836f9(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.make */
extern T0* T1836c16(GE_context* ac, T0* a1, T6 a2, T6 a3);
extern T1 T1836f16ot1(T0* a1, T0** a2);
/* LX_RULE.set_useful */
extern void T1824f22(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [LX_RULE].sort */
extern void T1813f17(GE_context* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_RULE].sort */
extern void T1892f3(GE_context* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_RULE].sort_with_comparator */
extern void T1892f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_BUBBLE_SORTER [LX_RULE].subsort_with_comparator */
extern void T1892f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [LX_RULE].replace */
extern void T1813f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].less_than */
extern T1 T1918f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].detachable_less_than */
extern T1 T1918f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].attached_less_than */
extern T1 T1918f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* LX_RULE.is_less */
extern T1 T1824f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].item */
extern T0* T1813f10(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.rule_sorter */
extern T0* T1836f7(GE_context* ac, T0* C);
/* DS_BUBBLE_SORTER [LX_RULE].make */
extern T0* T1892c2(GE_context* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].make */
extern T0* T1918c4(GE_context* ac);
/* DS_ARRAYED_LIST [LX_NFA_STATE].sort */
extern void T1837f25(GE_context* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].sort */
extern void T1890f3(GE_context* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].sort_with_comparator */
extern void T1890f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].subsort_with_comparator */
extern void T1890f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [LX_NFA_STATE].replace */
extern void T1837f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].less_than */
extern T1 T1921f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].detachable_less_than */
extern T1 T1921f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].attached_less_than */
extern T1 T1921f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* LX_NFA_STATE.is_less */
extern T1 T1845f9(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_STATE.bubble_sorter */
extern T0* T1836f8(GE_context* ac, T0* C);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].make */
extern T0* T1890c2(GE_context* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].make */
extern T0* T1921c4(GE_context* ac);
/* DS_ARRAYED_LIST [LX_NFA_STATE].last */
extern T0* T1837f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].is_empty */
extern T1 T1837f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].force_last */
extern void T1813f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].force */
extern void T1872f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_RULE].fill_with */
extern void T1835f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_RULE].extend */
extern void T1835f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].resize */
extern void T1813f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].aliased_resized_area */
extern T0* T1872f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_RULE].aliased_resized_area */
extern T0* T1835f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].new_capacity */
extern T6 T1813f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].extendible */
extern T1 T1813f8(GE_context* ac, T0* C, T6 a1);
/* LX_NFA_STATE.is_accepting_head */
extern T1 T1845f6(GE_context* ac, T0* C);
/* LX_NFA_STATE.has_transition */
extern T1 T1845f8(GE_context* ac, T0* C);
/* LX_NFA_STATE.is_accepting */
extern T1 T1845f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].has */
extern T1 T1837f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].force_last */
extern void T1837f23(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].force */
extern void T1896f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_NFA_STATE].fill_with */
extern void T1894f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_NFA_STATE].extend */
extern void T1894f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].resize */
extern void T1837f28(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].aliased_resized_area */
extern T0* T1896f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_NFA_STATE].aliased_resized_area */
extern T0* T1894f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].new_capacity */
extern T6 T1837f12(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].extendible */
extern T1 T1837f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].make */
extern T0* T1813c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].set_internal_cursor */
extern void T1813f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].new_cursor */
extern T0* T1813f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_RULE].make */
extern T0* T1873c4(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].make */
extern T0* T1872f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_RULE].make_empty */
extern void T1835f7(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_RULE].make_empty */
extern T0* T1835c7(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].default_create */
extern T0* T1872c3(GE_context* ac);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].make */
extern T0* T1842c7(GE_context* ac, T6 a1, T6 a2);
/* KL_ARRAY_ROUTINES [detachable LX_DFA_STATE].default_create */
extern T0* T1904c1(GE_context* ac);
/* ARRAY [detachable LX_DFA_STATE].make_filled */
extern T0* T1903c5(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable LX_DFA_STATE].make_filled_area */
extern void T1903f6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_DFA_STATE].make_filled */
extern T0* T1899c8(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [LX_DFA_STATE].make_empty */
extern void T1899f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_DFA_STATE].make_empty */
extern T0* T1899c5(GE_context* ac, T6 a1);
/* LX_DFA_STATE.maximum_symbol */
extern T6 T1836f13(GE_context* ac, T0* C);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].upper */
extern T6 T1842f5(GE_context* ac, T0* C);
/* LX_DFA_STATE.minimum_symbol */
extern T6 T1836f12(GE_context* ac, T0* C);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].lower */
extern T6 T1842f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put_last */
extern void T1837f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].item */
extern T0* T1837f13(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].make */
extern T0* T1837c19(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].set_internal_cursor */
extern void T1837f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].new_cursor */
extern T0* T1837f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].make */
extern T0* T1897c9(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].make */
extern T0* T1896f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_NFA_STATE].make_empty */
extern T0* T1894c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].default_create */
extern T0* T1896c3(GE_context* ac);
/* LX_SYMBOL_PARTITIONS.is_representative */
extern T1 T1839f8(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.partition */
extern void T1836f18(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T1839f10(GE_context* ac, T0* C);
/* ARRAY [BOOLEAN].clear_all */
extern void T1089f8(GE_context* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T1839f10p1(GE_context* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].put_left */
extern void T1886f9(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].attach_right */
extern void T1886f10(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].put */
extern void T1886f5(GE_context* ac, T0* C, T6 a1);
/* LX_FULL_DFA.resize */
extern void T1766f49(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].resize */
extern void T1838f10(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].aliased_resized_area */
extern T0* T1900f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_DFA_STATE].aliased_resized_area */
extern T0* T1899f4(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.capacity */
extern T6 T1839f5(GE_context* ac, T0* C);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].count */
extern T6 T1885f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_DFA_STATE].item */
extern T0* T1838f7(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.make */
extern T0* T1839c9(GE_context* ac, T6 a1, T6 a2);
/* LX_SYMBOL_PARTITIONS.make */
extern void T1839f9p1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].put */
extern void T1885f7(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].make_filled */
extern T0* T1885c6(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].make_filled_area */
extern void T1885f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].make_filled */
extern T0* T1887c4(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].fill_with */
extern void T1887f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].extend */
extern void T1887f8(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].make_empty */
extern void T1887f6(GE_context* ac, T0* C, T6 a1);
/* DS_BILINKABLE [INTEGER_32].make */
extern T0* T1886c4(GE_context* ac, T6 a1);
/* LX_FULL_DFA.put_eob_state */
extern void T1766f39(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].force_first */
extern void T1813f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].put */
extern void T1813f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [LX_RULE].move_cursors_right */
extern void T1813f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_RULE].set_position */
extern void T1873f5(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].move_right */
extern void T1813f20(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [LX_RULE].put_last */
extern void T1813f19(GE_context* ac, T0* C, T0* a1);
/* LX_RULE.make_default */
extern T0* T1824c14(GE_context* ac, T6 a1);
/* LX_RULE.dummy_action */
extern T0* T1824f11(GE_context* ac, T0* C);
/* LX_ACTION.make */
extern T0* T1889c2(GE_context* ac, T0* a1);
/* LX_RULE.dummy_pattern */
extern T0* T1824f12(GE_context* ac, T0* C);
/* LX_NFA.make_epsilon */
extern T0* T1821c12(GE_context* ac, T1 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put_first */
extern void T1837f21(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put */
extern void T1837f27(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [LX_NFA_STATE].move_cursors_right */
extern void T1837f31(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_position */
extern void T1897f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].move_right */
extern void T1837f30(GE_context* ac, T0* C, T6 a1, T6 a2);
/* LX_NFA_STATE.set_transition */
extern void T1845f11(GE_context* ac, T0* C, T0* a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].make */
extern T0* T1882c3(GE_context* ac, T0* a1);
/* LX_NFA_STATE.make */
extern T0* T1845c10(GE_context* ac, T1 a1);
/* LX_FULL_DFA.initialize */
extern void T1766f38(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_DFA.initialize_dfa */
extern void T1766f43(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* LX_FULL_DFA.put_start_condition */
extern void T1766f48(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.start_state */
extern T0* T1821f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].first */
extern T0* T1837f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA].item */
extern T0* T1843f7(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.item */
extern T0* T1814f9(GE_context* ac, T0* C, T6 a1);
/* LX_FULL_DFA.set_nfa_state_ids */
extern void T1766f47(GE_context* ac, T0* C, T0* a1);
/* LX_NFA_STATE.set_id */
extern void T1845f14(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].force */
extern void T1844f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_put */
extern void T1844f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_put */
extern void T1844f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_put */
extern void T1844f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_item */
extern T6 T1844f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_item */
extern T6 T1844f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].hash_position */
extern T6 T1844f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].resize */
extern void T1844f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_resize */
extern void T1844f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].special_integer_ */
extern T0* T1844f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_resize */
extern void T1844f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_resize */
extern void T1844f46(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].aliased_resized_area */
extern T0* T1820f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_NFA].aliased_resized_area */
extern T0* T1822f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_item */
extern T6 T1844f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_resize */
extern void T1844f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_modulus */
extern T6 T1844f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_capacity */
extern T6 T1844f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_put */
extern void T1844f39(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_NFA].force */
extern void T1820f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_NFA].fill_with */
extern void T1822f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_NFA].extend */
extern void T1822f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].search_position */
extern void T1844f36(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [INTEGER_32].test */
extern T1 T616f1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].unset_found_item */
extern void T1844f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item */
extern T0* T1844f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_item */
extern T0* T1844f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].has */
extern T1 T1844f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make */
extern T0* T1844c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_with_equality_testers */
extern void T1844f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_sparse_container */
extern void T1844f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].set_internal_cursor */
extern void T1844f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_cursor */
extern T0* T1844f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32].make */
extern T0* T1907c4(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_slots */
extern void T1844f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_clashes */
extern void T1844f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_key_storage */
extern void T1844f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_item_storage */
extern void T1844f49(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].make */
extern T0* T1820f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_NFA].make_empty */
extern T0* T1822c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].default_create */
extern T0* T1820c3(GE_context* ac);
/* detachable KL_EQUALITY_TESTER [INTEGER_32].default_create */
extern T0* T616c2(GE_context* ac);
/* DS_ARRAYED_LIST [LX_DFA_STATE].make */
extern T0* T1838c8(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].set_internal_cursor */
extern void T1838f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].new_cursor */
extern T0* T1838f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE].make */
extern T0* T1901c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].make */
extern T0* T1900f1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].default_create */
extern T0* T1900c3(GE_context* ac);
/* LX_EQUIVALENCE_CLASSES.to_array */
extern T0* T1823f6(GE_context* ac, T0* C, T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.lower */
extern T6 T1823f5(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.upper */
extern T6 T1823f4(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.built */
extern T1 T1823f3(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_eof_rules */
extern void T1766f42(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ARRAY [LX_RULE].put */
extern void T1834f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [LX_RULE].make_filled */
extern T0* T1834c4(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [LX_RULE].make_filled_area */
extern void T1834f6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_RULE].make_filled */
extern T0* T1835c5(GE_context* ac, T0* a1, T6 a2);
/* LX_FULL_DFA.build_rules */
extern void T1766f41(GE_context* ac, T0* C, T0* a1);
/* KL_ARRAY_ROUTINES [LX_RULE].make_empty_with_lower */
extern T0* T1840f1(GE_context* ac, T0* C, T6 a1);
/* ARRAY [LX_RULE].make_from_array */
extern T0* T1834c8(GE_context* ac, T0* a1);
/* ARRAY [LX_RULE].set_area */
extern void T1834f10(GE_context* ac, T0* C, T0* a1);
/* KL_ARRAY [LX_RULE].new_rebase */
extern void T1902f5(GE_context* ac, T0* C, T6 a1);
/* KL_ARRAY [LX_RULE].make_empty */
extern T0* T1902c4(GE_context* ac);
/* KL_ARRAY [LX_RULE].make_empty_area */
extern void T1902f6(GE_context* ac, T0* C, T6 a1);
/* ARRAY [LX_RULE].make_empty */
extern T0* T1834c7(GE_context* ac);
/* ARRAY [LX_RULE].make_empty_area */
extern void T1834f9(GE_context* ac, T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [LX_RULE].default_create */
extern T0* T1840c2(GE_context* ac);
/* LX_START_CONDITIONS.names */
extern T0* T1814f7(GE_context* ac, T0* C);
/* LX_START_CONDITIONS.first */
extern T0* T1814f6(GE_context* ac, T0* C);
/* KL_ARRAY_ROUTINES [STRING_8].make_empty_with_lower */
extern T0* T1874f1(GE_context* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].make_from_array */
extern T0* T144c18(GE_context* ac, T0* a1);
/* KL_ARRAY [STRING_8].new_rebase */
extern void T1924f5(GE_context* ac, T0* C, T6 a1);
/* KL_ARRAY [STRING_8].make_empty */
extern T0* T1924c4(GE_context* ac);
/* KL_ARRAY [STRING_8].make_empty_area */
extern void T1924f6(GE_context* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].make_empty */
extern T0* T144c17(GE_context* ac);
/* LX_START_CONDITIONS.string_array_routines */
extern T0* T1814f11(GE_context* ac, T0* C);
/* KL_ARRAY_ROUTINES [STRING_8].default_create */
extern T0* T1874c2(GE_context* ac);
/* LX_WILDCARD_PARSER.parse_string */
extern void T1764f222(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.parse */
extern void T1764f226(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_pop_last_value */
extern void T1764f239(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_push_error_value */
extern void T1764f238(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_do_action */
extern void T1764f237(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_character_to_string */
extern T0* T1764f172(GE_context* ac, T0* C, T6 a1, T0* a2);
/* LX_WILDCARD_PARSER.new_symbol_nfa */
extern T0* T1764f217(GE_context* ac, T0* C, T6 a1);
/* LX_NFA.make_symbol */
extern T0* T1821c13(GE_context* ac, T6 a1, T1 a2);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].make */
extern T0* T1884c4(GE_context* ac, T6 a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].force_new */
extern void T1817f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].key_storage_put */
extern void T1817f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].item_storage_put */
extern void T1817f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].slots_put */
extern void T1817f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].clashes_put */
extern void T1817f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].slots_item */
extern T6 T1817f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].hash_position */
extern T6 T1817f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].clashes_item */
extern T6 T1817f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].resize */
extern void T1817f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].clashes_resize */
extern void T1817f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].special_integer_ */
extern T0* T1817f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].key_storage_resize */
extern void T1817f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].item_storage_resize */
extern void T1817f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].key_storage_item */
extern T0* T1817f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].slots_resize */
extern void T1817f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].new_modulus */
extern T6 T1817f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].new_capacity */
extern T6 T1817f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].unset_found_item */
extern void T1817f47(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.add */
extern void T1823f11(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.put */
extern void T1816f19(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.force_last */
extern void T1816f22(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.resize */
extern void T1816f23(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.new_capacity */
extern T6 T1816f13(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.extendible */
extern T1 T1816f11(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.last */
extern T6 T1816f12(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.is_empty */
extern T1 T1816f10(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.has */
extern T1 T1816f9(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.arrayed_has */
extern T1 T1816f15(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.make */
extern T0* T1816c18(GE_context* ac, T6 a1);
/* LX_SYMBOL_CLASS.set_internal_cursor */
extern void T1816f21(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.new_cursor */
extern T0* T1816f16(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].found_item */
extern T0* T1817f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].item_storage_item */
extern T0* T1817f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].found */
extern T1 T1817f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].search */
extern void T1817f43(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].search_position */
extern void T1817f45(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_epsilon_nfa */
extern T0* T1764f171(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.append_character_set_to_character_class */
extern T0* T1764f170(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.report_negative_range_in_character_class_error */
extern void T1764f272(GE_context* ac, T0* C);
/* UT_ERROR_HANDLER.report_error */
extern void T132f7(GE_context* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error_message */
extern void T132f8(GE_context* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.message */
extern T0* T132f5(GE_context* ac, T0* C, T0* a1);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.make */
extern T0* T1864c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.filename */
extern T0* T1764f190(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T1818f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T1819f4(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_character_to_character_class */
extern T0* T1764f169(GE_context* ac, T0* C, T6 a1, T0* a2);
/* LX_WILDCARD_PARSER.new_character_class */
extern T0* T1764f168(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.set_negated */
extern void T1816f20(GE_context* ac, T0* C, T1 a1);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].force */
extern void T1818f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_SYMBOL_CLASS].fill_with */
extern void T1819f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_SYMBOL_CLASS].extend */
extern void T1819f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].force */
extern void T1817f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* LX_WILDCARD_PARSER.new_nfa_from_character_class */
extern T0* T1764f167(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.sort */
extern void T1816f24(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.arrayed_sort */
extern void T1816f25(GE_context* ac, T0* C, T0* a1);
/* DS_SHELL_SORTER [INTEGER_32].sort */
extern void T1917f3(GE_context* ac, T0* C, T0* a1);
/* DS_SHELL_SORTER [INTEGER_32].sort_with_comparator */
extern void T1917f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_SHELL_SORTER [INTEGER_32].subsort_with_comparator */
extern void T1917f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* LX_SYMBOL_CLASS.replace */
extern void T1816f27(GE_context* ac, T0* C, T6 a1, T6 a2);
/* LX_SYMBOL_CLASS.sorter */
extern T0* T1816f17(GE_context* ac, T0* C);
/* DS_SHELL_SORTER [INTEGER_32].make */
extern T0* T1917c2(GE_context* ac, T0* a1);
/* LX_WILDCARD_PARSER.new_symbol_class_nfa */
extern T0* T1764f165(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.make_symbol_class */
extern T0* T1821c6(GE_context* ac, T0* a1, T1 a2);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].make */
extern T0* T1880c4(GE_context* ac, T0* a1, T0* a2);
/* LX_WILDCARD_PARSER.question_character_class */
extern T0* T1764f164(GE_context* ac, T0* C);
/* LX_NFA.build_optional */
extern void T1821f11(GE_context* ac, T0* C);
/* LX_NFA_STATE.set_epsilon_transition */
extern void T1845f12(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.final_state */
extern T0* T1821f5(GE_context* ac, T0* C);
/* LX_NFA.build_positive_closure */
extern void T1821f10(GE_context* ac, T0* C);
/* LX_NFA.build_closure */
extern void T1821f9(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.new_nfa_from_character */
extern T0* T1764f163(GE_context* ac, T0* C, T6 a1);
/* LX_NFA.build_concatenation */
extern void T1821f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].append_last */
extern void T1837f24(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].extend_last */
extern void T1837f29(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].forth */
extern void T1897f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_forth */
extern void T1837f33(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].add_traversing_cursor */
extern void T1837f34(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_next_cursor */
extern void T1897f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].remove_traversing_cursor */
extern void T1837f35(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].item */
extern T0* T1897f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_item */
extern T0* T1837f15(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].after */
extern T1 T1897f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].start */
extern void T1897f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_start */
extern void T1837f32(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_after */
extern void T1897f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].off */
extern T1 T1897f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].before */
extern T1 T1897f8(GE_context* ac, T0* C);
/* LX_NFA.build_union */
extern void T1821f7(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.report_unrecognized_rule_error */
extern void T1764f252(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.make */
extern T0* T1826c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_rule */
extern void T1764f251(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.add_nfa_to_all */
extern void T1814f13(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITION.put_nfa */
extern void T1841f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].force_last */
extern void T1843f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].resize */
extern void T1843f13(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].new_capacity */
extern T6 T1843f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].extendible */
extern T1 T1843f8(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.add_nfa_to_non_exclusive */
extern void T1814f15(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.is_empty */
extern T1 T1814f8(GE_context* ac, T0* C);
/* LX_DESCRIPTION.set_variable_trail_context */
extern void T1765f35(GE_context* ac, T0* C, T1 a1);
/* LX_RULE.set_column_count */
extern void T1824f21(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_line_count */
extern void T1824f20(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_trail_count */
extern void T1824f19(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_head_count */
extern void T1824f18(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_trail_context */
extern void T1824f17(GE_context* ac, T0* C, T1 a1);
/* LX_RULE.set_line_nb */
extern void T1824f16(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_pattern */
extern void T1824f15(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.set_accepted_rule */
extern void T1821f14(GE_context* ac, T0* C, T0* a1);
/* LX_NFA_STATE.set_accepted_rule */
extern void T1845f13(GE_context* ac, T0* C, T0* a1);
/* LX_DESCRIPTION.create_equiv_classes */
extern void T1765f34(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.make */
extern T0* T1823c9(GE_context* ac, T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.initialize */
extern void T1823f12(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.check_options */
extern void T1764f250(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.report_full_and_variable_trailing_context_error */
extern void T1764f265(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.make */
extern T0* T1832c8(GE_context* ac);
/* LX_WILDCARD_PARSER.report_full_and_reject_error */
extern void T1764f264(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.make */
extern T0* T1831c8(GE_context* ac);
/* LX_WILDCARD_PARSER.report_full_and_meta_equiv_classes_error */
extern void T1764f263(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.make */
extern T0* T1830c8(GE_context* ac);
/* LX_WILDCARD_PARSER.build_equiv_classes */
extern void T1764f249(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].forth */
extern void T1825f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].cursor_forth */
extern void T1817f64(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].add_traversing_cursor */
extern void T1817f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].set_next_cursor */
extern void T1825f14(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].set_position */
extern void T1825f13(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].remove_traversing_cursor */
extern void T1817f65(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].set_after */
extern void T1825f12(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.convert_to_equivalence */
extern void T1816f26(GE_context* ac, T0* C, T0* a1);
/* LX_EQUIVALENCE_CLASSES.equivalence_class */
extern T6 T1823f8(GE_context* ac, T0* C, T6 a1);
/* LX_EQUIVALENCE_CLASSES.is_representative */
extern T1 T1823f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].item */
extern T0* T1825f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].cursor_item */
extern T0* T1817f36(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].after */
extern T1 T1825f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].start */
extern void T1825f10(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].cursor_start */
extern void T1817f63(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].cursor_off */
extern T1 T1817f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].off */
extern T1 T1825f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].is_empty */
extern T1 T1817f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].new_cursor */
extern T0* T1817f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].make */
extern T0* T1825c9(GE_context* ac, T0* a1);
/* LX_EQUIVALENCE_CLASSES.build */
extern void T1823f10(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_push_last_value */
extern void T1764f236(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.accept */
extern void T1764f235(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_do_error_action */
extern void T1764f233(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_error */
extern void T1764f248(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.report_eof_expected_error */
extern void T1764f247(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.read_token */
extern void T1764f232(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_execute_action */
extern void T1764f246(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_bad_character_error */
extern void T1764f262(GE_context* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.make */
extern T0* T1829c8(GE_context* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.report_bad_character_class_error */
extern void T1764f261(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.make */
extern T0* T1828c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.start_condition */
extern T6 T1764f185(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.process_escaped_character */
extern void T1764f260(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.text_count */
extern T6 T1764f206(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.report_missing_quote_error */
extern void T1764f259(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.make */
extern T0* T1827c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_character */
extern void T1764f258(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_character_out_of_range_error */
extern void T1764f268(GE_context* ac, T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.make */
extern T0* T1833c8(GE_context* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.text_item */
extern T2 T1764f182(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.less */
extern void T1764f257(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_set_line_column */
extern void T1764f267(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].item */
extern T0* T1817f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].has */
extern T1 T1817f27(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.text */
extern T0* T1764f176(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.set_start_condition */
extern void T1764f256(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_execute_eof_action */
extern void T1764f245(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.terminate */
extern void T1764f255(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.wrap */
extern T1 T1764f149(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_refill_input_buffer */
extern void T1764f244(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_set_content */
extern void T1764f242(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_null_trans_state */
extern T6 T1764f148(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_previous_state */
extern T6 T1764f147(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.fatal_error */
extern void T1764f243(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.std */
extern T0* T1764f173(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.special_integer_ */
extern T0* T1764f129(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_init_value_stacks */
extern void T1764f231(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_clear_all */
extern void T1764f240(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.clear_all */
extern void T1764f253(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.clear_stacks */
extern void T1764f266(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_clear_value_stacks */
extern void T1764f269(GE_context* ac, T0* C);
/* SPECIAL [LX_NFA].keep_head */
extern void T1822f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_NFA].set_count */
extern void T1822f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].keep_head */
extern void T1819f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].set_count */
extern void T1819f9(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.abort */
extern void T1764f234(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.set_input_buffer */
extern void T1764f225(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_load_input_buffer */
extern void T1764f230(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.new_string_buffer */
extern T0* T1764f131(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.make_from_description */
extern T0* T1764c221(GE_context* ac, T0* a1, T0* a2);
/* LX_ACTION_FACTORY.make */
extern T0* T1815c1(GE_context* ac);
/* LX_START_CONDITIONS.make */
extern void T1814f12(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.make */
extern T0* T1814c12(GE_context* ac, T6 a1);
/* LX_START_CONDITIONS.set_internal_cursor */
extern void T1814f16(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.new_cursor */
extern T0* T1814f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION].make */
extern T0* T1877c4(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].make */
extern T0* T1876f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_START_CONDITION].make_empty */
extern T0* T1875c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].default_create */
extern T0* T1876c2(GE_context* ac);
/* LX_WILDCARD_PARSER.make_parser_skeleton */
extern void T1764f224(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_build_parser_tables */
extern void T1764f229(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yycheck_template */
extern T0* T1764f160(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yyfixed_array */
extern T0* T1764f211(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yytable_template */
extern T0* T1764f158(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yypgoto_template */
extern T0* T1764f157(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yypact_template */
extern T0* T1764f156(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yydefgoto_template */
extern T0* T1764f155(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yydefact_template */
extern T0* T1764f154(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytypes2_template */
extern T0* T1764f153(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytypes1_template */
extern T0* T1764f144(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yyr1_template */
extern T0* T1764f142(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template */
extern T0* T1764f140(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template_2 */
extern void T1764f271(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yyarray_subcopy */
extern void T1764f275(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* LX_WILDCARD_PARSER.integer_array_ */
extern T0* T1764f220(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template_1 */
extern void T1764f270(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_create_value_stacks */
extern void T1764f228(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].make */
extern T0* T1818f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].make_empty */
extern T0* T1819c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].default_create */
extern T0* T1818c3(GE_context* ac);
/* LX_WILDCARD_PARSER.make_lex_scanner_from_description */
extern void T1764f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].set_key_equality_tester */
extern void T1817f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_map */
extern T0* T1817c40(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_with_equality_testers */
extern void T1817f46(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_sparse_container */
extern void T1817f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].set_internal_cursor */
extern void T1817f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_slots */
extern void T1817f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_clashes */
extern void T1817f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_key_storage */
extern void T1817f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_item_storage */
extern void T1817f58(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.string_equality_tester */
extern T0* T1764f117(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.make_with_buffer */
extern void T1764f227(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_initialize */
extern void T1764f241(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_initialize */
extern void T1764f241p1(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_build_tables */
extern void T1764f254(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_accept_template */
extern T0* T1764f198(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_fixed_array */
extern T0* T1764f219(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_meta_template */
extern T0* T1764f197(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_ec_template */
extern T0* T1764f196(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_ec_template_2 */
extern void T1764f274(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_array_subcopy */
extern void T1764f276(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* LX_WILDCARD_PARSER.yy_ec_template_1 */
extern void T1764f273(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_def_template */
extern T0* T1764f195(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_base_template */
extern T0* T1764f194(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_chk_template */
extern T0* T1764f193(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_nxt_template */
extern T0* T1764f192(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.empty_buffer */
extern T0* T1764f119(GE_context* ac, T0* C);
/* LX_DESCRIPTION.set_case_insensitive */
extern void T1765f33(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_full_table */
extern void T1765f32(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_meta_equiv_classes_used */
extern void T1765f31(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_equiv_classes_used */
extern void T1765f30(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.make */
extern T0* T1765c29(GE_context* ac);
/* LX_START_CONDITIONS.make_with_initial */
extern T0* T1814c14(GE_context* ac, T6 a1);
/* LX_START_CONDITIONS.put_first */
extern void T1814f17(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.put */
extern void T1814f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* LX_START_CONDITIONS.move_cursors_right */
extern void T1814f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION].set_position */
extern void T1877f5(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.move_right */
extern void T1814f20(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].force */
extern void T1876f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_START_CONDITION].fill_with */
extern void T1875f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_START_CONDITION].extend */
extern void T1875f7(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.put_last */
extern void T1814f19(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITION.make */
extern T0* T1841c6(GE_context* ac, T0* a1, T6 a2, T1 a3);
/* DS_ARRAYED_LIST [LX_NFA].make */
extern T0* T1843c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].set_internal_cursor */
extern void T1843f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].new_cursor */
extern T0* T1843f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA].make */
extern T0* T1905c3(GE_context* ac, T0* a1);
/* UT_ERROR_HANDLER.make_null */
extern T0* T132c6(GE_context* ac);
/* UT_ERROR_HANDLER.null_output_stream */
extern T0* T132f4(GE_context* ac, T0* C);
/* LX_DFA_WILDCARD.wipe_out */
extern void T1582f17(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.replace_backslashes */
extern void T1216f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.file_system */
extern T0* T1216f9(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.unix_file_system */
extern T0* T1216f12(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.windows_file_system */
extern T0* T1216f11(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.execution_environment */
extern T0* T1216f8(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.operating_system */
extern T0* T1216f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].remove */
extern void T139f41(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].move_left */
extern void T139f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_cursors_left */
extern void T139f43(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].remove_last */
extern void T139f42(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].move_last_cursors_after */
extern void T139f45(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.current_system */
extern T0* T269f60(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].make_from_linear */
extern T0* T139c40(GE_context* ac, T0* a1);
/* KL_TEXT_INPUT_FILE.read_string */
extern void T31f77(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_read_to_string */
extern T6 T31f36(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.file_gss */
extern T6 T31f44(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* SPECIAL [CHARACTER_8].item_address */
extern T14 T15f9(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_end_of_file */
extern T1 T31f25(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_feof */
extern T1 T31f31(GE_context* ac, T0* C, T14 a1);
/* ET_EIFFEL_PREPARSER.build_provider_constraint */
extern void T269f180(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PREPARSER.build_provider_constraint */
extern T0* T269f180ac1(GE_context* ac, T0* a1, T0* a2);
extern T1 T269f180ot1(T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [ET_UNIVERSE]].set_rout_disp_final */
extern void T459f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_EIFFEL_PREPARSER.add_universe_full_name */
extern void T269f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gcaaa_error */
extern void T282f351(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_cluster_error */
extern void T282f301(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_ERROR.make_gcaaa */
extern T0* T1522c24(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T282f102(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaaa_error */
extern void T34f352(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_cluster_error */
extern void T34f343(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T34f101(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.directory_exists */
extern T1 T122f28(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.exists */
extern T1 T354f29(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.tmp_directory */
extern T0* T122f30(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.directory_exists */
extern T1 T121f31(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_directory */
extern T0* T121f33(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.preparse_file */
extern void T269f179(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gcaab_error */
extern void T282f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaab */
extern T0* T1522c23(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T282f29(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaab_error */
extern void T34f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T34f28(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.reset */
extern void T269f185(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_end_of_file */
extern void T206f27(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T269f185p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T269f185p0(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T269f185p2(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_syntax_error */
extern void T282f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.make */
extern T0* T1523c18(GE_context* ac, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.set_compilers */
extern void T1523f19(GE_context* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_syntax_error */
extern void T34f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.current_position */
extern T0* T269f59(GE_context* ac, T0* C);
/* ET_FILE_POSITION.make */
extern T0* T1305c12(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ET_FILE_POSITION.make_compressed_position */
extern void T1305f13(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.set_position */
extern void T1305f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.read_token */
extern void T269f184(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_action */
extern void T269f190(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_silu_error */
extern void T282f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_silu_error */
extern void T34f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sifu_error */
extern void T282f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sifu_error */
extern void T34f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnp_error */
extern void T282f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnp_error */
extern void T34f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnl_error */
extern void T282f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnl_error */
extern void T34f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sssc_error */
extern void T282f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sssc_error */
extern void T34f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.more */
extern void T269f196(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.is_verbatim_string_closer */
extern T1 T269f109(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.text_item */
extern T2 T269f132(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.report_syntax_error */
extern void T269f191(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.set_start_condition */
extern void T269f194(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.text_substring */
extern T0* T269f106(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].force_new */
extern void T444f54(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].resize */
extern void T444f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_resize */
extern void T444f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].special_integer_ */
extern T0* T444f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_resize */
extern void T444f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_resize */
extern void T444f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_resize */
extern void T444f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_capacity */
extern T6 T444f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_key */
extern T0* T444f33(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.strings */
extern T0* T269f131(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.string_equality_tester */
extern T0* T269f133(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.append_text_substring_to_string */
extern void T269f197(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.append_substring_to_string */
extern void T1214f14(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.any_ */
extern T0* T1214f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.string_ */
extern T0* T269f130(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.string_buffer */
extern T0* T269f129(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_sceq_error */
extern void T282f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sceq_error */
extern void T34f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scqq_error */
extern void T282f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scqq_error */
extern void T34f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scac_error */
extern void T282f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scac_error */
extern void T34f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scas_error */
extern void T282f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scas_error */
extern void T34f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.set_syntax_error */
extern void T269f193(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.text_count */
extern T6 T269f104(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_reference_keyword */
extern T1 T269f103(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_note_keyword */
extern T1 T269f102(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_detachable_keyword */
extern T1 T269f101(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_attribute_keyword */
extern T1 T269f100(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_identifier */
extern T0* T281f65(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.last_identifier */
extern T0* T269f128(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].replace_found_item */
extern void T444f60(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.last_identifier */
extern T0* T271f947(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.strings */
extern T0* T271f932(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.string_equality_tester */
extern T0* T271f939(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.append_text_substring_to_string */
extern void T271f2121(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PARSER.string_ */
extern T0* T271f931(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.string_buffer */
extern T0* T271f930(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.ast_factory */
extern T0* T269f99(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_attached_keyword */
extern T1 T269f95(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_line_column */
extern void T269f195(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_eof_action */
extern void T269f189(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_sseq_error */
extern void T282f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sseq_error */
extern void T34f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.terminate */
extern void T269f192(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.wrap */
extern T1 T269f87(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_refill_input_buffer */
extern void T269f188(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_null_trans_state */
extern T6 T269f86(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_previous_state */
extern T6 T269f85(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.fatal_error */
extern void T269f187(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_file */
extern T0* T269f56(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.shared_file */
extern T0* T269f126(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.preparse_class */
extern void T269f183(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MASTER_CLASS.add_last_local_class */
extern void T485f70(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_non_override_class */
extern void T485f84(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_override_class */
extern void T485f83(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_ignored_class */
extern void T485f82(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_time_stamp */
extern void T83f271(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.set_filename */
extern void T83f251(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.same_pathnames */
extern T1 T122f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_PATHNAME.same_pathname */
extern T1 T544f14(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.is_subpathname */
extern T1 T544f16(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.string_ */
extern T0* T544f18(GE_context* ac, T0* C);
/* KL_PATHNAME.string_equality_tester */
extern T0* T544f19(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.same_pathnames */
extern T1 T121f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_PATHNAME.same_case_insensitive */
extern T1 T544f13(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.is_case_insensitive_subpathname */
extern T1 T544f15(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.case_insensitive_string_equality_tester */
extern T0* T544f17(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.local_classes_do_if */
extern void T485f86(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_ignored_classes_do_if */
extern void T485f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_CLASS].do_if */
extern void T277f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_non_override_classes_do_if */
extern void T485f88(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_override_classes_do_if */
extern void T485f87(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.current_universe */
extern T0* T269f55(GE_context* ac, T0* C);
/* detachable DS_CELL [detachable ET_CLASS].put */
extern void T1496f3(GE_context* ac, T0* C, T0* a1);
/* detachable DS_CELL [detachable ET_CLASS].make */
extern T0* T1496c2(GE_context* ac, T0* a1);
/* KL_DIRECTORY.reset */
extern void T354f42(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_directory */
extern T0* T269f54(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.shared_directory */
extern T0* T269f124(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.file_system */
extern T0* T269f53(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.unix_file_system */
extern T0* T269f123(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.windows_file_system */
extern T0* T269f122(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.operating_system */
extern T0* T269f121(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.execution_environment */
extern T0* T269f52(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_preparsing_status */
extern void T282f350(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_preparsing_status */
extern void T34f351(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.error_handler */
extern T0* T269f98(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.process */
extern void T435f73(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.process */
extern void T216f67(GE_context* ac, T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.reset */
extern void T1304f7(GE_context* ac, T0* C);
/* ET_TAGGED_ASSERTION.process */
extern void T1304f8(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_tagged_assertion */
extern void T1016f104(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_cast_type */
extern void T1225f45(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.set_cast_type */
extern void T1224f49(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_cast_type */
extern void T1191f44(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_type */
extern void T1225f49(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.set_type */
extern void T1224f53(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_type */
extern void T1191f47(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.reset */
extern void T1302f11(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.reset */
extern void T727f76(GE_context* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.process */
extern void T1302f12(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_typed_open_argument */
extern void T1016f103(GE_context* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.process */
extern void T727f77(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_question_mark_symbol */
extern void T1016f108(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.reset */
extern void T1540f6(GE_context* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.reset */
extern void T1301f9(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.process */
extern void T1540f8(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_implicit_current_target */
extern void T1016f105(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_OPEN_TARGET.process */
extern void T1301f11(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_open_target */
extern void T1016f102(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.set_index */
extern void T1802f25(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.set_index */
extern void T1801f25(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.set_index */
extern void T1800f20(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.set_index */
extern void T1698f6(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.set_index */
extern void T1681f17(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.set_index */
extern void T1540f7(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.set_index */
extern void T1302f10(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_OPEN_TARGET.set_index */
extern void T1301f10(GE_context* ac, T0* C, T6 a1);
/* ET_PARENTHESIS_EXPRESSION.set_index */
extern void T1187f11(GE_context* ac, T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.set_index */
extern void T727f74(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1300f40(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1299f46(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1298f42(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1297f41(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1296f47(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1295f43(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.set_arguments */
extern void T759f35(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_SYMBOL.set_seed */
extern void T1675f42(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_OR_ELSE_OPERATOR.set_seed */
extern void T1289f34(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_AND_THEN_OPERATOR.set_seed */
extern void T1288f34(GE_context* ac, T0* C, T6 a1);
/* ET_SYMBOL_OPERATOR.set_seed */
extern void T716f100(GE_context* ac, T0* C, T6 a1);
/* ET_KEYWORD_OPERATOR.set_seed */
extern void T703f55(GE_context* ac, T0* C, T6 a1);
/* ET_FREE_OPERATOR.set_seed */
extern void T697f53(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_SYMBOL.set_seed */
extern void T655f105(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_feature */
extern void T1258f104(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_feature */
extern void T1257f104(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_feature */
extern void T1255f99(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_feature */
extern void T1254f106(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_feature */
extern void T1253f102(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_feature */
extern void T539f100(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_feature */
extern void T533f103(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_feature */
extern void T387f93(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_feature */
extern void T386f97(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_feature */
extern void T384f96(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_implementation_feature */
extern void T355f103(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_feature */
extern void T259f108(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_class */
extern void T1258f105(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_class */
extern void T1257f105(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_class */
extern void T1255f100(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_class */
extern void T1254f107(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_class */
extern void T1253f103(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_class */
extern void T539f101(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_class */
extern void T533f104(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_class */
extern void T387f94(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_class */
extern void T386f98(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_class */
extern void T384f97(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_implementation_class */
extern void T355f104(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_class */
extern void T259f109(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_preconditions */
extern void T1258f102(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_preconditions */
extern void T1257f102(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_preconditions */
extern void T1255f97(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_preconditions */
extern void T1254f104(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_preconditions */
extern void T1253f100(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_preconditions */
extern void T539f98(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_preconditions */
extern void T533f101(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_preconditions */
extern void T387f91(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_preconditions */
extern void T386f95(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_preconditions */
extern void T384f94(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_preconditions */
extern void T355f101(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_preconditions */
extern void T259f106(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_postconditions */
extern void T1258f103(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_postconditions */
extern void T1257f103(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_postconditions */
extern void T1255f98(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_postconditions */
extern void T1254f105(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_postconditions */
extern void T1253f101(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_postconditions */
extern void T539f99(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_postconditions */
extern void T533f102(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_postconditions */
extern void T387f92(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_postconditions */
extern void T386f96(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_postconditions */
extern void T384f95(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_postconditions */
extern void T355f102(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_postconditions */
extern void T259f107(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_first_precursor */
extern void T1258f106(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_first_precursor */
extern void T1257f106(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_first_precursor */
extern void T1255f101(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_first_precursor */
extern void T1254f108(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_first_precursor */
extern void T1253f104(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_first_precursor */
extern void T539f102(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_first_precursor */
extern void T533f105(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_precursor */
extern void T387f95(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_precursor */
extern void T386f99(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_precursor */
extern void T384f98(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_precursor */
extern void T355f105(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_first_precursor */
extern void T259f110(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_other_precursors */
extern void T1258f107(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_precursors */
extern void T1257f107(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_precursors */
extern void T1255f102(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_precursors */
extern void T1254f109(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_precursors */
extern void T1253f105(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_precursors */
extern void T539f103(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_precursors */
extern void T533f106(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_precursors */
extern void T387f96(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_precursors */
extern void T386f100(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_precursors */
extern void T384f99(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_other_precursors */
extern void T355f106(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_precursors */
extern void T259f111(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_version */
extern void T1258f108(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_version */
extern void T1257f108(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_version */
extern void T1255f103(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_version */
extern void T1254f110(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_version */
extern void T1253f106(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_version */
extern void T539f96(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_version */
extern void T533f99(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_version */
extern void T387f89(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_version */
extern void T386f93(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_version */
extern void T384f92(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_version */
extern void T355f99(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_version */
extern void T259f102(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_clients */
extern void T1258f91(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_clients */
extern void T1257f92(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_clients */
extern void T1255f86(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_clients */
extern void T1254f94(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_clients */
extern void T1253f90(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_clients */
extern void T539f84(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_clients */
extern void T533f88(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_clients */
extern void T387f79(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_clients */
extern void T386f81(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_clients */
extern void T384f81(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_clients */
extern void T355f88(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_clients */
extern void T259f93(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_first_seed */
extern void T1258f109(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_first_seed */
extern void T1257f109(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_first_seed */
extern void T1255f104(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_first_seed */
extern void T1254f111(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_first_seed */
extern void T1253f107(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_first_seed */
extern void T539f95(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_first_seed */
extern void T533f98(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_first_seed */
extern void T387f88(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_seed */
extern void T386f92(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_seed */
extern void T384f91(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_seed */
extern void T355f98(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_first_seed */
extern void T259f101(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_other_seeds */
extern void T1258f110(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_seeds */
extern void T1257f110(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_seeds */
extern void T1255f105(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_seeds */
extern void T1254f112(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_seeds */
extern void T1253f108(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_seeds */
extern void T539f104(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_seeds */
extern void T533f107(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_seeds */
extern void T387f97(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_seeds */
extern void T386f101(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_seeds */
extern void T384f100(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_other_seeds */
extern void T355f107(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_seeds */
extern void T259f112(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_validity_checked */
extern void T1258f83(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.set_validity_checked */
extern void T1257f81(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_validity_checked */
extern void T1255f78(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.set_validity_checked */
extern void T1254f82(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.set_validity_checked */
extern void T1253f79(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.set_validity_checked */
extern void T539f74(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.set_validity_checked */
extern void T533f75(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.set_validity_checked */
extern void T387f75(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_validity_checked */
extern void T386f77(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_validity_checked */
extern void T384f77(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.set_validity_checked */
extern void T355f78(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_validity_checked */
extern void T259f84(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_validity_error */
extern void T1258f84(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.set_validity_error */
extern void T1257f82(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_validity_error */
extern void T1255f79(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.set_validity_error */
extern void T1254f83(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.set_validity_error */
extern void T1253f80(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.set_validity_error */
extern void T539f75(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.set_validity_error */
extern void T533f76(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.set_validity_error */
extern void T387f76(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_validity_error */
extern void T386f78(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_validity_error */
extern void T384f78(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.set_validity_error */
extern void T355f79(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_validity_error */
extern void T259f85(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.process */
extern void T1258f82(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.process */
extern void T1257f80(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.process */
extern void T1255f77(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.process */
extern void T1254f81(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.process */
extern void T1253f78(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.process */
extern void T539f73(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.process */
extern void T533f74(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.process */
extern void T387f74(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.process */
extern void T386f76(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.process */
extern void T384f76(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.process */
extern void T355f77(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.process */
extern void T259f83(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_id */
extern void T1258f98(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_id */
extern void T1257f98(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_id */
extern void T1255f93(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_id */
extern void T1254f100(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_id */
extern void T1253f96(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_id */
extern void T539f91(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_id */
extern void T533f94(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_id */
extern void T387f84(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_id */
extern void T386f88(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_id */
extern void T384f87(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_id */
extern void T355f94(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_id */
extern void T259f95(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_index */
extern void T1300f39(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_index */
extern void T1299f45(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_index */
extern void T1298f41(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_index */
extern void T1297f40(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_index */
extern void T1296f46(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_index */
extern void T1295f42(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.set_index */
extern void T1294f25(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_OBJECT_TEST.set_index */
extern void T1293f30(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_EXPRESSION.set_index */
extern void T1292f22(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.set_index */
extern void T1291f27(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TYPE.set_index */
extern void T1290f23(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.set_index */
extern void T1287f25(GE_context* ac, T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.set_index */
extern void T1286f22(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT_ADDRESS.set_index */
extern void T1285f22(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.set_index */
extern void T1284f22(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.set_index */
extern void T1283f22(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.set_index */
extern void T1282f26(GE_context* ac, T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.set_index */
extern void T1237f44(GE_context* ac, T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.set_index */
extern void T1236f44(GE_context* ac, T0* C, T6 a1);
/* ET_FALSE_CONSTANT.set_index */
extern void T1235f41(GE_context* ac, T0* C, T6 a1);
/* ET_TRUE_CONSTANT.set_index */
extern void T1234f41(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_index */
extern void T1232f44(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.set_index */
extern void T1231f44(GE_context* ac, T0* C, T6 a1);
/* ET_BINARY_INTEGER_CONSTANT.set_index */
extern void T1230f73(GE_context* ac, T0* C, T6 a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_index */
extern void T1229f73(GE_context* ac, T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_index */
extern void T1228f73(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_index */
extern void T1227f73(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_index */
extern void T1226f73(GE_context* ac, T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.set_index */
extern void T1225f44(GE_context* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.set_index */
extern void T1224f48(GE_context* ac, T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.set_index */
extern void T1223f45(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.set_index */
extern void T1191f43(GE_context* ac, T0* C, T6 a1);
/* ET_NAMED_OBJECT_TEST.set_index */
extern void T1111f27(GE_context* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.set_index */
extern void T975f29(GE_context* ac, T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.set_index */
extern void T972f30(GE_context* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.set_index */
extern void T943f23(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.set_index */
extern void T929f28(GE_context* ac, T0* C, T6 a1);
/* ET_IF_EXPRESSION.set_index */
extern void T880f28(GE_context* ac, T0* C, T6 a1);
/* ET_CALL_AGENT.set_index */
extern void T759f31(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.set_index */
extern void T756f26(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_EXPRESSION.set_index */
extern void T730f34(GE_context* ac, T0* C, T6 a1);
/* ET_VOID.set_index */
extern void T719f31(GE_context* ac, T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.set_index */
extern void T349f27(GE_context* ac, T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.set_index */
extern void T340f22(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_index */
extern void T339f24(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST.set_index */
extern void T338f25(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT.set_index */
extern void T331f34(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.set_index */
extern void T311f30(GE_context* ac, T0* C, T6 a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_index */
extern void T309f29(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_index */
extern void T308f27(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT.set_index */
extern void T303f35(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_index */
extern void T183f112(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.reset */
extern void T1802f24(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.reset */
extern void T1801f24(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.reset */
extern void T1800f19(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.reset */
extern void T1681f19(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.reset */
extern void T1300f47(GE_context* ac, T0* C);
extern T1 T1300f47ot1(T0* a1, T0** a2);
/* ET_POSTCONDITIONS.reset */
extern void T955f23(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.reset_validity_checked */
extern void T955f20(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.reset */
extern void T955f23p1(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.reset */
extern void T413f23(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.reset_validity_checked */
extern void T413f20(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.reset */
extern void T413f23p1(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset */
extern void T261f14(GE_context* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.reset */
extern void T1516f10(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.reset */
extern void T264f9(GE_context* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.reset */
extern void T745f14(GE_context* ac, T0* C);
extern T1 T745f14ot1(T0* a1, T0** a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T1299f55(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.reset */
extern void T357f14(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.reset */
extern void T1517f10(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.type */
extern T0* T1517f6(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.name */
extern T0* T1517f4(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.reset */
extern void T918f9(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.type */
extern T0* T918f6(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.name */
extern T0* T918f5(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.local_variable */
extern T0* T1517f5(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.local_variable */
extern T0* T918f4(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T1299f55p1(GE_context* ac, T0* C);
extern T1 T1299f55p1ot1(T0* a1, T0** a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T1298f50(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T1298f50p1(GE_context* ac, T0* C);
extern T1 T1298f50p1ot1(T0* a1, T0** a2);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.reset */
extern void T1297f48(GE_context* ac, T0* C);
extern T1 T1297f48ot1(T0* a1, T0** a2);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T1296f56(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T1296f56p1(GE_context* ac, T0* C);
extern T1 T1296f56p1ot1(T0* a1, T0** a2);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T1295f51(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T1295f51p1(GE_context* ac, T0* C);
extern T1 T1295f51p1ot1(T0* a1, T0** a2);
/* ET_ONCE_MANIFEST_STRING.reset */
extern void T1294f28(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.reset */
extern void T1293f32(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.reset */
extern void T1292f24(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.reset */
extern void T1291f29(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.reset */
extern void T1290f24(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.reset */
extern void T1287f29(GE_context* ac, T0* C);
extern T1 T1287f29ot1(T0* a1, T0** a2);
extern T1 T1287f29ot2(T0* a1, T0** a2);
extern T1 T1287f29ot3(T0* a1, T0** a2);
/* ET_EXPRESSION_ADDRESS.reset */
extern void T1286f24(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.reset */
extern void T1285f24(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.reset */
extern void T1284f24(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.reset */
extern void T1283f24(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.reset */
extern void T1282f32(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.reset_arguments */
extern void T1282f33(GE_context* ac, T0* C);
extern T1 T1282f33ot1(T0* a1, T0** a2);
/* ET_C2_CHARACTER_CONSTANT.reset */
extern void T1237f49(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.reset */
extern void T1236f49(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.reset */
extern void T1235f45(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.reset */
extern void T1234f45(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.reset */
extern void T1232f49(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.reset */
extern void T1231f49(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.reset */
extern void T1230f79(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.reset */
extern void T1229f79(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.reset */
extern void T1228f79(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.reset */
extern void T1227f79(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.reset */
extern void T1226f79(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.reset */
extern void T1225f47(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.reset */
extern void T1224f51(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.reset */
extern void T1223f48(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.reset */
extern void T1191f48(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.reset */
extern void T1111f30(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.reset */
extern void T975f32(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T972f35(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.type */
extern T0* T972f9(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T972f35p1(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset_arguments */
extern void T972f36(GE_context* ac, T0* C);
extern T1 T972f36ot1(T0* a1, T0** a2);
/* ET_PARENTHESIZED_EXPRESSION.reset */
extern void T943f25(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.reset */
extern void T929f32(GE_context* ac, T0* C);
extern T1 T929f32ot1(T0* a1, T0** a2);
/* ET_IF_EXPRESSION.reset */
extern void T880f30(GE_context* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.reset */
extern void T828f7(GE_context* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.reset */
extern void T825f7(GE_context* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.conditional_expression */
extern T0* T825f5(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.conditional_expression */
extern T0* T880f12(GE_context* ac, T0* C);
/* ET_CALL_AGENT.reset */
extern void T759f36(GE_context* ac, T0* C);
extern T1 T759f36ot1(T0* a1, T0** a2);
/* ET_BRACKET_EXPRESSION.reset */
extern void T756f28(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.reset_arguments */
extern void T756f29(GE_context* ac, T0* C);
extern T1 T756f29ot1(T0* a1, T0** a2);
/* ET_BRACKET_SYMBOL.reset */
extern void T655f106(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset */
extern void T730f43(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset_unfolded_form */
extern void T730f44(GE_context* ac, T0* C);
/* ET_VOID.reset */
extern void T719f35(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.reset */
extern void T349f30(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.type */
extern T0* T349f15(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.reset */
extern void T340f25(GE_context* ac, T0* C);
extern T1 T340f25ot1(T0* a1, T0** a2);
extern T1 T340f25ot2(T0* a1, T0** a2);
/* ET_OBJECT_EQUALITY_EXPRESSION.reset */
extern void T339f27(GE_context* ac, T0* C);
extern T1 T339f27ot1(T0* a1, T0** a2);
extern T1 T339f27ot2(T0* a1, T0** a2);
/* ET_OBJECT_TEST.reset */
extern void T338f27(GE_context* ac, T0* C);
/* ET_RESULT.reset */
extern void T331f36(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.reset */
extern void T311f34(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T309f33(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T309f33p1(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset_arguments */
extern void T309f34(GE_context* ac, T0* C);
extern T1 T309f34ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T308f33(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T308f33p1(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T308f33p0(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset_arguments */
extern void T308f34(GE_context* ac, T0* C);
extern T1 T308f34ot1(T0* a1, T0** a2);
/* ET_CURRENT.reset */
extern void T303f37(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.process */
extern void T1802f23(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_FROM_EXPRESSION.process */
extern void T1801f23(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.process */
extern void T1800f18(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.process */
extern void T1681f18(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.process */
extern void T1300f38(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.process */
extern void T1299f44(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.process */
extern void T1298f40(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.process */
extern void T1297f39(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.process */
extern void T1296f45(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.process */
extern void T1295f41(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.process */
extern void T1294f24(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_OBJECT_TEST.process */
extern void T1293f29(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.process */
extern void T1292f21(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_EXPRESSION.process */
extern void T1291f26(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TYPE.process */
extern void T1290f22(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.process */
extern void T1287f24(GE_context* ac, T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.process */
extern void T1286f21(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT_ADDRESS.process */
extern void T1285f21(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.process */
extern void T1284f21(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.process */
extern void T1283f21(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.process */
extern void T1282f25(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.process */
extern void T1237f43(GE_context* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.process */
extern void T1236f43(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.process */
extern void T1235f40(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.process */
extern void T1234f40(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.process */
extern void T1232f43(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.process */
extern void T1231f43(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.process */
extern void T1230f72(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.process */
extern void T1229f72(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.process */
extern void T1228f72(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.process */
extern void T1227f72(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.process */
extern void T1226f72(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.process */
extern void T1225f43(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.process */
extern void T1224f47(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.process */
extern void T1223f44(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.process */
extern void T1191f42(GE_context* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.process */
extern void T1111f26(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.process */
extern void T975f28(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.process */
extern void T972f29(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.process */
extern void T943f22(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.process */
extern void T929f27(GE_context* ac, T0* C, T0* a1);
/* ET_IF_EXPRESSION.process */
extern void T880f27(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.process */
extern void T759f30(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.process */
extern void T756f25(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.process */
extern void T730f33(GE_context* ac, T0* C, T0* a1);
/* ET_VOID.process */
extern void T719f30(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.process */
extern void T349f28(GE_context* ac, T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.process */
extern void T340f21(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.process */
extern void T339f23(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST.process */
extern void T338f24(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT.process */
extern void T331f31(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.process */
extern void T311f32(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.process */
extern void T309f28(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.process */
extern void T308f28(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.process */
extern void T303f32(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.process */
extern void T183f115(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1489f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T1489f17ot1(T0* a1, T0** a2);
extern T1 T1489f17ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1489f17p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T1489f17p1ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T540f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TARGET_LIST.item */
extern T0* T1358f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T540f17p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T540f17p1ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_type_from_type_set */
extern void T532f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_type_from_type_set */
extern void T531f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.put_type_from_type_set */
extern void T341f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.put_type_from_type_set */
extern void T324f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type_from_type_set */
extern void T291f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TYPE.put_type_from_type_set */
extern void T240f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.propagate_can_be_void */
extern void T1489f18(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.propagate_can_be_void */
extern void T540f19(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.propagate_can_be_void */
extern void T532f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.propagate_can_be_void */
extern void T531f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.propagate_can_be_void */
extern void T341f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.propagate_can_be_void */
extern void T324f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.propagate_can_be_void */
extern void T291f21(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.propagate_can_be_void */
extern void T240f59(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.set_never_void */
extern void T1489f16(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.set_never_void */
extern void T540f16(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_never_void */
extern void T532f57(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_never_void */
extern void T531f57(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_never_void */
extern void T341f55(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_never_void */
extern void T324f55(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_never_void */
extern void T291f15(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.set_never_void */
extern void T240f54(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_target */
extern void T1489f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_target */
extern void T540f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TARGET_LIST.force_last */
extern void T1358f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].force */
extern void T1598f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].fill_with */
extern void T1597f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].extend */
extern void T1597f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.fixed_array */
extern T0* T1358f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].default_create */
extern T0* T1598c3(GE_context* ac);
/* ET_DYNAMIC_TARGET_LIST.resize */
extern void T1358f12(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T1598f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T1597f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.new_capacity */
extern T6 T1358f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.capacity */
extern T6 T1358f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_TARGET_LIST.has */
extern T1 T1358f3(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.index_of */
extern T6 T1358f5(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.put_last */
extern void T1358f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.make_with_capacity */
extern T0* T1358c9(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].make */
extern T0* T1598f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TARGET].make_empty */
extern T0* T1597c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_target */
extern void T291f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_unaliased_to_string */
extern void T1664f20(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_unaliased_to_string */
extern void T1663f23(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_unaliased_to_string */
extern void T650f30(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_unaliased_to_string */
extern void T515f18(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_unaliased_to_string */
extern void T251f28(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T1664f21(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_to_string */
extern void T1663f24(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_to_string */
extern void T650f31(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T515f19(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_to_string */
extern void T251f30(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T1664f22(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.reset */
extern void T1663f25(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset */
extern void T650f32(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T515f20(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset */
extern void T251f33(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T1664f23(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.reset_qualified_anchored_types */
extern void T1663f26(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T650f34(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T515f21(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T251f34(GE_context* ac, T0* C);
/* ET_LIBRARY.classes_do_all */
extern void T474f173(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].forth */
extern void T640f12(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_forth */
extern void T234f63(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].add_traversing_cursor */
extern void T234f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_next_cursor */
extern void T640f16(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_position */
extern void T640f15(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].remove_traversing_cursor */
extern void T234f65(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_after */
extern void T640f14(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_mapped */
extern T1 T485f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].item */
extern T0* T640f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_item */
extern T0* T234f34(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].after */
extern T1 T640f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].start */
extern void T640f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_start */
extern void T234f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_off */
extern T1 T234f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].off */
extern T1 T640f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].is_empty */
extern T1 T234f36(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T464f172(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T464f172p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_all */
extern void T231f195(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_all */
extern void T231f195p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_all */
extern void T218f181(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_all */
extern void T218f181p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T199f172(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T199f172p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.classes_do_all */
extern void T190f199(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.classes_do_all */
extern void T71f253(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.classes_do_all */
extern void T65f258(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.classes_do_all */
extern void T62f262(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.classes_do_all */
extern void T35f210(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.classes_do_until */
extern void T474f174(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].go_after */
extern void T640f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_go_after */
extern void T234f64(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.classes_do_until */
extern void T464f173(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_until */
extern void T231f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_until */
extern void T218f182(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_until */
extern void T199f173(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.classes_do_until */
extern void T190f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.classes_do_until */
extern void T71f254(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_until */
extern void T65f259(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.classes_do_until */
extern void T62f263(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.classes_do_until */
extern void T35f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_until */
extern void T474f177(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T464f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_until */
extern void T231f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T218f185(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T199f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.master_classes_do_until */
extern void T190f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.master_classes_do_until */
extern void T71f256(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_until */
extern void T65f261(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.master_classes_do_until */
extern void T62f265(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.master_classes_do_until */
extern void T35f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_all */
extern void T474f175(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].do_all */
extern void T234f40(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T464f174(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_all */
extern void T231f197(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T218f183(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T199f174(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.master_classes_do_all */
extern void T190f201(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.master_classes_do_all */
extern void T71f235(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.master_classes_do_all */
extern void T65f186(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.master_classes_do_all */
extern void T62f244(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.master_classes_do_all */
extern void T35f212(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.classes_do_if */
extern void T474f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T464f175(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T464f175p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_if */
extern void T231f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_if */
extern void T231f198p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_if */
extern void T218f184(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_if */
extern void T218f184p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T199f175(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T199f175p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.classes_do_if */
extern void T190f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.classes_do_if */
extern void T71f255(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_if */
extern void T65f260(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.classes_do_if */
extern void T62f264(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.classes_do_if */
extern void T35f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_if */
extern void T474f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].do_if */
extern void T234f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T464f177(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_if */
extern void T231f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T218f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T199f177(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.master_classes_do_if */
extern void T190f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.master_classes_do_if */
extern void T71f257(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_if */
extern void T65f262(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.master_classes_do_if */
extern void T62f266(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.master_classes_do_if */
extern void T35f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_if_until */
extern void T474f179(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T464f178(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_if_until */
extern void T231f201(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T218f187(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T199f178(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.master_classes_do_if_until */
extern void T190f205(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_SYSTEM.master_classes_do_if_until */
extern void T71f258(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.master_classes_do_if_until */
extern void T65f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM.master_classes_do_if_until */
extern void T62f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SYSTEM.master_classes_do_if_until */
extern void T35f216(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.universes_do_all */
extern void T190f210(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_all */
extern void T198f12(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.universes_do_all */
extern void T191f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.universes_do_all */
extern void T71f241(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.universes_do_all */
extern void T65f279(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.universes_do_all */
extern void T62f271(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.universes_do_all */
extern void T35f197(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.universes_do_if */
extern void T474f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_if */
extern void T198f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_LIBRARIES.universes_do_if */
extern void T191f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.universes_do_if */
extern void T464f179(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLIES.universes_do_if */
extern void T463f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.universes_do_if */
extern void T231f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.universes_do_if */
extern void T218f190(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.universes_do_if */
extern void T199f179(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.universes_do_if */
extern void T190f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.universes_do_if */
extern void T71f262(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.universes_do_if */
extern void T65f278(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.universes_do_if */
extern void T62f272(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.universes_do_if */
extern void T35f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.process */
extern void T1416f70(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.process */
extern void T1319f71(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.process */
extern void T1270f75(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.process */
extern void T1269f79(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.process */
extern void T1268f80(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.process */
extern void T1242f83(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.process */
extern void T872f80(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.process */
extern void T514f74(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.process */
extern void T260f107(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.process */
extern void T83f245(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.process */
extern void T81f111(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_unaliased_to_string */
extern void T1416f71(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.append_unaliased_to_string */
extern void T1319f70(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_unaliased_to_string */
extern void T1270f74(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_unaliased_to_string */
extern void T1269f77(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_unaliased_to_string */
extern void T1268f78(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T1242f86(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T872f83(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_unaliased_to_string */
extern void T514f72(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_unaliased_to_string */
extern void T260f105(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.append_unaliased_to_string */
extern void T83f248(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_unaliased_to_string */
extern void T81f109(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_to_string */
extern void T1416f69(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.upper_name */
extern T0* T1416f44(GE_context* ac, T0* C);
/* ET_LIKE_N.append_to_string */
extern void T1319f69(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_to_string */
extern void T1270f73(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_to_string */
extern void T1269f78(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_to_string */
extern void T1268f79(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_to_string */
extern void T1242f87(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.upper_name */
extern T0* T1242f14(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.append_to_string */
extern void T872f84(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.upper_name */
extern T0* T872f57(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.append_to_string */
extern void T514f73(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_to_string */
extern void T260f106(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.append_to_string */
extern void T83f265(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_to_string */
extern void T81f110(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.reset */
extern void T1416f72(GE_context* ac, T0* C);
/* ET_LIKE_N.reset */
extern void T1319f72(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset */
extern void T1270f76(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset */
extern void T1269f80(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.reset */
extern void T1268f81(GE_context* ac, T0* C);
/* ET_IDENTIFIER.set_feature_name */
extern void T183f121(GE_context* ac, T0* C, T1 a1);
/* ET_LIKE_FEATURE.is_like_argument */
extern T1 T1268f29(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset */
extern void T1242f84(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_constraint_creation_procedures */
extern void T1242f82(GE_context* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.reset */
extern void T799f14(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset */
extern void T872f81(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.reset */
extern void T514f75(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.reset */
extern void T260f108(GE_context* ac, T0* C);
/* ET_CLASS.reset_type */
extern void T83f301(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.reset */
extern void T81f114(GE_context* ac, T0* C);
extern T1 T81f114ot1(T0* a1, T0** a2);
extern T1 T81f114ot2(T0* a1, T0** a2);
extern T1 T81f114ot3(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER_TYPE.reset_qualified_anchored_types */
extern void T1416f73(GE_context* ac, T0* C);
/* ET_LIKE_N.reset_qualified_anchored_types */
extern void T1319f73(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset_qualified_anchored_types */
extern void T1270f77(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset_qualified_anchored_types */
extern void T1269f81(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.reset_qualified_anchored_types */
extern void T1268f82(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T1242f85(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T872f82(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.reset_qualified_anchored_types */
extern void T514f76(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.reset_qualified_anchored_types */
extern void T260f109(GE_context* ac, T0* C);
/* ET_CLASS.reset_qualified_anchored_types */
extern void T83f302(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.reset_qualified_anchored_types */
extern void T81f115(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class */
extern void T1352f5(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class */
extern void T1351f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class */
extern void T1350f4(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class */
extern void T1349f5(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class */
extern void T1021f8(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class */
extern void T1020f11(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class */
extern void T1019f14(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class */
extern void T1014f11(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_class */
extern void T1013f15(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_class */
extern void T1012f18(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class */
extern void T1011f11(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class */
extern void T1010f8(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class */
extern void T1009f9(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class */
extern void T998f16(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class */
extern void T997f14(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_class */
extern void T396f22(GE_context* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.process_class */
extern void T279f2(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.process_class */
extern void T276f16(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.internal_process_class */
extern void T276f19(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_class_processed */
extern void T73f99(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_implementation_checked */
extern void T83f262(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].wipe_out */
extern void T672f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].slots_wipe_out */
extern void T672f52(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].clashes_wipe_out */
extern void T672f51(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_wipe_out */
extern void T672f50(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_wipe_out */
extern void T672f49(GE_context* ac, T0* C);
/* SPECIAL [ET_NAMED_CLASS].keep_head */
extern void T1406f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_CLASS].set_count */
extern void T1406f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].move_all_cursors_after */
extern void T672f48(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_next_cursor */
extern void T1353f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_after */
extern void T1353f10(GE_context* ac, T0* C);
/* ET_CLASS.set_suppliers */
extern void T83f261(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].extend */
extern void T672f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].forth */
extern void T1353f14(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_forth */
extern void T672f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].add_traversing_cursor */
extern void T672f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_position */
extern void T1353f12(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].remove_traversing_cursor */
extern void T672f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].put */
extern void T672f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].item */
extern T0* T1353f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_item */
extern T0* T672f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].after */
extern T1 T1353f8(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].start */
extern void T1353f13(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_start */
extern void T672f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_off */
extern T1 T672f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].off */
extern T1 T1353f6(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].is_empty */
extern T1 T672f23(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_invariants_validity */
extern void T276f22(GE_context* ac, T0* C, T1 a1);
/* ET_BASE_TYPE_LIST.item */
extern T0* T420f3(GE_context* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.flat_mode */
extern T1 T276f11(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_invariants_validity */
extern void T391f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INVARIANTS.set_validity_error */
extern void T910f33(GE_context* ac, T0* C);
/* ET_INVARIANTS.set_validity_checked */
extern void T910f32(GE_context* ac, T0* C);
/* ET_INVARIANTS.assertion */
extern T0* T910f11(GE_context* ac, T0* C, T6 a1);
/* ET_INVARIANTS.item */
extern T0* T910f21(GE_context* ac, T0* C, T6 a1);
/* ET_INVARIANTS.reset_validity_checked */
extern void T910f31(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_supplier_handler */
extern void T391f70(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.set_supplier_handler */
extern void T396f19(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_features_validity */
extern void T276f21(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.check_procedure_validity */
extern void T276f24(GE_context* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_PROCEDURE].wipe_out */
extern void T1025f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].slots_wipe_out */
extern void T1025f51(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].clashes_wipe_out */
extern void T1025f50(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_wipe_out */
extern void T1025f49(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_wipe_out */
extern void T1025f48(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_PROCEDURE].keep_head */
extern void T960f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PROCEDURE].set_count */
extern void T960f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].move_all_cursors_after */
extern void T1025f47(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T1458f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_after */
extern void T1458f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].forth */
extern void T1025f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_forth */
extern void T1025f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].add_traversing_cursor */
extern void T1025f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_position */
extern void T1458f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].remove_traversing_cursor */
extern void T1025f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].clashes_item */
extern T6 T1025f23(GE_context* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_procedure_validity */
extern void T276f27(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_FEATURE_CHECKER.check_precursor_feature_validity */
extern void T391f76(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_PROCEDURE].item_for_iteration */
extern T0* T1025f29(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_item */
extern T0* T1025f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_item */
extern T0* T1025f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].after */
extern T1 T1025f34(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_after */
extern T1 T1025f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].after */
extern T1 T1458f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].start */
extern void T1025f36(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_start */
extern void T1025f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].cursor_off */
extern T1 T1025f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].off */
extern T1 T1458f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].is_empty */
extern T1 T1025f21(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_feature_validity */
extern void T391f73(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.build_preconditions_attachment_scope */
extern void T391f77(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.free_attachment_scope */
extern void T391f80(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.new_attachment_scope */
extern T0* T391f43(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.build_assertions_attachment_scope */
extern void T391f79(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.add_precursors_with_preconditions_recursive */
extern void T391f78(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.feature_checker */
extern T0* T391f39(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_assertions_validity */
extern void T276f25(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_IMPLEMENTATION_CHECKER.flat_dbc_mode */
extern T1 T276f12(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_postconditions_validity */
extern void T391f75(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_POSTCONDITIONS.set_validity_error */
extern void T955f22(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.set_validity_checked */
extern void T955f21(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_precursor_procedures */
extern void T391f74(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_query_validity */
extern void T276f23(GE_context* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_QUERY].wipe_out */
extern void T1026f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].slots_wipe_out */
extern void T1026f51(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].clashes_wipe_out */
extern void T1026f50(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].key_storage_wipe_out */
extern void T1026f49(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].item_storage_wipe_out */
extern void T1026f48(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_QUERY].keep_head */
extern void T965f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUERY].set_count */
extern void T965f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].move_all_cursors_after */
extern void T1026f47(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_next_cursor */
extern void T1459f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_after */
extern void T1459f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].forth */
extern void T1026f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_forth */
extern void T1026f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].add_traversing_cursor */
extern void T1026f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_position */
extern void T1459f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].remove_traversing_cursor */
extern void T1026f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].clashes_item */
extern T6 T1026f23(GE_context* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_query_validity */
extern void T276f26(GE_context* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_QUERY].item_for_iteration */
extern T0* T1026f29(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_item */
extern T0* T1026f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].item_storage_item */
extern T0* T1026f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].after */
extern T1 T1026f34(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_after */
extern T1 T1026f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].after */
extern T1 T1459f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].start */
extern void T1026f36(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_start */
extern void T1026f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].cursor_off */
extern T1 T1026f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].off */
extern T1 T1459f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].is_empty */
extern T1 T1026f21(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_precursor_queries */
extern void T391f72(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.suppliers_enabled */
extern T1 T276f10(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_compilation_status */
extern void T282f198(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_compilation_status */
extern void T34f198(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IMPLEMENTATION_CHECKER.process_parent_class */
extern void T276f20(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_LIST.parent */
extern T0* T482f5(GE_context* ac, T0* C, T6 a1);
/* ET_PARENT.parent */
extern T0* T481f10(GE_context* ac, T0* C);
/* ET_PARENT_LIST.item */
extern T0* T482f7(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.parents */
extern T0* T83f59(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.implicit_parent_clause */
extern T0* T83f95(GE_context* ac, T0* C);
/* ET_CLASS.is_system_object_class */
extern T1 T83f83(GE_context* ac, T0* C);
/* ET_CLASS.is_dotnet */
extern T1 T83f61(GE_context* ac, T0* C);
/* ET_CLASS.is_in_dotnet_assembly */
extern T1 T83f96(GE_context* ac, T0* C);
/* ET_CLASS.is_any_class */
extern T1 T83f103(GE_context* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.item */
extern T0* T948f4(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.parents_count */
extern T6 T83f58(GE_context* ac, T0* C);
/* ET_CLASS.has_explicit_conforming_parent */
extern T1 T83f94(GE_context* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.has_conforming_parent */
extern T1 T948f5(GE_context* ac, T0* C);
/* ET_PARENT_LIST.has_conforming_parent */
extern T1 T482f10(GE_context* ac, T0* C);
/* ET_CLASS.set_checking_implementation */
extern void T83f263(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.interface_checked_successfully */
extern T1 T83f117(GE_context* ac, T0* C);
/* MUTEX.try_lock */
extern T1 T131f7(GE_context* ac, T0* C);
/* MUTEX.eif_thr_mutex_trylock */
extern T1 T131f8(GE_context* ac, T0* C, T14 a1);
/* ET_IMPLEMENTATION_CHECKER.set_fatal_error */
extern void T276f18(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.error_handler */
extern T0* T276f9(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.process_none_class */
extern void T276f17(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.process_class */
extern void T275f16(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.internal_process_class */
extern void T275f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove */
extern void T1018f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_position */
extern void T1018f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_put */
extern void T1018f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].item_storage_put */
extern void T1018f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].key_storage_keep_head */
extern void T1018f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_keep_head */
extern void T1018f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_put */
extern void T1018f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].slots_put */
extern void T1018f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].clashes_item */
extern T6 T1018f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].move_cursors_forth */
extern void T1018f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_position */
extern void T1456f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_next_cursor */
extern void T1456f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_after */
extern void T1456f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].internal_set_key_equality_tester */
extern void T1018f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].key_equality_tester */
extern T0* T1018f24(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].slots_item */
extern T6 T1018f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].hash_position */
extern T6 T1018f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].key_storage_item */
extern T0* T1018f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_item */
extern T0* T1018f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].search_position */
extern void T1018f40(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].last */
extern T0* T1018f17(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].is_empty */
extern T1 T1018f28(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_parents_validity */
extern void T275f23(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.check_parents_validity */
extern void T1019f9(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.check_constraint_creations_validity */
extern void T275f22(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creation_validity */
extern void T275f27(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0a_error */
extern void T282f201(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtgc0a */
extern T0* T1032c753(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T282f26(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtgc0a_error */
extern void T34f201(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T34f25(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0b_error */
extern void T282f200(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vtgc0b */
extern T0* T1032c752(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vtgc0b_error */
extern void T34f200(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcp3c_error */
extern void T282f199(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3c */
extern T0* T1032c751(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T282f25(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp3c_error */
extern void T34f199(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T34f24(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.feature_name */
extern T0* T799f7(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.item */
extern T0* T799f10(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.current_universe */
extern T0* T275f14(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.constraint_base_type */
extern T0* T872f8(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.creation_procedures */
extern T0* T872f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter */
extern T0* T650f7(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.formal_parameter */
extern T0* T1242f10(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.formal_parameter */
extern T0* T872f5(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.item */
extern T0* T650f5(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.check_signatures_validity */
extern void T275f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].wipe_out */
extern void T999f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_wipe_out */
extern void T999f62(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_wipe_out */
extern void T999f61(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T999f60(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_FEATURE_NAME].keep_head */
extern void T860f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME].set_count */
extern void T860f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T999f59(GE_context* ac, T0* C);
/* SPECIAL [ET_FLATTENED_FEATURE].keep_head */
extern void T1418f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].set_count */
extern void T1418f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors_after */
extern void T999f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_next_cursor */
extern void T1417f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_after */
extern void T1417f10(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].forth */
extern void T999f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_forth */
extern void T999f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].add_traversing_cursor */
extern void T999f68(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_position */
extern void T1417f12(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T999f67(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_item */
extern T6 T999f26(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.check_signature_validity */
extern void T275f26(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_validity */
extern void T1012f11(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1450f10(GE_context* ac, T0* C);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1451f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1451f12(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1450f12(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1451f13(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set */
extern void T1450f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_SIGNATURE_CHECKER.check_selected_signature_validity */
extern void T1012f15(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1012f15ot1(T0* a1);
extern T1 T1012f15ot2(T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.is_empty */
extern T1 T261f10(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_tuple_actual_parameters_unfolded */
extern void T1012f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.attached_keyword */
extern T0* T82f764(GE_context* ac, T0* C);
/* ET_KEYWORD.make_attached */
extern T0* T421c55(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.report_vdrd2c_error */
extern void T282f343(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2c */
extern T0* T1032c875(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.upper_name */
extern T0* T81f77(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T282f98(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd2c_error */
extern void T34f342(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T34f97(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2d_error */
extern void T282f342(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2d */
extern T0* T1032c874(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.name */
extern T0* T1023f12(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdrd2d_error */
extern void T34f341(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.error_handler */
extern T0* T1012f8(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.set_fatal_error */
extern void T1012f16(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.set */
extern void T403f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.force_last */
extern void T403f55(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE].force */
extern void T977f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_TYPE].fill_with */
extern void T263f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].extend */
extern void T263f10(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.resize */
extern void T403f60(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE].aliased_resized_area */
extern T0* T977f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE].aliased_resized_area */
extern T0* T263f4(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.new_capacity */
extern T6 T403f18(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.capacity */
extern T6 T403f14(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1450f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1450f9(GE_context* ac, T0* C);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1451f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1451f6(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1450f7(GE_context* ac, T0* C);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1451f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1450c8(GE_context* ac, T0* a1);
/* ET_PARENT_FEATURE.is_deferred */
extern T1 T1023f11(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.has_undefine */
extern T1 T1023f17(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_joined_signature_validity */
extern void T1012f14(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0b_error */
extern void T282f341(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_VALIDITY_ERROR.make_vdjr0b */
extern T0* T1032c873(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T282f99(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr0b_error */
extern void T34f340(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T34f98(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr0a_error */
extern void T282f340(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0a */
extern T0* T1032c872(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0a_error */
extern void T34f339(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0c_error */
extern void T282f339(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0c */
extern T0* T1032c871(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0c_error */
extern void T34f338(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_redeclared_signature_validity */
extern void T1012f13(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1012f13ot1(T0* a1);
extern T1 T1012f13ot2(T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd6b_error */
extern void T282f338(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6b */
extern T0* T1032c870(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T282f63(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd6b_error */
extern void T34f337(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T34f62(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2a_error */
extern void T282f337(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2a */
extern T0* T1032c869(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2a_error */
extern void T34f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd2b_error */
extern void T282f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2b */
extern T0* T1032c868(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2b_error */
extern void T34f335(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_for_iteration */
extern T0* T999f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_item */
extern T0* T999f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_item */
extern T0* T999f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T999f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_after */
extern T1 T999f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T1417f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].start */
extern void T999f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_start */
extern void T999f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_off */
extern T1 T999f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].off */
extern T1 T1417f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].is_empty */
extern T1 T999f31(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_feature_adaptations */
extern void T275f25(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_inherited_features */
extern void T275f28(GE_context* ac, T0* C, T0* a1);
extern T1 T275f28ot1(T0* a1, T0** a2);
/* ET_INHERITED_FEATURE.set_flattened_parent */
extern void T1024f33(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_flattened_feature */
extern void T1024f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found_item */
extern T0* T999f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found */
extern T1 T999f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search */
extern void T999f49(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search_position */
extern void T999f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].hash_position */
extern T6 T999f29(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_NAME_TESTER.test */
extern T1 T1000f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_item */
extern T0* T999f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_item */
extern T6 T999f23(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1007f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].wipe_out */
extern void T1436f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].slots_wipe_out */
extern void T1436f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].clashes_wipe_out */
extern void T1436f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1436f45(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_ALIAS_NAME].keep_head */
extern void T751f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME].set_count */
extern void T751f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1436f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].move_all_cursors_after */
extern void T1436f42(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME].set_next_cursor */
extern void T1620f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME].set_after */
extern void T1620f7(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replication */
extern void T1007f29(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].wipe_out */
extern void T1437f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_wipe_out */
extern void T1437f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_wipe_out */
extern void T1437f56(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_wipe_out */
extern void T1437f55(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_wipe_out */
extern void T1437f54(GE_context* ac, T0* C);
/* SPECIAL [ET_REPLICABLE_FEATURE].keep_head */
extern void T1622f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].set_count */
extern void T1622f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].move_all_cursors_after */
extern void T1437f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_next_cursor */
extern void T1621f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_after */
extern void T1621f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].forth */
extern void T1437f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_forth */
extern void T1437f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].add_traversing_cursor */
extern void T1437f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_position */
extern void T1621f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].remove_traversing_cursor */
extern void T1437f65(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_item */
extern T6 T1437f23(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replicated_feature */
extern void T1007f37(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vmrc2b_error */
extern void T282f334(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2b */
extern T0* T1032c866(GE_context* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].after */
extern T1 T1629f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1629f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1441f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_position */
extern void T1629f13(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1441f15(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1629f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1441f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1629f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_item */
extern T0* T1441f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1629f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1441f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_after */
extern void T1629f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1441f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1629f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].before */
extern T1 T1629f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1441f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1629c9(GE_context* ac, T0* a1);
/* ET_VALIDITY_ERROR.ast_position */
extern T0* T1032f81(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].first */
extern T0* T1441f7(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T282f96(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmrc2b_error */
extern void T34f333(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T34f95(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.selected_feature */
extern T0* T1309f17(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.has_select */
extern T1 T1023f20(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.selected_feature */
extern T0* T1024f18(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.add_replicated_feature */
extern void T1309f33(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].force_last */
extern void T1451f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_PARENT_FEATURE].put_right */
extern void T1861f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_PARENT_FEATURE].make */
extern T0* T1861c3(GE_context* ac, T0* a1);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1451c7(GE_context* ac);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].set_internal_cursor */
extern void T1451f9(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.add_replicated_feature */
extern void T1024f37(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_seed */
extern T1 T1023f21(GE_context* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_selected */
extern void T1309f35(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.set_selected */
extern void T1024f39(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.set_replicated */
extern void T1309f34(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.put */
extern void T1310f13(GE_context* ac, T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].resize_with_default */
extern void T530f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* ARRAY [INTEGER_32].conservative_resize_with_default */
extern void T314f18(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ET_FEATURE_IDS.integer_array_ */
extern T0* T1310f5(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.has */
extern T1 T1310f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.make */
extern T0* T1310c9(GE_context* ac, T6 a1);
/* ET_INHERITED_FEATURE.set_replicated */
extern void T1024f38(GE_context* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.has_selected_feature */
extern T1 T1309f18(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.has_selected_feature */
extern T1 T1024f19(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmrc2a_error */
extern void T282f333(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2a */
extern T0* T1032c865(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vmrc2a_error */
extern void T34f332(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1007f20(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1007f30(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].forth */
extern void T1440f16(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_forth */
extern void T1440f18(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].add_traversing_cursor */
extern void T1440f19(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set_next_cursor */
extern void T1625f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].remove_traversing_cursor */
extern void T1440f20(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set */
extern void T1625f8(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].put_last */
extern void T1441f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].force */
extern void T1627f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PARENT_FEATURE].fill_with */
extern void T1628f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_FEATURE].extend */
extern void T1628f7(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.seeded_feature */
extern T0* T1309f26(GE_context* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.seeded_feature */
extern T0* T1024f28(GE_context* ac, T0* C, T6 a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].item_for_iteration */
extern T0* T1440f7(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_item */
extern T0* T1440f10(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].after */
extern T1 T1440f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_after */
extern T1 T1440f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].start */
extern void T1440f15(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_start */
extern void T1440f17(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_off */
extern T1 T1440f11(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].off */
extern T1 T1625f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1441c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].set_internal_cursor */
extern void T1441f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].make */
extern T0* T1627f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_PARENT_FEATURE].make_empty */
extern T0* T1628c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].default_create */
extern T0* T1627c2(GE_context* ac);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_for_iteration */
extern T6 T1437f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_key */
extern T6 T1437f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1437f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_for_iteration */
extern T0* T1437f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_item */
extern T0* T1437f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1437f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].after */
extern T1 T1437f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_after */
extern T1 T1437f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].after */
extern T1 T1621f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].start */
extern void T1437f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_start */
extern void T1437f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_off */
extern T1 T1437f29(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].off */
extern T1 T1621f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].is_empty */
extern T1 T1437f28(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.item */
extern T6 T1310f6(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.record_replicable_feature */
extern void T1007f36(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].force_new */
extern void T1437f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_put */
extern void T1437f63(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_put */
extern void T1437f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].force */
extern void T1624f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].fill_with */
extern void T1622f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].extend */
extern void T1622f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_put */
extern void T1437f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_put */
extern void T1437f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_item */
extern T6 T1437f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].hash_position */
extern T6 T1437f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].resize */
extern void T1437f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_resize */
extern void T1437f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1437f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_resize */
extern void T1437f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_resize */
extern void T1437f68(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T1624f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T1622f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_resize */
extern void T1437f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_capacity */
extern T6 T1437f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].replace_found_item */
extern void T1437f47(GE_context* ac, T0* C, T0* a1);
/* ET_REPLICATED_FEATURE.make */
extern T0* T1439c6(GE_context* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].make */
extern T0* T1440c12(GE_context* ac);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].set_internal_cursor */
extern void T1440f14(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].new_cursor */
extern T0* T1440f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].make */
extern T0* T1625c7(GE_context* ac, T0* a1);
/* ET_REPLICATED_FEATURE.put_feature */
extern void T1439f7(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].force_last */
extern void T1440f13(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_ADAPTED_FEATURE].put_right */
extern void T1626f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_ADAPTED_FEATURE].make */
extern T0* T1626c3(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found_item */
extern T0* T1437f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found */
extern T1 T1437f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search */
extern void T1437f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search_position */
extern void T1437f58(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1007f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vmss1a_error */
extern void T282f326(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmss1a */
extern T0* T1032c858(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T282f89(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss1a_error */
extern void T34f325(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T34f88(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs1a_error */
extern void T282f325(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs1a */
extern T0* T1032c857(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T282f88(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs1a_error */
extern void T34f324(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T34f87(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].wipe_out */
extern void T1435f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].slots_wipe_out */
extern void T1435f62(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].clashes_wipe_out */
extern void T1435f61(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].key_storage_wipe_out */
extern void T1435f60(GE_context* ac, T0* C);
/* SPECIAL [ET_CALL_NAME].keep_head */
extern void T1613f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CALL_NAME].set_count */
extern void T1613f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].item_storage_wipe_out */
extern void T1435f59(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].move_all_cursors_after */
extern void T1435f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].set_next_cursor */
extern void T1617f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].set_after */
extern void T1617f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].forth */
extern void T1435f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_forth */
extern void T1435f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].add_traversing_cursor */
extern void T1435f72(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].set_position */
extern void T1617f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].remove_traversing_cursor */
extern void T1435f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].clashes_item */
extern T6 T1435f26(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdus1a_error */
extern void T282f324(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus1a */
extern T0* T1032c856(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T282f87(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus1a_error */
extern void T34f323(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T34f86(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].key_for_iteration */
extern T0* T1435f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_key */
extern T0* T1435f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].key_storage_item */
extern T0* T1435f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].item_for_iteration */
extern T1 T1435f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_item */
extern T1 T1435f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].item_storage_item */
extern T1 T1435f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].after */
extern T1 T1435f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_after */
extern T1 T1435f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].after */
extern T1 T1617f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].start */
extern void T1435f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_start */
extern void T1435f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_off */
extern T1 T1435f36(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].off */
extern T1 T1617f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].is_empty */
extern T1 T1435f35(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].wipe_out */
extern void T1434f43(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].slots_wipe_out */
extern void T1434f60(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].clashes_wipe_out */
extern void T1434f59(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].key_storage_wipe_out */
extern void T1434f58(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].item_storage_wipe_out */
extern void T1434f57(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].move_all_cursors_after */
extern void T1434f56(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].set_next_cursor */
extern void T1616f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].set_after */
extern void T1616f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].forth */
extern void T1434f42(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].cursor_forth */
extern void T1434f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].add_traversing_cursor */
extern void T1434f74(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].set_position */
extern void T1616f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].remove_traversing_cursor */
extern void T1434f73(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].clashes_item */
extern T6 T1434f22(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel2a_error */
extern void T282f323(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vlel2a */
extern T0* T1032c855(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T282f86(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel2a_error */
extern void T34f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T34f85(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].item_for_iteration */
extern T0* T1434f31(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].cursor_item */
extern T0* T1434f29(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].item_storage_item */
extern T0* T1434f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].after */
extern T1 T1434f30(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].cursor_after */
extern T1 T1434f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].after */
extern T1 T1616f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].start */
extern void T1434f41(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].cursor_start */
extern void T1434f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].cursor_off */
extern T1 T1434f34(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].off */
extern T1 T1616f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].wipe_out */
extern void T1431f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].slots_wipe_out */
extern void T1431f59(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].clashes_wipe_out */
extern void T1431f58(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].key_storage_wipe_out */
extern void T1431f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_storage_wipe_out */
extern void T1431f56(GE_context* ac, T0* C);
/* SPECIAL [ET_RENAME].keep_head */
extern void T1608f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_RENAME].set_count */
extern void T1608f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].move_all_cursors_after */
extern void T1431f55(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].set_next_cursor */
extern void T1607f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].set_after */
extern void T1607f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].forth */
extern void T1431f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].cursor_forth */
extern void T1431f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].add_traversing_cursor */
extern void T1431f74(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].set_position */
extern void T1607f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].remove_traversing_cursor */
extern void T1431f73(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].clashes_item */
extern T6 T1431f22(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc1a_error */
extern void T282f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vhrc1a */
extern T0* T1032c854(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T282f85(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc1a_error */
extern void T34f321(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T34f84(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_for_iteration */
extern T0* T1431f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].cursor_item */
extern T0* T1431f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_storage_item */
extern T0* T1431f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].after */
extern T1 T1431f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].cursor_after */
extern T1 T1431f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].after */
extern T1 T1607f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].start */
extern void T1431f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].cursor_start */
extern void T1431f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].cursor_off */
extern T1 T1431f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].off */
extern T1 T1607f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].force_last_new */
extern void T1436f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].key_storage_put */
extern void T1436f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].force */
extern void T749f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME].fill_with */
extern void T751f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME].extend */
extern void T751f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].item_storage_put */
extern void T1436f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].force */
extern void T859f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME].fill_with */
extern void T860f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME].extend */
extern void T860f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].slots_put */
extern void T1436f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].clashes_put */
extern void T1436f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].slots_item */
extern T6 T1436f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].hash_position */
extern T6 T1436f27(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].resize */
extern void T1436f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].clashes_resize */
extern void T1436f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].special_integer_ */
extern T0* T1436f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].key_storage_resize */
extern void T1436f56(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T749f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T751f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].item_storage_resize */
extern void T1436f55(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T859f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T860f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].key_storage_item */
extern T0* T1436f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].clashes_item */
extern T6 T1436f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].slots_resize */
extern void T1436f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].new_capacity */
extern T6 T1436f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].has */
extern T1 T1436f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].search_position */
extern void T1436f40(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_TESTER.test */
extern T1 T1003f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].put_last_new */
extern void T999f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_put */
extern void T999f86(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_put */
extern void T999f85(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].force */
extern void T1421f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].fill_with */
extern void T1418f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].extend */
extern void T1418f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_put */
extern void T999f79(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_put */
extern void T999f80(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].compress */
extern void T999f84(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_keep_head */
extern void T999f89(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_keep_head */
extern void T999f88(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors */
extern void T999f87(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1007f24(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_next */
extern void T1024f31(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.make */
extern T0* T1024c29(GE_context* ac, T0* a1);
/* ET_INHERITED_FEATURE.reset */
extern void T1024f30(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.put_parent_feature */
extern void T1309f30(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_IDS.cloned_object */
extern T0* T1310f4(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.twin */
extern T0* T1310f3(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.copy */
extern void T1310f12(GE_context* ac, T0* C, T0* a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].cloned_array */
extern T0* T530f1(GE_context* ac, T0* C, T0* a1);
/* ARRAY [INTEGER_32].twin */
extern T0* T314f9(GE_context* ac, T0* C);
/* ARRAY [INTEGER_32].copy */
extern void T314f19(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [INTEGER_32].twin */
extern T0* T124f7(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.has_seed */
extern T1 T1309f21(GE_context* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.is_other_seeds_shared */
extern T1 T1309f20(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.set_merged_feature */
extern void T1023f29(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.put_parent_feature */
extern void T1024f34(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.has_seed */
extern T1 T1024f23(GE_context* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.is_other_seeds_shared */
extern T1 T1024f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].replace_found_item */
extern void T999f76(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1007f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.set_next */
extern void T1309f29(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.reset */
extern void T1309f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].found_item */
extern T0* T1436f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].item_storage_item */
extern T0* T1436f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].found */
extern T1 T1436f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].search */
extern void T1436f39(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_select_name */
extern void T1023f26(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_redefine_name */
extern void T1023f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].replace_found_item */
extern void T1435f46(GE_context* ac, T0* C, T1 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].item_storage_put */
extern void T1435f54(GE_context* ac, T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].found_item */
extern T1 T1435f25(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.set_undefine_name */
extern void T1023f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].found_key */
extern T0* T1435f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].found */
extern T1 T1435f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].search */
extern void T1435f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].search_position */
extern void T1435f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].hash_position */
extern T6 T1435f28(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_NAME_TESTER.test */
extern T1 T1432f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].slots_item */
extern T6 T1435f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].remove_found_item */
extern void T1434f40(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].remove_position */
extern void T1434f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].key_storage_put */
extern void T1434f72(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CALL_NAME].item_storage_put */
extern void T1434f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].force */
extern void T1615f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CALL_NAME].fill_with */
extern void T1613f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_NAME].extend */
extern void T1613f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].key_storage_keep_head */
extern void T1434f71(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].item_storage_keep_head */
extern void T1434f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].clashes_put */
extern void T1434f63(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CALL_NAME].slots_put */
extern void T1434f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CALL_NAME].move_cursors_forth */
extern void T1434f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].search_position */
extern void T1434f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].internal_set_key_equality_tester */
extern void T1434f68(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].key_equality_tester */
extern T0* T1434f33(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].slots_item */
extern T6 T1434f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].hash_position */
extern T6 T1434f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].key_storage_item */
extern T0* T1434f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].found_item */
extern T0* T1434f21(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].found */
extern T1 T1434f17(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].search */
extern void T1434f39(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_new_name */
extern void T1023f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].remove_found_item */
extern void T1431f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].remove_position */
extern void T1431f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].key_storage_put */
extern void T1431f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_storage_put */
extern void T1431f66(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_RENAME].force */
extern void T1614f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_RENAME].fill_with */
extern void T1608f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].extend */
extern void T1608f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].key_storage_keep_head */
extern void T1431f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_storage_keep_head */
extern void T1431f71(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].clashes_put */
extern void T1431f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].slots_put */
extern void T1431f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].move_cursors_forth */
extern void T1431f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].search_position */
extern void T1431f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].internal_set_key_equality_tester */
extern void T1431f69(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].slots_item */
extern T6 T1431f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].hash_position */
extern T6 T1431f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].key_storage_item */
extern T0* T1431f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].found_item */
extern T0* T1431f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].found */
extern T1 T1431f33(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.current_system */
extern T0* T1007f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].search */
extern void T1431f42(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1007f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_next */
extern void T1023f28(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.reset */
extern void T1023f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].resize */
extern void T999f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_resize */
extern void T999f83(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].special_integer_ */
extern T0* T999f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_resize */
extern void T999f82(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_resize */
extern void T999f81(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1421f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1418f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_resize */
extern void T999f78(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_select_table */
extern void T1007f35(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss2a_error */
extern void T282f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vmss2a */
extern T0* T1032c864(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T282f95(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss2a_error */
extern void T34f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T34f94(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].put_new */
extern void T1435f51(GE_context* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].key_storage_put */
extern void T1435f69(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].slots_put */
extern void T1435f64(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].clashes_put */
extern void T1435f65(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.feature_name */
extern T0* T511f6(GE_context* ac, T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.item */
extern T0* T511f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].resize */
extern void T1435f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].clashes_resize */
extern void T1435f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].special_integer_ */
extern T0* T1435f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].key_storage_resize */
extern void T1435f67(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].aliased_resized_area */
extern T0* T1615f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_NAME].aliased_resized_area */
extern T0* T1613f3(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].item_storage_resize */
extern void T1435f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].slots_resize */
extern void T1435f63(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_redefine_table */
extern void T1007f34(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs3a_error */
extern void T282f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdrs3a */
extern T0* T1032c863(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T282f94(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs3a_error */
extern void T34f330(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T34f93(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_undefine_table */
extern void T1007f33(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus4a_error */
extern void T282f330(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdus4a */
extern T0* T1032c862(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T282f93(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus4a_error */
extern void T34f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T34f92(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].is_empty */
extern T1 T1434f32(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_export_table */
extern void T1007f32(GE_context* ac, T0* C, T0* a1);
extern T1 T1007f32ot1(T0* a1, T0** a2);
extern T1 T1007f32ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vlel3a_error */
extern void T282f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel3a */
extern T0* T1032c861(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T282f92(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel3a_error */
extern void T34f328(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T34f91(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].put_new */
extern void T1434f45(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.feature_name */
extern T0* T857f5(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_EXPORT.item */
extern T0* T857f6(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].resize */
extern void T1434f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].clashes_resize */
extern void T1434f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].special_integer_ */
extern T0* T1434f35(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].key_storage_resize */
extern void T1434f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].item_storage_resize */
extern void T1434f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].slots_resize */
extern void T1434f61(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel1a_error */
extern void T282f328(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel1a */
extern T0* T1032c860(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T282f91(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel1a_error */
extern void T34f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T34f90(GE_context* ac, T0* C, T0* a1);
/* ET_EXPORT_LIST.item */
extern T0* T510f6(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].is_empty */
extern T1 T1431f32(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_rename_table */
extern void T1007f31(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc2a_error */
extern void T282f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc2a */
extern T0* T1032c859(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T282f90(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc2a_error */
extern void T34f326(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T34f89(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].put_new */
extern void T1431f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_RENAME_LIST.rename_pair */
extern T0* T509f6(GE_context* ac, T0* C, T6 a1);
/* ET_RENAME.rename_pair */
extern T0* T1247f5(GE_context* ac, T0* C);
/* ET_RENAME_LIST.item */
extern T0* T509f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].resize */
extern void T1431f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].clashes_resize */
extern void T1431f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].special_integer_ */
extern T0* T1431f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].key_storage_resize */
extern void T1431f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_storage_resize */
extern void T1431f63(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].aliased_resized_area */
extern T0* T1614f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME].aliased_resized_area */
extern T0* T1608f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].slots_resize */
extern void T1431f60(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1007f27(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn0a_error */
extern void T282f321(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0a */
extern T0* T1032c853(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T282f56(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn0a_error */
extern void T34f320(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T34f55(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1008f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].wipe_out */
extern void T1445f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1445f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1445f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1445f43(GE_context* ac, T0* C);
/* SPECIAL [ET_DOTNET_FEATURE].keep_head */
extern void T1630f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].set_count */
extern void T1630f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1445f42(GE_context* ac, T0* C);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].keep_head */
extern void T1633f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].set_count */
extern void T1633f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1445f40(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_next_cursor */
extern void T1636f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_after */
extern void T1636f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].wipe_out */
extern void T1443f33(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1443f47(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1443f46(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1443f45(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1443f44(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1443f43(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1631f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_after */
extern void T1631f7(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_any_features */
extern void T1008f23(GE_context* ac, T0* C, T0* a1);
extern T1 T1008f23ot1(T0* a1, T0** a2);
extern T1 T1008f23ot2(T0* a1, T0** a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1008f17(GE_context* ac, T0* C, T0* a1);
/* ET_RENAME.make */
extern T0* T1247c6(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_keyword */
extern T0* T82f694(GE_context* ac, T0* C);
/* ET_KEYWORD.make_as */
extern T0* T421c58(GE_context* ac);
/* ET_RENAME.tokens */
extern T0* T1247f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].has */
extern T1 T999f40(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1008f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_system */
extern T0* T1008f15(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_universe */
extern T0* T1008f13(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features_from_parents */
extern void T1008f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1008f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1008f14(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1008f25(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].forth */
extern void T1447f15(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_forth */
extern void T1447f17(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].add_traversing_cursor */
extern void T1447f18(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1638f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].remove_traversing_cursor */
extern void T1447f19(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set */
extern void T1638f8(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].item_for_iteration */
extern T0* T1447f7(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_item */
extern T0* T1447f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].after */
extern T1 T1447f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_after */
extern T1 T1447f8(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].start */
extern void T1447f14(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_start */
extern void T1447f16(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_off */
extern T1 T1447f10(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].off */
extern T1 T1638f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found_item */
extern T0* T1445f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1445f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found */
extern T1 T1445f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search */
extern void T1445f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search_position */
extern void T1445f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].hash_position */
extern T6 T1445f22(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.test */
extern T1 T1442f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1445f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_item */
extern T6 T1445f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_item */
extern T6 T1445f23(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_feature */
extern void T1008f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1008f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found_item */
extern T0* T1443f24(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1443f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found */
extern T1 T1443f26(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search */
extern void T1443f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search_position */
extern void T1443f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].hash_position */
extern T6 T1443f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1443f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_item */
extern T6 T1443f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_equality_tester */
extern T0* T1443f29(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_item */
extern T6 T1443f20(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1008f21(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_feature */
extern void T1008f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].force_last */
extern void T1443f36(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_put */
extern void T1443f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_put */
extern void T1443f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_capacity */
extern T6 T1443f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_put */
extern void T1443f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].force */
extern void T1632f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].fill_with */
extern void T1630f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].extend */
extern void T1630f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].force_last_new */
extern void T1445f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_put */
extern void T1445f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_put */
extern void T1445f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].force */
extern void T1637f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].fill_with */
extern void T1633f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].extend */
extern void T1633f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_put */
extern void T1445f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_put */
extern void T1445f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].resize */
extern void T1445f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_resize */
extern void T1445f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1445f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_resize */
extern void T1445f55(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T1632f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T1630f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_resize */
extern void T1445f54(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T1637f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T1633f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_resize */
extern void T1445f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_capacity */
extern T6 T1445f21(GE_context* ac, T0* C, T6 a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].make */
extern T0* T1447c11(GE_context* ac);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1447f13(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1447f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1638c7(GE_context* ac, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].force_last */
extern void T1447f12(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_DOTNET_FEATURE].put_right */
extern void T1639f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_DOTNET_FEATURE].make */
extern T0* T1639c3(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].force_last_new */
extern void T999f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_capacity */
extern T6 T999f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].resize */
extern void T1443f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_resize */
extern void T1443f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1443f27(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_resize */
extern void T1443f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_resize */
extern void T1443f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_resize */
extern void T1443f48(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.resolve_signatures_unfolded_tuple_actual_parameters */
extern void T275f20(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T275f24(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_type */
extern void T1021f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INTERFACE_CHECKER.check_qualified_anchored_signatures_validity */
extern void T275f19(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_signatures_validity */
extern void T1020f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.reset_fatal_error */
extern void T1020f10(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.has_flattening_error */
extern T1 T83f57(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.set_fatal_error */
extern void T275f17(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.error_handler */
extern T0* T275f13(GE_context* ac, T0* C);
/* ET_CLASS.set_interface_checked */
extern void T83f247(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.process_class */
extern void T274f30(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.internal_process_class */
extern void T274f32(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_features */
extern void T274f35(GE_context* ac, T0* C);
extern T1 T274f35ot1(T0* a1, T0** a2);
extern T1 T274f35ot2(T0* a1, T0** a2);
/* ET_FEATURE_FLATTENER.check_kernel_features_validity */
extern void T274f46(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.forth_feature_name */
extern T0* T82f254(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.after_feature_name */
extern T0* T82f253(GE_context* ac, T0* C);
/* ET_CLASS.is_iteration_cursor_class */
extern T1 T83f114(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_cursor_feature_name */
extern T0* T82f252(GE_context* ac, T0* C);
/* ET_CLASS.is_iterable_class */
extern T1 T83f113(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.dispose_feature_name */
extern T0* T82f251(GE_context* ac, T0* C);
/* ET_CLASS.is_disposable_class */
extern T1 T83f112(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.call_feature_name */
extern T0* T82f250(GE_context* ac, T0* C);
/* ET_CLASS.is_routine_class */
extern T1 T83f111(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe5a_error */
extern void T282f271(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe5a */
extern T0* T1032c804(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T282f54(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe5a_error */
extern void T34f271(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T34f53(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_equal_feature_name */
extern T0* T82f249(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.copy_feature_name */
extern T0* T82f248(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.current_system */
extern T0* T274f27(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_convert_validity */
extern void T274f45(GE_context* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.convert_feature */
extern T0* T811f6(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_PROCEDURE.convert_feature */
extern T0* T1251f6(GE_context* ac, T0* C);
/* ET_CONVERT_FUNCTION.convert_feature */
extern T0* T1250f5(GE_context* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.item */
extern T0* T811f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_creators_validity */
extern void T274f44(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcp2a_error */
extern void T282f270(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp2a */
extern T0* T1032c803(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T282f53(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp2a_error */
extern void T34f270(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T34f52(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp2b_error */
extern void T282f269(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp2b */
extern T0* T1032c802(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp2b_error */
extern void T34f269(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6a_error */
extern void T282f268(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcc6a */
extern T0* T1032c801(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T282f52(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc6a_error */
extern void T34f268(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T34f51(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp3b_error */
extern void T282f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3b */
extern T0* T1032c800(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3b_error */
extern void T34f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcp3a_error */
extern void T282f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3a */
extern T0* T1032c799(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3a_error */
extern void T34f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.feature_name */
extern T0* T816f9(GE_context* ac, T0* C, T6 a1);
/* ET_CREATOR.item */
extern T0* T816f14(GE_context* ac, T0* C, T6 a1);
/* ET_CREATOR_LIST.item */
extern T0* T819f7(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp1a_error */
extern void T282f265(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp1a */
extern T0* T1032c798(GE_context* ac, T0* a1, T0* a2);
/* ET_CREATOR.position */
extern T0* T816f8(GE_context* ac, T0* C);
/* ET_CREATOR.first */
extern T0* T816f13(GE_context* ac, T0* C);
/* ET_CLIENTS.position */
extern T0* T783f12(GE_context* ac, T0* C);
/* ET_CLIENT.position */
extern T0* T507f5(GE_context* ac, T0* C);
/* ET_CLIENTS.first */
extern T0* T783f15(GE_context* ac, T0* C);
/* ET_CLIENTS.is_empty */
extern T1 T783f14(GE_context* ac, T0* C);
/* ET_CREATOR.clients_clause */
extern T0* T816f12(GE_context* ac, T0* C);
extern T1 T816f12ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T282f51(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp1a_error */
extern void T34f265(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T34f50(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.first */
extern T0* T819f6(GE_context* ac, T0* C);
/* ET_CREATOR_LIST.is_empty */
extern T1 T819f5(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_assigners_validity */
extern void T274f43(GE_context* ac, T0* C);
extern T1 T274f43ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vfac4a_error */
extern void T282f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_VALIDITY_ERROR.make_vfac4a */
extern T0* T1032c797(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_NULL_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T282f50(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac4a_error */
extern void T34f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T34f49(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac3a_error */
extern void T282f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfac3a */
extern T0* T1032c796(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T282f49(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac3a_error */
extern void T34f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T34f48(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac2a_error */
extern void T282f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfac2a */
extern T0* T1032c795(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T282f48(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac2a_error */
extern void T34f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T34f47(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1b_error */
extern void T282f261(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1b */
extern T0* T1032c794(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T282f47(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac1b_error */
extern void T34f261(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T34f46(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1a_error */
extern void T282f260(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1a */
extern T0* T1032c793(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfac1a_error */
extern void T34f260(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcch2a_error */
extern void T282f256(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.set_ise_reported */
extern void T1032f789(GE_context* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vcch2a */
extern T0* T1032c788(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T282f43(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch2a_error */
extern void T34f256(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T34f42(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1a_error */
extern void T282f255(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1a */
extern T0* T1032c787(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T282f42(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch1a_error */
extern void T34f255(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T34f41(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1b_error */
extern void T282f254(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1b */
extern T0* T1032c786(GE_context* ac, T0* a1, T0* a2);
/* ET_INHERITED_FEATURE.name */
extern T0* T1024f22(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vcch1b_error */
extern void T34f254(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].go_after */
extern void T999f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_go_after */
extern void T999f65(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_has_deferred_features */
extern void T83f260(GE_context* ac, T0* C, T1 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].wipe_out */
extern void T1002f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_wipe_out */
extern void T1002f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_wipe_out */
extern void T1002f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1002f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1002f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].move_all_cursors_after */
extern void T1002f47(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_next_cursor */
extern void T1423f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_after */
extern void T1423f7(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_signature_validity */
extern void T274f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].force_last_new */
extern void T1002f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_put */
extern void T1002f46(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_put */
extern void T1002f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_put */
extern void T1002f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_put */
extern void T1002f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_item */
extern T6 T1002f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].hash_position */
extern T6 T1002f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].resize */
extern void T1002f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_resize */
extern void T1002f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].special_integer_ */
extern T0* T1002f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_resize */
extern void T1002f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_resize */
extern void T1002f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_item */
extern T0* T1002f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_item */
extern T6 T1002f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_resize */
extern void T1002f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_capacity */
extern T6 T1002f30(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1f_error */
extern void T282f253(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1f */
extern T0* T1032c785(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.alias_lower_name */
extern T0* T1032f85(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T282f41(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav1f_error */
extern void T34f253(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T34f40(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1c_error */
extern void T282f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1c */
extern T0* T1032c784(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1c_error */
extern void T34f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4b_error */
extern void T282f251(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4b */
extern T0* T1032c783(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T282f40(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav4b_error */
extern void T34f251(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T34f39(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav2b_error */
extern void T282f250(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2b */
extern T0* T1032c782(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T282f39(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav2b_error */
extern void T34f250(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T34f38(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1g_error */
extern void T282f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1g */
extern T0* T1032c781(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.alias_name */
extern T0* T1023f18(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vfav1g_error */
extern void T34f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1d_error */
extern void T282f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1d */
extern T0* T1032c780(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1d_error */
extern void T34f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4c_error */
extern void T282f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4c */
extern T0* T1032c779(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4c_error */
extern void T34f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2c_error */
extern void T282f246(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2c */
extern T0* T1032c778(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2c_error */
extern void T34f246(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1h_error */
extern void T282f245(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1h */
extern T0* T1032c777(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1h_error */
extern void T34f245(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1e_error */
extern void T282f244(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1e */
extern T0* T1032c776(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1e_error */
extern void T34f244(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4d_error */
extern void T282f243(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4d */
extern T0* T1032c775(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4d_error */
extern void T34f243(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2d_error */
extern void T282f242(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2d */
extern T0* T1032c774(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2d_error */
extern void T34f242(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found_item */
extern T0* T1002f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_item */
extern T0* T1002f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found */
extern T1 T1002f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search */
extern void T1002f36(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search_position */
extern void T1002f40(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_redeclared_signatures_checked */
extern void T83f259(GE_context* ac, T0* C, T1 a1);
/* ET_FEATURE_FLATTENER.check_anchored_signatures */
extern void T274f41(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.check_signatures */
extern void T1011f9(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].wipe_out */
extern void T1448f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].wipe_out */
extern void T1088f15(GE_context* ac, T0* C);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].keep_head */
extern void T1460f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].set_count */
extern void T1460f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].wipe_out */
extern void T1640f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_wipe_out */
extern void T1640f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_wipe_out */
extern void T1640f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_wipe_out */
extern void T1640f41(GE_context* ac, T0* C);
/* SPECIAL [ET_LIKE_FEATURE].keep_head */
extern void T1641f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LIKE_FEATURE].set_count */
extern void T1641f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_wipe_out */
extern void T1640f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].move_all_cursors_after */
extern void T1640f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].set_next_cursor */
extern void T1776f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].set_after */
extern void T1776f7(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].wipe_out */
extern void T1449f12(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].move_all_cursors_after */
extern void T1449f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_next_cursor */
extern void T1643f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_after */
extern void T1643f10(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].reset */
extern void T1448f14(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtat2a_error */
extern void T282f335(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat2a */
extern T0* T1032c867(GE_context* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].forth */
extern void T1643f14(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_forth */
extern void T1449f18(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_position */
extern void T1643f15(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].add_traversing_cursor */
extern void T1449f19(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].remove_traversing_cursor */
extern void T1449f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].go_after */
extern void T1643f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_go_after */
extern void T1449f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].off */
extern T1 T1643f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].before */
extern T1 T1643f8(GE_context* ac, T0* C);
/* ET_CLASS.seeded_feature */
extern T0* T83f192(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].item */
extern T0* T1643f6(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_item */
extern T0* T1449f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].after */
extern T1 T1643f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].start */
extern void T1643f12(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_start */
extern void T1449f16(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T282f97(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat2a_error */
extern void T34f334(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T34f96(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1011f6(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1011f10(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].is_empty */
extern T1 T1449f6(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].sort */
extern void T1448f11(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].put_last */
extern void T1449f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].force */
extern void T1642f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LIKE_FEATURE].fill_with */
extern void T1641f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_FEATURE].extend */
extern void T1641f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].item */
extern T0* T1449f8(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7b_error */
extern void T282f241(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7b */
extern T0* T1032c773(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T282f38(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd7b_error */
extern void T34f241(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T34f37(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7a_error */
extern void T282f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7a */
extern T0* T1032c772(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd7a_error */
extern void T34f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1b_error */
extern void T282f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1b */
extern T0* T1032c771(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1b_error */
extern void T34f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1a_error */
extern void T282f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1a */
extern T0* T1032c770(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1a_error */
extern void T34f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav4a_error */
extern void T282f237(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav4a */
extern T0* T1032c769(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav4a_error */
extern void T34f237(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav2a_error */
extern void T282f236(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav2a */
extern T0* T1032c768(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav2a_error */
extern void T34f236(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd6a_error */
extern void T282f235(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd6a */
extern T0* T1032c767(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd6a_error */
extern void T34f235(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd5a_error */
extern void T282f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd5a */
extern T0* T1032c766(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T282f37(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd5a_error */
extern void T34f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T34f36(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd4a_error */
extern void T282f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd4a */
extern T0* T1032c765(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T282f36(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd4a_error */
extern void T34f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T34f35(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T274f40(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_type */
extern void T1010f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.check_signature_vtct_validity */
extern void T274f39(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_vtct_validity */
extern void T1012f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.resolve_identifier_signature */
extern void T274f38(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrfa0a_error */
extern void T282f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrfa0a */
extern T0* T1032c792(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T282f46(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrfa0a_error */
extern void T34f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T34f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item */
extern T0* T999f41(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0a_error */
extern void T282f258(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0a */
extern T0* T1032c791(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vreg_error */
extern T1 T282f45(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vreg0a_error */
extern void T34f258(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vreg_error */
extern T1 T34f44(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_type */
extern void T1009f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_PROCEDURE].wipe_out */
extern void T670f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_all_cursors_after */
extern void T670f23(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T1404f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_after */
extern void T1404f12(GE_context* ac, T0* C);
/* ET_CLASS.set_procedures */
extern void T83f258(GE_context* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.set_declared_count */
extern void T266f10(GE_context* ac, T0* C, T6 a1);
/* ET_PROCEDURE_LIST.put_first */
extern void T266f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].force */
extern void T959f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PROCEDURE].fill_with */
extern void T960f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PROCEDURE].extend */
extern void T960f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].item */
extern T0* T670f7(GE_context* ac, T0* C, T6 a1);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort */
extern void T1307f3(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort_with_comparator */
extern void T1307f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_PROCEDURE].swap */
extern void T670f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].replace */
extern void T670f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_SEEDED_PROCEDURE_COMPARATOR.less_than */
extern T1 T1510f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.procedure_sorter */
extern T0* T274f26(GE_context* ac, T0* C);
/* DS_QUICK_SORTER [ET_PROCEDURE].make */
extern T0* T1307c2(GE_context* ac, T0* a1);
/* ET_SEEDED_PROCEDURE_COMPARATOR.make */
extern T0* T1510c2(GE_context* ac);
/* DS_ARRAYED_LIST [ET_QUERY].wipe_out */
extern void T669f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].move_all_cursors_after */
extern void T669f23(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_next_cursor */
extern void T1403f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_after */
extern void T1403f12(GE_context* ac, T0* C);
/* ET_CLASS.set_queries */
extern void T83f257(GE_context* ac, T0* C, T0* a1);
/* ET_QUERY_LIST.set_declared_count */
extern void T265f10(GE_context* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.put_first */
extern void T265f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUERY].force */
extern void T964f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUERY].fill_with */
extern void T965f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUERY].extend */
extern void T965f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].item */
extern T0* T669f7(GE_context* ac, T0* C, T6 a1);
/* DS_QUICK_SORTER [ET_QUERY].subsort */
extern void T1306f3(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_QUERY].subsort_with_comparator */
extern void T1306f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_QUERY].swap */
extern void T669f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].replace */
extern void T669f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_SEEDED_QUERY_COMPARATOR.less_than */
extern T1 T1507f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.query_sorter */
extern T0* T274f25(GE_context* ac, T0* C);
/* DS_QUICK_SORTER [ET_QUERY].make */
extern T0* T1306c2(GE_context* ac, T0* a1);
/* ET_SEEDED_QUERY_COMPARATOR.make */
extern T0* T1507c2(GE_context* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].back */
extern void T999f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_back */
extern void T999f64(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_before */
extern void T1417f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].force_last */
extern void T669f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].resize */
extern void T669f24(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUERY].aliased_resized_area */
extern T0* T964f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUERY].aliased_resized_area */
extern T0* T965f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_capacity */
extern T6 T669f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].extendible */
extern T1 T669f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_last */
extern void T670f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].resize */
extern void T670f24(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].aliased_resized_area */
extern T0* T959f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PROCEDURE].aliased_resized_area */
extern T0* T960f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_capacity */
extern T6 T670f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].extendible */
extern T1 T670f10(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.flatten_feature */
extern void T274f37(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_inherited_feature */
extern void T274f49(GE_context* ac, T0* C, T0* a1);
extern T1 T274f49ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vdjr2b_error */
extern void T282f278(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2b */
extern T0* T1032c811(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T282f58(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr2b_error */
extern void T34f278(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T34f57(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn2b_error */
extern void T282f277(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2b */
extern T0* T1032c810(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T282f57(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn2b_error */
extern void T34f277(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T34f56(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2a_error */
extern void T282f276(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2a */
extern T0* T1032c809(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr2a_error */
extern void T34f276(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn2a_error */
extern void T282f275(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2a */
extern T0* T1032c808(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn2a_error */
extern void T34f275(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.process_replicated_seeds */
extern void T274f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_REDECLARED_FEATURE.set_other_seeds */
extern void T1309f32(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_other_seeds */
extern void T1024f36(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.set_first_seed */
extern void T1309f31(GE_context* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.set_first_seed */
extern void T1024f35(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.replace */
extern void T1310f10(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.first */
extern T6 T1310f8(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.remove */
extern void T1310f11(GE_context* ac, T0* C, T6 a1);
/* ET_PARENT_FEATURE.extended_name */
extern T0* T1023f19(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.make */
extern T0* T1262c7(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].wipe_out */
extern void T1017f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_wipe_out */
extern void T1017f60(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_wipe_out */
extern void T1017f59(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_wipe_out */
extern void T1017f58(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_wipe_out */
extern void T1017f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].move_all_cursors_after */
extern void T1017f56(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_next_cursor */
extern void T1453f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_after */
extern void T1453f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].forth */
extern void T1017f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_forth */
extern void T1017f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].add_traversing_cursor */
extern void T1017f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_position */
extern void T1453f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove_traversing_cursor */
extern void T1017f70(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_item */
extern T6 T1017f23(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_LIST.put_first */
extern void T416f6(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_LIST.fixed_array */
extern T0* T416f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_for_iteration */
extern T0* T1017f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_item */
extern T0* T1017f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1017f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].after */
extern T1 T1017f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_after */
extern T1 T1017f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].after */
extern T1 T1453f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].start */
extern void T1017f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_start */
extern void T1017f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_off */
extern T1 T1017f34(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].off */
extern T1 T1453f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].is_empty */
extern T1 T1017f33(GE_context* ac, T0* C);
/* ET_FEATURE_LIST.make_with_capacity */
extern T0* T416c5(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove */
extern void T1017f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove_position */
extern void T1017f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_put */
extern void T1017f52(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_put */
extern void T1017f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_keep_head */
extern void T1017f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_keep_head */
extern void T1017f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_put */
extern void T1017f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_put */
extern void T1017f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].move_cursors_forth */
extern void T1017f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].internal_set_key_equality_tester */
extern void T1017f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_item */
extern T6 T1017f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].hash_position */
extern T6 T1017f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1017f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].search_position */
extern void T1017f47(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENTS.same_clients */
extern T1 T783f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.same_clients */
extern T1 T483f9(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.clients */
extern T0* T1023f16(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.has_rename */
extern T1 T1023f15(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmfn0c_error */
extern void T282f274(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0c */
extern T0* T1032c807(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0c_error */
extern void T34f274(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.same_version */
extern T1 T1023f14(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].force_last */
extern void T1017f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].resize */
extern void T1017f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_resize */
extern void T1017f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1017f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_resize */
extern void T1017f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_resize */
extern void T1017f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_resize */
extern void T1017f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_capacity */
extern T6 T1017f22(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_no_redeclaration_validity */
extern void T274f54(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs4a_error */
extern void T282f289(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdrs4a */
extern T0* T1032c823(GE_context* ac, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.feature_lower_name */
extern T0* T1032f132(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T282f61(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs4a_error */
extern void T34f289(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T34f60(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_redefine */
extern T1 T1023f13(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_redefine_clause_validity */
extern void T274f57(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2b_error */
extern void T282f300(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2b */
extern T0* T1032c834(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T282f68(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs2b_error */
extern void T34f300(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T34f67(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2a_error */
extern void T282f299(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2a */
extern T0* T1032c833(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs2a_error */
extern void T34f299(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.check_undefine_clause_validity */
extern void T274f56(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2b_error */
extern void T282f298(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2b */
extern T0* T1032c832(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T282f67(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus2b_error */
extern void T34f298(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T34f66(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2a_error */
extern void T282f297(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2a */
extern T0* T1032c831(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdus2a_error */
extern void T34f297(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdus3a_error */
extern void T282f296(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus3a */
extern T0* T1032c830(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T282f66(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus3a_error */
extern void T34f296(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T34f65(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_rename_clause_validity */
extern void T274f55(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4d_error */
extern void T282f295(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4d */
extern T0* T1032c829(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T282f65(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc4d_error */
extern void T34f295(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T34f64(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4c_error */
extern void T282f294(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4c */
extern T0* T1032c828(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4c_error */
extern void T34f294(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vfav4e_error */
extern void T282f293(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4e */
extern T0* T1032c827(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4e_error */
extern void T34f293(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4b_error */
extern void T282f292(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4b */
extern T0* T1032c826(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4b_error */
extern void T34f292(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4a_error */
extern void T282f291(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4a */
extern T0* T1032c825(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4a_error */
extern void T34f291(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc5a_error */
extern void T282f290(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc5a */
extern T0* T1032c824(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T282f64(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc5a_error */
extern void T34f290(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T34f63(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.is_replicated */
extern T1 T1024f20(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T274f28(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T274f28ac1(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].wipe_out */
extern void T1005f16(GE_context* ac, T0* C);
/* SPECIAL [ET_CLIENT_LIST].keep_head */
extern void T1425f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_LIST].set_count */
extern void T1425f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_all_cursors_after */
extern void T1005f21(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_next_cursor */
extern void T1426f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_after */
extern void T1426f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].wipe_out */
extern void T1006f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_wipe_out */
extern void T1006f66(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_wipe_out */
extern void T1006f65(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_wipe_out */
extern void T1006f64(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_wipe_out */
extern void T1006f63(GE_context* ac, T0* C);
/* SPECIAL [ET_CLIENT].keep_head */
extern void T1430f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT].set_count */
extern void T1430f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].move_all_cursors_after */
extern void T1006f62(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_next_cursor */
extern void T1428f14(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_after */
extern void T1428f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].back */
extern void T1006f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_back */
extern void T1006f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].add_traversing_cursor */
extern void T1006f72(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_position */
extern void T1428f12(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].remove_traversing_cursor */
extern void T1006f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_before */
extern void T1428f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_item */
extern T6 T1006f31(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENTS.put_first */
extern void T783f17(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.fixed_array */
extern T0* T783f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_for_iteration */
extern T0* T1006f22(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_item */
extern T0* T1006f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_item */
extern T0* T1006f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].before */
extern T1 T1006f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_before */
extern T1 T1006f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].before */
extern T1 T1428f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].finish */
extern void T1006f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_finish */
extern void T1006f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_off */
extern T1 T1006f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].off */
extern T1 T1428f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].is_empty */
extern T1 T1006f36(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].for_all */
extern T1 T1550f6(GE_context* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].forth */
extern void T1733f8(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_forth */
extern void T1550f12(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].forth */
extern void T1428f17(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_forth */
extern void T1006f75(GE_context* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].go_after */
extern void T1733f7(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_go_after */
extern void T1550f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].go_after */
extern void T1428f16(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_go_after */
extern void T1006f74(GE_context* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].item */
extern T0* T1733f4(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_item */
extern T0* T1550f7(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].key */
extern T0* T1428f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_key */
extern T0* T1006f40(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_item */
extern T0* T1006f35(GE_context* ac, T0* C, T6 a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].after */
extern T1 T1733f3(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].after */
extern T1 T1428f8(GE_context* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].start */
extern void T1733f6(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_start */
extern void T1550f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].start */
extern void T1428f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_start */
extern void T1006f73(GE_context* ac, T0* C, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].new_cursor */
extern T0* T1550f4(GE_context* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].make */
extern T0* T1733c5(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].keys */
extern T0* T1006f39(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].make */
extern T0* T1550c8(GE_context* ac, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].set_internal_cursor */
extern void T1550f9(GE_context* ac, T0* C, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].new_cursor_with_table_cursor */
extern T0* T1550f5(GE_context* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].make_with_table_cursor */
extern T0* T1733c9(GE_context* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].is_empty */
extern T1 T1005f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].force */
extern void T1006f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_put */
extern void T1006f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_put */
extern void T1006f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_put */
extern void T1006f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_item */
extern T6 T1006f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].hash_position */
extern T6 T1006f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].resize */
extern void T1006f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_resize */
extern void T1006f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].special_integer_ */
extern T0* T1006f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_resize */
extern void T1006f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_resize */
extern void T1006f68(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].aliased_resized_area */
extern T0* T1429f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT].aliased_resized_area */
extern T0* T1430f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_resize */
extern void T1006f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_capacity */
extern T6 T1006f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_put */
extern void T1006f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].force */
extern void T1429f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLIENT].fill_with */
extern void T1430f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT].extend */
extern void T1430f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].search_position */
extern void T1006f54(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.client */
extern T0* T783f7(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENT.client */
extern T0* T507f4(GE_context* ac, T0* C);
/* ET_CLIENTS.item */
extern T0* T783f10(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.client */
extern T0* T483f4(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.item */
extern T0* T483f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].remove */
extern void T1005f15(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_left */
extern void T1005f20(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_cursors_left */
extern void T1005f19(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_position */
extern void T1426f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].remove_last */
extern void T1005f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_last_cursors_after */
extern void T1005f22(GE_context* ac, T0* C);
/* ET_CLIENTS.is_none */
extern T1 T783f11(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.is_none */
extern T1 T483f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].item */
extern T0* T1005f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].first */
extern T0* T1005f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].force_last */
extern void T1005f14(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].force */
extern void T1424f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLIENT_LIST].fill_with */
extern void T1425f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT_LIST].extend */
extern void T1425f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].resize */
extern void T1005f17(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1424f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1425f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].new_capacity */
extern T6 T1005f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].extendible */
extern T1 T1005f10(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_EXPORT.clients */
extern T0* T857f9(GE_context* ac, T0* C, T0* a1);
/* ET_ALL_EXPORT.clients */
extern T0* T1248f6(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.has_feature_name */
extern T1 T857f8(GE_context* ac, T0* C, T0* a1);
/* ET_ALL_EXPORT.has_feature_name */
extern T1 T1248f5(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.is_all */
extern T1 T857f7(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.flatten_redeclared_feature */
extern void T274f48(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_precursor_validity */
extern void T274f53(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_feature_validity */
extern void T1016f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd3b_error */
extern void T282f273(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3b */
extern T0* T1032c806(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_POSTCONDITIONS.position */
extern T0* T955f13(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.first */
extern T0* T955f15(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.is_empty */
extern T1 T955f14(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T282f55(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd3b_error */
extern void T34f273(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T34f54(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.is_ensure_then */
extern T1 T955f12(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd3a_error */
extern void T282f272(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3a */
extern T0* T1032c805(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.position */
extern T0* T413f13(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.first */
extern T0* T413f15(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.is_empty */
extern T1 T413f14(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdrd3a_error */
extern void T34f272(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.is_require_else */
extern T1 T413f12(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_redeclaration_validity */
extern void T274f52(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd6a_error */
extern void T282f288(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6a */
extern T0* T1032c822(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd6a_error */
extern void T34f288(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4b_error */
extern void T282f287(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4b */
extern T0* T1032c821(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T282f62(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd4b_error */
extern void T34f287(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T34f61(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd4c_error */
extern void T282f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4c */
extern T0* T1032c820(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4c_error */
extern void T34f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn0b_error */
extern void T282f285(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_ge_reported */
extern void T1032f819(GE_context* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vmfn0b */
extern T0* T1032c818(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0b_error */
extern void T34f285(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4a_error */
extern void T282f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4a */
extern T0* T1032c817(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4a_error */
extern void T34f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrs4b_error */
extern void T282f283(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs4b */
extern T0* T1032c816(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs4b_error */
extern void T34f283(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd5a_error */
extern void T282f282(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd5a */
extern T0* T1032c815(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T282f60(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd5a_error */
extern void T34f282(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T34f59(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7c_error */
extern void T282f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7c */
extern T0* T1032c814(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T282f59(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd7c_error */
extern void T34f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T34f58(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7a_error */
extern void T282f280(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7a */
extern T0* T1032c813(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7a_error */
extern void T34f280(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd7b_error */
extern void T282f279(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7b */
extern T0* T1032c812(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7b_error */
extern void T34f279(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REDECLARED_FEATURE.is_replicated */
extern T1 T1309f19(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_builtin_feature_validity */
extern void T274f50(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_feature_validity */
extern void T1015f13(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss3a_error */
extern void T282f257(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmss3a */
extern T0* T1032c790(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T282f44(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss3a_error */
extern void T34f257(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T34f43(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_immediate_feature */
extern void T274f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T999f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_before */
extern T1 T999f34(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T1417f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].finish */
extern void T999f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_finish */
extern void T999f63(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_feature_adaptations */
extern void T274f36(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_parents_validity */
extern void T274f34(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.check_parents_validity */
extern void T1013f10(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_formal_parameters_validity */
extern void T274f33(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.check_formal_parameters_validity */
extern void T1014f9(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_constraint_validity */
extern void T1014f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.constraint */
extern T0* T872f6(GE_context* ac, T0* C);
/* ET_CLASS.has_ancestors_error */
extern T1 T83f107(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.set_fatal_error */
extern void T274f31(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.error_handler */
extern T0* T274f23(GE_context* ac, T0* C);
/* ET_CLASS.set_features_flattened */
extern void T83f256(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.process_class */
extern void T273f14(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.internal_process_class */
extern void T273f16(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1a_error */
extern void T282f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1a */
extern T0* T1032c758(GE_context* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].after */
extern T1 T1028f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].forth */
extern void T1028f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_forth */
extern void T277f38(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].add_traversing_cursor */
extern void T277f39(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_traversing_cursor */
extern void T277f40(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].item */
extern T0* T1028f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_item */
extern T0* T277f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].start */
extern void T1028f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_start */
extern void T277f37(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].off */
extern T1 T1028f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].before */
extern T1 T1028f8(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T282f30(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr1a_error */
extern void T34f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T34f29(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].first */
extern T0* T277f11(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.set_parents_inheritance_error */
extern void T273f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].wipe_out */
extern void T995f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].wipe_out */
extern void T1410f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_wipe_out */
extern void T1410f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_wipe_out */
extern void T1410f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_wipe_out */
extern void T1410f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_wipe_out */
extern void T1410f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].move_all_cursors_after */
extern void T1410f41(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_next_cursor */
extern void T1604f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_after */
extern void T1604f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].wipe_out */
extern void T277f24(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].reset */
extern void T995f17(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].is_empty */
extern T1 T277f10(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.check_parents_validity */
extern void T273f20(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER1.check_parents_validity */
extern void T997f9(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.check_formal_parameters_validity */
extern void T273f19(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameters_validity */
extern void T998f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_cycles */
extern void T998f15(GE_context* ac, T0* C);
extern T1 T998f15ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3h_error */
extern void T282f320(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3h */
extern T0* T1032c852(GE_context* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].after */
extern T1 T1606f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].forth */
extern void T1606f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_forth */
extern void T1415f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_position */
extern void T1606f14(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].add_traversing_cursor */
extern void T1415f19(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1606f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].remove_traversing_cursor */
extern void T1415f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].item */
extern T0* T1606f4(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_item */
extern T0* T1415f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].start */
extern void T1606f12(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_start */
extern void T1415f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_after */
extern void T1606f10(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].is_empty */
extern T1 T1415f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].off */
extern T1 T1606f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].before */
extern T1 T1606f8(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].first */
extern T0* T1415f8(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T282f84(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg3h_error */
extern void T34f319(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T34f83(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].wipe_out */
extern void T1414f12(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].wipe_out */
extern void T1605f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_wipe_out */
extern void T1605f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_wipe_out */
extern void T1605f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_wipe_out */
extern void T1605f39(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].keep_head */
extern void T873f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].set_count */
extern void T873f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_wipe_out */
extern void T1605f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1605f36(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1774f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].set_after */
extern void T1774f7(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].wipe_out */
extern void T1415f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1415f15(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].reset */
extern void T1414f14(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint_base_type */
extern void T1242f80(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.set_constraint_base_type */
extern void T872f78(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].item */
extern T0* T1415f7(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3e_error */
extern void T282f319(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3e */
extern T0* T1032c851(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3e_error */
extern void T34f318(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.older_or_same_ise_version */
extern T1 T73f40(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.ise_6_1_latest */
extern T0* T998f10(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].sort */
extern void T1414f11(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].put_last */
extern void T1415f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].force */
extern void T871f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].fill_with */
extern void T873f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].extend */
extern void T873f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].count */
extern T6 T1414f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_validity */
extern void T998f14(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg2a_error */
extern void T282f318(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg2a */
extern T0* T1032c850(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T282f83(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg2a_error */
extern void T34f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T34f82(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg1a_error */
extern void T282f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg1a */
extern T0* T1032c849(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T282f82(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg1a_error */
extern void T34f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T34f81(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.error_handler */
extern T0* T998f8(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_fatal_error */
extern void T998f13(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.current_universe */
extern T0* T998f7(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.set_ancestors */
extern void T273f18(GE_context* ac, T0* C);
/* ET_CLASS.set_conforming_ancestors */
extern void T83f255(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_ancestors */
extern void T83f254(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].wipe_out */
extern void T996f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_wipe_out */
extern void T996f54(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_wipe_out */
extern void T996f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_wipe_out */
extern void T996f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_wipe_out */
extern void T996f51(GE_context* ac, T0* C);
/* SPECIAL [ET_BASE_TYPE].keep_head */
extern void T1320f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE].set_count */
extern void T1320f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].move_all_cursors_after */
extern void T996f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_next_cursor */
extern void T1411f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_after */
extern void T1411f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].forth */
extern void T996f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_forth */
extern void T996f48(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].add_traversing_cursor */
extern void T996f63(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_position */
extern void T1411f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].remove_traversing_cursor */
extern void T996f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_item */
extern T6 T996f39(GE_context* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_LIST.put_last */
extern void T420f8(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].force */
extern void T1321f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].fill_with */
extern void T1320f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].extend */
extern void T1320f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_for_iteration */
extern T0* T996f22(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_item */
extern T0* T996f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_item */
extern T0* T996f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].after */
extern T1 T996f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_after */
extern T1 T996f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].after */
extern T1 T1411f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].start */
extern void T996f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_start */
extern void T996f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_off */
extern T1 T996f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].off */
extern T1 T1411f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].is_empty */
extern T1 T996f24(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_parent_to_ancestors */
extern void T273f23(GE_context* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].force_new */
extern void T996f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_put */
extern void T996f60(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_put */
extern void T996f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_put */
extern void T996f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_put */
extern void T996f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_item */
extern T6 T996f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].hash_position */
extern T6 T996f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].resize */
extern void T996f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_resize */
extern void T996f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].special_integer_ */
extern T0* T996f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_resize */
extern void T996f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_resize */
extern void T996f65(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].aliased_resized_area */
extern T0* T1321f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BASE_TYPE].aliased_resized_area */
extern T0* T1320f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_item */
extern T0* T996f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_resize */
extern void T996f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_capacity */
extern T6 T996f35(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvagp0a_error */
extern void T282f232(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvagp0a */
extern T0* T1032c764(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T282f35(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvagp0a_error */
extern void T34f232(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T34f34(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].found_item */
extern T0* T996f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].found */
extern T1 T996f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].search */
extern void T996f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].search_position */
extern void T996f55(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso2a_error */
extern void T282f231(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso2a */
extern T0* T1032c763(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T282f34(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso2a_error */
extern void T34f231(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T34f33(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtct0a_error */
extern void T282f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtct0a */
extern T0* T1032c762(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtct_error */
extern T1 T282f33(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtct0a_error */
extern void T34f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtct_error */
extern T1 T34f32(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso1a_error */
extern void T282f229(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso1a */
extern T0* T1032c761(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T282f32(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso1a_error */
extern void T34f229(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T34f31(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhay0a_error */
extern void T282f228(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vhay0a */
extern T0* T1032c760(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhay_error */
extern T1 T282f31(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhay0a_error */
extern void T34f228(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vhay_error */
extern T1 T34f30(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1b_error */
extern void T282f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1b */
extern T0* T1032c759(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr1b_error */
extern void T34f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_LIST.is_conforming */
extern T1 T482f6(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.current_system */
extern T0* T273f12(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].sort */
extern void T995f12(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_class_to_sorter */
extern void T273f17(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.current_universe */
extern T0* T273f11(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_parents_to_sorter */
extern void T273f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force_relation */
extern void T995f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put_indexed_relation */
extern void T995f19(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].count */
extern T6 T995f8(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].index_of */
extern T6 T995f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found_item */
extern T6 T1410f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_item */
extern T6 T1410f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found */
extern T1 T1410f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search */
extern void T1410f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search_position */
extern void T1410f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].hash_position */
extern T6 T1410f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_item */
extern T0* T1410f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_item */
extern T6 T1410f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_item */
extern T6 T1410f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force */
extern void T995f14(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put */
extern void T995f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].put_new */
extern void T1410f37(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_put */
extern void T1410f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_put */
extern void T1410f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_put */
extern void T1410f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_put */
extern void T1410f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].resize */
extern void T1410f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_resize */
extern void T1410f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].special_integer_ */
extern T0* T1410f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_resize */
extern void T1410f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_resize */
extern void T1410f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_resize */
extern void T1410f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].capacity */
extern T6 T995f9(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has */
extern T1 T995f7(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].has */
extern T1 T1410f21(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.set_fatal_error */
extern void T273f15(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.error_handler */
extern T0* T273f10(GE_context* ac, T0* C);
/* ET_CLASS.set_ancestors_built */
extern void T83f253(GE_context* ac, T0* C);
/* ET_PROVIDER_CHECKER.process_class */
extern void T272f7(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.internal_process_class */
extern void T272f9(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.check_cluster_dependence_constraints */
extern void T272f10(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gcdep_error */
extern void T282f353(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLUSTER_ERROR.make_gcdep */
extern T0* T1522c26(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].forth */
extern void T1732f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_forth */
extern void T1583f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].add_traversing_cursor */
extern void T1583f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_next_cursor */
extern void T1732f14(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].remove_traversing_cursor */
extern void T1583f58(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_after */
extern void T1732f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].key */
extern T0* T1732f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_key */
extern T0* T1583f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].after */
extern T1 T1732f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].start */
extern void T1732f10(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_start */
extern void T1583f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_off */
extern T1 T1583f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].off */
extern T1 T1732f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].is_empty */
extern T1 T1583f29(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T282f104(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcdep_error */
extern void T34f354(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T34f103(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcpro_error */
extern void T282f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLUSTER_ERROR.make_gcpro */
extern T0* T1522c25(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T282f103(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcpro_error */
extern void T34f353(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T34f102(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T1 T1216f10(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1216f10ac1(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* Creation of agent #2 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1216f10ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1216f10ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1216f10ac4(GE_context* ac, T0* a1, T0* a2);
extern T1 T1216f10ot1(T0* a1, T0** a2);
/* [attached] PREDICATE [[attached] TUPLE [STRING_8]].set_rout_disp_final */
extern void T1722f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [attached] PREDICATE [[attached] TUPLE [LX_WILDCARD]].set_rout_disp_final */
extern void T1719f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.matches_pathname */
extern T1 T1216f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* LX_DFA_WILDCARD.recognizes */
extern T1 T1582f12(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.longest_end_position */
extern T6 T1582f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* LX_DFA_WILDCARD.is_compiled */
extern T1 T1582f15(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].there_exists */
extern T1 T139f21(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_ */
extern T0* T1216f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].there_exists */
extern T1 T1583f30(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.group_pathname */
extern T0* T1216f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.first_non_override_overridden_class */
extern T0* T83f169(GE_context* ac, T0* C);
/* ET_CLASS.master_class_in_universe */
extern T0* T83f201(GE_context* ac, T0* C);
/* ET_PROVIDER_CHECKER.scm_mapped_cluster */
extern T0* T272f5(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.set_fatal_error */
extern void T272f8(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.error_handler */
extern T0* T272f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_class */
extern void T271f965(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.internal_process_class */
extern void T271f1122(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.reset_preparsed */
extern void T83f252(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_class */
extern void T284f5(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvscn1b_error */
extern void T282f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvscn1b */
extern T0* T1032c756(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T282f28(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvscn1b_error */
extern void T34f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T34f27(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.syntax_error */
extern T1 T271f691(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.parse_file */
extern void T271f1125(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_EIFFEL_PARSER.yyparse */
extern void T271f1126(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_pop_last_value */
extern void T271f1136(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_push_error_value */
extern void T271f1135(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action */
extern void T271f1134(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_801_1000 */
extern void T271f1160(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_916 */
extern void T271f2092(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_counter */
extern void T271f2100(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].force */
extern void T661f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].resize */
extern void T661f14(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].new_capacity */
extern T6 T661f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].extendible */
extern T1 T661f6(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_915 */
extern void T271f2091(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_914 */
extern void T271f2090(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_913 */
extern void T271f2089(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_912 */
extern void T271f2088(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].force */
extern void T707f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_REAL_CONSTANT].fill_with */
extern void T709f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_REAL_CONSTANT].extend */
extern void T709f10(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_cast_type */
extern void T1232f45(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_cast_type */
extern void T1231f45(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_target_type */
extern T0* T281f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.ast_factory */
extern T0* T271f703(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_911 */
extern void T271f2087(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_sign */
extern void T1232f42(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_sign */
extern void T1231f42(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_910 */
extern void T271f2086(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_909 */
extern void T271f2085(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_908 */
extern void T271f2084(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_907 */
extern void T271f2083(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_906 */
extern void T271f2082(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_905 */
extern void T271f2081(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].force */
extern void T699f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].fill_with */
extern void T701f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].extend */
extern void T701f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_904 */
extern void T271f2080(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_903 */
extern void T271f2079(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_902 */
extern void T271f2078(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_901 */
extern void T271f2077(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_900 */
extern void T271f2076(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_899 */
extern void T271f2075(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_898 */
extern void T271f2074(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].force */
extern void T685f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].fill_with */
extern void T687f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].extend */
extern void T687f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_897 */
extern void T271f2073(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_896 */
extern void T271f2072(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].force */
extern void T691f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].fill_with */
extern void T693f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].extend */
extern void T693f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_895 */
extern void T271f2071(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T691f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T693f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_894 */
extern void T271f2070(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_893 */
extern void T271f2069(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_892 */
extern void T271f2068(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_891 */
extern void T271f2067(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].force */
extern void T705f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING].fill_with */
extern void T706f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING].extend */
extern void T706f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_890 */
extern void T271f2066(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T705f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T706f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_889 */
extern void T271f2065(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_888 */
extern void T271f2064(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_887 */
extern void T271f2063(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_886 */
extern void T271f2062(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_885 */
extern void T271f2061(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_884 */
extern void T271f2060(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_883 */
extern void T271f2059(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_882 */
extern void T271f2058(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_881 */
extern void T271f2057(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_880 */
extern void T271f2056(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_879 */
extern void T271f2055(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_878 */
extern void T271f2054(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_877 */
extern void T271f2053(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_876 */
extern void T271f2052(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_875 */
extern void T271f2051(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_874 */
extern void T271f2050(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_873 */
extern void T271f2049(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_872 */
extern void T271f2048(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_871 */
extern void T271f2047(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_870 */
extern void T271f2046(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_869 */
extern void T271f2045(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_868 */
extern void T271f2044(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_867 */
extern void T271f2043(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_866 */
extern void T271f2042(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_865 */
extern void T271f2041(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_864 */
extern void T271f2040(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].force */
extern void T739f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].fill_with */
extern void T740f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].extend */
extern void T740f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T739f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T740f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_typed_open_argument */
extern T0* T281f324(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.make */
extern T0* T1302c9(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.question_mark_symbol */
extern T0* T82f1502(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.make */
extern T0* T727c71(GE_context* ac);
/* ET_QUESTION_MARK_SYMBOL.make_leaf */
extern void T727f73(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.tokens */
extern T0* T727f57(GE_context* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.tokens */
extern T0* T1302f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_863 */
extern void T271f2039(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_862 */
extern void T271f2038(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_861 */
extern void T271f2037(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].force */
extern void T741f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].fill_with */
extern void T743f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].extend */
extern void T743f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T741f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T743f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.increment_counter */
extern void T271f2101(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].replace */
extern void T661f12(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_argument_operand_comma */
extern T0* T281f323(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_860 */
extern void T271f2036(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].force */
extern void T744f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].fill_with */
extern void T746f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].extend */
extern void T746f10(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put_first */
extern void T745f12(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.fixed_array */
extern T0* T745f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_859 */
extern void T271f2035(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T744f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T746f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_argument_operands */
extern T0* T281f322(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern T0* T745c11(GE_context* ac, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern void T745f11p1(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.tokens */
extern T0* T745f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.counter_value */
extern T6 T271f877(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.last_symbol */
extern T0* T271f879(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].item */
extern T0* T665f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_858 */
extern void T271f2034(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_857 */
extern void T271f2033(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_symbol */
extern void T271f2104(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].force */
extern void T665f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].force */
extern void T681f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL].fill_with */
extern void T682f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL].extend */
extern void T682f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].resize */
extern void T665f12(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T681f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T682f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].new_capacity */
extern T6 T665f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].extendible */
extern T1 T665f5(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_856 */
extern void T271f2032(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_counter */
extern void T271f2098(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_symbol */
extern void T271f2103(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].remove */
extern void T665f10(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_SYMBOL].keep_head */
extern void T682f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL].set_count */
extern void T682f9(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_855 */
extern void T271f2031(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_854 */
extern void T271f2030(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_853 */
extern void T271f2029(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].force */
extern void T747f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_TARGET].fill_with */
extern void T748f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_TARGET].extend */
extern void T748f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T747f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T748f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_open_target */
extern T0* T281f321(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AGENT_OPEN_TARGET.make */
extern T0* T1301c8(GE_context* ac, T0* a1);
/* ET_AGENT_OPEN_TARGET.tokens */
extern T0* T1301f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_852 */
extern void T271f2028(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_851 */
extern void T271f2027(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_850 */
extern void T271f2026(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_849 */
extern void T271f2025(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_agent_identifier_target */
extern T0* T271f924(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_unqualified_call_expression */
extern T0* T281f346(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_object_test_local */
extern void T183f124(GE_context* ac, T0* C, T1 a1);
/* ET_OBJECT_TEST_LIST.index_of_name */
extern T6 T1221f4(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_across_cursor */
extern void T183f123(GE_context* ac, T0* C, T1 a1);
/* ET_ACROSS_COMPONENT_LIST.index_of_name */
extern T6 T1222f4(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.set_used */
extern void T1517f9(GE_context* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE.set_used */
extern void T918f8(GE_context* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.local_variable */
extern T0* T357f4(GE_context* ac, T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.item */
extern T0* T357f7(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_local */
extern void T183f122(GE_context* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.index_of */
extern T6 T357f8(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.set_used */
extern void T1516f9(GE_context* ac, T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT.set_used */
extern void T264f8(GE_context* ac, T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT_LIST.index_of */
extern T6 T261f8(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_848 */
extern void T271f2024(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_start_closure */
extern void T271f2112(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].force */
extern void T667f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].force */
extern void T1399f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].fill_with */
extern void T1398f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].extend */
extern void T1398f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].resize */
extern void T667f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].aliased_resized_area */
extern T0* T1399f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].aliased_resized_area */
extern T0* T1398f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].new_capacity */
extern T6 T667f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].extendible */
extern T1 T667f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].force */
extern void T666f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].force */
extern void T1397f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].fill_with */
extern void T1396f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].extend */
extern void T1396f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].resize */
extern void T666f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1397f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1396f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].new_capacity */
extern T6 T666f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].extendible */
extern T1 T666f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T663f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T923f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].fill_with */
extern void T924f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].extend */
extern void T924f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].resize */
extern void T663f13(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T923f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T924f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].new_capacity */
extern T6 T663f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].extendible */
extern T1 T663f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T662f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T869f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].fill_with */
extern void T870f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].extend */
extern void T870f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].resize */
extern void T662f13(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T869f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T870f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].new_capacity */
extern T6 T662f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].extendible */
extern T1 T662f7(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_847 */
extern void T271f2023(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_846 */
extern void T271f2022(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].force */
extern void T900f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_AGENT].fill_with */
extern void T902f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_AGENT].extend */
extern void T902f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].aliased_resized_area */
extern T0* T900f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_AGENT].aliased_resized_area */
extern T0* T902f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.register_inline_agent */
extern void T271f2118(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_end_closure */
extern void T271f2120(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].remove */
extern void T667f13(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].keep_head */
extern void T1398f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].set_count */
extern void T1398f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].item */
extern T0* T667f7(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].is_empty */
extern T1 T667f6(GE_context* ac, T0* C);
/* ET_ACROSS_COMPONENT_LIST.wipe_out */
extern void T1222f10(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT].keep_head */
extern void T1119f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_ACROSS_COMPONENT_LIST.fixed_array */
extern T0* T1222f6(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].remove */
extern void T666f13(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].keep_head */
extern void T1396f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].set_count */
extern void T1396f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].item */
extern T0* T666f7(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].is_empty */
extern T1 T666f6(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_LIST.wipe_out */
extern void T1221f10(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].keep_head */
extern void T1113f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_OBJECT_TEST_LIST.fixed_array */
extern T0* T1221f6(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].remove */
extern void T663f12(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].keep_head */
extern void T924f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].set_count */
extern void T924f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].item */
extern T0* T663f6(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].is_empty */
extern T1 T663f5(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].remove */
extern void T662f12(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].keep_head */
extern void T870f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].set_count */
extern void T870f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].item */
extern T0* T662f6(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].is_empty */
extern T1 T662f5(GE_context* ac, T0* C);
/* ET_ACROSS_COMPONENT_LIST.cloned_across_component_list */
extern T0* T1222f3(GE_context* ac, T0* C);
/* ET_ACROSS_COMPONENT_LIST.put_last */
extern void T1222f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT].force */
extern void T1119f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ACROSS_COMPONENT].fill_with */
extern void T1118f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACROSS_COMPONENT].extend */
extern void T1118f10(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_COMPONENT_LIST.make_with_capacity */
extern T0* T1222c9(GE_context* ac, T6 a1);
/* ET_OBJECT_TEST_LIST.cloned_object_test_list */
extern T0* T1221f3(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_LIST.put_last */
extern void T1221f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].force */
extern void T1113f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NAMED_OBJECT_TEST].fill_with */
extern void T1112f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NAMED_OBJECT_TEST].extend */
extern void T1112f10(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.make_with_capacity */
extern T0* T1221c9(GE_context* ac, T6 a1);
/* ET_AST_FACTORY.new_external_procedure_inline_agent */
extern T0* T281f320(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1300f44(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_alias_clause */
extern void T1300f43(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1300f42(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1300f41(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make */
extern T0* T1300c35(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_procedure */
extern void T1300f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1300f46(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.make */
extern T0* T1540c5(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.agent_keyword */
extern T0* T82f870(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.make */
extern T0* T676c13(GE_context* ac);
/* ET_AGENT_KEYWORD.make_token */
extern void T676f15(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_KEYWORD.make_leaf */
extern void T676f16(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.tokens */
extern T0* T676f7(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1300f14(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_external_language */
extern T0* T281f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_845 */
extern void T271f2021(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_844 */
extern void T271f2020(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_procedure_inline_agent */
extern T0* T281f319(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T1299f53(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1299f52(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_compound */
extern void T1299f51(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_keys */
extern void T1299f50(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_locals */
extern void T1299f49(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1299f48(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1299f47(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make */
extern T0* T1299c41(GE_context* ac, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1299f54(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1299f15(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_compound */
extern T0* T281f173(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_COMPOUND.set_keyword */
extern void T356f10(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.once_keyword */
extern T0* T82f731(GE_context* ac, T0* C);
/* ET_KEYWORD.make_once */
extern T0* T421c43(GE_context* ac);
/* ET_AST_FACTORY.tokens */
extern T0* T281f356(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_843 */
extern void T271f2019(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_842 */
extern void T271f2018(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_procedure_inline_agent */
extern T0* T281f318(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T1298f48(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1298f47(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_compound */
extern void T1298f46(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_locals */
extern void T1298f45(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1298f44(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1298f43(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.make */
extern T0* T1298c37(GE_context* ac, T0* a1, T0* a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1298f49(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1298f15(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_841 */
extern void T271f2017(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_840 */
extern void T271f2016(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_external_function_inline_agent */
extern T0* T281f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1297f45(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_alias_clause */
extern void T1297f44(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1297f43(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1297f42(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make */
extern T0* T1297c36(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_function */
extern void T1297f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1297f47(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1297f15(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_colon_type */
extern T0* T281f167(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_839 */
extern void T271f2015(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_838 */
extern void T271f2014(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_function_inline_agent */
extern T0* T281f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T1296f54(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1296f53(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_compound */
extern void T1296f52(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_keys */
extern void T1296f51(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_locals */
extern void T1296f50(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1296f49(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1296f48(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make */
extern T0* T1296c42(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1296f55(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1296f19(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_837 */
extern void T271f2013(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_836 */
extern void T271f2012(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_function_inline_agent */
extern T0* T281f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_DO_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T1295f49(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1295f48(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_compound */
extern void T1295f47(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_locals */
extern void T1295f46(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1295f45(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1295f44(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.make */
extern T0* T1295c38(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1295f50(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1295f16(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_835 */
extern void T271f2011(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_834 */
extern void T271f2010(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_inline_agent_actual_arguments */
extern void T271f2117(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_833 */
extern void T271f2009(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].force */
extern void T758f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CALL_AGENT].fill_with */
extern void T760f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CALL_AGENT].extend */
extern void T760f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T758f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T760f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_call_agent */
extern T0* T281f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_agent_keyword */
extern void T759f33(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.make */
extern T0* T759c32(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.tokens */
extern T0* T759f8(GE_context* ac, T0* C);
/* ET_CALL_AGENT.make_unqualified */
extern T0* T759c29(GE_context* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_dot_feature_name */
extern T0* T281f314(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_832 */
extern void T271f2008(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_831 */
extern void T271f2007(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].force */
extern void T729f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].fill_with */
extern void T731f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].extend */
extern void T731f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T729f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T731f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_across_expression_header */
extern T0* T271f923(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_COMPONENT_LIST.force_last */
extern void T1222f11(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_COMPONENT_LIST.resize */
extern void T1222f13(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT].aliased_resized_area */
extern T0* T1119f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACROSS_COMPONENT].aliased_resized_area */
extern T0* T1118f3(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_COMPONENT_LIST.new_capacity */
extern T6 T1222f8(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_COMPONENT_LIST.capacity */
extern T6 T1222f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_component_list */
extern T0* T271f937(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_across_all_expression */
extern T0* T281f355(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_ACROSS_EXPRESSION.set_variant_part */
extern void T730f39(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_invariant_part */
extern void T730f38(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.make_all */
extern T0* T730c32(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_EXPRESSION.create_unfolded_form */
extern void T730f42(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.across_keyword */
extern T0* T82f862(GE_context* ac, T0* C);
/* ET_KEYWORD.make_across */
extern T0* T421c50(GE_context* ac);
/* ET_ACROSS_EXPRESSION.tokens */
extern T0* T730f15(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.true_keyword */
extern T0* T82f283(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.make */
extern T0* T1234c39(GE_context* ac);
/* ET_TRUE_CONSTANT.make_token */
extern void T1234f43(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.make_leaf */
extern void T1234f44(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.tokens */
extern T0* T1234f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_830 */
extern void T271f2006(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_all_expression */
extern T0* T271f922(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACROSS_EXPRESSION.set_end_keyword */
extern void T730f40(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_all */
extern void T730f41(GE_context* ac, T0* C, T1 a1);
/* ET_ACROSS_EXPRESSION.set_iteration_conditional */
extern void T730f36(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_until_conditional */
extern void T730f35(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_conditional */
extern T0* T281f257(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_KEYWORD_EXPRESSION.make */
extern T0* T1520c4(GE_context* ac, T0* a1, T0* a2);
/* ET_KEYWORD.is_inspect */
extern T1 T421f23(GE_context* ac, T0* C);
/* ET_KEYWORD.is_if */
extern T1 T421f22(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_829 */
extern void T271f2005(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_some_expression */
extern T0* T271f921(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACROSS_EXPRESSION.set_some */
extern void T730f37(GE_context* ac, T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_828 */
extern void T271f2004(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_827 */
extern void T271f2003(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_826 */
extern void T271f2002(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_825 */
extern void T271f2001(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_824 */
extern void T271f2000(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_823 */
extern void T271f1999(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].force */
extern void T974f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].fill_with */
extern void T976f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].extend */
extern void T976f10(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.put_first */
extern void T975f30(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].force */
extern void T861f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].fill_with */
extern void T863f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].extend */
extern void T863f10(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.fixed_array */
extern T0* T975f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_822 */
extern void T271f1998(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T974f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T976f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_strip_expression */
extern T0* T281f312(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_STRIP_EXPRESSION.set_strip_keyword */
extern void T975f31(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern T0* T975c27(GE_context* ac, T6 a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern void T975f27p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.strip_keyword */
extern T0* T82f873(GE_context* ac, T0* C);
/* ET_KEYWORD.make_strip */
extern T0* T421c49(GE_context* ac);
/* ET_STRIP_EXPRESSION.tokens */
extern T0* T975f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.last_keyword */
extern T0* T271f876(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].item */
extern T0* T664f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_821 */
extern void T271f1997(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_820 */
extern void T271f1996(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_keyword */
extern void T271f2099(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].force */
extern void T664f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].force */
extern void T673f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD].fill_with */
extern void T674f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD].extend */
extern void T674f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].resize */
extern void T664f12(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T673f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T674f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].new_capacity */
extern T6 T664f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].extendible */
extern T1 T664f5(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_819 */
extern void T271f1995(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_keyword */
extern void T271f2097(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].remove */
extern void T664f10(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_KEYWORD].keep_head */
extern void T674f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD].set_count */
extern void T674f9(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_818 */
extern void T271f1994(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_817 */
extern void T271f1993(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].force */
extern void T937f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].fill_with */
extern void T938f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].extend */
extern void T938f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_816 */
extern void T271f1992(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T937f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T938f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_tuple */
extern T0* T281f311(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_TUPLE.set_left_symbol */
extern void T311f33(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_815 */
extern void T271f1991(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_814 */
extern void T271f1990(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_813 */
extern void T271f1989(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_812 */
extern void T271f1988(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_811 */
extern void T271f1987(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].force */
extern void T928f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].fill_with */
extern void T930f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].extend */
extern void T930f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.put_first */
extern void T929f29(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.fixed_array */
extern T0* T929f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_810 */
extern void T271f1986(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T928f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T930f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_array */
extern T0* T281f310(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_ARRAY.set_left_symbol */
extern void T929f30(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern T0* T929c26(GE_context* ac, T6 a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern void T929f26p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_array_symbol */
extern T0* T82f689(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_array */
extern T0* T369c89(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_array_symbol */
extern T0* T82f871(GE_context* ac, T0* C);
/* ET_SYMBOL.make_left_array */
extern T0* T369c82(GE_context* ac);
/* ET_MANIFEST_ARRAY.tokens */
extern T0* T929f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_809 */
extern void T271f1985(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_808 */
extern void T271f1984(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_807 */
extern void T271f1983(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_806 */
extern void T271f1982(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_805 */
extern void T271f1981(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].force */
extern void T942f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].fill_with */
extern void T944f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].extend */
extern void T944f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T942f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T944f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parenthesized_expression */
extern T0* T281f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.set_left_parenthesis */
extern void T943f24(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.make */
extern T0* T943c21(GE_context* ac, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.tokens */
extern T0* T943f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_804 */
extern void T271f1980(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].force */
extern void T735f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].fill_with */
extern void T736f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].extend */
extern void T736f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_803 */
extern void T271f1979(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T735f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T736f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_bracket_arguments */
extern T0* T281f308(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_ARGUMENT_LIST.make_bracketed_with_capacity */
extern T0* T304c16(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_802 */
extern void T271f1978(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_801 */
extern void T271f1977(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].force */
extern void T755f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].fill_with */
extern void T757f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].extend */
extern void T757f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T755f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T757f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_601_800 */
extern void T271f1159(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_800 */
extern void T271f1976(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_bracket_expression */
extern T0* T281f307(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.make */
extern T0* T756c24(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_799 */
extern void T271f1975(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_798 */
extern void T271f1974(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_797 */
extern void T271f1973(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_796 */
extern void T271f1972(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_795 */
extern void T271f1971(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_794 */
extern void T271f1970(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_793 */
extern void T271f1969(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_792 */
extern void T271f1968(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_791 */
extern void T271f1967(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_790 */
extern void T271f1966(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_789 */
extern void T271f1965(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_once_manifest_string */
extern T0* T271f920(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.current_system */
extern T0* T271f926(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_manifest_string */
extern T0* T281f354(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.set_once_keyword */
extern void T1294f26(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.make */
extern T0* T1294c23(GE_context* ac, T0* a1);
/* ET_ONCE_MANIFEST_STRING.tokens */
extern T0* T1294f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_788 */
extern void T271f1964(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_787 */
extern void T271f1963(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_786 */
extern void T271f1962(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_785 */
extern void T271f1961(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_784 */
extern void T271f1960(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_783 */
extern void T271f1959(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_782 */
extern void T271f1958(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_781 */
extern void T271f1957(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_780 */
extern void T271f1956(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_779 */
extern void T271f1955(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_778 */
extern void T271f1954(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_777 */
extern void T271f1953(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_776 */
extern void T271f1952(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_named_object_test */
extern T0* T271f919(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_OBJECT_TEST_LIST.force_last */
extern void T1221f11(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.resize */
extern void T1221f13(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T1113f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T1112f3(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.new_capacity */
extern T6 T1221f8(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.capacity */
extern T6 T1221f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_object_test_list */
extern T0* T271f938(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_named_object_test */
extern T0* T281f353(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NAMED_OBJECT_TEST.set_attached_keyword */
extern void T1111f28(GE_context* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.make */
extern T0* T1111c25(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NAMED_OBJECT_TEST.make_object_test */
extern void T1111f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NAMED_OBJECT_TEST.tokens */
extern T0* T1111f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_775 */
extern void T271f1951(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_774 */
extern void T271f1950(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_object_test */
extern T0* T281f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST.set_attached_keyword */
extern void T338f26(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST.make */
extern T0* T338c23(GE_context* ac, T0* a1, T0* a2);
/* ET_OBJECT_TEST.tokens */
extern T0* T338f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_773 */
extern void T271f1949(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_772 */
extern void T271f1948(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_old_object_test */
extern T0* T271f918(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_AST_FACTORY.new_old_object_test */
extern T0* T281f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_OLD_OBJECT_TEST.set_left_brace */
extern void T1293f31(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_OBJECT_TEST.make */
extern T0* T1293c28(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.colon_symbol */
extern T0* T82f686(GE_context* ac, T0* C);
/* ET_SYMBOL.make_colon */
extern T0* T369c86(GE_context* ac);
/* ET_OLD_OBJECT_TEST.tokens */
extern T0* T1293f12(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.raise_error */
extern void T271f2094(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_6_1_0 */
extern T0* T271f906(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_771 */
extern void T271f1947(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_old_expression */
extern T0* T281f305(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.set_old_keyword */
extern void T1292f23(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.make */
extern T0* T1292c20(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.old_keyword */
extern T0* T82f1501(GE_context* ac, T0* C);
/* ET_KEYWORD.make_old */
extern T0* T421c46(GE_context* ac);
/* ET_OLD_EXPRESSION.tokens */
extern T0* T1292f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_770 */
extern void T271f1946(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_expression */
extern T0* T281f303(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.make */
extern T0* T1291c25(GE_context* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_operator */
extern T0* T281f304(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_prefix */
extern void T697f50(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.tokens */
extern T0* T697f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_769 */
extern void T271f1945(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_768 */
extern void T271f1944(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_prefix_minus_expression */
extern T0* T271f917(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T271f917ot1(T0* a1, T0** a2);
extern T1 T271f917ot2(T0* a1, T0** a2);
/* ET_AST_FACTORY.new_prefix_minus_operator */
extern T0* T281f351(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_minus */
extern void T716f98(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.tokens */
extern T0* T716f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_767 */
extern void T271f1943(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_prefix_plus_expression */
extern T0* T271f916(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T271f916ot1(T0* a1, T0** a2);
extern T1 T271f916ot2(T0* a1, T0** a2);
/* ET_AST_FACTORY.new_prefix_plus_operator */
extern T0* T281f350(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_plus */
extern void T716f97(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_766 */
extern void T271f1942(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_765 */
extern void T271f1941(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_764 */
extern void T271f1940(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_763 */
extern void T271f1939(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_762 */
extern void T271f1938(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_761 */
extern void T271f1937(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_760 */
extern void T271f1936(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_759 */
extern void T271f1935(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_758 */
extern void T271f1934(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_757 */
extern void T271f1933(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_manifest_type */
extern T0* T281f302(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.make */
extern T0* T1290c21(GE_context* ac, T0* a1);
/* ET_MANIFEST_TYPE.tokens */
extern T0* T1290f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_756 */
extern void T271f1932(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_755 */
extern void T271f1931(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_754 */
extern void T271f1930(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_753 */
extern void T271f1929(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_752 */
extern void T271f1928(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_751 */
extern void T271f1927(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_object_equality_expression */
extern T0* T281f301(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T339c22(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_750 */
extern void T271f1926(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_749 */
extern void T271f1925(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_equality_expression */
extern T0* T281f300(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.make */
extern T0* T340c20(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_748 */
extern void T271f1924(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_747 */
extern void T271f1923(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_expression */
extern T0* T281f295(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.make */
extern T0* T1287c23(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_746 */
extern void T271f1922(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_else_operator */
extern T0* T281f299(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_OR_ELSE_OPERATOR.set_or_keyword */
extern void T1289f33(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.make */
extern T0* T1289c32(GE_context* ac);
/* ET_TOKEN_CONSTANTS.else_keyword */
extern T0* T82f698(GE_context* ac, T0* C);
/* ET_KEYWORD.make_else */
extern T0* T421c62(GE_context* ac);
/* ET_TOKEN_CONSTANTS.or_keyword */
extern T0* T82f1500(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.make_or */
extern T0* T703c47(GE_context* ac);
/* ET_KEYWORD_OPERATOR.make_token */
extern void T703f53(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_leaf */
extern void T703f54(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.tokens */
extern T0* T703f7(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.tokens */
extern T0* T1289f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_745 */
extern void T271f1921(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_then_operator */
extern T0* T281f298(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_AND_THEN_OPERATOR.set_and_keyword */
extern void T1288f33(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_AND_THEN_OPERATOR.make */
extern T0* T1288c32(GE_context* ac);
/* ET_TOKEN_CONSTANTS.then_keyword */
extern T0* T82f702(GE_context* ac, T0* C);
/* ET_KEYWORD.make_then */
extern T0* T421c66(GE_context* ac);
/* ET_TOKEN_CONSTANTS.and_keyword */
extern T0* T82f1499(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.make_and */
extern T0* T703c49(GE_context* ac);
/* ET_INFIX_AND_THEN_OPERATOR.tokens */
extern T0* T1288f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_744 */
extern void T271f1920(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_743 */
extern void T271f1919(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_742 */
extern void T271f1918(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_741 */
extern void T271f1917(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_740 */
extern void T271f1916(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_739 */
extern void T271f1915(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_738 */
extern void T271f1914(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_737 */
extern void T271f1913(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_736 */
extern void T271f1912(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_735 */
extern void T271f1911(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_734 */
extern void T271f1910(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_733 */
extern void T271f1909(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_732 */
extern void T271f1908(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_minus_operator */
extern T0* T281f297(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_minus */
extern void T716f96(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_731 */
extern void T271f1907(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_plus_operator */
extern T0* T281f296(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_plus */
extern void T716f95(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_730 */
extern void T271f1906(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_free_operator */
extern T0* T281f294(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_infix */
extern void T697f49(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_729 */
extern void T271f1905(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_728 */
extern void T271f1904(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_727 */
extern void T271f1903(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].force */
extern void T993f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WRITABLE].fill_with */
extern void T994f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WRITABLE].extend */
extern void T994f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T993f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T994f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_726 */
extern void T271f1902(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_writable */
extern T0* T271f915(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_725 */
extern void T271f1901(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_expression_address */
extern T0* T281f293(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.set_dollar */
extern void T1286f23(GE_context* ac, T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.make */
extern T0* T1286c20(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.dollar_symbol */
extern T0* T82f1498(GE_context* ac, T0* C);
/* ET_SYMBOL.make_dollar */
extern T0* T369c78(GE_context* ac);
/* ET_EXPRESSION_ADDRESS.tokens */
extern T0* T1286f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_724 */
extern void T271f1900(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_result_address */
extern T0* T281f292(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.set_dollar */
extern void T1285f23(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT_ADDRESS.make */
extern T0* T1285c20(GE_context* ac);
/* ET_RESULT_ADDRESS.tokens */
extern T0* T1285f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_723 */
extern void T271f1899(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_current_address */
extern T0* T281f291(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.set_dollar */
extern void T1284f23(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.make */
extern T0* T1284c20(GE_context* ac);
/* ET_CURRENT_ADDRESS.tokens */
extern T0* T1284f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_722 */
extern void T271f1898(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_feature_address */
extern T0* T271f914(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T271f914ot1(T0* a1, T0** a2);
/* ET_AST_FACTORY.new_feature_address */
extern T0* T281f349(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.set_dollar */
extern void T1283f23(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.make */
extern T0* T1283c20(GE_context* ac, T0* a1);
/* ET_FEATURE_ADDRESS.tokens */
extern T0* T1283f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_721 */
extern void T271f1897(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_expression_comma */
extern T0* T281f290(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_720 */
extern void T271f1896(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_719 */
extern void T271f1895(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_actual_arguments */
extern T0* T281f289(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_718 */
extern void T271f1894(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_717 */
extern void T271f1893(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_716 */
extern void T271f1892(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_715 */
extern void T271f1891(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_714 */
extern void T271f1890(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_713 */
extern void T271f1889(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_call_expression */
extern T0* T281f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.new_dot_feature_name */
extern T0* T271f905(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_712 */
extern void T271f1888(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_5_7_59914 */
extern T0* T271f888(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_711 */
extern void T271f1887(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_710 */
extern void T271f1886(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_709 */
extern void T271f1885(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_708 */
extern void T271f1884(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_707 */
extern void T271f1883(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_706 */
extern void T271f1882(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_705 */
extern void T271f1881(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_704 */
extern void T271f1880(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_expression */
extern T0* T271f913(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_703 */
extern void T271f1879(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_expression */
extern T0* T281f288(GE_context* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_precursor_keyword */
extern void T1282f28(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_parent_prefixed */
extern void T1282f27(GE_context* ac, T0* C, T1 a1);
/* ET_PRECURSOR_EXPRESSION.make */
extern T0* T1282c24(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.precursor_keyword */
extern T0* T82f1497(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.make */
extern T0* T679c18(GE_context* ac);
/* ET_PRECURSOR_KEYWORD.make_token */
extern void T679f20(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.make_leaf */
extern void T679f21(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.tokens */
extern T0* T679f7(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.tokens */
extern T0* T1282f10(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_class_name */
extern T0* T281f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_702 */
extern void T271f1878(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_701 */
extern void T271f1877(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].force */
extern void T971f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].fill_with */
extern void T973f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].extend */
extern void T973f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T971f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T973f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_static_call_expression */
extern T0* T281f287(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_EXPRESSION.set_feature_keyword */
extern void T972f31(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.make */
extern T0* T972c28(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.make_qualified_call */
extern void T972f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_700 */
extern void T271f1876(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_699 */
extern void T271f1875(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_698 */
extern void T271f1874(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_697 */
extern void T271f1873(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_696 */
extern void T271f1872(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_695 */
extern void T271f1871(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_694 */
extern void T271f1870(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].force */
extern void T906f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INSTRUCTION].fill_with */
extern void T908f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INSTRUCTION].extend */
extern void T908f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T906f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T908f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_static_call_instruction */
extern T0* T281f285(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.set_feature_keyword */
extern void T1281f9(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.make */
extern T0* T1281c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_INSTRUCTION.make_qualified_call */
extern void T1281f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_693 */
extern void T271f1869(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_692 */
extern void T271f1868(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_instruction */
extern T0* T281f283(GE_context* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.set_precursor_keyword */
extern void T1279f11(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_prefixed */
extern void T1279f10(GE_context* ac, T0* C, T1 a1);
/* ET_PRECURSOR_INSTRUCTION.make */
extern T0* T1279c9(GE_context* ac, T0* a1, T0* a2);
/* ET_PRECURSOR_INSTRUCTION.tokens */
extern T0* T1279f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_691 */
extern void T271f1867(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_690 */
extern void T271f1866(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_call_instruction */
extern T0* T281f282(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_689 */
extern void T271f1865(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_688 */
extern void T271f1864(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_instruction */
extern T0* T271f912(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_unqualified_call_instruction */
extern T0* T281f348(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.make */
extern T0* T1504c6(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_687 */
extern void T271f1863(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].force */
extern void T931f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].fill_with */
extern void T933f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].extend */
extern void T933f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T931f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T933f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_string_comma */
extern T0* T281f281(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_686 */
extern void T271f1862(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].force */
extern void T934f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].fill_with */
extern void T936f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].extend */
extern void T936f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.put_first */
extern void T935f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.fixed_array */
extern T0* T935f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_685 */
extern void T271f1861(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T934f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T936f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_string_list */
extern T0* T281f280(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern T0* T935c9(GE_context* ac, T6 a1);
/* ET_MANIFEST_STRING_LIST.tokens */
extern T0* T935f5(GE_context* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern void T935f9p1(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_684 */
extern void T271f1860(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_683 */
extern void T271f1859(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_682 */
extern void T271f1858(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_681 */
extern void T271f1857(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_680 */
extern void T271f1856(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].force */
extern void T821f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].fill_with */
extern void T823f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].extend */
extern void T823f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T821f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T823f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_debug_instruction */
extern T0* T281f279(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEBUG_INSTRUCTION.make */
extern T0* T822c5(GE_context* ac, T0* a1, T0* a2);
/* ET_DEBUG_INSTRUCTION.tokens */
extern T0* T822f4(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_debug_compound */
extern T0* T281f278(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.debug_keyword */
extern T0* T82f706(GE_context* ac, T0* C);
/* ET_KEYWORD.make_debug */
extern T0* T421c70(GE_context* ac);
/* ET_COMPOUND.make */
extern T0* T356c9(GE_context* ac);
/* ET_COMPOUND.make */
extern void T356f9p1(GE_context* ac, T0* C);
/* ET_COMPOUND.fixed_array */
extern T0* T356f6(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.do_keyword */
extern T0* T82f695(GE_context* ac, T0* C);
/* ET_KEYWORD.make_do */
extern T0* T421c59(GE_context* ac);
/* ET_COMPOUND.tokens */
extern T0* T356f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_679 */
extern void T271f1855(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].force */
extern void T787f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONDITIONAL].fill_with */
extern void T789f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONDITIONAL].extend */
extern void T789f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T787f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T789f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_678 */
extern void T271f1854(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_677 */
extern void T271f1853(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].force */
extern void T732f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].fill_with */
extern void T734f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].extend */
extern void T734f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T732f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T734f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_across_instruction_header */
extern T0* T271f911(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AST_FACTORY.new_across_instruction */
extern T0* T281f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ACROSS_INSTRUCTION.set_variant_part */
extern void T733f21(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_invariant_part */
extern void T733f20(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.make */
extern T0* T733c16(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACROSS_INSTRUCTION.create_unfolded_form */
extern void T733f23(GE_context* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.tokens */
extern T0* T733f14(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_676 */
extern void T271f1852(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].force */
extern void T769f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].fill_with */
extern void T771f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].extend */
extern void T771f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T769f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T771f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_675 */
extern void T271f1851(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_choice_attribute_constant */
extern T0* T271f910(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_674 */
extern void T271f1850(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_673 */
extern void T271f1849(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_672 */
extern void T271f1848(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].force */
extern void T766f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE].fill_with */
extern void T768f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE].extend */
extern void T768f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].aliased_resized_area */
extern T0* T766f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE].aliased_resized_area */
extern T0* T768f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_range */
extern T0* T281f277(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CHOICE_RANGE.make */
extern T0* T1278c7(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.dotdot_symbol */
extern T0* T82f691(GE_context* ac, T0* C);
/* ET_SYMBOL.make_dotdot */
extern T0* T369c91(GE_context* ac);
/* ET_CHOICE_RANGE.tokens */
extern T0* T1278f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_671 */
extern void T271f1847(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_670 */
extern void T271f1846(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].force */
extern void T772f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_ITEM].fill_with */
extern void T774f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_ITEM].extend */
extern void T774f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T772f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T774f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_comma */
extern T0* T281f276(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_669 */
extern void T271f1845(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].force */
extern void T775f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_LIST].fill_with */
extern void T777f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_LIST].extend */
extern void T777f10(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.put_first */
extern void T776f9(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.fixed_array */
extern T0* T776f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_668 */
extern void T271f1844(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T775f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T777f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_list */
extern T0* T281f275(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_CHOICE_LIST.set_when_keyword */
extern void T776f10(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern T0* T776c8(GE_context* ac, T6 a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern void T776f8p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.when_keyword */
extern T0* T82f703(GE_context* ac, T0* C);
/* ET_KEYWORD.make_when */
extern T0* T421c67(GE_context* ac);
/* ET_CHOICE_LIST.tokens */
extern T0* T776f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_667 */
extern void T271f1843(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_666 */
extern void T271f1842(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_665 */
extern void T271f1841(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_664 */
extern void T271f1840(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_663 */
extern void T271f1839(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].force */
extern void T987f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART].fill_with */
extern void T989f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART].extend */
extern void T989f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T987f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T989f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_part */
extern T0* T281f274(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_WHEN_PART.make */
extern T0* T988c3(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_662 */
extern void T271f1838(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].force */
extern void T990f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART_LIST].fill_with */
extern void T992f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART_LIST].extend */
extern void T992f10(GE_context* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.put_first */
extern void T991f6(GE_context* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.fixed_array */
extern T0* T991f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_661 */
extern void T271f1837(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T990f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T992f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_part_list */
extern T0* T281f273(GE_context* ac, T0* C, T6 a1);
/* ET_WHEN_PART_LIST.make_with_capacity */
extern T0* T991c5(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_660 */
extern void T271f1836(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_659 */
extern void T271f1835(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_658 */
extern void T271f1834(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].force */
extern void T903f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].fill_with */
extern void T905f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].extend */
extern void T905f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T903f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T905f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inspect_instruction */
extern T0* T281f272(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_INSTRUCTION.set_else_compound */
extern void T904f8(GE_context* ac, T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.make */
extern T0* T904c7(GE_context* ac, T0* a1, T0* a2);
/* ET_INSPECT_INSTRUCTION.tokens */
extern T0* T904f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_657 */
extern void T271f1833(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_656 */
extern void T271f1832(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].force */
extern void T824f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].fill_with */
extern void T826f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].extend */
extern void T826f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].aliased_resized_area */
extern T0* T824f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].aliased_resized_area */
extern T0* T826f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_expression */
extern T0* T281f271(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ELSEIF_EXPRESSION.make */
extern T0* T825c6(GE_context* ac, T0* a1, T0* a2);
/* ET_ELSEIF_EXPRESSION.tokens */
extern T0* T825f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_655 */
extern void T271f1831(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].force */
extern void T827f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].fill_with */
extern void T829f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].extend */
extern void T829f10(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION_LIST.put_first */
extern void T828f6(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION_LIST.fixed_array */
extern T0* T828f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_654 */
extern void T271f1830(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].aliased_resized_area */
extern T0* T827f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].aliased_resized_area */
extern T0* T829f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_expression_list */
extern T0* T281f270(GE_context* ac, T0* C, T6 a1);
/* ET_ELSEIF_EXPRESSION_LIST.make_with_capacity */
extern T0* T828c5(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_653 */
extern void T271f1829(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_652 */
extern void T271f1828(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].force */
extern void T879f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_IF_EXPRESSION].fill_with */
extern void T881f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_IF_EXPRESSION].extend */
extern void T881f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].aliased_resized_area */
extern T0* T879f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_IF_EXPRESSION].aliased_resized_area */
extern T0* T881f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_if_expression */
extern T0* T281f269(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_IF_EXPRESSION.set_elseif_parts */
extern void T880f29(GE_context* ac, T0* C, T0* a1);
/* ET_IF_EXPRESSION.make */
extern T0* T880c26(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_IF_EXPRESSION.tokens */
extern T0* T880f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_651 */
extern void T271f1827(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_650 */
extern void T271f1826(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].force */
extern void T830f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART].fill_with */
extern void T832f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART].extend */
extern void T832f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T830f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T832f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_part */
extern T0* T281f268(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ELSEIF_PART.make */
extern T0* T831c4(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_649 */
extern void T271f1825(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].force */
extern void T833f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].fill_with */
extern void T835f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].extend */
extern void T835f10(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.put_first */
extern void T834f6(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.fixed_array */
extern T0* T834f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_648 */
extern void T271f1824(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T833f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T835f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_part_list */
extern T0* T281f267(GE_context* ac, T0* C, T6 a1);
/* ET_ELSEIF_PART_LIST.make_with_capacity */
extern T0* T834c5(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_647 */
extern void T271f1823(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_646 */
extern void T271f1822(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].force */
extern void T882f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_IF_INSTRUCTION].fill_with */
extern void T884f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_IF_INSTRUCTION].extend */
extern void T884f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T882f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T884f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_if_instruction */
extern T0* T281f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_IF_INSTRUCTION.set_else_compound */
extern void T883f10(GE_context* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.set_elseif_parts */
extern void T883f9(GE_context* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.make */
extern T0* T883c8(GE_context* ac, T0* a1, T0* a2);
/* ET_IF_INSTRUCTION.tokens */
extern T0* T883f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_645 */
extern void T271f1821(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_644 */
extern void T271f1820(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_643 */
extern void T271f1819(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_642 */
extern void T271f1818(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_641 */
extern void T271f1817(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_640 */
extern void T271f1816(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].force */
extern void T813f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].fill_with */
extern void T814f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].extend */
extern void T814f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T813f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T814f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_create_expression */
extern T0* T281f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.set_create_keyword */
extern void T349f29(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_qualified_call */
extern T0* T281f262(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_639 */
extern void T271f1815(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_638 */
extern void T271f1814(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_create_instruction */
extern T0* T281f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.set_create_keyword */
extern void T1277f12(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.make */
extern T0* T1277c11(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_INSTRUCTION.tokens */
extern T0* T1277f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_637 */
extern void T271f1813(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_636 */
extern void T271f1812(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_635 */
extern void T271f1811(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_634 */
extern void T271f1810(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_bang_instruction */
extern T0* T281f261(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BANG_INSTRUCTION.set_left_bang */
extern void T1276f12(GE_context* ac, T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.make */
extern T0* T1276c11(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.bang_symbol */
extern T0* T82f1496(GE_context* ac, T0* C);
/* ET_SYMBOL.make_bang */
extern T0* T369c77(GE_context* ac);
/* ET_BANG_INSTRUCTION.tokens */
extern T0* T1276f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_633 */
extern void T271f1809(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_632 */
extern void T271f1808(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_631 */
extern void T271f1807(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_630 */
extern void T271f1806(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].force */
extern void T763f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].fill_with */
extern void T765f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].extend */
extern void T765f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T763f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T765f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_check_instruction */
extern T0* T271f909(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].remove_last */
extern void T668f14(GE_context* ac, T0* C);
/* SPECIAL [ET_ASSERTION_ITEM].keep_head */
extern void T1400f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].set_count */
extern void T1400f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_last_cursors_after */
extern void T668f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_next_cursor */
extern void T1402f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_after */
extern void T1402f6(GE_context* ac, T0* C);
/* ET_CHECK_INSTRUCTION.put_first */
extern void T764f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].force */
extern void T1401f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].fill_with */
extern void T1400f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].extend */
extern void T1400f10(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.fixed_array */
extern T0* T764f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].item */
extern T0* T668f10(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_check_instruction */
extern T0* T281f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_CHECK_INSTRUCTION.set_check_keyword */
extern void T764f13(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.set_then_compound */
extern void T764f12(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern T0* T764c10(GE_context* ac, T6 a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern void T764f10p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.check_keyword */
extern T0* T82f705(GE_context* ac, T0* C);
/* ET_KEYWORD.make_check */
extern T0* T421c69(GE_context* ac);
/* ET_CHECK_INSTRUCTION.tokens */
extern T0* T764f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].remove_last */
extern void T280f29(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].move_last_cursors_after */
extern void T280f30(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].last */
extern T6 T280f13(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_629 */
extern void T271f1805(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_628 */
extern void T271f1804(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_627 */
extern void T271f1803(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_626 */
extern void T271f1802(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_null_instruction */
extern T0* T281f260(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_625 */
extern void T271f1801(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_624 */
extern void T271f1800(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_623 */
extern void T271f1799(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_622 */
extern void T271f1798(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_instruction */
extern T0* T271f908(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ACROSS_INSTRUCTION.set_end_keyword */
extern void T733f22(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_loop_compound */
extern void T733f19(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_until_conditional */
extern void T733f18(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_from_compound */
extern void T733f17(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_621 */
extern void T271f1797(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_instruction */
extern T0* T281f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LOOP_INSTRUCTION.set_has_old_variant_syntax */
extern void T1274f13(GE_context* ac, T0* C, T1 a1);
/* ET_LOOP_INSTRUCTION.set_variant_part */
extern void T1274f12(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.set_invariant_part */
extern void T1274f11(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.make */
extern T0* T1274c10(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LOOP_INSTRUCTION.tokens */
extern T0* T1274f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_6_3_7_4554 */
extern T0* T271f907(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_620 */
extern void T271f1796(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_instruction_old_syntax */
extern T0* T281f258(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_EIFFEL_PARSER.yy_do_action_619 */
extern void T271f1795(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_618 */
extern void T271f1794(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_617 */
extern void T271f1793(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_616 */
extern void T271f1792(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_assignment_attempt */
extern T0* T281f256(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT_ATTEMPT.make */
extern T0* T1273c5(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_attempt_symbol */
extern T0* T82f693(GE_context* ac, T0* C);
/* ET_SYMBOL.make_assign_attempt */
extern T0* T369c93(GE_context* ac);
/* ET_ASSIGNMENT_ATTEMPT.tokens */
extern T0* T1273f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_615 */
extern void T271f1791(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_assignment */
extern T0* T281f255(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT.make */
extern T0* T1272c5(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_symbol */
extern T0* T82f692(GE_context* ac, T0* C);
/* ET_SYMBOL.make_assign */
extern T0* T369c92(GE_context* ac);
/* ET_ASSIGNMENT.tokens */
extern T0* T1272f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_614 */
extern void T271f1790(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_assigner_instruction */
extern T0* T281f254(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.make */
extern T0* T1271c15(GE_context* ac, T0* a1, T0* a2);
/* ET_ASSIGNER_INSTRUCTION.tokens */
extern T0* T1271f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_613 */
extern void T271f1789(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_612 */
extern void T271f1788(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_611 */
extern void T271f1787(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_610 */
extern void T271f1786(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_609 */
extern void T271f1785(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].force */
extern void T785f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_COMPOUND].fill_with */
extern void T786f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_COMPOUND].extend */
extern void T786f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T785f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T786f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_608 */
extern void T271f1784(GE_context* ac, T0* C);
/* ET_COMPOUND.put_first */
extern void T356f11(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_607 */
extern void T271f1783(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_compound */
extern T0* T281f253(GE_context* ac, T0* C, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern T0* T356c12(GE_context* ac, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern void T356f12p1(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_606 */
extern void T271f1782(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_605 */
extern void T271f1781(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_604 */
extern void T271f1780(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_603 */
extern void T271f1779(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_empty_compound */
extern T0* T281f252(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_602 */
extern void T271f1778(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601 */
extern void T271f1777(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_compound */
extern T0* T281f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.loop_keyword */
extern T0* T82f700(GE_context* ac, T0* C);
/* ET_KEYWORD.make_loop */
extern T0* T421c64(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_401_600 */
extern void T271f1158(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_600 */
extern void T271f1776(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_599 */
extern void T271f1775(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_598 */
extern void T271f1774(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_from_compound */
extern T0* T281f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.from_keyword */
extern T0* T82f699(GE_context* ac, T0* C);
/* ET_KEYWORD.make_from */
extern T0* T421c63(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_597 */
extern void T271f1773(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_rescue_compound */
extern T0* T281f249(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.rescue_keyword */
extern T0* T82f715(GE_context* ac, T0* C);
/* ET_KEYWORD.make_rescue */
extern T0* T421c79(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_596 */
extern void T271f1772(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_else_compound */
extern T0* T281f248(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_595 */
extern void T271f1771(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_594 */
extern void T271f1770(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_then_compound */
extern T0* T281f247(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_593 */
extern void T271f1769(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_592 */
extern void T271f1768(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_attribute_compound */
extern T0* T281f246(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.attribute_keyword */
extern T0* T82f729(GE_context* ac, T0* C);
/* ET_KEYWORD.make_attribute */
extern T0* T421c93(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_591 */
extern void T271f1767(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_compound */
extern T0* T281f245(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_590 */
extern void T271f1766(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].force */
extern void T961f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].fill_with */
extern void T963f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].extend */
extern void T963f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T961f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T963f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_qualified_like_type */
extern T0* T281f244(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.make */
extern T0* T1270c72(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_attachment_symbol_separate_keyword */
extern T0* T281f135(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.make */
extern T0* T1244c18(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_589 */
extern void T271f1765(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_588 */
extern void T271f1764(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_587 */
extern void T271f1763(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_586 */
extern void T271f1762(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_attachment_separate_keywords */
extern T0* T281f134(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_585 */
extern void T271f1761(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_584 */
extern void T271f1760(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_583 */
extern void T271f1759(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_582 */
extern void T271f1758(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_581 */
extern void T271f1757(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_like_braced_type */
extern T0* T281f243(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_like_keyword */
extern void T1269f76(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.make */
extern T0* T1269c75(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.tokens */
extern T0* T1269f36(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_580 */
extern void T271f1756(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_579 */
extern void T271f1755(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_578 */
extern void T271f1754(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_577 */
extern void T271f1753(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_576 */
extern void T271f1752(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_575 */
extern void T271f1751(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_574 */
extern void T271f1750(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_573 */
extern void T271f1749(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_572 */
extern void T271f1748(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_571 */
extern void T271f1747(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_570 */
extern void T271f1746(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_569 */
extern void T271f1745(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].force */
extern void T914f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LIKE_TYPE].fill_with */
extern void T916f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LIKE_TYPE].extend */
extern void T916f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T914f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T916f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_568 */
extern void T271f1744(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_like_current */
extern T0* T281f242(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.set_like_keyword */
extern void T514f71(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_567 */
extern void T271f1743(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_566 */
extern void T271f1742(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_565 */
extern void T271f1741(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_564 */
extern void T271f1740(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_563 */
extern void T271f1739(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_562 */
extern void T271f1738(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_561 */
extern void T271f1737(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_560 */
extern void T271f1736(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_559 */
extern void T271f1735(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.current_universe */
extern T0* T271f904(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_558 */
extern void T271f1734(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_like_feature */
extern T0* T271f903(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_like_feature */
extern T0* T281f344(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.set_like_keyword */
extern void T1268f77(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.make */
extern T0* T1268c76(GE_context* ac, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.tokens */
extern T0* T1268f32(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_557 */
extern void T271f1733(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_556 */
extern void T271f1732(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_555 */
extern void T271f1731(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_554 */
extern void T271f1730(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_553 */
extern void T271f1729(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_552 */
extern void T271f1728(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_551 */
extern void T271f1727(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_550 */
extern void T271f1726(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_549 */
extern void T271f1725(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_548 */
extern void T271f1724(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_547 */
extern void T271f1723(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_546 */
extern void T271f1722(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_545 */
extern void T271f1721(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T657f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T654f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_labeled_actual_parameter_semicolon */
extern T0* T281f241(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_actual_parameter */
extern T0* T281f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LABELED_ACTUAL_PARAMETER.make */
extern T0* T1266c10(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_544 */
extern void T271f1720(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_543 */
extern void T271f1719(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].force */
extern void T737f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].fill_with */
extern void T738f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].extend */
extern void T738f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.add_to_actual_parameter_list */
extern void T271f2116(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_comma_actual_parameter */
extern T0* T281f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T1518c10(GE_context* ac, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.first */
extern T0* T251f15(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_label_comma */
extern T0* T281f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_542 */
extern void T271f1718(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_541 */
extern void T271f1717(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_540 */
extern void T271f1716(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_539 */
extern void T271f1715(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_538 */
extern void T271f1714(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T737f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T738f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_actual_parameters */
extern T0* T281f236(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T251f31(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_537 */
extern void T271f1713(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_536 */
extern void T271f1712(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_535 */
extern void T271f1711(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_534 */
extern void T271f1710(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_533 */
extern void T271f1709(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_532 */
extern void T271f1708(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_actual_parameter_comma */
extern T0* T281f237(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_531 */
extern void T271f1707(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_530 */
extern void T271f1706(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_tuple_type */
extern T0* T271f902(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_tuple_type */
extern T0* T281f343(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.set_tuple_keyword */
extern void T260f104(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.providers_enabled */
extern T1 T271f925(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_529 */
extern void T271f1705(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_named_type */
extern T0* T271f901(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_class_type */
extern T0* T281f330(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_generic_class_type */
extern T0* T281f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AST_FACTORY.new_formal_parameter_type */
extern T0* T281f342(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.make */
extern T0* T1416c68(GE_context* ac, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_CLASS.formal_parameter */
extern T0* T83f168(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter_by_name */
extern T0* T650f18(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_528 */
extern void T271f1704(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_527 */
extern void T271f1703(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_526 */
extern void T271f1702(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_525 */
extern void T271f1701(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_524 */
extern void T271f1700(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_523 */
extern void T271f1699(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_522 */
extern void T271f1698(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_521 */
extern void T271f1697(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_520 */
extern void T271f1696(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_519 */
extern void T271f1695(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_518 */
extern void T271f1694(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_517 */
extern void T271f1693(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_516 */
extern void T271f1692(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_515 */
extern void T271f1691(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_514 */
extern void T271f1690(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_513 */
extern void T271f1689(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_512 */
extern void T271f1688(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_511 */
extern void T271f1687(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_510 */
extern void T271f1686(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_509 */
extern void T271f1685(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_508 */
extern void T271f1684(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_507 */
extern void T271f1683(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_506 */
extern void T271f1682(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_505 */
extern void T271f1681(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_504 */
extern void T271f1680(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_503 */
extern void T271f1679(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_502 */
extern void T271f1678(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_501 */
extern void T271f1677(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_500 */
extern void T271f1676(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_499 */
extern void T271f1675(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_498 */
extern void T271f1674(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_497 */
extern void T271f1673(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_496 */
extern void T271f1672(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_495 */
extern void T271f1671(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_494 */
extern void T271f1670(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_493 */
extern void T271f1669(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_492 */
extern void T271f1668(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_491 */
extern void T271f1667(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_490 */
extern void T271f1666(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_489 */
extern void T271f1665(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_488 */
extern void T271f1664(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_487 */
extern void T271f1663(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_486 */
extern void T271f1662(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_485 */
extern void T271f1661(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_484 */
extern void T271f1660(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_483 */
extern void T271f1659(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_482 */
extern void T271f1658(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_481 */
extern void T271f1657(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_480 */
extern void T271f1656(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_479 */
extern void T271f1655(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_478 */
extern void T271f1654(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_477 */
extern void T271f1653(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_476 */
extern void T271f1652(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_475 */
extern void T271f1651(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_474 */
extern void T271f1650(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_473 */
extern void T271f1649(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_472 */
extern void T271f1648(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_471 */
extern void T271f1647(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_470 */
extern void T271f1646(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_469 */
extern void T271f1645(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_468 */
extern void T271f1644(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_467 */
extern void T271f1643(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_466 */
extern void T271f1642(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_465 */
extern void T271f1641(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_464 */
extern void T271f1640(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_463 */
extern void T271f1639(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_462 */
extern void T271f1638(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_461 */
extern void T271f1637(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_460 */
extern void T271f1636(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_459 */
extern void T271f1635(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_458 */
extern void T271f1634(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_457 */
extern void T271f1633(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_456 */
extern void T271f1632(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_455 */
extern void T271f1631(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_454 */
extern void T271f1630(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_453 */
extern void T271f1629(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_452 */
extern void T271f1628(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_451 */
extern void T271f1627(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_450 */
extern void T271f1626(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_449 */
extern void T271f1625(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_448 */
extern void T271f1624(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_447 */
extern void T271f1623(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_446 */
extern void T271f1622(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_445 */
extern void T271f1621(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_444 */
extern void T271f1620(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].force */
extern void T984f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_VARIANT].fill_with */
extern void T986f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_VARIANT].extend */
extern void T986f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_443 */
extern void T271f1619(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].aliased_resized_area */
extern T0* T984f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_VARIANT].aliased_resized_area */
extern T0* T986f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_442 */
extern void T271f1618(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_variant */
extern T0* T281f235(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VARIANT.set_variant_keyword */
extern void T985f6(GE_context* ac, T0* C, T0* a1);
/* ET_VARIANT.make */
extern T0* T985c5(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.variant_keyword */
extern T0* T82f721(GE_context* ac, T0* C);
/* ET_KEYWORD.make_variant */
extern T0* T421c85(GE_context* ac);
/* ET_VARIANT.tokens */
extern T0* T985f4(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_tag */
extern T0* T281f122(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_441 */
extern void T271f1617(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_440 */
extern void T271f1616(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].force */
extern void T925f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].fill_with */
extern void T927f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].extend */
extern void T927f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T925f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T927f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_loop_invariants */
extern T0* T271f900(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.put_first */
extern void T926f9(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.fixed_array */
extern T0* T926f5(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_invariants */
extern T0* T281f341(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_LOOP_INVARIANTS.set_invariant_keyword */
extern void T926f10(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern T0* T926c8(GE_context* ac, T6 a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern void T926f8p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.invariant_keyword */
extern T0* T82f730(GE_context* ac, T0* C);
/* ET_KEYWORD.make_invariant */
extern T0* T421c94(GE_context* ac);
/* ET_LOOP_INVARIANTS.tokens */
extern T0* T926f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_439 */
extern void T271f1615(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_438 */
extern void T271f1614(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_437 */
extern void T271f1613(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_436 */
extern void T271f1612(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_435 */
extern void T271f1611(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].force */
extern void T909f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INVARIANTS].fill_with */
extern void T911f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INVARIANTS].extend */
extern void T911f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T909f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T911f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_invariants */
extern T0* T271f899(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.wipe_out_last_across_components_stack */
extern void T271f1141(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].wipe_out */
extern void T667f12(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].i_th */
extern T0* T667f5(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.wipe_out_last_object_tests_stack */
extern void T271f1140(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].wipe_out */
extern void T666f12(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].i_th */
extern T0* T666f5(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.wipe_out_last_local_variables_stack */
extern void T271f1139(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].wipe_out */
extern void T663f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.wipe_out_last_formal_arguments_stack */
extern void T271f1138(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].wipe_out */
extern void T662f10(GE_context* ac, T0* C);
/* ET_INVARIANTS.set_across_components */
extern void T910f28(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.set_object_tests */
extern void T910f27(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.put_first */
extern void T910f26(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.fixed_array */
extern T0* T910f10(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_invariants */
extern T0* T281f340(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_INVARIANTS.set_invariant_keyword */
extern void T910f29(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.make_with_capacity */
extern T0* T910c25(GE_context* ac, T0* a1, T6 a2);
/* ET_INVARIANTS.make_assertions_with_capacity */
extern void T910f30(GE_context* ac, T0* C, T6 a1);
/* ET_INVARIANTS.tokens */
extern T0* T910f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_434 */
extern void T271f1610(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_433 */
extern void T271f1609(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_432 */
extern void T271f1608(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_431 */
extern void T271f1607(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].force */
extern void T954f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_POSTCONDITIONS].fill_with */
extern void T956f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_POSTCONDITIONS].extend */
extern void T956f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T954f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T956f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_postconditions */
extern T0* T271f898(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_POSTCONDITIONS.put_first */
extern void T955f17(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.fixed_array */
extern T0* T955f9(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_postconditions */
extern T0* T281f339(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_POSTCONDITIONS.set_then_keyword */
extern void T955f19(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.set_ensure_keyword */
extern void T955f18(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern T0* T955c16(GE_context* ac, T6 a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern void T955f16p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.ensure_keyword */
extern T0* T82f872(GE_context* ac, T0* C);
/* ET_KEYWORD.make_ensure */
extern T0* T421c51(GE_context* ac);
/* ET_POSTCONDITIONS.tokens */
extern T0* T955f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_430 */
extern void T271f1606(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_429 */
extern void T271f1605(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_428 */
extern void T271f1604(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_427 */
extern void T271f1603(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_426 */
extern void T271f1602(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].force */
extern void T957f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PRECONDITIONS].fill_with */
extern void T958f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PRECONDITIONS].extend */
extern void T958f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].aliased_resized_area */
extern T0* T957f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PRECONDITIONS].aliased_resized_area */
extern T0* T958f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_preconditions */
extern T0* T271f897(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.put_first */
extern void T413f17(GE_context* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.fixed_array */
extern T0* T413f9(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_preconditions */
extern T0* T281f338(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_PRECONDITIONS.set_else_keyword */
extern void T413f19(GE_context* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.set_require_keyword */
extern void T413f18(GE_context* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern T0* T413c16(GE_context* ac, T6 a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern void T413f16p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.require_keyword */
extern T0* T82f822(GE_context* ac, T0* C);
/* ET_KEYWORD.make_require */
extern T0* T421c54(GE_context* ac);
/* ET_PRECONDITIONS.tokens */
extern T0* T413f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_425 */
extern void T271f1601(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_424 */
extern void T271f1600(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_423 */
extern void T271f1599(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_422 */
extern void T271f1598(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_421 */
extern void T271f1597(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.start_assertions */
extern void T271f2115(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_420 */
extern void T271f1596(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_tagged_assertion */
extern void T271f2114(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T271f2114ot1(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].force_last */
extern void T668f15(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].resize */
extern void T668f19(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1401f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1400f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_capacity */
extern T6 T668f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].extendible */
extern T1 T668f7(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_assertion_semicolon */
extern T0* T281f325(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_tagged_assertion */
extern T0* T281f326(GE_context* ac, T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.make */
extern T0* T1304c5(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.report_syntax_error */
extern void T271f1162(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_syntax_error */
extern void T271f1166(GE_context* ac, T0* C);
/* ET_FILE_POSITION.column */
extern T6 T1305f3(GE_context* ac, T0* C);
/* ET_FILE_POSITION.line */
extern T6 T1305f6(GE_context* ac, T0* C);
/* ET_FILE_POSITION.is_null */
extern T1 T1305f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.current_position */
extern T0* T271f693(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].last */
extern T0* T668f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_419 */
extern void T271f1595(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_418 */
extern void T271f1594(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_expression_assertion */
extern void T271f2113(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T271f2113ot1(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].replace */
extern void T668f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_TAGGED_ASSERTION.set_expression */
extern void T1304f6(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_417 */
extern void T271f1593(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_416 */
extern void T271f1592(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_415 */
extern void T271f1591(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_414 */
extern void T271f1590(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_413 */
extern void T271f1589(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_412 */
extern void T271f1588(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].force */
extern void T920f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].fill_with */
extern void T922f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].extend */
extern void T922f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T920f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T922f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_variable_semicolon */
extern T0* T281f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_local_variable */
extern T0* T281f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LOCAL_VARIABLE.make */
extern T0* T918c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_411 */
extern void T271f1587(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_410 */
extern void T271f1586(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].force */
extern void T917f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].fill_with */
extern void T919f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].extend */
extern void T919f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T917f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T919f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_comma_variable */
extern T0* T281f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LOCAL_COMMA_VARIABLE.make */
extern T0* T1517c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_type */
extern T0* T271f895(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_409 */
extern void T271f1585(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_local_name_comma */
extern T0* T281f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_408 */
extern void T271f1584(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.put_first */
extern void T357f12(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.fixed_array */
extern T0* T357f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_407 */
extern void T271f1583(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_406 */
extern void T271f1582(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.set_declared_type */
extern void T1517f8(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.first */
extern T0* T357f6(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.is_empty */
extern T1 T357f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_405 */
extern void T271f1581(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_404 */
extern void T271f1580(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_local_variables */
extern T0* T271f896(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_AST_FACTORY.new_local_variables */
extern T0* T281f337(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_LOCAL_VARIABLE_LIST.set_local_keyword */
extern void T357f13(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern T0* T357c11(GE_context* ac, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern void T357f11p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.local_keyword */
extern T0* T82f708(GE_context* ac, T0* C);
/* ET_KEYWORD.make_local */
extern T0* T421c72(GE_context* ac);
/* ET_LOCAL_VARIABLE_LIST.tokens */
extern T0* T357f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_403 */
extern void T271f1579(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_402 */
extern void T271f1578(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401 */
extern void T271f1577(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201_400 */
extern void T271f1157(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_400 */
extern void T271f1576(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_399 */
extern void T271f1575(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_398 */
extern void T271f1574(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].force */
extern void T866f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].fill_with */
extern void T868f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].extend */
extern void T868f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T866f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T868f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_argument_semicolon */
extern T0* T281f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_formal_argument */
extern T0* T281f229(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_ARGUMENT.make */
extern T0* T264c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_397 */
extern void T271f1573(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_396 */
extern void T271f1572(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].force */
extern void T864f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].fill_with */
extern void T865f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].extend */
extern void T865f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T864f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T865f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_comma_argument */
extern T0* T281f228(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.make */
extern T0* T1516c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_395 */
extern void T271f1571(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_argument_name_comma */
extern T0* T281f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_394 */
extern void T271f1570(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.put_first */
extern void T261f13(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.fixed_array */
extern T0* T261f11(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_393 */
extern void T271f1569(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_392 */
extern void T271f1568(GE_context* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_declared_type */
extern void T1516f8(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.first */
extern T0* T261f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_391 */
extern void T271f1567(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_390 */
extern void T271f1566(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_formal_arguments */
extern T0* T271f894(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AST_FACTORY.new_formal_arguments */
extern T0* T281f336(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T261c12(GE_context* ac, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern void T261f12p1(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.tokens */
extern T0* T261f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_389 */
extern void T271f1565(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_388 */
extern void T271f1564(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_387 */
extern void T271f1563(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_386 */
extern void T271f1562(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_385 */
extern void T271f1561(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_384 */
extern void T271f1560(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_invalid_alias_name */
extern T0* T271f893(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_alias_free_name */
extern T0* T271f936(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_alias_free_name */
extern T0* T281f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_FREE_NAME.set_alias_keyword */
extern void T1263f45(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.make_infix */
extern T0* T1263c44(GE_context* ac, T0* a1);
/* ET_ALIAS_FREE_NAME.string_ */
extern T0* T1263f12(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.default_keyword */
extern T0* T1263f15(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_keyword */
extern T0* T82f704(GE_context* ac, T0* C);
/* ET_KEYWORD.make_alias */
extern T0* T421c68(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_383 */
extern void T271f1559(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_parenthesis_name */
extern T0* T281f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.set_alias_keyword */
extern void T750f64(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.make_parenthesis */
extern T0* T750c84(GE_context* ac, T0* a1);
/* ET_ALIAS_NAME.default_keyword */
extern T0* T750f62(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_382 */
extern void T271f1558(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_bracket_name */
extern T0* T281f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_bracket */
extern T0* T750c83(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_381 */
extern void T271f1557(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_380 */
extern void T271f1556(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_dotdot_name */
extern T0* T281f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_dotdot */
extern T0* T750c82(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_379 */
extern void T271f1555(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_xor_name */
extern T0* T281f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_xor */
extern T0* T750c81(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_378 */
extern void T271f1554(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_implies_name */
extern T0* T281f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_implies */
extern T0* T750c80(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_377 */
extern void T271f1553(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_else_name */
extern T0* T281f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or_else */
extern T0* T750c79(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_376 */
extern void T271f1552(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_name */
extern T0* T281f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or */
extern T0* T750c78(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_375 */
extern void T271f1551(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_then_name */
extern T0* T281f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and_then */
extern T0* T750c77(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_374 */
extern void T271f1550(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_name */
extern T0* T281f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and */
extern T0* T750c76(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_373 */
extern void T271f1549(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_ge_name */
extern T0* T281f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_ge */
extern T0* T750c75(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_372 */
extern void T271f1548(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_gt_name */
extern T0* T281f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_gt */
extern T0* T750c74(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_371 */
extern void T271f1547(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_le_name */
extern T0* T281f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_le */
extern T0* T750c73(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_370 */
extern void T271f1546(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_lt_name */
extern T0* T281f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_lt */
extern T0* T750c72(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_369 */
extern void T271f1545(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_power_name */
extern T0* T281f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_power */
extern T0* T750c71(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_368 */
extern void T271f1544(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_mod_name */
extern T0* T281f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_mod */
extern T0* T750c70(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_367 */
extern void T271f1543(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_div_name */
extern T0* T281f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_div */
extern T0* T750c69(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_366 */
extern void T271f1542(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_divide_name */
extern T0* T281f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_divide */
extern T0* T750c68(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_365 */
extern void T271f1541(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_times_name */
extern T0* T281f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_times */
extern T0* T750c67(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_364 */
extern void T271f1540(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_minus_name */
extern T0* T281f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_minus */
extern T0* T750c66(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_363 */
extern void T271f1539(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_plus_name */
extern T0* T281f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_plus */
extern T0* T750c65(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_362 */
extern void T271f1538(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_not_name */
extern T0* T281f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_not */
extern T0* T750c63(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_361 */
extern void T271f1537(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].force */
extern void T845f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].fill_with */
extern void T846f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].extend */
extern void T846f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T845f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T846f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_aliased_feature_name */
extern T0* T281f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_360 */
extern void T271f1536(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_359 */
extern void T271f1535(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_invalid_infix_name */
extern T0* T271f892(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_infix_free_name */
extern T0* T271f935(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_infix_free_name */
extern T0* T281f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_FREE_NAME.set_infix_keyword */
extern void T1192f69(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.make */
extern T0* T1192c68(GE_context* ac, T0* a1);
/* ET_INFIX_FREE_NAME.string_ */
extern T0* T1192f24(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.default_keyword */
extern T0* T1192f30(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_keyword */
extern T0* T82f707(GE_context* ac, T0* C);
/* ET_KEYWORD.make_infix */
extern T0* T421c71(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_358 */
extern void T271f1534(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_357 */
extern void T271f1533(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_invalid_prefix_name */
extern T0* T271f891(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_prefix_free_name */
extern T0* T271f934(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_name */
extern T0* T281f185(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_FREE_NAME.set_prefix_keyword */
extern void T1260f69(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.make */
extern T0* T1260c68(GE_context* ac, T0* a1);
/* ET_PREFIX_FREE_NAME.string_ */
extern T0* T1260f28(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.default_keyword */
extern T0* T1260f33(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.prefix_keyword */
extern T0* T82f713(GE_context* ac, T0* C);
/* ET_KEYWORD.make_prefix */
extern T0* T421c77(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_356 */
extern void T271f1532(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_355 */
extern void T271f1531(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_354 */
extern void T271f1530(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_353 */
extern void T271f1529(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_352 */
extern void T271f1528(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_351 */
extern void T271f1527(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_350 */
extern void T271f1526(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_349 */
extern void T271f1525(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_348 */
extern void T271f1524(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_347 */
extern void T271f1523(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_346 */
extern void T271f1522(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_345 */
extern void T271f1521(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_344 */
extern void T271f1520(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_343 */
extern void T271f1519(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_342 */
extern void T271f1518(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_341 */
extern void T271f1517(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_340 */
extern void T271f1516(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_xor_name */
extern T0* T281f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.set_infix_keyword */
extern void T1261f85(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_NAME.make_xor */
extern T0* T1261c101(GE_context* ac, T0* a1);
/* ET_INFIX_NAME.default_keyword */
extern T0* T1261f60(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_339 */
extern void T271f1515(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_implies_name */
extern T0* T281f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_implies */
extern T0* T1261c100(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_338 */
extern void T271f1514(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_else_name */
extern T0* T281f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or_else */
extern T0* T1261c99(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_337 */
extern void T271f1513(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_name */
extern T0* T281f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or */
extern T0* T1261c98(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_336 */
extern void T271f1512(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_then_name */
extern T0* T281f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and_then */
extern T0* T1261c97(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_335 */
extern void T271f1511(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_name */
extern T0* T281f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and */
extern T0* T1261c96(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_334 */
extern void T271f1510(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_ge_name */
extern T0* T281f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_ge */
extern T0* T1261c95(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_333 */
extern void T271f1509(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_gt_name */
extern T0* T281f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_gt */
extern T0* T1261c94(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_332 */
extern void T271f1508(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_le_name */
extern T0* T281f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_le */
extern T0* T1261c93(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_331 */
extern void T271f1507(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_lt_name */
extern T0* T281f193(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_lt */
extern T0* T1261c92(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_330 */
extern void T271f1506(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_power_name */
extern T0* T281f192(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_power */
extern T0* T1261c91(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_329 */
extern void T271f1505(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_mod_name */
extern T0* T281f191(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_mod */
extern T0* T1261c90(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_328 */
extern void T271f1504(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_div_name */
extern T0* T281f190(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_div */
extern T0* T1261c89(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_327 */
extern void T271f1503(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_divide_name */
extern T0* T281f189(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_divide */
extern T0* T1261c88(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_326 */
extern void T271f1502(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_times_name */
extern T0* T281f188(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_times */
extern T0* T1261c87(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_325 */
extern void T271f1501(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_minus_name */
extern T0* T281f187(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_minus */
extern T0* T1261c86(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_324 */
extern void T271f1500(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_plus_name */
extern T0* T281f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_plus */
extern T0* T1261c84(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_323 */
extern void T271f1499(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_322 */
extern void T271f1498(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_minus_name */
extern T0* T281f184(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.set_prefix_keyword */
extern void T1259f85(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_NAME.make_minus */
extern T0* T1259c87(GE_context* ac, T0* a1);
/* ET_PREFIX_NAME.default_keyword */
extern T0* T1259f34(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_321 */
extern void T271f1497(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_plus_name */
extern T0* T281f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_plus */
extern T0* T1259c86(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_320 */
extern void T271f1496(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_not_name */
extern T0* T281f182(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_not */
extern T0* T1259c84(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_319 */
extern void T271f1495(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_318 */
extern void T271f1494(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].force */
extern void T752f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ASSIGNER].fill_with */
extern void T754f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ASSIGNER].extend */
extern void T754f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T752f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T754f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_assigner */
extern T0* T281f181(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_317 */
extern void T271f1493(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_316 */
extern void T271f1492(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].force */
extern void T847f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].fill_with */
extern void T849f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].extend */
extern void T849f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T847f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T849f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_external_alias */
extern T0* T281f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_315 */
extern void T271f1491(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_314 */
extern void T271f1490(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].force */
extern void T721f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].fill_with */
extern void T723f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].extend */
extern void T723f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_313 */
extern void T271f1489(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T721f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T723f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_312 */
extern void T271f1488(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_311 */
extern void T271f1487(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_310 */
extern void T271f1486(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_external_procedure */
extern T0* T271f890(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_AST_FACTORY.new_external_procedure */
extern T0* T281f335(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EXTERNAL_PROCEDURE.set_first_indexing */
extern void T1258f92(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_alias_clause */
extern void T1258f90(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_postconditions */
extern void T1258f89(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_preconditions */
extern void T1258f88(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_obsolete_message */
extern void T1258f87(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_is_keyword */
extern void T1258f86(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_keyword */
extern T0* T82f697(GE_context* ac, T0* C);
/* ET_KEYWORD.make_is */
extern T0* T421c61(GE_context* ac);
/* ET_EXTERNAL_PROCEDURE.make */
extern T0* T1258c78(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.tokens */
extern T0* T1258f40(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_309 */
extern void T271f1485(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_308 */
extern void T271f1484(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_deferred_procedure */
extern T0* T281f179(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13);
/* ET_DEFERRED_PROCEDURE.set_first_indexing */
extern void T539f85(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_postconditions */
extern void T539f83(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_preconditions */
extern void T539f82(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_obsolete_message */
extern void T539f81(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_is_keyword */
extern void T539f80(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_307 */
extern void T271f1483(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_306 */
extern void T271f1482(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_procedure */
extern T0* T281f178(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_ONCE_PROCEDURE.set_first_indexing */
extern void T1257f93(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_rescue_clause */
extern void T1257f91(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_postconditions */
extern void T1257f90(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_compound */
extern void T1257f89(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_keys */
extern void T1257f88(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_locals */
extern void T1257f87(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_preconditions */
extern void T1257f86(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_obsolete_message */
extern void T1257f85(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_is_keyword */
extern void T1257f84(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.make */
extern T0* T1257c76(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.tokens */
extern T0* T1257f41(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_305 */
extern void T271f1481(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_304 */
extern void T271f1480(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_procedure */
extern T0* T281f177(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DO_PROCEDURE.set_first_indexing */
extern void T533f89(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_rescue_clause */
extern void T533f87(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_postconditions */
extern void T533f86(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_compound */
extern void T533f85(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_locals */
extern void T533f84(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_preconditions */
extern void T533f83(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_obsolete_message */
extern void T533f82(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_is_keyword */
extern void T533f81(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_303 */
extern void T271f1479(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_302 */
extern void T271f1478(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_external_function */
extern T0* T271f889(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_AST_FACTORY.new_external_function */
extern T0* T281f334(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EXTERNAL_FUNCTION.set_first_indexing */
extern void T259f94(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_alias_clause */
extern void T259f92(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_postconditions */
extern void T259f91(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_preconditions */
extern void T259f90(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_obsolete_message */
extern void T259f89(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_assigner */
extern void T259f88(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_is_keyword */
extern void T259f87(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.make */
extern T0* T259c79(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EXTERNAL_FUNCTION.tokens */
extern T0* T259f57(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_301 */
extern void T271f1477(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_300 */
extern void T271f1476(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_299 */
extern void T271f1475(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_298 */
extern void T271f1474(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_deferred_function */
extern T0* T281f175(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DEFERRED_FUNCTION.set_first_indexing */
extern void T1255f87(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_postconditions */
extern void T1255f85(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_preconditions */
extern void T1255f84(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_obsolete_message */
extern void T1255f83(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_assigner */
extern void T1255f82(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_is_keyword */
extern void T1255f81(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.make */
extern T0* T1255c73(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.make */
extern void T1255f73p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.tokens */
extern T0* T1255f43(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_297 */
extern void T271f1473(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_296 */
extern void T271f1472(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_295 */
extern void T271f1471(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_294 */
extern void T271f1470(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_function */
extern T0* T281f174(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17, T0* a18);
/* ET_ONCE_FUNCTION.set_first_indexing */
extern void T1254f95(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_rescue_clause */
extern void T1254f93(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_postconditions */
extern void T1254f92(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_compound */
extern void T1254f91(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_keys */
extern void T1254f90(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_locals */
extern void T1254f89(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_preconditions */
extern void T1254f88(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_obsolete_message */
extern void T1254f87(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_assigner */
extern void T1254f86(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_is_keyword */
extern void T1254f85(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.make */
extern T0* T1254c77(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ONCE_FUNCTION.tokens */
extern T0* T1254f47(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_293 */
extern void T271f1469(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_292 */
extern void T271f1468(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_291 */
extern void T271f1467(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_290 */
extern void T271f1466(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_function */
extern T0* T281f172(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_DO_FUNCTION.set_first_indexing */
extern void T1253f91(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_rescue_clause */
extern void T1253f89(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_postconditions */
extern void T1253f88(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_compound */
extern void T1253f87(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_locals */
extern void T1253f86(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_preconditions */
extern void T1253f85(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_obsolete_message */
extern void T1253f84(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_assigner */
extern void T1253f83(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_is_keyword */
extern void T1253f82(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.make */
extern T0* T1253c74(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DO_FUNCTION.tokens */
extern T0* T1253f45(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_289 */
extern void T271f1465(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_288 */
extern void T271f1464(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_287 */
extern void T271f1463(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_286 */
extern void T271f1462(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_unique_attribute */
extern T0* T281f171(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_UNIQUE_ATTRIBUTE.set_assigner */
extern void T386f80(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.make */
extern T0* T386c72(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.unique_keyword */
extern T0* T82f820(GE_context* ac, T0* C);
/* ET_KEYWORD.make_unique */
extern T0* T421c53(GE_context* ac);
/* ET_UNIQUE_ATTRIBUTE.tokens */
extern T0* T386f41(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_285 */
extern void T271f1461(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_284 */
extern void T271f1460(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_constant_attribute */
extern T0* T281f170(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CONSTANT_ATTRIBUTE.set_assigner */
extern void T384f80(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.make */
extern T0* T384c72(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTANT_ATTRIBUTE.tokens */
extern T0* T384f41(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_283 */
extern void T271f1459(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_282 */
extern void T271f1458(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_extended_attribute */
extern T0* T281f169(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_EXTENDED_ATTRIBUTE.set_first_indexing */
extern void T355f89(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_rescue_clause */
extern void T355f87(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_postconditions */
extern void T355f86(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_compound */
extern void T355f85(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_locals */
extern void T355f84(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_preconditions */
extern void T355f83(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_obsolete_message */
extern void T355f82(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_assigner */
extern void T355f81(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.make */
extern T0* T355c73(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.make */
extern void T355f73p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.tokens */
extern T0* T355f44(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_281 */
extern void T271f1457(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_attribute */
extern T0* T281f168(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ATTRIBUTE.set_assigner */
extern void T387f78(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.make */
extern T0* T387c70(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ATTRIBUTE.tokens */
extern T0* T387f39(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_280 */
extern void T271f1456(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_279 */
extern void T271f1455(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_procedure_synonym */
extern void T271f2111(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].back */
extern void T670f21(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_back */
extern void T670f28(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].add_traversing_cursor */
extern void T670f29(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_traversing_cursor */
extern void T670f30(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_position */
extern void T1404f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left */
extern void T670f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left_cursor */
extern void T670f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put */
extern void T670f31(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_right */
extern void T670f34(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_right */
extern void T670f33(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put_last */
extern void T670f32(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].index */
extern T6 T1404f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_index */
extern T6 T670f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].forth */
extern void T670f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_forth */
extern void T670f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].before */
extern T1 T670f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_before */
extern T1 T670f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].before */
extern T1 T1404f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_procedure_synonym */
extern T0* T271f887(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_278 */
extern void T271f1454(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_extended_feature_name_comma */
extern T0* T281f166(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_277 */
extern void T271f1453(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_276 */
extern void T271f1452(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_275 */
extern void T271f1451(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_procedure */
extern void T271f2110(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].finish */
extern void T670f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_finish */
extern void T670f25(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].off */
extern T1 T1404f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].after */
extern T1 T1404f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_274 */
extern void T271f1450(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_273 */
extern void T271f1449(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_query_synonym */
extern void T271f2109(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].back */
extern void T669f21(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_back */
extern void T669f28(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].add_traversing_cursor */
extern void T669f29(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_traversing_cursor */
extern void T669f30(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_position */
extern void T1403f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left */
extern void T669f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left_cursor */
extern void T669f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_QUERY].put */
extern void T669f31(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_right */
extern void T669f34(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_right */
extern void T669f33(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].put_last */
extern void T669f32(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].index */
extern T6 T1403f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_index */
extern T6 T669f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].forth */
extern void T669f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_forth */
extern void T669f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].before */
extern T1 T669f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_before */
extern T1 T669f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].before */
extern T1 T1403f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_query_synonym */
extern T0* T271f886(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_272 */
extern void T271f1448(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_271 */
extern void T271f1447(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_270 */
extern void T271f1446(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_269 */
extern void T271f1445(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_query */
extern void T271f2108(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].finish */
extern void T669f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_finish */
extern void T669f25(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].off */
extern T1 T1403f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].after */
extern T1 T1403f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_268 */
extern void T271f1444(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_267 */
extern void T271f1443(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_266 */
extern void T271f1442(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_265 */
extern void T271f1441(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_264 */
extern void T271f1440(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_263 */
extern void T271f1439(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].force */
extern void T850f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].fill_with */
extern void T852f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].extend */
extern void T852f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T850f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T852f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_clause */
extern T0* T281f165(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CLAUSE.make */
extern T0* T851c4(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.feature_keyword */
extern T0* T82f718(GE_context* ac, T0* C);
/* ET_KEYWORD.make_feature */
extern T0* T421c82(GE_context* ac);
/* ET_FEATURE_CLAUSE.tokens */
extern T0* T851f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_any_clients */
extern T0* T271f885(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_client */
extern T0* T271f883(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_client */
extern T0* T281f332(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_262 */
extern void T271f1438(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_261 */
extern void T271f1437(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_260 */
extern void T271f1436(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_259 */
extern void T271f1435(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].force */
extern void T853f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].fill_with */
extern void T855f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].extend */
extern void T855f10(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CLAUSE_LIST.put_first */
extern void T854f5(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CLAUSE_LIST.fixed_array */
extern T0* T854f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_258 */
extern void T271f1434(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T853f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T855f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_clauses */
extern T0* T281f164(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CLAUSE_LIST.make_with_capacity */
extern T0* T854c4(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_257 */
extern void T271f1433(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_features */
extern void T271f2107(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_256 */
extern void T271f1432(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_255 */
extern void T271f1431(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_254 */
extern void T271f1430(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].force */
extern void T978f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_ITEM].fill_with */
extern void T980f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_ITEM].extend */
extern void T980f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T978f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T980f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_comma */
extern T0* T281f163(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_253 */
extern void T271f1429(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].force */
extern void T981f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_LIST].fill_with */
extern void T983f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_LIST].extend */
extern void T983f10(GE_context* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.put_first */
extern void T1339f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_252 */
extern void T271f1428(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T981f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T983f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_types */
extern T0* T281f162(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACED_TYPE_LIST.set_left_brace */
extern void T1339f11(GE_context* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern T0* T1339c9(GE_context* ac, T6 a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern void T1339f9p1(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_251 */
extern void T271f1427(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_250 */
extern void T271f1426(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_249 */
extern void T271f1425(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_248 */
extern void T271f1424(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].force */
extern void T804f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE].fill_with */
extern void T806f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE].extend */
extern void T806f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T804f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T806f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_procedure */
extern T0* T281f161(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_PROCEDURE.make */
extern T0* T1251c9(GE_context* ac, T0* a1, T0* a2);
/* ET_CONVERT_PROCEDURE.tokens */
extern T0* T1251f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_247 */
extern void T271f1423(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_convert_function */
extern T0* T281f160(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FUNCTION.make */
extern T0* T1250c8(GE_context* ac, T0* a1, T0* a2);
/* ET_CONVERT_FUNCTION.tokens */
extern T0* T1250f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_246 */
extern void T271f1422(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].force */
extern void T807f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].fill_with */
extern void T809f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].extend */
extern void T809f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T807f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T809f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_feature_comma */
extern T0* T281f159(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_245 */
extern void T271f1421(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].force */
extern void T810f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].fill_with */
extern void T812f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].extend */
extern void T812f10(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_FEATURE_LIST.put_first */
extern void T811f9(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_FEATURE_LIST.fixed_array */
extern T0* T811f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_244 */
extern void T271f1420(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T810f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T812f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_features */
extern T0* T281f158(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern T0* T811c8(GE_context* ac, T6 a1);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern void T811f8p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.convert_keyword */
extern T0* T82f717(GE_context* ac, T0* C);
/* ET_KEYWORD.make_convert */
extern T0* T421c81(GE_context* ac);
/* ET_CONVERT_FEATURE_LIST.tokens */
extern T0* T811f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_243 */
extern void T271f1419(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_242 */
extern void T271f1418(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_241 */
extern void T271f1417(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_240 */
extern void T271f1416(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_239 */
extern void T271f1415(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_238 */
extern void T271f1414(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T861f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T863f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_name_comma */
extern T0* T281f155(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_237 */
extern void T271f1413(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].force */
extern void T815f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR].fill_with */
extern void T817f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR].extend */
extern void T817f10(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR.put_first */
extern void T816f17(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR.fixed_array */
extern T0* T816f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_236 */
extern void T271f1412(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].aliased_resized_area */
extern T0* T815f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATOR].aliased_resized_area */
extern T0* T817f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_creator */
extern T0* T281f157(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CREATOR.make_with_capacity */
extern T0* T816c16(GE_context* ac, T0* a1, T6 a2);
/* ET_CREATOR.make_feature_name_list_with_capacity */
extern void T816f18(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.creation_keyword */
extern T0* T82f722(GE_context* ac, T0* C);
/* ET_KEYWORD.make_creation */
extern T0* T421c86(GE_context* ac);
/* ET_CREATOR.tokens */
extern T0* T816f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_235 */
extern void T271f1411(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_234 */
extern void T271f1410(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_233 */
extern void T271f1409(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_232 */
extern void T271f1408(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_231 */
extern void T271f1407(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_230 */
extern void T271f1406(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_229 */
extern void T271f1405(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_228 */
extern void T271f1404(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_227 */
extern void T271f1403(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_226 */
extern void T271f1402(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_225 */
extern void T271f1401(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_224 */
extern void T271f1400(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_223 */
extern void T271f1399(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_222 */
extern void T271f1398(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].force */
extern void T818f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR_LIST].fill_with */
extern void T820f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR_LIST].extend */
extern void T820f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T818f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T820f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_221 */
extern void T271f1397(GE_context* ac, T0* C);
/* ET_CREATOR_LIST.put_first */
extern void T819f10(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.fixed_array */
extern T0* T819f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_220 */
extern void T271f1396(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_creators */
extern T0* T281f156(GE_context* ac, T0* C, T6 a1);
/* ET_CREATOR_LIST.make_with_capacity */
extern T0* T819c9(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_219 */
extern void T271f1395(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_218 */
extern void T271f1394(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_217 */
extern void T271f1393(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_216 */
extern void T271f1392(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].force */
extern void T912f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].fill_with */
extern void T913f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].extend */
extern void T913f10(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.put_first */
extern void T511f9(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.fixed_array */
extern T0* T511f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_215 */
extern void T271f1391(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T912f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T913f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_keyword_feature_name_list */
extern T0* T281f154(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern T0* T511c8(GE_context* ac, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern void T511f8p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.redefine_keyword */
extern T0* T82f727(GE_context* ac, T0* C);
/* ET_KEYWORD.make_redefine */
extern T0* T421c91(GE_context* ac);
/* ET_KEYWORD_FEATURE_NAME_LIST.tokens */
extern T0* T511f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_214 */
extern void T271f1390(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_213 */
extern void T271f1389(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_212 */
extern void T271f1388(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_211 */
extern void T271f1387(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_210 */
extern void T271f1386(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_209 */
extern void T271f1385(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_208 */
extern void T271f1384(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_207 */
extern void T271f1383(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_206 */
extern void T271f1382(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_205 */
extern void T271f1381(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_204 */
extern void T271f1380(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_203 */
extern void T271f1379(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_202 */
extern void T271f1378(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201 */
extern void T271f1377(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_1_200 */
extern void T271f1156(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_200 */
extern void T271f1376(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_199 */
extern void T271f1375(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_198 */
extern void T271f1374(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].force */
extern void T782f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLIENTS].fill_with */
extern void T784f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLIENTS].extend */
extern void T784f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T782f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T784f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_clients */
extern T0* T281f153(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CLIENTS.set_left_brace */
extern void T783f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.make_with_capacity */
extern T0* T783c19(GE_context* ac, T6 a1);
/* ET_CLIENTS.make_with_capacity */
extern void T783f19p1(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENTS.tokens */
extern T0* T783f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_197 */
extern void T271f1373(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_196 */
extern void T271f1372(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_195 */
extern void T271f1371(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T780f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T781f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_client_comma */
extern T0* T271f884(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_client_comma */
extern T0* T281f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_194 */
extern void T271f1370(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_193 */
extern void T271f1369(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_192 */
extern void T271f1368(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_191 */
extern void T271f1367(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_190 */
extern void T271f1366(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_189 */
extern void T271f1365(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_none_clients */
extern T0* T281f152(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLIENTS.make */
extern T0* T783c16(GE_context* ac);
/* ET_CLIENTS.make */
extern void T783f16p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_188 */
extern void T271f1364(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_187 */
extern void T271f1363(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_186 */
extern void T271f1362(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].force */
extern void T856f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_EXPORT].fill_with */
extern void T858f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_EXPORT].extend */
extern void T858f10(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.put_first */
extern void T857f11(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.fixed_array */
extern T0* T857f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_185 */
extern void T271f1361(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T856f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T858f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_export */
extern T0* T281f150(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_with_capacity */
extern T0* T857c10(GE_context* ac, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_feature_name_list_with_capacity */
extern void T857f12(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_184 */
extern void T271f1360(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_183 */
extern void T271f1359(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].force */
extern void T836f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT].fill_with */
extern void T838f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT].extend */
extern void T838f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].aliased_resized_area */
extern T0* T836f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPORT].aliased_resized_area */
extern T0* T838f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_null_export */
extern T0* T281f151(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_182 */
extern void T271f1358(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_181 */
extern void T271f1357(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_180 */
extern void T271f1356(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_179 */
extern void T271f1355(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_all_export */
extern T0* T281f149(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALL_EXPORT.make */
extern T0* T1248c7(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.all_keyword */
extern T0* T82f1474(GE_context* ac, T0* C);
/* ET_KEYWORD.make_all */
extern T0* T421c45(GE_context* ac);
/* ET_ALL_EXPORT.tokens */
extern T0* T1248f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_178 */
extern void T271f1354(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].force */
extern void T839f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT_LIST].fill_with */
extern void T840f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT_LIST].extend */
extern void T840f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T839f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T840f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_177 */
extern void T271f1353(GE_context* ac, T0* C);
/* ET_EXPORT_LIST.put_first */
extern void T510f8(GE_context* ac, T0* C, T0* a1);
/* ET_EXPORT_LIST.fixed_array */
extern T0* T510f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_176 */
extern void T271f1352(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_exports */
extern T0* T281f148(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_EXPORT_LIST.make_with_capacity */
extern T0* T510c7(GE_context* ac, T6 a1);
/* ET_EXPORT_LIST.make_with_capacity */
extern void T510f7p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.export_keyword */
extern T0* T82f712(GE_context* ac, T0* C);
/* ET_KEYWORD.make_export */
extern T0* T421c76(GE_context* ac);
/* ET_EXPORT_LIST.tokens */
extern T0* T510f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_175 */
extern void T271f1351(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_174 */
extern void T271f1350(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_173 */
extern void T271f1349(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_172 */
extern void T271f1348(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_171 */
extern void T271f1347(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_170 */
extern void T271f1346(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].force */
extern void T966f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_ITEM].fill_with */
extern void T968f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_ITEM].extend */
extern void T968f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T966f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T968f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_rename_comma */
extern T0* T281f147(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_169 */
extern void T271f1345(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_rename */
extern T0* T281f146(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_168 */
extern void T271f1344(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].force */
extern void T969f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_LIST].fill_with */
extern void T970f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_LIST].extend */
extern void T970f10(GE_context* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.put_first */
extern void T509f9(GE_context* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.fixed_array */
extern T0* T509f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_167 */
extern void T271f1343(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T969f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T970f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_renames */
extern T0* T281f145(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_RENAME_LIST.make_with_capacity */
extern T0* T509c8(GE_context* ac, T6 a1);
/* ET_RENAME_LIST.make_with_capacity */
extern void T509f8p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.rename_keyword */
extern T0* T82f714(GE_context* ac, T0* C);
/* ET_KEYWORD.make_rename */
extern T0* T421c78(GE_context* ac);
/* ET_RENAME_LIST.tokens */
extern T0* T509f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_166 */
extern void T271f1342(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_165 */
extern void T271f1341(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_164 */
extern void T271f1340(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_163 */
extern void T271f1339(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_162 */
extern void T271f1338(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T950f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T951f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parent_semicolon */
extern T0* T281f144(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_161 */
extern void T271f1337(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].force */
extern void T952f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_LIST].fill_with */
extern void T953f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_LIST].extend */
extern void T953f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_160 */
extern void T271f1336(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_159 */
extern void T271f1335(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T952f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T953f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parents */
extern T0* T281f143(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_158 */
extern void T271f1334(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_157 */
extern void T271f1333(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].force */
extern void T945f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT].fill_with */
extern void T946f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT].extend */
extern void T946f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].aliased_resized_area */
extern T0* T945f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT].aliased_resized_area */
extern T0* T946f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_parent */
extern T0* T271f882(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_AST_FACTORY.new_parent */
extern T0* T281f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_CLASS.has_formal_parameter */
extern T1 T83f167(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_parameter */
extern T1 T650f17(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_156 */
extern void T271f1332(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_155 */
extern void T271f1331(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_154 */
extern void T271f1330(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_153 */
extern void T271f1329(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_152 */
extern void T271f1328(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_151 */
extern void T271f1327(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_150 */
extern void T271f1326(GE_context* ac, T0* C);
/* ET_PARENT_LIST.set_clients_clause */
extern void T482f13(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_149 */
extern void T271f1325(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_148 */
extern void T271f1324(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].force */
extern void T947f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].fill_with */
extern void T949f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].extend */
extern void T949f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].aliased_resized_area */
extern T0* T947f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].aliased_resized_area */
extern T0* T949f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_147 */
extern void T271f1323(GE_context* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.put_first */
extern void T948f7(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CLAUSE_LIST.fixed_array */
extern T0* T948f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_146 */
extern void T271f1322(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_parent_clauses */
extern T0* T281f142(GE_context* ac, T0* C, T6 a1);
/* ET_PARENT_CLAUSE_LIST.make_with_capacity */
extern T0* T948c6(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_145 */
extern void T271f1321(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_144 */
extern void T271f1320(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_143 */
extern void T271f1319(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].force */
extern void T939f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_OBSOLETE].fill_with */
extern void T941f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_OBSOLETE].extend */
extern void T941f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T939f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T941f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_obsolete_message */
extern T0* T281f141(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_142 */
extern void T271f1318(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_141 */
extern void T271f1317(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].force */
extern void T792f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T794f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].extend */
extern void T794f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T792f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T794f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter_semicolon */
extern T0* T281f140(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter */
extern T0* T281f138(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.make */
extern T0* T1245c6(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_140 */
extern void T271f1316(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_139 */
extern void T271f1315(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].force */
extern void T795f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].fill_with */
extern void T797f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].extend */
extern void T797f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.add_to_constraint_actual_parameter_list */
extern void T271f2106(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.put_first */
extern void T796f13(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.fixed_array */
extern T0* T796f8(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_constraint_labeled_comma_actual_parameter */
extern T0* T281f139(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T1246c6(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.first */
extern T0* T796f7(GE_context* ac, T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T796f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_138 */
extern void T271f1314(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_137 */
extern void T271f1313(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_136 */
extern void T271f1312(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T795f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T797f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_actual_parameters */
extern T0* T281f136(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T796f14(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T796c12(GE_context* ac, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T796f12p1(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T796f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_135 */
extern void T271f1311(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_134 */
extern void T271f1310(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_133 */
extern void T271f1309(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_132 */
extern void T271f1308(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_131 */
extern void T271f1307(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_130 */
extern void T271f1306(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_constraint_actual_parameter_comma */
extern T0* T281f137(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_129 */
extern void T271f1305(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_constraint_named_type */
extern T0* T271f881(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_constraint_named_type */
extern T0* T281f328(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.make */
extern T0* T1243c7(GE_context* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_generic_named_type */
extern T0* T281f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.make */
extern T0* T1503c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_128 */
extern void T271f1304(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_127 */
extern void T271f1303(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_126 */
extern void T271f1302(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_125 */
extern void T271f1301(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_124 */
extern void T271f1300(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_123 */
extern void T271f1299(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_122 */
extern void T271f1298(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].force */
extern void T801f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].fill_with */
extern void T803f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].extend */
extern void T803f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T801f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T803f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_121 */
extern void T271f1297(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_120 */
extern void T271f1296(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_119 */
extern void T271f1295(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_118 */
extern void T271f1294(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_117 */
extern void T271f1293(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_116 */
extern void T271f1292(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_115 */
extern void T271f1291(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_114 */
extern void T271f1290(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_113 */
extern void T271f1289(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_112 */
extern void T271f1288(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_111 */
extern void T271f1287(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_110 */
extern void T271f1286(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_109 */
extern void T271f1285(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_108 */
extern void T271f1284(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_107 */
extern void T271f1283(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_106 */
extern void T271f1282(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_105 */
extern void T271f1281(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_104 */
extern void T271f1280(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_103 */
extern void T271f1279(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_102 */
extern void T271f1278(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_101 */
extern void T271f1277(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_100 */
extern void T271f1276(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_99 */
extern void T271f1275(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_98 */
extern void T271f1274(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_97 */
extern void T271f1273(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_96 */
extern void T271f1272(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_95 */
extern void T271f1271(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_94 */
extern void T271f1270(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_93 */
extern void T271f1269(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_92 */
extern void T271f1268(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_91 */
extern void T271f1267(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_90 */
extern void T271f1266(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_89 */
extern void T271f1265(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_88 */
extern void T271f1264(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_87 */
extern void T271f1263(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_86 */
extern void T271f1262(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_85 */
extern void T271f1261(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_84 */
extern void T271f1260(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_83 */
extern void T271f1259(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_82 */
extern void T271f1258(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_81 */
extern void T271f1257(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_80 */
extern void T271f1256(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_79 */
extern void T271f1255(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_78 */
extern void T271f1254(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_77 */
extern void T271f1253(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_76 */
extern void T271f1252(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].force */
extern void T798f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].fill_with */
extern void T800f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].extend */
extern void T800f10(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.put_first */
extern void T799f13(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.fixed_array */
extern T0* T799f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_75 */
extern void T271f1251(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T798f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T800f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_creator */
extern T0* T281f133(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern T0* T799c12(GE_context* ac, T6 a1);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern void T799f12p1(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.tokens */
extern T0* T799f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_74 */
extern void T271f1250(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_73 */
extern void T271f1249(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_72 */
extern void T271f1248(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_71 */
extern void T271f1247(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_70 */
extern void T271f1246(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T871f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T873f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.register_constraint */
extern void T271f2105(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].force_last */
extern void T671f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].resize */
extern void T671f15(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_capacity */
extern T6 T671f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].extendible */
extern T1 T671f7(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constrained_formal_parameter */
extern T0* T281f132(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_type_mark */
extern void T1242f77(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make */
extern T0* T1242c76(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make_unconstrained */
extern void T1242f79(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.arrow_symbol */
extern T0* T82f690(GE_context* ac, T0* C);
/* ET_SYMBOL.make_arrow */
extern T0* T369c90(GE_context* ac);
/* ET_CONSTRAINED_FORMAL_PARAMETER.tokens */
extern T0* T1242f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.dummy_constraint */
extern T0* T271f880(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_69 */
extern void T271f1245(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_68 */
extern void T271f1244(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_67 */
extern void T271f1243(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_66 */
extern void T271f1242(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_65 */
extern void T271f1241(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_64 */
extern void T271f1240(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_formal_parameter */
extern T0* T281f131(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.set_type_mark */
extern void T872f76(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.make */
extern T0* T872c75(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_63 */
extern void T271f1239(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_62 */
extern void T271f1238(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_61 */
extern void T271f1237(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].force */
extern void T874f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].fill_with */
extern void T876f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].extend */
extern void T876f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T874f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T876f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_parameter_comma */
extern T0* T281f130(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_60 */
extern void T271f1236(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].force */
extern void T877f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].fill_with */
extern void T878f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].extend */
extern void T878f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T650f28(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_index */
extern void T1242f78(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.set_index */
extern void T872f77(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.capacity */
extern T6 T650f9(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T650f28p1(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.fixed_array */
extern T0* T650f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_59 */
extern void T271f1235(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T877f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T878f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_parameters */
extern T0* T281f129(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_PARAMETER_LIST.set_left_bracket */
extern void T650f29(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern T0* T650c26(GE_context* ac, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern void T650f26p1(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.tokens */
extern T0* T650f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_58 */
extern void T271f1234(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_57 */
extern void T271f1233(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_formal_parameters */
extern void T271f2102(GE_context* ac, T0* C, T0* a1);
extern T1 T271f2102ot1(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].wipe_out */
extern void T671f11(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].keep_head */
extern void T803f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].set_count */
extern void T803f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].move_all_cursors_after */
extern void T671f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_next_cursor */
extern void T1405f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_after */
extern void T1405f6(GE_context* ac, T0* C);
/* ET_CLASS.set_formal_parameters */
extern void T83f276(GE_context* ac, T0* C, T0* a1);
extern T1 T83f276ot1(T0* a1);
/* ET_FORMAL_PARAMETER_LIST.remove */
extern void T650f27(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T874f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T876f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].set_count */
extern void T876f9(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint */
extern void T1242f81(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].item */
extern T0* T671f6(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_56 */
extern void T271f1232(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_55 */
extern void T271f1231(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_54 */
extern void T271f1230(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_53 */
extern void T271f1229(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_52 */
extern void T271f1228(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_51 */
extern void T271f1227(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_50 */
extern void T271f1226(GE_context* ac, T0* C);
/* ET_CLASS.set_external_keyword */
extern void T83f274(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_frozen_keyword */
extern void T83f273(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_class_mark */
extern void T83f287(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_class_keyword */
extern void T83f272(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_class */
extern T0* T271f878(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_name */
extern void T83f289(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.reset */
extern void T83f288(GE_context* ac, T0* C);
/* ET_CLASS.reset_parsed */
extern void T83f270(GE_context* ac, T0* C);
/* ET_CLASS.reset_ancestors_built */
extern void T83f269(GE_context* ac, T0* C);
/* ET_CLASS.reset_features_flattened */
extern void T83f268(GE_context* ac, T0* C);
/* ET_CLASS.reset_interface_checked */
extern void T83f267(GE_context* ac, T0* C);
/* ET_CLASS.reset_implementation_checked */
extern void T83f266(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.set_modified */
extern void T485f68(GE_context* ac, T0* C, T1 a1);
/* ET_EIFFEL_PARSER.file_system */
extern T0* T271f933(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.unix_file_system */
extern T0* T271f942(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.windows_file_system */
extern T0* T271f941(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.operating_system */
extern T0* T271f940(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvscn1a_error */
extern void T282f225(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvscn1a */
extern T0* T1032c757(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvscn1a_error */
extern void T34f225(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MASTER_CLASS.first_local_class */
extern T0* T485f26(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.has_local_class */
extern T1 T485f25(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_hidden_class */
extern T1 T485f30(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].has */
extern T1 T277f12(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_ignored_class */
extern T1 T485f29(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_non_override_class */
extern T1 T485f28(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_override_class */
extern T1 T485f27(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_49 */
extern void T271f1225(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_48 */
extern void T271f1224(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_47 */
extern void T271f1223(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_46 */
extern void T271f1222(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].force */
extern void T894f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].fill_with */
extern void T896f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].extend */
extern void T896f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].aliased_resized_area */
extern T0* T894f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].aliased_resized_area */
extern T0* T896f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_indexing_term_comma */
extern T0* T281f128(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_45 */
extern void T271f1221(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].force */
extern void T891f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM].fill_with */
extern void T893f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM].extend */
extern void T893f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].aliased_resized_area */
extern T0* T891f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INDEXING_TERM].aliased_resized_area */
extern T0* T893f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_custom_attribute */
extern T0* T281f127(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CUSTOM_ATTRIBUTE.make */
extern T0* T1241c9(GE_context* ac, T0* a1, T0* a2);
/* ET_CUSTOM_ATTRIBUTE.tokens */
extern T0* T1241f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_44 */
extern void T271f1220(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_43 */
extern void T271f1219(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_42 */
extern void T271f1218(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_41 */
extern void T271f1217(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_40 */
extern void T271f1216(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_39 */
extern void T271f1215(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_38 */
extern void T271f1214(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_37 */
extern void T271f1213(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].force */
extern void T897f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].fill_with */
extern void T899f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].extend */
extern void T899f10(GE_context* ac, T0* C, T0* a1);
/* ET_INDEXING_TERM_LIST.put_first */
extern void T898f10(GE_context* ac, T0* C, T0* a1);
/* ET_INDEXING_TERM_LIST.fixed_array */
extern T0* T898f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_36 */
extern void T271f1212(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].aliased_resized_area */
extern T0* T897f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].aliased_resized_area */
extern T0* T899f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_indexing_terms */
extern T0* T281f126(GE_context* ac, T0* C, T6 a1);
/* ET_INDEXING_TERM_LIST.make_with_capacity */
extern T0* T898c9(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_35 */
extern void T271f1211(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].force */
extern void T888f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_ITEM].fill_with */
extern void T890f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_ITEM].extend */
extern void T890f10(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_indexing_semicolon */
extern T0* T281f124(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_34 */
extern void T271f1210(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_33 */
extern void T271f1209(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].aliased_resized_area */
extern T0* T888f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INDEXING_ITEM].aliased_resized_area */
extern T0* T890f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_tagged_indexing */
extern T0* T281f123(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TAGGED_INDEXING.make */
extern T0* T1239c5(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_32 */
extern void T271f1208(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_indexing */
extern T0* T281f125(GE_context* ac, T0* C, T0* a1);
/* ET_INDEXING.make */
extern T0* T1240c5(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_31 */
extern void T271f1207(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_30 */
extern void T271f1206(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].force */
extern void T885f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_LIST].fill_with */
extern void T887f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_LIST].extend */
extern void T887f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].aliased_resized_area */
extern T0* T885f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INDEXING_LIST].aliased_resized_area */
extern T0* T887f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_29 */
extern void T271f1205(GE_context* ac, T0* C);
/* ET_INDEXING_LIST.put_first */
extern void T886f12(GE_context* ac, T0* C, T0* a1);
/* ET_INDEXING_LIST.fixed_array */
extern T0* T886f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_28 */
extern void T271f1204(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_27 */
extern void T271f1203(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_26 */
extern void T271f1202(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_indexings */
extern T0* T281f121(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_INDEXING_LIST.set_indexing_keyword */
extern void T886f13(GE_context* ac, T0* C, T0* a1);
/* ET_INDEXING_LIST.make_with_capacity */
extern T0* T886c11(GE_context* ac, T6 a1);
/* ET_INDEXING_LIST.make_with_capacity */
extern void T886f11p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.indexing_keyword */
extern T0* T82f725(GE_context* ac, T0* C);
/* ET_KEYWORD.make_indexing */
extern T0* T421c89(GE_context* ac);
/* ET_INDEXING_LIST.tokens */
extern T0* T886f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_25 */
extern void T271f1201(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_24 */
extern void T271f1200(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_23 */
extern void T271f1199(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_22 */
extern void T271f1198(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_21 */
extern void T271f1197(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_20 */
extern void T271f1196(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_19 */
extern void T271f1195(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_18 */
extern void T271f1194(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_17 */
extern void T271f1193(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_16 */
extern void T271f1192(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_15 */
extern void T271f1191(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_14 */
extern void T271f1190(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_13 */
extern void T271f1189(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_12 */
extern void T271f1188(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_11 */
extern void T271f1187(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_10 */
extern void T271f1186(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_9 */
extern void T271f1185(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_8 */
extern void T271f1184(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_providers */
extern void T271f2096(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].forth */
extern void T672f40(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].put_last */
extern void T672f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].compress */
extern void T672f56(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_keep_head */
extern void T672f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_keep_head */
extern void T672f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].move_all_cursors */
extern void T672f64(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_put */
extern void T672f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_NAMED_CLASS].item_for_iteration */
extern T0* T672f32(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].after */
extern T1 T672f17(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_after */
extern T1 T672f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].start */
extern void T672f38(GE_context* ac, T0* C);
/* ET_CLASS.set_providers */
extern void T83f275(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_7 */
extern void T271f1183(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_to_end */
extern void T271f2095(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CLASS.set_parsed */
extern void T83f249(GE_context* ac, T0* C);
/* ET_CLASS.set_end_keyword */
extern void T83f286(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_second_indexing */
extern void T83f285(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_invariants */
extern void T83f284(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_feature_clauses */
extern void T83f283(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_convert_features */
extern void T83f282(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_creators */
extern void T83f281(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_parent_clauses */
extern void T83f280(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_obsolete_message */
extern void T83f279(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_6 */
extern void T271f1182(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_5 */
extern void T271f1181(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_4 */
extern void T271f1180(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_3 */
extern void T271f1179(GE_context* ac, T0* C);
/* ET_CLASS.set_first_indexing */
extern void T83f278(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_2 */
extern void T271f1178(GE_context* ac, T0* C);
/* ET_CLASS.set_leading_break */
extern void T83f277(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_1 */
extern void T271f1177(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_push_last_value */
extern void T271f1133(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].force */
extern void T726f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].fill_with */
extern void T728f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].extend */
extern void T728f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T726f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T728f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].force */
extern void T724f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].fill_with */
extern void T725f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].extend */
extern void T725f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T724f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T725f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].force */
extern void T718f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_VOID].fill_with */
extern void T720f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_VOID].extend */
extern void T720f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].aliased_resized_area */
extern T0* T718f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_VOID].aliased_resized_area */
extern T0* T720f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].force */
extern void T715f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].fill_with */
extern void T717f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].extend */
extern void T717f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T715f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T717f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].force */
extern void T712f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].fill_with */
extern void T714f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].extend */
extern void T714f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T712f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T714f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].force */
extern void T710f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RESULT].fill_with */
extern void T711f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RESULT].extend */
extern void T711f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].aliased_resized_area */
extern T0* T710f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RESULT].aliased_resized_area */
extern T0* T711f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T707f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T709f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].force */
extern void T702f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].fill_with */
extern void T704f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].extend */
extern void T704f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T702f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T704f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T699f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T701f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].force */
extern void T696f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FREE_OPERATOR].fill_with */
extern void T698f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FREE_OPERATOR].extend */
extern void T698f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T696f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T698f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].force */
extern void T694f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CURRENT].fill_with */
extern void T695f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CURRENT].extend */
extern void T695f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].aliased_resized_area */
extern T0* T694f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CURRENT].aliased_resized_area */
extern T0* T695f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].force */
extern void T688f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BREAK].fill_with */
extern void T690f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BREAK].extend */
extern void T690f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].aliased_resized_area */
extern T0* T688f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BREAK].aliased_resized_area */
extern T0* T690f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T685f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T687f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].force */
extern void T683f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_POSITION].fill_with */
extern void T684f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_POSITION].extend */
extern void T684f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].aliased_resized_area */
extern T0* T683f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_POSITION].aliased_resized_area */
extern T0* T684f3(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].force */
extern void T678f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].fill_with */
extern void T680f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].extend */
extern void T680f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T678f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T680f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].force */
extern void T675f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_KEYWORD].fill_with */
extern void T677f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_KEYWORD].extend */
extern void T677f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T675f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T677f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.accept */
extern void T271f1132(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action */
extern void T271f1130(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_error */
extern void T271f1155(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1600_1799 */
extern void T271f1154(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_eof_expected_error */
extern void T271f1176(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1400_1599 */
extern void T271f1153(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1200_1399 */
extern void T271f1152(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1000_1199 */
extern void T271f1151(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_800_999 */
extern void T271f1150(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_600_799 */
extern void T271f1149(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_400_599 */
extern void T271f1148(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_200_399 */
extern void T271f1147(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_0_199 */
extern void T271f1146(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.read_token */
extern void T271f1129(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_execute_action */
extern void T271f1145(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.less */
extern void T271f1175(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_break */
extern void T271f1164(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_comment */
extern T0* T281f15(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_break */
extern T0* T281f14(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_underscored_real_constant */
extern T0* T281f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_position */
extern void T1232f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_REAL_CONSTANT.make */
extern T0* T1232c41(GE_context* ac, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.make_leaf */
extern void T1232f48(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.last_literal */
extern T0* T271f943(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_regular_real_constant */
extern T0* T281f12(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_position */
extern void T1231f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_REAL_CONSTANT.make */
extern T0* T1231c41(GE_context* ac, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.make_leaf */
extern void T1231f48(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_binary_integer_constant */
extern T0* T281f11(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_position */
extern void T1230f75(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_BINARY_INTEGER_CONSTANT.make */
extern T0* T1230c70(GE_context* ac, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.compute_value */
extern void T1230f78(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.make_leaf */
extern void T1230f77(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_octal_integer_constant */
extern T0* T281f10(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_position */
extern void T1229f75(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_OCTAL_INTEGER_CONSTANT.make */
extern T0* T1229c70(GE_context* ac, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.compute_value */
extern void T1229f78(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.make_leaf */
extern void T1229f77(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_hexadecimal_integer_constant */
extern T0* T281f9(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_position */
extern void T1228f75(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make */
extern T0* T1228c70(GE_context* ac, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.compute_value */
extern void T1228f78(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make_leaf */
extern void T1228f77(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_underscored_integer_constant */
extern T0* T281f8(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_position */
extern void T1227f75(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make */
extern T0* T1227c70(GE_context* ac, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.compute_value */
extern void T1227f78(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make_leaf */
extern void T1227f77(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_regular_integer_constant */
extern T0* T281f7(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_position */
extern void T1226f75(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_INTEGER_CONSTANT.make */
extern T0* T1226c70(GE_context* ac, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.compute_value */
extern void T1226f78(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.make_leaf */
extern void T1226f77(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_ssel_error */
extern void T282f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssel_error */
extern void T34f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sscu_error */
extern void T282f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sscu_error */
extern void T34f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssac_error */
extern void T282f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssac_error */
extern void T34f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssas_error */
extern void T282f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssas_error */
extern void T34f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssao_error */
extern void T282f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssao_error */
extern void T34f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_special_manifest_string */
extern T0* T281f6(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_position */
extern void T1225f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_special_manifest_string */
extern T0* T271f946(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.make */
extern T0* T1225c42(GE_context* ac, T0* a1, T0* a2);
/* ET_SPECIAL_MANIFEST_STRING.make_leaf */
extern void T1225f48(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.integer_ */
extern T0* T271f950(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_verbatim_string */
extern T0* T281f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* ET_VERBATIM_STRING.set_position */
extern void T1224f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_verbatim_string */
extern T0* T271f945(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_VERBATIM_STRING.make */
extern T0* T1224c46(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_VERBATIM_STRING.make_leaf */
extern void T1224f52(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.is_verbatim_string_closer */
extern T1 T271f719(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.text */
extern T0* T271f717(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.append_text_to_string */
extern void T271f2122(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.text_substring */
extern T0* T271f715(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.process_regular_manifest_string */
extern void T271f1174(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_regular_manifest_string */
extern T0* T281f4(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_position */
extern void T1191f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_MANIFEST_STRING.make */
extern T0* T1191c41(GE_context* ac, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.make_leaf */
extern void T1191f46(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_scao_error */
extern void T282f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scao_error */
extern void T34f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_c3_character_constant */
extern T0* T281f3(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_position */
extern void T1223f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_c3_character_constant */
extern T0* T271f944(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.make */
extern T0* T1223c43(GE_context* ac, T0* a1, T3 a2);
/* ET_C3_CHARACTER_CONSTANT.make_leaf */
extern void T1223f49(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_c2_character_constant */
extern void T271f1173(GE_context* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_c2_character_constant */
extern T0* T281f120(GE_context* ac, T0* C, T2 a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.set_position */
extern void T1237f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_C2_CHARACTER_CONSTANT.make */
extern T0* T1237c42(GE_context* ac, T3 a1);
/* ET_C2_CHARACTER_CONSTANT.make_leaf */
extern void T1237f47(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_scsc_error */
extern void T282f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scsc_error */
extern void T34f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sccu_error */
extern void T282f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sccu_error */
extern void T34f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.process_c1_character_constant */
extern void T271f1172(GE_context* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_c1_character_constant */
extern T0* T281f119(GE_context* ac, T0* C, T2 a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.set_position */
extern void T1236f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.make */
extern T0* T1236c42(GE_context* ac, T3 a1);
/* ET_C1_CHARACTER_CONSTANT.make_leaf */
extern void T1236f47(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_sctq_error */
extern void T282f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sctq_error */
extern void T34f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_free_operator */
extern T0* T281f2(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_position */
extern void T697f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FREE_OPERATOR.make_prefix */
extern T0* T697c47(GE_context* ac, T0* a1);
/* ET_FREE_OPERATOR.string_ */
extern T0* T697f10(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.make_token */
extern void T697f51(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_leaf */
extern void T697f52(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_start_condition */
extern void T271f1165(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.more */
extern void T271f1171(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_identifier */
extern void T271f1170(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_detachable_keyword */
extern T0* T281f118(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.set_position */
extern void T421f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.use_detachable_keyword */
extern T1 T271f852(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_reference_keyword */
extern T0* T281f117(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_reference */
extern T0* T421c57(GE_context* ac);
/* ET_EIFFEL_PARSER.use_reference_keyword */
extern T1 T271f850(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_keyword */
extern T0* T281f116(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_position */
extern void T679f19(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_invariant_keyword */
extern T0* T281f115(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_attribute_keyword */
extern T0* T281f114(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_attribute_keyword */
extern T1 T271f846(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_undefine_keyword */
extern T0* T281f113(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.undefine_keyword */
extern T0* T82f728(GE_context* ac, T0* C);
/* ET_KEYWORD.make_undefine */
extern T0* T421c92(GE_context* ac);
/* ET_AST_FACTORY.new_separate_keyword */
extern T0* T281f112(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_redefine_keyword */
extern T0* T281f111(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_obsolete_keyword */
extern T0* T281f110(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.obsolete_keyword */
extern T0* T82f726(GE_context* ac, T0* C);
/* ET_KEYWORD.make_obsolete */
extern T0* T421c90(GE_context* ac);
/* ET_AST_FACTORY.new_indexing_keyword */
extern T0* T281f109(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_external_keyword */
extern T0* T281f108(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.external_keyword */
extern T0* T82f724(GE_context* ac, T0* C);
/* ET_KEYWORD.make_external */
extern T0* T421c88(GE_context* ac);
/* ET_AST_FACTORY.new_expanded_keyword */
extern T0* T281f107(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_expanded */
extern T0* T421c56(GE_context* ac);
/* ET_AST_FACTORY.new_deferred_keyword */
extern T0* T281f106(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_creation_keyword */
extern T0* T281f105(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_attached_keyword */
extern T0* T281f104(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_attached_keyword */
extern T1 T271f835(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_variant_keyword */
extern T0* T281f103(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_require_keyword */
extern T0* T281f102(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_inspect_keyword */
extern T0* T281f101(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.inspect_keyword */
extern T0* T82f720(GE_context* ac, T0* C);
/* ET_KEYWORD.make_inspect */
extern T0* T421c84(GE_context* ac);
/* ET_AST_FACTORY.new_inherit_keyword */
extern T0* T281f100(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_implies_keyword */
extern T0* T281f99(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.set_position */
extern void T703f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_OPERATOR.make_implies */
extern T0* T703c52(GE_context* ac);
/* ET_AST_FACTORY.new_feature_keyword */
extern T0* T281f98(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_convert_keyword */
extern T0* T281f97(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_current_keyword */
extern T0* T281f96(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.set_position */
extern void T303f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_unique_keyword */
extern T0* T281f95(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_select_keyword */
extern T0* T281f94(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.select_keyword */
extern T0* T82f716(GE_context* ac, T0* C);
/* ET_KEYWORD.make_select */
extern T0* T421c80(GE_context* ac);
/* ET_AST_FACTORY.new_result_keyword */
extern T0* T281f93(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT.set_position */
extern void T331f35(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_rescue_keyword */
extern T0* T281f92(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_rename_keyword */
extern T0* T281f91(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_prefix_keyword */
extern T0* T281f90(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_frozen_keyword */
extern T0* T281f89(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_frozen */
extern T0* T421c52(GE_context* ac);
/* ET_AST_FACTORY.new_export_keyword */
extern T0* T281f88(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_ensure_keyword */
extern T0* T281f87(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_elseif_keyword */
extern T0* T281f86(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.elseif_keyword */
extern T0* T82f711(GE_context* ac, T0* C);
/* ET_KEYWORD.make_elseif */
extern T0* T421c75(GE_context* ac);
/* ET_AST_FACTORY.new_create_keyword */
extern T0* T281f85(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_keyword */
extern T0* T281f84(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.assign_keyword */
extern T0* T82f710(GE_context* ac, T0* C);
/* ET_KEYWORD.make_assign */
extern T0* T421c74(GE_context* ac);
/* ET_AST_FACTORY.new_across_keyword */
extern T0* T281f83(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_until_keyword */
extern T0* T281f82(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.until_keyword */
extern T0* T82f709(GE_context* ac, T0* C);
/* ET_KEYWORD.make_until */
extern T0* T421c73(GE_context* ac);
/* ET_AST_FACTORY.new_strip_keyword */
extern T0* T281f81(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_retry_keyword */
extern T0* T281f80(GE_context* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.set_position */
extern void T713f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_RETRY_INSTRUCTION.make */
extern T0* T713c13(GE_context* ac);
/* ET_RETRY_INSTRUCTION.make_token */
extern void T713f15(GE_context* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.make_leaf */
extern void T713f16(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.tokens */
extern T0* T713f7(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_local_keyword */
extern T0* T281f79(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_infix_keyword */
extern T0* T281f78(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_false_keyword */
extern T0* T281f77(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.set_position */
extern void T1235f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FALSE_CONSTANT.make */
extern T0* T1235c39(GE_context* ac);
/* ET_FALSE_CONSTANT.make_token */
extern void T1235f43(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.make_leaf */
extern void T1235f44(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.tokens */
extern T0* T1235f8(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_debug_keyword */
extern T0* T281f76(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_class_keyword */
extern T0* T281f75(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_check_keyword */
extern T0* T281f74(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_alias_keyword */
extern T0* T281f73(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_agent_keyword */
extern T0* T281f72(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_KEYWORD.set_position */
extern void T676f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_when_keyword */
extern T0* T281f71(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_void_keyword */
extern T0* T281f70(GE_context* ac, T0* C, T0* a1);
/* ET_VOID.set_position */
extern void T719f32(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_VOID.make */
extern T0* T719c29(GE_context* ac);
/* ET_VOID.make_token */
extern void T719f33(GE_context* ac, T0* C, T0* a1);
/* ET_VOID.make_leaf */
extern void T719f34(GE_context* ac, T0* C);
/* ET_VOID.tokens */
extern T0* T719f5(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_true_keyword */
extern T0* T281f69(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.set_position */
extern void T1234f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_then_keyword */
extern T0* T281f68(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_some_keyword */
extern T0* T281f67(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_some */
extern T0* T421c48(GE_context* ac);
/* ET_AST_FACTORY.new_note_keyword */
extern T0* T281f66(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.note_keyword */
extern T0* T82f701(GE_context* ac, T0* C);
/* ET_KEYWORD.make_note */
extern T0* T421c65(GE_context* ac);
/* ET_EIFFEL_PARSER.use_note_keyword */
extern T1 T271f794(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_keyword */
extern T0* T281f64(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_like_keyword */
extern T0* T281f63(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_from_keyword */
extern T0* T281f62(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_else_keyword */
extern T0* T281f61(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_xor_keyword */
extern T0* T281f60(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_xor */
extern T0* T703c51(GE_context* ac);
/* ET_AST_FACTORY.new_old_keyword */
extern T0* T281f59(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_not_keyword */
extern T0* T281f58(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_not */
extern T0* T703c50(GE_context* ac);
/* ET_AST_FACTORY.new_end_keyword */
extern T0* T281f57(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_all_keyword */
extern T0* T281f56(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_and_keyword */
extern T0* T281f55(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_or_keyword */
extern T0* T281f54(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_is_keyword */
extern T0* T281f53(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_if_keyword */
extern T0* T281f52(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.if_keyword */
extern T0* T82f696(GE_context* ac, T0* C);
/* ET_KEYWORD.make_if */
extern T0* T421c60(GE_context* ac);
/* ET_AST_FACTORY.new_do_keyword */
extern T0* T281f51(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_as_keyword */
extern T0* T281f50(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_keyword */
extern T0* T281f1(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_two_char_symbol */
extern void T271f1169(GE_context* ac, T0* C, T2 a1, T2 a2);
/* ET_AST_FACTORY.new_assign_attempt_symbol */
extern T0* T281f49(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_symbol */
extern T0* T281f48(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_dotdot_symbol */
extern T0* T281f47(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_arrow_symbol */
extern T0* T281f46(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_array_symbol */
extern T0* T281f45(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.set_position */
extern void T369f76(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_le_symbol */
extern T0* T281f44(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_position */
extern void T716f84(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_SYMBOL_OPERATOR.make_le */
extern T0* T716c94(GE_context* ac);
/* ET_SYMBOL_OPERATOR.make_leaf */
extern void T716f99(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_right_array_symbol */
extern T0* T281f43(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_ge_symbol */
extern T0* T281f42(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_ge */
extern T0* T716c93(GE_context* ac);
/* ET_AST_FACTORY.new_mod_symbol */
extern T0* T281f41(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_mod */
extern T0* T716c92(GE_context* ac);
/* ET_AST_FACTORY.new_not_tilde_symbol */
extern T0* T281f40(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_not_tilde */
extern T0* T369c81(GE_context* ac);
/* ET_AST_FACTORY.new_not_equal_symbol */
extern T0* T281f39(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_not_equal */
extern T0* T369c80(GE_context* ac);
/* ET_AST_FACTORY.new_div_symbol */
extern T0* T281f38(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_div */
extern T0* T716c91(GE_context* ac);
/* ET_EIFFEL_PARSER.text_count */
extern T6 T271f701(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_set_line_column */
extern void T271f1168(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_one_char_symbol */
extern void T271f1167(GE_context* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_tilde_symbol */
extern T0* T281f37(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_tilde */
extern T0* T369c79(GE_context* ac);
/* ET_AST_FACTORY.new_dollar_symbol */
extern T0* T281f36(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_bracket_symbol */
extern T0* T281f35(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_bracket_symbol */
extern T0* T281f34(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.set_position */
extern void T655f103(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_right_brace_symbol */
extern T0* T281f33(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_brace_symbol */
extern T0* T281f32(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_parenthesis_symbol */
extern T0* T281f31(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_parenthesis_symbol */
extern T0* T281f30(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_question_mark_symbol */
extern T0* T281f29(GE_context* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.set_position */
extern void T727f72(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_bang_symbol */
extern T0* T281f28(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_symbol */
extern T0* T281f27(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_comma_symbol */
extern T0* T281f26(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.comma_symbol */
extern T0* T82f685(GE_context* ac, T0* C);
/* ET_SYMBOL.make_comma */
extern T0* T369c85(GE_context* ac);
/* ET_AST_FACTORY.new_semicolon_symbol */
extern T0* T281f25(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.semicolon_symbol */
extern T0* T82f684(GE_context* ac, T0* C);
/* ET_SEMICOLON_SYMBOL.make */
extern T0* T722c4(GE_context* ac);
/* ET_SEMICOLON_SYMBOL.make_leaf */
extern void T722f5(GE_context* ac, T0* C);
/* ET_SEMICOLON_SYMBOL.tokens */
extern T0* T722f3(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_dot_symbol */
extern T0* T281f24(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.dot_symbol */
extern T0* T82f683(GE_context* ac, T0* C);
/* ET_SYMBOL.make_dot */
extern T0* T369c84(GE_context* ac);
/* ET_AST_FACTORY.new_lt_symbol */
extern T0* T281f23(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_lt */
extern T0* T716c90(GE_context* ac);
/* ET_AST_FACTORY.new_gt_symbol */
extern T0* T281f22(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_gt */
extern T0* T716c89(GE_context* ac);
/* ET_AST_FACTORY.new_equal_symbol */
extern T0* T281f21(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_equal */
extern T0* T369c75(GE_context* ac);
/* ET_AST_FACTORY.new_power_symbol */
extern T0* T281f20(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_power */
extern T0* T716c88(GE_context* ac);
/* ET_AST_FACTORY.new_divide_symbol */
extern T0* T281f19(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_divide */
extern T0* T716c87(GE_context* ac);
/* ET_AST_FACTORY.new_times_symbol */
extern T0* T281f18(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_times */
extern T0* T716c86(GE_context* ac);
/* ET_AST_FACTORY.new_plus_symbol */
extern T0* T281f17(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_plus */
extern T0* T716c85(GE_context* ac);
/* ET_AST_FACTORY.new_minus_symbol */
extern T0* T281f16(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_minus */
extern T0* T716c83(GE_context* ac);
/* ET_EIFFEL_PARSER.text_item */
extern T2 T271f700(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_execute_eof_action */
extern void T271f1144(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.terminate */
extern void T271f1163(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.wrap */
extern T1 T271f663(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_refill_input_buffer */
extern void T271f1143(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_null_trans_state */
extern T6 T271f662(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_previous_state */
extern T6 T271f661(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.fatal_error */
extern void T271f1142(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_init_value_stacks */
extern void T271f1128(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_clear_all */
extern void T271f1137(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.clear_all */
extern void T271f1161(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.clear_stacks */
extern void T271f2093(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T271f2119(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_WRITABLE].keep_head */
extern void T994f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WRITABLE].set_count */
extern void T994f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].keep_head */
extern void T992f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].set_count */
extern void T992f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].keep_head */
extern void T989f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].set_count */
extern void T989f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].keep_head */
extern void T986f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].set_count */
extern void T986f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].keep_head */
extern void T983f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].set_count */
extern void T983f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].keep_head */
extern void T980f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].set_count */
extern void T980f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].keep_head */
extern void T976f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].set_count */
extern void T976f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].keep_head */
extern void T973f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].set_count */
extern void T973f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].keep_head */
extern void T970f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].set_count */
extern void T970f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].keep_head */
extern void T968f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].set_count */
extern void T968f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].keep_head */
extern void T963f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].set_count */
extern void T963f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECONDITIONS].keep_head */
extern void T958f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECONDITIONS].set_count */
extern void T958f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].keep_head */
extern void T956f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].set_count */
extern void T956f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].keep_head */
extern void T953f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].set_count */
extern void T953f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].keep_head */
extern void T951f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].set_count */
extern void T951f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].keep_head */
extern void T949f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].set_count */
extern void T949f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].keep_head */
extern void T946f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].set_count */
extern void T946f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].keep_head */
extern void T944f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].set_count */
extern void T944f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].keep_head */
extern void T941f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].set_count */
extern void T941f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].keep_head */
extern void T938f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].set_count */
extern void T938f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].keep_head */
extern void T936f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].set_count */
extern void T936f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].keep_head */
extern void T933f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].set_count */
extern void T933f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].keep_head */
extern void T930f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].set_count */
extern void T930f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].keep_head */
extern void T927f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].set_count */
extern void T927f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].keep_head */
extern void T922f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].set_count */
extern void T922f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].keep_head */
extern void T919f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].set_count */
extern void T919f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].keep_head */
extern void T916f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].set_count */
extern void T916f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].keep_head */
extern void T913f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].set_count */
extern void T913f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].keep_head */
extern void T911f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].set_count */
extern void T911f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].keep_head */
extern void T908f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].set_count */
extern void T908f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].keep_head */
extern void T905f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].set_count */
extern void T905f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_AGENT].keep_head */
extern void T902f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_AGENT].set_count */
extern void T902f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].keep_head */
extern void T899f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].set_count */
extern void T899f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].keep_head */
extern void T896f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].set_count */
extern void T896f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM].keep_head */
extern void T893f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM].set_count */
extern void T893f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_ITEM].keep_head */
extern void T890f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_ITEM].set_count */
extern void T890f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_LIST].keep_head */
extern void T887f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_LIST].set_count */
extern void T887f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].keep_head */
extern void T884f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].set_count */
extern void T884f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_EXPRESSION].keep_head */
extern void T881f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_EXPRESSION].set_count */
extern void T881f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].keep_head */
extern void T878f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].set_count */
extern void T878f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].keep_head */
extern void T868f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].set_count */
extern void T868f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].keep_head */
extern void T865f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].set_count */
extern void T865f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].keep_head */
extern void T863f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].set_count */
extern void T863f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].keep_head */
extern void T858f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].set_count */
extern void T858f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].keep_head */
extern void T855f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].set_count */
extern void T855f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].keep_head */
extern void T852f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].set_count */
extern void T852f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].keep_head */
extern void T849f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].set_count */
extern void T849f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].keep_head */
extern void T846f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].set_count */
extern void T846f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].keep_head */
extern void T840f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].set_count */
extern void T840f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].keep_head */
extern void T838f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].set_count */
extern void T838f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].keep_head */
extern void T835f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].set_count */
extern void T835f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].keep_head */
extern void T832f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].set_count */
extern void T832f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].keep_head */
extern void T829f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].set_count */
extern void T829f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].keep_head */
extern void T826f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].set_count */
extern void T826f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].keep_head */
extern void T823f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].set_count */
extern void T823f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].keep_head */
extern void T820f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].set_count */
extern void T820f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].keep_head */
extern void T817f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].set_count */
extern void T817f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].keep_head */
extern void T814f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].set_count */
extern void T814f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].keep_head */
extern void T812f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].set_count */
extern void T812f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].keep_head */
extern void T809f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].set_count */
extern void T809f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].keep_head */
extern void T806f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].set_count */
extern void T806f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].keep_head */
extern void T800f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].set_count */
extern void T800f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].keep_head */
extern void T797f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].set_count */
extern void T797f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T794f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].set_count */
extern void T794f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].keep_head */
extern void T789f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].set_count */
extern void T789f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].keep_head */
extern void T786f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].set_count */
extern void T786f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].keep_head */
extern void T784f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].set_count */
extern void T784f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].keep_head */
extern void T781f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].set_count */
extern void T781f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].keep_head */
extern void T777f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].set_count */
extern void T777f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].keep_head */
extern void T774f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].set_count */
extern void T774f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].keep_head */
extern void T771f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].set_count */
extern void T771f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].keep_head */
extern void T768f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].set_count */
extern void T768f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].keep_head */
extern void T765f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].set_count */
extern void T765f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].keep_head */
extern void T762f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].set_count */
extern void T762f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].keep_head */
extern void T760f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].set_count */
extern void T760f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].keep_head */
extern void T757f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].set_count */
extern void T757f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].keep_head */
extern void T754f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].set_count */
extern void T754f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].keep_head */
extern void T748f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].set_count */
extern void T748f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].keep_head */
extern void T746f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].set_count */
extern void T746f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].keep_head */
extern void T743f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].set_count */
extern void T743f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].keep_head */
extern void T740f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].set_count */
extern void T740f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].keep_head */
extern void T738f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].set_count */
extern void T738f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T654f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].set_count */
extern void T654f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].keep_head */
extern void T736f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].set_count */
extern void T736f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].keep_head */
extern void T734f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].set_count */
extern void T734f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].keep_head */
extern void T731f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].set_count */
extern void T731f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].keep_head */
extern void T728f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].set_count */
extern void T728f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].keep_head */
extern void T725f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].set_count */
extern void T725f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].keep_head */
extern void T723f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].set_count */
extern void T723f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].keep_head */
extern void T720f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].set_count */
extern void T720f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].keep_head */
extern void T717f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].set_count */
extern void T717f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].keep_head */
extern void T714f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].set_count */
extern void T714f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].keep_head */
extern void T711f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].set_count */
extern void T711f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].keep_head */
extern void T709f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].set_count */
extern void T709f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].keep_head */
extern void T706f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].set_count */
extern void T706f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].keep_head */
extern void T704f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].set_count */
extern void T704f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].keep_head */
extern void T701f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].set_count */
extern void T701f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].keep_head */
extern void T698f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].set_count */
extern void T698f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].keep_head */
extern void T695f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].set_count */
extern void T695f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].keep_head */
extern void T693f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].set_count */
extern void T693f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].keep_head */
extern void T690f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].set_count */
extern void T690f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].keep_head */
extern void T687f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].set_count */
extern void T687f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].keep_head */
extern void T684f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].set_count */
extern void T684f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].keep_head */
extern void T680f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].set_count */
extern void T680f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].keep_head */
extern void T677f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].set_count */
extern void T677f9(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.abort */
extern void T271f1131(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T271f1127(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].wipe_out */
extern void T668f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_all_cursors_after */
extern void T668f17(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].wipe_out */
extern void T665f9(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].wipe_out */
extern void T664f9(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].wipe_out */
extern void T661f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T271f1127p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T271f1127p0(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T271f1127p2(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.tmp_file */
extern T0* T271f690(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.shared_file */
extern T0* T271f928(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_preparsed */
extern void T83f250(GE_context* ac, T0* C);
/* ET_CLASS.is_in_cluster */
extern T1 T83f104(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.error_handler */
extern T0* T271f689(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_fatal_error */
extern void T271f1121(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_none_class */
extern void T271f1120(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_identifier */
extern void T1016f25(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_identifier */
extern void T410f6(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_identifier */
extern void T406f11(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_identifier */
extern void T391f120(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_cursor_validity */
extern void T391f133(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_COMPONENT_LIST.across_component */
extern T0* T1222f5(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.current_closure_impl */
extern T0* T391f47(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_across_cursor */
extern void T391f140(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.copy_type_context */
extern void T403f61(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.item */
extern T0* T403f15(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.set_root_context */
extern void T403f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].found_item */
extern T0* T407f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].found */
extern T1 T407f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].search */
extern void T407f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].search_position */
extern void T407f65(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].hash_position */
extern T6 T407f32(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.hash_code */
extern T6 T733f15(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.hash_code */
extern T6 T730f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].key_storage_item */
extern T0* T407f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].slots_item */
extern T6 T407f34(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_veen9b_error */
extern void T282f361(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen9b */
extern T0* T1032c888(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen9_error */
extern T1 T282f107(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen9b_error */
extern void T34f361(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen9_error */
extern T1 T34f106(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen9a_error */
extern void T282f360(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen9a */
extern T0* T1032c887(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen9a_error */
extern void T34f360(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACROSS_CURSOR_SCOPE.across_component */
extern T0* T408f3(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].item */
extern T0* T1120f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.has_implementation_error */
extern T1 T391f48(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_test_local_validity */
extern void T391f132(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST_LIST.object_test */
extern T0* T1221f5(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_object_test_local */
extern void T391f139(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].found_item */
extern T0* T404f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].found */
extern T1 T404f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].search */
extern void T404f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].search_position */
extern void T404f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].hash_position */
extern T6 T404f32(GE_context* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.hash_code */
extern T6 T1111f22(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.hash_code */
extern T6 T1293f25(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_item */
extern T0* T404f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_item */
extern T6 T404f34(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_veen8b_error */
extern void T282f359(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen8b */
extern T0* T1032c886(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen8_error */
extern T1 T282f106(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen8b_error */
extern void T34f359(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen8_error */
extern T1 T34f105(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen8a_error */
extern void T282f358(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen8a */
extern T0* T1032c885(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen8a_error */
extern void T34f358(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST_SCOPE.object_test */
extern T0* T405f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].item */
extern T0* T1114f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_local_variable_validity */
extern void T391f131(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_variable */
extern void T391f138(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vevi0a_error */
extern void T282f357(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vevi0a */
extern T0* T1032c884(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vevi_error */
extern T1 T282f70(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vevi0a_error */
extern void T34f357(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vevi_error */
extern T1 T34f69(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_expanded */
extern T1 T403f37(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_detachable */
extern T1 T403f36(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.attached_like_current */
extern T0* T82f821(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.has_local_variable */
extern T1 T409f8(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_attached */
extern T1 T403f35(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_veen2c_error */
extern void T282f356(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2c */
extern T0* T1032c883(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen2_error */
extern T1 T282f105(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen2c_error */
extern void T34f356(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen2_error */
extern T1 T34f104(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2e_error */
extern void T282f355(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2e */
extern T0* T1032c882(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2e_error */
extern void T34f355(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_validity */
extern void T391f130(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_formal_argument */
extern void T391f137(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE.has_formal_argument */
extern T1 T409f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_identifier */
extern void T80f178(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_cursor_validity */
extern void T80f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_closure_impl */
extern T0* T80f64(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_across_cursor */
extern void T80f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.has_implementation_error */
extern T1 T80f70(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_validity */
extern void T80f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_local */
extern void T80f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_validity */
extern void T80f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable */
extern void T80f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_validity */
extern void T80f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument */
extern void T80f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_identifier */
extern void T76f960(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_closed_operand */
extern void T76f966(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_closed_operand */
extern T1 T183f34(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_agent_open_operand */
extern void T76f965(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_open_operand */
extern T1 T183f33(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_local */
extern void T76f964(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test_local_name */
extern void T76f970(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_current */
extern void T1016f45(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_current */
extern void T410f7(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_current */
extern void T406f12(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current */
extern void T391f141(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_validity */
extern void T391f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_current */
extern void T391f250(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current */
extern void T80f274(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_validity */
extern void T80f360(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current */
extern void T80f420(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_dynamic_type_set */
extern void T80f174(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.put */
extern void T287f16(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.process_current */
extern void T76f961(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_current */
extern void T76f967(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_qualified_call_expression */
extern void T1016f42(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_actual_argument_list */
extern void T1016f94(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_qualified_call_expression */
extern void T410f24(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_qualified_call_expression */
extern void T406f29(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_qualified_call_expression */
extern void T391f159(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_call_expression_validity */
extern void T391f212(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T391f212ot1(T0* a1, T0** a2);
extern T1 T391f212ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vuex2a_error */
extern void T282f363(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuex2a */
extern T0* T1032c890(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T282f109(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex2a_error */
extern void T34f363(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T34f108(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_expression_validity */
extern void T391f261(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_tuple_label_expression */
extern void T391f317(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.formal_parameter_type */
extern T0* T83f208(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].replace */
extern void T1795f11(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].item */
extern T0* T1795f7(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].put_last */
extern void T1795f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].force */
extern void T1870f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].fill_with */
extern void T1869f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].extend */
extern void T1869f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].resize */
extern void T1795f9(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T1870f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T1869f4(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1795c8(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].set_internal_cursor */
extern void T1795f12(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].new_cursor */
extern T0* T1795f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1871c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1870f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].make_empty */
extern T0* T1869c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].default_create */
extern T0* T1870c3(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.report_vuar1c_error */
extern void T282f407(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar1c */
extern T0* T1032c934(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T282f116(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar1c_error */
extern void T34f407(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T34f115(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuta2b_error */
extern void T282f406(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuta2b */
extern T0* T1032c933(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T282f114(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuta2b_error */
extern void T34f406(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T34f113(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.is_entity_attached */
extern T1 T391f51(GE_context* ac, T0* C, T0* a1);
extern T1 T391f51ot1(T0* a1);
extern T1 T391f51ot2(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE.has_attribute */
extern T1 T409f10(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.has_result */
extern T1 T409f6(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T403f39(GE_context* ac, T0* C, T0* a1);
extern T1 T403f39ot1(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.put_last */
extern void T403f58(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.remove_last */
extern void T403f56(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.put */
extern void T403f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.last */
extern T0* T403f16(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vkcn2a_error */
extern void T282f371(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn2a */
extern T0* T1032c898(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T282f111(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn2a_error */
extern void T34f371(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T34f110(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_query_call_expression_validity */
extern void T391f246(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.reset_fatal_error */
extern void T391f303(GE_context* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_query_call_type_validity */
extern void T391f304(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T391f304ot1(T0* a1, T0** a2);
extern T1 T391f304ot2(T0* a1, T0** a2);
extern T1 T391f304ot3(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_qualified_call_expression */
extern void T391f270(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_validity */
extern void T391f243(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_actual_arguments_validity */
extern void T391f302(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T391f302ot1(T0* a1, T0** a2);
extern T1 T391f302ot2(T0* a1);
extern T1 T391f302ot3(T0* a1, T0** a2);
extern T1 T391f302ot4(T0* a1);
extern T1 T391f302ot5(T0* a1, T0** a2);
extern T1 T391f302ot6(T0* a1, T0** a2);
extern T1 T391f302ot7(T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2b_error */
extern void T282f445(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vuar2b */
extern T0* T1032c972(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T282f115(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar2b_error */
extern void T34f445(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T34f114(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2a_error */
extern void T282f377(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar2a */
extern T0* T1032c904(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vuar2a_error */
extern void T34f377(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vdpr4b_error */
extern void T282f444(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vdpr4b */
extern T0* T1032c971(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T282f141(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr4b_error */
extern void T34f444(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T34f140(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_basic */
extern T1 T83f162(GE_context* ac, T0* C);
/* ET_CLASS_CODES.is_basic */
extern T1 T422f34(GE_context* ac, T0* C, T8 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.put */
extern void T1693f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_ACTUAL_ARGUMENT_LIST.put */
extern void T304f17(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.item */
extern T0* T1693f9(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.item */
extern T0* T304f5(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.convert_expression */
extern T0* T391f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_builtin_conversion */
extern void T391f368(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_BUILTIN_EXPRESSION.make */
extern T0* T1800c17(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_TO_EXPRESSION.make */
extern T0* T1802c22(GE_context* ac, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_creation_expression */
extern void T391f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FROM_EXPRESSION.make */
extern T0* T1801c22(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.convert_feature */
extern T0* T396f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.convert_from_feature */
extern T0* T83f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BRACED_TYPE_LIST.has_named_type_with_type_marks */
extern T1 T1339f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TOKEN_CONSTANTS.attached_separate_type_mark */
extern T0* T82f1503(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identity_type */
extern T0* T82f745(GE_context* ac, T0* C);
/* ET_CLASS.convert_to_feature */
extern T0* T83f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context */
extern T1 T403f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context_with_type_marks */
extern T1 T403f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.tokens */
extern T0* T403f17(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar1b_error */
extern void T282f443(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuar1b */
extern T0* T1032c970(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuar1b_error */
extern void T34f443(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuar1a_error */
extern void T282f378(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuar1a */
extern T0* T1032c905(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vuar1a_error */
extern void T34f378(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr4a_error */
extern void T282f442(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr4a */
extern T0* T1032c969(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr4a_error */
extern void T34f442(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make */
extern T0* T1693c12(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ET_MANIFEST_TUPLE.make */
extern T0* T311c35(GE_context* ac);
/* ET_MANIFEST_TUPLE.make */
extern void T311f35p1(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.put_first */
extern void T1693f17(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T1693f11(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T1693f16(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T1693f16p1(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T1693f10(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.tuple_argument_position */
extern T6 T391f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_vape_validity */
extern void T391f269(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vape0b_error */
extern void T282f408(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape0b */
extern T0* T1032c935(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vape_error */
extern T1 T282f129(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vape0b_error */
extern void T34f408(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vape_error */
extern T1 T34f128(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuex2b_error */
extern void T282f376(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuex2b */
extern T0* T1032c903(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vuex2b_error */
extern void T34f376(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vuta2a_error */
extern void T282f375(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuta2a */
extern T0* T1032c902(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vuta2a_error */
extern void T34f375(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_PREFIX_EXPRESSION.set_boolean_operator */
extern void T1291f28(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.is_boolean_class */
extern T1 T83f131(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_query_parenthesis_call_validity */
extern void T391f191(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T391f191ot1(T0* a1, T0** a2);
extern T1 T391f191ot2(T0* a1, T0** a2);
extern T1 T391f191ot3(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_expression_validity */
extern void T391f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T391f249ot1(T0* a1, T0** a2);
extern T1 T391f249ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_instruction_validity */
extern void T391f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T391f248ot1(T0* a1, T0** a2);
extern T1 T391f248ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vkcn1a_error */
extern void T282f362(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn1a */
extern T0* T1032c889(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T282f108(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn1a_error */
extern void T34f362(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T34f107(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_instruction_validity */
extern void T391f190(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_call_instruction */
extern void T391f244(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_expression_validity */
extern void T391f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_call_expression */
extern void T391f306(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_vape_validity */
extern void T391f305(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vape0a_error */
extern void T282f446(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape0a */
extern T0* T1032c973(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vape0a_error */
extern void T34f446(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FEATURE_CHECKER.set_parenthesis_call_position */
extern void T391f245(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIS_SYMBOL.set_position */
extern void T1675f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_CLASS.named_feature */
extern T0* T83f172(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_SYMBOL.make */
extern T0* T1675c41(GE_context* ac);
/* ET_PARENTHESIS_SYMBOL.make_leaf */
extern void T1675f44(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.tokens */
extern T0* T1675f34(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_qualified_dotnet_query_call_expression_validity */
extern void T391f260(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.free_overloaded_queries */
extern void T391f316(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].force_last */
extern void T400f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].force */
extern void T1098f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].fill_with */
extern void T1099f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].extend */
extern void T1099f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].resize */
extern void T400f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].aliased_resized_area */
extern T0* T1098f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].aliased_resized_area */
extern T0* T1099f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_capacity */
extern T6 T400f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].extendible */
extern T1 T400f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].first */
extern T0* T669f14(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.keep_best_overloaded_features */
extern void T391f241(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* DS_ARRAYED_LIST [ET_QUERY].keep_first */
extern void T669f38(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].keep_first */
extern void T670f38(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.free_overloaded_features */
extern void T391f301(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].force_last */
extern void T401f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].force */
extern void T1101f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].fill_with */
extern void T1103f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].extend */
extern void T1103f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].resize */
extern void T401f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].aliased_resized_area */
extern T0* T1101f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].aliased_resized_area */
extern T0* T1103f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].new_capacity */
extern T6 T401f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].extendible */
extern T1 T401f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].has */
extern T1 T1102f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove */
extern void T1102f15(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].move_left */
extern void T1102f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_cursors_left */
extern void T1102f20(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_position */
extern void T1808f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove_last */
extern void T1102f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_last_cursors_after */
extern void T1102f22(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_next_cursor */
extern void T1808f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_after */
extern void T1808f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].item */
extern T0* T1102f11(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type */
extern T1 T403f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_FEATURE].wipe_out */
extern void T1102f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_all_cursors_after */
extern void T1102f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].force_last */
extern void T1102f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].resize */
extern void T1102f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_capacity */
extern T6 T1102f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].extendible */
extern T1 T1102f9(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.new_overloaded_features */
extern T0* T391f55(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].remove_last */
extern void T401f15(GE_context* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].keep_head */
extern void T1103f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].set_count */
extern void T1103f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].move_last_cursors_after */
extern void T401f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].set_next_cursor */
extern void T1104f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].set_after */
extern void T1104f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].last */
extern T0* T401f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].make */
extern T0* T1102c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].set_internal_cursor */
extern void T1102f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_cursor */
extern T0* T1102f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].make */
extern T0* T1808c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].is_empty */
extern T1 T401f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].remove */
extern void T669f37(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_left */
extern void T669f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_left */
extern void T669f40(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_last */
extern void T669f39(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].move_last_cursors_after */
extern void T669f42(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove */
extern void T670f37(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_left */
extern void T670f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_left */
extern void T670f40(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_last */
extern void T670f39(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_last_cursors_after */
extern void T670f42(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].is_empty */
extern T1 T669f13(GE_context* ac, T0* C);
/* ET_CLASS.add_overloaded_queries */
extern void T83f304(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUERY_LIST.add_overloaded_features */
extern void T265f14(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T265f14ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.new_overloaded_queries */
extern T0* T391f56(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].remove_last */
extern void T400f15(GE_context* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].keep_head */
extern void T1099f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].set_count */
extern void T1099f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].move_last_cursors_after */
extern void T400f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_next_cursor */
extern void T1100f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_after */
extern void T1100f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].last */
extern T0* T400f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].is_empty */
extern T1 T400f9(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_current_type_needed */
extern void T391f90(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_expression */
extern void T80f292(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_expression_validity */
extern void T80f378(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f378ot1(T0* a1, T0** a2);
extern T1 T80f378ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_expression_validity */
extern void T80f431(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_expression */
extern void T80f470(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f470ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_qualified_call_target_dynamic_types */
extern void T80f337(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dynamic_type_set */
extern T0* T80f80(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.is_entity_attached */
extern T1 T80f74(GE_context* ac, T0* C, T0* a1);
extern T1 T80f74ot1(T0* a1);
extern T1 T80f74ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_expression_validity */
extern void T80f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.reset_fatal_error */
extern void T80f351(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_call_type_validity */
extern void T80f411(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f411ot1(T0* a1, T0** a2);
extern T1 T80f411ot2(T0* a1, T0** a2);
extern T1 T80f411ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_expression */
extern void T80f410(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f410ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_validity */
extern void T80f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_arguments_validity */
extern void T80f231(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f231ot1(T0* a1, T0** a2);
extern T1 T80f231ot2(T0* a1);
extern T1 T80f231ot3(T0* a1, T0** a2);
extern T1 T80f231ot4(T0* a1);
extern T1 T80f231ot5(T0* a1, T0** a2);
extern T1 T80f231ot6(T0* a1, T0** a2);
extern T1 T80f231ot7(T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.convert_expression */
extern T0* T80f75(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_conversion */
extern void T80f507(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_expression */
extern void T80f469(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_operand_dynamic_types */
extern void T80f413(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tuple_argument_position */
extern T6 T80f79(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_vape_validity */
extern void T80f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_parenthesis_call_validity */
extern void T80f225(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f225ot1(T0* a1, T0** a2);
extern T1 T80f225ot2(T0* a1, T0** a2);
extern T1 T80f225ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_expression_validity */
extern void T80f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f332ot1(T0* a1, T0** a2);
extern T1 T80f332ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_instruction_validity */
extern void T80f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f331ot1(T0* a1, T0** a2);
extern T1 T80f331ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_instruction_validity */
extern void T80f224(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_instruction */
extern void T80f233(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.make */
extern T0* T336c11(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_expression_validity */
extern void T80f330(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_expression */
extern void T80f412(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f412ot1(T0* a1, T0** a2);
extern T1 T80f412ot2(T0* a1, T0** a2);
extern T1 T80f412ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_like_argument_dynamic_types */
extern void T80f462(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_dynamic_types */
extern void T80f419(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_vape_validity */
extern void T80f358(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_parenthesis_call_position */
extern void T80f328(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_query_call_expression_validity */
extern void T80f430(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_queries */
extern void T80f229(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.keep_best_overloaded_features */
extern void T80f228(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_features */
extern void T80f336(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_features */
extern T0* T80f78(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_queries */
extern T0* T80f73(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_validity */
extern void T80f222(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_expression_supplier */
extern void T80f325(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current_type_needed */
extern void T80f141(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_qualified_call_expression */
extern void T76f962(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_expression */
extern void T76f968(GE_context* ac, T0* C, T0* a1);
extern T1 T76f968ot1(T0* a1, T0** a2);
extern T1 T76f968ot2(T0* a1, T0** a2);
extern T1 T76f968ot3(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_expressions_unfrozen */
extern void T76f973(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.mark_expressions_frozen */
extern void T76f972(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_used */
extern void T76f971(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_result */
extern void T1016f46(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_result */
extern void T410f8(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_result */
extern void T406f13(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result */
extern void T391f143(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_validity */
extern void T391f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result */
extern void T391f252(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vevi0b_error */
extern void T282f369(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0b */
extern T0* T1032c896(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0b_error */
extern void T34f369(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2a_error */
extern void T282f368(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2a */
extern T0* T1032c895(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2a_error */
extern void T34f368(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2g_error */
extern void T282f367(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2g */
extern T0* T1032c894(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2g_error */
extern void T34f367(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2d_error */
extern void T282f366(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen2d */
extern T0* T1032c893(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_veen2d_error */
extern void T34f366(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen2b_error */
extern void T282f365(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2b */
extern T0* T1032c892(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2b_error */
extern void T34f365(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2f_error */
extern void T282f364(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2f */
extern T0* T1032c891(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2f_error */
extern void T34f364(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result */
extern void T80f276(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_validity */
extern void T80f362(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result */
extern void T80f422(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_result */
extern void T76f963(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_result */
extern void T76f969(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_value */
extern void T76f974(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_DYNAMIC_PRECURSOR.is_once_per_process */
extern T1 T328f21(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once_per_process */
extern T1 T247f20(GE_context* ac, T0* C);
/* ET_C_GENERATOR.once_prefixes */
extern T0* T76f438(GE_context* ac, T0* C);
/* ET_C_GENERATOR.once_kind */
extern T6 T76f437(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_real_64_class */
extern T1 T83f144(GE_context* ac, T0* C);
/* ET_CLASS.is_real_32_class */
extern T1 T83f143(GE_context* ac, T0* C);
/* ET_CLASS.is_pointer_class */
extern T1 T83f142(GE_context* ac, T0* C);
/* ET_CLASS.is_natural_64_class */
extern T1 T83f141(GE_context* ac, T0* C);
/* ET_CLASS.is_natural_32_class */
extern T1 T83f140(GE_context* ac, T0* C);
/* ET_CLASS.is_natural_16_class */
extern T1 T83f139(GE_context* ac, T0* C);
/* ET_CLASS.is_natural_8_class */
extern T1 T83f138(GE_context* ac, T0* C);
/* ET_CLASS.is_integer_64_class */
extern T1 T83f137(GE_context* ac, T0* C);
/* ET_CLASS.is_integer_32_class */
extern T1 T83f136(GE_context* ac, T0* C);
/* ET_CLASS.is_integer_16_class */
extern T1 T83f135(GE_context* ac, T0* C);
/* ET_CLASS.is_integer_8_class */
extern T1 T83f134(GE_context* ac, T0* C);
/* ET_CLASS.is_character_32_class */
extern T1 T83f133(GE_context* ac, T0* C);
/* ET_CLASS.is_character_8_class */
extern T1 T83f132(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].found_item */
extern T6 T313f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].item_storage_item */
extern T6 T313f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].found */
extern T1 T313f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].search */
extern void T313f50(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unqualified_call_expression */
extern void T1016f84(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T410f48(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T406f53(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unqualified_call_expression */
extern void T391f183(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_expression_validity */
extern void T391f236(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T391f236ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vuex1a_error */
extern void T282f389(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuex1a */
extern T0* T1032c916(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T282f122(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex1a_error */
extern void T34f389(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T34f121(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn2c_error */
extern void T282f388(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn2c */
extern T0* T1032c915(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vkcn2c_error */
extern void T34f388(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_expression_validity */
extern void T391f292(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuao0c_error */
extern void T282f434(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0c */
extern T0* T1032c961(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T282f137(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuao0c_error */
extern void T34f434(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T34f136(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuao0a_error */
extern void T282f433(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0a */
extern T0* T1032c960(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuao0a_error */
extern void T34f433(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuao0b_error */
extern void T282f432(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0b */
extern T0* T1032c959(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuao0b_error */
extern void T34f432(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_object_test_local_parenthesis_call_validity */
extern void T391f341(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_identifier_parenthesis_call_validity */
extern void T391f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T391f349ot1(T0* a1, T0** a2);
extern T1 T391f349ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_unqualified_across_cursor_call_expression_validity */
extern void T391f291(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuac0c_error */
extern void T282f431(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0c */
extern T0* T1032c958(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T282f136(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuac0c_error */
extern void T34f431(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T34f135(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuac0a_error */
extern void T282f430(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0a */
extern T0* T1032c957(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuac0a_error */
extern void T34f430(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuac0b_error */
extern void T282f429(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0b */
extern T0* T1032c956(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuac0b_error */
extern void T34f429(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_across_cursor_parenthesis_call_validity */
extern void T391f340(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_local_variable_call_expression_validity */
extern void T391f290(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvual0a_error */
extern void T282f428(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0a */
extern T0* T1032c955(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvual_error */
extern T1 T282f135(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvual0a_error */
extern void T34f428(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvual_error */
extern T1 T34f134(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0b_error */
extern void T282f427(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0b */
extern T0* T1032c954(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvual0b_error */
extern void T34f427(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_local_variable_parenthesis_call_validity */
extern void T391f339(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_expression_validity */
extern void T391f289(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0a_error */
extern void T282f426(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0a */
extern T0* T1032c953(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T282f134(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuaa0a_error */
extern void T34f426(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T34f133(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0b_error */
extern void T282f425(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0b */
extern T0* T1032c952(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuaa0b_error */
extern void T34f425(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_parenthesis_call_validity */
extern void T391f338(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_expression */
extern void T80f316(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_expression_validity */
extern void T80f402(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f402ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_expression_validity */
extern void T80f456(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_parenthesis_call_validity */
extern void T80f357(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_identifier_parenthesis_call_validity */
extern void T80f418(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f418ot1(T0* a1, T0** a2);
extern T1 T80f418ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_across_cursor_call_expression_validity */
extern void T80f455(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_cursor_parenthesis_call_validity */
extern void T80f356(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_expression_validity */
extern void T80f454(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_parenthesis_call_validity */
extern void T80f355(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_expression_validity */
extern void T80f453(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_parenthesis_call_validity */
extern void T80f354(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_unqualified_call_expression */
extern void T76f975(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_expression */
extern void T76f1031(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1031ot1(T0* a1, T0** a2);
extern T1 T76f1031ot2(T0* a1, T0** a2);
extern T1 T76f1031ot3(T0* a1, T0** a2);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T309f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_constant_attribute */
extern T1 T328f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_constant_attribute */
extern T1 T247f25(GE_context* ac, T0* C);
/* ET_C_GENERATOR.in_target */
extern T1 T76f442(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].is_empty */
extern T1 T293f11(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_attribute */
extern T1 T328f19(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_attribute */
extern T1 T247f24(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_manifest_tuple */
extern void T1016f44(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_tuple */
extern void T410f5(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_tuple */
extern void T406f10(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_tuple */
extern void T391f142(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_tuple_validity */
extern void T391f195(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T391f195ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_manifest_tuple */
extern void T391f251(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_tuple */
extern void T80f275(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_tuple_validity */
extern void T80f361(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f361ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_tuple */
extern void T80f421(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f421ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe_impl */
extern T0* T80f58(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_manifest_tuple */
extern void T76f976(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_tuple */
extern void T76f1032(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1032ot1(T0* a1, T0** a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].force_last */
extern void T312f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_put */
extern void T312f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_put */
extern void T312f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_item */
extern T6 T312f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].hash_position */
extern T6 T312f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].resize */
extern void T312f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_resize */
extern void T312f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].special_integer_ */
extern T0* T312f32(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_resize */
extern void T312f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_resize */
extern void T312f61(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T1061f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T1060f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_item */
extern T0* T312f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_resize */
extern void T312f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_capacity */
extern T6 T312f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_put */
extern void T312f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].force */
extern void T1061f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].fill_with */
extern void T1060f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].extend */
extern void T1060f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].search_position */
extern void T312f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_equality_tester */
extern T0* T312f30(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_object_test */
extern void T1016f73(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_object_test */
extern void T410f36(GE_context* ac, T0* C, T0* a1);
extern T1 T410f36ot1(T0* a1);
extern T1 T410f36ot2(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE.add_name */
extern void T409f16(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_attribute */
extern void T409f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].force_last */
extern void T176f81(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE.add_formal_argument */
extern void T409f21(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_local_variable */
extern void T409f20(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_result */
extern void T409f15(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_object_test */
extern void T406f41(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_object_test */
extern void T391f171(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_test_validity */
extern void T391f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_object_test */
extern void T391f275(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_object_test_type */
extern void T391f274(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_type_validity */
extern void T391f103(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_type_validity */
extern void T396f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_test */
extern void T80f304(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_validity */
extern void T80f390(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test */
extern void T80f439(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_constant_expression */
extern void T80f175(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].force_last */
extern void T393f62(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T393f34(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_type */
extern void T80f438(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_type_validity */
extern void T80f157(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_object_test */
extern void T76f977(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test */
extern void T76f1033(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].force_last */
extern void T298f14(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].force */
extern void T1046f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST].fill_with */
extern void T1045f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST].extend */
extern void T1045f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].resize */
extern void T298f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].aliased_resized_area */
extern T0* T1046f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBJECT_TEST].aliased_resized_area */
extern T0* T1045f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].new_capacity */
extern T6 T298f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].extendible */
extern T1 T298f8(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_object_equality_expression */
extern void T1016f69(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_object_equality_expression */
extern void T410f32(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_object_equality_expression */
extern void T406f37(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_object_equality_expression */
extern void T391f167(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_equality_expression_validity */
extern void T391f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_object_equality_expression */
extern void T391f272(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vweq0b_error */
extern void T282f380(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0b */
extern T0* T1032c907(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vweq_error */
extern T1 T282f117(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vweq0b_error */
extern void T34f380(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vweq_error */
extern T1 T34f116(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_left */
extern void T339f26(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_right */
extern void T339f25(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.name */
extern T0* T339f11(GE_context* ac, T0* C);
/* ET_IDENTIFIER.twin */
extern T0* T183f95(GE_context* ac, T0* C);
/* ET_IDENTIFIER.copy */
extern void T183f127(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.tokens */
extern T0* T339f17(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_equality_expression */
extern void T80f300(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_equality_expression_validity */
extern void T80f386(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_equality_expression */
extern void T80f436(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_object_equality_expression_target_dynamic_types */
extern void T80f472(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T1794c6(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_object_equality_expression */
extern void T76f978(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_equality_expression */
extern void T1016f68(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_equality_expression */
extern void T410f31(GE_context* ac, T0* C, T0* a1);
extern T1 T410f31ot1(T0* a1);
extern T1 T410f31ot2(T0* a1);
extern T1 T410f31ot3(T0* a1, T0** a2);
extern T1 T410f31ot4(T0* a1);
extern T1 T410f31ot5(T0* a1);
extern T1 T410f31ot6(T0* a1, T0** a2);
/* ET_BRACKET_SYMBOL.is_equal_symbol */
extern T1 T655f92(GE_context* ac, T0* C);
/* ET_SYMBOL.is_equal_symbol */
extern T1 T369f68(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_equality_expression */
extern void T406f36(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_equality_expression */
extern void T391f166(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_equality_expression_validity */
extern void T391f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_equality_expression */
extern void T391f271(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vweq0a_error */
extern void T282f379(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0a */
extern T0* T1032c906(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vweq0a_error */
extern void T34f379(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EQUALITY_EXPRESSION.set_left */
extern void T340f24(GE_context* ac, T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.set_right */
extern void T340f23(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_equality_expression */
extern void T80f299(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_equality_expression_validity */
extern void T80f385(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_equality_expression */
extern void T80f435(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_equality_expression_target_dynamic_types */
extern void T80f471(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.make */
extern T0* T1793c6(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_equality_expression */
extern void T76f979(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_expression */
extern void T1016f60(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_create_expression */
extern void T410f22(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_create_expression */
extern void T406f27(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_expression */
extern void T391f157(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_expression_validity */
extern void T391f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_creation_expression_validity */
extern void T391f258(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T391f258ot1(T0* a1, T0** a2);
extern T1 T391f258ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vgcc6c_error */
extern void T282f405(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6c */
extern T0* T1032c932(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc6c_error */
extern void T34f405(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc8a_error */
extern void T282f404(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8a */
extern T0* T1032c931(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T282f128(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc8a_error */
extern void T34f404(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T34f127(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.has_feature */
extern T1 T799f8(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc1a_error */
extern void T282f403(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc1a */
extern T0* T1032c930(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T282f127(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc1a_error */
extern void T34f403(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T34f126(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc5a_error */
extern void T282f402(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5a */
extern T0* T1032c929(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T282f126(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc5a_error */
extern void T34f402(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T34f125(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_type_validity */
extern void T391f314(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TYPE_CHECKER.check_creation_type_validity */
extern void T396f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T396f21ot1(T0* a1, T0** a2);
extern T1 T396f21ot2(T0* a1, T0** a2);
extern T1 T396f21ot3(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vtcg4a_error */
extern void T282f456(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4a */
extern T0* T1032c983(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T282f147(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg4a_error */
extern void T34f456(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T34f146(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.current_system */
extern T0* T396f14(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.ise_6_0_6_7358 */
extern T0* T396f13(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtcg4b_error */
extern void T282f455(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4b */
extern T0* T1032c982(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vtcg4b_error */
extern void T34f455(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_CONSTRAINT_CREATOR.is_empty */
extern T1 T799f9(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.error_handler */
extern T0* T396f11(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.set_fatal_error */
extern void T396f23(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.type_position */
extern T0* T1801f20(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.type_position */
extern T0* T349f16(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_create_supplier */
extern void T391f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_create_supplier */
extern void T1027f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6b_error */
extern void T282f401(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6b */
extern T0* T1032c928(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6b_error */
extern void T34f401(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.free_overloaded_procedures */
extern void T391f242(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].force_last */
extern void T399f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].force */
extern void T1095f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].fill_with */
extern void T1096f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].extend */
extern void T1096f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].resize */
extern void T399f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].aliased_resized_area */
extern T0* T1095f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].aliased_resized_area */
extern T0* T1096f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_capacity */
extern T6 T399f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].extendible */
extern T1 T399f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].first */
extern T0* T670f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].is_empty */
extern T1 T670f13(GE_context* ac, T0* C);
/* ET_CLASS.add_overloaded_procedures */
extern void T83f303(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PROCEDURE_LIST.add_overloaded_features */
extern void T266f14(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T266f14ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.new_overloaded_procedures */
extern T0* T391f50(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].remove_last */
extern void T399f15(GE_context* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].keep_head */
extern void T1096f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].set_count */
extern void T1096f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].move_last_cursors_after */
extern void T399f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_next_cursor */
extern void T1097f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_after */
extern void T1097f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].last */
extern T0* T399f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].is_empty */
extern T1 T399f9(GE_context* ac, T0* C);
/* ET_AST_NULL_LEAF.column */
extern T6 T1863f3(GE_context* ac, T0* C);
/* ET_AST_NULL_LEAF.line */
extern T6 T1863f2(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.last_position */
extern T0* T1801f19(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.last_position */
extern T0* T349f14(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.creation_call */
extern T0* T1801f18(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_expression */
extern void T80f290(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_expression_validity */
extern void T80f376(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_expression_validity */
extern void T80f428(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f428ot1(T0* a1, T0** a2);
extern T1 T80f428ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_type_validity */
extern void T80f344(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_create_supplier */
extern void T80f343(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_procedures */
extern void T80f326(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_procedures */
extern T0* T80f77(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_create_expression */
extern void T76f980(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_expression */
extern void T76f1034(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_extended_attribute */
extern void T1016f14(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_extended_attribute */
extern void T1015f15(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_extended_attribute */
extern void T391f81(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_extended_attribute_validity */
extern void T391f85(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_rescue_validity */
extern void T391f97(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vevi0e_error */
extern void T282f303(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0e */
extern T0* T1032c835(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0e_error */
extern void T34f302(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_COMPOUND.has_non_null_instruction */
extern T1 T356f7(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_instructions_validity */
extern void T391f96(GE_context* ac, T0* C, T0* a1);
/* ET_COMPOUND.item */
extern T0* T356f8(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_locals_validity */
extern void T391f95(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_supplier */
extern void T391f102(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_local_supplier */
extern void T1027f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_variable_declaration */
extern void T391f101(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_local_type_validity */
extern void T391f100(GE_context* ac, T0* C, T0* a1);
extern T1 T391f100ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vrle1a_error */
extern void T282f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle1a */
extern T0* T1032c846(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T282f79(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle1a_error */
extern void T34f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T34f78(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle2a_error */
extern void T282f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle2a */
extern T0* T1032c845(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T282f78(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle2a_error */
extern void T34f312(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T34f77(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0b_error */
extern void T282f312(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0b */
extern T0* T1032c844(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vreg0b_error */
extern void T34f311(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_across_components_validity */
extern void T391f94(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_object_tests_validity */
extern void T391f93(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuot3a_error */
extern void T282f311(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuot3a */
extern T0* T1032c843(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T282f77(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot3a_error */
extern void T34f310(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T34f76(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_6_4_7_7252 */
extern T0* T391f44(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_result_supplier */
extern void T391f92(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_result_supplier */
extern void T1027f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_result_declaration */
extern void T391f91(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_query_type_validity */
extern void T391f89(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_signature_type_validity */
extern void T391f99(GE_context* ac, T0* C, T0* a1);
extern T1 T391f99ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_extended_attribute */
extern void T80f118(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_extended_attribute_validity */
extern void T80f129(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_rescue_validity */
extern void T80f148(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_instructions_validity */
extern void T80f147(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_locals_validity */
extern void T80f146(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_supplier */
extern void T80f156(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable_declaration */
extern void T80f155(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_type_validity */
extern void T80f154(GE_context* ac, T0* C, T0* a1);
extern T1 T80f154ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_components_validity */
extern void T80f145(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_tests_validity */
extern void T80f144(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_4_7_7252 */
extern T0* T80f60(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_supplier */
extern void T80f143(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_declaration */
extern void T80f142(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_type_validity */
extern void T80f140(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_signature_type_validity */
extern void T80f153(GE_context* ac, T0* C, T0* a1);
extern T1 T80f153ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_extended_attribute */
extern void T76f981(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_extended_attribute */
extern void T76f1035(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute */
extern void T76f1038(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_wrapper */
extern void T76f1089(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_name */
extern void T309f30(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_routine_name */
extern void T76f1094(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T76f1094ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_feature_name_comment */
extern void T76f1103(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_constant_attribute */
extern void T1016f15(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_constant_attribute */
extern void T1015f16(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_constant_attribute */
extern void T391f82(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_constant_attribute_validity */
extern void T391f86(GE_context* ac, T0* C, T0* a1);
extern T1 T391f86ot1(T0* a1, T0** a2);
extern T1 T391f86ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vqmc5a_error */
extern void T282f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc5a */
extern T0* T1032c841(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T282f75(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc5a_error */
extern void T34f308(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T34f74(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc4a_error */
extern void T282f308(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc4a */
extern T0* T1032c840(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T282f74(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc4a_error */
extern void T34f307(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T34f73(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_type */
extern void T1232f47(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_type */
extern void T1231f47(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3a_error */
extern void T282f307(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc3a */
extern T0* T1032c839(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T282f73(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc3a_error */
extern void T34f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T34f72(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3b_error */
extern void T282f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vqmc3b */
extern T0* T1032c838(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_SYMBOL_OPERATOR.is_minus */
extern T1 T716f8(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vqmc3b_error */
extern void T34f305(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_integer_constant_validity */
extern void T391f98(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_64_constant */
extern void T391f111(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_32_constant */
extern void T391f110(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_16_constant */
extern void T391f109(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_8_constant */
extern void T391f108(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_64_constant */
extern void T391f107(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_32_constant */
extern void T391f106(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_16_constant */
extern void T391f105(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvwmc2a_error */
extern void T282f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvwmc2a */
extern T0* T1032c848(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T282f81(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvwmc2a_error */
extern void T34f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T34f80(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_8_constant */
extern void T391f104(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0a_error */
extern void T282f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0a */
extern T0* T1032c847(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.type_name */
extern T0* T1032f280(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T282f80(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwmq0a_error */
extern void T34f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T34f79(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc2a_error */
extern void T282f305(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc2a */
extern T0* T1032c837(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T282f72(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc2a_error */
extern void T34f304(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T34f71(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc1a_error */
extern void T282f304(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc1a */
extern T0* T1032c836(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T282f71(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc1a_error */
extern void T34f303(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T34f70(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_constant_attribute */
extern void T80f119(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_constant_attribute_validity */
extern void T80f130(GE_context* ac, T0* C, T0* a1);
extern T1 T80f130ot1(T0* a1, T0** a2);
extern T1 T80f130ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_integer_constant_validity */
extern void T80f149(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_64_constant */
extern void T80f165(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_32_constant */
extern void T80f164(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_16_constant */
extern void T80f163(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_8_constant */
extern void T80f162(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_64_constant */
extern void T80f161(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_32_constant */
extern void T80f160(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_16_constant */
extern void T80f159(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_8_constant */
extern void T80f158(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_constant_attribute */
extern void T76f982(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_constant_attribute */
extern void T76f1036(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unique_attribute */
extern void T1016f16(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_unique_attribute */
extern void T1015f17(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unique_attribute */
extern void T391f83(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unique_attribute_validity */
extern void T391f87(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqui0a_error */
extern void T282f310(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqui0a */
extern T0* T1032c842(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqui_error */
extern T1 T282f76(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqui0a_error */
extern void T34f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqui_error */
extern T1 T34f75(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unique_attribute */
extern void T80f120(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unique_attribute_validity */
extern void T80f131(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_unique_attribute */
extern void T76f983(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unique_attribute */
extern void T76f1037(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_attribute */
extern void T1016f17(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_attribute */
extern void T1015f18(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_attribute */
extern void T391f84(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_attribute_validity */
extern void T391f88(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_attribute */
extern void T80f121(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_attribute_validity */
extern void T80f132(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_attribute */
extern void T76f984(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_current */
extern void T1352f6(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_current */
extern void T1351f9(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_current */
extern void T1350f5(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_current */
extern void T1349f6(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_current */
extern void T1021f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1020f12(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_current */
extern void T1019f15(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_current */
extern void T1014f16(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_current */
extern void T1013f16(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_current */
extern void T1012f19(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1011f12(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_current */
extern void T1010f9(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_current */
extern void T1009f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_current */
extern void T998f20(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_type */
extern void T998f28(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_like_type_constraint */
extern void T998f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3a_error */
extern void T282f511(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3a */
extern T0* T1032c1031(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3a_error */
extern void T34f510(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_like_current */
extern void T997f15(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_type */
extern void T997f23(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_like_type_validity */
extern void T997f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3a_error */
extern void T282f505(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3a */
extern T0* T1032c1026(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T282f169(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr3a_error */
extern void T34f504(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T34f168(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.error_handler */
extern T0* T997f6(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER1.set_fatal_error */
extern void T997f12(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.process_like_current */
extern void T396f27(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_current_validity */
extern void T396f34(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_procedure */
extern void T1016f18(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_compound */
extern void T1016f24(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_do_procedure */
extern void T1015f19(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure */
extern void T391f112(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_validity */
extern void T391f122(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_formal_arguments_validity */
extern void T391f135(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_argument_supplier */
extern void T391f193(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_argument_supplier */
extern void T1027f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_formal_argument_declaration */
extern void T391f192(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure */
extern void T80f122(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T80f133(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_arguments_validity */
extern void T80f150(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_argument_supplier */
extern void T80f167(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument_declaration */
extern void T80f166(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_procedure */
extern void T76f985(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure */
extern void T76f1039(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_procedure */
extern void T76f1090(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_address_routine */
extern void T76f1100(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.argument_type_set */
extern T0* T76f456(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_address_routine_name */
extern void T76f1101(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_internal_routine */
extern void T76f1104(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_C_GENERATOR.print_assign_completed_to_once_status */
extern void T76f1136(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_internal_routine_body_declaration */
extern void T76f1119(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_assign_last_exception_to_once_exception */
extern void T76f1143(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_exception */
extern void T76f1147(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_compound */
extern void T76f1142(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_instruction */
extern void T76f1091(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.reset_rescue_data */
extern void T76f1141(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_malloc_current */
extern void T76f1108(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1108ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.current_universe */
extern T0* T76f459(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_feature_trace_message_call */
extern void T76f1106(GE_context* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_unindented_feature_info_message_call */
extern void T76f1137(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assign_result_to_once_value */
extern void T76f1135(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_assign_called_to_once_status */
extern void T76f1134(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_return_once_value */
extern void T76f1133(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_status */
extern void T76f1132(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_status_is_completed */
extern void T76f1131(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_return_statement */
extern void T76f1130(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assign_called_to_thread_safe_once_status */
extern void T76f1129(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_assign_once_exception_to_thread_safe_once_exception */
extern void T76f1128(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_thread_safe_once_exception */
extern void T76f1144(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_assign_result_to_thread_safe_once_value */
extern void T76f1127(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_thread_safe_once_value */
extern void T76f1145(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_assign_once_value_to_result */
extern void T76f1126(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex_unlock */
extern void T76f1125(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex */
extern void T76f1146(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex_lock */
extern void T76f1124(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex_try_lock */
extern void T76f1123(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_return_thread_safe_once_value */
extern void T76f1122(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_raise_thread_safe_once_exception_if_any */
extern void T76f1121(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_thread_safe_once_status */
extern void T76f1120(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].force_last */
extern void T313f51(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].key_storage_put */
extern void T313f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].slots_put */
extern void T313f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].clashes_put */
extern void T313f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].resize */
extern void T313f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].clashes_resize */
extern void T313f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].special_integer_ */
extern T0* T313f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].key_storage_resize */
extern void T313f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].item_storage_resize */
extern void T313f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].slots_resize */
extern void T313f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].new_capacity */
extern T6 T313f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].item_storage_put */
extern void T313f52(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_PRECURSOR_CHECKER.process_deferred_procedure */
extern void T1016f12(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_deferred_procedure */
extern void T1015f20(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_procedure */
extern void T391f113(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_procedure_validity */
extern void T391f123(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_procedure */
extern void T80f123(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_procedure_validity */
extern void T80f134(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_procedure */
extern void T76f986(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_procedure */
extern void T76f1040(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_void */
extern void T1016f56(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_void */
extern void T410f18(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_void */
extern void T406f23(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_void */
extern void T391f153(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_void_validity */
extern void T391f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_void_constant */
extern void T391f256(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_void */
extern void T80f286(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_void_validity */
extern void T80f372(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_void_constant */
extern void T80f426(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_void */
extern void T76f987(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_void */
extern void T76f1041(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_across_expression */
extern void T1016f89(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_invariants */
extern void T1016f93(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.assertion */
extern T0* T926f6(GE_context* ac, T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.item */
extern T0* T926f7(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_across_expression */
extern void T410f53(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_across_expression */
extern void T406f58(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_across_expression */
extern void T391f188(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_expression_validity */
extern void T391f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_across_expression */
extern void T391f300(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].remove_found_item */
extern void T407f63(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].remove_position */
extern void T407f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].key_storage_put */
extern void T407f71(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_storage_put */
extern void T407f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].key_storage_keep_head */
extern void T407f75(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_storage_keep_head */
extern void T407f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].clashes_put */
extern void T407f69(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].slots_put */
extern void T407f70(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].move_cursors_forth */
extern void T407f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].internal_set_key_equality_tester */
extern void T407f72(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_CURSOR_SCOPE.remove_across_components */
extern void T408f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].prune_last */
extern void T1120f15(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.build_negated_scope */
extern void T406f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.build_negated_scope */
extern void T410f54(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_loop_variant_validity */
extern void T391f299(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vave0a_error */
extern void T282f441(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vave0a */
extern T0* T1032c968(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vave_error */
extern T1 T282f140(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vave0a_error */
extern void T34f441(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vave_error */
extern T1 T34f139(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_invariant_validity */
extern void T391f298(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_CURSOR_SCOPE.add_across_component */
extern void T408f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].force_last */
extern void T1120f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].resize */
extern void T1120f16(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].new_capacity */
extern T6 T1120f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].extendible */
extern T1 T1120f8(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_across_component_header_validity */
extern void T391f297(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_call_instruction_validity */
extern void T391f134(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_INSTRUCTION.parenthesis_call */
extern T0* T1671f4(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T391f189(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].force_last */
extern void T407f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].resize */
extern void T407f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].clashes_resize */
extern void T407f79(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].special_integer_ */
extern T0* T407f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].key_storage_resize */
extern void T407f78(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_storage_resize */
extern void T407f77(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].slots_resize */
extern void T407f76(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].new_capacity */
extern T6 T407f31(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_across_cursor_declaration */
extern void T391f342(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_CURSOR_SCOPE.hidden_across_component */
extern T0* T408f5(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_voit2e_error */
extern void T282f440(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2e */
extern T0* T1032c967(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_voit2_error */
extern T1 T282f139(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit2e_error */
extern void T34f440(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_voit2_error */
extern T1 T34f138(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE.hidden_object_test */
extern T0* T405f5(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_voit2d_error */
extern void T282f439(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2d */
extern T0* T1032c966(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2d_error */
extern void T34f439(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].remove_last */
extern void T398f15(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].move_last_cursors_after */
extern void T398f17(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_next_cursor */
extern void T1094f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_after */
extern void T1094f6(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_voit2c_error */
extern void T282f438(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2c */
extern T0* T1032c965(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2c_error */
extern void T34f438(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2b_error */
extern void T282f437(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2b */
extern T0* T1032c964(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2b_error */
extern void T34f437(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].item */
extern T0* T398f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].force_last */
extern void T398f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].resize */
extern void T398f16(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_capacity */
extern T6 T398f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].extendible */
extern T1 T398f10(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_voit2a_error */
extern void T282f436(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2a */
extern T0* T1032c963(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2a_error */
extern void T34f436(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit1a_error */
extern void T282f435(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_voit1a */
extern T0* T1032c962(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_voit1_error */
extern T1 T282f138(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit1a_error */
extern void T34f435(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_voit1_error */
extern T1 T34f137(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_expression */
extern void T80f321(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_expression_validity */
extern void T80f406(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_across_expression */
extern void T80f461(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T80f335(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T80f335p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T80f334(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T80f334p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_component_header_validity */
extern void T80f226(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_instruction_validity */
extern void T80f200(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T80f223(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_across_cursor_declaration */
extern void T80f333(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_across_expression */
extern void T76f988(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_expression */
extern void T76f1042(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bracket_expression */
extern void T1016f43(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.process */
extern void T1693f15(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unfolded_tuple_actual_argument_list */
extern void T1016f107(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.process */
extern void T304f19(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_bracket_expression */
extern void T410f37(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_bracket_expression */
extern void T406f42(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bracket_expression */
extern void T391f172(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bracket_expression_validity */
extern void T391f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bracket_expression */
extern void T80f305(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bracket_expression_validity */
extern void T80f391(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_bracket_expression */
extern void T76f989(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_bracket_expression */
extern void T76f1043(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_call_agent */
extern void T1016f77(GE_context* ac, T0* C, T0* a1);
extern T1 T1016f77ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_agent_argument_operand_list */
extern void T1016f99(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_call_agent */
extern void T410f41(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_call_agent */
extern void T406f46(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_agent */
extern void T391f176(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_agent_validity */
extern void T391f229(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T391f229ot1(T0* a1, T0** a2);
extern T1 T391f229ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_typed_call_agent_validity */
extern void T391f280(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T391f280ot1(T0* a1, T0** a2);
extern T1 T391f280ot2(T0* a1, T0** a2);
/* ET_CALL_AGENT.is_procedure */
extern T1 T759f16(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vpca1b_error */
extern void T282f410(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca1b */
extern T0* T1032c937(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T282f130(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca1b_error */
extern void T34f410(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T34f129(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_tuple_label_call_agent_validity */
extern void T391f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_tuple_label_call_agent */
extern void T391f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_query_call_agent_validity */
extern void T391f328(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_query_call_agent */
extern void T391f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_agent_arguments_validity */
extern void T391f335(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T391f335ot1(T0* a1, T0** a2);
extern T1 T391f335ot2(T0* a1, T0** a2);
extern T1 T391f335ot3(T0* a1, T0** a2);
extern T1 T391f335ot4(T0* a1, T0** a2);
extern T1 T391f335ot5(T0* a1, T0** a2);
extern T1 T391f335ot6(T0* a1, T0** a2);
extern T1 T391f335ot7(T0* a1, T0** a2);
extern T1 T391f335ot8(T0* a1, T0** a2);
extern T1 T391f335ot9(T0* a1, T0** a2);
extern T1 T391f335ot10(T0* a1, T0** a2);
extern T1 T391f335ot11(T0* a1, T0** a2);
extern T1 T391f335ot12(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vpca5b_error */
extern void T282f454(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca5b */
extern T0* T1032c981(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T282f146(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca5b_error */
extern void T34f454(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T34f145(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca5a_error */
extern void T282f453(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca5a */
extern T0* T1032c980(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca5a_error */
extern void T34f453(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca4b_error */
extern void T282f452(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca4b */
extern T0* T1032c979(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T282f145(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca4b_error */
extern void T34f452(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T34f144(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca4a_error */
extern void T282f451(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca4a */
extern T0* T1032c978(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca4a_error */
extern void T34f451(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put */
extern void T745f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.item */
extern T0* T745f9(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3b_error */
extern void T282f450(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca3b */
extern T0* T1032c977(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T282f144(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca3b_error */
extern void T34f450(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T34f143(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3a_error */
extern void T282f449(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpca3a */
extern T0* T1032c976(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpca3a_error */
extern void T34f449(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.force_first */
extern void T251f32(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resize */
extern void T251f35(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.new_capacity */
extern T6 T251f24(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.capacity */
extern T6 T251f23(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_implicit_agent_open_arguments */
extern void T391f334(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.put_last */
extern void T1697f7(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].force */
extern void T1812f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].fill_with */
extern void T1811f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].extend */
extern void T1811f7(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.fixed_array */
extern T0* T1697f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].default_create */
extern T0* T1812c2(GE_context* ac);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.make */
extern T0* T1698c5(GE_context* ac, T0* a1, T6 a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.make_with_capacity */
extern T0* T1697c6(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T1812f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make_empty */
extern T0* T1811c4(GE_context* ac, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vpca2a_error */
extern void T282f448(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vpca2a */
extern T0* T1032c975(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T282f143(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca2a_error */
extern void T34f448(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T34f142(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_procedure_call_agent_validity */
extern void T391f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_procedure_call_agent */
extern void T391f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_procedure */
extern void T759f34(GE_context* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_qualified_call_agent_validity */
extern void T391f279(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T391f279ot1(T0* a1, T0** a2);
extern T1 T391f279ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_agent_validity */
extern void T391f326(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_query_call_agent_validity */
extern void T391f325(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_agent_validity */
extern void T391f324(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_call_agent_validity */
extern void T391f278(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpca1a_error */
extern void T282f409(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpca1a */
extern T0* T1032c936(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpca1a_error */
extern void T34f409(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_agent_validity */
extern void T391f323(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_query_call_agent */
extern void T391f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_agent_validity */
extern void T391f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_procedure_call_agent */
extern void T391f344(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_agent */
extern void T80f309(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_agent_validity */
extern void T80f395(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f395ot1(T0* a1, T0** a2);
extern T1 T80f395ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_call_agent_validity */
extern void T80f444(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f444ot1(T0* a1, T0** a2);
extern T1 T80f444ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_tuple_label_call_agent_validity */
extern void T80f480(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_call_agent */
extern void T80f495(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f495ot1(T0* a1, T0** a2);
extern T1 T80f495ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_query_call */
extern void T80f500(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TYPE_SET_LIST.is_empty */
extern T1 T287f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_query_call_agent_validity */
extern void T80f479(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_query_call_agent */
extern void T80f494(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_agent */
extern void T80f499(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f499ot1(T0* a1, T0** a2);
extern T1 T80f499ot2(T0* a1, T0** a2);
extern T1 T80f499ot3(T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_agent_closed_operands_dynamic_types */
extern void T80f502(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f502ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_agent_arguments_validity */
extern void T80f486(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T80f486ot1(T0* a1, T0** a2);
extern T1 T80f486ot2(T0* a1, T0** a2);
extern T1 T80f486ot3(T0* a1, T0** a2);
extern T1 T80f486ot4(T0* a1, T0** a2);
extern T1 T80f486ot5(T0* a1, T0** a2);
extern T1 T80f486ot6(T0* a1, T0** a2);
extern T1 T80f486ot7(T0* a1, T0** a2);
extern T1 T80f486ot8(T0* a1, T0** a2);
extern T1 T80f486ot9(T0* a1, T0** a2);
extern T1 T80f486ot10(T0* a1, T0** a2);
extern T1 T80f486ot11(T0* a1, T0** a2);
extern T1 T80f486ot12(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_implicit_agent_open_arguments */
extern void T80f485(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_procedure_call_agent_validity */
extern void T80f478(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_procedure_call_agent */
extern void T80f493(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_agent_validity */
extern void T80f443(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f443ot1(T0* a1, T0** a2);
extern T1 T80f443ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_agent_validity */
extern void T80f477(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_agent_validity */
extern void T80f476(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_agent_validity */
extern void T80f475(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_agent_validity */
extern void T80f442(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_agent_validity */
extern void T80f474(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_query_call_agent */
extern void T80f492(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_agent */
extern void T80f498(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f498ot1(T0* a1, T0** a2);
extern T1 T80f498ot2(T0* a1, T0** a2);
extern T1 T80f498ot3(T0* a1, T0** a2);
extern T1 T80f498ot4(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_call_agent_result_dynamic_types */
extern void T80f503(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_agent_validity */
extern void T80f473(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_procedure_call_agent */
extern void T80f491(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_call_agent */
extern void T76f990(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_agent */
extern void T76f1045(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent */
extern void T76f1093(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1093ot1(T0* a1, T0** a2);
extern T1 T76f1093ot2(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [ET_AGENT].force_last */
extern void T301f14(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].force */
extern void T1055f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_AGENT].fill_with */
extern void T1054f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT].extend */
extern void T1054f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].resize */
extern void T301f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].aliased_resized_area */
extern T0* T1055f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT].aliased_resized_area */
extern T0* T1054f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].new_capacity */
extern T6 T301f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].extendible */
extern T1 T301f8(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_agent_body_declaration */
extern void T76f1044(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_instruction */
extern void T76f1092(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1092ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_name */
extern void T305f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_target */
extern void T305f11(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_name */
extern void T308f30(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_if_expression */
extern void T1016f61(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_expression_list */
extern void T1016f98(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION.process */
extern void T825f8(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_expression */
extern void T1016f109(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION_LIST.item */
extern T0* T828f4(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_if_expression */
extern void T410f23(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_if_expression */
extern void T406f28(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_if_expression */
extern void T391f158(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_expression_validity */
extern void T391f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_if_expression */
extern void T391f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwce0a_error */
extern void T282f370(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vwce0a */
extern T0* T1032c897(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vwce_error */
extern T1 T282f110(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwce0a_error */
extern void T34f370(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vwce_error */
extern T1 T34f109(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_expression */
extern void T80f291(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_expression_validity */
extern void T80f377(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_if_expression */
extern void T80f429(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_if_expression */
extern void T76f991(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_expression */
extern void T76f1046(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_array */
extern void T1016f75(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.expression */
extern T0* T929f10(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.item */
extern T0* T929f15(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_array */
extern void T410f39(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_array */
extern void T406f44(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_array */
extern void T391f174(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_array_validity */
extern void T391f227(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T391f227ot1(T0* a1, T0** a2);
extern T1 T391f227ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_manifest_array */
extern void T391f276(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_ARRAY.put */
extern void T929f31(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_array */
extern void T80f307(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_array_validity */
extern void T80f393(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f393ot1(T0* a1, T0** a2);
extern T1 T80f393ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_array */
extern void T80f440(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f440ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_manifest_array */
extern void T76f992(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_array */
extern void T76f1047(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1047ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_parenthesized_expression */
extern void T1016f74(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_parenthesized_expression */
extern void T410f38(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_parenthesized_expression */
extern void T406f43(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_parenthesized_expression */
extern void T391f173(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_parenthesized_expression_validity */
extern void T391f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_parenthesized_expression */
extern void T80f306(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_parenthesized_expression_validity */
extern void T80f392(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_parenthesized_expression */
extern void T76f993(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_parenthesized_expression */
extern void T76f1048(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_static_call_expression */
extern void T1016f62(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_static_call_expression */
extern void T410f25(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_static_call_expression */
extern void T406f30(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_expression */
extern void T391f160(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_expression_validity */
extern void T391f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_static_query_call_expression_validity */
extern void T391f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_static_call_expression */
extern void T391f320(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_feature_validity */
extern void T391f319(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_FEATURE_CHECKER.check_static_feature_validity */
extern T0* T391f319ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_FEATURE_CHECKER.check_static_feature_validity */
extern T0* T391f319ac2(GE_context* ac);
extern T1 T391f319ot1(T0* a1);
extern T1 T391f319ot2(T0* a1);
extern T1 T391f319ot3(T0* a1, T0** a2);
/* [attached] PREDICATE [[attached] TUPLE [ET_ASSERTIONS]].set_rout_disp_final */
extern void T1695f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_NULL_ERROR_HANDLER.report_vuno3a_error */
extern void T282f447(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuno3a */
extern T0* T1032c974(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuno3_error */
extern T1 T282f142(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuno3a_error */
extern void T34f447(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuno3_error */
extern T1 T34f141(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.add_precursors_with_postconditions_recursive */
extern void T391f343(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].wipe_out */
extern void T414f65(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_wipe_out */
extern void T414f70(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_wipe_out */
extern void T414f69(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_wipe_out */
extern void T414f68(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_wipe_out */
extern void T414f67(GE_context* ac, T0* C);
/* SPECIAL [ET_ASSERTIONS].keep_head */
extern void T1127f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTIONS].set_count */
extern void T1127f10(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].move_all_cursors_after */
extern void T414f66(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].for_all */
extern T1 T414f38(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.are_all_true */
extern T1 T955f11(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.are_all_true */
extern T1 T413f11(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.string_ */
extern T0* T391f58(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_builtin */
extern T1 T1258f39(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_builtin */
extern T1 T259f62(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_static_supplier */
extern void T391f318(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_static_supplier */
extern void T1027f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_parenthesis_call_validity */
extern void T391f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T391f263ot1(T0* a1, T0** a2);
extern T1 T391f263ot2(T0* a1, T0** a2);
/* ET_STATIC_CALL_INSTRUCTION.set_parenthesis_call */
extern void T1281f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.set_parenthesis_call */
extern void T972f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_dotnet_query_call_expression_validity */
extern void T391f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_expression */
extern void T80f293(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_expression_validity */
extern void T80f379(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_query_call_expression_validity */
extern void T80f353(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_expression */
extern void T80f417(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.set_static */
extern void T328f41(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_static */
extern void T247f40(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_feature_validity */
extern void T80f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_feature_validity */
extern T0* T80f350ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_feature_validity */
extern T0* T80f350ac2(GE_context* ac);
extern T1 T80f350ot1(T0* a1);
extern T1 T80f350ot2(T0* a1);
extern T1 T80f350ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.add_precursors_with_postconditions_recursive */
extern void T80f416(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_supplier */
extern void T80f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_parenthesis_call_validity */
extern void T80f242(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f242ot1(T0* a1, T0** a2);
extern T1 T80f242ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_query_call_expression_validity */
extern void T80f432(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_expression */
extern void T76f994(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_expression */
extern void T76f1049(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1049ot1(T0* a1, T0** a2);
extern T1 T76f1049ot2(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_strip_expression */
extern void T1016f76(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_strip_expression */
extern void T410f40(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_strip_expression */
extern void T406f45(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_strip_expression */
extern void T391f175(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_strip_expression_validity */
extern void T391f228(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_strip_expression */
extern void T391f277(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwst2a_error */
extern void T282f384(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst2a */
extern T0* T1032c911(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T282f120(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst2a_error */
extern void T34f384(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T34f119(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1a_error */
extern void T282f383(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vwst1a */
extern T0* T1032c910(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T282f119(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst1a_error */
extern void T34f383(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T34f118(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1b_error */
extern void T282f382(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst1b */
extern T0* T1032c909(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwst1b_error */
extern void T34f382(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.feature_name */
extern T0* T975f15(GE_context* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.item */
extern T0* T975f21(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_strip_expression */
extern void T80f308(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_strip_expression_validity */
extern void T80f394(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_strip_expression */
extern void T80f441(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_strip_expression */
extern void T76f995(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_strip_expression */
extern void T76f1050(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_named_object_test */
extern void T1016f87(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_named_object_test */
extern void T410f51(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_named_object_test */
extern void T406f56(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE.add_object_test */
extern void T405f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].force_last */
extern void T1114f15(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].resize */
extern void T1114f16(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T1114f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].extendible */
extern T1 T1114f8(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vuot1f_error */
extern void T282f503(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1f */
extern T0* T1032c1024(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T282f124(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot1f_error */
extern void T34f502(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T34f123(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.error_handler */
extern T0* T406f7(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.set_fatal_error */
extern void T406f60(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.process_named_object_test */
extern void T391f186(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_named_object_test_validity */
extern void T391f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_named_object_test */
extern void T391f296(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuot4b_error */
extern void T282f397(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuot4b */
extern T0* T1032c924(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T282f125(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot4b_error */
extern void T34f397(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T34f124(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuot4a_error */
extern void T282f396(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuot4a */
extern T0* T1032c923(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuot4a_error */
extern void T34f396(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.ise_6_3_7_5660 */
extern T0* T391f53(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuot1e_error */
extern void T282f395(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1e */
extern T0* T1032c922(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1e_error */
extern void T34f395(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1d_error */
extern void T282f394(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1d */
extern T0* T1032c921(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1d_error */
extern void T34f394(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1c_error */
extern void T282f393(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1c */
extern T0* T1032c920(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1c_error */
extern void T34f393(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1b_error */
extern void T282f392(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1b */
extern T0* T1032c919(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1b_error */
extern void T34f392(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1a_error */
extern void T282f391(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1a */
extern T0* T1032c918(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1a_error */
extern void T34f391(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].force_last */
extern void T404f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_put */
extern void T404f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_put */
extern void T404f66(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_put */
extern void T404f65(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].resize */
extern void T404f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_resize */
extern void T404f71(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].special_integer_ */
extern T0* T404f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_resize */
extern void T404f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_resize */
extern void T404f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_resize */
extern void T404f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T404f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_put */
extern void T404f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_named_object_test */
extern void T80f319(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_named_object_test_validity */
extern void T80f404(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_named_object_test */
extern void T80f460(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_named_object_test_dynamic_types */
extern void T80f489(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_3_7_5660 */
extern T0* T80f84(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_named_object_test */
extern void T76f996(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_manifest_string */
extern void T1016f47(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_manifest_string */
extern void T410f9(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_manifest_string */
extern void T406f14(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_manifest_string */
extern void T391f144(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_manifest_string_validity */
extern void T391f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_manifest_string_validity */
extern void T391f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_32_constant */
extern void T391f308(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_8_constant */
extern void T391f307(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0d_error */
extern void T282f398(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0d */
extern T0* T1032c925(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwmq0d_error */
extern void T34f398(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_manifest_string */
extern void T80f277(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_manifest_string_validity */
extern void T80f363(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_string_validity */
extern void T80f423(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_32_constant */
extern void T80f464(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_constant */
extern void T80f490(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_manifest_string_area_dynamic_type */
extern void T80f497(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_8_constant */
extern void T80f463(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_manifest_string */
extern void T76f997(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_manifest_string */
extern void T76f1051(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_string */
extern void T76f1095(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_integer_constant */
extern void T1016f48(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_integer_constant */
extern void T410f10(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_integer_constant */
extern void T406f15(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_integer_constant */
extern void T391f145(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_integer_constant_validity */
extern void T391f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_integer_constant */
extern void T80f278(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_integer_constant_validity */
extern void T80f364(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_integer_constant */
extern void T76f998(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_integer_constant */
extern void T76f1052(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_integer_constant */
extern void T76f1096(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_64 */
extern void T286f17(GE_context* ac, T0* C, T11 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_64 */
extern void T288f18(GE_context* ac, T0* C, T11 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_32 */
extern void T286f16(GE_context* ac, T0* C, T10 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_32 */
extern void T288f17(GE_context* ac, T0* C, T10 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_16 */
extern void T286f15(GE_context* ac, T0* C, T9 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_16 */
extern void T288f16(GE_context* ac, T0* C, T9 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_8 */
extern void T286f14(GE_context* ac, T0* C, T8 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_8 */
extern void T288f15(GE_context* ac, T0* C, T8 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_64 */
extern void T286f10(GE_context* ac, T0* C, T7 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer_64 */
extern void T288f11(GE_context* ac, T0* C, T7 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_32 */
extern void T286f13(GE_context* ac, T0* C, T6 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer_32 */
extern void T288f14(GE_context* ac, T0* C, T6 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_16 */
extern void T286f12(GE_context* ac, T0* C, T5 a1);
/* INTEGER_16.to_integer_64 */
extern T7 T5f6(GE_context* ac, T5* C);
/* KL_STRING_OUTPUT_STREAM.put_integer_16 */
extern void T288f13(GE_context* ac, T0* C, T5 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_8 */
extern void T286f11(GE_context* ac, T0* C, T4 a1);
/* INTEGER_8.to_integer_64 */
extern T7 T4f6(GE_context* ac, T4* C);
/* KL_STRING_OUTPUT_STREAM.put_integer_8 */
extern void T288f12(GE_context* ac, T0* C, T4 a1);
/* ET_PRECURSOR_CHECKER.process_underscored_integer_constant */
extern void T1016f49(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T410f11(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T406f16(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_integer_constant */
extern void T391f146(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_integer_constant_validity */
extern void T391f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_integer_constant */
extern void T80f279(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_integer_constant_validity */
extern void T80f365(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_integer_constant */
extern void T76f999(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_integer_constant */
extern void T76f1053(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_hexadecimal_integer_constant */
extern void T1016f50(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T410f12(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T406f17(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_hexadecimal_integer_constant */
extern void T391f147(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_hexadecimal_integer_constant_validity */
extern void T391f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_hexadecimal_integer_constant */
extern void T80f280(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_hexadecimal_integer_constant_validity */
extern void T80f366(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_hexadecimal_integer_constant */
extern void T76f1000(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_hexadecimal_integer_constant */
extern void T76f1054(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_octal_integer_constant */
extern void T1016f51(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_octal_integer_constant */
extern void T410f13(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_octal_integer_constant */
extern void T406f18(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_octal_integer_constant */
extern void T391f148(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_octal_integer_constant_validity */
extern void T391f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_octal_integer_constant */
extern void T80f281(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_octal_integer_constant_validity */
extern void T80f367(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_octal_integer_constant */
extern void T76f1001(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_octal_integer_constant */
extern void T76f1055(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_binary_integer_constant */
extern void T1016f52(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_binary_integer_constant */
extern void T410f14(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_binary_integer_constant */
extern void T406f19(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_binary_integer_constant */
extern void T391f149(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_binary_integer_constant_validity */
extern void T391f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_binary_integer_constant */
extern void T80f282(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_binary_integer_constant_validity */
extern void T80f368(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_binary_integer_constant */
extern void T76f1002(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_binary_integer_constant */
extern void T76f1056(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_real_constant */
extern void T1016f53(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_real_constant */
extern void T410f15(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_real_constant */
extern void T406f20(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_real_constant */
extern void T391f150(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_real_constant_validity */
extern void T391f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_real_constant_validity */
extern void T391f254(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_real_64_constant */
extern void T391f310(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_real_32_constant */
extern void T391f309(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0b_error */
extern void T282f399(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0b */
extern T0* T1032c926(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwmq0b_error */
extern void T34f399(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_real_constant */
extern void T80f283(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_real_constant_validity */
extern void T80f369(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_real_constant_validity */
extern void T80f424(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_64_constant */
extern void T80f466(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_32_constant */
extern void T80f465(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_real_constant */
extern void T76f1003(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_real_constant */
extern void T76f1057(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.is_negative */
extern T1 T1231f16(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_underscored_real_constant */
extern void T1016f54(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_real_constant */
extern void T410f16(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_real_constant */
extern void T406f21(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_real_constant */
extern void T391f151(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_real_constant_validity */
extern void T391f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_real_constant */
extern void T80f284(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_real_constant_validity */
extern void T80f370(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_real_constant */
extern void T76f1004(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_real_constant */
extern void T76f1058(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.is_negative */
extern T1 T1232f16(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_true_constant */
extern void T1016f55(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_true_constant */
extern void T410f17(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_true_constant */
extern void T406f22(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_true_constant */
extern void T391f152(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_true_constant_validity */
extern void T391f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_boolean_constant */
extern void T391f255(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_true_constant */
extern void T80f285(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_true_constant_validity */
extern void T80f371(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_boolean_constant */
extern void T80f425(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_true_constant */
extern void T76f1005(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_true_constant */
extern void T76f1059(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_false_constant */
extern void T1016f57(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_false_constant */
extern void T410f19(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_false_constant */
extern void T406f24(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_false_constant */
extern void T391f154(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_false_constant_validity */
extern void T391f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_false_constant */
extern void T80f287(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_false_constant_validity */
extern void T80f373(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_false_constant */
extern void T76f1006(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_false_constant */
extern void T76f1060(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c1_character_constant */
extern void T1016f58(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c1_character_constant */
extern void T410f20(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c1_character_constant */
extern void T406f25(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c1_character_constant */
extern void T391f155(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c1_character_constant_validity */
extern void T391f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_character_constant_validity */
extern void T391f257(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_32_constant */
extern void T391f312(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_8_constant */
extern void T391f311(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0c_error */
extern void T282f400(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0c */
extern T0* T1032c927(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwmq0c_error */
extern void T34f400(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c1_character_constant */
extern void T80f288(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c1_character_constant_validity */
extern void T80f374(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_character_constant_validity */
extern void T80f427(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_32_constant */
extern void T80f468(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_8_constant */
extern void T80f467(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c1_character_constant */
extern void T76f1007(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_character_constant */
extern void T76f1061(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_character_8 */
extern void T76f1097(GE_context* ac, T0* C, T2 a1);
/* UT_INTEGER_FORMATTER.put_decimal_natural_32 */
extern void T375f3(GE_context* ac, T0* C, T0* a1, T10 a2);
/* ET_PRECURSOR_CHECKER.process_c2_character_constant */
extern void T1016f59(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c2_character_constant */
extern void T410f21(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c2_character_constant */
extern void T406f26(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c2_character_constant */
extern void T391f156(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c2_character_constant_validity */
extern void T391f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c2_character_constant */
extern void T80f289(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c2_character_constant_validity */
extern void T80f375(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c2_character_constant */
extern void T76f1008(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function */
extern void T1016f19(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_do_function */
extern void T1015f52(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function */
extern void T391f114(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_validity */
extern void T391f124(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vevi0c_error */
extern void T282f344(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0c */
extern T0* T1032c876(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0c_error */
extern void T34f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function */
extern void T80f124(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_validity */
extern void T80f135(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function */
extern void T76f1009(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function */
extern void T76f1062(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_function */
extern void T76f1098(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_function */
extern void T1016f20(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_once_function */
extern void T1015f53(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function */
extern void T391f115(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_validity */
extern void T391f125(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_keys_validity */
extern void T391f136(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vvok2a_error */
extern void T282f349(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vvok2a */
extern T0* T1032c881(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T282f101(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vvok2a_error */
extern void T34f350(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T34f100(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_process_key */
extern T1 T1585f13(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_expected_key */
extern T1 T1585f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_STANDARD_ONCE_KEYS.string_ */
extern T0* T1585f9(GE_context* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.is_thread_key */
extern T1 T1585f12(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vvok1b_error */
extern void T282f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1b */
extern T0* T1032c880(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T282f100(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vvok1b_error */
extern void T34f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T34f99(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vvok1a_error */
extern void T282f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1a */
extern T0* T1032c879(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vvok1a_error */
extern void T34f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STANDARD_ONCE_KEYS.is_object_key */
extern T1 T1585f11(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.manifest_string */
extern T0* T935f7(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_STRING_LIST.item */
extern T0* T935f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INDEXING_TERM].wipe_out */
extern void T412f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_INDEXING_TERM].move_all_cursors_after */
extern void T412f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INDEXING_TERM].set_next_cursor */
extern void T1125f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_INDEXING_TERM].set_after */
extern void T1125f6(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vvok2b_error */
extern void T282f346(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vvok2b */
extern T0* T1032c878(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vvok2b_error */
extern void T34f347(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vvok1c_error */
extern void T282f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1c */
extern T0* T1032c877(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vvok1c_error */
extern void T34f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INDEXING_TERM].item */
extern T0* T412f7(GE_context* ac, T0* C, T6 a1);
/* ET_INDEXING_LIST.append_tagged_indexing_terms_to_list */
extern void T886f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INDEXING_TERM_LIST.append_indexing_terms_to_list */
extern void T898f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INDEXING_TERM].force_last */
extern void T412f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INDEXING_TERM].resize */
extern void T412f15(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INDEXING_TERM].new_capacity */
extern T6 T412f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INDEXING_TERM].extendible */
extern T1 T412f8(GE_context* ac, T0* C, T6 a1);
/* ET_INDEXING_LIST.string_ */
extern T0* T886f8(GE_context* ac, T0* C);
/* ET_INDEXING.tag */
extern T0* T1240f4(GE_context* ac, T0* C);
/* ET_INDEXING.indexing_clause */
extern T0* T1240f2(GE_context* ac, T0* C);
/* ET_TAGGED_INDEXING.indexing_clause */
extern T0* T1239f3(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.standard_once_keys */
extern T0* T391f49(GE_context* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.default_create */
extern T0* T1585c15(GE_context* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function */
extern void T80f125(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_validity */
extern void T80f136(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_keys_validity */
extern void T80f151(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.standard_once_keys */
extern T0* T80f62(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_once_function */
extern void T76f1010(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function */
extern void T76f1063(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.is_once_per_object */
extern T1 T1254f63(GE_context* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.has_object_key */
extern T1 T1585f4(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.has_expected_key */
extern T1 T1585f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_FUNCTION.standard_once_keys */
extern T0* T1254f46(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_deferred_function */
extern void T1016f21(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_deferred_function */
extern void T1015f54(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_function */
extern void T391f116(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_function_validity */
extern void T391f126(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_function */
extern void T80f126(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_function_validity */
extern void T80f137(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_function */
extern void T76f1011(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_function */
extern void T76f1064(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure */
extern void T1016f22(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_once_procedure */
extern void T1015f55(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure */
extern void T391f117(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_validity */
extern void T391f127(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure */
extern void T80f127(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_validity */
extern void T80f138(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_procedure */
extern void T76f1012(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure */
extern void T76f1065(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.is_once_per_object */
extern T1 T1257f58(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.standard_once_keys */
extern T0* T1257f39(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_external_procedure */
extern void T1016f23(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_external_procedure */
extern void T1015f56(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_external_feature_validity */
extern void T1015f21(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_feature_validity */
extern void T1015f22(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbu1a_error */
extern void T282f512(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbu1a */
extern T0* T1032c1032(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T282f171(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbu1a_error */
extern void T34f511(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T34f170(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.error_handler */
extern T0* T1015f9(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.set_fatal_error */
extern void T1015f48(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.unknown_builtin_reported */
extern T1 T1015f8(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_builtin_code */
extern void T1258f97(GE_context* ac, T0* C, T8 a1, T8 a2);
/* ET_EXTERNAL_FUNCTION.set_builtin_code */
extern void T259f100(GE_context* ac, T0* C, T8 a1, T8 a2);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_real_n_feature_validity */
extern void T1015f47(GE_context* ac, T0* C, T0* a1, T8 a2);
/* ET_BUILTIN_FEATURE_CHECKER.check_expected_builtin_feature_validity */
extern void T1015f50(GE_context* ac, T0* C, T0* a1, T8 a2, T0* a3);
/* ET_BUILTIN_FEATURE_CHECKER.check_signature_validity */
extern void T1015f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvkbs0a_error */
extern void T282f513(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkbs0a */
extern T0* T1032c1033(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T282f172(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs0a_error */
extern void T34f512(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T34f171(GE_context* ac, T0* C, T0* a1);
/* detachable ARRAY [ET_TYPE].count */
extern T6 T262f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].found_item */
extern T0* T1647f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].item_storage_item */
extern T0* T1647f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].found */
extern T1 T1647f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].search */
extern void T1647f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].search_position */
extern void T1647f40(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].hash_position */
extern T6 T1647f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].key_storage_item */
extern T0* T1647f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].clashes_item */
extern T6 T1647f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].slots_item */
extern T6 T1647f26(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.truncated_to_real_feature_name */
extern T0* T82f1470(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_64_feature_name */
extern T0* T82f1468(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_feature_name */
extern T0* T82f1466(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_double_feature_name */
extern T0* T82f1427(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.quotient_feature_name */
extern T0* T82f1423(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.product_feature_name */
extern T0* T82f1421(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.power_feature_name */
extern T0* T82f1419(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.plus_feature_name */
extern T0* T82f1007(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.out_feature_name */
extern T0* T82f1005(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.opposite_feature_name */
extern T0* T82f1416(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.minus_feature_name */
extern T0* T82f1414(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_positive_infinity_feature_name */
extern T0* T82f1456(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_negative_infinity_feature_name */
extern T0* T82f1454(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_nan_feature_name */
extern T0* T82f1452(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_less_feature_name */
extern T0* T82f1412(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identity_feature_name */
extern T0* T82f1406(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_64_feature_name */
extern T0* T82f1448(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_32_feature_name */
extern T0* T82f1446(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_64_feature_name */
extern T0* T82f1444(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.register_builtin_feature */
extern void T1015f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T8 a4, T0* a5);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].force_last */
extern void T1647f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].key_storage_put */
extern void T1647f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].slots_put */
extern void T1647f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].clashes_put */
extern void T1647f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].resize */
extern void T1647f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].clashes_resize */
extern void T1647f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].special_integer_ */
extern T0* T1647f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].key_storage_resize */
extern void T1647f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].item_storage_resize */
extern void T1647f48(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].aliased_resized_area */
extern T0* T1780f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].aliased_resized_area */
extern T0* T1777f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].slots_resize */
extern void T1647f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].new_modulus */
extern T6 T1647f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].new_capacity */
extern T6 T1647f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].item_storage_put */
extern void T1647f41(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].force */
extern void T1780f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].fill_with */
extern void T1777f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].extend */
extern void T1777f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].unset_found_item */
extern void T1647f39(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_32_feature_name */
extern T0* T82f1442(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].force_last */
extern void T1452f43(GE_context* ac, T0* C, T0* a1, T8 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].key_storage_put */
extern void T1452f49(GE_context* ac, T0* C, T8 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].slots_put */
extern void T1452f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].clashes_put */
extern void T1452f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].slots_item */
extern T6 T1452f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].hash_position */
extern T6 T1452f23(GE_context* ac, T0* C, T8 a1);
/* NATURAL_8.hash_code */
extern T6 T8f20(GE_context* ac, T8* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].resize */
extern void T1452f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].clashes_resize */
extern void T1452f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].special_integer_ */
extern T0* T1452f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].key_storage_resize */
extern void T1452f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].item_storage_resize */
extern void T1452f51(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].aliased_resized_area */
extern T0* T1646f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].aliased_resized_area */
extern T0* T1648f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].key_storage_item */
extern T8 T1452f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].clashes_item */
extern T6 T1452f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].slots_resize */
extern void T1452f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].new_capacity */
extern T6 T1452f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].item_storage_put */
extern void T1452f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].force */
extern void T1646f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].fill_with */
extern void T1648f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].extend */
extern void T1648f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].search_position */
extern void T1452f44(GE_context* ac, T0* C, T8 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].set_key_equality_tester */
extern void T1647f35(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.feature_name_tester */
extern T0* T1015f10(GE_context* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_map */
extern T0* T1647c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_with_equality_testers */
extern void T1647f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_sparse_container */
extern void T1647f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].set_internal_cursor */
extern void T1647f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].new_cursor */
extern T0* T1647f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make */
extern T0* T1781c4(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_slots */
extern void T1647f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_clashes */
extern void T1647f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_key_storage */
extern void T1647f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_item_storage */
extern void T1647f51(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].make */
extern T0* T1780f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].make_empty */
extern T0* T1777c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].default_create */
extern T0* T1780c3(GE_context* ac);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].found_item */
extern T0* T1452f20(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].item_storage_item */
extern T0* T1452f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].found */
extern T1 T1452f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].search */
extern void T1452f42(GE_context* ac, T0* C, T8 a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_real_n_ref_feature_validity */
extern void T1015f46(GE_context* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_TOKEN_CONSTANTS.set_item_feature_name */
extern T0* T82f973(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.positive_infinity_feature_name */
extern T0* T82f1439(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.negative_infinity_feature_name */
extern T0* T82f1437(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.nan_feature_name */
extern T0* T82f1435(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_ref_class_name */
extern T0* T82f906(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_ref_class_name */
extern T0* T82f901(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_ref_class_name */
extern T0* T82f898(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_ref_class_name */
extern T0* T82f895(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_ref_class_name */
extern T0* T82f890(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_integer_n_feature_validity */
extern void T1015f45(GE_context* ac, T0* C, T0* a1, T8 a2);
/* ET_TOKEN_CONSTANTS.to_real_64_feature_name */
extern T0* T82f1433(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_real_32_feature_name */
extern T0* T82f1431(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_real_feature_name */
extern T0* T82f1429(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_character_32_feature_name */
extern T0* T82f981(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_character_8_feature_name */
extern T0* T82f979(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_remainder_feature_name */
extern T0* T82f1410(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_quotient_feature_name */
extern T0* T82f1408(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_xor_feature_name */
extern T0* T82f1404(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_right_feature_name */
extern T0* T82f1402(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_left_feature_name */
extern T0* T82f1400(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_or_feature_name */
extern T0* T82f1398(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_not_feature_name */
extern T0* T82f1396(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_and_feature_name */
extern T0* T82f1394(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_64_feature_name */
extern T0* T82f1392(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_32_feature_name */
extern T0* T82f1390(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_16_feature_name */
extern T0* T82f1388(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_8_feature_name */
extern T0* T82f1386(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_64_feature_name */
extern T0* T82f1384(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_32_feature_name */
extern T0* T82f1382(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_16_feature_name */
extern T0* T82f1380(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_8_feature_name */
extern T0* T82f1378(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_integer_n_ref_feature_validity */
extern void T1015f44(GE_context* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_TOKEN_CONSTANTS.integer_8_ref_class_name */
extern T0* T82f887(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_tuple_feature_validity */
extern void T1015f43(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_object_comparison_feature_name */
extern T0* T82f1375(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_reference_feature_name */
extern T0* T82f94(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_real_64_feature_name */
extern T0* T82f1372(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_real_32_feature_name */
extern T0* T82f1370(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_pointer_feature_name */
extern T0* T82f1368(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_64_feature_name */
extern T0* T82f1366(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_32_feature_name */
extern T0* T82f1364(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_16_feature_name */
extern T0* T82f1362(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_8_feature_name */
extern T0* T82f1360(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_64_feature_name */
extern T0* T82f1358(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_32_feature_name */
extern T0* T82f1356(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_16_feature_name */
extern T0* T82f1354(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_8_feature_name */
extern T0* T82f1352(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_character_32_feature_name */
extern T0* T82f1350(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_character_8_feature_name */
extern T0* T82f1348(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_boolean_feature_name */
extern T0* T82f1346(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_item_feature_name */
extern T0* T82f96(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_item_feature_name */
extern T0* T82f1343(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_item_feature_name */
extern T0* T82f1341(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.object_comparison_feature_name */
extern T0* T82f1339(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_item_feature_name */
extern T0* T82f1337(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_item_feature_name */
extern T0* T82f1335(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_item_feature_name */
extern T0* T82f1333(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_item_feature_name */
extern T0* T82f1331(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.item_code_feature_name */
extern T0* T82f1329(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_item_feature_name */
extern T0* T82f1327(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_item_feature_name */
extern T0* T82f1325(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_item_feature_name */
extern T0* T82f1323(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_item_feature_name */
extern T0* T82f1321(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_item_feature_name */
extern T0* T82f1318(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_item_feature_name */
extern T0* T82f1316(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_item_feature_name */
extern T0* T82f1314(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_function_feature_validity */
extern void T1015f42(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.detachable_separate_formal_parameter_type */
extern T0* T1015f11(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.fast_item_feature_name */
extern T0* T82f1312(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_procedure_feature_validity */
extern void T1015f41(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.fast_call_feature_name */
extern T0* T82f1310(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_platform_feature_validity */
extern void T1015f40(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_bytes_feature_name */
extern T0* T82f1308(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_bytes_feature_name */
extern T0* T82f1306(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_bytes_feature_name */
extern T0* T82f1304(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_windows_feature_name */
extern T0* T82f1302(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_vxworks_feature_name */
extern T0* T82f1300(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_vms_feature_name */
extern T0* T82f1298(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_unix_feature_name */
extern T0* T82f1296(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_thread_capable_feature_name */
extern T0* T82f1294(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_scoop_capable_feature_name */
extern T0* T82f1292(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_mac_feature_name */
extern T0* T82f1290(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_dotnet_feature_name */
extern T0* T82f1288(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_64_bits_feature_name */
extern T0* T82f1286(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_bytes_feature_name */
extern T0* T82f1284(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.double_bytes_feature_name */
extern T0* T82f1282(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_bytes_feature_name */
extern T0* T82f1280(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_bytes_feature_name */
extern T0* T82f1278(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.platform_class_name */
extern T0* T82f886(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_runtime_feature_validity */
extern void T1015f39(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.unmark_object_feature_name */
extern T0* T82f1275(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unlock_marking_feature_name */
extern T0* T82f1273(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_reference_field_at_feature_name */
extern T0* T82f1272(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_reference_field_feature_name */
extern T0* T82f1271(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_64_field_at_feature_name */
extern T0* T82f1269(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_64_field_feature_name */
extern T0* T82f1267(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_32_field_at_feature_name */
extern T0* T82f1265(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_32_field_feature_name */
extern T0* T82f1263(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_pre_ecma_mapping_feature_name */
extern T0* T82f1261(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_pointer_field_at_feature_name */
extern T0* T82f1259(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_pointer_field_feature_name */
extern T0* T82f1257(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_64_field_at_feature_name */
extern T0* T82f1255(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_64_field_feature_name */
extern T0* T82f1253(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_32_field_at_feature_name */
extern T0* T82f1251(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_32_field_feature_name */
extern T0* T82f1249(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_16_field_at_feature_name */
extern T0* T82f1247(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_16_field_feature_name */
extern T0* T82f1245(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_8_field_at_feature_name */
extern T0* T82f1243(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_8_field_feature_name */
extern T0* T82f1241(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_64_field_at_feature_name */
extern T0* T82f1239(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_64_field_feature_name */
extern T0* T82f1237(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_32_field_at_feature_name */
extern T0* T82f1235(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_32_field_feature_name */
extern T0* T82f1233(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_16_field_at_feature_name */
extern T0* T82f1231(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_16_field_feature_name */
extern T0* T82f1229(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_8_field_at_feature_name */
extern T0* T82f1227(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_8_field_feature_name */
extern T0* T82f1225(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_32_field_at_feature_name */
extern T0* T82f1223(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_32_field_feature_name */
extern T0* T82f1221(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_8_field_at_feature_name */
extern T0* T82f1219(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_8_field_feature_name */
extern T0* T82f1217(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_boolean_field_at_feature_name */
extern T0* T82f1215(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_boolean_field_feature_name */
extern T0* T82f1213(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.mark_object_feature_name */
extern T0* T82f1211(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.lock_marking_feature_name */
extern T0* T82f1209(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_id_from_name_feature_name */
extern T0* T82f1207(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_conforms_to_feature_name */
extern T0* T82f1205(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.storable_version_of_type_feature_name */
extern T0* T82f1203(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_field_at_offset_feature_name */
extern T0* T82f1202(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_field_at_feature_name */
extern T0* T82f1201(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_field_feature_name */
extern T0* T82f1200(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_field_at_feature_name */
extern T0* T82f1198(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_field_feature_name */
extern T0* T82f1196(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_field_at_feature_name */
extern T0* T82f1194(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_field_feature_name */
extern T0* T82f1192(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raw_reference_field_at_offset_feature_name */
extern T0* T82f1190(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raw_reference_field_at_feature_name */
extern T0* T82f1188(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pre_ecma_mapping_status_feature_name */
extern T0* T82f1186(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_field_at_feature_name */
extern T0* T82f1184(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_field_feature_name */
extern T0* T82f1182(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.persistent_field_count_of_type_feature_name */
extern T0* T82f1180(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.once_objects_feature_name */
extern T0* T82f1178(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.object_size_feature_name */
extern T0* T82f1176(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_type_instance_of_feature_name */
extern T0* T82f1175(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_tuple_instance_of_feature_name */
extern T0* T82f1174(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_special_of_reference_instance_of_feature_name */
extern T0* T82f1173(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_instance_of_feature_name */
extern T0* T82f1172(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_field_at_feature_name */
extern T0* T82f1170(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_field_feature_name */
extern T0* T82f1168(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_field_at_feature_name */
extern T0* T82f1166(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_field_feature_name */
extern T0* T82f1164(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_field_at_feature_name */
extern T0* T82f1162(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_field_feature_name */
extern T0* T82f1160(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_field_at_feature_name */
extern T0* T82f1158(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_field_feature_name */
extern T0* T82f1156(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_tuple_type_feature_name */
extern T0* T82f1154(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_tuple_feature_name */
extern T0* T82f1152(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_type_feature_name */
extern T0* T82f1150(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_or_basic_type_feature_name */
extern T0* T82f1148(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_feature_name */
extern T0* T82f1146(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_expanded_feature_name */
extern T0* T82f1144(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_copy_semantics_item_feature_name */
extern T0* T82f1142(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_feature_name */
extern T0* T82f1140(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_object_marked_feature_name */
extern T0* T82f1138(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_field_transient_of_type_feature_name */
extern T0* T82f1136(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_field_expanded_of_type_feature_name */
extern T0* T82f1134(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_expanded_feature_name */
extern T0* T82f951(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_copy_semantics_field_feature_name */
extern T0* T82f1131(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_attached_type_feature_name */
extern T0* T82f1129(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_field_at_feature_name */
extern T0* T82f1127(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_field_feature_name */
extern T0* T82f1125(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_field_at_feature_name */
extern T0* T82f1123(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_field_feature_name */
extern T0* T82f1121(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_field_at_feature_name */
extern T0* T82f1119(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_field_feature_name */
extern T0* T82f1117(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_field_at_feature_name */
extern T0* T82f1115(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_field_feature_name */
extern T0* T82f1113(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.in_assertion_feature_name */
extern T0* T82f1111(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_count_feature_name */
extern T0* T82f943(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generator_of_type_feature_name */
extern T0* T82f1108(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generating_type_of_type_feature_name */
extern T0* T82f1106(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_type_of_type_feature_name */
extern T0* T82f1104(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_static_type_of_type_feature_name */
extern T0* T82f1102(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_offset_of_type_feature_name */
extern T0* T82f1100(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_name_of_type_feature_name */
extern T0* T82f1098(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_count_of_type_feature_name */
extern T0* T82f1096(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_gen_param_id_feature_name */
extern T0* T82f1094(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.dynamic_type_at_offset_feature_name */
extern T0* T82f1092(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.dynamic_type_feature_name */
extern T0* T82f1090(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.detachable_type_feature_name */
extern T0* T82f1088(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.compiler_version_feature_name */
extern T0* T82f1086(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.check_assert_feature_name */
extern T0* T82f1084(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_field_at_feature_name */
extern T0* T82f1082(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_field_feature_name */
extern T0* T82f1080(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_field_at_feature_name */
extern T0* T82f1078(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_field_feature_name */
extern T0* T82f1076(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_field_at_feature_name */
extern T0* T82f1074(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_field_feature_name */
extern T0* T82f1072(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.attached_type_feature_name */
extern T0* T82f1070(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ise_runtime_class_name */
extern T0* T82f885(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_identified_routines_feature_validity */
extern void T1015f38(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.eif_object_id_free_feature_name */
extern T0* T82f1068(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_object_id_feature_name */
extern T0* T82f1067(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_id_object_feature_name */
extern T0* T82f1066(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identified_routines_class_name */
extern T0* T82f884(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_exception_manager_feature_validity */
extern void T1015f37(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.developer_raise_feature_name */
extern T0* T82f1064(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_factory_feature_validity */
extern void T1015f36(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.exception_manager_feature_name */
extern T0* T82f1061(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_manager_factory_class_name */
extern T0* T82f883(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_feature_validity */
extern void T1015f35(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_is_ignored_feature_name */
extern T0* T82f1058(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raise_feature_name */
extern T0* T82f1056(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ignore_feature_name */
extern T0* T82f1054(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.catch_feature_name */
extern T0* T82f1052(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_of_code_feature_name */
extern T0* T82f1050(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_raisable_feature_name */
extern T0* T82f1047(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_ignored_feature_name */
extern T0* T82f1045(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_ignorable_feature_name */
extern T0* T82f1043(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_caught_feature_name */
extern T0* T82f1041(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_from_code_feature_name */
extern T0* T82f1039(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_memory_feature_validity */
extern void T1015f34(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.free_feature_name */
extern T0* T82f1036(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.find_referers_feature_name */
extern T0* T82f1034(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.memory_class_name */
extern T0* T82f882(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_com_failure_feature_validity */
extern void T1015f33(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.cwin_local_free_feature_name */
extern T0* T82f1031(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.cwin_error_text_feature_name */
extern T0* T82f1029(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_size_feature_name */
extern T0* T82f1027(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_facility_feature_name */
extern T0* T82f1025(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_code_feature_name */
extern T0* T82f1023(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_feature_name */
extern T0* T82f1021(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.c_strlen_feature_name */
extern T0* T82f1019(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.com_failure_class_name */
extern T0* T82f881(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_arguments_32_feature_validity */
extern void T1015f32(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.i_th_argument_string_feature_name */
extern T0* T82f1016(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.i_th_argument_pointer_feature_name */
extern T0* T82f1014(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.argument_count_feature_name */
extern T0* T82f1012(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.arguments_32_class_name */
extern T0* T82f880(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_feature_validity */
extern void T1015f31(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.to_integer_32_feature_name */
extern T0* T82f1009(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_default_pointer_feature_name */
extern T0* T82f1003(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.hash_code_feature_name */
extern T0* T82f1001(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_ref_feature_validity */
extern void T1015f30(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.pointer_ref_class_name */
extern T0* T82f879(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_feature_validity */
extern void T1015f29(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.negated_feature_name */
extern T0* T82f997(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implication_feature_name */
extern T0* T82f995(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_semistrict_feature_name */
extern T0* T82f993(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_exclusive_feature_name */
extern T0* T82f991(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_feature_name */
extern T0* T82f989(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conjuncted_semistrict_feature_name */
extern T0* T82f987(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conjuncted_feature_name */
extern T0* T82f985(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_ref_feature_validity */
extern void T1015f28(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.boolean_ref_class_name */
extern T0* T82f878(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_character_n_feature_validity */
extern void T1015f27(GE_context* ac, T0* C, T0* a1, T8 a2);
/* ET_TOKEN_CONSTANTS.natural_32_code_feature_name */
extern T0* T82f977(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.code_feature_name */
extern T0* T82f975(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_character_n_ref_feature_validity */
extern void T1015f26(GE_context* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_BUILTIN_FEATURE_CHECKER.current_universe */
extern T0* T1015f7(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_special_feature_validity */
extern void T1015f25(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_count_feature_name */
extern T0* T82f971(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_feature_name */
extern T0* T82f93(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.make_empty_feature_name */
extern T0* T82f968(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.extend_feature_name */
extern T0* T82f97(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.element_size_feature_name */
extern T0* T82f964(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.base_address_feature_name */
extern T0* T82f960(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.aliased_resized_area_feature_name */
extern T0* T82f958(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_type_feature_validity */
extern void T1015f24(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.type_id_feature_name */
extern T0* T82f955(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.runtime_name_feature_name */
extern T0* T82f953(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_deferred_feature_name */
extern T0* T82f949(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_attached_feature_name */
extern T0* T82f947(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.has_default_feature_name */
extern T0* T82f945(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_type_feature_name */
extern T0* T82f941(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_feature_name */
extern T0* T82f939(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_any_feature_validity */
extern void T1015f23(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.standard_copy_feature_name */
extern T0* T82f936(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.twin_feature_name */
extern T0* T82f933(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.tagged_out_feature_name */
extern T0* T82f931(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.standard_twin_feature_name */
extern T0* T82f929(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.standard_is_equal_feature_name */
extern T0* T82f927(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.same_type_feature_name */
extern T0* T82f925(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_deep_equal_feature_name */
extern T0* T82f922(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generator_feature_name */
extern T0* T82f920(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generating_type_feature_name */
extern T0* T82f918(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.deep_twin_feature_name */
extern T0* T82f916(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conforms_to_feature_name */
extern T0* T82f914(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.string_ */
extern T0* T1015f6(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.process_external_procedure */
extern void T391f118(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_validity */
extern void T391f128(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure */
extern void T80f128(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T80f139(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_procedure_validity */
extern void T80f152(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_reference */
extern void T80f173(GE_context* ac, T0* C, T0* a1);
extern T1 T80f173ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_procedure */
extern void T80f172(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_set_is_ignored */
extern void T80f171(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.argument_type_set */
extern T0* T80f65(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_raise */
extern void T80f170(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_ignore */
extern void T80f169(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_catch */
extern void T80f168(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_builtin_unknown */
extern T1 T1258f59(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T80f139p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_procedure */
extern void T76f1013(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure */
extern void T76f1066(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_routine */
extern void T76f1099(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3, T1 a4);
/* ET_C_GENERATOR.flush_to_cpp_file */
extern void T76f1117(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_external_dllwin_body */
extern void T76f1116(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.print_external_cpp_body */
extern void T76f1115(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* DS_LINKED_LIST [STRING_8].item */
extern T0* T146f15(GE_context* ac, T0* C, T6 a1);
/* ST_SPLITTER.make_with_separators */
extern T0* T56c11(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.print_external_c_struct_body */
extern void T76f1114(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_external_c_body */
extern void T76f1113(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T1 a7);
/* ET_C_GENERATOR.print_external_c_prototype */
extern void T76f1112(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_C_GENERATOR.print_external_builtin_body */
extern void T76f1111(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_body */
extern void T76f1140(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_tuple_procedure_body */
extern void T76f1185(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_reference_body */
extern void T76f1244(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1244ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_64_body */
extern void T76f1243(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_basic_expanded_item_body */
extern void T76f1246(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1246ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_32_body */
extern void T76f1242(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_pointer_body */
extern void T76f1241(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_64_body */
extern void T76f1240(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_32_body */
extern void T76f1239(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_16_body */
extern void T76f1238(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_8_body */
extern void T76f1237(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_64_body */
extern void T76f1236(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_32_body */
extern void T76f1235(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_16_body */
extern void T76f1234(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_8_body */
extern void T76f1233(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_32_body */
extern void T76f1232(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_8_body */
extern void T76f1231(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_boolean_body */
extern void T76f1230(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_procedure_body */
extern void T76f1184(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_set_count_body */
extern void T76f1229(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1229ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_special_extend_body */
extern void T76f1228(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1228ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_external_builtin_real_n_ref_procedure_body */
extern void T76f1183(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_procedure_body */
extern void T76f1182(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_ref_procedure_body */
extern void T76f1181(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_memory_procedure_body */
extern void T76f1180(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_runtime_procedure_body */
extern void T76f1179(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pre_ecma_mapping_body */
extern void T76f1227(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_exception_manager_procedure_body */
extern void T76f1178(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_ref_procedure_body */
extern void T76f1177(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_routines_procedure_body */
extern void T76f1176(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_procedure_body */
extern void T76f1175(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_set_is_ignored_body */
extern void T76f1226(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_raise_body */
extern void T76f1225(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_ignore_body */
extern void T76f1224(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_catch_body */
extern void T76f1223(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_com_failure_procedure_body */
extern void T76f1174(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_ref_procedure_body */
extern void T76f1173(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_ref_procedure_body */
extern void T76f1172(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_procedure_body */
extern void T76f1171(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_body */
extern void T76f1139(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_type_function_body */
extern void T76f1170(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_type_body */
extern void T76f1222(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_semicolon_newline */
extern void T76f1188(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_indentation_assign_to_result */
extern void T76f1187(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_external_builtin_tuple_function_body */
extern void T76f1169(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern void T76f1221(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern T0* T76f1221ac1(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T76f1221ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_real_64_item_body */
extern void T76f1220(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_basic_expanded_item_body */
extern void T76f1245(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1245ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_real_32_item_body */
extern void T76f1219(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_pointer_item_body */
extern void T76f1218(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_64_item_body */
extern void T76f1217(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_32_item_body */
extern void T76f1216(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_16_item_body */
extern void T76f1215(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_8_item_body */
extern void T76f1214(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_item_code_body */
extern void T76f1213(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1213ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_integer_64_item_body */
extern void T76f1212(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_32_item_body */
extern void T76f1211(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_16_item_body */
extern void T76f1210(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_8_item_body */
extern void T76f1209(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_32_item_body */
extern void T76f1208(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_8_item_body */
extern void T76f1207(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_boolean_item_body */
extern void T76f1206(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_function_body */
extern void T76f1168(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_aliased_resized_area_body */
extern void T76f1205(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1205ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_external_builtin_real_n_ref_function_body */
extern void T76f1167(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_real_n_function_body */
extern void T76f1166(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_real_n_out_body */
extern void T76f1204(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_ref_function_body */
extern void T76f1165(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_function_body */
extern void T76f1164(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_out_body */
extern void T76f1203(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_platform_function_body */
extern void T76f1163(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_memory_function_body */
extern void T76f1162(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_runtime_function_body */
extern void T76f1161(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pre_ecma_mapping_status_body */
extern void T76f1202(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_in_assertion_body */
extern void T76f1201(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_ref_function_body */
extern void T76f1160(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_function_body */
extern void T76f1159(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_routines_function_body */
extern void T76f1158(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_function_body */
extern void T76f1157(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_factory_function_body */
extern void T76f1156(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_factory_exception_manager_body */
extern void T76f1200(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_function_body */
extern void T76f1155(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_type_of_code_body */
extern void T76f1199(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_last_exception_body */
extern void T76f1198(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_raisable_body */
extern void T76f1197(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_ignored_body */
extern void T76f1196(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_ignorable_body */
extern void T76f1195(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_caught_body */
extern void T76f1194(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_exception_from_code_body */
extern void T76f1193(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_com_failure_function_body */
extern void T76f1154(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_ref_function_body */
extern void T76f1153(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_function_body */
extern void T76f1152(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_ref_function_body */
extern void T76f1151(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_function_body */
extern void T76f1150(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_arguments_32_function_body */
extern void T76f1149(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_function_body */
extern void T76f1148(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body */
extern void T76f1192(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1192ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_tagged_out_body */
extern void T76f1191(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1191ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body */
extern void T76f1190(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1190ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_is_deep_equal_body */
extern void T76f1189(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_conforms_to_body */
extern void T76f1186(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_function */
extern T1 T1258f58(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_external_c_inline_body */
extern void T76f1110(GE_context* ac, T0* C, T0* a1);
/* KL_CHARACTER_ROUTINES.as_lower */
extern T2 T1661f1(GE_context* ac, T0* C, T2 a1);
/* ET_C_GENERATOR.character_ */
extern T0* T76f460(GE_context* ac, T0* C);
/* KL_CHARACTER_ROUTINES.default_create */
extern T0* T1661c2(GE_context* ac);
/* ET_C_GENERATOR.print_external_c_includes */
extern void T76f1109(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_header_filename */
extern void T76f1138(GE_context* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring_count */
extern T6 T322f300(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_feature_info_message_call */
extern void T76f1107(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inline_routine_name */
extern void T76f1105(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T76f1105ot1(T0* a1, T0** a2);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_feature */
extern void T1352f7(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_feature */
extern void T1351f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_feature */
extern void T1350f6(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_feature */
extern void T1349f7(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_feature */
extern void T1021f10(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1020f15(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_like_feature_validity */
extern void T1020f22(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat2b_error */
extern void T282f462(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat2b */
extern T0* T1032c989(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat2b_error */
extern void T34f462(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1020f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1020f24(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.index */
extern T6 T1268f30(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.process_like_feature */
extern void T1019f16(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_feature */
extern void T1014f17(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_feature */
extern void T1013f17(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_feature */
extern void T1012f23(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1011f15(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_like_feature_to_sorter */
extern void T1011f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].force_relation */
extern void T1448f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].put_indexed_relation */
extern void T1448f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].force */
extern void T1448f16(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].put */
extern void T1448f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].put_new */
extern void T1640f36(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_put */
extern void T1640f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_put */
extern void T1640f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_put */
extern void T1640f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_put */
extern void T1640f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_item */
extern T6 T1640f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].hash_position */
extern T6 T1640f32(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.hash_code */
extern T6 T1268f74(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_item */
extern T6 T1640f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].resize */
extern void T1640f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_resize */
extern void T1640f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].special_integer_ */
extern T0* T1640f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_resize */
extern void T1640f48(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T1642f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T1641f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_resize */
extern void T1640f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_item */
extern T0* T1640f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_resize */
extern void T1640f44(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].resize */
extern void T1449f15(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].capacity */
extern T6 T1448f9(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].count */
extern T6 T1448f8(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].index_of */
extern T6 T1448f7(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].found_item */
extern T6 T1640f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_item */
extern T6 T1640f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].found */
extern T1 T1640f27(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].search */
extern void T1640f58(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].search_position */
extern void T1640f59(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_feature */
extern void T1010f10(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_feature */
extern void T1009f14(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_like_feature */
extern void T1009f21(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1a_error */
extern void T282f464(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat1a */
extern T0* T1032c991(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T282f152(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat1a_error */
extern void T34f464(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T34f151(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1b_error */
extern void T282f463(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1b */
extern T0* T1032c990(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat1b_error */
extern void T34f463(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER_TYPE_RESOLVER.error_handler */
extern T0* T1009f6(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.set_fatal_error */
extern void T1009f23(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.resolve_like_argument */
extern void T1268f84(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolve_like_feature */
extern void T1268f83(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_feature */
extern void T998f21(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_feature */
extern void T997f16(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_feature */
extern void T396f28(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_feature_validity */
extern void T396f35(GE_context* ac, T0* C, T0* a1);
extern T1 T396f35ot1(T0* a1, T0** a2);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_braced_type */
extern void T1352f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_qualified_like_identifier_validity */
extern void T1352f13(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_braced_type */
extern void T1351f11(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_qualified_like_identifier_validity */
extern void T1351f15(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.set_fatal_error */
extern void T1351f17(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.has_flattening_error */
extern T1 T485f35(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.features_flattened */
extern T1 T485f34(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_braced_type */
extern void T1350f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_qualified_like_identifier_validity */
extern void T1350f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_braced_type */
extern void T1349f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_qualified_like_identifier_validity */
extern void T1349f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_braced_type */
extern void T1021f11(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_qualified_like_identifier */
extern void T1021f18(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1020f16(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T1020f23(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1c_error */
extern void T282f465(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1c */
extern T0* T1032c992(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat1c_error */
extern void T34f465(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.resolve_identifier_type */
extern void T1270f78(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolve_identifier_type */
extern void T1269f82(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_TYPE.seed */
extern T6 T1270f34(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.seed */
extern T6 T1269f33(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.process_qualified_like_braced_type */
extern void T1019f17(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_braced_type */
extern void T1014f18(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_qualified_like_braced_type */
extern void T1013f18(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_qualified_like_braced_type */
extern void T1012f24(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_qualified_like_identifier_tuple_actual_parameters_unfolded */
extern void T1012f31(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_qualified_like_identifier_vtct_validity */
extern void T1012f30(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1011f16(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_qualified_like_identifier_to_sorter */
extern void T1011f23(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_braced_type */
extern void T1010f11(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_qualified_like_identifier */
extern void T1010f18(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_braced_type */
extern void T1009f15(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_qualified_like_identifier */
extern void T1009f22(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_braced_type */
extern void T998f22(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_qualified_like_braced_type */
extern void T997f17(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T396f29(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T396f36(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.report_qualified_anchored_type_supplier */
extern void T396f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.report_qualified_anchored_type_supplier */
extern void T1027f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_type */
extern void T1352f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_type */
extern void T1351f12(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_type */
extern void T1350f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_type */
extern void T1349f9(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_type */
extern void T1021f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1020f17(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_qualified_like_type */
extern void T1019f18(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_type */
extern void T1014f19(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_qualified_like_type */
extern void T1013f19(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_qualified_like_type */
extern void T1012f25(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1011f17(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_type */
extern void T1010f12(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_type */
extern void T1009f16(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_type */
extern void T998f23(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_qualified_like_type */
extern void T997f18(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_qualified_like_type */
extern void T396f30(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_expression */
extern void T1016f63(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_precursor_validity */
extern void T1016f97(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3c_error */
extern void T282f517(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3c */
extern T0* T1032c1037(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.tokens */
extern T0* T1032f738(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T282f113(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr3c_error */
extern void T34f517(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T34f112(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3b_error */
extern void T282f516(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3b */
extern T0* T1032c1036(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.position */
extern T0* T1279f8(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdpr3b_error */
extern void T34f516(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_parent_type */
extern void T1282f29(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_type */
extern void T1279f17(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_seed */
extern void T679f22(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3a_error */
extern void T282f515(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vdpr3a */
extern T0* T1032c1035(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vdpr3a_error */
extern void T34f515(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vdpr2a_error */
extern void T282f514(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr2a */
extern T0* T1032c1034(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T282f173(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr2a_error */
extern void T34f514(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T34f172(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.error_handler */
extern T0* T1016f9(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.set_fatal_error */
extern void T1016f101(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.current_universe */
extern T0* T1016f8(GE_context* ac, T0* C);
/* ET_IDENTIFIER.class_name */
extern T0* T183f102(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_precursor_expression */
extern void T410f26(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_precursor_expression */
extern void T406f31(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_expression */
extern void T391f161(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_expression_validity */
extern void T391f214(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T391f214ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_precursor_query_expression_validity */
extern void T391f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_SET [ET_QUERY].force_last */
extern void T1026f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].slots_put */
extern void T1026f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].clashes_put */
extern void T1026f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].slots_item */
extern T6 T1026f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].hash_position */
extern T6 T1026f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].resize */
extern void T1026f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].clashes_resize */
extern void T1026f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].special_integer_ */
extern T0* T1026f32(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].key_storage_resize */
extern void T1026f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_resize */
extern void T1026f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].key_storage_item */
extern T0* T1026f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].slots_resize */
extern void T1026f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].new_capacity */
extern T6 T1026f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_put */
extern void T1026f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].search_position */
extern void T1026f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].key_equality_tester */
extern T0* T1026f30(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_precursor_expression */
extern void T391f321(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_precursor_parenthesis_call_validity */
extern void T391f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T391f265ot1(T0* a1, T0** a2);
extern T1 T391f265ot2(T0* a1, T0** a2);
/* ET_PRECURSOR_INSTRUCTION.set_parenthesis_call */
extern void T1279f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.set_parenthesis_call */
extern void T1282f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.ancestor */
extern T0* T83f194(GE_context* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.base_type */
extern T0* T420f4(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_generic */
extern T1 T81f15(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdpr3d_error */
extern void T282f374(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3d */
extern T0* T1032c901(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr3d_error */
extern void T34f374(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3e_error */
extern void T282f373(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3e */
extern T0* T1032c900(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3e_error */
extern void T34f373(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr1b_error */
extern void T282f372(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1b */
extern T0* T1032c899(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T282f112(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr1b_error */
extern void T34f372(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T34f111(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_expression */
extern void T80f294(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_expression_validity */
extern void T80f380(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_query_expression_validity */
extern void T80f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_expression */
extern void T80f415(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.dynamic_precursor */
extern T0* T328f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FEATURE.dynamic_precursor */
extern T0* T247f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR_LIST.force_last */
extern void T329f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].force */
extern void T1670f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].fill_with */
extern void T1669f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].extend */
extern void T1669f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.fixed_array */
extern T0* T329f4(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].default_create */
extern T0* T1670c3(GE_context* ac);
/* ET_DYNAMIC_PRECURSOR_LIST.resize */
extern void T329f10(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T1670f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T1669f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.new_capacity */
extern T6 T329f6(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.capacity */
extern T6 T329f5(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.put_last */
extern void T329f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.make_with_capacity */
extern T0* T329c7(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].make */
extern T0* T1670f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].make_empty */
extern T0* T1669c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_PRECURSOR.make */
extern T0* T328c33(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PRECURSOR.make_feature */
extern void T328f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T328f42ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PRECURSOR.tokens */
extern T0* T328f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.empty_dynamic_type_sets */
extern T0* T328f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_parenthesis_call_validity */
extern void T80f239(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T80f239ot1(T0* a1, T0** a2);
extern T1 T80f239ot2(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_precursor_expression */
extern void T76f1014(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_expression */
extern void T76f1067(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_feature_address */
extern void T1016f85(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_feature_address */
extern void T410f49(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_feature_address */
extern void T406f54(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_feature_address */
extern void T391f184(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_feature_address_validity */
extern void T391f237(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar4a_error */
extern void T282f390(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar4a */
extern T0* T1032c917(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T282f123(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar4a_error */
extern void T34f390(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T34f122(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_function_address */
extern void T391f295(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_attribute_address */
extern void T391f294(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_address */
extern void T391f293(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_pointer_expression */
extern void T391f268(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_typed_pointer_expression */
extern void T391f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_feature_address */
extern void T80f317(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_address_validity */
extern void T80f403(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_function_address */
extern void T80f459(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.set_address */
extern void T328f43(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_address */
extern void T247f41(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_address */
extern void T80f458(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_address */
extern void T80f457(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_pointer_expression */
extern void T80f434(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_typed_pointer_expression */
extern void T80f433(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_feature_address */
extern void T76f1015(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_address */
extern void T76f1068(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1068ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_FEATURE_LIST.is_empty */
extern T1 T327f9(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_current_address */
extern void T1016f64(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_current_address */
extern void T410f27(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_current_address */
extern void T406f32(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current_address */
extern void T391f162(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_address_validity */
extern void T391f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current_address */
extern void T80f295(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_address_validity */
extern void T80f381(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_current_address */
extern void T76f1016(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_current_address */
extern void T76f1069(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1069ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_result_address */
extern void T1016f65(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_result_address */
extern void T410f28(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_result_address */
extern void T406f33(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result_address */
extern void T391f163(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_address_validity */
extern void T391f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result_address */
extern void T80f296(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_address_validity */
extern void T80f382(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_result_address */
extern void T76f1017(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_result_address */
extern void T76f1070(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_expression_address */
extern void T1016f66(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_expression_address */
extern void T410f29(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_expression_address */
extern void T406f34(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_expression_address */
extern void T391f164(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expression_address_validity */
extern void T391f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_expression_address */
extern void T80f297(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_address_validity */
extern void T80f383(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_expression_address */
extern void T76f1018(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_expression_address */
extern void T76f1071(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_expression */
extern void T1016f67(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_infix_expression */
extern void T410f30(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_expression */
extern void T406f35(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_expression */
extern void T391f165(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_expression_validity */
extern void T391f218(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T391f218ot1(T0* a1, T0** a2);
extern T1 T391f218ot2(T0* a1, T0** a2);
extern T1 T391f218ot3(T0* a1, T0** a2);
/* ET_INFIX_CAST_EXPRESSION.make */
extern T0* T1681c16(GE_context* ac, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.same_named_context */
extern T1 T403f41(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_context_with_type_marks */
extern T1 T403f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE.is_subset */
extern T1 T409f9(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].go_after */
extern void T176f79(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_go_after */
extern void T176f80(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.set_right */
extern void T1287f28(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.set_left */
extern void T1287f27(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.set_boolean_operator */
extern void T1287f26(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_expression */
extern void T80f298(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_expression_validity */
extern void T80f384(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f384ot1(T0* a1, T0** a2);
extern T1 T80f384ot2(T0* a1, T0** a2);
extern T1 T80f384ot3(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_infix_expression */
extern void T76f1019(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_expression */
extern void T76f1072(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_type */
extern void T1016f70(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_type */
extern void T410f33(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_type */
extern void T406f38(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_type */
extern void T391f168(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_type_validity */
extern void T391f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_type */
extern void T391f273(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_type */
extern void T80f301(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_type_validity */
extern void T80f387(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_type */
extern void T80f437(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_manifest_type */
extern void T76f1020(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_type */
extern void T76f1073(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_prefix_expression */
extern void T1016f71(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_prefix_expression */
extern void T410f34(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_prefix_expression */
extern void T406f39(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_prefix_expression */
extern void T391f169(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_prefix_expression_validity */
extern void T391f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_prefix_expression */
extern void T80f302(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_prefix_expression_validity */
extern void T80f388(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_prefix_expression */
extern void T76f1021(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_prefix_expression */
extern void T76f1074(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_expression */
extern void T1016f72(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_old_expression */
extern void T410f35(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_old_expression */
extern void T406f40(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_expression */
extern void T391f170(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_old_expression_validity */
extern void T391f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vaol1a_error */
extern void T282f381(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vaol1a */
extern T0* T1032c908(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T282f118(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vaol1a_error */
extern void T34f381(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T34f117(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_expression */
extern void T80f303(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_old_expression_validity */
extern void T80f389(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_old_expression */
extern void T76f1022(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_old_expression */
extern void T76f1075(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_object_test */
extern void T1016f86(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_old_object_test */
extern void T410f50(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_old_object_test */
extern void T406f55(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_object_test */
extern void T391f185(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_object_test */
extern void T80f318(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_old_object_test */
extern void T76f1023(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_manifest_string */
extern void T1016f88(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_manifest_string */
extern void T410f52(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_manifest_string */
extern void T406f57(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_manifest_string */
extern void T391f187(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_manifest_string_validity */
extern void T391f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_manifest_string */
extern void T80f320(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_manifest_string_validity */
extern void T80f405(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_manifest_string */
extern void T76f1024(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_manifest_string */
extern void T76f1076(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].force_last */
extern void T316f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].key_storage_put */
extern void T316f66(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].force */
extern void T1071f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].fill_with */
extern void T1069f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].extend */
extern void T1069f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].slots_put */
extern void T316f65(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].clashes_put */
extern void T316f64(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].slots_item */
extern T6 T316f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].hash_position */
extern T6 T316f33(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.hash_code */
extern T6 T1294f19(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].resize */
extern void T316f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].clashes_resize */
extern void T316f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].special_integer_ */
extern T0* T316f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].key_storage_resize */
extern void T316f69(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T1071f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T1069f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].item_storage_resize */
extern void T316f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].slots_resize */
extern void T316f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].new_capacity */
extern T6 T316f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].item_storage_put */
extern void T316f62(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].search_position */
extern void T316f61(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function_inline_agent */
extern void T1016f78(GE_context* ac, T0* C, T0* a1);
extern T1 T1016f78ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T410f42(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T406f47(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function_inline_agent */
extern void T391f177(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_inline_agent_validity */
extern void T391f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_query_inline_agent_validity */
extern void T391f287(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_query_inline_agent */
extern void T391f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].last */
extern T0* T398f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].is_empty */
extern T1 T398f6(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vevi0d_error */
extern void T282f385(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0d */
extern T0* T1032c912(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0d_error */
extern void T34f385(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_inline_agent_locals_validity */
extern void T391f286(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_local_supplier */
extern void T391f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_local_supplier */
extern void T1027f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_local_variable_declaration */
extern void T391f332(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1h_error */
extern void T282f424(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1h */
extern T0* T1032c951(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T282f131(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1h_error */
extern void T34f424(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T34f130(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1f_error */
extern void T282f423(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1f */
extern T0* T1032c950(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1f_error */
extern void T34f423(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1d_error */
extern void T282f422(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1d */
extern T0* T1032c949(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1d_error */
extern void T34f422(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1c_error */
extern void T282f421(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1c */
extern T0* T1032c948(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1c_error */
extern void T34f421(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vrlv1b_error */
extern void T282f420(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv1b */
extern T0* T1032c947(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T282f133(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv1b_error */
extern void T34f420(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T34f132(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv2b_error */
extern void T282f419(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv2b */
extern T0* T1032c946(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T282f132(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv2b_error */
extern void T34f419(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T34f131(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vred0d_error */
extern void T282f418(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0d */
extern T0* T1032c945(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0d_error */
extern void T34f418(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_inline_agent_across_components_validity */
extern void T391f285(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_inline_agent_object_tests_validity */
extern void T391f284(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuot3b_error */
extern void T282f417(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot3b */
extern T0* T1032c944(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot3b_error */
extern void T34f417(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_supplier */
extern void T391f283(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_result_supplier */
extern void T1027f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_declaration */
extern void T391f282(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inline_agent_formal_arguments_validity */
extern void T391f281(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_argument_supplier */
extern void T391f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_argument_supplier */
extern void T1027f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_formal_argument_declaration */
extern void T391f330(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1g_error */
extern void T282f416(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1g */
extern T0* T1032c943(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1g_error */
extern void T34f416(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1e_error */
extern void T282f415(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1e */
extern T0* T1032c942(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1e_error */
extern void T34f415(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1b_error */
extern void T282f414(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1b */
extern T0* T1032c941(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1b_error */
extern void T34f414(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1a_error */
extern void T282f413(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1a */
extern T0* T1032c940(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1a_error */
extern void T34f413(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vrfa0b_error */
extern void T282f412(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrfa0b */
extern T0* T1032c939(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vrfa0b_error */
extern void T34f412(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vred0c_error */
extern void T282f411(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0c */
extern T0* T1032c938(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0c_error */
extern void T34f411(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACROSS_CURSOR_SCOPE.hide_across_components */
extern void T408f8(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_CURSOR_SCOPE.count */
extern T6 T408f4(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.hide_object_tests */
extern void T405f9(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function_inline_agent */
extern void T80f310(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_inline_agent_validity */
extern void T80f396(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_inline_agent_validity */
extern void T80f451(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_query_inline_agent */
extern void T80f487(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent */
extern void T80f496(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f496ot1(T0* a1, T0** a2);
extern T1 T80f496ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inline_agent_result_dynamic_types */
extern void T80f501(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_locals_validity */
extern void T80f450(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_supplier */
extern void T80f484(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_variable_declaration */
extern void T80f483(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_across_components_validity */
extern void T80f449(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_object_tests_validity */
extern void T80f448(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_supplier */
extern void T80f447(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_declaration */
extern void T80f446(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_formal_arguments_validity */
extern void T80f445(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_argument_supplier */
extern void T80f482(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_formal_argument_declaration */
extern void T80f481(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function_inline_agent */
extern void T76f1025(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent */
extern void T76f1078(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent_body_declaration */
extern void T76f1077(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine_inline_agent_body_declaration */
extern void T76f1102(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_trace_message_call */
extern void T76f1118(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_PRECURSOR_CHECKER.process_once_function_inline_agent */
extern void T1016f79(GE_context* ac, T0* C, T0* a1);
extern T1 T1016f79ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T410f43(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T406f48(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function_inline_agent */
extern void T391f178(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_inline_agent_validity */
extern void T391f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpir3a_error */
extern void T282f386(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpir3a */
extern T0* T1032c913(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T282f121(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir3a_error */
extern void T34f386(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T34f120(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_indexing */
extern T0* T1296f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function_inline_agent */
extern void T80f311(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_inline_agent_validity */
extern void T80f397(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_function_inline_agent */
extern void T76f1026(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent */
extern void T76f1080(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_once_per_object */
extern T1 T1296f22(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.standard_once_keys */
extern T0* T1296f34(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_once_function_inline_agent_body_declaration */
extern void T76f1079(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function_inline_agent */
extern void T1016f80(GE_context* ac, T0* C, T0* a1);
extern T1 T1016f80ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T410f44(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T406f49(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function_inline_agent */
extern void T391f179(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_inline_agent_validity */
extern void T391f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpir3b_error */
extern void T282f387(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpir3b */
extern T0* T1032c914(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpir3b_error */
extern void T34f387(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function_inline_agent */
extern void T80f312(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_inline_agent_validity */
extern void T80f398(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_function_inline_agent */
extern void T76f1027(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent */
extern void T76f1082(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent_body_declaration */
extern void T76f1081(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_procedure_inline_agent */
extern void T1016f81(GE_context* ac, T0* C, T0* a1);
extern T1 T1016f81ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T410f45(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T406f50(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure_inline_agent */
extern void T391f180(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_inline_agent_validity */
extern void T391f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_procedure_inline_agent_validity */
extern void T391f288(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_inline_agent */
extern void T391f337(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure_inline_agent */
extern void T80f313(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_inline_agent_validity */
extern void T80f399(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_procedure_inline_agent_validity */
extern void T80f452(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_inline_agent */
extern void T80f488(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_do_procedure_inline_agent */
extern void T76f1028(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent */
extern void T76f1084(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent_body_declaration */
extern void T76f1083(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure_inline_agent */
extern void T1016f82(GE_context* ac, T0* C, T0* a1);
extern T1 T1016f82ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T410f46(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T406f51(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure_inline_agent */
extern void T391f181(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_inline_agent_validity */
extern void T391f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_indexing */
extern T0* T1299f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure_inline_agent */
extern void T80f314(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_inline_agent_validity */
extern void T80f400(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_procedure_inline_agent */
extern void T76f1029(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent */
extern void T76f1086(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_once_per_object */
extern T1 T1299f20(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.standard_once_keys */
extern T0* T1299f33(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_once_procedure_inline_agent_body_declaration */
extern void T76f1085(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure_inline_agent */
extern void T1016f83(GE_context* ac, T0* C, T0* a1);
extern T1 T1016f83ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T410f47(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T406f52(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure_inline_agent */
extern void T391f182(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_inline_agent_validity */
extern void T391f235(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure_inline_agent */
extern void T80f315(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_inline_agent_validity */
extern void T80f401(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_procedure_inline_agent */
extern void T76f1030(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent */
extern void T76f1088(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent_body_declaration */
extern void T76f1087(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_n */
extern void T1352f16(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_n */
extern void T1351f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_n */
extern void T1350f9(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_n */
extern void T1349f16(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_n */
extern void T1021f13(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_n */
extern void T1020f18(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_n */
extern void T1019f19(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_n */
extern void T1014f22(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_n */
extern void T1013f20(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_n */
extern void T1012f26(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_n */
extern void T1011f18(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_n */
extern void T1010f13(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_n */
extern void T1009f17(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_n */
extern void T998f26(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_n */
extern void T997f19(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_n */
extern void T396f31(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter_type */
extern void T1352f10(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter_type */
extern void T1351f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter_type */
extern void T1350f14(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter_type */
extern void T1349f10(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter_type */
extern void T1021f14(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1020f19(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter_type */
extern void T1019f20(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter_type */
extern void T1014f20(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter_type */
extern void T1013f21(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter_type */
extern void T1012f27(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1011f19(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter_type */
extern void T1010f14(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter_type */
extern void T1009f18(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter_type */
extern void T998f24(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameter_type_constraint */
extern void T998f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3g_error */
extern void T282f510(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtct0b */
extern T0* T1032c1027(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3g_error */
extern void T34f509(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3f_error */
extern void T282f509(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3f */
extern T0* T1032c1030(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3f_error */
extern void T34f508(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3d_error */
extern void T282f508(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3d_error */
extern void T34f507(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3c_error */
extern void T282f507(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3c */
extern T0* T1032c1029(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3c_error */
extern void T34f506(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force_relation */
extern void T1414f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put_indexed_relation */
extern void T1414f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force */
extern void T1414f16(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put */
extern void T1414f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].put_new */
extern void T1605f49(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_put */
extern void T1605f57(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_put */
extern void T1605f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_put */
extern void T1605f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_put */
extern void T1605f52(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_item */
extern T6 T1605f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].hash_position */
extern T6 T1605f23(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.hash_code */
extern T6 T1242f75(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.hash_code */
extern T6 T872f74(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_item */
extern T6 T1605f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].resize */
extern void T1605f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_resize */
extern void T1605f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].special_integer_ */
extern T0* T1605f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_resize */
extern void T1605f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_resize */
extern void T1605f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_item */
extern T0* T1605f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_resize */
extern void T1605f50(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].resize */
extern void T1415f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].capacity */
extern T6 T1414f9(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].index_of */
extern T6 T1414f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].found_item */
extern T6 T1605f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_item */
extern T6 T1605f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].found */
extern T1 T1605f27(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].search */
extern void T1605f58(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].search_position */
extern void T1605f59(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3b_error */
extern void T282f506(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3b */
extern T0* T1032c1028(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3b_error */
extern void T34f505(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_CHECKER1.process_formal_parameter_type */
extern void T997f20(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter_type */
extern void T396f32(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class_type */
extern void T1352f4(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_class_type_validity */
extern void T1352f12(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.set_fatal_error */
extern void T1352f15(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class_type */
extern void T1351f14(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_actual_parameters_validity */
extern void T1351f16(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class_type */
extern void T1350f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_class_type_validity */
extern void T1350f12(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.set_fatal_error */
extern void T1350f13(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.has_ancestors_error */
extern T1 T485f40(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.ancestors_built */
extern T1 T485f39(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class_type */
extern void T1349f4(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_class_type_validity */
extern void T1349f12(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_syntax_error */
extern T1 T485f47(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_parsed */
extern T1 T485f46(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.set_fatal_error */
extern void T1349f15(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_preparsed */
extern T1 T485f38(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class_type */
extern void T1021f15(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_class_type */
extern void T1021f19(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_2 */
extern void T81f113(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T1664c19(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* ET_CLASS_TYPE.tokens */
extern T0* T81f28(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.make */
extern T0* T1663c22(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_1 */
extern void T81f112(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.position */
extern T0* T1663f10(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_position */
extern T0* T82f809(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.tokens */
extern T0* T1663f20(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.current_universe */
extern T0* T1021f5(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1020f13(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_actual_parameters_validity */
extern void T1020f14(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class_type */
extern void T1019f10(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.check_class_type_validity */
extern void T1019f11(GE_context* ac, T0* C, T0* a1);
extern T1 T1019f11ot1(T0* a1, T0** a2);
extern T1 T1019f11ot2(T0* a1, T0** a2);
/* DS_HASH_SET [ET_CLASS].force_last */
extern void T1018f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].resize */
extern void T1018f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_resize */
extern void T1018f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].special_integer_ */
extern T0* T1018f31(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].key_storage_resize */
extern void T1018f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_resize */
extern void T1018f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].slots_resize */
extern void T1018f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_capacity */
extern T6 T1018f30(GE_context* ac, T0* C, T6 a1);
/* ET_PARENT_CHECKER3.error_handler */
extern T0* T1019f6(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.set_fatal_error */
extern void T1019f12(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class_type */
extern void T1014f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_class_type_constraint */
extern void T1014f13(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg3a_error */
extern void T282f461(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vtcg3a */
extern T0* T1032c988(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T282f151(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg3a_error */
extern void T34f461(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T34f150(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.error_handler */
extern T0* T1014f7(GE_context* ac, T0* C);
/* ET_CLASS.resolve_unfolded_tuple_actual_parameters_2 */
extern void T83f291(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_CHECKER2.set_fatal_error */
extern void T1014f14(GE_context* ac, T0* C);
/* ET_CLASS.resolve_unfolded_tuple_actual_parameters_1 */
extern void T83f290(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.current_universe */
extern T0* T1014f6(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.process_class_type */
extern void T1013f11(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_class_type_validity */
extern void T1013f12(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.error_handler */
extern T0* T1013f8(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.current_system */
extern T0* T1013f7(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.set_fatal_error */
extern void T1013f13(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.current_universe */
extern T0* T1013f6(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.process_class_type */
extern void T1012f20(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_tuple_actual_parameters_unfolded */
extern void T1012f22(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_vtct_validity */
extern void T1012f21(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1011f13(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_actual_parameters_to_sorter */
extern void T1011f14(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class_type */
extern void T1010f15(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_class_type */
extern void T1010f19(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.current_universe */
extern T0* T1010f5(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class_type */
extern void T1009f11(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_actual_parameters */
extern void T1009f12(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.reset_fatal_error */
extern void T1009f13(GE_context* ac, T0* C, T1 a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class_type */
extern void T998f17(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_class_type_constraint */
extern void T998f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5a_error */
extern void T282f460(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_gvtcg5a */
extern T0* T1032c987(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T282f150(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvtcg5a_error */
extern void T34f460(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T34f149(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_reference */
extern T1 T1242f12(GE_context* ac, T0* C);
/* ET_KEYWORD.is_reference */
extern T1 T421f11(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_reference */
extern T1 T872f10(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5b_error */
extern void T282f459(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_gvtcg5b */
extern T0* T1032c986(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_gvtcg5b_error */
extern void T34f459(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_expanded */
extern T1 T1242f11(GE_context* ac, T0* C);
/* ET_KEYWORD.is_expanded */
extern T1 T421f15(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_expanded */
extern T1 T872f9(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtug2a_error */
extern void T282f458(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug2a */
extern T0* T1032c985(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T282f149(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug2a_error */
extern void T34f458(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T34f148(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtug1a_error */
extern void T282f457(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug1a */
extern T0* T1032c984(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T282f148(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug1a_error */
extern void T34f457(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T34f147(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class_type */
extern void T997f10(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_class_type_validity */
extern void T997f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.current_universe */
extern T0* T997f7(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.process_class_type */
extern void T396f24(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_class_type_validity */
extern void T396f25(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.reset_fatal_error */
extern void T396f26(GE_context* ac, T0* C, T1 a1);
/* ET_TYPE_CHECKER.current_universe */
extern T0* T396f15(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_external_function */
extern void T1016f13(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_external_function */
extern void T1015f14(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function */
extern void T391f119(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_validity */
extern void T391f129(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function */
extern void T80f177(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T80f195(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_warning_message */
extern void T282f466(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_warning_message */
extern void T34f466(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_string_type_alive */
extern void T80f217(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.result_type_set */
extern T0* T80f66(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_function_validity */
extern void T80f216(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_generic_parameter_type */
extern void T80f273(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_default */
extern void T80f272(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_reference_item */
extern void T80f271(GE_context* ac, T0* C, T0* a1);
extern T1 T80f271ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_item */
extern void T80f270(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_type_conforms_to */
extern void T80f269(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_type_conforms_to_feature */
extern void T72f101(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_storable_version_of_type */
extern void T80f268(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field_at_offset */
extern void T80f267(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field_at */
extern void T80f266(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field */
extern void T80f265(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_type_instance_of */
extern void T80f264(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_tuple_instance_of */
extern void T80f263(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_special_of_reference_instance_of */
extern void T80f262(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_instance_of */
extern void T80f261(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_object_id */
extern void T80f260(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_id_object */
extern void T80f259(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function_item */
extern void T80f258(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_factory_exception_manager */
extern void T80f257(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_type_of_code */
extern void T80f256(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_last_exception */
extern void T80f255(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_raisable */
extern void T80f254(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignored */
extern void T80f253(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignorable */
extern void T80f252(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_caught */
extern void T80f251(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_exception_from_code */
extern void T80f250(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function */
extern void T80f249(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_twin */
extern void T80f248(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_builtin_unknown */
extern T1 T259f75(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T80f195p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_function */
extern void T76f1247(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function */
extern void T76f1267(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_tuple_type */
extern void T1352f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_tuple_type_validity */
extern void T1352f14(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_tuple_type */
extern void T1351f19(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_tuple_type */
extern void T1350f15(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_tuple_type_validity */
extern void T1350f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_tuple_type */
extern void T1349f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_tuple_type_validity */
extern void T1349f14(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_tuple_type */
extern void T1021f16(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_tuple_type */
extern void T1021f20(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1020f20(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_tuple_type */
extern void T1019f13(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_tuple_type */
extern void T1014f21(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_tuple_type_constraint */
extern void T1014f24(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_tuple_type */
extern void T1013f14(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_tuple_type_validity */
extern void T1013f23(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_tuple_type */
extern void T1012f28(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_tuple_actual_parameters_unfolded */
extern void T1012f33(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_vtct_validity */
extern void T1012f32(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1011f20(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_tuple_type */
extern void T1010f16(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_tuple_type */
extern void T1010f20(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_tuple_type */
extern void T1009f19(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_tuple_type */
extern void T998f25(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_tuple_type_constraint */
extern void T998f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_tuple_type */
extern void T997f13(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_tuple_type_validity */
extern void T997f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvhpr5a_error */
extern void T282f504(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr5a */
extern T0* T1032c1025(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T282f168(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr5a_error */
extern void T34f503(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T34f167(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_tuple_type */
extern void T396f33(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_tuple_type_validity */
extern void T396f37(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_qualified_call_instruction */
extern void T1016f36(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_qualified_call_instruction */
extern void T391f121(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_instruction */
extern void T80f179(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_qualified_call_instruction */
extern void T76f1248(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_retry_instruction */
extern void T1016f26(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_retry_instruction */
extern void T391f350(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_retry_instruction_validity */
extern void T391f369(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vxrt0a_error */
extern void T282f467(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vxrt0a */
extern T0* T1032c993(GE_context* ac, T0* a1, T0* a2);
/* ET_RETRY_INSTRUCTION.position */
extern T0* T713f9(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T282f153(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vxrt0a_error */
extern void T34f467(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T34f152(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_retry_instruction */
extern void T80f180(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_retry_instruction_validity */
extern void T80f201(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_retry_instruction */
extern void T76f1249(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_retry_instruction */
extern void T76f1268(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_across_instruction */
extern void T1016f40(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_across_instruction */
extern void T391f351(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_instruction_validity */
extern void T391f370(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_component_no_from_validity */
extern void T391f387(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_instruction */
extern void T80f181(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_instruction_validity */
extern void T80f202(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_component_no_from_validity */
extern void T80f227(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_across_instruction */
extern void T76f1250(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_instruction */
extern void T76f1269(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_check_instruction */
extern void T1016f39(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.assertion */
extern T0* T764f8(GE_context* ac, T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.item */
extern T0* T764f9(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_check_instruction */
extern void T391f352(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_check_instruction_validity */
extern void T391f371(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.set_code_unreachable */
extern void T409f17(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_check_instruction */
extern void T80f182(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T80f203(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T80f203p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_check_instruction */
extern void T76f1251(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_check_instruction */
extern void T76f1270(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_debug_instruction */
extern void T1016f35(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_debug_instruction */
extern void T391f353(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_debug_instruction_validity */
extern void T391f372(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_debug_instruction */
extern void T80f183(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T80f204(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T80f204p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_debug_instruction */
extern void T76f1252(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_debug_instruction */
extern void T76f1271(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter */
extern void T1352f17(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter */
extern void T1351f20(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter */
extern void T1350f16(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter */
extern void T1349f17(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter */
extern void T1021f17(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1020f21(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter */
extern void T1019f21(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter */
extern void T1014f15(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter */
extern void T1013f22(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter */
extern void T1012f29(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1011f21(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter */
extern void T1010f17(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter */
extern void T1009f20(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter */
extern void T998f19(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_formal_parameter */
extern void T997f21(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter */
extern void T396f39(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_if_instruction */
extern void T1016f33(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part_list */
extern void T1016f95(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART.process */
extern void T831f6(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part */
extern void T1016f110(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.item */
extern T0* T834f4(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_if_instruction */
extern void T391f354(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_instruction_validity */
extern void T391f373(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_instruction */
extern void T80f184(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_instruction_validity */
extern void T80f205(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_if_instruction */
extern void T76f1253(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_instruction */
extern void T76f1272(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inspect_instruction */
extern void T1016f34(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part_list */
extern void T1016f96(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part */
extern void T1016f100(GE_context* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.item */
extern T0* T991f4(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_inspect_instruction */
extern void T391f355(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inspect_instruction_validity */
extern void T391f374(GE_context* ac, T0* C, T0* a1);
extern T1 T391f374ot1(T0* a1, T0** a2);
extern T1 T391f374ot2(T0* a1, T0** a2);
extern T1 T391f374ot3(T0* a1, T0** a2);
extern T1 T391f374ot4(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vomb2a_error */
extern void T282f470(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vomb2a */
extern T0* T1032c996(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T282f155(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb2a_error */
extern void T34f470(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T34f154(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vomb2b_error */
extern void T282f469(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vomb2b */
extern T0* T1032c995(GE_context* ac, T0* a1, T0* a2, T0* a3);
extern T1 T1032f995ot1(T0* a1, T0** a2);
extern T1 T1032f995ot2(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vomb2b_error */
extern void T34f469(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.choice_constant */
extern T0* T391f59(GE_context* ac, T0* C, T0* a1);
extern T1 T391f59ot1(T0* a1, T0** a2);
extern T1 T391f59ot2(T0* a1, T0** a2);
extern T1 T391f59ot3(T0* a1, T0** a2);
extern T1 T391f59ot4(T0* a1, T0** a2);
extern T1 T391f59ot5(T0* a1, T0** a2);
extern T1 T391f59ot6(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.integer_choice_constant */
extern T0* T391f63(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.character_choice_constant */
extern T0* T391f62(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.arguments_count */
extern T6 T309f22(GE_context* ac, T0* C);
/* ET_IDENTIFIER.arguments_count */
extern T6 T183f104(GE_context* ac, T0* C);
/* ET_IDENTIFIER.arguments */
extern T0* T183f108(GE_context* ac, T0* C);
/* ET_CHOICE_LIST.choice */
extern T0* T776f6(GE_context* ac, T0* C, T6 a1);
/* ET_CHOICE_LIST.item */
extern T0* T776f7(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vomb1a_error */
extern void T282f468(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vomb1a */
extern T0* T1032c994(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T282f154(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb1a_error */
extern void T34f468(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T34f153(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_instruction */
extern void T80f185(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_instruction_validity */
extern void T80f206(GE_context* ac, T0* C, T0* a1);
extern T1 T80f206ot1(T0* a1, T0** a2);
extern T1 T80f206ot2(T0* a1, T0** a2);
extern T1 T80f206ot3(T0* a1, T0** a2);
extern T1 T80f206ot4(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.choice_constant */
extern T0* T80f72(GE_context* ac, T0* C, T0* a1);
extern T1 T80f72ot1(T0* a1, T0** a2);
extern T1 T80f72ot2(T0* a1, T0** a2);
extern T1 T80f72ot3(T0* a1, T0** a2);
extern T1 T80f72ot4(T0* a1, T0** a2);
extern T1 T80f72ot5(T0* a1, T0** a2);
extern T1 T80f72ot6(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.integer_choice_constant */
extern T0* T80f86(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.character_choice_constant */
extern T0* T80f85(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_inspect_instruction */
extern void T76f1254(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inspect_instruction */
extern void T76f1273(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1273ot1(T0* a1, T0** a2);
extern T1 T76f1273ot2(T0* a1, T0** a2);
extern T1 T76f1273ot3(T0* a1, T0** a2);
extern T1 T76f1273ot4(T0* a1, T0** a2);
extern T1 T76f1273ot5(T0* a1, T0** a2);
extern T1 T76f1273ot6(T0* a1, T0** a2);
extern T1 T76f1273ot7(T0* a1, T0** a2);
extern T1 T76f1273ot8(T0* a1, T0** a2);
extern T1 T76f1273ot9(T0* a1, T0** a2);
extern T1 T76f1273ot10(T0* a1, T0** a2);
extern T1 T76f1273ot11(T0* a1, T0** a2);
extern T1 T76f1273ot12(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_c3_character_constant */
extern void T1016f90(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c3_character_constant */
extern void T410f55(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c3_character_constant */
extern void T406f61(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c3_character_constant */
extern void T391f356(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c3_character_constant_validity */
extern void T391f375(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c3_character_constant */
extern void T80f322(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c3_character_constant_validity */
extern void T80f407(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c3_character_constant */
extern void T76f1255(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_verbatim_string */
extern void T1016f91(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_verbatim_string */
extern void T410f56(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_verbatim_string */
extern void T406f62(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_verbatim_string */
extern void T391f357(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_verbatim_string_validity */
extern void T391f376(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_verbatim_string */
extern void T80f323(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_verbatim_string_validity */
extern void T80f408(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_verbatim_string */
extern void T76f1256(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_verbatim_string */
extern void T76f1274(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_special_manifest_string */
extern void T1016f92(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_special_manifest_string */
extern void T410f57(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_special_manifest_string */
extern void T406f63(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_special_manifest_string */
extern void T391f358(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_special_manifest_string_validity */
extern void T391f377(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_special_manifest_string */
extern void T80f324(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_special_manifest_string_validity */
extern void T80f409(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_special_manifest_string */
extern void T76f1257(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_special_manifest_string */
extern void T76f1275(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_constrained_formal_parameter */
extern void T1352f18(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_constrained_formal_parameter */
extern void T1351f21(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_constrained_formal_parameter */
extern void T1350f17(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_constrained_formal_parameter */
extern void T1349f18(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_constrained_formal_parameter */
extern void T1021f21(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1020f25(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_constrained_formal_parameter */
extern void T1019f22(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_constrained_formal_parameter */
extern void T1014f23(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_constrained_formal_parameter */
extern void T1013f24(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_constrained_formal_parameter */
extern void T1012f34(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1011f24(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_constrained_formal_parameter */
extern void T1010f21(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_constrained_formal_parameter */
extern void T1009f24(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_constrained_formal_parameter */
extern void T998f27(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_constrained_formal_parameter */
extern void T997f25(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T396f40(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assigner_instruction */
extern void T1016f27(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assigner_instruction */
extern void T391f359(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assigner_instruction_validity */
extern void T391f378(GE_context* ac, T0* C, T0* a1);
extern T1 T391f378ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_tuple_label_setter */
extern void T391f389(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vbac1a_error */
extern void T282f472(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vbac1a */
extern T0* T1032c998(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T282f157(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac1a_error */
extern void T34f472(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T34f156(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_source */
extern void T1271f19(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac2a_error */
extern void T282f471(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vbac2a */
extern T0* T1032c997(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T282f156(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac2a_error */
extern void T34f471(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T34f155(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_name */
extern void T1271f18(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expressions_validity */
extern void T391f388(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assigner_instruction */
extern void T80f186(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assigner_instruction_validity */
extern void T80f207(GE_context* ac, T0* C, T0* a1);
extern T1 T80f207ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_setter */
extern void T80f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expressions_validity */
extern void T80f230(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_assigner_instruction */
extern void T76f1258(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assigner_instruction */
extern void T76f1276(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assignment */
extern void T1016f28(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment */
extern void T391f360(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_validity */
extern void T391f379(GE_context* ac, T0* C, T0* a1);
extern T1 T391f379ot1(T0* a1);
extern T1 T391f379ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_assignment */
extern void T391f391(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_name */
extern void T409f19(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_attribute */
extern void T409f25(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_formal_argument */
extern void T409f24(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_local_variable */
extern void T409f23(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_result */
extern void T409f18(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vjar0a_error */
extern void T282f473(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vjar0a */
extern T0* T1032c999(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vjar_error */
extern T1 T282f158(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjar0a_error */
extern void T34f473(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vjar_error */
extern T1 T34f157(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT.set_source */
extern void T1272f8(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_writable_validity */
extern void T391f390(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T391f390ot1(T0* a1, T0** a2);
extern T1 T391f390ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_veen0a_error */
extern void T282f481(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0a */
extern T0* T1032c1007(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen_error */
extern T1 T282f161(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen0a_error */
extern void T34f481(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen_error */
extern T1 T34f160(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen0b_error */
extern void T282f480(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0b */
extern T0* T1032c1006(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen0b_error */
extern void T34f480(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0b_error */
extern void T282f479(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0b */
extern T0* T1032c1005(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T282f160(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjaw0b_error */
extern void T34f479(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T34f159(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjaw0c_error */
extern void T282f478(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0c */
extern T0* T1032c1004(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0c_error */
extern void T34f478(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_attribute_assignment_target */
extern void T391f404(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vjaw0a_error */
extern void T282f477(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0a */
extern T0* T1032c1003(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0a_error */
extern void T34f477(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_assignment_target */
extern void T391f403(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result_assignment_target */
extern void T391f402(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment */
extern void T80f187(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_validity */
extern void T80f208(GE_context* ac, T0* C, T0* a1);
extern T1 T80f208ot1(T0* a1);
extern T1 T80f208ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment */
extern void T80f235(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_dynamic_types */
extern void T80f341(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_writable_validity */
extern void T80f234(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f234ot1(T0* a1, T0** a2);
extern T1 T80f234ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_assignment_target */
extern void T80f340(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_assignment_target */
extern void T80f339(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_assignment_target */
extern void T80f338(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_assignment */
extern void T76f1259(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment */
extern void T76f1277(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_result */
extern T1 T183f92(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_assignment_attempt */
extern void T1016f29(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment_attempt */
extern void T391f361(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_attempt_validity */
extern void T391f380(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment_attempt */
extern void T391f392(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjrv0a_error */
extern void T282f474(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vjrv0a */
extern T0* T1032c1000(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T282f159(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjrv0a_error */
extern void T34f474(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T34f158(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference */
extern T1 T403f48(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.newer_or_same_ise_version */
extern T1 T73f46(GE_context* ac, T0* C, T0* a1);
/* UT_VERSION.is_greater_equal */
extern T1 T79f15(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_5_7_0 */
extern T0* T391f60(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment_attempt */
extern void T80f188(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_attempt_validity */
extern void T80f209(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment_attempt */
extern void T80f236(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_attempt_dynamic_types */
extern void T80f342(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_5_7_0 */
extern T0* T80f76(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_assignment_attempt */
extern void T76f1260(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment_attempt */
extern void T76f1278(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_instruction */
extern void T1016f30(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_loop_instruction */
extern void T391f362(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_instruction_validity */
extern void T391f381(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_loop_instruction */
extern void T80f189(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_instruction_validity */
extern void T80f210(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_loop_instruction */
extern void T76f1261(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_loop_instruction */
extern void T76f1279(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bang_instruction */
extern void T1016f31(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bang_instruction */
extern void T391f363(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bang_instruction_validity */
extern void T391f382(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_instruction_validity */
extern void T391f393(GE_context* ac, T0* C, T0* a1);
extern T1 T391f393ot1(T0* a1, T0** a2);
extern T1 T391f393ot2(T0* a1, T0** a2);
extern T1 T391f393ot3(T0* a1, T0** a2);
extern T1 T391f393ot4(T0* a1, T0** a2);
extern T1 T391f393ot5(T0* a1);
extern T1 T391f393ot6(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_creation_instruction */
extern void T391f405(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6e_error */
extern void T282f487(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6e */
extern T0* T1032c1013(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc6e_error */
extern void T34f487(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc8b_error */
extern void T282f486(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8b */
extern T0* T1032c1012(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vgcc8b_error */
extern void T34f486(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vgcc1b_error */
extern void T282f485(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc1b */
extern T0* T1032c1011(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.position */
extern T0* T1277f9(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.position */
extern T0* T1276f9(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vgcc1b_error */
extern void T34f485(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc5b_error */
extern void T282f484(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5b */
extern T0* T1032c1010(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc5b_error */
extern void T34f484(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.is_type_valid */
extern T1 T391f61(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.set_class_interface_error_only */
extern void T396f41(GE_context* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc3a_error */
extern void T282f483(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc3a */
extern T0* T1032c1009(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T282f162(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc3a_error */
extern void T34f483(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T34f161(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc6d_error */
extern void T282f482(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6d */
extern T0* T1032c1008(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6d_error */
extern void T34f482(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.first */
extern T0* T403f49(GE_context* ac, T0* C);
/* ET_CREATE_INSTRUCTION.last_position */
extern T0* T1277f7(GE_context* ac, T0* C);
/* ET_CREATE_INSTRUCTION.last_leaf */
extern T0* T1277f10(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.last_leaf */
extern T0* T350f4(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T1693f7(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T304f11(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.last_position */
extern T0* T1276f7(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.last_leaf */
extern T0* T1276f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bang_instruction */
extern void T80f190(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bang_instruction_validity */
extern void T80f211(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_instruction_validity */
extern void T80f237(GE_context* ac, T0* C, T0* a1);
extern T1 T80f237ot1(T0* a1, T0** a2);
extern T1 T80f237ot2(T0* a1, T0** a2);
extern T1 T80f237ot3(T0* a1, T0** a2);
extern T1 T80f237ot4(T0* a1, T0** a2);
extern T1 T80f237ot5(T0* a1);
extern T1 T80f237ot6(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_instruction */
extern void T80f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_creation_dynamic_type */
extern void T80f414(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATE_INSTRUCTION.arguments */
extern T0* T1277f8(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.arguments */
extern T0* T1276f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.is_type_valid */
extern T1 T80f81(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_bang_instruction */
extern void T76f1262(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_bang_instruction */
extern void T76f1280(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_instruction */
extern void T76f1285(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_instruction */
extern void T1016f32(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_instruction */
extern void T391f364(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_instruction_validity */
extern void T391f383(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_instruction */
extern void T80f191(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_instruction_validity */
extern void T80f212(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_create_instruction */
extern void T76f1263(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_instruction */
extern void T76f1281(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_instruction */
extern void T1016f37(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_instruction */
extern void T391f365(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_instruction_validity */
extern void T391f384(GE_context* ac, T0* C, T0* a1);
extern T1 T391f384ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_precursor_procedure_instruction_validity */
extern void T391f394(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [ET_PROCEDURE].force_last */
extern void T1025f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].slots_put */
extern void T1025f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].clashes_put */
extern void T1025f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].slots_item */
extern T6 T1025f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].hash_position */
extern T6 T1025f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].resize */
extern void T1025f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].clashes_resize */
extern void T1025f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].special_integer_ */
extern T0* T1025f32(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_resize */
extern void T1025f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_resize */
extern void T1025f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_item */
extern T0* T1025f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].slots_resize */
extern void T1025f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].new_capacity */
extern T6 T1025f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_put */
extern void T1025f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].search_position */
extern void T1025f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].key_equality_tester */
extern T0* T1025f30(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_precursor_instruction */
extern void T391f406(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr1a_error */
extern void T282f475(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1a */
extern T0* T1032c1001(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vdpr1a_error */
extern void T34f475(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_instruction */
extern void T80f192(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_instruction_validity */
extern void T80f213(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_procedure_instruction_validity */
extern void T80f238(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_instruction */
extern void T80f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_precursor_instruction */
extern void T76f1264(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_instruction */
extern void T76f1282(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_static_call_instruction */
extern void T1016f38(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_instruction */
extern void T391f366(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_instruction_validity */
extern void T391f385(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_procedure_call_instruction_validity */
extern void T391f396(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_static_call_instruction */
extern void T391f407(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_dotnet_procedure_call_instruction_validity */
extern void T391f395(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_instruction */
extern void T80f193(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_instruction_validity */
extern void T80f214(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_procedure_call_instruction_validity */
extern void T80f241(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_instruction */
extern void T80f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_procedure_call_instruction_validity */
extern void T80f240(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_instruction */
extern void T76f1265(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_instruction */
extern void T76f1283(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unqualified_call_instruction */
extern void T1016f41(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unqualified_call_instruction */
extern void T391f367(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_instruction_validity */
extern void T391f386(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn1c_error */
extern void T282f476(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn1c */
extern T0* T1032c1002(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vkcn1c_error */
extern void T34f476(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_instruction_validity */
extern void T391f401(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_unqualified_call_instruction */
extern void T391f408(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_instruction_validity */
extern void T391f400(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuio0c_error */
extern void T282f497(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0c */
extern T0* T1032c1023(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T282f166(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuio0c_error */
extern void T34f497(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T34f165(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuio0a_error */
extern void T282f496(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0a */
extern T0* T1032c1022(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuio0a_error */
extern void T34f496(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuio0b_error */
extern void T282f495(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0b */
extern T0* T1032c1021(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuio0b_error */
extern void T34f495(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_across_cursor_call_instruction_validity */
extern void T391f399(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuic0c_error */
extern void T282f494(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0c */
extern T0* T1032c1020(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T282f165(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuic0c_error */
extern void T34f494(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T34f164(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuic0a_error */
extern void T282f493(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0a */
extern T0* T1032c1019(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuic0a_error */
extern void T34f493(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuic0b_error */
extern void T282f492(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0b */
extern T0* T1032c1018(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuic0b_error */
extern void T34f492(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_local_variable_call_instruction_validity */
extern void T391f398(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuil0a_error */
extern void T282f491(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0a */
extern T0* T1032c1017(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T282f164(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuil0a_error */
extern void T34f491(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T34f163(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuil0b_error */
extern void T282f490(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0b */
extern T0* T1032c1016(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuil0b_error */
extern void T34f490(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_instruction_validity */
extern void T391f397(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuia0a_error */
extern void T282f489(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0a */
extern T0* T1032c1015(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T282f163(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuia0a_error */
extern void T34f489(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T34f162(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuia0b_error */
extern void T282f488(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0b */
extern T0* T1032c1014(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuia0b_error */
extern void T34f488(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_instruction */
extern void T80f194(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_instruction_validity */
extern void T80f215(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_instruction_validity */
extern void T80f247(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_instruction */
extern void T80f359(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f359ot1(T0* a1, T0** a2);
extern T1 T80f359ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_instruction_validity */
extern void T80f246(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_across_cursor_call_instruction_validity */
extern void T80f245(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_instruction_validity */
extern void T80f244(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_instruction_validity */
extern void T80f243(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_unqualified_call_instruction */
extern void T76f1266(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_instruction */
extern void T76f1284(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1284ot1(T0* a1, T0** a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T1504f4(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_infix_cast_expression */
extern void T1016f106(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_infix_cast_expression */
extern void T410f58(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_cast_expression */
extern void T406f64(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_cast_expression */
extern void T391f409(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_cast_expression_validity */
extern void T391f410(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_cast_expression */
extern void T80f506(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_cast_expression_validity */
extern void T80f510(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_cast_expression */
extern void T76f1286(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_cast_expression */
extern void T76f1287(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_builtin_expression */
extern void T1016f111(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T410f59(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T406f65(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_builtin_expression */
extern void T391f411(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_builtin_expression_validity */
extern void T391f414(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_builtin_expression */
extern void T80f512(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_builtin_expression_validity */
extern void T80f515(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_builtin_expression */
extern void T76f1288(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_builtin_expression */
extern void T76f1291(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_from_expression */
extern void T1016f112(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_from_expression */
extern void T410f60(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_from_expression */
extern void T406f66(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_from_expression */
extern void T391f412(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_from_expression_validity */
extern void T391f415(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_from_expression */
extern void T80f513(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_from_expression_validity */
extern void T80f516(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_from_expression */
extern void T76f1289(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_from_expression */
extern void T76f1292(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_to_expression */
extern void T1016f113(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_to_expression */
extern void T410f61(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_to_expression */
extern void T406f67(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_to_expression */
extern void T391f413(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_to_expression_validity */
extern void T391f416(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_to_expression */
extern void T80f514(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_to_expression_validity */
extern void T80f517(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_to_expression */
extern void T76f1290(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_to_expression */
extern void T76f1293(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_frozen_keyword */
extern void T1255f76(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_frozen_keyword */
extern void T1254f80(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_frozen_keyword */
extern void T1253f77(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_frozen_keyword */
extern void T387f73(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_frozen_keyword */
extern void T386f75(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_frozen_keyword */
extern void T384f75(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_frozen_keyword */
extern void T355f76(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_frozen_keyword */
extern void T259f82(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_object_tests */
extern void T1255f74(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_object_tests */
extern void T1254f78(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_object_tests */
extern void T1253f75(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_object_tests */
extern void T387f71(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_object_tests */
extern void T386f73(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_object_tests */
extern void T384f73(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_object_tests */
extern void T355f74(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_object_tests */
extern void T259f80(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_across_components */
extern void T1255f75(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_across_components */
extern void T1254f79(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_across_components */
extern void T1253f76(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_across_components */
extern void T387f72(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_across_components */
extern void T386f74(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_across_components */
extern void T384f74(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_across_components */
extern void T355f75(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_across_components */
extern void T259f81(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.reset_validity_checked */
extern void T1255f80(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_validity_checked */
extern void T1254f84(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_validity_checked */
extern void T1253f81(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_validity_checked */
extern void T387f77(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_validity_checked */
extern void T386f79(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_validity_checked */
extern void T384f79(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_validity_checked */
extern void T355f80(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_validity_checked */
extern void T259f86(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T1255f94(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T1255f94p1(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T1254f101(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T1254f101p1(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset */
extern void T1253f97(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset */
extern void T1253f97p1(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset */
extern void T387f85(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset */
extern void T387f85p1(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T386f89(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T386f89p1(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T384f88(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T384f88p1(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset */
extern void T355f95(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset */
extern void T355f95p1(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T259f103(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T259f103p1(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_features_flattened */
extern void T1255f95(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1255f106(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset_qualified_anchored_types */
extern void T261f15(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T1254f102(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1254f113(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T1253f98(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1253f109(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_after_features_flattened */
extern void T387f86(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T387f90(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_features_flattened */
extern void T386f90(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T386f94(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_features_flattened */
extern void T384f89(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T384f93(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_features_flattened */
extern void T355f96(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T355f100(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_features_flattened */
extern void T259f104(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_signature_qualified_anchored_types */
extern void T259f113(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_interface_checked */
extern void T1255f96(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T1254f103(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T1254f103p1(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_interface_checked */
extern void T1253f99(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_interface_checked */
extern void T1253f99p1(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_after_interface_checked */
extern void T387f87(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_interface_checked */
extern void T386f91(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_interface_checked */
extern void T384f90(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T355f97(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T355f97p1(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_interface_checked */
extern void T259f105(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_frozen_keyword */
extern void T1258f81(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_frozen_keyword */
extern void T1257f79(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_frozen_keyword */
extern void T539f78(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_frozen_keyword */
extern void T533f79(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_object_tests */
extern void T1258f79(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_object_tests */
extern void T1257f77(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_object_tests */
extern void T539f76(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_object_tests */
extern void T533f77(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_across_components */
extern void T1258f80(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_across_components */
extern void T1257f78(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_across_components */
extern void T539f77(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_across_components */
extern void T533f78(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_validity_checked */
extern void T1258f85(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_validity_checked */
extern void T1257f83(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_validity_checked */
extern void T539f79(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_validity_checked */
extern void T533f80(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset */
extern void T1258f99(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset */
extern void T1257f99(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset */
extern void T539f92(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset */
extern void T533f95(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_features_flattened */
extern void T1258f100(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T1258f111(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T1257f100(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T1257f111(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_features_flattened */
extern void T539f93(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T539f97(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T533f96(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T533f100(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_interface_checked */
extern void T1258f101(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T1257f101(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T1257f101p1(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_interface_checked */
extern void T539f94(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T533f97(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T533f97p1(GE_context* ac, T0* C);
/* ET_INFIX_NAME.set_seed */
extern void T1261f102(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_FREE_NAME.set_seed */
extern void T1260f72(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_NAME.set_seed */
extern void T1259f88(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_FREE_NAME.set_seed */
extern void T1192f72(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_seed */
extern void T183f111(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_NAME.reset */
extern void T1261f105(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.reset */
extern void T1260f73(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.reset */
extern void T1259f91(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.reset */
extern void T1192f73(GE_context* ac, T0* C);
/* ET_IDENTIFIER.reset */
extern void T183f125(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_id */
extern void T532f64(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_id */
extern void T531f64(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_id */
extern void T341f62(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_id */
extern void T324f62(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.set_id */
extern void T240f60(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_hash_code */
extern void T532f55(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_hash_code */
extern void T531f55(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_hash_code */
extern void T341f53(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_hash_code */
extern void T324f53(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.set_hash_code */
extern void T240f52(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_next_type */
extern void T532f56(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_next_type */
extern void T531f56(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_next_type */
extern void T341f54(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_next_type */
extern void T324f54(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_next_type */
extern void T240f53(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_attribute_position */
extern void T532f65(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_FEATURE_LIST.put */
extern void T327f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_FEATURE_LIST.index_of */
extern T6 T327f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_attribute_position */
extern void T531f65(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_SPECIAL_TYPE.set_attribute_position */
extern void T341f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TUPLE_TYPE.set_attribute_position */
extern void T324f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TYPE.set_attribute_position */
extern void T240f61(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_FUNCTION_TYPE.set_alive */
extern void T532f53(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_alive */
extern void T531f53(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_alive */
extern void T341f51(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_alive */
extern void T324f51(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.set_alive */
extern void T240f50(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_meta_type */
extern void T532f54(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_meta_type */
extern void T531f54(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_meta_type */
extern void T341f52(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_meta_type */
extern void T324f52(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_meta_type */
extern void T240f51(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.use_all_attributes */
extern void T532f67(GE_context* ac, T0* C, T0* a1);
extern T1 T532f67ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.use_all_attributes */
extern void T531f67(GE_context* ac, T0* C, T0* a1);
extern T1 T531f67ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_SPECIAL_TYPE.use_all_attributes */
extern void T341f64(GE_context* ac, T0* C, T0* a1);
extern T1 T341f64ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_TUPLE_TYPE.use_all_attributes */
extern void T324f64(GE_context* ac, T0* C, T0* a1);
extern T1 T324f64ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_TYPE.use_all_attributes */
extern void T240f62(GE_context* ac, T0* C, T0* a1);
extern T1 T240f62ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_FUNCTION_TYPE.set_static */
extern void T532f68(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_static */
extern void T531f68(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_static */
extern void T341f65(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_static */
extern void T324f65(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_TYPE.set_static */
extern void T240f63(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_equality_expression */
extern void T532f70(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.set_next */
extern void T1793f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_equality_expression */
extern void T531f70(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_equality_expression */
extern void T341f67(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_equality_expression */
extern void T324f67(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_equality_expression */
extern void T240f65(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_object_equality_expression */
extern void T532f71(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.set_next */
extern void T1794f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_object_equality_expression */
extern void T531f71(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_object_equality_expression */
extern void T341f68(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_object_equality_expression */
extern void T324f68(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_object_equality_expression */
extern void T240f66(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_target */
extern void T532f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_target */
extern void T531f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_target */
extern void T341f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_target */
extern void T324f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_target */
extern void T240f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_procedure_call */
extern void T532f69(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_procedure_call */
extern void T531f69(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_procedure_call */
extern void T341f66(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_procedure_call */
extern void T324f66(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_procedure_call */
extern void T240f64(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_query_call */
extern void T532f58(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_query_call */
extern void T531f58(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_query_call */
extern void T341f56(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_query_call */
extern void T324f56(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_query_call */
extern void T240f56(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.export_classes */
extern void T231f194(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].key */
extern T0* T640f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_key */
extern T0* T234f35(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.actual_intrinsic_class */
extern T0* T485f42(GE_context* ac, T0* C);
/* ET_CLASS.actual_intrinsic_class */
extern T0* T83f204(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.export_classes */
extern void T218f180(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.export_classes */
extern void T201f21(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start */
extern void T564f2(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start */
extern void T561f27(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start */
extern void T161f14(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T160f9(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T160f9p1(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.on_comment */
extern void T564f4(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_comment */
extern void T561f29(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_comment */
extern void T161f16(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.handle_position */
extern void T161f24(GE_context* ac, T0* C, T0* a1);
/* XM_POSITION_TABLE.put */
extern void T157f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].put_last */
extern void T1203f9(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].put_right */
extern void T1717f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T1717c3(GE_context* ac, T0* a1);
/* DS_PAIR [XM_POSITION, XM_NODE].make */
extern T0* T1204c3(GE_context* ac, T0* a1, T0* a2);
/* XM_COMMENT.make_last_in_document */
extern T0* T1492c4(GE_context* ac, T0* a1, T0* a2);
/* XM_COMMENT.make_last */
extern T0* T1492c3(GE_context* ac, T0* a1, T0* a2);
/* XM_ELEMENT.force_last */
extern void T156f27(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].force_last */
extern void T1198f13(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].force_last */
extern void T1198f13p1(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_ELEMENT_NODE].make */
extern T0* T1704c3(GE_context* ac, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].before_addition */
extern void T1198f18(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.before_addition */
extern void T156f29(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.last */
extern T0* T156f19(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].last */
extern T0* T1198f8(GE_context* ac, T0* C);
/* XM_ELEMENT.is_empty */
extern T1 T156f18(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].is_empty */
extern T1 T1198f7(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T160f11(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T160f11p1(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_processing_instruction */
extern void T564f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.on_processing_instruction */
extern void T561f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.on_processing_instruction */
extern void T161f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_PROCESSING_INSTRUCTION.make_last_in_document */
extern T0* T1493c5(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_PROCESSING_INSTRUCTION.make_last */
extern T0* T1493c4(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T160f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T160f12p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_NULL.on_content */
extern void T564f6(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_content */
extern void T561f31(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_content */
extern void T161f18(GE_context* ac, T0* C, T0* a1);
/* XM_CHARACTER_DATA.make_last */
extern T0* T1494c3(GE_context* ac, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T160f13(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T160f13p1(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start_tag */
extern void T564f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_start_tag */
extern void T561f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.push */
extern void T1359f12(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].force_last */
extern void T1600f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].put_right */
extern void T1772f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].attach_left */
extern void T1772f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1772c4(GE_context* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.new_string_string_table */
extern T0* T1359f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_equality_tester */
extern void T55f104(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.string_equality_tester */
extern T0* T1359f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map_default */
extern T0* T55c103(GE_context* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].default_capacity */
extern T6 T55f50(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag */
extern void T161f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_root */
extern T0* T156c26(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_DOCUMENT.set_root_element */
extern void T155f15(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.remove_previous_root_element */
extern void T155f16(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].go_after */
extern void T1491f14(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_go_after */
extern void T1196f28(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.make_last */
extern T0* T156c25(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_TO_TREE_FILTER.new_namespace */
extern T0* T161f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].force_last */
extern void T565f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_put */
extern void T565f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].clashes_put */
extern void T565f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].slots_item */
extern T6 T565f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].hash_position */
extern T6 T565f20(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE.hash_code */
extern T6 T529f6(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].resize */
extern void T565f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_resize */
extern void T565f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].special_integer_ */
extern T0* T565f29(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_resize */
extern void T565f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_resize */
extern void T565f46(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].aliased_resized_area */
extern T0* T1364f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_NAMESPACE].aliased_resized_area */
extern T0* T1365f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_item */
extern T0* T565f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_item */
extern T0* T565f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_item */
extern T6 T565f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_resize */
extern void T565f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_capacity */
extern T6 T565f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_put */
extern void T565f41(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].force */
extern void T1364f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].fill_with */
extern void T1365f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].extend */
extern void T1365f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].search_position */
extern void T565f40(GE_context* ac, T0* C, T0* a1);
/* detachable KL_EQUALITY_TESTER [XM_NAMESPACE].test */
extern T1 T1362f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].key_equality_tester */
extern T0* T565f25(GE_context* ac, T0* C);
/* XM_NAMESPACE.same_prefix */
extern T1 T529f5(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].item */
extern T0* T565f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].has */
extern T1 T565f30(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T160f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T160f14p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_end_tag */
extern void T564f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T561f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.pop */
extern void T1359f11(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_last */
extern void T1600f9(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].set_last_cell */
extern void T1600f14(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].forget_right */
extern void T1772f7(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_last_cursors_after */
extern void T1600f13(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_next_cursor */
extern void T1601f13(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_after */
extern void T1601f12(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].wipe_out */
extern void T1600f12(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_all_cursors_after */
extern void T1600f15(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve_default */
extern T0* T1359f3(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_pseudo_prefix */
extern T0* T1359f7(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T561f33p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve */
extern T0* T1359f2(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].back */
extern void T1601f11(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_back */
extern void T1600f18(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].add_traversing_cursor */
extern void T1600f19(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_traversing_cursor */
extern void T1600f20(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set */
extern void T1601f14(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].go_before */
extern void T1601f10(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_go_before */
extern void T1600f17(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_before */
extern void T1601f15(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_off */
extern T1 T1600f7(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].off */
extern T1 T1601f7(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].item */
extern T0* T1601f6(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].finish */
extern void T1601f9(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_finish */
extern void T1600f16(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_namespace */
extern T0* T1359f6(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.has_prefix */
extern T1 T561f10(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_end_tag */
extern void T161f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.parent_element */
extern T0* T156f16(GE_context* ac, T0* C);
extern T1 T156f16ot1(T0* a1, T0** a2);
/* XM_ELEMENT.is_root_node */
extern T1 T156f17(GE_context* ac, T0* C);
/* XM_DOCUMENT.is_root_node */
extern T1 T155f8(GE_context* ac, T0* C);
/* XM_DOCUMENT.parent */
extern T0* T155f9(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T160f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T160f16p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_attribute */
extern void T564f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER.on_attribute */
extern void T561f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add */
extern void T1359f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_new */
extern void T55f105(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].last */
extern T0* T1600f5(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.shallow_has */
extern T1 T1359f4(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.attributes_force */
extern void T561f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_LINKED_QUEUE [STRING_8].force */
extern void T1361f7(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add_default */
extern void T1359f13(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.is_xmlns */
extern T1 T561f9(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.same_string */
extern T1 T561f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.string_equality_tester */
extern T0* T561f25(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns */
extern T0* T561f21(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_attribute */
extern void T161f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_ATTRIBUTE.make_last */
extern T0* T431c5(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T160f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T160f18p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_CALLBACKS_NULL.on_finish */
extern void T564f3(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_finish */
extern void T561f28(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_finish */
extern void T161f15(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T160f10(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T160f10p1(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.on_start_tag_finish */
extern void T564f7(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T561f32(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T561f32p1(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.string_ */
extern T0* T561f14(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_delayed_attributes */
extern void T561f39(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_remove */
extern void T561f43(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].remove */
extern void T1361f8(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].wipe_out */
extern void T1361f9(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.unprefixed_attribute_namespace */
extern T0* T561f19(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.default_namespace */
extern T0* T561f24(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns_namespace */
extern T0* T561f18(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xml_prefix_namespace */
extern T0* T561f17(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.is_xml */
extern T1 T561f16(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.xml_prefix */
extern T0* T561f23(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].item */
extern T0* T1361f5(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_is_empty */
extern T1 T561f12(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].is_empty */
extern T1 T1361f4(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.has */
extern T1 T1359f5(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag_finish */
extern void T161f20(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T160f15(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T160f15p1(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.on_error */
extern void T564f11(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_error */
extern void T561f36(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_error */
extern void T161f22(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T160f17(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T160f17p1(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_xml_declaration */
extern void T564f12(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.on_xml_declaration */
extern void T561f44(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_xml_declaration */
extern void T161f25(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_STOP_ON_ERROR_FILTER.on_xml_declaration */
extern void T160f19(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.set_next */
extern void T561f41(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.set_next */
extern void T161f13(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.set_next */
extern void T160f8(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_line */
extern void T323f32(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.put_line */
extern void T288f6(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_line */
extern void T286f5(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T323f38(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T323f38p1(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T288f10(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T288f10p1(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T286f6(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T286f6p1(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_string */
extern void T323f30(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_put_string */
extern void T323f42(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.file_ps */
extern void T323f49(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_OUTPUT_STREAM.put_string */
extern void T288f8(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.string_ */
extern T0* T288f3(GE_context* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_string */
extern void T286f9(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_new_line */
extern void T323f33(GE_context* ac, T0* C);
/* KL_STRING_OUTPUT_STREAM.put_new_line */
extern void T288f5(GE_context* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_new_line */
extern void T286f4(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.put_character */
extern void T323f31(GE_context* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.old_put_character */
extern void T323f43(GE_context* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.file_pc */
extern void T323f50(GE_context* ac, T0* C, T14 a1, T2 a2);
/* KL_STRING_OUTPUT_STREAM.put_character */
extern void T288f7(GE_context* ac, T0* C, T2 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_character */
extern void T286f7(GE_context* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.put_integer */
extern void T323f37(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.put_integer_64 */
extern void T323f46(GE_context* ac, T0* C, T7 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer */
extern void T288f9(GE_context* ac, T0* C, T6 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer */
extern void T286f8(GE_context* ac, T0* C, T6 a1);
/* AP_DISPLAY_HELP_FLAG.reset */
extern void T51f25(GE_context* ac, T0* C);
/* AP_STRING_OPTION.reset */
extern void T47f28(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.reset */
extern void T46f28(GE_context* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].make */
extern T0* T153c8(GE_context* ac);
/* DS_LINKED_LIST [INTEGER_32].set_internal_cursor */
extern void T153f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [INTEGER_32].new_cursor */
extern T0* T153f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [INTEGER_32].make */
extern T0* T560c3(GE_context* ac, T0* a1);
/* AP_BOOLEAN_OPTION.reset */
extern void T45f31(GE_context* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].make */
extern T0* T150c8(GE_context* ac);
/* DS_LINKED_LIST [BOOLEAN].set_internal_cursor */
extern void T150f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [BOOLEAN].new_cursor */
extern T0* T150f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [BOOLEAN].make */
extern T0* T558c3(GE_context* ac, T0* a1);
/* AP_ENUMERATION_OPTION.reset */
extern void T44f31(GE_context* ac, T0* C);
/* AP_FLAG.reset */
extern void T42f22(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.record_occurrence */
extern void T51f26(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.display_help */
extern void T51f27(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.exceptions */
extern T0* T51f18(GE_context* ac, T0* C);
/* AP_ERROR_HANDLER.report_info_message */
extern void T142f11(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_help_text */
extern T0* T51f17(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.full_help_text */
extern T0* T39f35(GE_context* ac, T0* C);
/* AP_PARSER.option_help_text */
extern T0* T39f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_QUICK_SORTER [AP_OPTION].sort */
extern void T1786f3(GE_context* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [AP_OPTION].sort_with_comparator */
extern void T1786f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [AP_OPTION].subsort_with_comparator */
extern void T1786f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [AP_OPTION].swap */
extern void T140f28(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [AP_OPTION].replace */
extern void T140f27(GE_context* ac, T0* C, T0* a1, T6 a2);
/* AP_OPTION_COMPARATOR.less_than */
extern T1 T1785f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.three_way_comparison */
extern T6 T36f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* AP_OPTION_COMPARATOR.string_ */
extern T0* T1785f2(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].item */
extern T0* T140f16(GE_context* ac, T0* C, T6 a1);
/* DS_QUICK_SORTER [AP_OPTION].make */
extern T0* T1786c2(GE_context* ac, T0* a1);
/* AP_OPTION_COMPARATOR.default_create */
extern T0* T1785c3(GE_context* ac);
/* AP_STRING_OPTION.record_occurrence */
extern void T47f29(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.record_occurrence */
extern void T46f29(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [INTEGER_32].force_last */
extern void T153f10(GE_context* ac, T0* C, T6 a1);
/* AP_BOOLEAN_OPTION.record_occurrence */
extern void T45f32(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.false_strings */
extern T0* T45f22(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.case_insensitive_string_equality_tester */
extern T0* T45f23(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].has */
extern T1 T139f20(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.true_strings */
extern T0* T45f21(GE_context* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].force_last */
extern void T150f10(GE_context* ac, T0* C, T1 a1);
/* detachable DS_LINKABLE [BOOLEAN].put_right */
extern void T557f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [BOOLEAN].make */
extern T0* T557c3(GE_context* ac, T1 a1);
/* AP_ENUMERATION_OPTION.record_occurrence */
extern void T44f33(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].has */
extern T1 T146f14(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.record_occurrence */
extern void T42f24(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_INPUT_STREAM.read_character */
extern void T1217f10(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_character */
extern void T1207f32(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].remove */
extern void T1577f6(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].wipe_out */
extern void T1577f8(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.noqueue_read_character */
extern void T1207f35(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_read_character */
extern void T1207f37(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.append_character */
extern void T1207f38(GE_context* ac, T0* C, T6 a1);
/* DS_LINKED_QUEUE [CHARACTER_8].force */
extern void T1577f7(GE_context* ac, T0* C, T2 a1);
/* detachable DS_LINKABLE [CHARACTER_8].put_right */
extern void T1763f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [CHARACTER_8].make */
extern T0* T1763c3(GE_context* ac, T2 a1);
/* XM_EIFFEL_INPUT_STREAM.utf8 */
extern T0* T1207f24(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf8_buffer */
extern T0* T1207f27(GE_context* ac, T0* C);
/* UC_UTF16_ROUTINES.surrogate */
extern T6 T1578f7(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_low_surrogate */
extern T1 T1578f6(GE_context* ac, T0* C, T6 a1);
/* UC_UTF16_ROUTINES.least_10_bits */
extern T6 T1578f5(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_high_surrogate */
extern T1 T1578f4(GE_context* ac, T0* C, T6 a1);
/* UC_UTF16_ROUTINES.is_surrogate */
extern T1 T1578f3(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.utf16 */
extern T0* T1207f22(GE_context* ac, T0* C);
/* UC_UTF16_ROUTINES.default_create */
extern T0* T1578c16(GE_context* ac);
/* XM_EIFFEL_INPUT_STREAM.least_significant */
extern T6 T1207f26(GE_context* ac, T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.most_significant */
extern T6 T1207f25(GE_context* ac, T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.latin1_read_character */
extern void T1207f36(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_detect_read_character */
extern void T1207f34(GE_context* ac, T0* C);
/* UC_UTF8_ROUTINES.is_endian_detection_character */
extern T1 T1205f31(GE_context* ac, T0* C, T2 a1, T2 a2, T2 a3);
/* UC_UTF8_ROUTINES.is_endian_detection_character_start */
extern T1 T1205f30(GE_context* ac, T0* C, T2 a1, T2 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_least_first */
extern T1 T1578f2(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_most_first */
extern T1 T1578f1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_STDIN_FILE.read_character */
extern void T659f13(GE_context* ac, T0* C);
/* CONSOLE.read_character */
extern void T1316f30(GE_context* ac, T0* C);
/* CONSOLE.console_readchar */
extern T2 T1316f14(GE_context* ac, T0* C, T14 a1);
/* CONSOLE.end_of_file */
extern T1 T1316f11(GE_context* ac, T0* C);
/* CONSOLE.console_eof */
extern T1 T1316f13(GE_context* ac, T0* C, T14 a1);
/* KL_STDIN_FILE.console */
extern T0* T659f7(GE_context* ac, T0* C);
/* STD_FILES.input */
extern T0* T378f5(GE_context* ac, T0* C);
/* CONSOLE.make_open_stdin */
extern T0* T1316c29(GE_context* ac, T0* a1);
/* CONSOLE.set_read_mode */
extern void T1316f32(GE_context* ac, T0* C);
/* KL_STDIN_FILE.io */
extern T0* T659f9(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.read_character */
extern void T31f67(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_read_character */
extern void T31f71(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_gc */
extern T2 T31f26(GE_context* ac, T0* C, T14 a1);
/* KL_STRING_INPUT_STREAM.close */
extern void T1217f11(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.close */
extern void T1207f33(GE_context* ac, T0* C);
/* KL_STDIN_FILE.close */
extern void T659f14(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.close */
extern void T31f62(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.classes_do_recursive_until */
extern void T71f160(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_recursive_until */
extern T0* T71f160ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.classes_do_recursive_until */
extern T0* T71f160ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.universes_do_recursive_until */
extern void T71f175(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_UNIVERSE].forth */
extern void T486f40(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_forth */
extern void T486f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].add_traversing_cursor */
extern void T486f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_next_cursor */
extern void T1341f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_position */
extern void T1341f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].remove_traversing_cursor */
extern void T486f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_after */
extern void T1341f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].item_for_iteration */
extern T0* T486f34(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_item */
extern T0* T486f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].go_after */
extern void T486f39(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_go_after */
extern void T486f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].cursor_off */
extern T1 T486f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].off */
extern T1 T1341f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].after */
extern T1 T486f27(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_after */
extern T1 T486f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].after */
extern T1 T1341f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].start */
extern void T486f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_start */
extern void T486f49(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].is_empty */
extern T1 T486f31(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.add_universe_recursive */
extern void T71f230(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.add_universe_recursive */
extern T0* T71f230ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.add_universe_recursive */
extern T0* T71f230ac2(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [ET_LIBRARY]].set_rout_disp_final */
extern void T476f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_LIBRARY.add_universe_recursive */
extern void T190f196(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T190f196ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T190f196ac2(GE_context* ac, T0* a1);
/* ET_LIBRARY.add_universe_recursive */
extern void T474f170(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_universe_recursive */
extern T0* T474f170ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.add_universe_recursive */
extern T0* T474f170ac2(GE_context* ac, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_all */
extern void T198f9(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_all */
extern void T191f9(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].make */
extern T0* T486c36(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].set_internal_cursor */
extern void T486f48(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].new_cursor */
extern T0* T486f35(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].make */
extern T0* T1341c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].make_slots */
extern void T486f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_clashes */
extern void T486f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_key_storage */
extern void T486f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_item_storage */
extern void T486f43(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].make */
extern T0* T1344f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_UNIVERSE].make_empty */
extern T0* T1342c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].default_create */
extern T0* T1344c3(GE_context* ac);
/* ET_LACE_SYSTEM.initial_universes_capacity */
extern T6 T71f135(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.universes_do_recursive */
extern void T71f167(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].do_all */
extern void T486f37(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.classes_do_recursive_until */
extern void T65f159(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T65f159ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T65f159ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.universes_do_recursive_until */
extern void T65f174(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.add_universe_recursive */
extern void T65f181(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T65f181ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T65f181ac2(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.initial_universes_capacity */
extern T6 T65f150(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.universes_do_recursive */
extern void T65f166(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.classes_do_recursive_until */
extern void T62f156(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_recursive_until */
extern T0* T62f156ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.classes_do_recursive_until */
extern T0* T62f156ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.universes_do_recursive_until */
extern void T62f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.add_universe_recursive */
extern void T62f239(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.add_universe_recursive */
extern T0* T62f239ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.add_universe_recursive */
extern T0* T62f239ac2(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.initial_universes_capacity */
extern T6 T62f141(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.universes_do_recursive */
extern void T62f176(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.classes_do_recursive */
extern void T71f158(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_recursive */
extern T0* T71f158ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.classes_do_recursive */
extern void T65f157(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_recursive */
extern T0* T65f157ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.classes_do_recursive */
extern void T62f154(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_recursive */
extern T0* T62f154ac1(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.preparse_recursive */
extern void T71f159(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.build_scm_write_mappings */
extern void T71f170(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.build_scm_write_mappings */
extern T0* T71f170ac1(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [ET_CLUSTER]].set_rout_disp_final */
extern void T488f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_LACE_SYSTEM.build_scm_write_mapping */
extern void T71f233(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.clusters_do_explicit_recursive */
extern void T71f232(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.clusters_do_explicit_recursive */
extern T0* T71f232ac1(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [ET_INTERNAL_UNIVERSE]].set_rout_disp_final */
extern void T470f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_LACE_SYSTEM.internal_universes_do_recursive */
extern void T71f171(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].do_all */
extern void T490f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_item */
extern T0* T490f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_item */
extern T6 T490f22(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.add_internal_universe_recursive */
extern void T71f234(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.add_internal_universe_recursive */
extern T0* T71f234ac1(GE_context* ac, T0* a1);
/* ET_ECF_LIBRARY.add_internal_universe_recursive */
extern void T190f197(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_internal_universe_recursive */
extern T0* T190f197ac1(GE_context* ac, T0* a1);
/* ET_LIBRARY.add_internal_universe_recursive */
extern void T474f171(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_internal_universe_recursive */
extern T0* T474f171ac1(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].force_last */
extern void T490f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_put */
extern void T490f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_put */
extern void T490f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_item */
extern T6 T490f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].hash_position */
extern T6 T490f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].resize */
extern void T490f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_resize */
extern void T490f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].special_integer_ */
extern T0* T490f27(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_storage_resize */
extern void T490f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_resize */
extern void T490f45(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1347f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1348f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_storage_item */
extern T0* T490f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_resize */
extern void T490f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_modulus */
extern T6 T490f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_capacity */
extern T6 T490f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_put */
extern void T490f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].force */
extern void T1347f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INTERNAL_UNIVERSE].fill_with */
extern void T1348f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTERNAL_UNIVERSE].extend */
extern void T1348f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].search_position */
extern void T490f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_equality_tester */
extern T0* T490f19(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].unset_found_item */
extern void T490f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].has */
extern T1 T490f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make */
extern T0* T490c30(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].set_internal_cursor */
extern void T490f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_cursor */
extern T0* T490f21(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE].make */
extern T0* T1345c4(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_slots */
extern void T490f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_clashes */
extern void T490f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_key_storage */
extern void T490f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_item_storage */
extern void T490f34(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].make */
extern T0* T1347f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_INTERNAL_UNIVERSE].make_empty */
extern T0* T1348c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].default_create */
extern T0* T1347c3(GE_context* ac);
/* ET_LACE_SYSTEM.build_scm_read_mappings */
extern void T71f169(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.build_scm_read_mappings */
extern T0* T71f169ac1(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.build_scm_read_mapping */
extern void T71f231(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.check_master_class_validity */
extern void T73f98(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_PROCESSOR.check_master_class_validity */
extern T0* T73f98ac1(GE_context* ac, T0* a1);
/* ET_MASTER_CLASS.process */
extern void T485f69(GE_context* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.process_master_class */
extern void T279f4(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.process_master_class */
extern void T270f8(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.check_master_class_validity */
extern void T270f9(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.check_overriding_classes_validity */
extern void T270f12(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0d_error */
extern void T282f499(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_universe_error */
extern void T282f502(GE_context* ac, T0* C, T0* a1);
/* ET_UNIVERSE_ERROR.make_vscn0d */
extern T0* T1796c21(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_MASTER_CLASS.upper_name */
extern T0* T485f49(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vscn_error */
extern T1 T282f167(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vscn0d_error */
extern void T34f499(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_universe_error */
extern void T34f513(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vscn_error */
extern T1 T34f166(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.current_universe */
extern T0* T270f6(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.error_handler */
extern T0* T270f5(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.set_fatal_error */
extern void T270f13(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.check_intrinsic_classes_validity */
extern void T270f11(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.check_overridden_class_validity */
extern void T270f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0c_error */
extern void T282f501(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNIVERSE_ERROR.make_vscn0c */
extern T0* T1796c23(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vscn0c_error */
extern void T34f501(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vscn0b_error */
extern void T282f500(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNIVERSE_ERROR.make_vscn0b */
extern T0* T1796c22(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vscn0b_error */
extern void T34f500(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vscn0a_error */
extern void T282f498(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNIVERSE_ERROR.make_vscn0a */
extern T0* T1796c20(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vscn0a_error */
extern void T34f498(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_MASTER_CLASS_CHECKER.reset_fatal_error */
extern void T270f10(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.preparse_recursive */
extern void T71f159p1(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f159p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f159p1ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f159p1ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f159p1ac4(GE_context* ac, T0* a1);
/* Creation of agent #5 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f159p1ac5(GE_context* ac, T0* a1);
/* Creation of agent #6 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f159p1ac6(GE_context* ac, T0* a1);
/* Creation of agent #7 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f159p1ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f159p1ac8(GE_context* ac);
/* ET_ECF_LIBRARY.import_classes */
extern void T190f195(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T190f195ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T190f195ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T190f195ac3(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T495f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_LIBRARY.export_classes */
extern void T197f22(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_unknown_imported_classes */
extern void T485f66(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.remove_imported_class */
extern void T485f79(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_adapted */
extern void T198f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].do_all */
extern void T631f11(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.import_classes */
extern void T474f169(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LIBRARY.import_classes */
extern T0* T474f169ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_LIBRARY.import_classes */
extern T0* T474f169ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.import_classes */
extern T0* T474f169ac3(GE_context* ac, T0* a1);
/* ET_ECF_LIBRARY.preparse */
extern void T190f194(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.preparse */
extern void T190f194p1(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.preparse */
extern T0* T190f194p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.preparse */
extern T0* T190f194p1ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.preparse */
extern T0* T190f194p1ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_ECF_LIBRARY.preparse */
extern T0* T190f194p1ac4(GE_context* ac, T0* a1);
/* ET_MASTER_CLASS.remove_unknown_local_classes */
extern void T485f65(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.remove_local_ignored_class */
extern void T485f78(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_first */
extern void T277f32(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].delete */
extern void T277f31(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_local_non_override_class */
extern void T485f77(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_local_override_class */
extern void T485f76(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove */
extern void T277f28(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].move_left */
extern void T277f35(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_cursors_left */
extern void T277f34(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_last */
extern void T277f33(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_last_cursors_after */
extern void T277f36(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.reset_local_modified_classes */
extern void T485f64(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T485f64ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T485f64ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T485f64ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T485f64ac4(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #5 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T485f64ac5(GE_context* ac);
/* ET_MASTER_CLASS.reset_local_modified_class */
extern void T485f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.file_time_stamp */
extern T6 T122f29(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.file_time_stamp */
extern T6 T121f32(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.file_system */
extern T0* T485f32(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.unix_file_system */
extern T0* T485f45(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.windows_file_system */
extern T0* T485f44(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.operating_system */
extern T0* T485f43(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_parsed_and_errors */
extern void T83f292(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_parsed */
extern void T83f293(GE_context* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.reset */
extern void T811f10(GE_context* ac, T0* C);
/* ET_CONVERT_PROCEDURE.reset */
extern void T1251f10(GE_context* ac, T0* C);
/* ET_BRACED_TYPE_LIST.reset */
extern void T1339f12(GE_context* ac, T0* C);
/* ET_CONVERT_FUNCTION.reset */
extern void T1250f9(GE_context* ac, T0* C);
/* ET_CREATOR_LIST.reset */
extern void T819f11(GE_context* ac, T0* C);
/* ET_CREATOR.reset */
extern void T816f19(GE_context* ac, T0* C);
/* ET_INVARIANTS.reset */
extern void T910f34(GE_context* ac, T0* C);
/* ET_INVARIANTS.reset */
extern void T910f34p1(GE_context* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.reset */
extern void T948f8(GE_context* ac, T0* C);
/* ET_PARENT_LIST.reset */
extern void T482f14(GE_context* ac, T0* C);
/* ET_PARENT.reset */
extern void T481f12(GE_context* ac, T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.reset */
extern void T511f10(GE_context* ac, T0* C);
/* ET_EXPORT_LIST.reset */
extern void T510f9(GE_context* ac, T0* C);
/* ET_FEATURE_EXPORT.reset */
extern void T857f13(GE_context* ac, T0* C);
/* ET_ALL_EXPORT.reset */
extern void T1248f8(GE_context* ac, T0* C);
/* ET_RENAME_LIST.reset */
extern void T509f10(GE_context* ac, T0* C);
/* ET_RENAME.reset */
extern void T1247f7(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.reset */
extern void T266f11(GE_context* ac, T0* C);
/* ET_QUERY_LIST.reset */
extern void T265f11(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.local_ignored_classes_do_all */
extern void T485f74(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].do_all */
extern void T277f29(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_non_override_classes_do_all */
extern void T485f73(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_override_classes_do_all */
extern void T485f72(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTERS.do_all */
extern void T1133f4(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.preparse */
extern void T474f168(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.preparse */
extern void T474f168p1(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.preparse */
extern T0* T474f168p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.preparse */
extern T0* T474f168p1ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.preparse */
extern T0* T474f168p1ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_LIBRARY.preparse */
extern T0* T474f168p1ac4(GE_context* ac, T0* a1);
/* ET_DOTNET_ASSEMBLIES.put_last */
extern void T463f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].force_last */
extern void T1337f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].resize */
extern void T1337f15(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1337f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].extendible */
extern T1 T1337f7(GE_context* ac, T0* C, T6 a1);
/* [attached] PREDICATE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T466f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern void T71f174(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac4(GE_context* ac);
/* Creation of agent #5 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac5(GE_context* ac);
/* Creation of agent #6 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac6(GE_context* ac);
/* Creation of agent #7 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac8(GE_context* ac);
/* Creation of agent #9 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac9(GE_context* ac);
/* Creation of agent #10 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac10(GE_context* ac);
/* Creation of agent #11 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac11(GE_context* ac);
/* Creation of agent #12 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac12(GE_context* ac);
/* Creation of agent #13 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac13(GE_context* ac);
/* Creation of agent #14 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac14(GE_context* ac);
/* Creation of agent #15 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac15(GE_context* ac);
/* Creation of agent #16 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac16(GE_context* ac);
/* Creation of agent #17 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac17(GE_context* ac);
/* Creation of agent #18 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac18(GE_context* ac);
/* Creation of agent #19 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac19(GE_context* ac);
/* Creation of agent #20 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac20(GE_context* ac);
/* Creation of agent #21 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac21(GE_context* ac);
/* Creation of agent #22 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac22(GE_context* ac);
/* Creation of agent #23 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac23(GE_context* ac, T0* a1);
/* Creation of agent #24 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac24(GE_context* ac);
/* Creation of agent #25 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac25(GE_context* ac, T0* a1);
/* Creation of agent #26 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac26(GE_context* ac);
/* Creation of agent #27 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac27(GE_context* ac, T0* a1);
/* Creation of agent #28 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac28(GE_context* ac);
/* Creation of agent #29 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac29(GE_context* ac, T0* a1);
/* Creation of agent #30 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac30(GE_context* ac);
/* Creation of agent #31 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f174ac31(GE_context* ac, T1 a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.process_class */
extern void T499f6(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.internal_process_class */
extern void T499f8(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_providers_validity */
extern void T499f10(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].go_after */
extern void T1353f15(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_go_after */
extern void T672f73(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_interface_error */
extern T1 T485f37(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.interface_checked */
extern T1 T485f36(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_suppliers_validity */
extern void T499f9(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.set_fatal_error */
extern void T499f7(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.error_handler */
extern T0* T499f4(GE_context* ac, T0* C);
/* ET_CLASS.unset_implementation_error */
extern void T83f300(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.process_class */
extern void T498f8(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.internal_process_class */
extern void T498f10(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_parents_validity */
extern void T498f13(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_type_validity */
extern void T1352f3(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_formal_parameters_validity */
extern void T498f12(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.check_qualified_anchored_signatures_validity */
extern void T498f11(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_signatures_validity */
extern void T1351f6(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_feature_signatures_validity */
extern void T1351f7(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.set_fatal_error */
extern void T498f9(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.error_handler */
extern T0* T498f6(GE_context* ac, T0* C);
/* ET_CLASS.unset_interface_error */
extern void T83f299(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.process_class */
extern void T497f7(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.internal_process_class */
extern void T497f9(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_signatures_validity */
extern void T497f12(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_feature_signatures_validity */
extern void T497f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_type_validity */
extern void T1350f3(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_parents_validity */
extern void T497f11(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_formal_parameters_validity */
extern void T497f10(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.set_fatal_error */
extern void T497f8(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.error_handler */
extern T0* T497f5(GE_context* ac, T0* C);
/* ET_CLASS.unset_flattening_error */
extern void T83f298(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.process_class */
extern void T496f7(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.internal_process_class */
extern void T496f9(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_parents_validity */
extern void T496f11(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_type_validity */
extern void T1349f3(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_formal_parameters_validity */
extern void T496f10(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.set_fatal_error */
extern void T496f8(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.error_handler */
extern T0* T496f5(GE_context* ac, T0* C);
/* ET_CLASS.unset_ancestors_error */
extern void T83f297(GE_context* ac, T0* C);
/* ET_CLASS.not_implementation_checked */
extern T1 T83f175(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_interface_checked */
extern void T83f296(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.reset_after_interface_checked */
extern void T266f13(GE_context* ac, T0* C);
/* ET_QUERY_LIST.reset_after_interface_checked */
extern void T265f13(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_features_flattened */
extern void T83f295(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_constraint_creation_procedures */
extern void T650f33(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_constraint_creation_procedures */
extern void T872f79(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.reset_after_features_flattened */
extern void T266f12(GE_context* ac, T0* C);
/* ET_QUERY_LIST.reset_after_features_flattened */
extern void T265f12(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_ancestors_built */
extern void T83f294(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_system_processor */
extern T0* T82f91(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.local_classes_do_unless_actual */
extern void T485f67(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_non_override_classes_do_unless_actual */
extern void T485f81(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_override_classes_do_unless_actual */
extern void T485f80(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.make */
extern T0* T499c5(GE_context* ac, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.tokens */
extern T0* T499f3(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern T0* T498c7(GE_context* ac, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.make */
extern T0* T1352c2(GE_context* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.make */
extern T0* T1351c5(GE_context* ac, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.tokens */
extern T0* T1351f4(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern void T498f7p1(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.tokens */
extern T0* T498f5(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern T0* T497c6(GE_context* ac, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.make */
extern T0* T1350c2(GE_context* ac);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern void T497f6p1(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.tokens */
extern T0* T497f4(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern T0* T496c6(GE_context* ac, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.make */
extern T0* T1349c2(GE_context* ac);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern void T496f6p1(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.tokens */
extern T0* T496f4(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.classes_do_if_recursive */
extern void T71f237(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_if_recursive */
extern T0* T71f237ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.master_classes_do_recursive */
extern void T71f236(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.master_classes_do_recursive */
extern T0* T71f236ac1(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.classes_modified_recursive */
extern T1 T71f137(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T71f137ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T71f137ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T71f137ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T71f137ac4(GE_context* ac, T0* a1);
/* [attached] PREDICATE [[attached] TUPLE].set_rout_disp_final */
extern void T1152f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [attached] PREDICATE [[attached] TUPLE [ET_MASTER_CLASS]].set_rout_disp_final */
extern void T1151f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* KL_AGENT_ROUTINES [ANY].call */
extern void T1148f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.master_classes_do_if_recursive_until */
extern void T71f240(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T71f240ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T71f240ac2(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_SYSTEM.any_actions */
extern T0* T71f125(GE_context* ac, T0* C);
/* KL_AGENT_ROUTINES [ANY].default_create */
extern T0* T1148c1(GE_context* ac);
/* UT_TRISTATE.make_false */
extern T0* T1147c5(GE_context* ac);
/* ET_LACE_SYSTEM.import_classes */
extern void T71f173(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.import_classes */
extern T0* T71f173ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.import_classes */
extern T0* T71f173ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.import_classes */
extern T0* T71f173ac3(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.preparse */
extern void T71f172(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.preparse */
extern T0* T71f172ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.preparse */
extern T0* T71f172ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.preparse */
extern T0* T71f172ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.preparse */
extern T0* T71f172ac4(GE_context* ac, T0* a1);
/* ET_LACE_CLUSTERS.do_all */
extern void T215f8(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_recursive */
extern void T191f7(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_LIBRARIES.do_recursive */
extern T0* T191f7ac1(GE_context* ac, T0* a1);
/* ET_ECF_LIBRARY.add_library_recursive */
extern void T190f198(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_library_recursive */
extern T0* T190f198ac1(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].force_last */
extern void T629f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].slots_put */
extern void T629f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_LIBRARY].clashes_put */
extern void T629f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_LIBRARY].slots_item */
extern T6 T629f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].hash_position */
extern T6 T629f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].resize */
extern void T629f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].clashes_resize */
extern void T629f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].special_integer_ */
extern T0* T629f27(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].key_storage_resize */
extern void T629f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_resize */
extern void T629f45(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].aliased_resized_area */
extern T0* T1389f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIBRARY].aliased_resized_area */
extern T0* T1390f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].key_storage_item */
extern T0* T629f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_item */
extern T0* T629f17(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].clashes_item */
extern T6 T629f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].slots_resize */
extern void T629f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].new_modulus */
extern T6 T629f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].new_capacity */
extern T6 T629f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_put */
extern void T629f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].force */
extern void T1389f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LIBRARY].fill_with */
extern void T1390f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIBRARY].extend */
extern void T1390f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].search_position */
extern void T629f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].key_equality_tester */
extern T0* T629f25(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].unset_found_item */
extern void T629f36(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].has */
extern T1 T629f18(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.add_library_recursive */
extern void T474f172(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_library_recursive */
extern T0* T474f172ac1(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].do_all */
extern void T629f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].make */
extern T0* T629c30(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].set_internal_cursor */
extern void T629f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].new_cursor */
extern T0* T629f24(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_LIBRARY].make */
extern T0* T1388c4(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].make_slots */
extern void T629f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_clashes */
extern void T629f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_key_storage */
extern void T629f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_item_storage */
extern void T629f32(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].make */
extern T0* T1389f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LIBRARY].make_empty */
extern T0* T1390c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].default_create */
extern T0* T1389c3(GE_context* ac);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern void T198f7(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern T0* T198f7ac1(GE_context* ac, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assemblies */
extern void T284f4(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T463f2(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_ASSEMBLIES.count */
extern T6 T463f3(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].do_all */
extern void T462f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make */
extern T0* T462c30(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T462f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T462f17(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY].make */
extern T0* T1333c4(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_slots */
extern void T462f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_clashes */
extern void T462f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_key_storage */
extern void T462f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_item_storage */
extern void T462f33(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.preparse_recursive */
extern void T65f158(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.build_scm_write_mappings */
extern void T65f169(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.build_scm_write_mappings */
extern T0* T65f169ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.build_scm_write_mapping */
extern void T65f184(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern void T65f183(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern T0* T65f183ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.internal_universes_do_recursive */
extern void T65f170(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.add_internal_universe_recursive */
extern void T65f185(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.add_internal_universe_recursive */
extern T0* T65f185ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.build_scm_read_mappings */
extern void T65f168(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.build_scm_read_mappings */
extern T0* T65f168ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.build_scm_read_mapping */
extern void T65f182(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.preparse_recursive */
extern void T65f158p1(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f158p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f158p1ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f158p1ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f158p1ac4(GE_context* ac, T0* a1);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f158p1ac5(GE_context* ac, T0* a1);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f158p1ac6(GE_context* ac, T0* a1);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f158p1ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f158p1ac8(GE_context* ac);
/* ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern void T65f173(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac4(GE_context* ac);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac5(GE_context* ac);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac6(GE_context* ac);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac8(GE_context* ac);
/* Creation of agent #9 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac9(GE_context* ac);
/* Creation of agent #10 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac10(GE_context* ac);
/* Creation of agent #11 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac11(GE_context* ac);
/* Creation of agent #12 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac12(GE_context* ac);
/* Creation of agent #13 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac13(GE_context* ac);
/* Creation of agent #14 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac14(GE_context* ac);
/* Creation of agent #15 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac15(GE_context* ac);
/* Creation of agent #16 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac16(GE_context* ac);
/* Creation of agent #17 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac17(GE_context* ac);
/* Creation of agent #18 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac18(GE_context* ac);
/* Creation of agent #19 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac19(GE_context* ac);
/* Creation of agent #20 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac20(GE_context* ac);
/* Creation of agent #21 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac21(GE_context* ac);
/* Creation of agent #22 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac22(GE_context* ac);
/* Creation of agent #23 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac23(GE_context* ac, T0* a1);
/* Creation of agent #24 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac24(GE_context* ac);
/* Creation of agent #25 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac25(GE_context* ac, T0* a1);
/* Creation of agent #26 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac26(GE_context* ac);
/* Creation of agent #27 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac27(GE_context* ac, T0* a1);
/* Creation of agent #28 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac28(GE_context* ac);
/* Creation of agent #29 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac29(GE_context* ac, T0* a1);
/* Creation of agent #30 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac30(GE_context* ac);
/* Creation of agent #31 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f173ac31(GE_context* ac, T1 a1);
/* ET_ECF_SYSTEM.classes_do_if_recursive */
extern void T65f188(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_if_recursive */
extern T0* T65f188ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_recursive */
extern void T65f187(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_recursive */
extern T0* T65f187ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.classes_modified_recursive */
extern T1 T65f143(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T65f143ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T65f143ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T65f143ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T65f143ac4(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern void T65f245(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T65f245ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T65f245ac2(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.any_actions */
extern T0* T65f133(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.import_classes */
extern void T65f172(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T65f172ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T65f172ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T65f172ac3(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.preparse */
extern void T65f171(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.preparse */
extern T0* T65f171ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.preparse */
extern T0* T65f171ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.preparse */
extern T0* T65f171ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.preparse */
extern T0* T65f171ac4(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.preparse_recursive */
extern void T62f155(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.build_scm_write_mappings */
extern void T62f178(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.build_scm_write_mappings */
extern T0* T62f178ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.build_scm_write_mapping */
extern void T62f242(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.clusters_do_explicit_recursive */
extern void T62f241(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.clusters_do_explicit_recursive */
extern T0* T62f241ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.internal_universes_do_recursive */
extern void T62f179(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.add_internal_universe_recursive */
extern void T62f243(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.add_internal_universe_recursive */
extern T0* T62f243ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.build_scm_read_mappings */
extern void T62f177(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.build_scm_read_mappings */
extern T0* T62f177ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.build_scm_read_mapping */
extern void T62f240(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.preparse_recursive */
extern void T62f155p1(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f155p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f155p1ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f155p1ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f155p1ac4(GE_context* ac, T0* a1);
/* Creation of agent #5 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f155p1ac5(GE_context* ac, T0* a1);
/* Creation of agent #6 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f155p1ac6(GE_context* ac, T0* a1);
/* Creation of agent #7 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f155p1ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f155p1ac8(GE_context* ac);
/* ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern void T62f182(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac4(GE_context* ac);
/* Creation of agent #5 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac5(GE_context* ac);
/* Creation of agent #6 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac6(GE_context* ac);
/* Creation of agent #7 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac8(GE_context* ac);
/* Creation of agent #9 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac9(GE_context* ac);
/* Creation of agent #10 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac10(GE_context* ac);
/* Creation of agent #11 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac11(GE_context* ac);
/* Creation of agent #12 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac12(GE_context* ac);
/* Creation of agent #13 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac13(GE_context* ac);
/* Creation of agent #14 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac14(GE_context* ac);
/* Creation of agent #15 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac15(GE_context* ac);
/* Creation of agent #16 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac16(GE_context* ac);
/* Creation of agent #17 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac17(GE_context* ac);
/* Creation of agent #18 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac18(GE_context* ac);
/* Creation of agent #19 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac19(GE_context* ac);
/* Creation of agent #20 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac20(GE_context* ac);
/* Creation of agent #21 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac21(GE_context* ac);
/* Creation of agent #22 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac22(GE_context* ac);
/* Creation of agent #23 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac23(GE_context* ac, T0* a1);
/* Creation of agent #24 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac24(GE_context* ac);
/* Creation of agent #25 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac25(GE_context* ac, T0* a1);
/* Creation of agent #26 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac26(GE_context* ac);
/* Creation of agent #27 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac27(GE_context* ac, T0* a1);
/* Creation of agent #28 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac28(GE_context* ac);
/* Creation of agent #29 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac29(GE_context* ac, T0* a1);
/* Creation of agent #30 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac30(GE_context* ac);
/* Creation of agent #31 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f182ac31(GE_context* ac, T1 a1);
/* ET_XACE_SYSTEM.classes_do_if_recursive */
extern void T62f246(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_if_recursive */
extern T0* T62f246ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.master_classes_do_recursive */
extern void T62f245(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.master_classes_do_recursive */
extern T0* T62f245ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.classes_modified_recursive */
extern T1 T62f143(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T62f143ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T62f143ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T62f143ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T62f143ac4(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.master_classes_do_if_recursive_until */
extern void T62f250(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T62f250ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T62f250ac2(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM.any_actions */
extern T0* T62f144(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.import_classes */
extern void T62f181(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.import_classes */
extern T0* T62f181ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.import_classes */
extern T0* T62f181ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.import_classes */
extern T0* T62f181ac3(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.preparse */
extern void T62f180(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.preparse */
extern T0* T62f180ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.preparse */
extern T0* T62f180ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.preparse */
extern T0* T62f180ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.preparse */
extern T0* T62f180ac4(GE_context* ac, T0* a1);
/* ET_XACE_CLUSTERS.do_all */
extern void T436f7(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.master_classes_do_recursive_until */
extern void T71f168(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T71f168ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T71f168ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern void T65f167(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T65f167ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T65f167ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.master_classes_do_recursive_until */
extern void T62f249(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T62f249ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T62f249ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.set_default_create_seed */
extern void T71f242(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_default_create_seed */
extern void T65f247(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_default_create_seed */
extern void T62f251(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_default_create_seed */
extern void T35f198(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_copy_seed */
extern void T71f243(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_copy_seed */
extern void T65f248(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_copy_seed */
extern void T62f252(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_copy_seed */
extern void T35f199(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_is_equal_seed */
extern void T71f244(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_is_equal_seed */
extern void T65f249(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_is_equal_seed */
extern void T62f253(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_is_equal_seed */
extern void T35f200(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_routine_call_seed */
extern void T71f245(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_routine_call_seed */
extern void T65f250(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_routine_call_seed */
extern void T62f254(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_routine_call_seed */
extern void T35f201(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_function_item_seed */
extern void T71f246(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_function_item_seed */
extern void T65f251(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_function_item_seed */
extern void T62f255(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_function_item_seed */
extern void T35f202(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_dispose_seed */
extern void T71f247(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_dispose_seed */
extern void T65f252(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_dispose_seed */
extern void T62f256(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_dispose_seed */
extern void T35f203(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_iterable_new_cursor_seed */
extern void T71f248(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iterable_new_cursor_seed */
extern void T65f253(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_iterable_new_cursor_seed */
extern void T62f257(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iterable_new_cursor_seed */
extern void T35f204(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_iteration_cursor_after_seed */
extern void T71f249(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iteration_cursor_after_seed */
extern void T65f254(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_iteration_cursor_after_seed */
extern void T62f258(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iteration_cursor_after_seed */
extern void T35f205(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_iteration_cursor_forth_seed */
extern void T71f250(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iteration_cursor_forth_seed */
extern void T65f255(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_iteration_cursor_forth_seed */
extern void T62f259(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iteration_cursor_forth_seed */
extern void T35f206(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.register_feature */
extern void T71f251(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.register_feature */
extern void T65f256(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.register_feature */
extern void T62f260(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.register_feature */
extern void T35f207(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.register_class */
extern void T71f238(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_id */
extern void T83f244(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.register_class */
extern void T65f243(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.register_class */
extern void T62f247(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.register_class */
extern void T35f195(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.register_inline_constant */
extern void T71f252(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.set_id */
extern void T1294f27(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.register_inline_constant */
extern void T65f257(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.register_inline_constant */
extern void T62f261(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.register_inline_constant */
extern void T35f208(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_throwing_exception */
extern void T120f7(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_throwing_exception */
extern void T119f7(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_throwing_exception */
extern void T118f11(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_throwing_exception */
extern void T117f7(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_throwing_exception */
extern void T116f7(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_throwing_exception */
extern void T115f7(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_throwing_exception */
extern void T114f7(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_throwing_exception */
extern void T113f7(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_throwing_exception */
extern void T112f7(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_throwing_exception */
extern void T111f7(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_throwing_exception */
extern void T110f7(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_throwing_exception */
extern void T109f7(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_throwing_exception */
extern void T108f7(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_throwing_exception */
extern void T107f7(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_throwing_exception */
extern void T106f7(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_throwing_exception */
extern void T105f7(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_throwing_exception */
extern void T104f7(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_throwing_exception */
extern void T101f10(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_throwing_exception */
extern void T100f13(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_throwing_exception */
extern void T99f8(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_throwing_exception */
extern void T98f10(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_throwing_exception */
extern void T97f8(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_throwing_exception */
extern void T96f8(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_throwing_exception */
extern void T95f11(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_throwing_exception */
extern void T93f7(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_throwing_exception */
extern void T91f11(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_throwing_exception */
extern void T89f7(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_exception_trace */
extern void T120f8(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_exception_trace */
extern void T119f8(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_exception_trace */
extern void T118f12(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_exception_trace */
extern void T117f8(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_exception_trace */
extern void T116f8(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_exception_trace */
extern void T115f8(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_exception_trace */
extern void T114f8(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_exception_trace */
extern void T113f8(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_exception_trace */
extern void T112f8(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_exception_trace */
extern void T111f8(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_exception_trace */
extern void T110f8(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_exception_trace */
extern void T109f8(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_exception_trace */
extern void T108f8(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_exception_trace */
extern void T107f8(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_exception_trace */
extern void T106f8(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_exception_trace */
extern void T105f8(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_exception_trace */
extern void T104f8(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_exception_trace */
extern void T101f11(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_exception_trace */
extern void T100f16(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_exception_trace */
extern void T99f10(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_exception_trace */
extern void T98f12(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_exception_trace */
extern void T97f10(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_exception_trace */
extern void T96f10(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_exception_trace */
extern void T95f9(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_exception_trace */
extern void T93f8(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_exception_trace */
extern void T91f12(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_exception_trace */
extern void T89f8(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_description */
extern void T120f9(GE_context* ac, T0* C, T0* a1);
/* C_STRING.set_count */
extern void T29f8(GE_context* ac, T0* C, T6 a1);
/* UTF_CONVERTER.utf_32_string_into_utf_8_0_pointer */
extern void T541f12(GE_context* ac, T541* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_description */
extern void T119f9(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_description */
extern void T118f13(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_description */
extern void T117f9(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_description */
extern void T116f9(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_description */
extern void T115f9(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_description */
extern void T114f9(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_description */
extern void T113f9(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_description */
extern void T112f9(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_description */
extern void T111f9(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_description */
extern void T110f9(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_description */
extern void T109f9(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_description */
extern void T108f9(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_description */
extern void T107f9(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_description */
extern void T106f9(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_description */
extern void T105f9(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_description */
extern void T104f9(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_description */
extern void T101f12(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_description */
extern void T100f17(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_description */
extern void T99f11(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_description */
extern void T98f13(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_description */
extern void T97f11(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_description */
extern void T96f11(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_description */
extern void T95f12(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_description */
extern void T93f9(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_description */
extern void T91f13(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_description */
extern void T89f9(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_recipient_name */
extern void T120f10(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_recipient_name */
extern void T119f10(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_recipient_name */
extern void T118f14(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_recipient_name */
extern void T117f10(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_recipient_name */
extern void T116f10(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_recipient_name */
extern void T115f10(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_recipient_name */
extern void T114f10(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_recipient_name */
extern void T113f10(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_recipient_name */
extern void T112f10(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_recipient_name */
extern void T111f10(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_recipient_name */
extern void T110f10(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_recipient_name */
extern void T109f10(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_recipient_name */
extern void T108f10(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_recipient_name */
extern void T107f10(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_recipient_name */
extern void T106f10(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_recipient_name */
extern void T105f10(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_recipient_name */
extern void T104f10(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_recipient_name */
extern void T101f13(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_recipient_name */
extern void T100f18(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_recipient_name */
extern void T99f12(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_recipient_name */
extern void T98f14(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_recipient_name */
extern void T97f12(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_recipient_name */
extern void T96f12(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_recipient_name */
extern void T95f13(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_recipient_name */
extern void T93f10(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_recipient_name */
extern void T91f14(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_recipient_name */
extern void T89f10(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_type_name */
extern void T120f11(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_type_name */
extern void T119f11(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_type_name */
extern void T118f15(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_type_name */
extern void T117f11(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_type_name */
extern void T116f11(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_type_name */
extern void T115f11(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_type_name */
extern void T114f11(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_type_name */
extern void T113f11(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_type_name */
extern void T112f11(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_type_name */
extern void T111f11(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_type_name */
extern void T110f11(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_type_name */
extern void T109f11(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_type_name */
extern void T108f11(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_type_name */
extern void T107f11(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_type_name */
extern void T106f11(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_type_name */
extern void T105f11(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_type_name */
extern void T104f11(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_type_name */
extern void T101f14(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_type_name */
extern void T100f19(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_type_name */
extern void T99f13(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_type_name */
extern void T98f15(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_type_name */
extern void T97f13(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_type_name */
extern void T96f13(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_type_name */
extern void T95f14(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_type_name */
extern void T93f11(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_type_name */
extern void T91f15(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_type_name */
extern void T89f11(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T1884f3(GE_context* ac, T0* C, T6 a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T1882f2(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T1880f3(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_TYPE.name */
extern T0* T1270f40(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.name */
extern T0* T1269f39(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.name */
extern T0* T1801f17(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.name */
extern T0* T1281f7(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.name */
extern T0* T972f10(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.name */
extern T0* T350f3(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.arguments */
extern T0* T1801f14(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.target */
extern T0* T1504f5(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.target */
extern T0* T309f12(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_once_per_process */
extern T1 T1299f25(GE_context* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.has_process_key */
extern T1 T1585f1(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_once_per_process */
extern T1 T1298f23(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_once_per_process */
extern T1 T1296f26(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_once_per_process */
extern T1 T1295f24(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.target */
extern T0* T1271f7(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_freeop */
extern T1 T1263f10(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_freeop */
extern T1 T1260f31(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_freeop */
extern T1 T697f20(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.operator_name */
extern T0* T1263f11(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.operator_name */
extern T0* T1260f34(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.operator_name */
extern T0* T1192f23(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.position */
extern T0* T1263f38(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.position */
extern T0* T750f58(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.position */
extern T0* T676f9(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.full_name */
extern T0* T1157f31(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.relative_name */
extern T0* T1157f48(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_CLUSTER.relative_name */
extern T0* T1157f48p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.relative_name */
extern T0* T190f107(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.string_ */
extern T0* T190f108(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].is_empty */
extern T1 T1211f10(GE_context* ac, T0* C);
/* ET_NONE_GROUP.full_name */
extern T0* T516f16(GE_context* ac, T0* C, T2 a1);
/* ET_NONE_GROUP.relative_name */
extern T0* T516f19(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.string_ */
extern T0* T516f15(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.full_name */
extern T0* T435f30(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_CLUSTER.relative_name */
extern T0* T435f47(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_CLUSTER.relative_name */
extern T0* T435f47p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.full_name */
extern T0* T418f17(GE_context* ac, T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.relative_name */
extern T0* T418f20(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.string_ */
extern T0* T418f16(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.full_name */
extern T0* T216f50(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_CLUSTER.relative_name */
extern T0* T216f52(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_CLUSTER.relative_name */
extern T0* T216f52p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.parent */
extern T0* T516f17(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.parent */
extern T0* T418f18(GE_context* ac, T0* C);
/* ET_NONE_GROUP.absolute_pathname */
extern T0* T516f18(GE_context* ac, T0* C);
/* ET_NONE_GROUP.file_system */
extern T0* T516f23(GE_context* ac, T0* C);
/* ET_NONE_GROUP.unix_file_system */
extern T0* T516f27(GE_context* ac, T0* C);
/* ET_NONE_GROUP.windows_file_system */
extern T0* T516f26(GE_context* ac, T0* C);
/* ET_NONE_GROUP.operating_system */
extern T0* T516f25(GE_context* ac, T0* C);
/* ET_NONE_GROUP.full_pathname */
extern T0* T516f22(GE_context* ac, T0* C);
/* ET_NONE_GROUP.pathname */
extern T0* T516f24(GE_context* ac, T0* C);
/* ET_NONE_GROUP.execution_environment */
extern T0* T516f21(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.absolute_pathname */
extern T0* T418f19(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.file_system */
extern T0* T418f24(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.unix_file_system */
extern T0* T418f28(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.windows_file_system */
extern T0* T418f27(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.operating_system */
extern T0* T418f26(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.full_pathname */
extern T0* T418f23(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.pathname */
extern T0* T418f25(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.execution_environment */
extern T0* T418f22(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.kind_lower_name */
extern T0* T1157f38(GE_context* ac, T0* C);
/* ET_LIBRARY.kind_lower_name */
extern T0* T474f98(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.kind_lower_name */
extern T0* T435f37(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.kind_lower_name */
extern T0* T216f49(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.kind_lower_name */
extern T0* T190f109(GE_context* ac, T0* C);
/* ET_AST_NULL_LEAF.last_position */
extern T0* T1863f4(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_position */
extern T0* T1237f41(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.last_position */
extern T0* T1236f41(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.last_position */
extern T0* T1235f38(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.last_position */
extern T0* T1234f38(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_position */
extern T0* T1232f40(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_position */
extern T0* T1231f40(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.last_position */
extern T0* T1230f69(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.last_position */
extern T0* T1229f69(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_position */
extern T0* T1228f69(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_position */
extern T0* T1227f69(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_position */
extern T0* T1226f69(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_position */
extern T0* T1225f37(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.last_position */
extern T0* T1224f41(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_position */
extern T0* T1223f42(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_position */
extern T0* T1191f38(GE_context* ac, T0* C);
/* ET_VOID.last_position */
extern T0* T719f28(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.last_position */
extern T0* T679f17(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.last_position */
extern T0* T655f101(GE_context* ac, T0* C);
/* ET_KEYWORD.last_position */
extern T0* T421f35(GE_context* ac, T0* C);
/* ET_SYMBOL.last_position */
extern T0* T369f71(GE_context* ac, T0* C);
/* ET_RESULT.last_position */
extern T0* T331f29(GE_context* ac, T0* C);
/* ET_CURRENT.last_position */
extern T0* T303f26(GE_context* ac, T0* C);
/* ET_IDENTIFIER.last_position */
extern T0* T183f100(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].item */
extern T0* T1562f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].item */
extern T0* T1325f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].item */
extern T0* T637f9(GE_context* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.selected_count */
extern T6 T1309f25(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.selected_count */
extern T6 T1024f27(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.has_replication */
extern T1 T1309f22(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.has_replication */
extern T1 T1024f24(GE_context* ac, T0* C);
/* ET_REPLICATED_FEATURE.replicated_feature */
extern T0* T1439f4(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.replicated_feature */
extern T0* T1309f23(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.replicated_feature */
extern T0* T1024f25(GE_context* ac, T0* C);
/* ET_REPLICATED_FEATURE.first_feature */
extern T0* T1439f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].first */
extern T0* T1440f8(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.first_feature */
extern T0* T1309f24(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.first_feature */
extern T0* T1024f26(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T1416f35(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T1242f38(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T872f35(GE_context* ac, T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.assertion */
extern T0* T1304f3(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1300f24(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1299f30(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1298f27(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1297f26(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1296f31(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1295f28(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.assertion */
extern T0* T1294f13(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.assertion */
extern T0* T1293f19(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.assertion */
extern T0* T1292f12(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.assertion */
extern T0* T1291f17(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.assertion */
extern T0* T1290f13(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.assertion */
extern T0* T1287f15(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.assertion */
extern T0* T1286f12(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.assertion */
extern T0* T1285f12(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.assertion */
extern T0* T1284f12(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.assertion */
extern T0* T1283f12(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.assertion */
extern T0* T1282f16(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.assertion */
extern T0* T1237f20(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.assertion */
extern T0* T1236f20(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.assertion */
extern T0* T1235f21(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.assertion */
extern T0* T1234f21(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.assertion */
extern T0* T1232f23(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.assertion */
extern T0* T1231f23(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.assertion */
extern T0* T1230f47(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.assertion */
extern T0* T1229f47(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.assertion */
extern T0* T1228f47(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.assertion */
extern T0* T1227f47(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.assertion */
extern T0* T1226f47(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.assertion */
extern T0* T1225f15(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.assertion */
extern T0* T1224f15(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.assertion */
extern T0* T1223f13(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.assertion */
extern T0* T1191f21(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.assertion */
extern T0* T1111f16(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.assertion */
extern T0* T975f17(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.assertion */
extern T0* T972f16(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.assertion */
extern T0* T943f13(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.assertion */
extern T0* T929f17(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.assertion */
extern T0* T880f18(GE_context* ac, T0* C);
/* ET_CALL_AGENT.assertion */
extern T0* T759f18(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.assertion */
extern T0* T756f16(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.assertion */
extern T0* T730f23(GE_context* ac, T0* C);
/* ET_VOID.assertion */
extern T0* T719f17(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.assertion */
extern T0* T349f18(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.assertion */
extern T0* T340f12(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.assertion */
extern T0* T339f13(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.assertion */
extern T0* T338f15(GE_context* ac, T0* C);
/* ET_RESULT.assertion */
extern T0* T331f20(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.assertion */
extern T0* T311f19(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T309f14(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T308f17(GE_context* ac, T0* C);
/* ET_CURRENT.assertion */
extern T0* T303f20(GE_context* ac, T0* C);
/* ET_IDENTIFIER.assertion */
extern T0* T183f81(GE_context* ac, T0* C);
/* ET_TAGGED_ASSERTION.position */
extern T0* T1304f4(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.lower_name */
extern T0* T464f96(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.lower_name */
extern T0* T231f110(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.lower_name */
extern T0* T218f103(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.lower_name */
extern T0* T201f13(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.lower_name */
extern T0* T199f96(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.lower_name */
extern T0* T197f13(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.parenthesis_call */
extern T0* T1802f19(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.parenthesis_call */
extern T0* T1291f13(GE_context* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.parenthesis_call */
extern T0* T1187f7(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.parenthesis_call */
extern T0* T756f13(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments_count */
extern T6 T1802f20(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.arguments_count */
extern T6 T1291f14(GE_context* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.arguments_count */
extern T6 T1187f8(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.arguments_count */
extern T6 T756f14(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.arguments_count */
extern T6 T308f15(GE_context* ac, T0* C);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_enabled */
extern T1 T1184f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_included */
extern T1 T1184f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.is_enabled */
extern T1 T1182f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.string_ */
extern T0* T1182f5(GE_context* ac, T0* C);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_enabled */
extern T1 T1181f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_CONDITION.is_enabled */
extern T1 T1180f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T1 T1179f3(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T0* T1179f3ac1(GE_context* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST [STRING_8].there_exists */
extern T1 T146f16(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.string_ */
extern T0* T1179f4(GE_context* ac, T0* C);
/* UC_UTF8_STRING.has */
extern T1 T1206f66(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_MULTITHREADED_CONDITION.is_enabled */
extern T1 T1178f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_BUILD_CONDITION.is_enabled */
extern T1 T1177f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_BUILD_CONDITION.string_ */
extern T0* T1177f4(GE_context* ac, T0* C);
/* ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T1 T1176f3(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T0* T1176f3ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_PLATFORM_CONDITION.string_ */
extern T0* T1176f5(GE_context* ac, T0* C);
/* ET_ECF_PLATFORM_CONDITION.operating_system */
extern T0* T1176f4(GE_context* ac, T0* C);
/* ET_ECF_CONDITIONS.is_enabled */
extern T1 T1172f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].item */
extern T0* T1570f9(GE_context* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.immediate_feature */
extern T0* T1309f10(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_immediate_feature */
extern T0* T1258f48(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_immediate_feature */
extern T0* T1257f48(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_immediate_feature */
extern T0* T1255f49(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_immediate_feature */
extern T0* T1254f53(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_immediate_feature */
extern T0* T1253f51(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.immediate_feature */
extern T0* T1024f11(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_immediate_feature */
extern T0* T539f44(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_immediate_feature */
extern T0* T533f46(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_immediate_feature */
extern T0* T387f45(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_immediate_feature */
extern T0* T386f48(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_immediate_feature */
extern T0* T384f47(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_immediate_feature */
extern T0* T355f50(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_immediate_feature */
extern T0* T259f34(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_feature */
extern T0* T1258f46(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_feature */
extern T0* T1257f46(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_feature */
extern T0* T1255f47(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_feature */
extern T0* T1254f51(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_feature */
extern T0* T1253f49(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_feature */
extern T0* T539f42(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_feature */
extern T0* T533f44(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_feature */
extern T0* T387f43(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_feature */
extern T0* T386f46(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_feature */
extern T0* T384f45(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_feature */
extern T0* T355f48(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_feature */
extern T0* T259f63(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_redeclared */
extern T1 T1258f50(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_redeclared */
extern T1 T1257f50(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_redeclared */
extern T1 T1255f51(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_redeclared */
extern T1 T1254f55(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_redeclared */
extern T1 T1253f53(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.is_redeclared */
extern T1 T1024f13(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_redeclared */
extern T1 T539f46(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_redeclared */
extern T1 T533f48(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_redeclared */
extern T1 T387f47(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_redeclared */
extern T1 T386f50(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_redeclared */
extern T1 T384f49(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_redeclared */
extern T1 T355f52(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_redeclared */
extern T1 T259f36(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.redeclared_feature */
extern T0* T1309f13(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_redeclared_feature */
extern T0* T1258f51(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_redeclared_feature */
extern T0* T1257f51(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_redeclared_feature */
extern T0* T1255f52(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_redeclared_feature */
extern T0* T1254f56(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_redeclared_feature */
extern T0* T1253f54(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.redeclared_feature */
extern T0* T1024f14(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_redeclared_feature */
extern T0* T539f47(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_redeclared_feature */
extern T0* T533f49(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T387f48(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T386f51(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T384f50(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T355f53(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_redeclared_feature */
extern T0* T259f37(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_inherited */
extern T1 T1309f14(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_inherited */
extern T1 T1258f52(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_inherited */
extern T1 T1257f52(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_inherited */
extern T1 T1255f53(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_inherited */
extern T1 T1254f57(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_inherited */
extern T1 T1253f55(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_inherited */
extern T1 T539f48(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_inherited */
extern T1 T533f50(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_inherited */
extern T1 T387f49(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_inherited */
extern T1 T386f52(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_inherited */
extern T1 T384f51(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_inherited */
extern T1 T355f54(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_inherited */
extern T1 T259f38(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.inherited_feature */
extern T0* T1309f15(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_inherited_feature */
extern T0* T1258f53(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_inherited_feature */
extern T0* T1257f53(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_inherited_feature */
extern T0* T1255f54(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_inherited_feature */
extern T0* T1254f58(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_inherited_feature */
extern T0* T1253f56(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.inherited_feature */
extern T0* T1024f16(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_inherited_feature */
extern T0* T539f49(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_inherited_feature */
extern T0* T533f51(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_inherited_feature */
extern T0* T387f50(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_inherited_feature */
extern T0* T386f53(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_inherited_feature */
extern T0* T384f52(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_inherited_feature */
extern T0* T355f55(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_inherited_feature */
extern T0* T259f39(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_adapted */
extern T1 T1258f54(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_adapted */
extern T1 T1257f54(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_adapted */
extern T1 T1255f55(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_adapted */
extern T1 T1254f59(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_adapted */
extern T1 T1253f57(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_adapted */
extern T1 T539f50(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_adapted */
extern T1 T533f52(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_adapted */
extern T1 T387f51(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_adapted */
extern T1 T386f54(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_adapted */
extern T1 T384f53(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_adapted */
extern T1 T355f56(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_adapted */
extern T1 T259f40(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.adapted_feature */
extern T0* T1309f11(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_adapted_feature */
extern T0* T1258f49(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_adapted_feature */
extern T0* T1257f49(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_adapted_feature */
extern T0* T1255f50(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_adapted_feature */
extern T0* T1254f54(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_adapted_feature */
extern T0* T1253f52(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.adapted_feature */
extern T0* T1024f12(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_adapted_feature */
extern T0* T539f45(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_adapted_feature */
extern T0* T533f47(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_adapted_feature */
extern T0* T387f46(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_adapted_feature */
extern T0* T386f49(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_adapted_feature */
extern T0* T384f48(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_adapted_feature */
extern T0* T355f51(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_adapted_feature */
extern T0* T259f35(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.like_keyword */
extern T0* T1270f39(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.type */
extern T0* T1300f22(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.type */
extern T0* T1299f27(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.type */
extern T0* T1298f25(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.type */
extern T0* T1297f24(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.type */
extern T0* T1296f28(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.type */
extern T0* T1295f26(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.locals */
extern T0* T1300f21(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.locals */
extern T0* T1297f23(GE_context* ac, T0* C);
/* ET_CUSTOM_ATTRIBUTE.indexing_term */
extern T0* T1241f8(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.indexing_term */
extern T0* T1237f33(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.indexing_term */
extern T0* T1236f33(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.indexing_term */
extern T0* T1235f34(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.indexing_term */
extern T0* T1234f34(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.indexing_term */
extern T0* T1232f36(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.indexing_term */
extern T0* T1231f36(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.indexing_term */
extern T0* T1230f61(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.indexing_term */
extern T0* T1229f61(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.indexing_term */
extern T0* T1228f61(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.indexing_term */
extern T0* T1227f61(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.indexing_term */
extern T0* T1226f61(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.indexing_term */
extern T0* T1225f36(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.indexing_term */
extern T0* T1224f40(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.indexing_term */
extern T0* T1223f34(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.indexing_term */
extern T0* T1191f35(GE_context* ac, T0* C);
/* ET_IDENTIFIER.indexing_term */
extern T0* T183f101(GE_context* ac, T0* C);
/* ET_CUSTOM_ATTRIBUTE.has_indexing_term_value */
extern T1 T1241f5(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.has_indexing_term_value */
extern T1 T1237f19(GE_context* ac, T0* C, T0* a1);
/* CHARACTER_32.as_lower */
extern T3 T3f5(GE_context* ac, T3* C);
/* CHARACTER_PROPERTY.to_lower */
extern T3 T1782f1(GE_context* ac, T0* C, T3 a1);
/* CHARACTER_PROPERTY.to_lower_table_10 */
extern T0* T1782f12(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_9 */
extern T0* T1782f11(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_8 */
extern T0* T1782f10(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_7 */
extern T0* T1782f9(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_6 */
extern T0* T1782f8(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_5 */
extern T0* T1782f7(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_4 */
extern T0* T1782f6(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_3 */
extern T0* T1782f5(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_2 */
extern T0* T1782f4(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_1 */
extern T0* T1782f3(GE_context* ac, T0* C);
/* CHARACTER_32.plus */
extern T3 T3f10(GE_context* ac, T3* C, T10 a1);
/* CHARACTER_32.is_less_equal */
extern T1 T3f9(GE_context* ac, T3* C, T3 a1);
/* CHARACTER_32.is_less */
extern T1 T3f11(GE_context* ac, T3* C, T3 a1);
/* CHARACTER_32.properties */
extern T0* T3f7(GE_context* ac, T3* C);
/* CHARACTER_PROPERTY.make */
extern T0* T1782c13(GE_context* ac);
/* ET_C1_CHARACTER_CONSTANT.has_indexing_term_value */
extern T1 T1236f19(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.has_indexing_term_value */
extern T1 T1235f20(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.string_ */
extern T0* T1235f28(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.has_indexing_term_value */
extern T1 T1234f20(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.string_ */
extern T0* T1234f28(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.has_indexing_term_value */
extern T1 T1232f22(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.is_plus */
extern T1 T716f37(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.string_ */
extern T0* T1232f30(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.has_indexing_term_value */
extern T1 T1231f22(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.string_ */
extern T0* T1231f30(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.has_indexing_term_value */
extern T1 T1230f46(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.string_ */
extern T0* T1230f55(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.has_indexing_term_value */
extern T1 T1229f46(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.string_ */
extern T0* T1229f55(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_indexing_term_value */
extern T1 T1228f46(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.string_ */
extern T0* T1228f55(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_indexing_term_value */
extern T1 T1227f46(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.string_ */
extern T0* T1227f55(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.has_indexing_term_value */
extern T1 T1226f46(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.string_ */
extern T0* T1226f55(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.has_indexing_term_value */
extern T1 T1225f14(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.string_ */
extern T0* T1225f23(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.has_indexing_term_value */
extern T1 T1224f14(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.string_ */
extern T0* T1224f23(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.has_indexing_term_value */
extern T1 T1223f12(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.has_indexing_term_value */
extern T1 T1191f20(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.string_ */
extern T0* T1191f28(GE_context* ac, T0* C);
/* ET_IDENTIFIER.has_indexing_term_value */
extern T1 T183f80(GE_context* ac, T0* C, T0* a1);
/* ET_CUSTOM_ATTRIBUTE.position */
extern T0* T1241f6(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.indexing_term_value */
extern T0* T1237f23(GE_context* ac, T0* C);
/* CHARACTER_32.out */
extern T0* T3f6(GE_context* ac, T3* C);
/* NATURAL_32.to_hex_string */
extern T0* T10f27(GE_context* ac, T10* C);
/* NATURAL_32.to_hex_character */
extern T2 T10f28(GE_context* ac, T10* C);
/* ET_C1_CHARACTER_CONSTANT.indexing_term_value */
extern T0* T1236f23(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.indexing_term_value */
extern T0* T1235f24(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.indexing_term_value */
extern T0* T1234f24(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.indexing_term_value */
extern T0* T1232f26(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.text */
extern T0* T716f38(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.indexing_term_value */
extern T0* T1231f26(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.indexing_term_value */
extern T0* T1230f51(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.indexing_term_value */
extern T0* T1229f51(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.indexing_term_value */
extern T0* T1228f51(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.indexing_term_value */
extern T0* T1227f51(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.indexing_term_value */
extern T0* T1226f51(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.indexing_term_value */
extern T0* T1225f18(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.indexing_term_value */
extern T0* T1224f18(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.indexing_term_value */
extern T0* T1223f16(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.indexing_term_value */
extern T0* T1191f24(GE_context* ac, T0* C);
/* ET_IDENTIFIER.indexing_term_value */
extern T0* T183f88(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.manifest_string */
extern T0* T1225f19(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.manifest_string */
extern T0* T1224f19(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.manifest_string */
extern T0* T1191f17(GE_context* ac, T0* C);
/* ET_CONVERT_FUNCTION.is_convert_from */
extern T1 T1250f7(GE_context* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_from */
extern T1 T484f4(GE_context* ac, T0* C);
/* ET_CONVERT_PROCEDURE.is_convert_to */
extern T1 T1251f7(GE_context* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_to */
extern T1 T484f5(GE_context* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T1503f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_generic_named_type */
extern T0* T271f951(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.resolved_syntactical_constraint */
extern T0* T796f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_actual_parameter_list */
extern T0* T271f952(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.item */
extern T0* T796f11(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.position */
extern T0* T796f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint */
extern T0* T1270f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint */
extern T0* T1269f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint */
extern T0* T1268f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T1243f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_named_type */
extern T0* T271f948(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint */
extern T0* T514f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.position */
extern T0* T1503f6(GE_context* ac, T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T1246f4(GE_context* ac, T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.position */
extern T0* T1245f4(GE_context* ac, T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.position */
extern T0* T1243f5(GE_context* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.type */
extern T0* T1503f4(GE_context* ac, T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.type */
extern T0* T1243f4(GE_context* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1503f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1270f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1269f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T1268f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T1246f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_comma_actual_parameter */
extern T0* T271f954(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T1245f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_actual_parameter */
extern T0* T271f953(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1243f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint_with_type */
extern T0* T514f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_KEYWORD_EXPRESSION.position */
extern T0* T1520f3(GE_context* ac, T0* C);
/* ET_CHOICE_RANGE.choice */
extern T0* T1278f5(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.choice */
extern T0* T1237f36(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.choice */
extern T0* T1236f36(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.choice */
extern T0* T1230f64(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.choice */
extern T0* T1229f64(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.choice */
extern T0* T1228f64(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.choice */
extern T0* T1227f64(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.choice */
extern T0* T1226f64(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.choice */
extern T0* T1223f37(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.choice */
extern T0* T972f23(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.choice */
extern T0* T309f21(GE_context* ac, T0* C);
/* ET_IDENTIFIER.choice */
extern T0* T183f103(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.lower */
extern T0* T1237f38(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.lower */
extern T0* T1236f38(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.lower */
extern T0* T1230f66(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.lower */
extern T0* T1229f66(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.lower */
extern T0* T1228f66(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.lower */
extern T0* T1227f66(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.lower */
extern T0* T1226f66(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.lower */
extern T0* T1223f39(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.lower */
extern T0* T972f25(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.lower */
extern T0* T309f24(GE_context* ac, T0* C);
/* ET_IDENTIFIER.lower */
extern T0* T183f106(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_range */
extern T1 T1237f37(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_range */
extern T1 T1236f37(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_range */
extern T1 T1230f65(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_range */
extern T1 T1229f65(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_range */
extern T1 T1228f65(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_range */
extern T1 T1227f65(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_range */
extern T1 T1226f65(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_range */
extern T1 T1223f38(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_range */
extern T1 T972f24(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_range */
extern T1 T309f23(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_range */
extern T1 T183f105(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.upper */
extern T0* T1237f39(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.upper */
extern T0* T1236f39(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.upper */
extern T0* T1230f67(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.upper */
extern T0* T1229f67(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.upper */
extern T0* T1228f67(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.upper */
extern T0* T1227f67(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.upper */
extern T0* T1226f67(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.upper */
extern T0* T1223f40(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.upper */
extern T0* T972f26(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.upper */
extern T0* T309f25(GE_context* ac, T0* C);
/* ET_IDENTIFIER.upper */
extern T0* T183f107(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix */
extern T1 T1263f36(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix */
extern T1 T750f33(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix */
extern T1 T1263f6(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix */
extern T1 T750f11(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infixable */
extern T1 T1263f43(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infixable */
extern T1 T750f10(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefixable */
extern T1 T1263f14(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefixable */
extern T1 T750f9(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.alias_lower_name */
extern T0* T1263f39(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.alias_name */
extern T0* T1263f40(GE_context* ac, T0* C);
/* ET_INFIX_NAME.alias_lower_name */
extern T0* T1261f72(GE_context* ac, T0* C);
/* ET_INFIX_NAME.alias_name */
extern T0* T1261f73(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.alias_lower_name */
extern T0* T1260f61(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.alias_name */
extern T0* T1260f62(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.alias_lower_name */
extern T0* T1259f58(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.alias_name */
extern T0* T1259f59(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.alias_lower_name */
extern T0* T1192f61(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.alias_name */
extern T0* T1192f62(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.alias_lower_name */
extern T0* T750f59(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.alias_name */
extern T0* T750f61(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.same_alias_name */
extern T1 T1263f42(GE_context* ac, T0* C, T0* a1);
extern T1 T1263f42ot1(T0* a1, T0** a2);
/* ET_INFIX_NAME.same_alias_name */
extern T1 T1261f80(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_alias_name */
extern T1 T1260f64(GE_context* ac, T0* C, T0* a1);
extern T1 T1260f64ot1(T0* a1, T0** a2);
/* ET_PREFIX_NAME.same_alias_name */
extern T1 T1259f80(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_alias_name */
extern T1 T1192f64(GE_context* ac, T0* C, T0* a1);
extern T1 T1192f64ot1(T0* a1, T0** a2);
/* ET_ALIAS_NAME.same_alias_name */
extern T1 T750f60(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.agent_actual_argument */
extern T0* T1802f13(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.agent_actual_argument */
extern T0* T1801f13(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.agent_actual_argument */
extern T0* T1800f13(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.agent_actual_argument */
extern T0* T1681f13(GE_context* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.agent_actual_argument */
extern T0* T1302f6(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1300f25(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1299f31(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1298f28(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1297f27(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1296f32(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1295f29(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.agent_actual_argument */
extern T0* T1294f14(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.agent_actual_argument */
extern T0* T1293f20(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.agent_actual_argument */
extern T0* T1292f13(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.agent_actual_argument */
extern T0* T1291f18(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.agent_actual_argument */
extern T0* T1290f14(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.agent_actual_argument */
extern T0* T1287f16(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.agent_actual_argument */
extern T0* T1286f13(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.agent_actual_argument */
extern T0* T1285f13(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.agent_actual_argument */
extern T0* T1284f13(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.agent_actual_argument */
extern T0* T1283f13(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.agent_actual_argument */
extern T0* T1282f17(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1237f21(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1236f21(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.agent_actual_argument */
extern T0* T1235f22(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.agent_actual_argument */
extern T0* T1234f22(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.agent_actual_argument */
extern T0* T1232f24(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.agent_actual_argument */
extern T0* T1231f24(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1230f48(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1229f48(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1228f48(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1227f48(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1226f48(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.agent_actual_argument */
extern T0* T1225f16(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.agent_actual_argument */
extern T0* T1224f16(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1223f14(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.agent_actual_argument */
extern T0* T1191f22(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.agent_actual_argument */
extern T0* T1111f17(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.agent_actual_argument */
extern T0* T975f18(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.agent_actual_argument */
extern T0* T972f17(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.agent_actual_argument */
extern T0* T943f14(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.agent_actual_argument */
extern T0* T929f18(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.agent_actual_argument */
extern T0* T880f19(GE_context* ac, T0* C);
/* ET_CALL_AGENT.agent_actual_argument */
extern T0* T759f19(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.agent_actual_argument */
extern T0* T756f17(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.agent_actual_argument */
extern T0* T730f25(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.agent_actual_argument */
extern T0* T727f66(GE_context* ac, T0* C);
/* ET_VOID.agent_actual_argument */
extern T0* T719f22(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.agent_actual_argument */
extern T0* T349f19(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T340f13(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T339f14(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.agent_actual_argument */
extern T0* T338f16(GE_context* ac, T0* C);
/* ET_RESULT.agent_actual_argument */
extern T0* T331f21(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.agent_actual_argument */
extern T0* T311f20(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T309f15(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T308f18(GE_context* ac, T0* C);
/* ET_CURRENT.agent_actual_argument */
extern T0* T303f21(GE_context* ac, T0* C);
/* ET_IDENTIFIER.agent_actual_argument */
extern T0* T183f83(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_8 */
extern T4 T1230f35(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1230f21(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_8 */
extern T4 T1229f35(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1229f22(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_negative */
extern T1 T1229f21(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_8 */
extern T4 T1228f35(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1228f21(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_8 */
extern T4 T1227f35(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1227f22(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_negative */
extern T1 T1227f21(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_8 */
extern T4 T1226f35(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1226f22(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_negative */
extern T1 T1226f21(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_16 */
extern T5 T1230f36(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1230f22(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_16 */
extern T5 T1229f36(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1229f23(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_16 */
extern T5 T1228f36(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1228f22(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_16 */
extern T5 T1227f36(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1227f23(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_16 */
extern T5 T1226f36(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1226f23(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_64 */
extern T7 T1230f38(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1230f24(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_64 */
extern T7 T1229f38(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1229f25(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_64 */
extern T7 T1228f38(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1228f24(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_64 */
extern T7 T1227f38(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1227f25(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_64 */
extern T7 T1226f38(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1226f25(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_natural_8 */
extern T8 T1230f39(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_natural_8 */
extern T8 T1229f39(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_natural_8 */
extern T8 T1228f39(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_natural_8 */
extern T8 T1227f39(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_natural_8 */
extern T8 T1226f39(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_natural_16 */
extern T9 T1230f40(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_natural_16 */
extern T9 T1229f40(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_natural_16 */
extern T9 T1228f40(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_natural_16 */
extern T9 T1227f40(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_natural_16 */
extern T9 T1226f40(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_natural_32 */
extern T10 T1230f41(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_natural_32 */
extern T10 T1229f41(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_natural_32 */
extern T10 T1228f41(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_natural_32 */
extern T10 T1227f41(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_natural_32 */
extern T10 T1226f41(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_natural_64 */
extern T11 T1230f42(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_natural_64 */
extern T11 T1229f42(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_natural_64 */
extern T11 T1228f42(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_natural_64 */
extern T11 T1227f42(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_natural_64 */
extern T11 T1226f42(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1230f32(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1229f32(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1228f32(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1227f32(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1226f32(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1230f9(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1229f9(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1228f9(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1227f9(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1226f9(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1230f12(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_negative */
extern T1 T1230f25(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1229f12(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1228f12(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_negative */
extern T1 T1228f25(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1227f12(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1226f12(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1230f13(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1229f13(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1228f13(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1227f13(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1226f13(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1230f14(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1229f14(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1228f14(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1227f14(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1226f14(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1230f10(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1230f23(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1229f10(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1229f24(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1228f10(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1228f23(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1227f10(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1227f24(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1226f10(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1226f24(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1230f11(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1229f11(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1228f11(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1227f11(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1226f11(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1230f17(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1229f17(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1227f17(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1226f17(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_binary */
extern T1 T1229f18(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_binary */
extern T1 T1228f18(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_binary */
extern T1 T1227f18(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_binary */
extern T1 T1226f18(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1230f15(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1229f15(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1228f15(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1227f15(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1226f15(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.value_position */
extern T0* T1230f50(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.value_position */
extern T0* T1229f50(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.value_position */
extern T0* T1228f50(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.value_position */
extern T0* T1227f50(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.value_position */
extern T0* T1226f50(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1230f37(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1229f37(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1228f37(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1227f37(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1226f37(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T1518f8(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.position */
extern T0* T1266f8(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.label */
extern T0* T1518f6(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.label */
extern T0* T1416f61(GE_context* ac, T0* C);
/* ET_LIKE_N.label */
extern T0* T1319f60(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.label */
extern T0* T1270f63(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.label */
extern T0* T1269f66(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.label */
extern T0* T1268f65(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.label */
extern T0* T1266f6(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.label */
extern T0* T1242f68(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.label */
extern T0* T872f67(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.label */
extern T0* T514f60(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.label */
extern T0* T260f95(GE_context* ac, T0* C);
/* ET_CLASS.label */
extern T0* T83f228(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.label */
extern T0* T81f100(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1518f4(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_with_type */
extern T0* T1416f32(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.named_parameter_with_type */
extern T0* T1319f36(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_parameter_with_type */
extern T0* T1270f33(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_parameter_with_type */
extern T0* T1269f32(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_parameter_with_type */
extern T0* T1268f27(GE_context* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1266f4(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T1242f61(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T872f56(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_parameter_with_type */
extern T0* T514f30(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_with_type */
extern T0* T260f50(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.named_parameter_with_type */
extern T0* T83f152(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_with_type */
extern T0* T81f48(GE_context* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.last_leaf */
extern T0* T1518f9(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.last_leaf */
extern T0* T1266f9(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.error_position */
extern T0* T614f60(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.error_position */
extern T0* T612f56(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.error_position */
extern T0* T611f58(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.error_position */
extern T0* T574f66(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.end_of_file */
extern T1 T614f62(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.end_of_file */
extern T1 T612f63(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.end_of_file */
extern T1 T611f60(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.end_of_file */
extern T1 T574f68(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_applicable_encoding */
extern T1 T614f63(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_applicable_encoding */
extern T1 T1207f20(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_valid_encoding */
extern T1 T1207f13(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.is_applicable_encoding */
extern T1 T612f49(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_applicable_encoding */
extern T1 T611f61(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T574f69(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.start_condition */
extern T6 T614f64(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.start_condition */
extern T6 T612f51(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.start_condition */
extern T6 T611f62(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.start_condition */
extern T6 T574f44(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.same_extended_feature_name */
extern T1 T1262f4(GE_context* ac, T0* C, T0* a1);
/* KL_ANY_ROUTINES.same_objects */
extern T1 T137f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIASED_FEATURE_NAME.any_ */
extern T0* T1262f6(GE_context* ac, T0* C);
/* ET_INFIX_NAME.same_extended_feature_name */
extern T1 T1261f81(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_NAME.any_ */
extern T0* T1261f44(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.same_extended_feature_name */
extern T1 T1260f65(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.any_ */
extern T0* T1260f30(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.same_extended_feature_name */
extern T1 T1259f81(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_NAME.any_ */
extern T0* T1259f27(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.same_extended_feature_name */
extern T1 T1192f65(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.any_ */
extern T0* T1192f26(GE_context* ac, T0* C);
/* ET_IDENTIFIER.same_extended_feature_name */
extern T1 T183f91(GE_context* ac, T0* C, T0* a1);
/* ET_ALIASED_FEATURE_NAME.position */
extern T0* T1262f3(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.same_call_name */
extern T1 T1262f5(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_NAME.feature_alias_name */
extern T0* T1261f25(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.feature_alias_name */
extern T0* T1260f20(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.feature_alias_name */
extern T0* T1259f22(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.feature_alias_name */
extern T0* T1192f15(GE_context* ac, T0* C);
/* ET_IDENTIFIER.alias_name */
extern T0* T183f53(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.is_consumable */
extern T1 T464f95(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.is_consumable */
extern T1 T231f105(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.is_consumable */
extern T1 T218f98(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.is_consumable */
extern T1 T199f95(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T1157f36(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.is_included */
extern T1 T1162f3(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_FILE_RULES.is_included */
extern T0* T1162f3ac1(GE_context* ac, T0* a1);
/* ET_ECF_FILE_RULE.is_included */
extern T1 T1161f9(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_FILE_RULE.is_included */
extern T0* T1161f9ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_FILE_RULE.is_included */
extern T0* T1161f9ac2(GE_context* ac, T0* a1);
/* [attached] PREDICATE [[attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION]].set_rout_disp_final */
extern void T1926f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].there_exists */
extern T1 T1565f7(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].item */
extern T0* T1565f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].for_all */
extern T1 T1566f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.implicit_relative_name */
extern T0* T1157f51(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.unix_file_system */
extern T0* T1157f50(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T1157f36p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.has_eiffel_extension */
extern T1 T1157f52(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.operating_system */
extern T0* T1157f56(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T435f35(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_case_insensitive */
extern T1 T435f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET_CURSOR [STRING_8].go_after */
extern void T390f15(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_go_after */
extern void T78f75(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.operating_system */
extern T0* T435f49(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.exclude */
extern T0* T430f144(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_exclude */
extern T0* T430f145(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_exclude_declared */
extern T1 T430f143(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T435f35p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_eiffel_extension */
extern T1 T435f51(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T216f26(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_EXCLUDE.has */
extern T1 T217f4(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_EXCLUDE.string_ */
extern T0* T217f5(GE_context* ac, T0* C);
/* ET_LACE_EXCLUDE.has_case_insensitive */
extern T1 T217f3(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.operating_system */
extern T0* T216f24(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T216f26p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.has_eiffel_extension */
extern T1 T216f39(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T1157f37(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T1157f37p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T435f36(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T435f36p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T216f27(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T216f27p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.full_pathname */
extern T0* T1157f35(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.windows_file_system */
extern T0* T1157f49(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.file_system */
extern T0* T1157f47(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.execution_environment */
extern T0* T1157f46(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.full_pathname */
extern T0* T435f34(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.file_system */
extern T0* T435f46(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.unix_file_system */
extern T0* T435f56(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.windows_file_system */
extern T0* T435f55(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.full_pathname */
extern T0* T216f35(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.file_system */
extern T0* T216f23(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.unix_file_system */
extern T0* T216f28(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.windows_file_system */
extern T0* T216f25(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.pathname */
extern T0* T216f45(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.absolute_pathname */
extern T0* T1157f30(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.absolute_pathname */
extern T0* T435f29(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.execution_environment */
extern T0* T435f45(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.absolute_pathname */
extern T0* T216f38(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.execution_environment */
extern T0* T216f46(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.scm_write_mapping_recursive */
extern T0* T1157f44(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.scm_write_mapping_recursive */
extern T0* T435f43(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.scm_write_mapping_recursive */
extern T0* T216f43(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_none */
extern T1 T1157f39(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_none */
extern T1 T435f31(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_none */
extern T1 T418f4(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_none */
extern T1 T216f29(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_unknown */
extern T1 T1157f45(GE_context* ac, T0* C);
/* ET_NONE_GROUP.is_unknown */
extern T1 T516f10(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_unknown */
extern T1 T435f33(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_unknown */
extern T1 T216f30(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_dotnet_assembly */
extern T1 T1157f25(GE_context* ac, T0* C);
/* ET_NONE_GROUP.is_dotnet_assembly */
extern T1 T516f20(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_dotnet_assembly */
extern T1 T435f38(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_dotnet_assembly */
extern T1 T418f6(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_dotnet_assembly */
extern T1 T216f31(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.dotnet_assembly */
extern T0* T1157f29(GE_context* ac, T0* C);
/* ET_NONE_GROUP.dotnet_assembly */
extern T0* T516f6(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.dotnet_assembly */
extern T0* T435f28(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.dotnet_assembly */
extern T0* T418f8(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.dotnet_assembly */
extern T0* T216f33(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.cluster */
extern T0* T1157f28(GE_context* ac, T0* C);
/* ET_NONE_GROUP.cluster */
extern T0* T516f5(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.cluster */
extern T0* T435f27(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.cluster */
extern T0* T418f7(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.cluster */
extern T0* T216f32(GE_context* ac, T0* C);
/* ET_NONE_GROUP.is_cluster */
extern T1 T516f8(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_cluster */
extern T1 T418f9(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.universe */
extern T0* T418f21(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.tokens */
extern T0* T418f11(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.current_system */
extern T0* T1157f27(GE_context* ac, T0* C);
/* ET_NONE_GROUP.current_system */
extern T0* T516f11(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.current_system */
extern T0* T435f44(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.current_system */
extern T0* T418f12(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.current_system */
extern T0* T216f36(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.full_lower_name */
extern T0* T1157f32(GE_context* ac, T0* C, T2 a1);
/* ET_NONE_GROUP.full_lower_name */
extern T0* T516f12(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_CLUSTER.full_lower_name */
extern T0* T435f32(GE_context* ac, T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.full_lower_name */
extern T0* T418f13(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_CLUSTER.full_lower_name */
extern T0* T216f37(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.kind_name */
extern T0* T1157f42(GE_context* ac, T0* C);
/* ET_NONE_GROUP.kind_name */
extern T0* T516f28(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.kind_name */
extern T0* T435f54(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.kind_name */
extern T0* T418f29(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.kind_name */
extern T0* T216f51(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.relative_lower_name */
extern T0* T1157f43(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_CLUSTER.relative_lower_name */
extern T0* T1157f43p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.relative_lower_name */
extern T0* T190f116(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.lower_name */
extern T0* T190f119(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.lower_name */
extern T0* T1157f55(GE_context* ac, T0* C);
/* ET_NONE_GROUP.relative_lower_name */
extern T0* T516f13(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.lower_name */
extern T0* T516f14(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.relative_lower_name */
extern T0* T435f48(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_CLUSTER.relative_lower_name */
extern T0* T435f48p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_CLUSTER.lower_name */
extern T0* T435f57(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.relative_lower_name */
extern T0* T418f14(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.lower_name */
extern T0* T418f15(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.relative_lower_name */
extern T0* T216f44(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_CLUSTER.relative_lower_name */
extern T0* T216f44p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_CLUSTER.lower_name */
extern T0* T216f47(GE_context* ac, T0* C);
/* ET_INVARIANTS.clients */
extern T0* T910f18(GE_context* ac, T0* C);
/* ET_INVARIANTS.type */
extern T0* T910f16(GE_context* ac, T0* C);
/* ET_INVARIANTS.arguments */
extern T0* T910f12(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.locals */
extern T0* T1258f62(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.locals */
extern T0* T1255f61(GE_context* ac, T0* C);
/* ET_INVARIANTS.locals */
extern T0* T910f15(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.locals */
extern T0* T539f56(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.locals */
extern T0* T387f58(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.locals */
extern T0* T386f60(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.locals */
extern T0* T384f60(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.locals */
extern T0* T259f66(GE_context* ac, T0* C);
/* ET_INVARIANTS.first_precursor */
extern T0* T910f17(GE_context* ac, T0* C);
/* ET_INVARIANTS.is_feature */
extern T1 T910f13(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.as_feature */
extern T0* T1258f61(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.as_feature */
extern T0* T1257f60(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.as_feature */
extern T0* T1255f60(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.as_feature */
extern T0* T1254f65(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.as_feature */
extern T0* T1253f62(GE_context* ac, T0* C);
/* ET_INVARIANTS.as_feature */
extern T0* T910f14(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.as_feature */
extern T0* T539f55(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.as_feature */
extern T0* T533f57(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.as_feature */
extern T0* T387f57(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_feature */
extern T0* T386f59(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_feature */
extern T0* T384f59(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.as_feature */
extern T0* T355f62(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.as_feature */
extern T0* T259f65(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_invariants */
extern T1 T1258f63(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_invariants */
extern T1 T1257f61(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_invariants */
extern T1 T1255f63(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_invariants */
extern T1 T1254f67(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_invariants */
extern T1 T1253f64(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_invariants */
extern T1 T539f57(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_invariants */
extern T1 T533f58(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_invariants */
extern T1 T387f60(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_invariants */
extern T1 T386f62(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_invariants */
extern T1 T384f62(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_invariants */
extern T1 T355f64(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_invariants */
extern T1 T259f68(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.as_invariants */
extern T0* T1258f64(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.as_invariants */
extern T0* T1257f62(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.as_invariants */
extern T0* T1255f64(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.as_invariants */
extern T0* T1254f68(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.as_invariants */
extern T0* T1253f65(GE_context* ac, T0* C);
/* ET_INVARIANTS.as_invariants */
extern T0* T910f20(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.as_invariants */
extern T0* T539f58(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.as_invariants */
extern T0* T533f59(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.as_invariants */
extern T0* T387f61(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_invariants */
extern T0* T386f63(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_invariants */
extern T0* T384f63(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.as_invariants */
extern T0* T355f65(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.as_invariants */
extern T0* T259f69(GE_context* ac, T0* C);
/* ET_INVARIANTS.preconditions */
extern T0* T910f23(GE_context* ac, T0* C);
/* ET_INVARIANTS.postconditions */
extern T0* T910f24(GE_context* ac, T0* C);
/* ET_INVARIANTS.implementation_feature */
extern T0* T910f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_HASH_LIST.has_type */
extern T1 T290f14(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.index_of */
extern T6 T532f47(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.index_of */
extern T6 T531f47(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.index_of */
extern T6 T341f45(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.index_of */
extern T6 T324f45(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.index_of */
extern T6 T290f16(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.index_of */
extern T6 T240f44(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.dynamic_type */
extern T0* T290f6(GE_context* ac, T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.is_bang */
extern T1 T727f16(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_bang */
extern T1 T655f17(GE_context* ac, T0* C);
/* ET_SYMBOL.is_bang */
extern T1 T369f16(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_question_mark */
extern T1 T727f18(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_question_mark */
extern T1 T655f19(GE_context* ac, T0* C);
/* ET_SYMBOL.is_question_mark */
extern T1 T369f18(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.position */
extern T0* T1540f4(GE_context* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.position */
extern T0* T1301f5(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_open_operand */
extern T1 T1802f18(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_open_operand */
extern T1 T1801f15(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_open_operand */
extern T1 T1800f14(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_open_operand */
extern T1 T1681f14(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_open_operand */
extern T1 T1540f3(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1300f28(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1299f34(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1298f30(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1297f29(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1296f35(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1295f31(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_open_operand */
extern T1 T1294f17(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_open_operand */
extern T1 T1293f22(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_open_operand */
extern T1 T1292f15(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_open_operand */
extern T1 T1291f20(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_open_operand */
extern T1 T1290f16(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_open_operand */
extern T1 T1287f18(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_open_operand */
extern T1 T1286f15(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_open_operand */
extern T1 T1285f15(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_open_operand */
extern T1 T1284f15(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_open_operand */
extern T1 T1283f15(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_open_operand */
extern T1 T1282f19(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1237f27(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1236f27(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_open_operand */
extern T1 T1235f29(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_open_operand */
extern T1 T1234f29(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_open_operand */
extern T1 T1232f31(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_open_operand */
extern T1 T1231f31(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_open_operand */
extern T1 T1230f56(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T1229f56(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T1228f56(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_open_operand */
extern T1 T1227f56(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_open_operand */
extern T1 T1226f56(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_open_operand */
extern T1 T1225f24(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_open_operand */
extern T1 T1224f24(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1223f22(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_open_operand */
extern T1 T1191f29(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_open_operand */
extern T1 T1111f19(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_open_operand */
extern T1 T975f22(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_open_operand */
extern T1 T972f19(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_open_operand */
extern T1 T943f16(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_open_operand */
extern T1 T929f21(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.is_open_operand */
extern T1 T880f21(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_open_operand */
extern T1 T759f21(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_open_operand */
extern T1 T756f19(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_open_operand */
extern T1 T730f29(GE_context* ac, T0* C);
/* ET_VOID.is_open_operand */
extern T1 T719f25(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_open_operand */
extern T1 T349f23(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T340f16(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T339f18(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_open_operand */
extern T1 T338f19(GE_context* ac, T0* C);
/* ET_RESULT.is_open_operand */
extern T1 T331f23(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_open_operand */
extern T1 T311f23(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T309f17(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T308f21(GE_context* ac, T0* C);
/* ET_CURRENT.is_open_operand */
extern T1 T303f23(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_open_operand */
extern T1 T183f89(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.expression_item */
extern T0* T1802f12(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.expression_item */
extern T0* T1801f12(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.expression_item */
extern T0* T1800f12(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.expression_item */
extern T0* T1681f12(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1300f15(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1299f16(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1298f16(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1297f17(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1296f18(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1295f18(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.expression_item */
extern T0* T1294f9(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.expression_item */
extern T0* T1293f10(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.expression_item */
extern T0* T1292f4(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.expression_item */
extern T0* T1291f15(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.expression_item */
extern T0* T1290f7(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.expression_item */
extern T0* T1287f6(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.expression_item */
extern T0* T1286f4(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.expression_item */
extern T0* T1285f4(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.expression_item */
extern T0* T1284f4(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.expression_item */
extern T0* T1283f4(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.expression_item */
extern T0* T1282f8(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.expression_item */
extern T0* T1237f8(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.expression_item */
extern T0* T1236f8(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.expression_item */
extern T0* T1235f13(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.expression_item */
extern T0* T1234f13(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.expression_item */
extern T0* T1232f9(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.expression_item */
extern T0* T1231f9(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.expression_item */
extern T0* T1230f19(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.expression_item */
extern T0* T1229f19(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.expression_item */
extern T0* T1228f19(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.expression_item */
extern T0* T1227f19(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.expression_item */
extern T0* T1226f19(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.expression_item */
extern T0* T1225f25(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.expression_item */
extern T0* T1224f25(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.expression_item */
extern T0* T1223f17(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.expression_item */
extern T0* T1191f13(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.expression_item */
extern T0* T1111f7(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.expression_item */
extern T0* T975f7(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.expression_item */
extern T0* T972f7(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.expression_item */
extern T0* T943f7(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.expression_item */
extern T0* T929f7(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.expression_item */
extern T0* T880f11(GE_context* ac, T0* C);
/* ET_CALL_AGENT.expression_item */
extern T0* T759f7(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.expression_item */
extern T0* T756f6(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.expression_item */
extern T0* T730f16(GE_context* ac, T0* C);
/* ET_VOID.expression_item */
extern T0* T719f10(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.expression_item */
extern T0* T349f9(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.expression_item */
extern T0* T340f6(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.expression_item */
extern T0* T339f6(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.expression_item */
extern T0* T338f7(GE_context* ac, T0* C);
/* ET_RESULT.expression_item */
extern T0* T331f7(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.expression_item */
extern T0* T311f14(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T309f6(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T308f10(GE_context* ac, T0* C);
/* ET_CURRENT.expression_item */
extern T0* T303f7(GE_context* ac, T0* C);
/* ET_IDENTIFIER.expression_item */
extern T0* T183f49(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_empty_actual_argument */
extern T1 T1802f10(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_empty_actual_argument */
extern T1 T1801f10(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_empty_actual_argument */
extern T1 T1800f10(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_empty */
extern T1 T1697f3(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T1693f8(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_empty_actual_argument */
extern T1 T1681f10(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1300f30(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1299f36(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1298f32(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1297f31(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1296f37(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1295f33(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T1294f18(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_empty_actual_argument */
extern T1 T1293f23(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_empty_actual_argument */
extern T1 T1292f16(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T1291f21(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_empty_actual_argument */
extern T1 T1290f17(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T1287f19(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_empty_actual_argument */
extern T1 T1286f16(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_empty_actual_argument */
extern T1 T1285f16(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_empty_actual_argument */
extern T1 T1284f16(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_empty_actual_argument */
extern T1 T1283f16(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_empty_actual_argument */
extern T1 T1282f20(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_empty */
extern T1 T1271f14(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1237f29(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1236f29(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_empty_actual_argument */
extern T1 T1235f30(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_empty_actual_argument */
extern T1 T1234f30(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T1232f32(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T1231f32(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1230f57(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1229f57(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1228f57(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1227f57(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1226f57(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T1225f32(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_empty_actual_argument */
extern T1 T1224f36(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1223f30(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T1191f31(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_empty_actual_argument */
extern T1 T1111f20(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_empty_actual_argument */
extern T1 T975f23(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T972f20(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_empty_actual_argument */
extern T1 T943f17(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_empty_actual_argument */
extern T1 T929f22(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.is_empty_actual_argument */
extern T1 T880f22(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_empty_actual_argument */
extern T1 T759f23(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_empty_actual_argument */
extern T1 T756f20(GE_context* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_empty */
extern T1 T745f8(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_empty_actual_argument */
extern T1 T730f26(GE_context* ac, T0* C);
/* ET_VOID.is_empty_actual_argument */
extern T1 T719f23(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_empty_actual_argument */
extern T1 T349f21(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T340f15(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T339f16(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_empty_actual_argument */
extern T1 T338f18(GE_context* ac, T0* C);
/* ET_RESULT.is_empty_actual_argument */
extern T1 T331f25(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_empty_actual_argument */
extern T1 T311f22(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T309f18(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T308f20(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T304f10(GE_context* ac, T0* C);
/* ET_CURRENT.is_empty_actual_argument */
extern T1 T303f24(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_empty_actual_argument */
extern T1 T183f93(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.count */
extern T6 T1271f12(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.actual_argument */
extern T0* T1802f9(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.actual_argument */
extern T0* T1801f9(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.actual_argument */
extern T0* T1800f9(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.actual_argument */
extern T0* T1697f4(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T1693f6(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.actual_argument */
extern T0* T1681f9(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1300f17(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1299f19(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1298f18(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1297f19(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1296f21(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1295f20(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.actual_argument */
extern T0* T1294f8(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_OBJECT_TEST.actual_argument */
extern T0* T1293f15(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_EXPRESSION.actual_argument */
extern T0* T1292f8(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.actual_argument */
extern T0* T1291f7(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TYPE.actual_argument */
extern T0* T1290f9(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.actual_argument */
extern T0* T1287f8(GE_context* ac, T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.actual_argument */
extern T0* T1286f8(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT_ADDRESS.actual_argument */
extern T0* T1285f8(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.actual_argument */
extern T0* T1284f8(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.actual_argument */
extern T0* T1283f8(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.actual_argument */
extern T0* T1282f12(GE_context* ac, T0* C, T6 a1);
/* ET_ASSIGNER_INSTRUCTION.actual_argument */
extern T0* T1271f13(GE_context* ac, T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.actual_argument */
extern T0* T1237f15(GE_context* ac, T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.actual_argument */
extern T0* T1236f15(GE_context* ac, T0* C, T6 a1);
/* ET_FALSE_CONSTANT.actual_argument */
extern T0* T1235f16(GE_context* ac, T0* C, T6 a1);
/* ET_TRUE_CONSTANT.actual_argument */
extern T0* T1234f16(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.actual_argument */
extern T0* T1232f18(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.actual_argument */
extern T0* T1231f18(GE_context* ac, T0* C, T6 a1);
/* ET_BINARY_INTEGER_CONSTANT.actual_argument */
extern T0* T1230f34(GE_context* ac, T0* C, T6 a1);
/* ET_OCTAL_INTEGER_CONSTANT.actual_argument */
extern T0* T1229f34(GE_context* ac, T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument */
extern T0* T1228f34(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument */
extern T0* T1227f34(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.actual_argument */
extern T0* T1226f34(GE_context* ac, T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.actual_argument */
extern T0* T1225f7(GE_context* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.actual_argument */
extern T0* T1224f29(GE_context* ac, T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.actual_argument */
extern T0* T1223f23(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.actual_argument */
extern T0* T1191f16(GE_context* ac, T0* C, T6 a1);
/* ET_NAMED_OBJECT_TEST.actual_argument */
extern T0* T1111f12(GE_context* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.actual_argument */
extern T0* T975f12(GE_context* ac, T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.actual_argument */
extern T0* T972f12(GE_context* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.actual_argument */
extern T0* T943f9(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.actual_argument */
extern T0* T929f12(GE_context* ac, T0* C, T6 a1);
/* ET_IF_EXPRESSION.actual_argument */
extern T0* T880f14(GE_context* ac, T0* C, T6 a1);
/* ET_CALL_AGENT.actual_argument */
extern T0* T759f12(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.actual_argument */
extern T0* T756f10(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.actual_argument */
extern T0* T745f7(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_EXPRESSION.actual_argument */
extern T0* T730f19(GE_context* ac, T0* C, T6 a1);
/* ET_VOID.actual_argument */
extern T0* T719f13(GE_context* ac, T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.actual_argument */
extern T0* T349f11(GE_context* ac, T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.actual_argument */
extern T0* T340f8(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.actual_argument */
extern T0* T339f8(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST.actual_argument */
extern T0* T338f11(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT.actual_argument */
extern T0* T331f13(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.actual_argument */
extern T0* T311f11(GE_context* ac, T0* C, T6 a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T309f9(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T308f13(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T304f6(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT.actual_argument */
extern T0* T303f14(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.actual_argument */
extern T0* T183f74(GE_context* ac, T0* C, T6 a1);
/* ET_LIKE_N.last_leaf */
extern T0* T1319f64(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.last_leaf */
extern T0* T1242f72(GE_context* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.last_leaf */
extern T0* T799f11(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.last_leaf */
extern T0* T872f71(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1237f13(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1236f13(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_boolean_constant */
extern T1 T1232f14(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_boolean_constant */
extern T1 T1231f14(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1230f20(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1229f20(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1228f20(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1227f20(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1226f20(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_boolean_constant */
extern T1 T1225f9(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_boolean_constant */
extern T1 T1224f31(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1223f29(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_boolean_constant */
extern T1 T1191f30(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_string_constant */
extern T1 T1237f6(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_string_constant */
extern T1 T1236f6(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_string_constant */
extern T1 T1235f6(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_string_constant */
extern T1 T1234f6(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_string_constant */
extern T1 T1232f7(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_string_constant */
extern T1 T1231f7(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_string_constant */
extern T1 T1230f16(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_string_constant */
extern T1 T1229f16(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_string_constant */
extern T1 T1228f16(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_string_constant */
extern T1 T1227f16(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_string_constant */
extern T1 T1226f16(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_string_constant */
extern T1 T1223f8(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_character_constant */
extern T1 T1235f5(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_character_constant */
extern T1 T1234f5(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_character_constant */
extern T1 T1232f15(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_character_constant */
extern T1 T1231f15(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_character_constant */
extern T1 T1230f26(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T1229f26(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T1228f26(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_character_constant */
extern T1 T1227f26(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_character_constant */
extern T1 T1226f26(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_character_constant */
extern T1 T1225f10(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_character_constant */
extern T1 T1224f35(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_character_constant */
extern T1 T1191f6(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1237f35(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1236f35(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_integer_constant */
extern T1 T1235f36(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_integer_constant */
extern T1 T1234f36(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_integer_constant */
extern T1 T1232f38(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_integer_constant */
extern T1 T1231f38(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_integer_constant */
extern T1 T1225f40(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_integer_constant */
extern T1 T1224f44(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1223f36(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_integer_constant */
extern T1 T1191f39(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.name */
extern T0* T338f8(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.type */
extern T0* T1293f13(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.type */
extern T0* T1111f10(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.type */
extern T0* T338f9(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1300f27(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1299f22(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1298f20(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_qualified_call */
extern T1 T759f13(GE_context* ac, T0* C);
extern T1 T759f13ot1(T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1300f29(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1300f33(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1299f35(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1299f39(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1298f31(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1298f35(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1297f30(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1297f34(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1296f36(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1296f40(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1295f32(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1295f36(GE_context* ac, T0* C);
/* ET_CALL_AGENT.implicit_target_position */
extern T0* T759f22(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.same_call_name */
extern T1 T1263f7(GE_context* ac, T0* C, T0* a1);
extern T1 T1263f7ot1(T0* a1, T0** a2);
/* ET_INFIX_NAME.same_call_name */
extern T1 T1261f24(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_call_name */
extern T1 T1260f14(GE_context* ac, T0* C, T0* a1);
extern T1 T1260f14ot1(T0* a1, T0** a2);
/* ET_PREFIX_NAME.same_call_name */
extern T1 T1259f21(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_call_name */
extern T1 T1192f9(GE_context* ac, T0* C, T0* a1);
extern T1 T1192f9ot1(T0* a1, T0** a2);
/* ET_ALIAS_NAME.same_call_name */
extern T1 T750f12(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.same_call_name */
extern T1 T183f82(GE_context* ac, T0* C, T0* a1);
extern T1 T183f82ot1(T0* a1, T0** a2);
/* ET_PARENTHESIS_SYMBOL.is_bracket */
extern T1 T1675f21(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_bracket */
extern T1 T1289f26(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_bracket */
extern T1 T1288f26(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_bracket */
extern T1 T1263f8(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_bracket */
extern T1 T1261f20(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_bracket */
extern T1 T1260f9(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_bracket */
extern T1 T1259f17(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_bracket */
extern T1 T1192f28(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_bracket */
extern T1 T750f7(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_bracket */
extern T1 T716f33(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_bracket */
extern T1 T703f36(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_bracket */
extern T1 T697f36(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_bracket */
extern T1 T183f84(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_parenthesis */
extern T1 T1289f27(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_parenthesis */
extern T1 T1288f27(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_parenthesis */
extern T1 T1263f13(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_parenthesis */
extern T1 T1261f21(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_parenthesis */
extern T1 T1260f10(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_parenthesis */
extern T1 T1259f18(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_parenthesis */
extern T1 T1192f31(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_parenthesis */
extern T1 T750f8(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_parenthesis */
extern T1 T716f34(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_parenthesis */
extern T1 T703f37(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_parenthesis */
extern T1 T697f37(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_parenthesis */
extern T1 T655f94(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_parenthesis */
extern T1 T183f85(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and */
extern T1 T1675f4(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and */
extern T1 T1289f7(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and */
extern T1 T1288f7(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and */
extern T1 T1263f19(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_and */
extern T1 T1261f17(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and */
extern T1 T1260f24(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_and */
extern T1 T1259f14(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and */
extern T1 T1192f19(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and */
extern T1 T750f16(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and */
extern T1 T716f12(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and */
extern T1 T703f15(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and */
extern T1 T697f14(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and */
extern T1 T655f70(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and */
extern T1 T183f45(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_div */
extern T1 T1675f6(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_div */
extern T1 T1289f14(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_div */
extern T1 T1288f14(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_div */
extern T1 T1263f21(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_div */
extern T1 T1261f47(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_div */
extern T1 T1260f38(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_div */
extern T1 T1259f35(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_div */
extern T1 T1192f38(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_div */
extern T1 T750f18(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_div */
extern T1 T716f21(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_div */
extern T1 T703f24(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_div */
extern T1 T697f24(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_div */
extern T1 T655f80(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_div */
extern T1 T183f57(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_divide */
extern T1 T1675f7(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_divide */
extern T1 T1289f15(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_divide */
extern T1 T1288f15(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_divide */
extern T1 T1263f22(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_divide */
extern T1 T1261f48(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_divide */
extern T1 T1260f39(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_divide */
extern T1 T1259f36(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_divide */
extern T1 T1192f39(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_divide */
extern T1 T750f19(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_divide */
extern T1 T716f22(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_divide */
extern T1 T703f25(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_divide */
extern T1 T697f25(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_divide */
extern T1 T655f81(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_divide */
extern T1 T183f58(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_ge */
extern T1 T1675f8(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_ge */
extern T1 T1289f16(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_ge */
extern T1 T1288f16(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_ge */
extern T1 T1263f23(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_ge */
extern T1 T1261f49(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_ge */
extern T1 T1260f40(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_ge */
extern T1 T1259f37(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_ge */
extern T1 T1192f40(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_ge */
extern T1 T750f20(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_ge */
extern T1 T716f23(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_ge */
extern T1 T703f26(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_ge */
extern T1 T697f26(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_ge */
extern T1 T655f82(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_ge */
extern T1 T183f59(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_gt */
extern T1 T1675f9(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_gt */
extern T1 T1289f17(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_gt */
extern T1 T1288f17(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_gt */
extern T1 T1263f24(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_gt */
extern T1 T1261f50(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_gt */
extern T1 T1260f41(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_gt */
extern T1 T1259f38(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_gt */
extern T1 T1192f41(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_gt */
extern T1 T750f21(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_gt */
extern T1 T716f24(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_gt */
extern T1 T703f27(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_gt */
extern T1 T697f27(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_gt */
extern T1 T655f83(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_gt */
extern T1 T183f60(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_le */
extern T1 T1675f11(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_le */
extern T1 T1289f18(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_le */
extern T1 T1288f18(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_le */
extern T1 T1263f26(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_le */
extern T1 T1261f51(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_le */
extern T1 T1260f42(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_le */
extern T1 T1259f39(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_le */
extern T1 T1192f42(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_le */
extern T1 T750f23(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_le */
extern T1 T716f25(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_le */
extern T1 T703f28(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_le */
extern T1 T697f28(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_le */
extern T1 T655f84(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_le */
extern T1 T183f61(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_lt */
extern T1 T1675f12(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_lt */
extern T1 T1289f19(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_lt */
extern T1 T1288f19(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_lt */
extern T1 T1263f27(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_lt */
extern T1 T1261f52(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_lt */
extern T1 T1260f43(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_lt */
extern T1 T1259f40(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_lt */
extern T1 T1192f43(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_lt */
extern T1 T750f24(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_lt */
extern T1 T716f26(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_lt */
extern T1 T703f29(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_lt */
extern T1 T697f29(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_lt */
extern T1 T655f85(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_lt */
extern T1 T183f62(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_minus */
extern T1 T1675f13(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_minus */
extern T1 T1289f20(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_minus */
extern T1 T1288f20(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_minus */
extern T1 T1263f28(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_minus */
extern T1 T1261f53(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_minus */
extern T1 T1260f44(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_minus */
extern T1 T1259f41(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_minus */
extern T1 T1192f44(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_minus */
extern T1 T750f25(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_minus */
extern T1 T716f27(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_minus */
extern T1 T703f30(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_minus */
extern T1 T697f30(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_minus */
extern T1 T655f86(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_minus */
extern T1 T183f63(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_mod */
extern T1 T1675f14(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_mod */
extern T1 T1289f21(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_mod */
extern T1 T1288f21(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_mod */
extern T1 T1263f29(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_mod */
extern T1 T1261f54(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_mod */
extern T1 T1260f45(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_mod */
extern T1 T1259f42(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_mod */
extern T1 T1192f45(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_mod */
extern T1 T750f26(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_mod */
extern T1 T716f28(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_mod */
extern T1 T703f31(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_mod */
extern T1 T697f31(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_mod */
extern T1 T655f87(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_mod */
extern T1 T183f64(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or */
extern T1 T1675f15(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or */
extern T1 T1289f8(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or */
extern T1 T1288f8(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or */
extern T1 T1263f30(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_or */
extern T1 T1261f18(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or */
extern T1 T1260f25(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_or */
extern T1 T1259f15(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or */
extern T1 T1192f20(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or */
extern T1 T750f27(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or */
extern T1 T716f13(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or */
extern T1 T703f16(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or */
extern T1 T697f15(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or */
extern T1 T655f71(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or */
extern T1 T183f46(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_plus */
extern T1 T1675f17(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_plus */
extern T1 T1289f22(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_plus */
extern T1 T1288f22(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_plus */
extern T1 T1263f32(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_plus */
extern T1 T1261f55(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_plus */
extern T1 T1260f46(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_plus */
extern T1 T1259f43(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_plus */
extern T1 T1192f46(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_plus */
extern T1 T750f29(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_plus */
extern T1 T716f29(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_plus */
extern T1 T703f32(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_plus */
extern T1 T697f32(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_plus */
extern T1 T655f88(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_plus */
extern T1 T183f65(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_power */
extern T1 T1675f18(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_power */
extern T1 T1289f23(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_power */
extern T1 T1288f23(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_power */
extern T1 T1263f33(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_power */
extern T1 T1261f56(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_power */
extern T1 T1260f47(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_power */
extern T1 T1259f44(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_power */
extern T1 T1192f47(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_power */
extern T1 T750f30(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_power */
extern T1 T716f30(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_power */
extern T1 T703f33(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_power */
extern T1 T697f33(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_power */
extern T1 T655f89(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_power */
extern T1 T183f66(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_times */
extern T1 T1675f19(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_times */
extern T1 T1289f24(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_times */
extern T1 T1288f24(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_times */
extern T1 T1263f34(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_times */
extern T1 T1261f57(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_times */
extern T1 T1260f48(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_times */
extern T1 T1259f45(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_times */
extern T1 T1192f48(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_times */
extern T1 T750f31(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_times */
extern T1 T716f31(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_times */
extern T1 T703f34(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_times */
extern T1 T697f34(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_times */
extern T1 T655f90(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_times */
extern T1 T183f67(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_xor */
extern T1 T1675f20(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor */
extern T1 T1289f25(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_xor */
extern T1 T1288f25(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_xor */
extern T1 T1263f35(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_xor */
extern T1 T1261f58(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_xor */
extern T1 T1260f49(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_xor */
extern T1 T1259f46(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_xor */
extern T1 T1192f49(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_xor */
extern T1 T750f32(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_xor */
extern T1 T716f32(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_xor */
extern T1 T703f35(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_xor */
extern T1 T697f35(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_xor */
extern T1 T655f91(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_xor */
extern T1 T183f68(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_dotdot */
extern T1 T1675f23(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_dotdot */
extern T1 T1289f28(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_dotdot */
extern T1 T1288f28(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_dotdot */
extern T1 T1263f37(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_dotdot */
extern T1 T1261f71(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_dotdot */
extern T1 T1260f60(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_dotdot */
extern T1 T1259f57(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_dotdot */
extern T1 T1192f60(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_dotdot */
extern T1 T750f57(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_dotdot */
extern T1 T716f35(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_dotdot */
extern T1 T703f38(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_dotdot */
extern T1 T697f38(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_dotdot */
extern T1 T655f95(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_dotdot */
extern T1 T183f86(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_minus */
extern T1 T1675f24(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_minus */
extern T1 T1289f11(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_minus */
extern T1 T1288f11(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_minus */
extern T1 T1263f16(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix_minus */
extern T1 T1261f46(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_minus */
extern T1 T1260f6(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_prefix_minus */
extern T1 T1259f30(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_minus */
extern T1 T1192f35(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_minus */
extern T1 T750f13(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_minus */
extern T1 T716f18(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_minus */
extern T1 T703f21(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_minus */
extern T1 T697f21(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_minus */
extern T1 T655f77(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_minus */
extern T1 T183f54(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_plus */
extern T1 T1675f35(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_plus */
extern T1 T1289f12(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_plus */
extern T1 T1288f12(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_plus */
extern T1 T1263f17(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix_plus */
extern T1 T1261f5(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_plus */
extern T1 T1260f7(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_prefix_plus */
extern T1 T1259f31(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_plus */
extern T1 T1192f36(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_plus */
extern T1 T750f14(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_plus */
extern T1 T716f19(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_plus */
extern T1 T703f22(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_plus */
extern T1 T697f22(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_plus */
extern T1 T655f78(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_plus */
extern T1 T183f55(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_not */
extern T1 T1675f37(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not */
extern T1 T1289f13(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_not */
extern T1 T1288f13(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_not */
extern T1 T1263f18(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix_not */
extern T1 T1261f6(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_not */
extern T1 T1260f8(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_prefix_not */
extern T1 T1259f32(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_not */
extern T1 T1192f37(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_not */
extern T1 T750f15(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_not */
extern T1 T716f20(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_not */
extern T1 T703f23(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_not */
extern T1 T697f23(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_not */
extern T1 T655f79(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_not */
extern T1 T183f56(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.hash_code */
extern T6 T750f6(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_precursor */
extern T1 T1675f26(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_precursor */
extern T1 T1261f69(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_precursor */
extern T1 T1260f58(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_precursor */
extern T1 T1259f55(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_precursor */
extern T1 T1192f58(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_precursor */
extern T1 T716f16(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_precursor */
extern T1 T703f19(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_precursor */
extern T1 T697f18(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_precursor */
extern T1 T679f10(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_precursor */
extern T1 T655f75(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_precursor */
extern T1 T183f77(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.precursor_keyword */
extern T0* T1675f27(GE_context* ac, T0* C);
/* ET_INFIX_NAME.precursor_keyword */
extern T0* T1261f70(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.precursor_keyword */
extern T0* T1260f59(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.precursor_keyword */
extern T0* T1259f56(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.precursor_keyword */
extern T0* T1192f59(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.precursor_keyword */
extern T0* T716f17(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.precursor_keyword */
extern T0* T703f20(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.precursor_keyword */
extern T0* T697f19(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.precursor_keyword */
extern T0* T679f11(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.precursor_keyword */
extern T0* T655f76(GE_context* ac, T0* C);
/* ET_IDENTIFIER.precursor_keyword */
extern T0* T183f78(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and_then */
extern T1 T1675f5(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then */
extern T1 T1289f4(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_then */
extern T1 T1263f20(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_and_then */
extern T1 T1261f14(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and_then */
extern T1 T1260f21(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_and_then */
extern T1 T1259f11(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and_then */
extern T1 T1192f16(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and_then */
extern T1 T750f17(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_then */
extern T1 T716f9(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_then */
extern T1 T703f12(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and_then */
extern T1 T697f11(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_then */
extern T1 T655f67(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and_then */
extern T1 T183f42(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_implies */
extern T1 T1675f10(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies */
extern T1 T1289f6(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_implies */
extern T1 T1288f6(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_implies */
extern T1 T1263f25(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_implies */
extern T1 T1261f16(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_implies */
extern T1 T1260f23(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_implies */
extern T1 T1259f13(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_implies */
extern T1 T1192f18(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_implies */
extern T1 T750f22(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_implies */
extern T1 T716f11(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_implies */
extern T1 T703f14(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_implies */
extern T1 T697f13(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_implies */
extern T1 T655f69(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_implies */
extern T1 T183f44(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or_else */
extern T1 T1675f16(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else */
extern T1 T1288f5(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_else */
extern T1 T1263f31(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_or_else */
extern T1 T1261f15(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or_else */
extern T1 T1260f22(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_or_else */
extern T1 T1259f12(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or_else */
extern T1 T1192f17(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or_else */
extern T1 T750f28(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_else */
extern T1 T716f10(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_else */
extern T1 T703f13(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or_else */
extern T1 T697f12(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_else */
extern T1 T655f68(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or_else */
extern T1 T183f43(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.lower_name */
extern T0* T1675f28(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.name */
extern T0* T1675f30(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.lower_name */
extern T0* T1289f29(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.name */
extern T0* T1289f31(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.lower_name */
extern T0* T1288f29(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.name */
extern T0* T1288f31(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.lower_name */
extern T0* T716f39(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.name */
extern T0* T716f79(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.lower_name */
extern T0* T703f40(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.name */
extern T0* T703f41(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.lower_name */
extern T0* T697f40(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.name */
extern T0* T697f44(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.lower_name */
extern T0* T679f16(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.lower_name */
extern T0* T655f97(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.name */
extern T0* T655f98(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.position */
extern T0* T1675f29(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.position */
extern T0* T1289f30(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.position */
extern T0* T1288f30(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.position */
extern T0* T716f36(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.position */
extern T0* T703f5(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.position */
extern T0* T697f39(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.position */
extern T0* T679f12(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_tuple_label */
extern T1 T1675f25(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_tuple_label */
extern T1 T1289f10(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_tuple_label */
extern T1 T1288f10(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_tuple_label */
extern T1 T716f15(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_tuple_label */
extern T1 T703f18(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_tuple_label */
extern T1 T697f17(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_tuple_label */
extern T1 T655f73(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_call_agent */
extern T1 T1802f17(GE_context* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.is_call_agent */
extern T1 T1671f6(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_call_agent */
extern T1 T1291f10(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_call_agent */
extern T1 T1287f10(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_call_agent */
extern T1 T1271f10(GE_context* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.is_call_agent */
extern T1 T1187f6(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_call_agent */
extern T1 T756f8(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T308f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T305f6(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_tuple_label */
extern T1 T1802f16(GE_context* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.is_tuple_label */
extern T1 T1671f5(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_tuple_label */
extern T1 T1291f9(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_tuple_label */
extern T1 T1287f9(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_tuple_label */
extern T1 T1271f9(GE_context* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.is_tuple_label */
extern T1 T1187f5(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_tuple_label */
extern T1 T759f24(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_tuple_label */
extern T1 T756f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_tuple_label */
extern T1 T308f8(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.is_tuple_label */
extern T1 T305f5(GE_context* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.position */
extern T0* T1671f7(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.position */
extern T0* T1271f11(GE_context* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.position */
extern T0* T1187f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.position */
extern T0* T305f8(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments */
extern T0* T1802f14(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.arguments */
extern T0* T1291f8(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.arguments */
extern T0* T1271f8(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.name */
extern T0* T1802f15(GE_context* ac, T0* C);
/* ET_CALL_AGENT.name */
extern T0* T759f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.name */
extern T0* T308f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.name */
extern T0* T305f7(GE_context* ac, T0* C);
/* ET_INFIX_NAME.feature_name */
extern T0* T1261f13(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.feature_name */
extern T0* T1260f27(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.feature_name */
extern T0* T1259f10(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.feature_name */
extern T0* T1192f27(GE_context* ac, T0* C);
/* ET_IDENTIFIER.feature_name */
extern T0* T183f28(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once */
extern T1 T1258f56(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once */
extern T1 T539f52(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_once */
extern T1 T533f54(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_query */
extern T1 T1258f57(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_query */
extern T1 T1257f57(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_query */
extern T1 T1255f57(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_query */
extern T1 T1254f61(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_query */
extern T1 T1253f59(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_query */
extern T1 T539f53(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_query */
extern T1 T533f55(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_query */
extern T1 T387f53(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_query */
extern T1 T386f56(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_query */
extern T1 T384f55(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_query */
extern T1 T355f58(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_query */
extern T1 T259f42(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_dotnet */
extern T1 T1258f73(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_dotnet */
extern T1 T1257f71(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_dotnet */
extern T1 T1255f68(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_dotnet */
extern T1 T1254f72(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_dotnet */
extern T1 T1253f69(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_dotnet */
extern T1 T539f67(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_dotnet */
extern T1 T533f68(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_dotnet */
extern T1 T387f64(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_dotnet */
extern T1 T386f66(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_dotnet */
extern T1 T384f66(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_dotnet */
extern T1 T355f68(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_dotnet */
extern T1 T259f72(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.same_version */
extern T1 T1258f74(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.same_version */
extern T1 T1257f72(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.same_version */
extern T1 T1255f69(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.same_version */
extern T1 T1254f73(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.same_version */
extern T1 T1253f70(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.same_version */
extern T1 T539f68(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.same_version */
extern T1 T533f69(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.same_version */
extern T1 T387f65(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.same_version */
extern T1 T386f67(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.same_version */
extern T1 T384f67(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.same_version */
extern T1 T355f69(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.same_version */
extern T1 T259f73(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.undefined_feature */
extern T0* T1258f70(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_feature_clause */
extern void T539f89(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_semicolon */
extern void T539f88(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_end_keyword */
extern void T539f87(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.undefined_feature */
extern T0* T1257f68(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.undefined_feature */
extern T0* T1255f66(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_feature_clause */
extern void T1255f91(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_semicolon */
extern void T1255f90(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_end_keyword */
extern void T1255f89(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.undefined_feature */
extern T0* T1254f70(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.undefined_feature */
extern T0* T1253f67(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.undefined_feature */
extern T0* T539f65(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.undefined_feature */
extern T0* T533f66(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.undefined_feature */
extern T0* T387f62(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.obsolete_message */
extern T0* T387f68(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.undefined_feature */
extern T0* T386f64(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.obsolete_message */
extern T0* T386f70(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.undefined_feature */
extern T0* T384f64(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.obsolete_message */
extern T0* T384f70(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.undefined_feature */
extern T0* T355f66(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.undefined_feature */
extern T0* T259f70(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.renamed_feature */
extern T0* T1258f71(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_feature_clause */
extern void T1258f95(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_semicolon */
extern void T1258f94(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_end_keyword */
extern void T1258f93(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.renamed_feature */
extern T0* T1257f69(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_feature_clause */
extern void T1257f96(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_semicolon */
extern void T1257f95(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_end_keyword */
extern void T1257f94(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.renamed_feature */
extern T0* T1255f67(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_deferred_keyword */
extern void T1255f88(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.renamed_feature */
extern T0* T1254f71(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_feature_clause */
extern void T1254f98(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_semicolon */
extern void T1254f97(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_end_keyword */
extern void T1254f96(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.renamed_feature */
extern T0* T1253f68(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_feature_clause */
extern void T1253f94(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_semicolon */
extern void T1253f93(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_end_keyword */
extern void T1253f92(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.renamed_feature */
extern T0* T539f66(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_deferred_keyword */
extern void T539f86(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.renamed_feature */
extern T0* T533f67(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_feature_clause */
extern void T533f92(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_semicolon */
extern void T533f91(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_end_keyword */
extern void T533f90(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.renamed_feature */
extern T0* T387f63(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_indexing */
extern void T387f82(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_feature_clause */
extern void T387f81(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_semicolon */
extern void T387f80(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.renamed_feature */
extern T0* T386f65(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_indexing */
extern void T386f86(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_feature_clause */
extern void T386f85(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_semicolon */
extern void T386f84(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_unique_keyword */
extern void T386f83(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_is_keyword */
extern void T386f82(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.renamed_feature */
extern T0* T384f65(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_indexing */
extern void T384f85(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_feature_clause */
extern void T384f84(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_semicolon */
extern void T384f83(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_is_keyword */
extern void T384f82(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.renamed_feature */
extern T0* T355f67(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_feature_clause */
extern void T355f92(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_semicolon */
extern void T355f91(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_end_keyword */
extern void T355f90(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.renamed_feature */
extern T0* T259f71(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_feature_clause */
extern void T259f98(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_semicolon */
extern void T259f97(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_end_keyword */
extern void T259f96(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_bracketable */
extern T1 T1258f68(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_bracketable */
extern T1 T1257f66(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_bracketable */
extern T1 T539f64(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_bracketable */
extern T1 T533f65(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_prefixable */
extern T1 T1258f67(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_prefixable */
extern T1 T1257f65(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_prefixable */
extern T1 T539f63(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_prefixable */
extern T1 T533f64(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_infixable */
extern T1 T1258f66(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_infixable */
extern T1 T1257f64(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_infixable */
extern T1 T539f62(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_infixable */
extern T1 T533f63(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_attribute */
extern T1 T1258f32(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_attribute */
extern T1 T1257f32(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_attribute */
extern T1 T539f39(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_attribute */
extern T1 T533f38(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once_per_process */
extern T1 T1258f34(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_once_per_process */
extern T1 T1257f34(GE_context* ac, T0* C);
/* ET_INDEXING_LIST.has_tagged_indexing_term_value */
extern T1 T886f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INDEXING_TERM_LIST.has_indexing_term_value */
extern T1 T898f4(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.is_once_per_process */
extern T1 T1255f44(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_once_per_process */
extern T1 T1254f43(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_once_per_process */
extern T1 T1253f43(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once_per_process */
extern T1 T539f37(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_once_per_process */
extern T1 T533f37(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_once_per_process */
extern T1 T387f25(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once_per_process */
extern T1 T386f25(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once_per_process */
extern T1 T384f26(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once_per_process */
extern T1 T355f45(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once_per_process */
extern T1 T259f55(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.type */
extern T0* T1258f36(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.type */
extern T0* T1257f35(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.type */
extern T0* T539f31(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.type */
extern T0* T533f39(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_constant_attribute */
extern T1 T1258f38(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_constant_attribute */
extern T1 T1257f37(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_constant_attribute */
extern T1 T539f32(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_constant_attribute */
extern T1 T533f30(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_unique_attribute */
extern T1 T1258f41(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_unique_attribute */
extern T1 T1257f38(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_unique_attribute */
extern T1 T539f33(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_unique_attribute */
extern T1 T533f32(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_procedure */
extern T1 T1258f55(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_procedure */
extern T1 T1257f55(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_procedure */
extern T1 T1255f56(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_procedure */
extern T1 T1254f60(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_procedure */
extern T1 T1253f58(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_procedure */
extern T1 T539f51(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_procedure */
extern T1 T533f53(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_procedure */
extern T1 T387f52(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_procedure */
extern T1 T386f55(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_procedure */
extern T1 T384f54(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_procedure */
extern T1 T355f57(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_procedure */
extern T1 T259f41(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.lower_name */
extern T0* T1258f31(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.lower_name */
extern T0* T1257f31(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.lower_name */
extern T0* T539f38(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.lower_name */
extern T0* T533f36(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_never_void */
extern T1 T1802f11(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_never_void */
extern T1 T1800f11(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_never_void */
extern T1 T1681f11(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_never_void */
extern T1 T1293f11(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_never_void */
extern T1 T1292f6(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_never_void */
extern T1 T1291f5(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_never_void */
extern T1 T1287f13(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_never_void */
extern T1 T1282f9(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_never_void */
extern T1 T1111f8(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_never_void */
extern T1 T972f8(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_never_void */
extern T1 T943f6(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.is_never_void */
extern T1 T880f10(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_never_void */
extern T1 T756f5(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_never_void */
extern T1 T730f17(GE_context* ac, T0* C);
/* ET_VOID.is_never_void */
extern T1 T719f11(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_never_void */
extern T1 T340f5(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_never_void */
extern T1 T339f5(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_never_void */
extern T1 T338f6(GE_context* ac, T0* C);
/* ET_RESULT.is_never_void */
extern T1 T331f5(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T309f5(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T308f6(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_never_void */
extern T1 T183f8(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_true */
extern T1 T1300f26(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_true */
extern T1 T1299f32(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_true */
extern T1 T1298f29(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_true */
extern T1 T1297f28(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_true */
extern T1 T1296f33(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_true */
extern T1 T1295f30(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_true */
extern T1 T1294f15(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_true */
extern T1 T1293f21(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_true */
extern T1 T1292f14(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_true */
extern T1 T1291f19(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_true */
extern T1 T1290f15(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_true */
extern T1 T1287f17(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_true */
extern T1 T1286f14(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_true */
extern T1 T1285f14(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_true */
extern T1 T1284f14(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_true */
extern T1 T1283f14(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_true */
extern T1 T1282f18(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_true */
extern T1 T1237f22(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_true */
extern T1 T1236f22(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_true */
extern T1 T1235f23(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_true */
extern T1 T1234f23(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_true */
extern T1 T1232f25(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_true */
extern T1 T1231f25(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_true */
extern T1 T1230f49(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_true */
extern T1 T1229f49(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_true */
extern T1 T1228f49(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_true */
extern T1 T1227f49(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_true */
extern T1 T1226f49(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_true */
extern T1 T1225f17(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_true */
extern T1 T1224f17(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_true */
extern T1 T1223f15(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_true */
extern T1 T1191f23(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_true */
extern T1 T1111f18(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_true */
extern T1 T975f19(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_true */
extern T1 T972f18(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_true */
extern T1 T943f15(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_true */
extern T1 T929f20(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.is_true */
extern T1 T880f20(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_true */
extern T1 T759f20(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_true */
extern T1 T756f18(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_true */
extern T1 T730f24(GE_context* ac, T0* C);
/* ET_VOID.is_true */
extern T1 T719f21(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_true */
extern T1 T349f20(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_true */
extern T1 T340f14(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_true */
extern T1 T339f15(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_true */
extern T1 T338f17(GE_context* ac, T0* C);
/* ET_RESULT.is_true */
extern T1 T331f22(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_true */
extern T1 T311f21(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_true */
extern T1 T309f16(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_true */
extern T1 T308f19(GE_context* ac, T0* C);
/* ET_CURRENT.is_true */
extern T1 T303f22(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_true */
extern T1 T183f87(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_current */
extern T1 T1802f5(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_current */
extern T1 T1801f5(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_current */
extern T1 T1800f5(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_current */
extern T1 T1681f4(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1300f20(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1299f26(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1298f24(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1297f22(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1296f27(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1295f25(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_current */
extern T1 T1294f11(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_current */
extern T1 T1293f17(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_current */
extern T1 T1292f10(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_current */
extern T1 T1291f12(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_current */
extern T1 T1290f11(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_current */
extern T1 T1287f12(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_current */
extern T1 T1286f10(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_current */
extern T1 T1285f10(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_current */
extern T1 T1284f10(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_current */
extern T1 T1283f10(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_current */
extern T1 T1282f14(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_current */
extern T1 T1237f17(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_current */
extern T1 T1236f17(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_current */
extern T1 T1235f18(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_current */
extern T1 T1234f18(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_current */
extern T1 T1232f20(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_current */
extern T1 T1231f20(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_current */
extern T1 T1230f44(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_current */
extern T1 T1229f44(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_current */
extern T1 T1228f44(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_current */
extern T1 T1227f44(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_current */
extern T1 T1226f44(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_current */
extern T1 T1225f12(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_current */
extern T1 T1224f12(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_current */
extern T1 T1223f10(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_current */
extern T1 T1191f18(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_current */
extern T1 T1111f14(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_current */
extern T1 T975f14(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_current */
extern T1 T972f14(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_current */
extern T1 T943f11(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_current */
extern T1 T929f14(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.is_current */
extern T1 T880f16(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_current */
extern T1 T759f15(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_current */
extern T1 T756f12(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_current */
extern T1 T730f21(GE_context* ac, T0* C);
/* ET_VOID.is_current */
extern T1 T719f15(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_current */
extern T1 T349f13(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_current */
extern T1 T340f10(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_current */
extern T1 T339f10(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_current */
extern T1 T338f13(GE_context* ac, T0* C);
/* ET_RESULT.is_current */
extern T1 T331f18(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_current */
extern T1 T311f17(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_current */
extern T1 T309f11(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_current */
extern T1 T308f14(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_current */
extern T1 T183f76(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1300f32(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1299f38(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1298f34(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1297f33(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1296f39(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1295f35(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_false */
extern T1 T1294f21(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_false */
extern T1 T1293f26(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_false */
extern T1 T1292f18(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_false */
extern T1 T1291f23(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_false */
extern T1 T1290f19(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_false */
extern T1 T1287f21(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_false */
extern T1 T1286f18(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_false */
extern T1 T1285f18(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_false */
extern T1 T1284f18(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_false */
extern T1 T1283f18(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_false */
extern T1 T1282f22(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_false */
extern T1 T1237f31(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_false */
extern T1 T1236f31(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_false */
extern T1 T1235f32(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_false */
extern T1 T1234f32(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_false */
extern T1 T1232f34(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_false */
extern T1 T1231f34(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_false */
extern T1 T1230f59(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_false */
extern T1 T1229f59(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_false */
extern T1 T1228f59(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_false */
extern T1 T1227f59(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_false */
extern T1 T1226f59(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_false */
extern T1 T1225f34(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_false */
extern T1 T1224f38(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_false */
extern T1 T1223f32(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_false */
extern T1 T1191f33(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_false */
extern T1 T1111f23(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_false */
extern T1 T975f25(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_false */
extern T1 T972f22(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_false */
extern T1 T943f19(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_false */
extern T1 T929f24(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.is_false */
extern T1 T880f24(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_false */
extern T1 T759f27(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_false */
extern T1 T756f22(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_false */
extern T1 T730f30(GE_context* ac, T0* C);
/* ET_VOID.is_false */
extern T1 T719f26(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_false */
extern T1 T349f25(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_false */
extern T1 T340f18(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_false */
extern T1 T339f20(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_false */
extern T1 T338f21(GE_context* ac, T0* C);
/* ET_RESULT.is_false */
extern T1 T331f27(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_false */
extern T1 T311f25(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T309f20(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T308f23(GE_context* ac, T0* C);
/* ET_CURRENT.is_false */
extern T1 T303f27(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_false */
extern T1 T183f99(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.unparenthesized_expression */
extern T0* T1802f7(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.unparenthesized_expression */
extern T0* T1801f7(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.unparenthesized_expression */
extern T0* T1800f7(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.unparenthesized_expression */
extern T0* T1681f5(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1300f23(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1299f29(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1298f26(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1297f25(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1296f30(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1295f27(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.unparenthesized_expression */
extern T0* T1294f12(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.unparenthesized_expression */
extern T0* T1293f18(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.unparenthesized_expression */
extern T0* T1292f11(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.unparenthesized_expression */
extern T0* T1291f16(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.unparenthesized_expression */
extern T0* T1290f12(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.unparenthesized_expression */
extern T0* T1287f14(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.unparenthesized_expression */
extern T0* T1286f11(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.unparenthesized_expression */
extern T0* T1285f11(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.unparenthesized_expression */
extern T0* T1284f11(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.unparenthesized_expression */
extern T0* T1283f11(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.unparenthesized_expression */
extern T0* T1282f15(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1237f18(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1236f18(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.unparenthesized_expression */
extern T0* T1235f19(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.unparenthesized_expression */
extern T0* T1234f19(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.unparenthesized_expression */
extern T0* T1232f21(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.unparenthesized_expression */
extern T0* T1231f21(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1230f45(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1229f45(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1228f45(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1227f45(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1226f45(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.unparenthesized_expression */
extern T0* T1225f13(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.unparenthesized_expression */
extern T0* T1224f13(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1223f11(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.unparenthesized_expression */
extern T0* T1191f19(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.unparenthesized_expression */
extern T0* T1111f15(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.unparenthesized_expression */
extern T0* T975f16(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T972f15(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.unparenthesized_expression */
extern T0* T943f12(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.unparenthesized_expression */
extern T0* T929f16(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.unparenthesized_expression */
extern T0* T880f17(GE_context* ac, T0* C);
/* ET_CALL_AGENT.unparenthesized_expression */
extern T0* T759f17(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.unparenthesized_expression */
extern T0* T756f15(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.unparenthesized_expression */
extern T0* T730f22(GE_context* ac, T0* C);
/* ET_VOID.unparenthesized_expression */
extern T0* T719f16(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.unparenthesized_expression */
extern T0* T349f17(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T340f11(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T339f12(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.unparenthesized_expression */
extern T0* T338f14(GE_context* ac, T0* C);
/* ET_RESULT.unparenthesized_expression */
extern T0* T331f19(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.unparenthesized_expression */
extern T0* T311f18(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T309f13(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T308f16(GE_context* ac, T0* C);
/* ET_CURRENT.unparenthesized_expression */
extern T0* T303f19(GE_context* ac, T0* C);
/* ET_IDENTIFIER.unparenthesized_expression */
extern T0* T183f79(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1802f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FROM_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1801f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_BUILTIN_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1800f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_CAST_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1681f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1300f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1299f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1298f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1297f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1296f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1295f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T1294f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OLD_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T1293f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OLD_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1292f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PREFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1291f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.manifest_constant_convert_feature */
extern T0* T1290f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1287f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXPRESSION_ADDRESS.manifest_constant_convert_feature */
extern T0* T1286f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT_ADDRESS.manifest_constant_convert_feature */
extern T0* T1285f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CURRENT_ADDRESS.manifest_constant_convert_feature */
extern T0* T1284f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_ADDRESS.manifest_constant_convert_feature */
extern T0* T1283f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1282f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C2_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1237f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C1_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1236f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FALSE_CONSTANT.manifest_constant_convert_feature */
extern T0* T1235f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TRUE_CONSTANT.manifest_constant_convert_feature */
extern T0* T1234f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T1232f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T1231f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BINARY_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1230f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OCTAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1229f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1228f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1227f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1226f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SPECIAL_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T1225f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SPECIAL_MANIFEST_STRING.tokens */
extern T0* T1225f38(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.manifest_constant_convert_feature */
extern T0* T1224f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VERBATIM_STRING.tokens */
extern T0* T1224f42(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1223f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T1191f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_MANIFEST_STRING.tokens */
extern T0* T1191f36(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T1111f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.manifest_constant_convert_feature */
extern T0* T975f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T972f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.manifest_constant_convert_feature */
extern T0* T943f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_ARRAY.manifest_constant_convert_feature */
extern T0* T929f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IF_EXPRESSION.manifest_constant_convert_feature */
extern T0* T880f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.manifest_constant_convert_feature */
extern T0* T759f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T756f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACROSS_EXPRESSION.manifest_constant_convert_feature */
extern T0* T730f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VOID.manifest_constant_convert_feature */
extern T0* T719f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.manifest_constant_convert_feature */
extern T0* T349f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T340f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T339f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T338f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT.manifest_constant_convert_feature */
extern T0* T331f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TUPLE.manifest_constant_convert_feature */
extern T0* T311f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T309f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T308f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CURRENT.manifest_constant_convert_feature */
extern T0* T303f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER.manifest_constant_convert_feature */
extern T0* T183f97(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_TO_EXPRESSION.position */
extern T0* T1802f6(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.position */
extern T0* T1801f6(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.position */
extern T0* T1800f6(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.position */
extern T0* T1681f7(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.position */
extern T0* T1300f19(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.position */
extern T0* T1299f24(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.position */
extern T0* T1298f22(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.position */
extern T0* T1297f21(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.position */
extern T0* T1296f25(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.position */
extern T0* T1295f23(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.position */
extern T0* T1294f10(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.position */
extern T0* T1293f16(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.position */
extern T0* T1292f9(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.position */
extern T0* T1291f11(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.position */
extern T0* T1290f10(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.position */
extern T0* T1287f11(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.position */
extern T0* T1286f9(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.position */
extern T0* T1285f9(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.position */
extern T0* T1284f9(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.position */
extern T0* T1283f9(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.position */
extern T0* T1282f13(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.position */
extern T0* T1237f16(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.position */
extern T0* T1236f16(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.position */
extern T0* T1235f17(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.position */
extern T0* T1234f17(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.position */
extern T0* T1232f19(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.position */
extern T0* T1231f19(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.position */
extern T0* T1230f43(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.position */
extern T0* T1229f43(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position */
extern T0* T1228f43(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position */
extern T0* T1227f43(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.position */
extern T0* T1226f43(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.position */
extern T0* T1225f27(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.position */
extern T0* T1224f27(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.position */
extern T0* T1223f9(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.position */
extern T0* T1191f14(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.position */
extern T0* T1111f13(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.position */
extern T0* T975f13(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_empty */
extern T1 T975f20(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.position */
extern T0* T972f13(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.position */
extern T0* T943f10(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T929f13(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_empty */
extern T1 T929f19(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.position */
extern T0* T880f15(GE_context* ac, T0* C);
/* ET_CALL_AGENT.position */
extern T0* T759f14(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.position */
extern T0* T756f11(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.position */
extern T0* T730f20(GE_context* ac, T0* C);
/* ET_VOID.position */
extern T0* T719f14(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.position */
extern T0* T349f12(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.position */
extern T0* T340f9(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.position */
extern T0* T339f9(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.position */
extern T0* T338f12(GE_context* ac, T0* C);
/* ET_RESULT.position */
extern T0* T331f14(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.position */
extern T0* T311f15(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_empty */
extern T1 T311f16(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.position */
extern T0* T309f10(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.position */
extern T0* T308f11(GE_context* ac, T0* C);
/* ET_CURRENT.position */
extern T0* T303f12(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.last_leaf */
extern T0* T1802f21(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.last_leaf */
extern T0* T1801f21(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.last_leaf */
extern T0* T1800f16(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.last_leaf */
extern T0* T1681f15(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T1300f34(GE_context* ac, T0* C);
extern T1 T1300f34ot1(T0* a1, T0** a2);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.last_leaf */
extern T0* T745f10(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T1299f40(GE_context* ac, T0* C);
extern T1 T1299f40ot1(T0* a1, T0** a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T1298f36(GE_context* ac, T0* C);
extern T1 T1298f36ot1(T0* a1, T0** a2);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T1297f35(GE_context* ac, T0* C);
extern T1 T1297f35ot1(T0* a1, T0** a2);
/* ET_ONCE_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T1296f41(GE_context* ac, T0* C);
extern T1 T1296f41ot1(T0* a1, T0** a2);
/* ET_DO_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T1295f37(GE_context* ac, T0* C);
extern T1 T1295f37ot1(T0* a1, T0** a2);
/* ET_ONCE_MANIFEST_STRING.last_leaf */
extern T0* T1294f22(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.last_leaf */
extern T0* T1293f27(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.last_leaf */
extern T0* T1292f19(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.last_leaf */
extern T0* T1291f24(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.last_leaf */
extern T0* T1290f20(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.last_leaf */
extern T0* T1287f22(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.last_leaf */
extern T0* T1286f19(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.last_leaf */
extern T0* T1285f19(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.last_leaf */
extern T0* T1284f19(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.last_leaf */
extern T0* T1283f19(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.last_leaf */
extern T0* T1282f23(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_leaf */
extern T0* T1237f40(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.last_leaf */
extern T0* T1236f40(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.last_leaf */
extern T0* T1235f37(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.last_leaf */
extern T0* T1234f37(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_leaf */
extern T0* T1232f39(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_leaf */
extern T0* T1231f39(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.last_leaf */
extern T0* T1230f68(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.last_leaf */
extern T0* T1229f68(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_leaf */
extern T0* T1228f68(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_leaf */
extern T0* T1227f68(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_leaf */
extern T0* T1226f68(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_leaf */
extern T0* T1225f41(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.last_leaf */
extern T0* T1224f45(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_leaf */
extern T0* T1223f41(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_leaf */
extern T0* T1191f40(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.last_leaf */
extern T0* T1111f24(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.last_leaf */
extern T0* T975f26(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.last_leaf */
extern T0* T972f27(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.last_leaf */
extern T0* T943f20(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.last_leaf */
extern T0* T929f25(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.last_leaf */
extern T0* T880f25(GE_context* ac, T0* C);
/* ET_CALL_AGENT.last_leaf */
extern T0* T759f28(GE_context* ac, T0* C);
extern T1 T759f28ot1(T0* a1, T0** a2);
/* ET_BRACKET_EXPRESSION.last_leaf */
extern T0* T756f23(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.last_leaf */
extern T0* T655f100(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.last_leaf */
extern T0* T730f31(GE_context* ac, T0* C);
/* ET_VOID.last_leaf */
extern T0* T719f27(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.last_leaf */
extern T0* T349f22(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.last_leaf */
extern T0* T340f19(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.last_leaf */
extern T0* T339f21(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.last_leaf */
extern T0* T338f22(GE_context* ac, T0* C);
/* ET_RESULT.last_leaf */
extern T0* T331f28(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.last_leaf */
extern T0* T311f26(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.last_leaf */
extern T0* T309f26(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.last_leaf */
extern T0* T308f24(GE_context* ac, T0* C);
/* ET_CURRENT.last_leaf */
extern T0* T303f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T1489f7(GE_context* ac, T0* C, T0* a1);
extern T1 T1489f7ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T1489f7p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T1489f12(GE_context* ac, T0* C, T0* a1);
extern T1 T1489f12ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T1489f12p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T540f10(GE_context* ac, T0* C, T0* a1);
extern T1 T540f10ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T540f10p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T540f13(GE_context* ac, T0* C, T0* a1);
extern T1 T540f13ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T540f13p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_type */
extern T1 T532f31(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_type */
extern T1 T531f31(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.has_type */
extern T1 T341f37(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.has_type */
extern T1 T324f37(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T291f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T291f7p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T291f11(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T291f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.has_type */
extern T1 T240f21(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.special_type */
extern T0* T1489f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.special_type */
extern T0* T540f14(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.special_type */
extern T0* T532f48(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.special_type */
extern T0* T531f48(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.special_type */
extern T0* T341f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.special_type */
extern T0* T324f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.special_type */
extern T0* T291f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.special_type */
extern T0* T240f45(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_empty */
extern T1 T1489f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_empty */
extern T1 T540f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_empty */
extern T1 T532f50(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_empty */
extern T1 T531f51(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_empty */
extern T1 T341f38(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_empty */
extern T1 T324f38(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_empty */
extern T1 T291f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_empty */
extern T1 T240f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_types */
extern T0* T532f41(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_types */
extern T0* T531f41(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_types */
extern T0* T341f39(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_types */
extern T0* T324f39(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.dynamic_types */
extern T0* T240f38(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_expanded */
extern T1 T1489f13(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_expanded */
extern T1 T540f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_expanded */
extern T1 T532f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_expanded */
extern T1 T531f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_expanded */
extern T1 T341f35(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_expanded */
extern T1 T324f35(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_expanded */
extern T1 T291f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.has_expanded */
extern T1 T240f48(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.count */
extern T6 T532f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.count */
extern T6 T531f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.count */
extern T6 T341f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.count */
extern T6 T324f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.count */
extern T6 T240f39(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.dynamic_type */
extern T0* T1489f14(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.dynamic_type */
extern T0* T540f11(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_type */
extern T0* T532f29(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_type */
extern T0* T531f29(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_type */
extern T0* T341f34(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_type */
extern T0* T324f34(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.dynamic_type */
extern T0* T291f5(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.dynamic_type */
extern T0* T240f41(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.can_be_void */
extern T1 T1489f11(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.can_be_void */
extern T1 T540f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.can_be_void */
extern T1 T532f37(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.can_be_void */
extern T1 T531f38(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.can_be_void */
extern T1 T341f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.can_be_void */
extern T1 T324f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.can_be_void */
extern T1 T291f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.can_be_void */
extern T1 T240f47(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_never_void */
extern T1 T532f51(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_never_void */
extern T1 T531f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_never_void */
extern T1 T341f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_never_void */
extern T1 T324f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_never_void */
extern T1 T240f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_expanded */
extern T1 T1489f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_expanded */
extern T1 T540f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_expanded */
extern T1 T291f10(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T1664f14(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.named_types */
extern T0* T1663f16(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.named_types */
extern T0* T650f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T515f2(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.named_types */
extern T0* T251f8(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T1664f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_SUBLIST.conforms_to_types */
extern T1 T1663f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_LIST.conforms_to_types */
extern T1 T650f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T515f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.conforms_to_types */
extern T1 T251f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T1664f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.same_named_types */
extern T1 T1663f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_LIST.same_named_types */
extern T1 T650f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T515f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_named_types */
extern T1 T251f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_anchored_type */
extern T1 T1664f7(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_anchored_type */
extern T1 T1663f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_anchored_type */
extern T1 T650f15(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_anchored_type */
extern T1 T515f8(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_anchored_type */
extern T1 T251f16(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T1664f8(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_formal_types */
extern T1 T1663f8(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_types */
extern T1 T650f16(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T515f9(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.has_formal_types */
extern T1 T251f17(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T1664f9(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.depends_on_qualified_anchored_type */
extern T1 T1663f11(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T650f19(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T515f11(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T251f18(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T1664f10(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.index_of_label */
extern T6 T1663f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.index_of_label */
extern T6 T650f20(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T515f12(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.index_of_label */
extern T6 T251f19(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T1664f11(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_identifier_anchored_type */
extern T1 T1663f13(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T650f21(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T515f13(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T251f20(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T1664f12(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.resolved_formal_parameters */
extern T0* T1663f14(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T650f22(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T515f14(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T251f21(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T1664f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.same_syntactical_types */
extern T1 T1663f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T650f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T515f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T251f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T1664f17(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.is_empty */
extern T1 T1663f4(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.is_empty */
extern T1 T650f11(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T515f5(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T251f11(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T1664f16(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.type */
extern T0* T1663f18(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.type */
extern T0* T650f10(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T515f4(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.type */
extern T0* T251f9(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.item */
extern T0* T251f7(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T1664f15(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.actual_parameter */
extern T0* T1663f19(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.actual_parameter */
extern T0* T650f24(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T515f10(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.actual_parameter */
extern T0* T251f6(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.count */
extern T6 T1663f17(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T1664f18(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.last_leaf */
extern T0* T1663f21(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_leaf */
extern T0* T82f1506(GE_context* ac, T0* C);
/* ET_AST_NULL_LEAF.make */
extern T0* T1863c5(GE_context* ac);
/* ET_FORMAL_PARAMETER_LIST.last_leaf */
extern T0* T650f25(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T515f16(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.last_leaf */
extern T0* T251f25(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_reference_mark */
extern T1 T1244f3(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_reference */
extern T1 T1244f14(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_reference_mark */
extern T1 T727f69(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_reference */
extern T1 T727f14(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_reference_mark */
extern T1 T655f4(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_reference */
extern T1 T655f15(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_reference_mark */
extern T1 T508f15(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_reference */
extern T1 T508f12(GE_context* ac, T0* C);
/* ET_KEYWORD.is_reference_mark */
extern T1 T421f18(GE_context* ac, T0* C);
/* ET_SYMBOL.is_reference_mark */
extern T1 T369f4(GE_context* ac, T0* C);
/* ET_SYMBOL.is_reference */
extern T1 T369f14(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separate_mark */
extern T1 T727f6(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separate */
extern T1 T727f19(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separate_mark */
extern T1 T655f7(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separate */
extern T1 T655f20(GE_context* ac, T0* C);
/* ET_KEYWORD.is_separate_mark */
extern T1 T421f7(GE_context* ac, T0* C);
/* ET_KEYWORD.is_separate */
extern T1 T421f14(GE_context* ac, T0* C);
/* ET_SYMBOL.is_separate_mark */
extern T1 T369f7(GE_context* ac, T0* C);
/* ET_SYMBOL.is_separate */
extern T1 T369f19(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.overridden_type_mark */
extern T0* T1244f12(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.implicit_type_mark */
extern T0* T82f47(GE_context* ac, T0* C, T1 a1, T1 a2, T1 a3, T1 a4, T1 a5);
/* ET_TOKEN_CONSTANTS.implicit_no_type_mark */
extern T0* T82f84(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_reference_type_mark */
extern T0* T82f83(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_reference_mark */
extern void T368f18(GE_context* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_expanded_type_mark */
extern T0* T82f82(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_expanded_mark */
extern void T368f17(GE_context* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_separate_type_mark */
extern T0* T82f81(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_separate_reference_type_mark */
extern T0* T82f80(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_separate_expanded_type_mark */
extern T0* T82f79(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_reference_type_mark */
extern T0* T82f77(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_expanded_type_mark */
extern T0* T82f76(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_type_mark */
extern T0* T82f75(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_reference_type_mark */
extern T0* T82f74(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_expanded_type_mark */
extern T0* T82f73(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_reference_type_mark */
extern T0* T82f72(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_expanded_type_mark */
extern T0* T82f71(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_reference_type_mark */
extern T0* T82f70(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_expanded_type_mark */
extern T0* T82f69(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.tokens */
extern T0* T1244f16(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.overridden_type_mark */
extern T0* T727f12(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.overridden_type_mark */
extern T0* T655f12(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.overridden_type_mark */
extern T0* T508f17(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.tokens */
extern T0* T508f14(GE_context* ac, T0* C);
/* ET_KEYWORD.overridden_type_mark */
extern T0* T421f31(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.overridden_type_mark */
extern T0* T369f64(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.overridden_type_mark */
extern T0* T368f13(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.tokens */
extern T0* T368f11(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.text */
extern T0* T1244f10(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.text */
extern T0* T727f10(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.text */
extern T0* T655f11(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.text */
extern T0* T508f9(GE_context* ac, T0* C);
/* ET_SYMBOL.text */
extern T0* T369f11(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.text */
extern T0* T368f9(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_implicit_mark */
extern T1 T1244f9(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_implicit_mark */
extern T1 T727f9(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_implicit_mark */
extern T1 T655f10(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_implicit_mark */
extern T1 T508f8(GE_context* ac, T0* C);
/* ET_KEYWORD.is_implicit_mark */
extern T1 T421f8(GE_context* ac, T0* C);
/* ET_SYMBOL.is_implicit_mark */
extern T1 T369f10(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_expandedness_mark */
extern T1 T1244f7(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expandedness_mark */
extern T1 T727f7(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expandedness_mark */
extern T1 T655f8(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_expandedness_mark */
extern T1 T508f4(GE_context* ac, T0* C);
/* ET_KEYWORD.is_expandedness_mark */
extern T1 T421f4(GE_context* ac, T0* C);
/* ET_SYMBOL.is_expandedness_mark */
extern T1 T369f8(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_expandedness_mark */
extern T1 T368f6(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_expanded_mark */
extern T1 T1244f17(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_expanded */
extern T1 T1244f13(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expanded_mark */
extern T1 T727f61(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expanded */
extern T1 T727f13(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expanded_mark */
extern T1 T655f72(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expanded */
extern T1 T655f14(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_expanded_mark */
extern T1 T508f13(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_expanded */
extern T1 T508f11(GE_context* ac, T0* C);
/* ET_KEYWORD.is_expanded_mark */
extern T1 T421f9(GE_context* ac, T0* C);
/* ET_SYMBOL.is_expanded_mark */
extern T1 T369f3(GE_context* ac, T0* C);
/* ET_SYMBOL.is_expanded */
extern T1 T369f13(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_separateness_mark */
extern T1 T1244f8(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separateness_mark */
extern T1 T727f8(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separateness_mark */
extern T1 T655f9(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_separateness_mark */
extern T1 T508f5(GE_context* ac, T0* C);
/* ET_KEYWORD.is_separateness_mark */
extern T1 T421f5(GE_context* ac, T0* C);
/* ET_SYMBOL.is_separateness_mark */
extern T1 T369f9(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_separateness_mark */
extern T1 T368f7(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_attachment_mark */
extern T1 T1244f15(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attachment_mark */
extern T1 T727f20(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attachment_mark */
extern T1 T655f21(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_attachment_mark */
extern T1 T508f6(GE_context* ac, T0* C);
/* ET_KEYWORD.is_attachment_mark */
extern T1 T421f6(GE_context* ac, T0* C);
/* ET_SYMBOL.is_attachment_mark */
extern T1 T369f20(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_attachment_mark */
extern T1 T368f10(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_attached_mark */
extern T1 T1244f4(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attached_mark */
extern T1 T727f4(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attached */
extern T1 T727f15(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attached_mark */
extern T1 T655f5(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attached */
extern T1 T655f16(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_attached_mark */
extern T1 T508f3(GE_context* ac, T0* C);
/* ET_KEYWORD.is_attached */
extern T1 T421f12(GE_context* ac, T0* C);
/* ET_KEYWORD.is_attached_mark */
extern T1 T421f20(GE_context* ac, T0* C);
/* ET_KEYWORD.is_bang */
extern T1 T421f13(GE_context* ac, T0* C);
/* ET_SYMBOL.is_attached_mark */
extern T1 T369f5(GE_context* ac, T0* C);
/* ET_SYMBOL.is_attached */
extern T1 T369f15(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_detachable_mark */
extern T1 T1244f5(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_detachable_mark */
extern T1 T727f5(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_detachable */
extern T1 T727f17(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_detachable_mark */
extern T1 T655f6(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_detachable */
extern T1 T655f18(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_detachable_mark */
extern T1 T508f10(GE_context* ac, T0* C);
/* ET_KEYWORD.is_detachable */
extern T1 T421f16(GE_context* ac, T0* C);
/* ET_KEYWORD.is_detachable_mark */
extern T1 T421f10(GE_context* ac, T0* C);
/* ET_KEYWORD.is_question_mark */
extern T1 T421f17(GE_context* ac, T0* C);
/* ET_SYMBOL.is_detachable_mark */
extern T1 T369f6(GE_context* ac, T0* C);
/* ET_SYMBOL.is_detachable */
extern T1 T369f17(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.position */
extern T0* T1244f11(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.position */
extern T0* T727f11(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.position */
extern T0* T655f61(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.position */
extern T0* T508f16(GE_context* ac, T0* C);
/* ET_KEYWORD.position */
extern T0* T421f21(GE_context* ac, T0* C);
/* ET_SYMBOL.position */
extern T0* T369f60(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.position */
extern T0* T368f12(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.actual_parameter */
extern T0* T1518f5(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.actual_parameter */
extern T0* T1416f34(GE_context* ac, T0* C);
/* ET_LIKE_N.actual_parameter */
extern T0* T1319f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.actual_parameter */
extern T0* T1270f41(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.actual_parameter */
extern T0* T1269f38(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.actual_parameter */
extern T0* T1268f39(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.actual_parameter */
extern T0* T1266f5(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.actual_parameter */
extern T0* T1242f56(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.actual_parameter */
extern T0* T872f49(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.actual_parameter */
extern T0* T514f6(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.actual_parameter */
extern T0* T260f43(GE_context* ac, T0* C);
/* ET_CLASS.actual_parameter */
extern T0* T83f128(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.actual_parameter */
extern T0* T81f42(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T1518f3(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.type */
extern T0* T1266f3(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1518f7(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type */
extern T0* T1416f63(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.resolved_formal_parameters_with_type */
extern T0* T1319f62(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type */
extern T0* T1270f65(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type */
extern T0* T1269f68(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type */
extern T0* T1268f67(GE_context* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1266f7(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1242f70(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T872f69(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type */
extern T0* T514f62(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type */
extern T0* T260f97(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type */
extern T0* T83f230(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T81f101(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.classes_in_group */
extern T0* T190f113(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T190f113ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T190f113ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T190f113ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.initial_classes_in_group_capacity */
extern T6 T190f117(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.classes_in_group */
extern T0* T71f140(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_in_group */
extern T0* T71f140ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.classes_in_group */
extern T0* T71f140ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.classes_in_group */
extern T0* T71f140ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.initial_classes_in_group_capacity */
extern T6 T71f145(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.classes_in_group */
extern T0* T65f151(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T65f151ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T65f151ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T65f151ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.initial_classes_in_group_capacity */
extern T6 T65f154(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.classes_in_group */
extern T0* T62f148(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_in_group */
extern T0* T62f148ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.classes_in_group */
extern T0* T62f148ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.classes_in_group */
extern T0* T62f148ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.initial_classes_in_group_capacity */
extern T6 T62f149(GE_context* ac, T0* C);
/* ET_SYSTEM.classes_in_group */
extern T0* T35f125(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.classes_in_group */
extern T0* T35f125ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM.classes_in_group */
extern T0* T35f125ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_SYSTEM.classes_in_group */
extern T0* T35f125ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_SYSTEM.initial_classes_in_group_capacity */
extern T6 T35f131(GE_context* ac, T0* C);
/* ET_LIBRARY.full_name */
extern T0* T474f95(GE_context* ac, T0* C, T2 a1);
/* ET_LIBRARY.relative_name */
extern T0* T474f96(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.string_ */
extern T0* T474f97(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.full_name */
extern T0* T464f94(GE_context* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.relative_name */
extern T0* T464f97(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_DOTNET_ASSEMBLY.string_ */
extern T0* T464f99(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.full_name */
extern T0* T231f104(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.relative_name */
extern T0* T231f106(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.string_ */
extern T0* T231f108(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.full_name */
extern T0* T218f97(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_ASSEMBLY.relative_name */
extern T0* T218f99(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_ASSEMBLY.string_ */
extern T0* T218f101(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.full_name */
extern T0* T199f94(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.relative_name */
extern T0* T199f100(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_DOTNET_ASSEMBLY.string_ */
extern T0* T199f104(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.full_name */
extern T0* T190f106(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_SYSTEM.full_name */
extern T0* T71f126(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_SYSTEM.full_name */
extern T0* T65f137(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_SYSTEM.full_name */
extern T0* T62f132(GE_context* ac, T0* C, T2 a1);
/* ET_SYSTEM.full_name */
extern T0* T35f118(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_SYSTEM.relative_lower_name */
extern T0* T71f139(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_SYSTEM.string_ */
extern T0* T71f132(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.lower_name */
extern T0* T71f144(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.relative_lower_name */
extern T0* T65f148(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.string_ */
extern T0* T65f140(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.lower_name */
extern T0* T65f149(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.relative_lower_name */
extern T0* T62f145(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_SYSTEM.string_ */
extern T0* T62f136(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.lower_name */
extern T0* T62f146(GE_context* ac, T0* C);
/* ET_SYSTEM.relative_lower_name */
extern T0* T35f124(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.string_ */
extern T0* T35f123(GE_context* ac, T0* C);
/* ET_SYSTEM.lower_name */
extern T0* T35f130(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.relative_name */
extern T0* T71f129(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.relative_name */
extern T0* T65f138(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_SYSTEM.relative_name */
extern T0* T62f133(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.relative_name */
extern T0* T35f120(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.has_master_class */
extern T1 T190f112(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.has_master_class */
extern T1 T71f128(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.has_master_class */
extern T1 T65f136(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.has_master_class */
extern T1 T62f131(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.has_master_class */
extern T1 T35f119(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.hash_code */
extern T6 T474f93(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.hash_code */
extern T6 T464f92(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.hash_code */
extern T6 T231f103(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.hash_code */
extern T6 T218f96(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.hash_code */
extern T6 T199f92(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.hash_code */
extern T6 T190f104(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.hash_code */
extern T6 T71f127(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.hash_code */
extern T6 T65f135(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.hash_code */
extern T6 T62f130(GE_context* ac, T0* C);
/* ET_SYSTEM.hash_code */
extern T6 T35f129(GE_context* ac, T0* C);
/* ET_LIBRARY.master_class */
extern T0* T474f92(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.master_class */
extern T0* T190f103(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.master_class */
extern T0* T71f136(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.master_class */
extern T0* T65f145(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.master_class */
extern T0* T62f140(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.master_class */
extern T0* T35f117(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.kind_name */
extern T0* T474f101(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.kind_name */
extern T0* T464f101(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.kind_name */
extern T0* T231f114(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.kind_name */
extern T0* T218f107(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.kind_name */
extern T0* T199f97(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.kind_name */
extern T0* T190f114(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.kind_name */
extern T0* T71f146(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.kind_name */
extern T0* T65f152(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.kind_name */
extern T0* T62f150(GE_context* ac, T0* C);
/* ET_SYSTEM.kind_name */
extern T0* T35f132(GE_context* ac, T0* C);
/* ET_LIBRARY.full_lower_name */
extern T0* T474f99(GE_context* ac, T0* C, T2 a1);
/* ET_LIBRARY.relative_lower_name */
extern T0* T474f103(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.lower_name */
extern T0* T474f105(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T464f100(GE_context* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T464f103(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.full_lower_name */
extern T0* T231f112(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.relative_lower_name */
extern T0* T231f113(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T218f105(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T218f106(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T199f98(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T199f102(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.full_lower_name */
extern T0* T190f110(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_SYSTEM.full_lower_name */
extern T0* T71f147(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_SYSTEM.full_lower_name */
extern T0* T65f153(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_SYSTEM.full_lower_name */
extern T0* T62f151(GE_context* ac, T0* C, T2 a1);
/* ET_SYSTEM.full_lower_name */
extern T0* T35f133(GE_context* ac, T0* C, T2 a1);
/* ET_LIBRARY.shortest_path */
extern T0* T474f102(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.shortest_path */
extern T0* T474f102ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LIBRARY.shortest_path */
extern T0* T474f102ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.shortest_path */
extern T0* T474f102ac3(GE_context* ac, T0* a1, T0* a2);
/* KL_AGENT_ROUTINES [ET_UNIVERSE].negated */
extern T1 T1479f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] PREDICATE [[attached] TUPLE [ET_UNIVERSE]].set_rout_disp_final */
extern void T1480f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_LIBRARY.insert_in_hash_table */
extern void T474f184(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].force_first */
extern void T1211f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].put */
extern void T1211f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].move_cursors_right */
extern void T1211f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE].set_position */
extern void T1581f5(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].move_right */
extern void T1211f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].force */
extern void T1580f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_UNIVERSE].fill_with */
extern void T1579f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_UNIVERSE].extend */
extern void T1579f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].put_last */
extern void T1211f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].resize */
extern void T1211f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T1580f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T1579f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].new_capacity */
extern T6 T1211f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].extendible */
extern T1 T1211f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].before */
extern T1 T1477f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].back */
extern void T1477f16(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_back */
extern void T1476f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].add_traversing_cursor */
extern void T1476f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_next_cursor */
extern void T1477f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_position */
extern void T1477f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].remove_traversing_cursor */
extern void T1476f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_before */
extern void T1477f19(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_item */
extern T6 T1476f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].finish */
extern void T1477f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_finish */
extern void T1476f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_off */
extern T1 T1476f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].off */
extern T1 T1477f10(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].is_empty */
extern T1 T1476f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].forth */
extern void T1477f14(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_forth */
extern void T1476f58(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_after */
extern void T1477f17(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].go_after */
extern void T1477f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_go_after */
extern void T1476f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].has */
extern T1 T1476f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].search_position */
extern void T1476f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].hash_position */
extern T6 T1476f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_item */
extern T0* T1476f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_item */
extern T6 T1476f32(GE_context* ac, T0* C, T6 a1);
/* ET_LIBRARY.universe_actions */
extern T0* T474f104(GE_context* ac, T0* C);
/* KL_AGENT_ROUTINES [ET_UNIVERSE].default_create */
extern T0* T1479c2(GE_context* ac);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].item */
extern T6 T1477f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_item */
extern T6 T1476f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_item */
extern T6 T1476f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].key */
extern T0* T1477f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_key */
extern T0* T1476f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].after */
extern T1 T1477f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].start */
extern void T1477f12(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_start */
extern void T1476f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_cursor */
extern T0* T1476f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].make */
extern T0* T1477c11(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].force_last */
extern void T1476f37(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_put */
extern void T1476f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_put */
extern void T1476f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_put */
extern void T1476f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].resize */
extern void T1476f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_resize */
extern void T1476f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].special_integer_ */
extern T0* T1476f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_resize */
extern void T1476f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_resize */
extern void T1476f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_resize */
extern void T1476f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_modulus */
extern T6 T1476f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_capacity */
extern T6 T1476f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_put */
extern void T1476f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].unset_found_item */
extern void T1476f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_map */
extern T0* T1476c36(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_with_equality_testers */
extern void T1476f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_sparse_container */
extern void T1476f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].set_internal_cursor */
extern void T1476f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_slots */
extern void T1476f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_clashes */
extern void T1476f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_key_storage */
extern void T1476f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_item_storage */
extern void T1476f51(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].make */
extern T0* T1211c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].set_internal_cursor */
extern void T1211f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].new_cursor */
extern T0* T1211f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE].make */
extern T0* T1581c4(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].make */
extern T0* T1580f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_UNIVERSE].make_empty */
extern T0* T1579c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].default_create */
extern T0* T1580c3(GE_context* ac);
/* ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T464f102(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T464f102ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T464f102ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T464f102ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T464f182(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.universe_actions */
extern T0* T464f104(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T231f115(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T231f115ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T231f115ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T231f115ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.insert_in_hash_table */
extern void T231f205(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.universe_actions */
extern T0* T231f116(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T218f108(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T218f108ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T218f108ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T218f108ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T218f191(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.universe_actions */
extern T0* T218f109(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T199f99(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T199f99ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T199f99ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T199f99ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T199f180(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.universe_actions */
extern T0* T199f103(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.shortest_path */
extern T0* T190f115(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T190f115ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T190f115ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T190f115ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.insert_in_hash_table */
extern void T190f211(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_LIBRARY.universe_actions */
extern T0* T190f118(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.shortest_path */
extern T0* T71f131(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.shortest_path */
extern T0* T71f131ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.shortest_path */
extern T0* T71f131ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.shortest_path */
extern T0* T71f131ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.insert_in_hash_table */
extern void T71f261(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_LACE_SYSTEM.universe_actions */
extern T0* T71f133(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.shortest_path */
extern T0* T65f147(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T65f147ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T65f147ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T65f147ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.insert_in_hash_table */
extern void T65f246(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_SYSTEM.universe_actions */
extern T0* T65f134(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.shortest_path */
extern T0* T62f135(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.shortest_path */
extern T0* T62f135ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.shortest_path */
extern T0* T62f135ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.shortest_path */
extern T0* T62f135ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.insert_in_hash_table */
extern void T62f270(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_XACE_SYSTEM.universe_actions */
extern T0* T62f137(GE_context* ac, T0* C);
/* ET_SYSTEM.shortest_path */
extern T0* T35f122(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.shortest_path */
extern T0* T35f122ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_SYSTEM.shortest_path */
extern T0* T35f122ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_SYSTEM.shortest_path */
extern T0* T35f122ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_SYSTEM.insert_in_hash_table */
extern void T35f209(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_SYSTEM.universe_actions */
extern T0* T35f126(GE_context* ac, T0* C);
/* ET_LIBRARY.adapted_universe */
extern T0* T474f94(GE_context* ac, T0* C, T0* a1);
extern T1 T474f94ot1(T0* a1, T0** a2);
extern T1 T474f94ot2(T0* a1, T0** a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.adapted_dotnet_assembly */
extern T0* T198f5(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.adapted_library */
extern T0* T191f5(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T464f93(GE_context* ac, T0* C, T0* a1);
extern T1 T464f93ot1(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].has */
extern T1 T1337f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.adapted_universe */
extern T0* T231f111(GE_context* ac, T0* C, T0* a1);
extern T1 T231f111ot1(T0* a1, T0** a2);
/* ET_LACE_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T218f104(GE_context* ac, T0* C, T0* a1);
extern T1 T218f104ot1(T0* a1, T0** a2);
/* ET_ECF_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T199f93(GE_context* ac, T0* C, T0* a1);
extern T1 T199f93ot1(T0* a1, T0** a2);
/* ET_ECF_LIBRARY.adapted_universe */
extern T0* T190f105(GE_context* ac, T0* C, T0* a1);
extern T1 T190f105ot1(T0* a1, T0** a2);
extern T1 T190f105ot2(T0* a1, T0** a2);
/* ET_LACE_SYSTEM.adapted_universe */
extern T0* T71f130(GE_context* ac, T0* C, T0* a1);
extern T1 T71f130ot1(T0* a1, T0** a2);
extern T1 T71f130ot2(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.adapted_universe */
extern T0* T65f139(GE_context* ac, T0* C, T0* a1);
extern T1 T65f139ot1(T0* a1, T0** a2);
extern T1 T65f139ot2(T0* a1, T0** a2);
/* ET_XACE_SYSTEM.adapted_universe */
extern T0* T62f134(GE_context* ac, T0* C, T0* a1);
extern T1 T62f134ot1(T0* a1, T0** a2);
extern T1 T62f134ot2(T0* a1, T0** a2);
/* ET_SYSTEM.adapted_universe */
extern T0* T35f121(GE_context* ac, T0* C, T0* a1);
extern T1 T35f121ot1(T0* a1, T0** a2);
extern T1 T35f121ot2(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T403f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T403f12ot1(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.cloned_type_context */
extern T0* T403f11(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.like_0 */
extern T0* T82f262(GE_context* ac, T0* C);
/* ET_LIKE_N.make_zero */
extern T0* T1319c68(GE_context* ac, T0* a1);
/* ET_LIKE_N.tokens */
extern T0* T1319f13(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.context_same_named_type_with_type_marks */
extern T1 T260f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_type_with_type_marks */
extern T1 T83f177(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_type_with_type_marks */
extern T1 T81f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T403f13(GE_context* ac, T0* C, T0* a1);
extern T1 T403f13ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_named_type_with_type_mark */
extern T0* T260f63(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_named_type_with_type_mark */
extern T0* T83f185(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_named_type_with_type_mark */
extern T0* T81f62(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.named_base_class */
extern T0* T403f19(GE_context* ac, T0* C);
extern T1 T403f19ot1(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.same_base_class_type_with_type_marks */
extern T1 T403f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T403f26ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_base_class_type_with_type_marks */
extern T1 T260f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_base_class_type_with_type_marks */
extern T1 T83f178(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_base_class_type_with_type_marks */
extern T1 T81f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_base_tuple_type_with_type_marks */
extern T1 T403f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T403f27ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_base_tuple_type_with_type_marks */
extern T1 T260f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_base_tuple_type_with_type_marks */
extern T1 T83f179(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_base_tuple_type_with_type_marks */
extern T1 T81f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T403f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T403f21ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T260f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_class_type_with_type_marks */
extern T1 T83f180(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T81f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T403f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T403f22ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T260f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_tuple_type_with_type_marks */
extern T1 T83f181(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T81f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T403f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T403f29ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T260f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_from_class_type_with_type_marks */
extern T1 T83f183(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T81f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T403f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T403f30ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T260f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_from_tuple_type_with_type_marks */
extern T1 T83f184(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T81f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T403f23(GE_context* ac, T0* C, T0* a1);
extern T1 T403f23ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T260f64(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_expanded_with_type_mark */
extern T1 T83f186(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T81f63(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T403f31(GE_context* ac, T0* C, T0* a1);
extern T1 T403f31ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_base_type_with_type_mark */
extern T0* T260f65(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_base_type_with_type_mark */
extern T0* T83f187(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_with_type_mark */
extern T0* T81f64(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T403f32(GE_context* ac, T0* C, T0* a1);
extern T1 T403f32ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T260f66(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_detachable_with_type_mark */
extern T1 T83f188(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T81f65(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T403f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T403f24ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T260f67(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_to_type_with_type_marks */
extern T1 T83f189(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T81f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T403f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T403f45ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T260f83(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T83f213(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T81f88(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T403f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T403f46ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T260f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T83f214(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T81f89(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T403f43(GE_context* ac, T0* C, T0* a1);
extern T1 T403f43ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_attached_with_type_mark */
extern T1 T260f85(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_attached_with_type_mark */
extern T1 T83f215(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_attached_with_type_mark */
extern T1 T81f90(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T403f47(GE_context* ac, T0* C, T0* a1);
extern T1 T403f47ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_reference_with_type_mark */
extern T1 T260f86(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_reference_with_type_mark */
extern T1 T83f216(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_reference_with_type_mark */
extern T1 T81f91(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.named_type */
extern T0* T403f10(GE_context* ac, T0* C);
/* ET_CLASS.context_named_type */
extern T0* T83f205(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.context_named_type */
extern T0* T81f81(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.scoop_mode */
extern T1 T403f6(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.scoop_mode */
extern T1 T260f32(GE_context* ac, T0* C);
/* ET_CLASS.scoop_mode */
extern T1 T83f110(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.scoop_mode */
extern T1 T81f24(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.same_base_type_with_type_marks */
extern T1 T403f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T403f50ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_base_type_with_type_marks */
extern T1 T260f102(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_base_type_with_type_marks */
extern T1 T83f234(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_base_type_with_type_marks */
extern T1 T81f105(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T403f5(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.attachment_type_conformance_mode */
extern T1 T260f28(GE_context* ac, T0* C);
/* ET_CLASS.attachment_type_conformance_mode */
extern T1 T83f105(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.attachment_type_conformance_mode */
extern T1 T81f22(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.to_nested_type_context */
extern T0* T403f8(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.to_nested_type_context */
extern T0* T260f34(GE_context* ac, T0* C);
/* ET_CLASS.to_nested_type_context */
extern T0* T83f64(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.to_nested_type_context */
extern T0* T81f35(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_class */
extern T0* T403f25(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual_count */
extern T6 T403f28(GE_context* ac, T0* C);
extern T1 T403f28ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_base_type_actual_count */
extern T6 T260f60(GE_context* ac, T0* C);
/* ET_CLASS.context_base_type_actual_count */
extern T6 T83f182(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.context_base_type_actual_count */
extern T6 T81f59(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual */
extern T0* T403f34(GE_context* ac, T0* C, T6 a1);
extern T1 T403f34ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_base_type_actual */
extern T0* T260f71(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.context_base_type_actual */
extern T0* T83f195(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.context_base_type_actual */
extern T0* T81f70(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.is_root_context */
extern T1 T403f20(GE_context* ac, T0* C);
extern T1 T403f20ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.is_root_context */
extern T1 T260f16(GE_context* ac, T0* C);
/* ET_CLASS.is_root_context */
extern T1 T83f146(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_root_context */
extern T1 T81f18(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.as_nested_type_context */
extern T0* T403f7(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.as_nested_type_context */
extern T0* T260f33(GE_context* ac, T0* C);
/* ET_CLASS.as_nested_type_context */
extern T0* T83f63(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.as_nested_type_context */
extern T0* T81f34(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.root_context */
extern T0* T260f17(GE_context* ac, T0* C);
/* ET_CLASS.root_context */
extern T0* T83f115(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.root_context */
extern T0* T81f19(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T1416f33(GE_context* ac, T0* C);
/* ET_LIKE_N.type */
extern T0* T1319f6(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.type */
extern T0* T1270f38(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type */
extern T0* T1269f37(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.type */
extern T0* T1268f38(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type */
extern T0* T1242f13(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.type */
extern T0* T872f11(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.type */
extern T0* T514f5(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.type */
extern T0* T260f8(GE_context* ac, T0* C);
/* ET_CLASS.type */
extern T0* T83f127(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.type */
extern T0* T81f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.base_type */
extern T0* T1416f23(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.base_type */
extern T0* T1319f15(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_type */
extern T0* T1270f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type */
extern T0* T1269f10(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_type */
extern T0* T1268f10(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type */
extern T0* T1242f17(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.base_type */
extern T0* T872f14(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_type */
extern T0* T514f14(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_type */
extern T0* T260f12(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.base_type */
extern T0* T83f69(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_type */
extern T0* T81f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T1416f46(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_reference */
extern T1 T1319f43(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_reference */
extern T1 T1270f45(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference */
extern T1 T1269f48(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_reference */
extern T1 T1268f46(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference */
extern T1 T1242f45(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_reference */
extern T1 T872f39(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_reference */
extern T1 T514f43(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_reference */
extern T1 T260f76(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_reference */
extern T1 T83f200(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_reference */
extern T1 T81f79(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_base_class_type_with_type_marks */
extern T1 T1416f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1416f10ot1(T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.tokens */
extern T0* T1416f37(GE_context* ac, T0* C);
/* ET_LIKE_N.same_base_class_type_with_type_marks */
extern T1 T1319f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.overridden_type_mark */
extern T0* T1319f12(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.valid_index */
extern T1 T403f33(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_TYPE.same_base_class_type_with_type_marks */
extern T1 T1270f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.overridden_type_mark */
extern T0* T1270f36(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_class_type_with_type_marks */
extern T1 T1269f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.overridden_type_mark */
extern T0* T1269f35(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.same_base_class_type_with_type_marks */
extern T1 T1268f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.overridden_type_mark */
extern T0* T1268f31(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_class_type_with_type_marks */
extern T1 T1242f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1242f18ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_base_class_type_with_type_marks */
extern T1 T872f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T872f15ot1(T0* a1);
/* ET_FORMAL_PARAMETER.tokens */
extern T0* T872f54(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.same_base_class_type_with_type_marks */
extern T1 T514f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.overridden_type_mark */
extern T0* T514f31(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T1416f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1416f11ot1(T0* a1);
/* ET_LIKE_N.same_base_tuple_type_with_type_marks */
extern T1 T1319f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T1270f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T1269f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_base_tuple_type_with_type_marks */
extern T1 T1268f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_tuple_type_with_type_marks */
extern T1 T1242f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1242f19ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_base_tuple_type_with_type_marks */
extern T1 T872f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T872f16ot1(T0* a1);
/* ET_LIKE_CURRENT.same_base_tuple_type_with_type_marks */
extern T1 T514f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual_count */
extern T6 T1416f14(GE_context* ac, T0* C, T0* a1);
extern T1 T1416f14ot1(T0* a1, T0** a2);
extern T1 T1416f14ot2(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_actual_count */
extern T6 T1319f21(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual_count */
extern T6 T1270f18(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual_count */
extern T6 T1269f16(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_type_actual_count */
extern T6 T1268f16(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T1242f20(GE_context* ac, T0* C, T0* a1);
extern T1 T1242f20ot1(T0* a1, T0** a2);
extern T1 T1242f20ot2(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T872f17(GE_context* ac, T0* C, T0* a1);
extern T1 T872f17ot1(T0* a1, T0** a2);
extern T1 T872f17ot2(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.base_type_actual_count */
extern T6 T514f20(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1416f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1416f15ot1(T0* a1);
/* ET_LIKE_N.conforms_from_class_type_with_type_marks */
extern T1 T1319f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1270f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1269f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_FEATURE.conforms_from_class_type_with_type_marks */
extern T1 T1268f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T1242f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1242f22ot1(T0* a1);
/* ET_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T872f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T872f19ot1(T0* a1);
/* ET_LIKE_CURRENT.conforms_from_class_type_with_type_marks */
extern T1 T514f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1416f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1416f16ot1(T0* a1);
/* ET_LIKE_N.conforms_from_tuple_type_with_type_marks */
extern T1 T1319f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1270f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1269f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_FEATURE.conforms_from_tuple_type_with_type_marks */
extern T1 T1268f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T1242f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1242f23ot1(T0* a1);
/* ET_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T872f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T872f20ot1(T0* a1);
/* ET_LIKE_CURRENT.conforms_from_tuple_type_with_type_marks */
extern T1 T514f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.same_named_class_type_with_type_marks */
extern T1 T1416f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1416f12ot1(T0* a1);
/* ET_LIKE_N.same_named_class_type_with_type_marks */
extern T1 T1319f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_named_class_type_with_type_marks */
extern T1 T1270f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_class_type_with_type_marks */
extern T1 T1269f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_class_type_with_type_marks */
extern T1 T1268f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T1242f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1242f25ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T872f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T872f22ot1(T0* a1);
/* ET_LIKE_CURRENT.same_named_class_type_with_type_marks */
extern T1 T514f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1416f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1416f13ot1(T0* a1);
/* ET_LIKE_N.same_named_tuple_type_with_type_marks */
extern T1 T1319f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1270f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1269f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_tuple_type_with_type_marks */
extern T1 T1268f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T1242f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1242f26ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T872f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T872f23ot1(T0* a1);
/* ET_LIKE_CURRENT.same_named_tuple_type_with_type_marks */
extern T1 T514f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T1416f19(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1416f19ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_detachable_with_type_mark */
extern T1 T1319f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_detachable_with_type_mark */
extern T1 T1270f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable_with_type_mark */
extern T1 T1269f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_detachable_with_type_mark */
extern T1 T1268f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T1242f34(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1242f34ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T872f31(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T872f31ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.is_type_detachable_with_type_mark */
extern T1 T514f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.named_base_class */
extern T0* T1416f6(GE_context* ac, T0* C, T0* a1);
extern T1 T1416f6ot1(T0* a1, T0** a2);
/* ET_LIKE_N.named_base_class */
extern T0* T1319f8(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_base_class */
extern T0* T1270f7(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.tokens */
extern T0* T1270f37(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_base_class */
extern T0* T1269f7(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_base_class */
extern T0* T1268f7(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_base_class */
extern T0* T1242f36(GE_context* ac, T0* C, T0* a1);
extern T1 T1242f36ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.named_base_class */
extern T0* T872f33(GE_context* ac, T0* C, T0* a1);
extern T1 T872f33ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.named_base_class */
extern T0* T514f11(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_base_class_in_context */
extern T0* T260f5(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.named_base_class_in_context */
extern T0* T83f97(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_base_class_in_context */
extern T0* T81f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded_with_type_mark */
extern T1 T1416f17(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1416f17ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_expanded_with_type_mark */
extern T1 T1319f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_expanded_with_type_mark */
extern T1 T1270f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded_with_type_mark */
extern T1 T1269f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_expanded_with_type_mark */
extern T1 T1268f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T1242f37(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1242f37ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T872f34(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T872f34ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.is_type_expanded_with_type_mark */
extern T1 T514f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type_with_type_marks */
extern T1 T1416f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1416f20ot1(T0* a1, T0** a2);
/* ET_LIKE_N.conforms_to_type_with_type_marks */
extern T1 T1319f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_type_with_type_marks */
extern T1 T1270f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type_with_type_marks */
extern T1 T1269f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_FEATURE.conforms_to_type_with_type_marks */
extern T1 T1268f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T1242f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1242f39ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T872f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T872f36ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.conforms_to_type_with_type_marks */
extern T1 T514f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.named_type_with_type_mark */
extern T0* T1416f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_N.named_type_with_type_mark */
extern T0* T1319f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.named_type_with_type_mark */
extern T0* T1270f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type_with_type_mark */
extern T0* T1269f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.named_type_with_type_mark */
extern T0* T1268f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T1242f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T872f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.named_type_with_type_mark */
extern T0* T514f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type_with_type_mark */
extern T0* T1416f21(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1416f21ot1(T0* a1, T0** a2);
/* ET_LIKE_N.shallow_named_type_with_type_mark */
extern T0* T1319f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.shallow_named_type_with_type_mark */
extern T0* T1270f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type_with_type_mark */
extern T0* T1269f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.shallow_named_type_with_type_mark */
extern T0* T1268f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T1242f50(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1242f50ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T872f45(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T872f45ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.shallow_named_type_with_type_mark */
extern T0* T514f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_with_type_mark */
extern T0* T1416f18(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1416f18ot1(T0* a1, T0** a2);
extern T1 T1416f18ot2(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_with_type_mark */
extern T0* T1319f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_with_type_mark */
extern T0* T1270f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_with_type_mark */
extern T0* T1269f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_with_type_mark */
extern T0* T1268f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T1242f49(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1242f49ot1(T0* a1, T0** a2);
extern T1 T1242f49ot2(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T872f44(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T872f44ot1(T0* a1, T0** a2);
extern T1 T872f44ot2(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.base_type_with_type_mark */
extern T0* T514f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T1416f43(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1416f43ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_attached_with_type_mark */
extern T1 T1319f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_attached_with_type_mark */
extern T1 T1270f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_attached_with_type_mark */
extern T1 T1269f53(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_attached_with_type_mark */
extern T1 T1268f51(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T1242f33(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1242f33ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T872f30(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T872f30ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.is_type_attached_with_type_mark */
extern T1 T514f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual */
extern T0* T1416f49(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1416f49ot1(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_actual */
extern T0* T1319f46(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual */
extern T0* T1270f48(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual */
extern T0* T1269f51(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_actual */
extern T0* T1268f49(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual */
extern T0* T1242f42(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1242f42ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_actual */
extern T0* T872f51(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T872f51ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.base_type_actual */
extern T0* T514f46(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_index_of_label */
extern T6 T1416f50(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1416f50ot1(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_index_of_label */
extern T6 T1319f47(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_index_of_label */
extern T6 T1270f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_index_of_label */
extern T6 T1269f52(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_index_of_label */
extern T6 T1268f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T1242f43(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1242f43ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T872f52(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T872f52ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.base_type_index_of_label */
extern T6 T514f47(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type_with_type_mark */
extern T0* T1416f51(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1416f51ot1(T0* a1, T0** a2);
extern T1 T1416f51ot2(T0* a1, T0** a2);
/* ET_LIKE_N.shallow_base_type_with_type_mark */
extern T0* T1319f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.shallow_base_type_with_type_mark */
extern T0* T1270f52(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type_with_type_mark */
extern T0* T1269f55(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.shallow_base_type_with_type_mark */
extern T0* T1268f53(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T1242f54(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1242f54ot1(T0* a1, T0** a2);
extern T1 T1242f54ot2(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T872f55(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T872f55ot1(T0* a1, T0** a2);
extern T1 T872f55ot2(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.shallow_base_type_with_type_mark */
extern T0* T514f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type */
extern T0* T1416f45(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.shallow_base_type */
extern T0* T1319f42(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_base_type */
extern T0* T1270f44(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type */
extern T0* T1269f47(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_base_type */
extern T0* T1268f45(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type */
extern T0* T1242f31(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_base_type */
extern T0* T872f28(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_base_type */
extern T0* T514f42(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_base_type */
extern T0* T260f74(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.shallow_base_type */
extern T0* T83f198(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_base_type */
extern T0* T81f73(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded */
extern T1 T1416f22(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_expanded */
extern T1 T1319f14(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_expanded */
extern T1 T1270f11(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded */
extern T1 T1269f9(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_expanded */
extern T1 T1268f9(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded */
extern T1 T1242f16(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_expanded */
extern T1 T872f13(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_expanded */
extern T1 T514f13(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_expanded */
extern T1 T260f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_expanded */
extern T1 T83f68(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_expanded */
extern T1 T81f9(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_named_type */
extern T1 T1416f30(GE_context* ac, T0* C);
/* ET_LIKE_N.is_named_type */
extern T1 T1319f34(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_named_type */
extern T1 T1270f31(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_named_type */
extern T1 T1269f30(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.is_named_type */
extern T1 T1268f25(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_named_type */
extern T1 T1242f32(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_named_type */
extern T1 T872f29(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.is_named_type */
extern T1 T514f38(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_named_type */
extern T1 T260f69(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_named_type */
extern T1 T81f68(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_type_attached */
extern T1 T1416f59(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_attached */
extern T1 T1319f58(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_attached */
extern T1 T1270f61(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_attached */
extern T1 T1269f64(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_attached */
extern T1 T1268f63(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_attached */
extern T1 T1242f66(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_attached */
extern T1 T872f65(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_attached */
extern T1 T514f58(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_attached */
extern T1 T260f93(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_attached */
extern T1 T83f225(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_attached */
extern T1 T81f97(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_base_type */
extern T1 T1416f47(GE_context* ac, T0* C);
/* ET_LIKE_N.is_base_type */
extern T1 T1319f44(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_base_type */
extern T1 T1270f46(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_base_type */
extern T1 T1269f49(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.is_base_type */
extern T1 T1268f47(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_base_type */
extern T1 T1242f53(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_base_type */
extern T1 T872f48(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.is_base_type */
extern T1 T514f44(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_base_type */
extern T1 T260f79(GE_context* ac, T0* C);
/* ET_CLASS.is_base_type */
extern T1 T83f206(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_base_type */
extern T1 T81f82(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type */
extern T0* T1416f27(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.shallow_named_type */
extern T0* T1319f26(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_named_type */
extern T0* T1270f23(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type */
extern T0* T1269f23(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_named_type */
extern T0* T1268f23(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type */
extern T0* T1242f28(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_named_type */
extern T0* T872f25(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_named_type */
extern T0* T514f27(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_named_type */
extern T0* T260f53(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.shallow_named_type */
extern T0* T83f173(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_named_type */
extern T0* T81f52(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_like_current */
extern T1 T1416f28(GE_context* ac, T0* C);
/* ET_LIKE_N.is_like_current */
extern T1 T1319f27(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_like_current */
extern T1 T1270f24(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_like_current */
extern T1 T1269f41(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.is_like_current */
extern T1 T1268f42(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_like_current */
extern T1 T1242f29(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_like_current */
extern T1 T872f26(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_like_current */
extern T1 T260f70(GE_context* ac, T0* C);
/* ET_CLASS.is_like_current */
extern T1 T83f193(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_like_current */
extern T1 T81f69(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_type_detachable */
extern T1 T1416f25(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_detachable */
extern T1 T1319f22(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_detachable */
extern T1 T1270f19(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable */
extern T1 T1269f17(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_detachable */
extern T1 T1268f17(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable */
extern T1 T1242f21(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_detachable */
extern T1 T872f18(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_detachable */
extern T1 T514f21(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_detachable */
extern T1 T260f42(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_detachable */
extern T1 T83f150(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_detachable */
extern T1 T81f41(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1416f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1416f36ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_named_formal_parameter_type_with_type_marks */
extern T1 T1319f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1270f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1269f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1268f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T1242f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1242f27ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T872f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T872f24ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.same_named_formal_parameter_type_with_type_marks */
extern T1 T514f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1416f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1416f41ot1(T0* a1, T0** a2);
extern T1 T1416f41ot2(T0* a1, T0** a2);
extern T1 T1416f41ot3(T0* a1, T0** a2);
/* ET_LIKE_N.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1319f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1270f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1269f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_FEATURE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1268f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1242f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1242f24ot1(T0* a1, T0** a2);
extern T1 T1242f24ot2(T0* a1, T0** a2);
extern T1 T1242f24ot3(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T872f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T872f21ot1(T0* a1, T0** a2);
extern T1 T872f21ot2(T0* a1, T0** a2);
extern T1 T872f21ot3(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T514f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference_with_type_mark */
extern T1 T1416f40(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1416f40ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_reference_with_type_mark */
extern T1 T1319f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_reference_with_type_mark */
extern T1 T1270f51(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference_with_type_mark */
extern T1 T1269f54(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_reference_with_type_mark */
extern T1 T1268f52(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T1242f40(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1242f40ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T872f37(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T872f37ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.is_type_reference_with_type_mark */
extern T1 T514f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1416f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1416f54ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_syntactical_type_with_type_marks */
extern T1 T1319f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1270f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1269f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_type_with_type_marks */
extern T1 T1268f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T1242f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1242f58ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T872f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T872f60ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.same_syntactical_type_with_type_marks */
extern T1 T514f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T260f89(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_generic */
extern T1 T260f26(GE_context* ac, T0* C);
/* ET_CLASS.same_syntactical_type_with_type_marks */
extern T1 T83f221(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_type_with_type_marks */
extern T1 T81f93(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1416f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1416f55ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1319f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1270f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1269f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1268f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1242f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1242f62ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T872f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T872f61ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T514f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T260f90(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T83f222(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T81f94(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1416f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1416f56ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_like_feature_with_type_marks */
extern T1 T1319f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1270f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1269f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_like_feature_with_type_marks */
extern T1 T1268f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_attachment_marks_with_default */
extern T1 T1268f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T1242f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1242f63ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T872f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T872f62ot1(T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_like_feature_with_type_marks */
extern T1 T514f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T260f91(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_like_feature_with_type_marks */
extern T1 T83f223(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T81f95(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1416f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1416f57ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1319f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1270f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_attachment_marks_with_default */
extern T1 T1270f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1269f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_attachment_marks_with_default */
extern T1 T1269f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1268f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1242f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1242f64ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T872f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T872f63ot1(T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T514f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T260f92(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T83f224(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T81f96(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.last_leaf */
extern T0* T1416f65(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.last_leaf */
extern T0* T1270f67(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.last_leaf */
extern T0* T1269f70(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.last_leaf */
extern T0* T1268f69(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.last_leaf */
extern T0* T514f64(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.last_leaf */
extern T0* T260f100(GE_context* ac, T0* C);
/* ET_CLASS.last_leaf */
extern T0* T83f232(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.last_leaf */
extern T0* T81f103(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.position */
extern T0* T1416f9(GE_context* ac, T0* C);
/* ET_LIKE_N.position */
extern T0* T1319f11(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.position */
extern T0* T1270f10(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.position */
extern T0* T1269f24(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.position */
extern T0* T1268f24(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.position */
extern T0* T1242f47(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.position */
extern T0* T872f41(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.position */
extern T0* T514f28(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.position */
extern T0* T260f54(GE_context* ac, T0* C);
/* ET_CLASS.position */
extern T0* T83f174(GE_context* ac, T0* C);
/* ET_INDEXING_LIST.position */
extern T0* T886f7(GE_context* ac, T0* C);
/* ET_INDEXING.position */
extern T0* T1240f3(GE_context* ac, T0* C);
/* ET_INDEXING_TERM_LIST.position */
extern T0* T898f5(GE_context* ac, T0* C);
/* ET_INDEXING_TERM_LIST.tokens */
extern T0* T898f8(GE_context* ac, T0* C);
/* ET_INDEXING_TERM_LIST.first */
extern T0* T898f7(GE_context* ac, T0* C);
/* ET_INDEXING_TERM_LIST.is_empty */
extern T1 T898f6(GE_context* ac, T0* C);
/* ET_TAGGED_INDEXING.position */
extern T0* T1239f4(GE_context* ac, T0* C);
/* ET_INDEXING_LIST.first */
extern T0* T886f10(GE_context* ac, T0* C);
/* ET_INDEXING_LIST.is_empty */
extern T1 T886f9(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.position */
extern T0* T81f53(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type_with_type_marks */
extern T1 T1416f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1416f38ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_named_type_with_type_marks */
extern T1 T1319f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_named_type_with_type_marks */
extern T1 T1270f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type_with_type_marks */
extern T1 T1269f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_type_with_type_marks */
extern T1 T1268f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T1242f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1242f35ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T872f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T872f32ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.same_named_type_with_type_marks */
extern T1 T514f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1416f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1416f60ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_class_type_with_type_marks */
extern T1 T1319f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1270f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1269f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_class_type_with_type_marks */
extern T1 T1268f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T1242f67(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1242f67ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T872f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T872f66ot1(T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_class_type_with_type_marks */
extern T1 T514f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T260f94(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_class_type_with_type_marks */
extern T1 T83f226(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.is_type_separate_with_type_mark */
extern T1 T81f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_separate */
extern T1 T81f26(GE_context* ac, T0* C);
/* ET_CLASS.is_separate */
extern T1 T83f81(GE_context* ac, T0* C);
/* ET_CLASS.has_separate_mark */
extern T1 T83f100(GE_context* ac, T0* C);
/* ET_CLASS.is_type_separate_with_type_mark */
extern T1 T83f88(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T81f99(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1416f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1416f64ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_tuple_type_with_type_marks */
extern T1 T1319f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1270f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1269f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1268f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T1242f71(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1242f71ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T872f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T872f70ot1(T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_tuple_type_with_type_marks */
extern T1 T514f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T260f98(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_type_separate_with_type_mark */
extern T1 T260f47(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_separate */
extern T1 T260f21(GE_context* ac, T0* C);
/* ET_CLASS.same_syntactical_tuple_type_with_type_marks */
extern T1 T83f231(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T81f102(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1416f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1416f66ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_like_current_with_type_marks */
extern T1 T1319f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1270f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1269f71(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_like_current_with_type_marks */
extern T1 T1268f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T1242f73(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1242f73ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T872f72(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T872f72ot1(T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_like_current_with_type_marks */
extern T1 T514f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_attachment_marks_with_default */
extern T1 T514f67(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T260f101(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_like_current_with_type_marks */
extern T1 T83f233(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T81f104(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.type_with_type_mark */
extern T0* T1416f42(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.type_with_type_mark */
extern T0* T1319f66(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.set_like_keyword */
extern void T1319f75(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.make */
extern T0* T1319c74(GE_context* ac, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.type_with_type_mark */
extern T0* T1270f69(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_with_type_mark */
extern T0* T1269f72(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_right_brace */
extern void T1269f84(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_left_brace */
extern void T1269f83(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.type_with_type_mark */
extern T0* T1268f71(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.set_type_mark */
extern void T1268f85(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.twin */
extern T0* T1268f73(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.copy */
extern void T1268f86(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T1242f30(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T872f27(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.type_with_type_mark */
extern T0* T514f68(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.set_current_keyword */
extern void T514f77(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type */
extern T1 T1416f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_N.same_named_type */
extern T1 T1319f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_named_type */
extern T1 T1270f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type */
extern T1 T1269f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_named_type */
extern T1 T1268f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type */
extern T1 T1242f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_named_type */
extern T1 T872f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_named_type */
extern T1 T514f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type */
extern T1 T1416f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_N.conforms_to_type */
extern T1 T1319f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_type */
extern T1 T1270f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type */
extern T1 T1269f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_to_type */
extern T1 T1268f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type */
extern T1 T1242f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_to_type */
extern T1 T872f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_to_type */
extern T1 T514f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.has_anchored_type */
extern T1 T1416f29(GE_context* ac, T0* C);
/* ET_LIKE_N.has_anchored_type */
extern T1 T1319f28(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.has_anchored_type */
extern T1 T1270f25(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_anchored_type */
extern T1 T1269f21(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.has_anchored_type */
extern T1 T1268f21(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_anchored_type */
extern T1 T1242f51(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.has_anchored_type */
extern T1 T872f46(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.has_anchored_type */
extern T1 T514f25(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.has_anchored_type */
extern T1 T260f51(GE_context* ac, T0* C);
/* ET_CLASS.has_anchored_type */
extern T1 T83f170(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.has_anchored_type */
extern T1 T81f50(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.has_formal_types */
extern T1 T1416f8(GE_context* ac, T0* C, T0* a1);
extern T1 T1416f8ot1(T0* a1);
/* ET_LIKE_N.has_formal_types */
extern T1 T1319f10(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.has_formal_types */
extern T1 T1270f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_formal_types */
extern T1 T1269f22(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.has_formal_types */
extern T1 T1268f22(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_formal_types */
extern T1 T1242f41(GE_context* ac, T0* C, T0* a1);
extern T1 T1242f41ot1(T0* a1);
/* ET_FORMAL_PARAMETER.has_formal_types */
extern T1 T872f43(GE_context* ac, T0* C, T0* a1);
extern T1 T872f43ot1(T0* a1);
/* ET_LIKE_CURRENT.has_formal_types */
extern T1 T514f26(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.has_formal_types */
extern T1 T260f52(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.has_formal_types */
extern T1 T83f171(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.has_formal_types */
extern T1 T81f51(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.depends_on_qualified_anchored_type */
extern T1 T1416f48(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.depends_on_qualified_anchored_type */
extern T1 T1319f45(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.depends_on_qualified_anchored_type */
extern T1 T1270f47(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.depends_on_qualified_anchored_type */
extern T1 T1269f50(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.depends_on_qualified_anchored_type */
extern T1 T1268f48(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T1242f57(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T872f50(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.depends_on_qualified_anchored_type */
extern T1 T514f45(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.depends_on_qualified_anchored_type */
extern T1 T260f80(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.depends_on_qualified_anchored_type */
extern T1 T83f207(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.depends_on_qualified_anchored_type */
extern T1 T81f83(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.has_identifier_anchored_type */
extern T1 T1416f52(GE_context* ac, T0* C);
/* ET_LIKE_N.has_identifier_anchored_type */
extern T1 T1319f51(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.has_identifier_anchored_type */
extern T1 T1270f53(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_identifier_anchored_type */
extern T1 T1269f56(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.has_identifier_anchored_type */
extern T1 T1268f54(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T1242f55(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T872f58(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.has_identifier_anchored_type */
extern T1 T514f51(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.has_identifier_anchored_type */
extern T1 T260f87(GE_context* ac, T0* C);
/* ET_CLASS.has_identifier_anchored_type */
extern T1 T83f219(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.has_identifier_anchored_type */
extern T1 T81f92(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters */
extern T0* T1416f62(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1416f67(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1416f67ot1(T0* a1, T0** a2);
/* ET_LIKE_N.resolved_formal_parameters */
extern T0* T1319f61(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.resolved_formal_parameters_with_type_mark */
extern T0* T1319f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters */
extern T0* T1270f64(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1270f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters */
extern T0* T1269f67(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1269f73(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_formal_parameters */
extern T0* T1268f66(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type_mark */
extern T0* T1268f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T1242f69(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T1242f74(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1242f74ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T872f68(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T872f73(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T872f73ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.resolved_formal_parameters */
extern T0* T514f61(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type_mark */
extern T0* T514f66(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.resolved_formal_parameters */
extern T0* T260f96(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T260f99(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.overridden_type_mark */
extern T0* T260f10(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_attached */
extern T1 T260f22(GE_context* ac, T0* C);
/* ET_CLASS.resolved_formal_parameters */
extern T0* T83f229(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type_mark */
extern T0* T83f235(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.overridden_type_mark */
extern T0* T83f89(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_attached */
extern T1 T83f101(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.resolved_formal_parameters */
extern T0* T81f87(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T81f98(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.overridden_type_mark */
extern T0* T81f20(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_attached */
extern T1 T81f27(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type */
extern T1 T1416f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_N.same_syntactical_type */
extern T1 T1319f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_type */
extern T1 T1270f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type */
extern T1 T1269f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_type */
extern T1 T1268f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T1242f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T872f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_type */
extern T1 T514f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_type */
extern T1 T260f88(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_type */
extern T1 T83f220(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_type */
extern T1 T81f86(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.named_type */
extern T0* T1416f31(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.named_type */
extern T0* T1319f35(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_type */
extern T0* T1270f32(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type */
extern T0* T1269f31(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_type */
extern T0* T1268f26(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type */
extern T0* T1242f44(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_type */
extern T0* T872f38(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_type */
extern T0* T514f29(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_type */
extern T0* T260f49(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.named_type */
extern T0* T83f151(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_type */
extern T0* T81f47(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.base_class */
extern T0* T1416f7(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.base_class */
extern T0* T1319f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_class */
extern T0* T1270f8(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_class */
extern T0* T1269f8(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_class */
extern T0* T1268f8(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_class */
extern T0* T1242f15(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.base_class */
extern T0* T872f12(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_class */
extern T0* T514f12(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_class_in_context */
extern T0* T260f9(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.base_class_in_context */
extern T0* T83f67(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_class_in_context */
extern T0* T81f8(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_base_type_with_type_marks */
extern T1 T1416f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1416f58ot1(T0* a1, T0** a2);
/* ET_CLASS_TYPE.same_base_formal_parameter_type_with_type_marks */
extern T1 T81f106(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_base_type_with_type_marks */
extern T1 T1319f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_base_type_with_type_marks */
extern T1 T1270f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_type_with_type_marks */
extern T1 T1269f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_base_type_with_type_marks */
extern T1 T1268f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_type_with_type_marks */
extern T1 T1242f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1242f65ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_base_type_with_type_marks */
extern T1 T872f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T872f64ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.same_base_type_with_type_marks */
extern T1 T514f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.to_text */
extern T0* T1416f5(GE_context* ac, T0* C);
/* ET_LIKE_N.to_text */
extern T0* T1319f5(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.to_text */
extern T0* T1270f6(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.to_text */
extern T0* T1269f43(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.to_text */
extern T0* T1268f6(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.to_text */
extern T0* T1242f60(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.to_text */
extern T0* T872f53(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.to_text */
extern T0* T514f10(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_deferred */
extern T1 T1254f50(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_deferred */
extern T1 T1253f60(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_deferred */
extern T1 T387f33(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_deferred */
extern T1 T386f33(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_deferred */
extern T1 T384f33(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_deferred */
extern T1 T355f60(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_deferred */
extern T1 T259f59(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_frozen */
extern T1 T1255f31(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_frozen */
extern T1 T1254f62(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_frozen */
extern T1 T1253f66(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_frozen */
extern T1 T387f34(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_frozen */
extern T1 T386f34(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_frozen */
extern T1 T384f34(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_frozen */
extern T1 T355f32(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_frozen */
extern T1 T259f43(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_bracketable */
extern T1 T1255f35(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_bracketable */
extern T1 T1254f35(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_bracketable */
extern T1 T1253f35(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_bracketable */
extern T1 T387f38(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_bracketable */
extern T1 T386f38(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_bracketable */
extern T1 T384f38(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_bracketable */
extern T1 T355f36(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_bracketable */
extern T1 T259f47(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_parenthesisable */
extern T1 T1255f36(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_parenthesisable */
extern T1 T1254f36(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_parenthesisable */
extern T1 T1253f36(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_parenthesisable */
extern T1 T387f40(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_parenthesisable */
extern T1 T386f39(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_parenthesisable */
extern T1 T384f39(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_parenthesisable */
extern T1 T355f37(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_parenthesisable */
extern T1 T259f48(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once */
extern T1 T1255f37(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_once */
extern T1 T1253f37(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_once */
extern T1 T387f41(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once */
extern T1 T386f40(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once */
extern T1 T384f40(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once */
extern T1 T355f38(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once */
extern T1 T259f49(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.preconditions */
extern T0* T387f30(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.preconditions */
extern T0* T386f30(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.preconditions */
extern T0* T384f30(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.postconditions */
extern T0* T387f55(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.postconditions */
extern T0* T386f44(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.postconditions */
extern T0* T384f44(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_infixable */
extern T1 T1255f33(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_infixable */
extern T1 T1254f33(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_infixable */
extern T1 T1253f33(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_infixable */
extern T1 T387f36(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_infixable */
extern T1 T386f36(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_infixable */
extern T1 T384f36(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_infixable */
extern T1 T355f34(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_infixable */
extern T1 T259f45(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_prefixable */
extern T1 T1255f32(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_prefixable */
extern T1 T1254f69(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_prefixable */
extern T1 T1253f32(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_prefixable */
extern T1 T259f44(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.new_synonym */
extern T0* T1255f38(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_synonym */
extern void T1255f92(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.new_synonym */
extern T0* T1254f38(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_synonym */
extern void T1254f99(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.new_synonym */
extern T0* T1253f38(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_synonym */
extern void T1253f95(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.new_synonym */
extern T0* T387f42(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_synonym */
extern void T387f83(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.new_synonym */
extern T0* T386f42(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_synonym */
extern void T386f87(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.new_synonym */
extern T0* T384f42(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_synonym */
extern void T384f86(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.new_synonym */
extern T0* T355f41(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_synonym */
extern void T355f93(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.new_synonym */
extern T0* T259f50(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_synonym */
extern void T259f99(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.is_constant_attribute */
extern T1 T1255f46(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_constant_attribute */
extern T1 T1254f45(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_constant_attribute */
extern T1 T1253f46(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_constant_attribute */
extern T1 T387f27(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_constant_attribute */
extern T1 T386f27(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_constant_attribute */
extern T1 T355f30(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_constant_attribute */
extern T1 T259f60(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_unique_attribute */
extern T1 T1255f58(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_unique_attribute */
extern T1 T1254f48(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_unique_attribute */
extern T1 T1253f47(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_unique_attribute */
extern T1 T387f28(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_unique_attribute */
extern T1 T384f29(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_unique_attribute */
extern T1 T355f31(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_unique_attribute */
extern T1 T259f61(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_seed */
extern T1 T1255f45(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.has_seed */
extern T1 T1254f44(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.has_seed */
extern T1 T1253f44(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.has_seed */
extern T1 T387f26(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.has_seed */
extern T1 T386f26(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.has_seed */
extern T1 T384f27(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.has_seed */
extern T1 T355f46(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.has_seed */
extern T1 T259f56(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.arguments_count */
extern T6 T1255f39(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.arguments_count */
extern T6 T1254f39(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.arguments_count */
extern T6 T1253f39(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.arguments_count */
extern T6 T387f54(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments_count */
extern T6 T386f43(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments_count */
extern T6 T384f43(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.arguments_count */
extern T6 T355f40(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.arguments_count */
extern T6 T259f51(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.arguments */
extern T0* T387f31(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments */
extern T0* T386f31(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments */
extern T0* T384f31(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.arguments */
extern T0* T355f47(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.name */
extern T0* T1255f65(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.name */
extern T0* T1254f49(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.name */
extern T0* T1253f48(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.name */
extern T0* T387f32(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.name */
extern T0* T386f32(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.name */
extern T0* T384f32(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.name */
extern T0* T355f59(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.name */
extern T0* T259f58(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_name */
extern T0* T1255f70(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_extended_name */
extern T0* T1255f72(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_name */
extern T0* T1254f74(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_extended_name */
extern T0* T1254f76(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_name */
extern T0* T1253f71(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_extended_name */
extern T0* T1253f73(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_name */
extern T0* T387f66(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_extended_name */
extern T0* T387f69(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_name */
extern T0* T386f68(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_extended_name */
extern T0* T386f71(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_name */
extern T0* T384f68(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_extended_name */
extern T0* T384f71(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_name */
extern T0* T355f70(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_extended_name */
extern T0* T355f72(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_name */
extern T0* T259f76(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_extended_name */
extern T0* T259f78(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.alias_name */
extern T0* T1255f34(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.alias_name */
extern T0* T1254f34(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.alias_name */
extern T0* T1253f34(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.alias_name */
extern T0* T387f37(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.alias_name */
extern T0* T386f37(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.alias_name */
extern T0* T384f37(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.alias_name */
extern T0* T355f35(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.alias_name */
extern T0* T259f46(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_alias_name */
extern T0* T1255f71(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_alias_name */
extern T0* T1254f75(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_alias_name */
extern T0* T1253f72(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_alias_name */
extern T0* T387f67(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_alias_name */
extern T0* T386f69(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_alias_name */
extern T0* T384f69(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_alias_name */
extern T0* T355f71(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_alias_name */
extern T0* T259f77(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_exported_to */
extern T1 T1255f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLIENTS.has_descendant */
extern T1 T783f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_ancestor */
extern T1 T83f218(GE_context* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.has_class */
extern T1 T420f6(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.has_descendant */
extern T1 T483f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_FUNCTION.is_exported_to */
extern T1 T1254f66(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_FUNCTION.is_exported_to */
extern T1 T1253f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTRIBUTE.is_exported_to */
extern T1 T387f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_UNIQUE_ATTRIBUTE.is_exported_to */
extern T1 T386f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTANT_ATTRIBUTE.is_exported_to */
extern T1 T384f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTENDED_ATTRIBUTE.is_exported_to */
extern T1 T355f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.is_exported_to */
extern T1 T259f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_FUNCTION.lower_name */
extern T0* T1255f42(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.lower_name */
extern T0* T1254f42(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.lower_name */
extern T0* T1253f42(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.lower_name */
extern T0* T387f24(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.lower_name */
extern T0* T386f57(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.lower_name */
extern T0* T384f57(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.lower_name */
extern T0* T355f43(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.lower_name */
extern T0* T259f54(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.type */
extern T0* T1255f40(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.type */
extern T0* T1254f40(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.type */
extern T0* T1253f40(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.type */
extern T0* T387f29(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.type */
extern T0* T386f29(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.type */
extern T0* T384f25(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.type */
extern T0* T355f39(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.type */
extern T0* T259f52(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_attribute */
extern T1 T1255f41(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_attribute */
extern T1 T1254f41(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_attribute */
extern T1 T1253f41(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_attribute */
extern T1 T386f45(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_attribute */
extern T1 T384f56(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_attribute */
extern T1 T259f53(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_deferred */
extern T1 T1258f42(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_deferred */
extern T1 T1257f42(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_deferred */
extern T1 T533f41(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_frozen */
extern T1 T1258f43(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_frozen */
extern T1 T1257f43(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_frozen */
extern T1 T539f61(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_frozen */
extern T1 T533f42(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_parenthesisable */
extern T1 T1258f69(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_parenthesisable */
extern T1 T1257f67(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_parenthesisable */
extern T1 T539f29(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_parenthesisable */
extern T1 T533f62(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.new_synonym */
extern T0* T1258f72(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_synonym */
extern void T1258f96(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.new_synonym */
extern T0* T1257f70(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_synonym */
extern void T1257f97(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.new_synonym */
extern T0* T539f40(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_synonym */
extern void T539f90(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.new_synonym */
extern T0* T533f40(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_synonym */
extern void T533f93(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.has_seed */
extern T1 T1258f35(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.has_seed */
extern T1 T1257f36(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.has_seed */
extern T1 T539f34(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.has_seed */
extern T1 T533f34(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.name */
extern T0* T1258f37(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.name */
extern T0* T1257f40(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.name */
extern T0* T539f35(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.name */
extern T0* T533f33(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_name */
extern T0* T1258f75(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_extended_name */
extern T0* T1258f77(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_name */
extern T0* T1257f73(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_extended_name */
extern T0* T1257f75(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_name */
extern T0* T539f69(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_extended_name */
extern T0* T539f71(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_name */
extern T0* T533f70(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_extended_name */
extern T0* T533f72(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.alias_name */
extern T0* T1258f44(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.alias_name */
extern T0* T1257f44(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.alias_name */
extern T0* T539f28(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.alias_name */
extern T0* T533f61(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_alias_name */
extern T0* T1258f76(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_alias_name */
extern T0* T1257f74(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_alias_name */
extern T0* T539f70(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_alias_name */
extern T0* T533f71(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.arguments_count */
extern T6 T1258f33(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.arguments_count */
extern T6 T1257f33(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.arguments_count */
extern T6 T539f36(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.arguments_count */
extern T6 T533f35(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_creation_exported_to */
extern T1 T1258f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.is_creation_exported_to */
extern T1 T83f217(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR_LIST.is_exported_to */
extern T1 T819f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.is_exported_to */
extern T1 T816f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.is_creation_exported_to */
extern T1 T1257f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEFERRED_PROCEDURE.is_creation_exported_to */
extern T1 T539f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.is_creation_exported_to */
extern T1 T533f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE.is_exported_to */
extern T1 T1258f65(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_exported_to */
extern T1 T1257f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_PROCEDURE.is_exported_to */
extern T1 T539f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_PROCEDURE.is_exported_to */
extern T1 T533f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_FREE_NAME.is_infix */
extern T1 T1260f13(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix */
extern T1 T1259f8(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix */
extern T1 T183f52(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix */
extern T1 T1261f10(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix */
extern T1 T1192f13(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix */
extern T1 T183f51(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_argument */
extern T1 T1261f61(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_argument */
extern T1 T1260f50(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_argument */
extern T1 T1259f47(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_argument */
extern T1 T1192f50(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_argument */
extern T1 T183f29(GE_context* ac, T0* C);
/* ET_INFIX_NAME.argument_name */
extern T0* T1261f62(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.argument_name */
extern T0* T1260f51(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.argument_name */
extern T0* T1259f48(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.argument_name */
extern T0* T1192f51(GE_context* ac, T0* C);
/* ET_IDENTIFIER.argument_name */
extern T0* T183f69(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_local */
extern T1 T1261f63(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_local */
extern T1 T1260f52(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_local */
extern T1 T1259f49(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_local */
extern T1 T1192f52(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_local */
extern T1 T183f31(GE_context* ac, T0* C);
/* ET_INFIX_NAME.local_name */
extern T0* T1261f64(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.local_name */
extern T0* T1260f53(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.local_name */
extern T0* T1259f50(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.local_name */
extern T0* T1192f53(GE_context* ac, T0* C);
/* ET_IDENTIFIER.local_name */
extern T0* T183f70(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_object_test_local */
extern T1 T1261f65(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_object_test_local */
extern T1 T1260f54(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_object_test_local */
extern T1 T1259f51(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_object_test_local */
extern T1 T1192f54(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_object_test_local */
extern T1 T183f7(GE_context* ac, T0* C);
/* ET_INFIX_NAME.object_test_local_name */
extern T0* T1261f66(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.object_test_local_name */
extern T0* T1260f55(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.object_test_local_name */
extern T0* T1259f52(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.object_test_local_name */
extern T0* T1192f55(GE_context* ac, T0* C);
/* ET_IDENTIFIER.object_test_local_name */
extern T0* T183f71(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_across_cursor */
extern T1 T1261f67(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_across_cursor */
extern T1 T1260f56(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_across_cursor */
extern T1 T1259f53(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_across_cursor */
extern T1 T1192f56(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_across_cursor */
extern T1 T183f32(GE_context* ac, T0* C);
/* ET_INFIX_NAME.across_cursor_name */
extern T0* T1261f68(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.across_cursor_name */
extern T0* T1260f57(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.across_cursor_name */
extern T0* T1259f54(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.across_cursor_name */
extern T0* T1192f57(GE_context* ac, T0* C);
/* ET_IDENTIFIER.across_cursor_name */
extern T0* T183f72(GE_context* ac, T0* C);
/* ET_INFIX_NAME.first_leaf */
extern T0* T1261f83(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.first_leaf */
extern T0* T1260f67(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.first_leaf */
extern T0* T1259f83(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.first_leaf */
extern T0* T1192f67(GE_context* ac, T0* C);
/* ET_IDENTIFIER.first_leaf */
extern T0* T183f98(GE_context* ac, T0* C);
/* ET_INFIX_NAME.same_feature_name */
extern T1 T1261f9(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_feature_name */
extern T1 T1260f17(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_NAME.same_feature_name */
extern T1 T1259f6(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_feature_name */
extern T1 T1192f12(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.same_feature_name */
extern T1 T183f40(GE_context* ac, T0* C, T0* a1);
extern T1 T183f40ot1(T0* a1, T0** a2);
/* ET_INFIX_NAME.lower_name */
extern T0* T1261f7(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.lower_name */
extern T0* T1260f15(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.lower_name */
extern T0* T1259f29(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.lower_name */
extern T0* T1192f10(GE_context* ac, T0* C);
/* ET_IDENTIFIER.lower_name */
extern T0* T183f18(GE_context* ac, T0* C);
/* ET_INFIX_NAME.hash_code */
extern T6 T1261f45(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.hash_code */
extern T6 T1259f28(GE_context* ac, T0* C);
/* ET_INFIX_NAME.position */
extern T0* T1261f12(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.position */
extern T0* T1260f19(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.position */
extern T0* T1259f9(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.position */
extern T0* T1192f14(GE_context* ac, T0* C);
/* ET_IDENTIFIER.position */
extern T0* T183f23(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_tuple_label */
extern T1 T1261f19(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_tuple_label */
extern T1 T1260f26(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_tuple_label */
extern T1 T1259f16(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_tuple_label */
extern T1 T1192f21(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_tuple_label */
extern T1 T183f47(GE_context* ac, T0* C);
/* ET_INFIX_NAME.name */
extern T0* T1261f8(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.name */
extern T0* T1260f16(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.name */
extern T0* T1259f5(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.name */
extern T0* T1192f11(GE_context* ac, T0* C);
/* ET_INFIX_NAME.last_leaf */
extern T0* T1261f82(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.last_leaf */
extern T0* T1260f66(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.last_leaf */
extern T0* T1259f82(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.last_leaf */
extern T0* T1192f66(GE_context* ac, T0* C);
/* ET_IDENTIFIER.last_leaf */
extern T0* T183f96(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_tuple */
extern T1 T532f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_tuple */
extern T1 T531f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_tuple */
extern T1 T341f44(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_tuple */
extern T1 T240f43(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.static_type */
extern T0* T532f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.static_type */
extern T0* T531f37(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.static_type */
extern T0* T341f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.static_type */
extern T0* T324f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.static_type */
extern T0* T240f35(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_generic */
extern T1 T532f35(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_generic */
extern T1 T531f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_generic */
extern T1 T341f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_generic */
extern T1 T324f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_generic */
extern T1 T240f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_reference_attributes */
extern T1 T532f43(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_reference_attributes */
extern T1 T531f43(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_reference_attributes */
extern T1 T341f41(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_reference_attributes */
extern T1 T324f41(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.has_nested_reference_attributes */
extern T1 T240f40(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_builtin_attribute */
extern T1 T532f25(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_builtin_attribute */
extern T1 T531f25(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_SPECIAL_TYPE.is_builtin_attribute */
extern T1 T341f22(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_TUPLE_TYPE.is_builtin_attribute */
extern T1 T324f49(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_TYPE.is_builtin_attribute */
extern T1 T240f37(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_FUNCTION_TYPE.is_special */
extern T1 T532f45(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_special */
extern T1 T531f45(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_special */
extern T1 T324f43(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_special */
extern T1 T240f42(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_procedure */
extern T0* T532f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.force_last */
extern void T327f12(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.resize */
extern void T327f15(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.new_capacity */
extern T6 T327f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.capacity */
extern T6 T327f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.put_last */
extern void T327f11(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T532f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.make_with_capacity */
extern T0* T327c10(GE_context* ac, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_procedure */
extern T0* T531f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T531f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_agent_call */
extern void T239f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_agent_call */
extern void T80f117(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.make */
extern T0* T1489c15(GE_context* ac, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.tokens */
extern T0* T531f24(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T531f44p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_procedure */
extern T0* T341f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T341f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.tokens */
extern T0* T341f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T341f42p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_procedure */
extern T0* T324f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T324f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_put */
extern void T239f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_put */
extern void T80f114(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.tokens */
extern T0* T324f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T324f42p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T240f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_procedure */
extern T0* T240f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_query */
extern T0* T532f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_attribute */
extern void T532f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T532f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.set_result_type_set */
extern void T247f36(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.tokens */
extern T0* T532f24(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T532f44p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_query */
extern T0* T531f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_attribute */
extern void T531f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_query */
extern T0* T531f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_query */
extern T0* T341f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_attribute */
extern void T341f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T341f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T341f48p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_query */
extern T0* T324f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_attribute */
extern void T324f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T324f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_item */
extern void T239f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_item */
extern void T80f115(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_at_feature_name */
extern T0* T82f95(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T324f48p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T240f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_attribute */
extern void T240f55(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_query */
extern T0* T240f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_procedure */
extern T0* T532f34(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_procedure */
extern T0* T531f35(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_procedure */
extern T0* T341f26(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_procedure */
extern T0* T324f26(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T240f30(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.is_agent_type */
extern T1 T341f47(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_agent_type */
extern T1 T324f47(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T240f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_expanded */
extern T1 T532f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_expanded */
extern T1 T531f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_expanded */
extern T1 T341f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_expanded */
extern T1 T324f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_expanded */
extern T1 T240f26(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_basic */
extern T1 T532f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_basic */
extern T1 T531f34(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_basic */
extern T1 T341f25(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_basic */
extern T1 T324f25(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_basic */
extern T1 T240f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_query */
extern T0* T532f26(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_query */
extern T0* T531f26(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_query */
extern T0* T341f32(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_query */
extern T0* T324f32(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T240f29(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.conforms_to_type */
extern T1 T532f38(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_type */
extern T1 T531f39(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.conforms_to_type */
extern T1 T341f30(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.conforms_to_type */
extern T1 T324f30(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T240f31(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.tokens */
extern T0* T240f28(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_null_position */
extern T1 T1675f33(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_null_position */
extern T1 T1237f26(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_null_position */
extern T1 T1236f26(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_null_position */
extern T1 T1235f27(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_null_position */
extern T1 T1234f27(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_null_position */
extern T1 T1232f29(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_null_position */
extern T1 T1231f29(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_null_position */
extern T1 T1230f54(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_null_position */
extern T1 T1229f54(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_null_position */
extern T1 T1228f54(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_null_position */
extern T1 T1227f54(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_null_position */
extern T1 T1226f54(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_null_position */
extern T1 T1225f22(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_null_position */
extern T1 T1224f22(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_null_position */
extern T1 T1223f20(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_null_position */
extern T1 T1191f27(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_null_position */
extern T1 T727f58(GE_context* ac, T0* C);
/* ET_VOID.is_null_position */
extern T1 T719f20(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_null_position */
extern T1 T716f42(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.is_null_position */
extern T1 T713f12(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_null_position */
extern T1 T703f6(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_null_position */
extern T1 T697f43(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_null_position */
extern T1 T679f15(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.is_null_position */
extern T1 T676f12(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_null_position */
extern T1 T655f13(GE_context* ac, T0* C);
/* ET_KEYWORD.is_null_position */
extern T1 T421f24(GE_context* ac, T0* C);
/* ET_SYMBOL.is_null_position */
extern T1 T369f12(GE_context* ac, T0* C);
/* ET_RESULT.is_null_position */
extern T1 T331f17(GE_context* ac, T0* C);
/* ET_CURRENT.is_null_position */
extern T1 T303f15(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_null_position */
extern T1 T183f41(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.is_null */
extern T1 T181f8(GE_context* ac, T0* C);
/* ET_FILE_POSITION.to_text */
extern T0* T1305f10(GE_context* ac, T0* C);
/* ET_FILE_POSITION.append_to_string */
extern void T1305f15(GE_context* ac, T0* C, T0* a1);
/* ET_FILE_POSITION.append_to_string_with_filename */
extern void T1305f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_context_to_string */
extern void T1305f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_line_to_string */
extern void T1305f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.skip_lines */
extern void T1305f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_FILE_POSITION.integer_ */
extern T0* T1305f11(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.to_text */
extern T0* T1237f32(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.append_to_string */
extern void T1237f50(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.integer_ */
extern T0* T1237f34(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.to_text */
extern T0* T1236f32(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.append_to_string */
extern void T1236f50(GE_context* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.integer_ */
extern T0* T1236f34(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.to_text */
extern T0* T1235f33(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.append_to_string */
extern void T1235f46(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.integer_ */
extern T0* T1235f35(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.to_text */
extern T0* T1234f33(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.append_to_string */
extern void T1234f46(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.integer_ */
extern T0* T1234f35(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.to_text */
extern T0* T1232f35(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.append_to_string */
extern void T1232f50(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.integer_ */
extern T0* T1232f37(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.to_text */
extern T0* T1231f35(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.append_to_string */
extern void T1231f50(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.integer_ */
extern T0* T1231f37(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_text */
extern T0* T1230f60(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.append_to_string */
extern void T1230f80(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.integer_ */
extern T0* T1230f62(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_text */
extern T0* T1229f60(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.append_to_string */
extern void T1229f80(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.integer_ */
extern T0* T1229f62(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_text */
extern T0* T1228f60(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.append_to_string */
extern void T1228f80(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_ */
extern T0* T1228f62(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_text */
extern T0* T1227f60(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.append_to_string */
extern void T1227f80(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_ */
extern T0* T1227f62(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_text */
extern T0* T1226f60(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.append_to_string */
extern void T1226f80(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.integer_ */
extern T0* T1226f62(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.to_text */
extern T0* T1225f35(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.append_to_string */
extern void T1225f50(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.integer_ */
extern T0* T1225f39(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.to_text */
extern T0* T1224f39(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.append_to_string */
extern void T1224f54(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.integer_ */
extern T0* T1224f43(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.to_text */
extern T0* T1223f33(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.append_to_string */
extern void T1223f51(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.integer_ */
extern T0* T1223f35(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.to_text */
extern T0* T1191f34(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.append_to_string */
extern void T1191f49(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.integer_ */
extern T0* T1191f37(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.to_text */
extern T0* T727f67(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.append_to_string */
extern void T727f75(GE_context* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.integer_ */
extern T0* T727f70(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.to_text */
extern T0* T716f81(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.append_to_string */
extern void T716f102(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.integer_ */
extern T0* T716f82(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.to_text */
extern T0* T655f96(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.append_to_string */
extern void T655f107(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.integer_ */
extern T0* T655f99(GE_context* ac, T0* C);
/* ET_KEYWORD.to_text */
extern T0* T421f33(GE_context* ac, T0* C);
/* ET_KEYWORD.append_to_string */
extern void T421f95(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.integer_ */
extern T0* T421f34(GE_context* ac, T0* C);
/* ET_SYMBOL.to_text */
extern T0* T369f69(GE_context* ac, T0* C);
/* ET_SYMBOL.append_to_string */
extern void T369f94(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.integer_ */
extern T0* T369f70(GE_context* ac, T0* C);
/* ET_CURRENT.to_text */
extern T0* T303f28(GE_context* ac, T0* C);
/* ET_CURRENT.append_to_string */
extern void T303f38(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.integer_ */
extern T0* T303f29(GE_context* ac, T0* C);
/* ET_IDENTIFIER.to_text */
extern T0* T183f90(GE_context* ac, T0* C);
/* ET_IDENTIFIER.append_to_string */
extern void T183f126(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.integer_ */
extern T0* T183f94(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.to_text */
extern T0* T181f9(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.append_to_string */
extern void T181f14(GE_context* ac, T0* C, T0* a1);
/* ET_COMPRESSED_POSITION.integer_ */
extern T0* T181f10(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.line */
extern T6 T1675f31(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.line */
extern T6 T1237f24(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.line */
extern T6 T1236f24(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.line */
extern T6 T1235f25(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.line */
extern T6 T1234f25(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.line */
extern T6 T1232f27(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.line */
extern T6 T1231f27(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.line */
extern T6 T1230f52(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.line */
extern T6 T1229f52(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.line */
extern T6 T1228f52(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.line */
extern T6 T1227f52(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.line */
extern T6 T1226f52(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.line */
extern T6 T1225f20(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.line */
extern T6 T1224f20(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.line */
extern T6 T1223f18(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.line */
extern T6 T1191f25(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.line */
extern T6 T727f59(GE_context* ac, T0* C);
/* ET_VOID.line */
extern T6 T719f18(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.line */
extern T6 T716f40(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.line */
extern T6 T713f10(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.line */
extern T6 T703f11(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.line */
extern T6 T697f41(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.line */
extern T6 T679f13(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.line */
extern T6 T676f10(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.line */
extern T6 T655f59(GE_context* ac, T0* C);
/* ET_KEYWORD.line */
extern T6 T421f25(GE_context* ac, T0* C);
/* ET_SYMBOL.line */
extern T6 T369f58(GE_context* ac, T0* C);
/* ET_RESULT.line */
extern T6 T331f15(GE_context* ac, T0* C);
/* ET_CURRENT.line */
extern T6 T303f16(GE_context* ac, T0* C);
/* ET_IDENTIFIER.line */
extern T6 T183f25(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.line */
extern T6 T181f6(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.column */
extern T6 T1675f32(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.column */
extern T6 T1237f25(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.column */
extern T6 T1236f25(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.column */
extern T6 T1235f26(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.column */
extern T6 T1234f26(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.column */
extern T6 T1232f28(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.column */
extern T6 T1231f28(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.column */
extern T6 T1230f53(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.column */
extern T6 T1229f53(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.column */
extern T6 T1228f53(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.column */
extern T6 T1227f53(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.column */
extern T6 T1226f53(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.column */
extern T6 T1225f21(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.column */
extern T6 T1224f21(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.column */
extern T6 T1223f19(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.column */
extern T6 T1191f26(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.column */
extern T6 T727f65(GE_context* ac, T0* C);
/* ET_VOID.column */
extern T6 T719f19(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.column */
extern T6 T716f41(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.column */
extern T6 T713f11(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.column */
extern T6 T703f39(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.column */
extern T6 T697f42(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.column */
extern T6 T679f14(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.column */
extern T6 T676f11(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.column */
extern T6 T655f74(GE_context* ac, T0* C);
/* ET_KEYWORD.column */
extern T6 T421f26(GE_context* ac, T0* C);
/* ET_SYMBOL.column */
extern T6 T369f67(GE_context* ac, T0* C);
/* ET_RESULT.column */
extern T6 T331f16(GE_context* ac, T0* C);
/* ET_CURRENT.column */
extern T6 T303f17(GE_context* ac, T0* C);
/* ET_IDENTIFIER.column */
extern T6 T183f26(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.column */
extern T6 T181f7(GE_context* ac, T0* C);
/* UC_UTF8_STRING.character_32_item */
extern T3 T1206f27(GE_context* ac, T0* C, T6 a1);
/* STRING_32.item */
extern T3 T18f10(GE_context* ac, T0* C, T6 a1);
/* STRING_8.character_32_item */
extern T3 T17f32(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.substring */
extern T0* T1206f15(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.make_from_substring */
extern T0* T1206c79(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.make_from_substring_general */
extern void T1206f99(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_32.substring */
extern T0* T18f11(GE_context* ac, T0* C, T6 a1, T6 a2);
/* STRING_32.new_string */
extern T0* T18f13(GE_context* ac, T0* C, T6 a1);
/* STRING_8.substring */
extern T0* T17f25(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.code */
extern T10 T1206f50(GE_context* ac, T0* C, T6 a1);
/* STRING_32.code */
extern T10 T18f9(GE_context* ac, T0* C, T6 a1);
/* STRING_8.code */
extern T10 T17f20(GE_context* ac, T0* C, T6 a1);
/* ET_TUPLE_TYPE.same_named_type */
extern T1 T260f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_named_type */
extern T1 T83f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_named_type */
extern T1 T81f78(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_as_base_class */
extern T1 T260f14(GE_context* ac, T0* C);
/* ET_CLASS.same_as_base_class */
extern T1 T83f74(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.same_as_base_class */
extern T1 T81f21(GE_context* ac, T0* C);
/* ET_CLASS.is_expanded */
extern T1 T83f156(GE_context* ac, T0* C);
/* ET_CLASS.has_expanded_mark */
extern T1 T83f90(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_expanded */
extern T1 T81f17(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.same_named_type_with_type_marks */
extern T1 T260f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_type_with_type_marks */
extern T1 T83f92(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_type_with_type_marks */
extern T1 T81f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.named_type_with_type_mark */
extern T0* T260f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.named_type_with_type_mark */
extern T0* T83f129(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.named_type_with_type_mark */
extern T0* T81f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type_actual_count */
extern T6 T260f41(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.base_type_actual_count */
extern T6 T83f149(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_type_actual_count */
extern T6 T81f40(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_type_with_type_mark */
extern T0* T260f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_with_type_mark */
extern T0* T83f98(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type_with_type_mark */
extern T0* T81f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_named_type_with_type_mark */
extern T0* T260f68(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_named_type_with_type_mark */
extern T0* T83f190(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_named_type_with_type_mark */
extern T0* T81f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.unaliased_to_text */
extern T0* T260f15(GE_context* ac, T0* C);
/* ET_CLASS.unaliased_to_text */
extern T0* T83f130(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.unaliased_to_text */
extern T0* T81f29(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.same_named_class_type_with_type_marks */
extern T1 T260f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_class_type_with_type_marks */
extern T1 T83f147(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_class_type_with_type_marks */
extern T1 T81f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T260f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_tuple_type_with_type_marks */
extern T1 T83f148(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T81f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_type_expanded_with_type_mark */
extern T1 T260f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_expanded_with_type_mark */
extern T1 T83f87(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_expanded_with_type_mark */
extern T1 T81f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.conforms_to_type_with_type_marks */
extern T1 T260f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforms_to_type_with_type_marks */
extern T1 T83f91(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_to_type_with_type_marks */
extern T1 T81f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.same_base_class_type_with_type_marks */
extern T1 T260f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_base_class_type_with_type_marks */
extern T1 T83f145(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_class_type_with_type_marks */
extern T1 T81f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T260f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_base_tuple_type_with_type_marks */
extern T1 T83f165(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T81f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T260f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforms_from_class_type_with_type_marks */
extern T1 T83f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforming_ancestor */
extern T0* T83f82(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T81f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T260f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACTUAL_PARAMETER_SUBLIST.tuple_conforms_to_types */
extern T1 T1663f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.tuple_conforms_to_types */
extern T1 T251f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_from_tuple_type_with_type_marks */
extern T1 T83f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T81f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.is_type_detachable_with_type_mark */
extern T1 T260f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_detachable_with_type_mark */
extern T1 T83f154(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_detachable_with_type_mark */
extern T1 T81f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.index_of_label */
extern T6 T260f81(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.index_of_label */
extern T6 T83f211(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.index_of_label */
extern T6 T81f84(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.actual_parameter_count */
extern T6 T260f48(GE_context* ac, T0* C);
/* ET_CLASS.formal_parameter_count */
extern T6 T83f153(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.actual_parameter_count */
extern T6 T81f45(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_type_attached_with_type_mark */
extern T1 T260f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_attached_with_type_mark */
extern T1 T83f86(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_attached_with_type_mark */
extern T1 T81f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_base_type_with_type_mark */
extern T0* T260f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_base_type_with_type_mark */
extern T0* T83f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_base_type_with_type_mark */
extern T0* T81f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type_actual */
extern T0* T260f78(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T260f78ot1(T0* a1, T0** a2);
/* ET_CLASS.base_type_actual */
extern T0* T83f203(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_CLASS_TYPE.base_type_actual */
extern T0* T81f75(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T81f75ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.base_type_index_of_label */
extern T6 T260f82(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_index_of_label */
extern T6 T83f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type_index_of_label */
extern T6 T81f85(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_class */
extern T0* T260f13(GE_context* ac, T0* C);
/* ET_CLASS.base_class */
extern T0* T83f116(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.base_class */
extern T0* T81f80(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.type_with_type_mark */
extern T0* T260f36(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.type_with_type_mark */
extern T0* T83f119(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.type_with_type_mark */
extern T0* T81f37(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.to_text */
extern T0* T260f37(GE_context* ac, T0* C);
/* ET_CLASS.to_text */
extern T0* T83f123(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.to_text */
extern T0* T81f38(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T260f72(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_formal_parameter_type_with_type_marks */
extern T1 T83f196(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T81f71(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T260f73(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T83f197(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T81f72(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.is_type_reference_with_type_mark */
extern T1 T260f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_reference_with_type_mark */
extern T1 T83f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_reference_with_type_mark */
extern T1 T81f76(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.conforms_to_type */
extern T1 T260f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_to_type */
extern T1 T83f157(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_to_type */
extern T1 T81f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_type_with_type_marks */
extern T1 T260f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_base_type_with_type_marks */
extern T1 T83f124(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_type_with_type_marks */
extern T1 T81f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.test */
extern T1 T185f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.string_ */
extern T0* T185f2(GE_context* ac, T0* C);
/* KL_STRING_EQUALITY_TESTER.test */
extern T1 T147f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable KL_EQUALITY_TESTER [STRING_8].test */
extern T1 T59f1(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T59f1oe1(GE_context* ac, T0* a1, T0* a2);
/* UC_UTF8_STRING.is_equal */
extern T1 T1206f61(GE_context* ac, T0* C, T0* a1);
/* UC_STRING_EQUALITY_TESTER.test */
extern T1 T58f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.string_ */
extern T0* T58f2(GE_context* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.default_message */
extern T0* T1864f5(GE_context* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.message */
extern T0* T1864f3(GE_context* ac, T0* C, T0* a1);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.arguments */
extern T0* T1864f6(GE_context* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.string_ */
extern T0* T1864f4(GE_context* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.default_message */
extern T0* T1833f3(GE_context* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.message */
extern T0* T1833f5(GE_context* ac, T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.arguments */
extern T0* T1833f7(GE_context* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.string_ */
extern T0* T1833f6(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.default_message */
extern T0* T1832f3(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.message */
extern T0* T1832f5(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.arguments */
extern T0* T1832f7(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.string_ */
extern T0* T1832f6(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.default_message */
extern T0* T1831f3(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.message */
extern T0* T1831f5(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_AND_REJECT_ERROR.arguments */
extern T0* T1831f7(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.string_ */
extern T0* T1831f6(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.default_message */
extern T0* T1830f3(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.message */
extern T0* T1830f5(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_AND_META_ERROR.arguments */
extern T0* T1830f7(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.string_ */
extern T0* T1830f6(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.default_message */
extern T0* T1829f3(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.message */
extern T0* T1829f5(GE_context* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.arguments */
extern T0* T1829f7(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.string_ */
extern T0* T1829f6(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.default_message */
extern T0* T1828f3(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.message */
extern T0* T1828f5(GE_context* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_CLASS_ERROR.arguments */
extern T0* T1828f7(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.string_ */
extern T0* T1828f6(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.default_message */
extern T0* T1827f3(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.message */
extern T0* T1827f5(GE_context* ac, T0* C, T0* a1);
/* LX_MISSING_QUOTE_ERROR.arguments */
extern T0* T1827f7(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.string_ */
extern T0* T1827f6(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.default_message */
extern T0* T1826f3(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.message */
extern T0* T1826f5(GE_context* ac, T0* C, T0* a1);
/* LX_UNRECOGNIZED_RULE_ERROR.arguments */
extern T0* T1826f7(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.string_ */
extern T0* T1826f6(GE_context* ac, T0* C);
/* ET_UNIVERSE_ERROR.default_message */
extern T0* T1796f12(GE_context* ac, T0* C);
/* ET_UNIVERSE_ERROR.message */
extern T0* T1796f7(GE_context* ac, T0* C, T0* a1);
/* ET_UNIVERSE_ERROR.arguments */
extern T0* T1796f6(GE_context* ac, T0* C);
/* ET_UNIVERSE_ERROR.string_ */
extern T0* T1796f9(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.default_message */
extern T0* T1649f12(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.message */
extern T0* T1649f7(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.arguments */
extern T0* T1649f6(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.string_ */
extern T0* T1649f9(GE_context* ac, T0* C);
/* ET_SYNTAX_ERROR.default_message */
extern T0* T1523f11(GE_context* ac, T0* C);
/* ET_SYNTAX_ERROR.message */
extern T0* T1523f14(GE_context* ac, T0* C, T0* a1);
/* ET_SYNTAX_ERROR.arguments */
extern T0* T1523f12(GE_context* ac, T0* C);
/* ET_SYNTAX_ERROR.string_ */
extern T0* T1523f16(GE_context* ac, T0* C);
/* ET_CLUSTER_ERROR.default_message */
extern T0* T1522f12(GE_context* ac, T0* C);
/* ET_CLUSTER_ERROR.message */
extern T0* T1522f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_ERROR.arguments */
extern T0* T1522f6(GE_context* ac, T0* C);
/* ET_CLUSTER_ERROR.string_ */
extern T0* T1522f9(GE_context* ac, T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.default_message */
extern T0* T1473f5(GE_context* ac, T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.message */
extern T0* T1473f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_INVALID_EXPRESSION_ERROR.arguments */
extern T0* T1473f6(GE_context* ac, T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.string_ */
extern T0* T1473f4(GE_context* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.default_message */
extern T0* T1356f5(GE_context* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.message */
extern T0* T1356f3(GE_context* ac, T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.arguments */
extern T0* T1356f6(GE_context* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.string_ */
extern T0* T1356f4(GE_context* ac, T0* C);
/* UT_SYNTAX_ERROR.default_message */
extern T0* T1355f5(GE_context* ac, T0* C);
/* UT_SYNTAX_ERROR.message */
extern T0* T1355f3(GE_context* ac, T0* C, T0* a1);
/* UT_SYNTAX_ERROR.arguments */
extern T0* T1355f6(GE_context* ac, T0* C);
/* UT_SYNTAX_ERROR.string_ */
extern T0* T1355f4(GE_context* ac, T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T1144f5(GE_context* ac, T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T1144f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T1144f6(GE_context* ac, T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T1144f4(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.default_message */
extern T0* T1143f5(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.message */
extern T0* T1143f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.arguments */
extern T0* T1143f6(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.string_ */
extern T0* T1143f4(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.default_message */
extern T0* T1142f5(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.message */
extern T0* T1142f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.arguments */
extern T0* T1142f6(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.string_ */
extern T0* T1142f4(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.default_message */
extern T0* T1141f5(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.message */
extern T0* T1141f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.arguments */
extern T0* T1141f6(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.string_ */
extern T0* T1141f4(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.default_message */
extern T0* T1140f5(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.message */
extern T0* T1140f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MISSING_ELEMENT_ERROR.arguments */
extern T0* T1140f6(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.string_ */
extern T0* T1140f4(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.default_message */
extern T0* T1139f5(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.message */
extern T0* T1139f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.arguments */
extern T0* T1139f6(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.string_ */
extern T0* T1139f4(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.default_message */
extern T0* T1138f5(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.message */
extern T0* T1138f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.arguments */
extern T0* T1138f6(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.string_ */
extern T0* T1138f4(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.default_message */
extern T0* T1137f5(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.message */
extern T0* T1137f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.arguments */
extern T0* T1137f6(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.string_ */
extern T0* T1137f4(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.default_message */
extern T0* T1032f43(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.message */
extern T0* T1032f16(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.arguments */
extern T0* T1032f13(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.string_ */
extern T0* T1032f42(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.default_message */
extern T0* T1031f5(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.message */
extern T0* T1031f7(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.arguments */
extern T0* T1031f6(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.string_ */
extern T0* T1031f9(GE_context* ac, T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T452f5(GE_context* ac, T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T452f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T452f6(GE_context* ac, T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T452f4(GE_context* ac, T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.default_message */
extern T0* T451f5(GE_context* ac, T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.message */
extern T0* T451f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.arguments */
extern T0* T451f6(GE_context* ac, T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.string_ */
extern T0* T451f4(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.default_message */
extern T0* T450f5(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.message */
extern T0* T450f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.arguments */
extern T0* T450f6(GE_context* ac, T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.default_message */
extern T0* T449f5(GE_context* ac, T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.message */
extern T0* T449f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.arguments */
extern T0* T449f6(GE_context* ac, T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.string_ */
extern T0* T449f4(GE_context* ac, T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.default_message */
extern T0* T448f5(GE_context* ac, T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.message */
extern T0* T448f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.arguments */
extern T0* T448f6(GE_context* ac, T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.string_ */
extern T0* T448f4(GE_context* ac, T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.default_message */
extern T0* T447f5(GE_context* ac, T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.message */
extern T0* T447f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.arguments */
extern T0* T447f6(GE_context* ac, T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.string_ */
extern T0* T447f4(GE_context* ac, T0* C);
/* ET_INTERNAL_ERROR.default_message */
extern T0* T426f5(GE_context* ac, T0* C);
/* ET_INTERNAL_ERROR.message */
extern T0* T426f7(GE_context* ac, T0* C, T0* a1);
/* ET_INTERNAL_ERROR.arguments */
extern T0* T426f6(GE_context* ac, T0* C);
/* ET_INTERNAL_ERROR.string_ */
extern T0* T426f9(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.default_message */
extern T0* T326f5(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.message */
extern T0* T326f3(GE_context* ac, T0* C, T0* a1);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.arguments */
extern T0* T326f6(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.string_ */
extern T0* T326f4(GE_context* ac, T0* C);
/* UT_MESSAGE.default_message */
extern T0* T170f5(GE_context* ac, T0* C);
/* UT_MESSAGE.message */
extern T0* T170f3(GE_context* ac, T0* C, T0* a1);
/* UT_MESSAGE.arguments */
extern T0* T170f6(GE_context* ac, T0* C);
/* UT_MESSAGE.string_ */
extern T0* T170f4(GE_context* ac, T0* C);
/* UT_VERSION_NUMBER.default_message */
extern T0* T88f3(GE_context* ac, T0* C);
/* UT_VERSION_NUMBER.message */
extern T0* T88f5(GE_context* ac, T0* C, T0* a1);
/* UT_VERSION_NUMBER.arguments */
extern T0* T88f7(GE_context* ac, T0* C);
/* UT_VERSION_NUMBER.string_ */
extern T0* T88f6(GE_context* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.default_message */
extern T0* T87f3(GE_context* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.message */
extern T0* T87f5(GE_context* ac, T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.arguments */
extern T0* T87f7(GE_context* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.string_ */
extern T0* T87f6(GE_context* ac, T0* C);
/* AP_ERROR.default_message */
extern T0* T41f17(GE_context* ac, T0* C);
/* AP_ERROR.message */
extern T0* T41f18(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.arguments */
extern T0* T41f20(GE_context* ac, T0* C);
/* AP_ERROR.string_ */
extern T0* T41f19(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.was_found */
extern T1 T51f11(GE_context* ac, T0* C);
/* AP_STRING_OPTION.was_found */
extern T1 T47f15(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.was_found */
extern T1 T46f18(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.was_found */
extern T1 T45f15(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.was_found */
extern T1 T44f17(GE_context* ac, T0* C);
/* AP_FLAG.was_found */
extern T1 T42f9(GE_context* ac, T0* C);
/* AP_STRING_OPTION.occurrences */
extern T6 T47f14(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.occurrences */
extern T6 T46f17(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.occurrences */
extern T6 T45f14(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.occurrences */
extern T6 T44f16(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.allows_parameter */
extern T1 T51f9(GE_context* ac, T0* C);
/* AP_STRING_OPTION.allows_parameter */
extern T1 T47f13(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.allows_parameter */
extern T1 T46f16(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.allows_parameter */
extern T1 T45f13(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.allows_parameter */
extern T1 T44f15(GE_context* ac, T0* C);
/* AP_FLAG.allows_parameter */
extern T1 T42f11(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.needs_parameter */
extern T1 T51f12(GE_context* ac, T0* C);
/* AP_FLAG.needs_parameter */
extern T1 T42f10(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.name */
extern T0* T51f13(GE_context* ac, T0* C);
/* AP_STRING_OPTION.name */
extern T0* T47f16(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.name */
extern T0* T46f13(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.name */
extern T0* T45f16(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.name */
extern T0* T44f13(GE_context* ac, T0* C);
/* AP_FLAG.name */
extern T0* T42f12(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.example */
extern T0* T51f14(GE_context* ac, T0* C);
/* AP_STRING_OPTION.example */
extern T0* T47f17(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.example */
extern T0* T46f19(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.example */
extern T0* T45f17(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.example */
extern T0* T44f19(GE_context* ac, T0* C);
/* AP_FLAG.example */
extern T0* T42f13(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.names */
extern T0* T51f19(GE_context* ac, T0* C);
/* AP_STRING_OPTION.names */
extern T0* T47f21(GE_context* ac, T0* C);
/* AP_STRING_OPTION.has_long_form */
extern T1 T47f22(GE_context* ac, T0* C);
/* AP_STRING_OPTION.names */
extern T0* T47f21p1(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T46f21(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.has_long_form */
extern T1 T46f22(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T46f21p1(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T45f24(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.has_long_form */
extern T1 T45f25(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T45f24p1(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T44f23(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.has_long_form */
extern T1 T44f24(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T44f23p1(GE_context* ac, T0* C);
/* AP_FLAG.names */
extern T0* T42f16(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.last_character */
extern T2 T1207f6(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].item */
extern T2 T1577f4(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.end_of_input */
extern T1 T1207f21(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.end_of_input */
extern T1 T31f33(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.is_closable */
extern T1 T1217f7(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.is_closable */
extern T1 T1207f7(GE_context* ac, T0* C);
/* KL_STDIN_FILE.is_closable */
extern T1 T659f6(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_closable */
extern T1 T31f38(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.read_to_string */
extern T6 T1217f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T1207f28(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T1207f28p1(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.read_to_string */
extern T6 T659f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* CONSOLE.read_stream */
extern void T1316f31(GE_context* ac, T0* C, T6 a1);
/* CONSOLE.read_stream_thread_aware */
extern void T1316f33(GE_context* ac, T0* C, T6 a1);
/* C_STRING.read_string_into */
extern void T29f15(GE_context* ac, T0* C, T0* a1);
/* CONSOLE.console_readstream */
extern T6 T1316f17(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* CONSOLE.read_data_buffer */
extern T0* T1316f16(GE_context* ac, T0* C);
/* KL_STDIN_FILE.any_ */
extern T0* T659f10(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.read_to_string */
extern T6 T31f37(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.dummy_kl_character_buffer */
extern T0* T31f47(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.any_ */
extern T0* T31f45(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.name */
extern T0* T1217f6(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.name */
extern T0* T1207f5(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.class_count_recursive */
extern T6 T71f143(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.class_count_recursive */
extern T0* T71f143ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.class_count_recursive */
extern T0* T71f143ac2(GE_context* ac, T0* a1, T0* a2);
/* KL_AGENT_ROUTINES [ET_CLASS].call */
extern void T455f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UT_COUNTER.increment */
extern void T454f3(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.class_actions */
extern T0* T71f142(GE_context* ac, T0* C);
/* KL_AGENT_ROUTINES [ET_CLASS].default_create */
extern T0* T455c1(GE_context* ac);
/* UT_COUNTER.make */
extern T0* T454c2(GE_context* ac, T6 a1);
/* ET_ECF_SYSTEM.class_count_recursive */
extern T6 T65f141(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.class_count_recursive */
extern T0* T65f141ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.class_count_recursive */
extern T0* T65f141ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.class_actions */
extern T0* T65f144(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.class_count_recursive */
extern T6 T62f147(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.class_count_recursive */
extern T0* T62f147ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.class_count_recursive */
extern T0* T62f147ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.class_actions */
extern T0* T62f138(GE_context* ac, T0* C);
extern T0* GE_ma1085(T6 c, T6 n, ...);
extern T0* GE_ma144(T6 c, T6 n, ...);
extern T0* GE_ma314(T6 c, T6 n, ...);
extern T0* GE_ma262(T6 c, T6 n, ...);
extern T0* GE_ma562(T6 c, T6 n, ...);
extern T0* GE_ma1868(T6 c, T6 n, ...);
extern T0* GE_ma1867(T6 c, T6 n, ...);
extern T0* GE_mt195();
extern T0* GE_mt30(T6 a1, T6 a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T6 a10, T1 a11);
extern T0* GE_mt1705(T0* a1, T0* a2, T8 a3);
extern T0* GE_mt487(T0* a1);
extern T0* ge269ov5062;
extern T0* ge524ov22363;
extern T0* ge268ov6163;
extern T0* ge224ov3043;
extern T0* ge164ov6169;
extern T0* ge335ov20900;
extern T0* ge325ov20845;
extern T0* ge270ov6163;
extern T0* ge1046ov16254;
extern T0* ge1046ov16261;
extern T0* ge1046ov16260;
extern T0* ge1046ov16259;
extern T0* ge254ov5107;
extern T0* ge255ov2944;
extern T0* ge1046ov16255;
extern T0* ge1046ov16257;
extern T0* ge1046ov15918;
extern T0* ge1046ov16196;
extern T0* ge1046ov16209;
extern T0* ge253ov20397;
extern T0* ge253ov20398;
extern T0* ge1768ov28044;
extern T0* ge1768ov28029;
extern T0* ge1768ov28022;
extern T0* ge1768ov28007;
extern T0* ge1768ov28032;
extern T0* ge1768ov28025;
extern T0* ge1768ov28033;
extern T0* ge1768ov28042;
extern T0* ge1768ov28035;
extern T0* ge1768ov28031;
extern T0* ge1768ov28019;
extern T0* ge1768ov28020;
extern T0* ge1768ov28034;
extern T0* ge1768ov28021;
extern T0* ge1768ov28008;
extern T0* ge1768ov28009;
extern T0* ge1768ov28010;
extern T0* ge1768ov28016;
extern T0* ge1768ov28018;
extern T0* ge1768ov28013;
extern T0* ge1768ov28038;
extern T0* ge1768ov28037;
extern T0* ge1768ov28014;
extern T0* ge1768ov28015;
extern T0* ge1768ov28012;
extern T0* ge1768ov28011;
extern T0* ge1764ov27799;
extern T0* ge1046ov16256;
extern T0* ge1046ov16194;
extern T0* ge1046ov16258;
extern T0* ge1046ov15952;
extern T0* ge1046ov15926;
extern T0* ge1046ov16195;
extern T0* ge1046ov16189;
extern T0* ge1046ov16193;
extern T0* ge1046ov16190;
extern T0* ge1046ov16192;
extern T0* ge1046ov16191;
extern T0* ge1046ov16197;
extern T0* ge1046ov16199;
extern T0* ge1046ov16198;
extern T0* ge1046ov16200;
extern T0* ge1040ov9545;
extern T0* ge1040ov9544;
extern T0* ge1040ov9543;
extern T0* ge827ov3977;
extern T0* ge275ov20334;
extern T0* ge275ov20335;
extern T0* ge261ov20525;
extern T0* ge261ov20524;
extern T0* ge278ov20334;
extern T0* ge278ov20335;
extern T0* ge254ov5109;
extern T0* ge1046ov15995;
extern T0* ge1046ov16239;
extern T0* ge1046ov16001;
extern T0* ge1046ov15907;
extern T0* ge1046ov16240;
extern T0* ge1046ov16084;
extern T0* ge1046ov16083;
extern T0* ge1046ov16024;
extern T0* ge1046ov16055;
extern T0* ge1046ov16099;
extern T0* ge1046ov16138;
extern T0* ge1046ov16165;
extern T0* ge1046ov16205;
extern T0* ge1046ov15960;
extern T0* ge1046ov16233;
extern T0* ge1046ov16003;
extern T0* ge1046ov15980;
extern T0* ge1046ov15909;
extern T0* ge1046ov16201;
extern T0* ge1046ov15978;
extern T0* ge827ov3948;
extern T0* ge827ov3968;
extern T0* ge1046ov16163;
extern T0* ge1046ov15954;
extern T0* ge1046ov16186;
extern T0* ge1046ov15927;
extern T0* ge1046ov15953;
extern T0* ge1046ov16227;
extern T0* ge1046ov16185;
extern T0* ge1046ov16183;
extern T0* ge1046ov16184;
extern T0* ge1046ov16179;
extern T0* ge1046ov16166;
extern T0* ge1046ov16167;
extern T0* ge1046ov16168;
extern T0* ge1046ov16171;
extern T0* ge1046ov16172;
extern T0* ge1046ov16173;
extern T0* ge1046ov16174;
extern T0* ge1046ov16175;
extern T0* ge1046ov16176;
extern T0* ge1046ov16177;
extern T0* ge1046ov16178;
extern T0* ge1046ov16180;
extern T0* ge1046ov16181;
extern T0* ge1046ov16182;
extern T0* ge1046ov16170;
extern T0* ge1046ov16169;
extern T0* ge1046ov16234;
extern T0* ge827ov3798;
extern T0* ge1046ov15966;
extern T0* ge1046ov15955;
extern T0* ge1046ov16250;
extern T0* ge1046ov16023;
extern T0* ge1046ov15999;
extern T0* ge1046ov15998;
extern T0* ge1046ov16238;
extern T0* ge1046ov15914;
extern T0* ge1046ov16000;
extern T0* ge1046ov16204;
extern T0* ge1046ov15959;
extern T0* ge1046ov16203;
extern T0* ge1046ov16219;
extern T0* ge1046ov16206;
extern T0* ge1046ov16061;
extern T0* ge1046ov16062;
extern T0* ge1046ov16220;
extern T0* ge1046ov15970;
extern T0* ge827ov3951;
extern T0* ge1046ov16067;
extern T0* ge1046ov15975;
extern T0* ge1046ov16058;
extern T0* ge1046ov15911;
extern T0* ge1046ov15917;
extern T0* ge1046ov16106;
extern T0* ge1046ov16010;
extern T0* ge1046ov15938;
extern T0* ge1046ov16188;
extern T0* ge1046ov16187;
extern T0* ge1046ov16162;
extern T0* ge1046ov16161;
extern T0* ge1046ov16160;
extern T0* ge1046ov16159;
extern T0* ge1046ov16158;
extern T0* ge1046ov16157;
extern T0* ge1046ov16156;
extern T0* ge1046ov16155;
extern T0* ge1046ov16154;
extern T0* ge1046ov16153;
extern T0* ge1046ov16152;
extern T0* ge1046ov16151;
extern T0* ge1046ov16150;
extern T0* ge1046ov16149;
extern T0* ge1046ov16148;
extern T0* ge1046ov16147;
extern T0* ge1046ov16146;
extern T0* ge1046ov16145;
extern T0* ge1046ov16144;
extern T0* ge1046ov16143;
extern T0* ge1046ov16142;
extern T0* ge1046ov16141;
extern T0* ge1046ov16140;
extern T0* ge1046ov16139;
extern T0* ge1046ov16137;
extern T0* ge1046ov16136;
extern T0* ge1046ov16135;
extern T0* ge1046ov16134;
extern T0* ge1046ov16133;
extern T0* ge1046ov16132;
extern T0* ge1046ov16063;
extern T0* ge1046ov16057;
extern T0* ge1046ov16002;
extern T0* ge1046ov16097;
extern T0* ge1046ov15986;
extern T0* ge1046ov15971;
extern T0* ge1046ov16236;
extern T0* ge1046ov16018;
extern T0* ge1046ov16243;
extern T0* ge1046ov16041;
extern T0* ge1046ov16038;
extern T0* ge1046ov16118;
extern T0* ge1046ov16126;
extern T0* ge1046ov16117;
extern T0* ge1046ov16125;
extern T0* ge1046ov16116;
extern T0* ge1046ov16124;
extern T0* ge1046ov16103;
extern T0* ge1046ov15919;
extern T0* ge1046ov16115;
extern T0* ge1046ov16123;
extern T0* ge1046ov16114;
extern T0* ge1046ov16122;
extern T0* ge1046ov16113;
extern T0* ge1046ov16121;
extern T0* ge1046ov16017;
extern T0* ge1046ov15988;
extern T0* ge1046ov15915;
extern T0* ge1046ov15924;
extern T0* ge1046ov15948;
extern T0* ge1046ov15946;
extern T0* ge1046ov15937;
extern T0* ge1046ov15936;
extern T0* ge1046ov15935;
extern T0* ge1046ov15934;
extern T0* ge1046ov15933;
extern T0* ge1046ov16037;
extern T0* ge1046ov15931;
extern T0* ge1046ov15949;
extern T0* ge1046ov15923;
extern T0* ge1046ov15921;
extern T0* ge1046ov15967;
extern T0* ge1046ov16005;
extern T0* ge1046ov16004;
extern T0* ge1046ov16164;
extern T0* ge1046ov16093;
extern T0* ge1046ov16128;
extern T0* ge1046ov16127;
extern T0* ge1046ov16120;
extern T0* ge1046ov16119;
extern T0* ge1046ov16112;
extern T0* ge1046ov16111;
extern T0* ge1046ov16108;
extern T0* ge1046ov16109;
extern T0* ge1046ov16102;
extern T0* ge1046ov16101;
extern T0* ge1046ov16100;
extern T0* ge1046ov16228;
extern T0* ge1046ov16098;
extern T0* ge1046ov16091;
extern T0* ge1046ov16090;
extern T0* ge1046ov16087;
extern T0* ge1046ov16085;
extern T0* ge1046ov16082;
extern T0* ge1046ov16081;
extern T0* ge1046ov16080;
extern T0* ge1046ov16079;
extern T0* ge1046ov16078;
extern T0* ge1046ov16077;
extern T0* ge1046ov16076;
extern T0* ge1046ov16075;
extern T0* ge1046ov16051;
extern T0* ge1046ov16052;
extern T0* ge1046ov16048;
extern T0* ge1046ov16050;
extern T0* ge1046ov16049;
extern T0* ge1046ov16047;
extern T0* ge1046ov16045;
extern T0* ge1046ov16046;
extern T0* ge1046ov16044;
extern T0* ge1046ov16043;
extern T0* ge1046ov16042;
extern T0* ge1046ov16040;
extern T0* ge1046ov16039;
extern T0* ge1046ov16036;
extern T0* ge1046ov16035;
extern T0* ge1046ov16034;
extern T0* ge1046ov16033;
extern T0* ge1046ov16032;
extern T0* ge1046ov16031;
extern T0* ge1046ov16030;
extern T0* ge1046ov16029;
extern T0* ge1046ov16021;
extern T0* ge1046ov16019;
extern T0* ge1046ov16016;
extern T0* ge1046ov16015;
extern T0* ge1046ov16014;
extern T0* ge1046ov16013;
extern T0* ge1046ov16012;
extern T0* ge1046ov16020;
extern T0* ge1046ov16095;
extern T0* ge1046ov16094;
extern T0* ge1046ov16092;
extern T0* ge1046ov15994;
extern T0* ge1046ov15993;
extern T0* ge1046ov15992;
extern T0* ge1046ov15991;
extern T0* ge1046ov15990;
extern T0* ge1046ov15989;
extern T0* ge1046ov15977;
extern T0* ge1046ov15976;
extern T0* ge1046ov15974;
extern T0* ge1046ov16096;
extern T0* ge1046ov16022;
extern T0* ge1046ov15982;
extern T0* ge1046ov15981;
extern T0* ge1046ov15985;
extern T0* ge1046ov15984;
extern T0* ge1046ov15983;
extern T0* ge1046ov15987;
extern T0* ge1046ov16053;
extern T0* ge1046ov15973;
extern T0* ge1046ov15972;
extern T0* ge1046ov16218;
extern T0* ge1046ov16064;
extern T0* ge1046ov16229;
extern T0* ge1046ov16222;
extern T0* ge1046ov16223;
extern T0* ge1046ov15908;
extern T0* ge1046ov16224;
extern T0* ge1046ov15961;
extern T0* ge1046ov15956;
extern T0* ge1046ov15979;
extern T0* ge827ov3602;
extern T0* ge827ov3626;
extern T0* ge827ov3668;
extern T0* ge1046ov15912;
extern T0* ge1046ov15913;
extern T0* ge827ov3637;
extern T0* ge1046ov16210;
extern T0* ge1046ov16059;
extern T0* ge1046ov16060;
extern T0* ge1046ov16110;
extern T0* ge1046ov16086;
extern T0* ge1046ov16089;
extern T0* ge1046ov16088;
extern T0* ge1046ov15920;
extern T0* ge1046ov16237;
extern T0* ge1046ov16245;
extern T0* ge1046ov15968;
extern T0* ge1046ov16246;
extern T0* ge1046ov16226;
extern T0* ge1046ov16244;
extern T0* ge1046ov15944;
extern T0* ge1046ov15943;
extern T0* ge1046ov15942;
extern T0* ge1046ov15941;
extern T0* ge1046ov15932;
extern T0* ge1046ov15930;
extern T0* ge1046ov15929;
extern T0* ge1046ov15925;
extern T0* ge827ov3598;
extern T0* ge1046ov15947;
extern T0* ge827ov3627;
extern T0* ge1046ov15940;
extern T0* ge827ov3617;
extern T0* ge1046ov15928;
extern T0* ge827ov3605;
extern T0* ge1046ov15957;
extern T0* ge827ov3640;
extern T0* ge1046ov15922;
extern T0* ge827ov3593;
extern T0* ge827ov3614;
extern T0* ge827ov3613;
extern T0* ge827ov3597;
extern T0* ge827ov3635;
extern T0* ge827ov3589;
extern T0* ge827ov3591;
extern T0* ge827ov3639;
extern T0* ge827ov3638;
extern T0* ge827ov3631;
extern T0* ge827ov3630;
extern T0* ge827ov3625;
extern T0* ge827ov3624;
extern T0* ge827ov3629;
extern T0* ge827ov3628;
extern T0* ge827ov3621;
extern T0* ge827ov3620;
extern T0* ge827ov3619;
extern T0* ge827ov3618;
extern T0* ge827ov3609;
extern T0* ge827ov3608;
extern T0* ge827ov3607;
extern T0* ge827ov3606;
extern T0* ge827ov3595;
extern T0* ge827ov3594;
extern T0* ge827ov3592;
extern T0* ge827ov3966;
extern T0* ge827ov3641;
extern T0* ge1045ov8439;
extern T0* ge1045ov8162;
extern T0* ge1045ov7991;
extern T0* ge1043ov7442;
extern T0* ge1043ov7436;
extern T0* ge1043ov7430;
extern T0* ge1043ov7438;
extern T0* ge1043ov7432;
extern T0* ge1043ov7426;
extern T0* ge1043ov7441;
extern T0* ge1043ov7435;
extern T0* ge1043ov7429;
extern T0* ge1043ov7443;
extern T0* ge1043ov7437;
extern T0* ge1043ov7431;
extern T0* ge827ov3697;
extern T0* ge1043ov7440;
extern T0* ge1043ov7434;
extern T0* ge1043ov7428;
extern T0* ge827ov3890;
extern T0* ge827ov3836;
extern T0* ge827ov3800;
extern T0* ge827ov3746;
extern T0* ge1045ov8462;
extern T0* ge1045ov8181;
extern T0* ge1045ov8014;
extern T0* ge1045ov8460;
extern T0* ge1045ov8179;
extern T0* ge1045ov8012;
extern T0* ge827ov3920;
extern T0* ge827ov3880;
extern T0* ge827ov3685;
extern T0* ge827ov3931;
extern T0* ge827ov3844;
extern T0* ge827ov3946;
extern T0* ge827ov3803;
extern T0* ge827ov3644;
extern T0* ge827ov3669;
extern T0* ge1045ov8459;
extern T0* ge1045ov8178;
extern T0* ge1045ov8011;
extern T0* ge1045ov8457;
extern T0* ge1045ov8176;
extern T0* ge1045ov8009;
extern T0* ge1045ov8458;
extern T0* ge1045ov8177;
extern T0* ge1045ov8010;
extern T0* ge827ov3692;
extern T0* ge1043ov7439;
extern T0* ge1043ov7433;
extern T0* ge1043ov7427;
extern T0* ge827ov3972;
extern T0* ge1057ov23611;
extern T0* ge827ov4096;
extern T0* ge827ov4080;
extern T0* ge827ov3632;
extern T0* ge827ov3633;
extern T0* ge827ov4093;
extern T0* ge827ov4094;
extern T0* ge827ov4087;
extern T0* ge827ov4090;
extern T0* ge827ov4082;
extern T0* ge827ov4085;
extern T0* ge827ov4081;
extern T0* ge827ov4095;
extern T0* ge827ov4078;
extern T0* ge827ov4079;
extern T0* ge827ov3994;
extern T0* ge827ov3973;
extern T0* ge827ov3636;
extern T0* ge827ov3990;
extern T0* ge827ov3634;
extern T0* ge827ov3622;
extern T0* ge827ov3611;
extern T0* ge827ov3604;
extern T0* ge827ov3600;
extern T0* ge827ov3599;
extern T0* ge827ov4014;
extern T0* ge1139ov12458;
extern T0* ge1136ov22658;
extern T0* ge1136ov22570;
extern T0* ge1136ov22708;
extern T0* ge1136ov22620;
extern T0* ge1139ov12466;
extern T0* ge1139ov12437;
extern T0* ge1139ov12438;
extern T0* ge1139ov12460;
extern T0* ge1128ov12898;
extern T0* ge1128ov12899;
extern T0* ge1128ov12900;
extern T0* ge1136ov22707;
extern T0* ge1136ov22619;
extern T0* ge1139ov12462;
extern T0* ge1139ov12445;
extern T0* ge1139ov12459;
extern T0* ge1139ov12440;
extern T0* ge1136ov22701;
extern T0* ge1136ov22613;
extern T0* ge1136ov22700;
extern T0* ge1136ov22612;
extern T0* ge1136ov22709;
extern T0* ge1136ov22621;
extern T0* ge1139ov12422;
extern T0* ge1139ov12450;
extern T0* ge1139ov12439;
extern T0* ge1139ov12419;
extern T0* ge1139ov12435;
extern T0* ge1139ov12431;
extern T0* ge1139ov12432;
extern T0* ge1139ov12433;
extern T0* ge1139ov12456;
extern T0* ge1139ov12464;
extern T0* ge1139ov12457;
extern T0* ge1139ov12449;
extern T0* ge1139ov12463;
extern T0* ge1136ov22745;
extern T0* ge1136ov22657;
extern T0* ge1136ov22744;
extern T0* ge1136ov22656;
extern T0* ge1136ov22743;
extern T0* ge1136ov22655;
extern T0* ge1136ov22742;
extern T0* ge1136ov22654;
extern T0* ge1136ov22705;
extern T0* ge1136ov22617;
extern T0* ge1136ov22704;
extern T0* ge1136ov22616;
extern T0* ge1136ov22703;
extern T0* ge1136ov22615;
extern T0* ge1136ov22702;
extern T0* ge1136ov22614;
extern T0* ge1139ov12418;
extern T0* ge1139ov12421;
extern T0* ge1139ov12434;
extern T0* ge1136ov22713;
extern T0* ge1136ov22625;
extern T0* ge1136ov22712;
extern T0* ge1136ov22624;
extern T0* ge1136ov22711;
extern T0* ge1136ov22623;
extern T0* ge1136ov22710;
extern T0* ge1136ov22622;
extern T0* ge1142ov12417;
extern T0* ge1142ov12416;
extern T0* ge1139ov12447;
extern T0* ge1139ov12425;
extern T0* ge1139ov12451;
extern T0* ge1139ov12420;
extern T0* ge1139ov12444;
extern T0* ge1139ov12424;
extern T0* ge1139ov12427;
extern T0* ge1139ov12428;
extern T0* ge1139ov12426;
extern T0* ge1139ov12465;
extern T0* ge1139ov12441;
extern T0* ge1139ov12442;
extern T0* ge1139ov12461;
extern T0* ge1139ov12423;
extern T0* ge1139ov12443;
extern T0* ge1136ov22694;
extern T0* ge1136ov22606;
extern T0* ge1136ov22693;
extern T0* ge1136ov22605;
extern T0* ge1136ov22692;
extern T0* ge1136ov22604;
extern T0* ge1136ov22691;
extern T0* ge1136ov22603;
extern T0* ge1136ov22690;
extern T0* ge1136ov22602;
extern T0* ge1139ov12430;
extern T0* ge1136ov22676;
extern T0* ge1136ov22588;
extern T0* ge1136ov22677;
extern T0* ge1136ov22589;
extern T0* ge1136ov22675;
extern T0* ge1136ov22587;
extern T0* ge1136ov22674;
extern T0* ge1136ov22586;
extern T0* ge1136ov22673;
extern T0* ge1136ov22585;
extern T0* ge1136ov22672;
extern T0* ge1136ov22584;
extern T0* ge1136ov22681;
extern T0* ge1136ov22593;
extern T0* ge1136ov22680;
extern T0* ge1136ov22592;
extern T0* ge1136ov22679;
extern T0* ge1136ov22591;
extern T0* ge1136ov22678;
extern T0* ge1136ov22590;
extern T0* ge1136ov22741;
extern T0* ge1136ov22653;
extern T0* ge1136ov22740;
extern T0* ge1136ov22652;
extern T0* ge1136ov22739;
extern T0* ge1136ov22651;
extern T0* ge1136ov22738;
extern T0* ge1136ov22650;
extern T0* ge1136ov22683;
extern T0* ge1136ov22595;
extern T0* ge1136ov22682;
extern T0* ge1136ov22594;
extern T0* ge1136ov22665;
extern T0* ge1136ov22577;
extern T0* ge1136ov22666;
extern T0* ge1136ov22578;
extern T0* ge1136ov22664;
extern T0* ge1136ov22576;
extern T0* ge1136ov22663;
extern T0* ge1136ov22575;
extern T0* ge1136ov22686;
extern T0* ge1136ov22598;
extern T0* ge1136ov22687;
extern T0* ge1136ov22599;
extern T0* ge1136ov22685;
extern T0* ge1136ov22597;
extern T0* ge1136ov22684;
extern T0* ge1136ov22596;
extern T0* ge1136ov22724;
extern T0* ge1136ov22636;
extern T0* ge1136ov22723;
extern T0* ge1136ov22635;
extern T0* ge1136ov22722;
extern T0* ge1136ov22634;
extern T0* ge1136ov22721;
extern T0* ge1136ov22633;
extern T0* ge1136ov22720;
extern T0* ge1136ov22632;
extern T0* ge1136ov22719;
extern T0* ge1136ov22631;
extern T0* ge1139ov12429;
extern T0* ge1139ov12436;
extern T0* ge1139ov12453;
extern T0* ge1139ov12452;
extern T0* ge1139ov12455;
extern T0* ge1139ov12448;
extern T0* ge1139ov12446;
extern T0* ge1136ov22729;
extern T0* ge1136ov22641;
extern T0* ge1136ov22728;
extern T0* ge1136ov22640;
extern T0* ge1136ov22727;
extern T0* ge1136ov22639;
extern T0* ge1136ov22726;
extern T0* ge1136ov22638;
extern T0* ge1136ov22725;
extern T0* ge1136ov22637;
extern T0* ge1136ov22733;
extern T0* ge1136ov22645;
extern T0* ge1136ov22737;
extern T0* ge1136ov22649;
extern T0* ge1136ov22736;
extern T0* ge1136ov22648;
extern T0* ge1136ov22735;
extern T0* ge1136ov22647;
extern T0* ge1136ov22734;
extern T0* ge1136ov22646;
extern T0* ge1136ov22732;
extern T0* ge1136ov22644;
extern T0* ge1136ov22662;
extern T0* ge1136ov22574;
extern T0* ge1136ov22661;
extern T0* ge1136ov22573;
extern T0* ge1136ov22660;
extern T0* ge1136ov22572;
extern T0* ge1136ov22659;
extern T0* ge1136ov22571;
extern T0* ge1139ov12454;
extern T0* ge1136ov22731;
extern T0* ge1136ov22643;
extern T0* ge1136ov22718;
extern T0* ge1136ov22630;
extern T0* ge1136ov22717;
extern T0* ge1136ov22629;
extern T0* ge1136ov22715;
extern T0* ge1136ov22627;
extern T0* ge1136ov22716;
extern T0* ge1136ov22628;
extern T0* ge1136ov22714;
extern T0* ge1136ov22626;
extern T0* ge1136ov22730;
extern T0* ge1136ov22642;
extern T0* ge1136ov22671;
extern T0* ge1136ov22583;
extern T0* ge1136ov22670;
extern T0* ge1136ov22582;
extern T0* ge1136ov22668;
extern T0* ge1136ov22580;
extern T0* ge1136ov22669;
extern T0* ge1136ov22581;
extern T0* ge1136ov22667;
extern T0* ge1136ov22579;
extern T0* ge1136ov22689;
extern T0* ge1136ov22601;
extern T0* ge1136ov22688;
extern T0* ge1136ov22600;
extern T0* ge1136ov22698;
extern T0* ge1136ov22610;
extern T0* ge1136ov22697;
extern T0* ge1136ov22609;
extern T0* ge1136ov22699;
extern T0* ge1136ov22611;
extern T0* ge1136ov22706;
extern T0* ge1136ov22618;
extern T0* ge1128ov12904;
extern T0* ge1128ov12903;
extern T0* ge1136ov22696;
extern T0* ge1136ov22608;
extern T0* ge1136ov22695;
extern T0* ge1136ov22607;
extern T0* ge1318ov21895;
extern T0* ge1318ov21857;
extern T0* ge1318ov21855;
extern T0* ge1318ov21896;
extern T0* ge1318ov21868;
extern T0* ge1318ov21867;
extern T0* ge1318ov21878;
extern T0* ge1318ov21872;
extern T0* ge1318ov21871;
extern T0* ge1318ov21870;
extern T0* ge1318ov21876;
extern T0* ge1318ov21875;
extern T0* ge1318ov21877;
extern T0* ge1318ov21854;
extern T0* ge1318ov21880;
extern T0* ge1318ov21889;
extern T0* ge1321ov21718;
extern T0* ge1321ov21716;
extern T0* ge1321ov21717;
extern T0* ge1318ov21890;
extern T0* ge1318ov21891;
extern T0* ge1318ov21894;
extern T0* ge1318ov21892;
extern T0* ge1318ov21893;
extern T0* ge1318ov21887;
extern T0* ge1314ov22294;
extern T0* ge1314ov22295;
extern T0* ge1318ov21860;
extern T0* ge1318ov21883;
extern T0* ge1311ov11891;
extern T0* ge1311ov11890;
extern T0* ge1318ov21903;
extern T0* ge1318ov21904;
extern T0* ge1318ov21905;
extern T0* ge1318ov21898;
extern T0* ge1318ov21881;
extern T0* ge1318ov21882;
extern T0* ge1318ov21884;
extern T0* ge1318ov21888;
extern T0* ge1267ov20954;
extern T0* ge1157ov10632;
extern T0* ge1157ov10633;
extern T0* ge1157ov10634;
extern T0* ge1157ov10635;
extern T0* ge1157ov10636;
extern T0* ge1157ov10637;
extern T0* ge1157ov10638;
extern T0* ge1157ov10639;
extern T0* ge1157ov10640;
extern T0* ge1157ov10641;
extern T0* ge1157ov10642;
extern T0* ge1157ov10643;
extern T0* ge1157ov10644;
extern T0* ge1157ov10645;
extern T0* ge1157ov10646;
extern T0* ge1157ov10647;
extern T0* ge1157ov10648;
extern T0* ge1157ov10649;
extern T0* ge1157ov10650;
extern T0* ge1157ov10651;
extern T0* ge1157ov10652;
extern T0* ge1157ov10653;
extern T0* ge1157ov10654;
extern T0* ge1157ov10655;
extern T0* ge1157ov10656;
extern T0* ge1157ov10657;
extern T0* ge1157ov10658;
extern T0* ge1157ov10659;
extern T0* ge1157ov10660;
extern T0* ge1157ov10661;
extern T0* ge1157ov10662;
extern T0* ge1157ov10663;
extern T0* ge1157ov10664;
extern T0* ge1157ov10665;
extern T0* ge1157ov10666;
extern T0* ge1157ov10667;
extern T0* ge1157ov10668;
extern T0* ge1157ov10669;
extern T0* ge1157ov10670;
extern T0* ge1157ov10671;
extern T0* ge1157ov10672;
extern T0* ge1157ov10673;
extern T0* ge1157ov10674;
extern T0* ge1157ov10675;
extern T0* ge1157ov10676;
extern T0* ge1157ov10677;
extern T0* ge1157ov10678;
extern T0* ge1157ov10679;
extern T0* ge1157ov10680;
extern T0* ge1157ov10681;
extern T0* ge1157ov10682;
extern T0* ge1157ov10683;
extern T0* ge1157ov10684;
extern T0* ge1157ov10685;
extern T0* ge1157ov10686;
extern T0* ge1157ov10687;
extern T0* ge1157ov10688;
extern T0* ge1157ov10689;
extern T0* ge1157ov10690;
extern T0* ge1157ov10691;
extern T0* ge1157ov10692;
extern T0* ge1157ov10693;
extern T0* ge1157ov10694;
extern T0* ge1157ov10695;
extern T0* ge1157ov10696;
extern T0* ge1157ov10697;
extern T0* ge1157ov10698;
extern T0* ge1157ov10699;
extern T0* ge1157ov10700;
extern T0* ge1157ov10701;
extern T0* ge1157ov10702;
extern T0* ge1157ov10703;
extern T0* ge1157ov10704;
extern T0* ge1157ov10705;
extern T0* ge1157ov10706;
extern T0* ge1157ov10707;
extern T0* ge1157ov10708;
extern T0* ge1157ov10709;
extern T0* ge1157ov10710;
extern T0* ge1157ov10711;
extern T0* ge1157ov10712;
extern T0* ge1157ov10713;
extern T0* ge1157ov10714;
extern T0* ge1157ov10715;
extern T0* ge1157ov10716;
extern T0* ge1157ov10717;
extern T0* ge1157ov10718;
extern T0* ge1157ov10719;
extern T0* ge1157ov10720;
extern T0* ge1157ov10721;
extern T0* ge1157ov10722;
extern T0* ge1157ov10723;
extern T0* ge1157ov10724;
extern T0* ge1157ov10725;
extern T0* ge1157ov10726;
extern T0* ge1157ov10727;
extern T0* ge1157ov10828;
extern T0* ge1157ov10840;
extern T0* ge1188ov10599;
extern T0* ge1157ov10851;
extern T0* ge1157ov10836;
extern T0* ge1157ov10841;
extern T0* ge1157ov10842;
extern T0* ge1157ov10843;
extern T0* ge1157ov10829;
extern T0* ge1157ov10847;
extern T0* ge1157ov10854;
extern T0* ge1157ov10834;
extern T0* ge1157ov10825;
extern T0* ge1157ov10850;
extern T0* ge1157ov10832;
extern T0* ge1157ov10837;
extern T0* ge1157ov10835;
extern T0* ge1157ov10831;
extern T0* ge1157ov10846;
extern T0* ge1157ov10848;
extern T0* ge1157ov10856;
extern T0* ge1157ov10853;
extern T0* ge1157ov10845;
extern T0* ge1157ov10827;
extern T0* ge1157ov10852;
extern T0* ge1157ov10826;
extern T0* ge1157ov10833;
extern T0* ge1157ov10849;
extern T0* ge1157ov10844;
extern T0* ge1157ov10838;
extern T0* ge1157ov10830;
extern T0* ge1157ov10858;
extern T0* ge1157ov10839;
extern T0* ge1157ov10855;
extern T0* ge1188ov10598;
extern T0* ge1188ov10597;
extern T0* ge1147ov11251;
extern T0* ge1153ov11176;
extern T0* ge1354ov12297;
extern T0* ge9ov10524;
extern T0* ge9ov10531;
extern T0* ge16ov10144;
extern T0* ge295ov2856;
extern T0* ge6ov10164;
extern T0* ge9ov10527;
extern T0* ge9ov10534;
extern T0* ge9ov10525;
extern T0* ge9ov10532;
extern T0* ge9ov10526;
extern T0* ge9ov10533;
extern T0* ge9ov10528;
extern T0* ge9ov10535;
extern T0* ge9ov10529;
extern T0* ge9ov10536;
extern T0* ge6ov10159;
extern T0* ge6ov10158;
extern T0* ge6ov10166;
extern T0* ge6ov10165;
extern T0* ge1196ov3068;
extern T0* ge1196ov3066;
extern T0* ge1325ov31547;
extern T0* ge1325ov31548;
extern T0* ge1316ov31703;
extern T0* ge1316ov31705;
extern T0* ge1036ov7406;
extern T0* ge1036ov7404;
extern T0* ge1036ov7402;
extern T0* ge827ov3616;
extern T0* ge66ov38068;
extern T0* ge1035ov7223;
extern T0* ge1035ov7218;
extern T0* ge1035ov7213;
extern T0* ge1035ov7224;
extern T0* ge1035ov7219;
extern T0* ge1035ov7214;
extern T0* ge1042ov37302;
extern T0* ge1042ov37301;
extern T0* ge827ov4077;
extern T0* ge827ov4083;
extern T0* ge827ov4084;
extern T0* ge827ov4086;
extern T0* ge827ov4088;
extern T0* ge827ov4089;
extern T0* ge827ov4091;
extern T0* ge827ov4092;
extern T0* ge827ov4139;
extern T0* ge827ov4140;
extern T0* ge827ov4141;
extern T0* ge827ov3590;
extern T0* ge827ov3596;
extern T0* ge827ov3601;
extern T0* ge827ov3603;
extern T0* ge827ov3610;
extern T0* ge827ov3612;
extern T0* ge827ov3615;
extern T0* ge827ov3623;
extern T0* ge827ov3642;
extern T0* ge827ov3643;
extern T0* ge827ov3645;
extern T0* ge827ov3646;
extern T0* ge827ov3647;
extern T0* ge827ov3648;
extern T0* ge827ov3649;
extern T0* ge827ov3650;
extern T0* ge827ov3651;
extern T0* ge827ov3652;
extern T0* ge827ov3653;
extern T0* ge827ov3654;
extern T0* ge827ov3655;
extern T0* ge827ov3656;
extern T0* ge827ov3657;
extern T0* ge827ov3658;
extern T0* ge827ov3659;
extern T0* ge827ov3660;
extern T0* ge827ov3661;
extern T0* ge827ov3662;
extern T0* ge827ov3663;
extern T0* ge827ov3664;
extern T0* ge827ov3665;
extern T0* ge827ov3666;
extern T0* ge827ov3667;
extern T0* ge827ov3670;
extern T0* ge827ov3671;
extern T0* ge827ov3672;
extern T0* ge827ov3673;
extern T0* ge827ov3674;
extern T0* ge827ov3675;
extern T0* ge827ov3676;
extern T0* ge827ov3677;
extern T0* ge827ov3678;
extern T0* ge827ov3679;
extern T0* ge827ov3680;
extern T0* ge827ov3681;
extern T0* ge827ov3682;
extern T0* ge827ov3683;
extern T0* ge827ov3684;
extern T0* ge827ov3686;
extern T0* ge827ov3687;
extern T0* ge827ov3688;
extern T0* ge827ov3689;
extern T0* ge827ov3690;
extern T0* ge827ov3691;
extern T0* ge827ov3693;
extern T0* ge827ov3694;
extern T0* ge827ov3695;
extern T0* ge827ov3696;
extern T0* ge827ov3698;
extern T0* ge827ov3699;
extern T0* ge827ov3700;
extern T0* ge827ov3701;
extern T0* ge827ov3702;
extern T0* ge827ov3703;
extern T0* ge827ov3704;
extern T0* ge827ov3705;
extern T0* ge827ov3706;
extern T0* ge827ov3707;
extern T0* ge827ov3708;
extern T0* ge827ov3709;
extern T0* ge827ov3710;
extern T0* ge827ov3711;
extern T0* ge827ov3712;
extern T0* ge827ov3713;
extern T0* ge827ov3714;
extern T0* ge827ov3715;
extern T0* ge827ov3716;
extern T0* ge827ov3717;
extern T0* ge827ov3718;
extern T0* ge827ov3719;
extern T0* ge827ov3720;
extern T0* ge827ov3721;
extern T0* ge827ov3722;
extern T0* ge827ov3723;
extern T0* ge827ov3724;
extern T0* ge827ov3725;
extern T0* ge827ov3726;
extern T0* ge827ov3727;
extern T0* ge827ov3728;
extern T0* ge827ov3729;
extern T0* ge827ov3730;
extern T0* ge827ov3731;
extern T0* ge827ov3732;
extern T0* ge827ov3733;
extern T0* ge827ov3734;
extern T0* ge827ov3735;
extern T0* ge827ov3736;
extern T0* ge827ov3737;
extern T0* ge827ov3738;
extern T0* ge827ov3739;
extern T0* ge827ov3740;
extern T0* ge827ov3741;
extern T0* ge827ov3742;
extern T0* ge827ov3743;
extern T0* ge827ov3744;
extern T0* ge827ov3745;
extern T0* ge827ov3747;
extern T0* ge827ov3748;
extern T0* ge827ov3749;
extern T0* ge827ov3750;
extern T0* ge827ov3751;
extern T0* ge827ov3752;
extern T0* ge827ov3753;
extern T0* ge827ov3754;
extern T0* ge827ov3755;
extern T0* ge827ov3756;
extern T0* ge827ov3757;
extern T0* ge827ov3758;
extern T0* ge827ov3759;
extern T0* ge827ov3760;
extern T0* ge827ov3761;
extern T0* ge827ov3762;
extern T0* ge827ov3763;
extern T0* ge827ov3764;
extern T0* ge827ov3765;
extern T0* ge827ov3766;
extern T0* ge827ov3767;
extern T0* ge827ov3768;
extern T0* ge827ov3769;
extern T0* ge827ov3770;
extern T0* ge827ov3771;
extern T0* ge827ov3772;
extern T0* ge827ov3773;
extern T0* ge827ov3774;
extern T0* ge827ov3775;
extern T0* ge827ov3776;
extern T0* ge827ov3777;
extern T0* ge827ov3778;
extern T0* ge827ov3779;
extern T0* ge827ov3780;
extern T0* ge827ov3781;
extern T0* ge827ov3782;
extern T0* ge827ov3783;
extern T0* ge827ov3784;
extern T0* ge827ov3785;
extern T0* ge827ov3786;
extern T0* ge827ov3787;
extern T0* ge827ov3788;
extern T0* ge827ov3789;
extern T0* ge827ov3790;
extern T0* ge827ov3791;
extern T0* ge827ov3792;
extern T0* ge827ov3793;
extern T0* ge827ov3794;
extern T0* ge827ov3795;
extern T0* ge827ov3796;
extern T0* ge827ov3797;
extern T0* ge827ov3799;
extern T0* ge827ov3801;
extern T0* ge827ov3802;
extern T0* ge827ov3804;
extern T0* ge827ov3805;
extern T0* ge827ov3806;
extern T0* ge827ov3807;
extern T0* ge827ov3808;
extern T0* ge827ov3809;
extern T0* ge827ov3810;
extern T0* ge827ov3811;
extern T0* ge827ov3812;
extern T0* ge827ov3813;
extern T0* ge827ov3814;
extern T0* ge827ov3815;
extern T0* ge827ov3816;
extern T0* ge827ov3817;
extern T0* ge827ov3818;
extern T0* ge827ov3819;
extern T0* ge827ov3820;
extern T0* ge827ov3821;
extern T0* ge827ov3822;
extern T0* ge827ov3823;
extern T0* ge827ov3824;
extern T0* ge827ov3825;
extern T0* ge827ov3826;
extern T0* ge827ov3827;
extern T0* ge827ov3828;
extern T0* ge827ov3829;
extern T0* ge827ov3830;
extern T0* ge827ov3831;
extern T0* ge827ov3832;
extern T0* ge827ov3833;
extern T0* ge827ov3834;
extern T0* ge827ov3835;
extern T0* ge827ov3837;
extern T0* ge827ov3838;
extern T0* ge827ov3839;
extern T0* ge827ov3840;
extern T0* ge827ov3841;
extern T0* ge827ov3842;
extern T0* ge827ov3843;
extern T0* ge827ov3845;
extern T0* ge827ov3846;
extern T0* ge827ov3847;
extern T0* ge827ov3848;
extern T0* ge827ov3849;
extern T0* ge827ov3850;
extern T0* ge827ov3851;
extern T0* ge827ov3852;
extern T0* ge827ov3853;
extern T0* ge827ov3854;
extern T0* ge827ov3855;
extern T0* ge827ov3856;
extern T0* ge827ov3857;
extern T0* ge827ov3858;
extern T0* ge827ov3859;
extern T0* ge827ov3860;
extern T0* ge827ov3861;
extern T0* ge827ov3862;
extern T0* ge827ov3863;
extern T0* ge827ov3864;
extern T0* ge827ov3865;
extern T0* ge827ov3866;
extern T0* ge827ov3867;
extern T0* ge827ov3868;
extern T0* ge827ov3869;
extern T0* ge827ov3870;
extern T0* ge827ov3871;
extern T0* ge827ov3872;
extern T0* ge827ov3873;
extern T0* ge827ov3874;
extern T0* ge827ov3875;
extern T0* ge827ov3876;
extern T0* ge827ov3877;
extern T0* ge827ov3878;
extern T0* ge827ov3879;
extern T0* ge827ov3881;
extern T0* ge827ov3882;
extern T0* ge827ov3883;
extern T0* ge827ov3884;
extern T0* ge827ov3885;
extern T0* ge827ov3886;
extern T0* ge827ov3887;
extern T0* ge827ov3888;
extern T0* ge827ov3889;
extern T0* ge827ov3891;
extern T0* ge827ov3892;
extern T0* ge827ov3893;
extern T0* ge827ov3894;
extern T0* ge827ov3895;
extern T0* ge827ov3896;
extern T0* ge827ov3897;
extern T0* ge827ov3898;
extern T0* ge827ov3899;
extern T0* ge827ov3900;
extern T0* ge827ov3901;
extern T0* ge827ov3902;
extern T0* ge827ov3903;
extern T0* ge827ov3904;
extern T0* ge827ov3905;
extern T0* ge827ov3906;
extern T0* ge827ov3907;
extern T0* ge827ov3908;
extern T0* ge827ov3909;
extern T0* ge827ov3910;
extern T0* ge827ov3911;
extern T0* ge827ov3912;
extern T0* ge827ov3913;
extern T0* ge827ov3914;
extern T0* ge827ov3915;
extern T0* ge827ov3916;
extern T0* ge827ov3917;
extern T0* ge827ov3918;
extern T0* ge827ov3919;
extern T0* ge827ov3921;
extern T0* ge827ov3922;
extern T0* ge827ov3923;
extern T0* ge827ov3924;
extern T0* ge827ov3925;
extern T0* ge827ov3926;
extern T0* ge827ov3927;
extern T0* ge827ov3928;
extern T0* ge827ov3929;
extern T0* ge827ov3930;
extern T0* ge827ov3932;
extern T0* ge827ov3933;
extern T0* ge827ov3934;
extern T0* ge827ov3935;
extern T0* ge827ov3936;
extern T0* ge827ov3937;
extern T0* ge827ov3938;
extern T0* ge827ov3939;
extern T0* ge827ov3940;
extern T0* ge827ov3941;
extern T0* ge827ov3942;
extern T0* ge827ov3943;
extern T0* ge827ov3944;
extern T0* ge827ov3945;
extern T0* ge827ov3947;
extern T0* ge827ov3949;
extern T0* ge827ov3950;
extern T0* ge827ov3952;
extern T0* ge827ov3953;
extern T0* ge827ov3954;
extern T0* ge827ov3955;
extern T0* ge827ov3956;
extern T0* ge827ov3957;
extern T0* ge827ov3958;
extern T0* ge827ov3959;
extern T0* ge827ov3961;
extern T0* ge827ov3962;
extern T0* ge827ov3963;
extern T0* ge827ov3964;
extern T0* ge827ov3965;
extern T0* ge827ov3967;
extern T0* ge827ov3969;
extern T0* ge827ov3970;
extern T0* ge827ov3971;
extern T0* ge827ov3974;
extern T0* ge827ov3975;
extern T0* ge827ov3976;
extern T0* ge827ov3978;
extern T0* ge827ov3979;
extern T0* ge827ov3980;
extern T0* ge827ov3981;
extern T0* ge827ov3982;
extern T0* ge827ov3983;
extern T0* ge827ov3984;
extern T0* ge827ov3985;
extern T0* ge827ov3986;
extern T0* ge827ov3987;
extern T0* ge827ov3988;
extern T0* ge827ov3989;
extern T0* ge827ov3991;
extern T0* ge827ov3992;
extern T0* ge827ov3993;
extern T0* ge827ov3995;
extern T0* ge827ov3996;
extern T0* ge827ov3997;
extern T0* ge827ov3998;
extern T0* ge827ov3999;
extern T0* ge827ov4000;
extern T0* ge827ov4001;
extern T0* ge827ov4002;
extern T0* ge827ov4004;
extern T0* ge827ov4005;
extern T0* ge827ov4006;
extern T0* ge827ov4007;
extern T0* ge827ov4008;
extern T0* ge827ov4009;
extern T0* ge827ov4010;
extern T0* ge827ov4011;
extern T0* ge827ov4012;
extern T0* ge827ov4013;
extern T0* ge827ov4015;
extern T0* ge827ov4016;
extern T0* ge827ov4017;
extern T0* ge827ov4018;
extern T0* ge827ov4019;
extern T0* ge827ov4020;
extern T0* ge827ov4021;
extern T0* ge827ov4022;
extern T0* ge827ov4023;
extern T0* ge827ov4024;
extern T0* ge827ov4025;
extern T0* ge827ov4039;
extern T0* ge827ov4040;
extern T0* ge827ov4041;
extern T0* ge827ov4042;
extern T0* ge827ov4043;
extern T0* ge827ov4045;
extern T0* ge827ov4046;
extern T0* ge827ov4047;
extern T0* ge827ov4048;
extern T0* ge827ov4049;
extern T0* ge827ov4050;
extern T0* ge827ov4051;
extern T0* ge827ov4052;
extern T0* ge827ov4053;
extern T0* ge827ov4054;
extern T0* ge827ov4055;
extern T0* ge827ov4056;
extern T0* ge827ov4057;
extern T0* ge827ov4058;
extern T0* ge827ov4059;
extern T0* ge827ov4060;
extern T0* ge827ov4061;
extern T0* ge827ov4062;
extern T0* ge827ov4063;
extern T0* ge827ov4066;
extern T0* ge827ov4067;
extern T0* ge827ov4068;
extern T0* ge827ov4069;
extern T0* ge827ov4070;
extern T0* ge827ov4071;
extern T0* ge827ov4072;
extern T0* ge827ov4073;
extern T0* ge827ov4074;
extern T0* ge827ov4075;
extern T0* ge228ov13656;
extern T0* ge1057ov23639;
extern T0* ge925ov9509;
extern T0* ge918ov8708;
extern T0* ge914ov14882;
extern T0* ge1045ov8408;
extern T0* ge1045ov8147;
extern T0* ge1045ov7960;
extern T0* ge1045ov8409;
extern T0* ge1045ov7961;
extern T0* ge1045ov8315;
extern T0* ge1045ov8096;
extern T0* ge1045ov7867;
extern T0* ge1045ov8229;
extern T0* ge1045ov8058;
extern T0* ge1045ov7781;
extern T0* ge1045ov8230;
extern T0* ge1045ov7782;
extern T0* ge1045ov8213;
extern T0* ge1045ov8051;
extern T0* ge1045ov7765;
extern T0* ge1045ov8212;
extern T0* ge1045ov7764;
extern T0* ge1045ov8214;
extern T0* ge1045ov7766;
extern T0* ge1045ov8238;
extern T0* ge1045ov8062;
extern T0* ge1045ov7790;
extern T0* ge1045ov8227;
extern T0* ge1045ov7779;
extern T0* ge1045ov8228;
extern T0* ge1045ov7780;
extern T0* ge1045ov8345;
extern T0* ge1045ov8113;
extern T0* ge1045ov7897;
extern T0* ge1045ov8344;
extern T0* ge1045ov7896;
extern T0* ge1045ov8346;
extern T0* ge1045ov8114;
extern T0* ge1045ov7898;
extern T0* ge1045ov8242;
extern T0* ge1045ov8064;
extern T0* ge1045ov7794;
extern T0* ge1045ov8248;
extern T0* ge1045ov8068;
extern T0* ge1045ov7800;
extern T0* ge1045ov8337;
extern T0* ge1045ov8109;
extern T0* ge1045ov7889;
extern T0* ge1045ov8320;
extern T0* ge1045ov8099;
extern T0* ge1045ov7872;
extern T0* ge1045ov8347;
extern T0* ge1045ov8115;
extern T0* ge1045ov7899;
extern T0* ge1045ov8245;
extern T0* ge1045ov8066;
extern T0* ge1045ov7797;
extern T0* ge1045ov8252;
extern T0* ge1045ov8071;
extern T0* ge1045ov7804;
extern T0* ge1045ov8338;
extern T0* ge1045ov8110;
extern T0* ge1045ov7890;
extern T0* ge1045ov8336;
extern T0* ge1045ov8108;
extern T0* ge1045ov7888;
extern T0* ge1045ov8321;
extern T0* ge1045ov8100;
extern T0* ge1045ov7873;
extern T0* ge1045ov8339;
extern T0* ge1045ov8111;
extern T0* ge1045ov7891;
extern T0* ge1045ov8461;
extern T0* ge1045ov8180;
extern T0* ge1045ov8013;
extern T0* ge1045ov8311;
extern T0* ge1045ov8095;
extern T0* ge1045ov7863;
extern T0* ge1045ov8312;
extern T0* ge1045ov7864;
extern T0* ge1045ov8303;
extern T0* ge1045ov8092;
extern T0* ge1045ov7855;
extern T0* ge1045ov8314;
extern T0* ge1045ov7866;
extern T0* ge1045ov8313;
extern T0* ge1045ov7865;
extern T0* ge1045ov8310;
extern T0* ge1045ov8094;
extern T0* ge1045ov7862;
extern T0* ge1045ov8275;
extern T0* ge1045ov8080;
extern T0* ge1045ov7827;
extern T0* ge1045ov8274;
extern T0* ge1045ov8079;
extern T0* ge1045ov7826;
extern T0* ge1045ov8273;
extern T0* ge1045ov8078;
extern T0* ge1045ov7825;
extern T0* ge1045ov8272;
extern T0* ge1045ov8077;
extern T0* ge1045ov7824;
extern T0* ge1045ov8271;
extern T0* ge1045ov7823;
extern T0* ge1045ov8203;
extern T0* ge1045ov8047;
extern T0* ge1045ov7755;
extern T0* ge1045ov8201;
extern T0* ge1045ov8046;
extern T0* ge1045ov7753;
extern T0* ge1045ov8281;
extern T0* ge1045ov8081;
extern T0* ge1045ov7833;
extern T0* ge1045ov8278;
extern T0* ge1045ov7830;
extern T0* ge1045ov8289;
extern T0* ge1045ov8083;
extern T0* ge1045ov7841;
extern T0* ge1045ov8285;
extern T0* ge1045ov8082;
extern T0* ge1045ov7837;
extern T0* ge1045ov8282;
extern T0* ge1045ov7834;
extern T0* ge1045ov8279;
extern T0* ge1045ov7831;
extern T0* ge1045ov8290;
extern T0* ge1045ov7842;
extern T0* ge1045ov8286;
extern T0* ge1045ov7838;
extern T0* ge1045ov8283;
extern T0* ge1045ov7835;
extern T0* ge1045ov8280;
extern T0* ge1045ov7832;
extern T0* ge1045ov8291;
extern T0* ge1045ov7843;
extern T0* ge1045ov8287;
extern T0* ge1045ov7839;
extern T0* ge1045ov8401;
extern T0* ge1045ov8143;
extern T0* ge1045ov7953;
extern T0* ge1045ov8297;
extern T0* ge1045ov8087;
extern T0* ge1045ov7849;
extern T0* ge1045ov8296;
extern T0* ge1045ov7848;
extern T0* ge1045ov8277;
extern T0* ge1045ov7829;
extern T0* ge1045ov8276;
extern T0* ge1045ov7828;
extern T0* ge1045ov8288;
extern T0* ge1045ov7840;
extern T0* ge1045ov8284;
extern T0* ge1045ov7836;
extern T0* ge1045ov8295;
extern T0* ge1045ov8086;
extern T0* ge1045ov7847;
extern T0* ge1045ov8294;
extern T0* ge1045ov8085;
extern T0* ge1045ov7846;
extern T0* ge1045ov8293;
extern T0* ge1045ov8084;
extern T0* ge1045ov7845;
extern T0* ge1045ov8390;
extern T0* ge1045ov8137;
extern T0* ge1045ov7942;
extern T0* ge1045ov8388;
extern T0* ge1045ov8136;
extern T0* ge1045ov7940;
extern T0* ge1045ov8216;
extern T0* ge1045ov8052;
extern T0* ge1045ov7768;
extern T0* ge1045ov8343;
extern T0* ge1045ov8112;
extern T0* ge1045ov7895;
extern T0* ge1045ov8215;
extern T0* ge1045ov7767;
extern T0* ge1045ov8342;
extern T0* ge1045ov7894;
extern T0* ge1045ov8341;
extern T0* ge1045ov7893;
extern T0* ge1045ov8246;
extern T0* ge1045ov8067;
extern T0* ge1045ov7798;
extern T0* ge1045ov8244;
extern T0* ge1045ov8065;
extern T0* ge1045ov7796;
extern T0* ge1045ov8243;
extern T0* ge1045ov7795;
extern T0* ge1045ov8250;
extern T0* ge1045ov8069;
extern T0* ge1045ov7802;
extern T0* ge1045ov8249;
extern T0* ge1045ov7801;
extern T0* ge1045ov8251;
extern T0* ge1045ov8070;
extern T0* ge1045ov7803;
extern T0* ge1045ov8325;
extern T0* ge1045ov8101;
extern T0* ge1045ov7877;
extern T0* ge1045ov8324;
extern T0* ge1045ov7876;
extern T0* ge1045ov8292;
extern T0* ge1045ov7844;
extern T0* ge1045ov8323;
extern T0* ge1045ov7875;
extern T0* ge1045ov8322;
extern T0* ge1045ov7874;
extern T0* ge1045ov8326;
extern T0* ge1045ov8102;
extern T0* ge1045ov7878;
extern T0* ge1045ov8232;
extern T0* ge1045ov8059;
extern T0* ge1045ov7784;
extern T0* ge1045ov8231;
extern T0* ge1045ov7783;
extern T0* ge1045ov8237;
extern T0* ge1045ov7789;
extern T0* ge1045ov8234;
extern T0* ge1045ov8060;
extern T0* ge1045ov7786;
extern T0* ge1045ov8235;
extern T0* ge1045ov7787;
extern T0* ge1045ov8340;
extern T0* ge1045ov7892;
extern T0* ge1045ov8233;
extern T0* ge1045ov7785;
extern T0* ge1045ov8247;
extern T0* ge1045ov7799;
extern T0* ge1045ov8236;
extern T0* ge1045ov8061;
extern T0* ge1045ov7788;
extern T0* ge1045ov8241;
extern T0* ge1045ov8063;
extern T0* ge1045ov7793;
extern T0* ge1045ov8239;
extern T0* ge1045ov7791;
extern T0* ge1045ov8240;
extern T0* ge1045ov7792;
extern T0* ge1045ov8348;
extern T0* ge1045ov8116;
extern T0* ge1045ov7900;
extern T0* ge1045ov8317;
extern T0* ge1045ov8088;
extern T0* ge1045ov7869;
extern T0* ge1045ov8211;
extern T0* ge1045ov8050;
extern T0* ge1045ov7763;
extern T0* ge1045ov8209;
extern T0* ge1045ov7761;
extern T0* ge1045ov8205;
extern T0* ge1045ov8049;
extern T0* ge1045ov7757;
extern T0* ge1045ov8204;
extern T0* ge1045ov8048;
extern T0* ge1045ov7756;
extern T0* ge1045ov8451;
extern T0* ge1045ov8169;
extern T0* ge1045ov8003;
extern T0* ge1045ov8454;
extern T0* ge1045ov8173;
extern T0* ge1045ov8006;
extern T0* ge1045ov8406;
extern T0* ge1045ov8146;
extern T0* ge1045ov7958;
extern T0* ge1045ov8453;
extern T0* ge1045ov8172;
extern T0* ge1045ov8005;
extern T0* ge1045ov8316;
extern T0* ge1045ov8097;
extern T0* ge1045ov7868;
extern T0* ge1045ov8318;
extern T0* ge1045ov7870;
extern T0* ge1035ov7225;
extern T0* ge1035ov7220;
extern T0* ge1035ov7215;
extern T0* ge1035ov7226;
extern T0* ge1035ov7221;
extern T0* ge1035ov7216;
extern T0* ge1045ov8464;
extern T0* ge1045ov8182;
extern T0* ge1045ov8016;
extern T0* ge1045ov8463;
extern T0* ge1045ov8015;
extern T0* ge1045ov8265;
extern T0* ge1045ov8075;
extern T0* ge1045ov7817;
extern T0* ge1045ov8264;
extern T0* ge1045ov7816;
extern T0* ge1045ov8263;
extern T0* ge1045ov8074;
extern T0* ge1045ov7815;
extern T0* ge1045ov8262;
extern T0* ge1045ov7814;
extern T0* ge1045ov8266;
extern T0* ge1045ov8076;
extern T0* ge1045ov7818;
extern T0* ge1045ov8257;
extern T0* ge1045ov8073;
extern T0* ge1045ov7809;
extern T0* ge1045ov8259;
extern T0* ge1045ov7811;
extern T0* ge1045ov8419;
extern T0* ge1045ov8154;
extern T0* ge1045ov7971;
extern T0* ge1045ov8414;
extern T0* ge1045ov8150;
extern T0* ge1045ov7966;
extern T0* ge1045ov8433;
extern T0* ge1045ov8159;
extern T0* ge1045ov7985;
extern T0* ge1045ov8334;
extern T0* ge1045ov8107;
extern T0* ge1045ov7886;
extern T0* ge1045ov8416;
extern T0* ge1045ov8151;
extern T0* ge1045ov7968;
extern T0* ge1045ov8415;
extern T0* ge1045ov7967;
extern T0* ge1045ov8226;
extern T0* ge1045ov8057;
extern T0* ge1045ov7778;
extern T0* ge1045ov8413;
extern T0* ge1045ov7965;
extern T0* ge1045ov8412;
extern T0* ge1045ov7964;
extern T0* ge1045ov8225;
extern T0* ge1045ov8056;
extern T0* ge1045ov7777;
extern T0* ge1045ov8197;
extern T0* ge1045ov8042;
extern T0* ge1045ov7749;
extern T0* ge1045ov8420;
extern T0* ge1045ov7972;
extern T0* ge1045ov8432;
extern T0* ge1045ov7984;
extern T0* ge1045ov8332;
extern T0* ge1045ov8106;
extern T0* ge1045ov7884;
extern T0* ge1045ov8196;
extern T0* ge1045ov7748;
extern T0* ge1045ov8267;
extern T0* ge1045ov7819;
extern T0* ge1045ov8255;
extern T0* ge1045ov7807;
extern T0* ge1045ov8261;
extern T0* ge1045ov7813;
extern T0* ge1045ov8258;
extern T0* ge1045ov7810;
extern T0* ge1045ov8256;
extern T0* ge1045ov7808;
extern T0* ge1046ov16105;
extern T0* ge1046ov16241;
extern T0* ge1046ov16249;
extern T0* ge1045ov8418;
extern T0* ge1045ov8153;
extern T0* ge1045ov7970;
extern T0* ge1045ov8335;
extern T0* ge1045ov7887;
extern T0* ge1045ov8476;
extern T0* ge1045ov8187;
extern T0* ge1045ov8028;
extern T0* ge1045ov8474;
extern T0* ge1045ov8026;
extern T0* ge1045ov8475;
extern T0* ge1045ov8027;
extern T0* ge1045ov8471;
extern T0* ge1045ov8185;
extern T0* ge1045ov8023;
extern T0* ge1045ov8469;
extern T0* ge1045ov8021;
extern T0* ge1045ov8470;
extern T0* ge1045ov8022;
extern T0* ge1045ov8472;
extern T0* ge1045ov8186;
extern T0* ge1045ov8024;
extern T0* ge1045ov8473;
extern T0* ge1045ov8025;
extern T0* ge1045ov8467;
extern T0* ge1045ov8184;
extern T0* ge1045ov8019;
extern T0* ge1045ov8468;
extern T0* ge1045ov8020;
extern T0* ge1045ov8442;
extern T0* ge1045ov8164;
extern T0* ge1045ov7994;
extern T0* ge1045ov8441;
extern T0* ge1045ov7993;
extern T0* ge1045ov8305;
extern T0* ge1045ov7857;
extern T0* ge1045ov8308;
extern T0* ge1045ov8093;
extern T0* ge1045ov7860;
extern T0* ge1045ov8298;
extern T0* ge1045ov8089;
extern T0* ge1045ov7850;
extern T0* ge1045ov8301;
extern T0* ge1045ov8091;
extern T0* ge1045ov7853;
extern T0* ge1045ov8404;
extern T0* ge1045ov8145;
extern T0* ge1045ov7956;
extern T0* ge1045ov8405;
extern T0* ge1045ov7957;
extern T0* ge1045ov8304;
extern T0* ge1045ov7856;
extern T0* ge1045ov8270;
extern T0* ge1045ov7822;
extern T0* ge1045ov8392;
extern T0* ge1045ov8138;
extern T0* ge1045ov7944;
extern T0* ge1045ov8393;
extern T0* ge1045ov8139;
extern T0* ge1045ov7945;
extern T0* ge1045ov8389;
extern T0* ge1045ov7941;
extern T0* ge1045ov8428;
extern T0* ge1045ov8157;
extern T0* ge1045ov7980;
extern T0* ge1045ov8382;
extern T0* ge1045ov8132;
extern T0* ge1045ov7934;
extern T0* ge1045ov8381;
extern T0* ge1045ov8131;
extern T0* ge1045ov7933;
extern T0* ge1045ov8379;
extern T0* ge1045ov8130;
extern T0* ge1045ov7931;
extern T0* ge1045ov8380;
extern T0* ge1045ov7932;
extern T0* ge1045ov8487;
extern T0* ge1045ov8192;
extern T0* ge1045ov8039;
extern T0* ge1045ov8443;
extern T0* ge1045ov8165;
extern T0* ge1045ov7995;
extern T0* ge1045ov8378;
extern T0* ge1045ov8129;
extern T0* ge1045ov7930;
extern T0* ge1045ov8377;
extern T0* ge1045ov8128;
extern T0* ge1045ov7929;
extern T0* ge1045ov8383;
extern T0* ge1045ov8134;
extern T0* ge1045ov7935;
extern T0* ge1045ov8206;
extern T0* ge1045ov7758;
extern T0* ge1045ov8319;
extern T0* ge1045ov8098;
extern T0* ge1045ov7871;
extern T0* ge1046ov15996;
extern T0* ge1046ov16225;
extern T0* ge1046ov16129;
extern T0* ge1046ov16242;
extern T0* ge1046ov16208;
extern T0* ge1046ov16131;
extern T0* ge1046ov16008;
extern T0* ge1046ov16054;
extern T0* ge1046ov16130;
extern T0* ge1046ov16231;
extern T0* ge1046ov16217;
extern T0* ge1046ov16251;
extern T0* ge1046ov16056;
extern T0* ge1046ov15964;
extern T0* ge1046ov16235;
extern T0* ge1046ov16232;
extern T0* ge1046ov16070;
extern T0* ge1046ov16104;
extern T0* ge1046ov16221;
extern T0* ge1046ov16068;
extern T0* ge1046ov16069;
extern T0* ge1046ov16107;
extern T0* ge1045ov8198;
extern T0* ge1045ov8043;
extern T0* ge1045ov7750;
extern T0* ge1045ov8354;
extern T0* ge1045ov8118;
extern T0* ge1045ov7906;
extern T0* ge1045ov8353;
extern T0* ge1045ov7905;
extern T0* ge1045ov8352;
extern T0* ge1045ov7904;
extern T0* ge1045ov8351;
extern T0* ge1045ov7903;
extern T0* ge1045ov8350;
extern T0* ge1045ov7902;
extern T0* ge1045ov8349;
extern T0* ge1045ov8117;
extern T0* ge1045ov7901;
extern T0* ge1046ov16252;
extern T0* ge1045ov8359;
extern T0* ge1045ov8121;
extern T0* ge1045ov7911;
extern T0* ge1045ov8366;
extern T0* ge1045ov8125;
extern T0* ge1045ov7918;
extern T0* ge1045ov8365;
extern T0* ge1045ov7917;
extern T0* ge1045ov8364;
extern T0* ge1045ov8124;
extern T0* ge1045ov7916;
extern T0* ge1045ov8363;
extern T0* ge1045ov7915;
extern T0* ge1045ov8362;
extern T0* ge1045ov8123;
extern T0* ge1045ov7914;
extern T0* ge1045ov8361;
extern T0* ge1045ov7913;
extern T0* ge1045ov8360;
extern T0* ge1045ov8122;
extern T0* ge1045ov7912;
extern T0* ge1045ov8358;
extern T0* ge1045ov7910;
extern T0* ge1045ov8440;
extern T0* ge1045ov8163;
extern T0* ge1045ov7992;
extern T0* ge1046ov16211;
extern T0* ge1045ov8421;
extern T0* ge1045ov8155;
extern T0* ge1045ov7973;
extern T0* ge1045ov8449;
extern T0* ge1045ov8167;
extern T0* ge1045ov8001;
extern T0* ge1045ov8447;
extern T0* ge1045ov8166;
extern T0* ge1045ov7999;
extern T0* ge1045ov8427;
extern T0* ge1045ov8156;
extern T0* ge1045ov7979;
extern T0* ge1045ov8431;
extern T0* ge1045ov8158;
extern T0* ge1045ov7983;
extern T0* ge1045ov8430;
extern T0* ge1045ov7982;
extern T0* ge1045ov8426;
extern T0* ge1045ov7978;
extern T0* ge1045ov8425;
extern T0* ge1045ov7977;
extern T0* ge1045ov8424;
extern T0* ge1045ov7976;
extern T0* ge1045ov8423;
extern T0* ge1045ov7975;
extern T0* ge1045ov8422;
extern T0* ge1045ov7974;
extern T0* ge1045ov8446;
extern T0* ge1045ov7998;
extern T0* ge1046ov16065;
extern T0* ge1046ov16066;
extern T0* ge1046ov16025;
extern T0* ge1046ov16026;
extern T0* ge1046ov16027;
extern T0* ge1046ov16028;
extern T0* ge1046ov16071;
extern T0* ge1046ov16072;
extern T0* ge1046ov16073;
extern T0* ge1046ov16074;
extern T0* ge1045ov8444;
extern T0* ge1045ov7996;
extern T0* ge1045ov8445;
extern T0* ge1045ov7997;
extern T0* ge1045ov8268;
extern T0* ge1045ov7820;
extern T0* ge821ov19162;
extern T0* ge821ov19163;
extern T0* ge821ov19164;
extern T0* ge1045ov8437;
extern T0* ge1045ov8161;
extern T0* ge1045ov7989;
extern T0* ge821ov19160;
extern T0* ge821ov19159;
extern T0* ge1045ov8435;
extern T0* ge1045ov8160;
extern T0* ge1045ov7987;
extern T0* ge1045ov8434;
extern T0* ge1045ov7986;
extern T0* ge821ov19161;
extern T0* ge1045ov8438;
extern T0* ge1045ov7990;
extern T0* ge1045ov8436;
extern T0* ge1045ov7988;
extern T0* ge1045ov8456;
extern T0* ge1045ov8175;
extern T0* ge1045ov8008;
extern T0* ge1045ov8455;
extern T0* ge1045ov8174;
extern T0* ge1045ov8007;
extern T0* ge1046ov15951;
extern T0* ge1046ov15939;
extern T0* ge1046ov16230;
extern T0* ge1046ov15963;
extern T0* ge1046ov16207;
extern T0* ge1045ov8402;
extern T0* ge1045ov7954;
extern T0* ge1045ov8398;
extern T0* ge1045ov8142;
extern T0* ge1045ov7950;
extern T0* ge1045ov8399;
extern T0* ge1045ov7951;
extern T0* ge1045ov8400;
extern T0* ge1045ov7952;
extern T0* ge1045ov8221;
extern T0* ge1045ov8055;
extern T0* ge1045ov7773;
extern T0* ge1045ov8220;
extern T0* ge1045ov7772;
extern T0* ge1045ov8219;
extern T0* ge1045ov8054;
extern T0* ge1045ov7771;
extern T0* ge1045ov8223;
extern T0* ge1045ov7775;
extern T0* ge1045ov8224;
extern T0* ge1045ov7776;
extern T0* ge1045ov8218;
extern T0* ge1045ov8053;
extern T0* ge1045ov7770;
extern T0* ge1045ov8417;
extern T0* ge1045ov8152;
extern T0* ge1045ov7969;
extern T0* ge1046ov16216;
extern T0* ge1045ov8195;
extern T0* ge1045ov8041;
extern T0* ge1045ov7747;
extern T0* ge1045ov8269;
extern T0* ge1045ov7821;
extern T0* ge1045ov8374;
extern T0* ge1045ov8126;
extern T0* ge1045ov7926;
extern T0* ge1045ov8372;
extern T0* ge1045ov7924;
extern T0* ge1045ov8370;
extern T0* ge1045ov7922;
extern T0* ge1045ov8369;
extern T0* ge1045ov7921;
extern T0* ge1045ov8395;
extern T0* ge1045ov8140;
extern T0* ge1045ov7947;
extern T0* ge1045ov8397;
extern T0* ge1045ov8141;
extern T0* ge1045ov7949;
extern T0* ge1045ov8387;
extern T0* ge1045ov8135;
extern T0* ge1045ov7939;
extern T0* ge1045ov8429;
extern T0* ge1045ov7981;
extern T0* ge1045ov8373;
extern T0* ge1045ov7925;
extern T0* ge1045ov8371;
extern T0* ge1045ov7923;
extern T0* ge1045ov8368;
extern T0* ge1045ov7920;
extern T0* ge1045ov8367;
extern T0* ge1045ov7919;
extern T0* ge1045ov8391;
extern T0* ge1045ov7943;
extern T0* ge1045ov8386;
extern T0* ge1045ov7938;
extern T0* ge1045ov8375;
extern T0* ge1045ov8127;
extern T0* ge1045ov7927;
extern T0* ge1045ov8376;
extern T0* ge1045ov7928;
extern T0* ge1045ov8407;
extern T0* ge1045ov7959;
extern T0* ge1045ov8210;
extern T0* ge1045ov7762;
extern T0* ge1045ov8208;
extern T0* ge1045ov7760;
extern T0* ge1045ov8207;
extern T0* ge1045ov7759;
extern T0* ge1045ov8403;
extern T0* ge1045ov8144;
extern T0* ge1045ov7955;
extern T0* ge1045ov8465;
extern T0* ge1045ov8183;
extern T0* ge1045ov8017;
extern T0* ge1045ov8466;
extern T0* ge1045ov8018;
extern T0* ge1045ov8411;
extern T0* ge1045ov8149;
extern T0* ge1045ov7963;
extern T0* ge1045ov8410;
extern T0* ge1045ov8148;
extern T0* ge1045ov7962;
extern T0* ge1045ov8452;
extern T0* ge1045ov8171;
extern T0* ge1045ov8004;
extern T0* ge1045ov8450;
extern T0* ge1045ov8168;
extern T0* ge1045ov8002;
extern T0* ge1046ov15962;
extern T0* ge1046ov15965;
extern T0* ge1046ov16202;
extern T0* ge1046ov16007;
extern T0* ge1045ov8356;
extern T0* ge1045ov8120;
extern T0* ge1045ov7908;
extern T0* ge1045ov8357;
extern T0* ge1045ov7909;
extern T0* ge1045ov8355;
extern T0* ge1045ov8119;
extern T0* ge1045ov7907;
extern T0* ge1046ov16011;
extern T0* ge1045ov8199;
extern T0* ge1045ov8044;
extern T0* ge1045ov7751;
extern T0* ge1045ov8200;
extern T0* ge1045ov8045;
extern T0* ge1045ov7752;
extern T0* ge1045ov8327;
extern T0* ge1045ov8103;
extern T0* ge1045ov7879;
extern T0* ge1045ov8253;
extern T0* ge1045ov8072;
extern T0* ge1045ov7805;
extern T0* ge1045ov8254;
extern T0* ge1045ov7806;
extern T0* ge1045ov8329;
extern T0* ge1045ov8104;
extern T0* ge1045ov7881;
extern T0* ge1045ov8330;
extern T0* ge1045ov7882;
extern T0* ge1045ov8328;
extern T0* ge1045ov7880;
extern T0* ge1045ov8331;
extern T0* ge1045ov8105;
extern T0* ge1045ov7883;
extern T0* ge1045ov8307;
extern T0* ge1045ov7859;
extern T0* ge1045ov8309;
extern T0* ge1045ov7861;
extern T0* ge1045ov8299;
extern T0* ge1045ov7851;
extern T0* ge1045ov8302;
extern T0* ge1045ov7854;
extern T0* ge1045ov8300;
extern T0* ge1045ov8090;
extern T0* ge1045ov7852;
extern T0* ge1045ov8306;
extern T0* ge1045ov7858;
extern T0* ge1045ov8217;
extern T0* ge1045ov7769;
extern T0* ge1045ov8333;
extern T0* ge1045ov7885;
extern T0* ge1045ov8486;
extern T0* ge1045ov8191;
extern T0* ge1045ov8038;
extern T0* ge1045ov8484;
extern T0* ge1045ov8036;
extern T0* ge1045ov8485;
extern T0* ge1045ov8037;
extern T0* ge1045ov8481;
extern T0* ge1045ov8189;
extern T0* ge1045ov8033;
extern T0* ge1045ov8479;
extern T0* ge1045ov8031;
extern T0* ge1045ov8480;
extern T0* ge1045ov8032;
extern T0* ge1045ov8482;
extern T0* ge1045ov8190;
extern T0* ge1045ov8034;
extern T0* ge1045ov8483;
extern T0* ge1045ov8035;
extern T0* ge1045ov8477;
extern T0* ge1045ov8188;
extern T0* ge1045ov8029;
extern T0* ge1045ov8478;
extern T0* ge1045ov8030;
extern T0* ge1247ov21382;
extern T0* ge1247ov21381;
extern T0* ge274ov6163;
extern T0* ge272ov6163;
extern T0* ge259ov6163;
extern T0* ge16ov10145;
extern T0* ge16ov10146;
extern T0* ge16ov10147;
extern T0* ge1044ov7253;
extern T0* ge1044ov7249;
extern T0* ge1044ov7248;
extern T0* ge1044ov7252;
extern T0* ge1044ov7247;
extern T0* ge1044ov7251;
extern T0* ge1044ov7246;
extern T0* ge1044ov7250;
extern T0* ge1044ov7245;
extern T0* ge827ov4064;
extern T0* ge827ov4076;
extern T0* ge831ov16633;
extern T0* ge827ov4137;
extern T0* ge827ov4138;
extern T0* ge827ov4118;
extern T0* ge827ov4134;
extern T0* ge827ov4122;
extern T0* ge827ov4123;
extern T0* ge827ov4124;
extern T0* ge827ov4125;
extern T0* ge827ov4119;
extern T0* ge827ov4126;
extern T0* ge827ov4127;
extern T0* ge827ov4128;
extern T0* ge827ov4129;
extern T0* ge827ov4120;
extern T0* ge827ov4135;
extern T0* ge827ov4130;
extern T0* ge827ov4131;
extern T0* ge827ov4132;
extern T0* ge827ov4121;
extern T0* ge827ov4133;
extern T0* ge827ov4136;
extern T0* ge1316ov31702;
extern T0* ge1316ov31704;
extern T0* ge728ov6249;
extern T0* ge728ov6250;
extern T0* ge827ov4114;
extern T0* ge827ov4113;
extern T0* ge827ov4101;
extern T0* ge827ov4102;
extern T0* ge827ov4103;
extern T0* ge827ov4104;
extern T0* ge827ov4105;
extern T0* ge827ov4106;
extern T0* ge827ov4107;
extern T0* ge827ov4108;
extern T0* ge827ov4109;
extern T0* ge827ov4110;
extern T0* ge827ov4111;
extern T0* ge827ov4112;
extern T0* ge827ov4116;
extern T0* ge827ov4117;
extern T0* ge827ov4097;
extern T0* ge827ov4098;
extern T0* ge827ov4099;
extern T0* ge827ov4100;
extern T0* ge827ov4115;
extern T0* ge853ov17280;
extern T0* ge853ov17279;
extern T0* ge827ov4029;
extern T0* ge827ov4030;
extern T0* ge827ov4028;
extern T0* ge827ov4026;
extern T0* ge827ov4027;
extern T0* ge827ov4034;
extern T0* ge827ov4035;
extern T0* ge827ov4033;
extern T0* ge827ov4031;
extern T0* ge827ov4032;
extern T0* ge827ov4036;
extern T0* ge827ov4037;
extern T0* ge827ov4038;
extern T0* ge872ov17883;
extern T0* ge860ov17430;
extern T0* ge51ov6167;
extern T0* ge37ov6167;
extern T0* ge43ov6167;
extern T0* ge42ov6167;
extern T0* ge41ov6167;
extern T0* ge32ov6167;
extern T0* ge31ov6167;
extern T0* ge48ov6167;
extern T0* ge61ov6167;
extern T0* ge1166ov6167;
extern T0* ge169ov6167;
extern T0* ge168ov6167;
extern T0* ge1160ov6167;
extern T0* ge1176ov6167;
extern T0* ge1173ov6167;
extern T0* ge1172ov6167;
extern T0* ge1168ov6167;
extern T0* ge1175ov6167;
extern T0* ge1167ov6167;
extern T0* ge1179ov6167;
extern T0* ge1163ov6167;
extern T0* ge1174ov6167;
extern T0* ge1178ov6167;
extern T0* ge1170ov6167;
extern T0* ge1161ov6167;
extern T0* ge1169ov6167;
extern T0* ge163ov6167;
extern T0* ge166ov6167;
extern T0* ge173ov6167;
extern T0* ge162ov6167;
extern T0* ge269ov20705;
extern T0* ge256ov5086;
extern T0* geic2;
extern T0* geic3;
extern T0* geic4;
extern void GE_init_const1(void);
extern void GE_init_const2(void);
extern void GE_init_const3(void);
extern void GE_init_const4(void);
extern void GE_init_const5(void);
extern void GE_init_const6(void);
extern void GE_init_const7(void);
extern void GE_init_const8(void);
extern void GE_init_const9(void);
extern void GE_init_const10(void);
extern void GE_init_const11(void);
extern void GE_init_const12(void);
extern void GE_init_const13(void);
extern void GE_init_const14(void);
extern void GE_init_const15(void);
extern void GE_init_const16(void);
extern void GE_init_const17(void);
extern void GE_init_const18(void);
extern void GE_init_const19(void);
extern void GE_init_const20(void);
extern void GE_init_const21(void);
extern void GE_init_const22(void);
extern void GE_init_const(void);

#ifdef __cplusplus
}
#endif


/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_CECIL_H
#define EIF_CECIL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef void (*EIF_PROCEDURE)(EIF_REFERENCE, ...);
#define EIF_PROC EIF_PROCEDURE
typedef EIF_INTEGER_32 (*EIF_INTEGER_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Integer 32 bits */
#define EIF_INTEGER_FUNCTION EIF_INTEGER_32_FUNCTION
typedef EIF_REFERENCE (*EIF_REFERENCE_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Reference */
typedef EIF_POINTER (*EIF_POINTER_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Pointer */
typedef EIF_BOOLEAN (*EIF_BOOLEAN_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Boolean */
typedef EIF_CHARACTER_8 (*EIF_CHARACTER_8_FUNCTION)(EIF_REFERENCE, ...); /* Returns char */
#define EIF_CHARACTER_FUNCTION EIF_CHARACTER_8_FUNCTION
typedef EIF_REAL_64 (*EIF_REAL_64_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Double */
#define EIF_DOUBLE_FUNCTION EIF_REAL_64_FUNCTION
typedef EIF_REAL_32 (*EIF_REAL_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Real */
#define EIF_REAL_FUNCTION EIF_REAL_32_FUNCTION

extern EIF_PROCEDURE eif_procedure(char* rout, EIF_TYPE_ID cid);
#define eif_proc eif_procedure /* Use `eif_procedure' instead */
extern EIF_INTEGER_FUNCTION eif_integer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REFERENCE_FUNCTION eif_reference_function(char* rout, EIF_TYPE_ID cid);
extern EIF_POINTER_FUNCTION eif_pointer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_BOOLEAN_FUNCTION eif_boolean_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REAL_64_FUNCTION eif_real_64_function(char* rout, EIF_TYPE_ID cid);
#define eif_double_function(rout,cid) eif_real_64_function((rout),(cid))
extern EIF_REAL_32_FUNCTION eif_real_32_function(char* rout, EIF_TYPE_ID cid);
#define eif_real_function(rout,cid) eif_real_32_function((rout),(cid))
extern EIF_CHARACTER_8_FUNCTION eif_character_8_function(char* rout, EIF_TYPE_ID cid);
#define eif_character_function(rout,cid) eif_character_8_function((rout),(cid))
extern EIF_OBJECT eif_create(EIF_TYPE_ID cid);
extern EIF_TYPE_ID eif_type_id(char* type_string);
extern EIF_INTEGER eifaddr_offset(EIF_REFERENCE object, char *name, int * const ret);
#define eif_string(s) RTMS(s)
#define makestr(s,c) RTMS_EX((s),(c))
#define eifaddr(object,name,ret) ((void *) ((char *) object + eifaddr_offset (object, name, ret)))
#define eif_field(object,name,type) *(type *)(eifaddr(object,name, NULL)) /* Obsolete. Use "eif_attribute" instead. */
#define eif_attribute(object,name,type,ret) *(type *)(eifaddr(object,name,ret)) /* Returns the attribute of an object. Return status in "ret".*/

/* Miscellaneous useful functions. */

/* Make an Eiffel array from a C array:
 * `eif_array' is the direct reference to the Eiffel array.
 * `c_array' is the C array.
 * `nelts' the number of elements to copy in the eiffel array, it has to
 * be equal to `eif_array.count'.
 * type is an Eiffel type.
 */
#define eif_make_from_c(eif_array, c_array, nelts, type) \
	{ \
		EIF_REFERENCE area = eif_field (eif_array, \
										"area", EIF_REFERENCE); \
		memcpy ((type *) area, c_array, nelts * sizeof (type));\
	}

#define eif_type eiftype /* Dynamic type ID */
extern EIF_TYPE_ID eiftype(EIF_OBJECT object); /* Give dynamic type of EIF_OBJECT. Obsolete, use "eif_type_by_object". */
extern EIF_TYPE_ID eif_type_by_reference (EIF_REFERENCE object);
extern EIF_TYPE_INDEX eif_gen_param_id(EIF_TYPE_INDEX dftype, uint32_t pos);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_PLUG_H
#define EIF_PLUG_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int nstcall;	/* Nested call global variable: signals a nested call and
					 * trigger an invariant check in generated C routines  */

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement Thread support"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_THREADS_H
#define EIF_THREADS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef EIF_CECIL_H
#include "eif_cecil.h"
#endif
#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifdef GE_USE_THREADS
#ifndef GE_THREAD_H
#include "ge_thread.h"
#endif
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifndef GE_USE_THREADS

/*
 * Empty stubs for EiffelThread library so that it may be compiled against a non-multithreaded run-time.
 */

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() NULL

/* THREAD_CONTROL */
#define eif_thr_yield()
#define eif_thr_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj, init_func, set_terminated_func, attr)
#define eif_thr_wait(obj,get_terminated)
#define eif_thr_wait_with_timeout(obj,get_terminated,tms) EIF_TRUE
#define eif_thr_last_thread() NULL
#define eif_thr_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() 0
#define eif_thr_min_priority() 0
#define eif_thr_max_priority() 0

/* MUTEX */
#define eif_thr_mutex_create() NULL
#define eif_thr_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) EIF_TRUE
#define eif_thr_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() NULL
#define eif_thr_cond_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr)
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) 1
#define eif_thr_cond_destroy(a_cond_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(a_count) NULL
#define eif_thr_sem_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) EIF_TRUE
#define eif_thr_sem_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() NULL
#define eif_thr_rwl_rdlock(a_read_write_lock_pointer)
#define eif_thr_rwl_unlock(a_read_write_lock_pointer)
#define eif_thr_rwl_wrlock(a_read_write_lock_pointer)
#define eif_thr_rwl_destroy(a_read_write_lock_pointer)

#else

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() GE_thread_id()

/* THREAD_CONTROL */
#define eif_thr_yield() GE_thread_yield()
#define eif_thr_join_all() GE_thread_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj,init_func,set_terminated_func,attr) GE_thread_create_with_attr((current_obj),(init_func),(set_terminated_func),(EIF_THR_ATTR_TYPE*)(attr))
#define eif_thr_wait(obj,get_terminated) GE_thread_wait((obj),(get_terminated))
#define eif_thr_wait_with_timeout(obj,get_terminated,tms) GE_thread_wait_with_timeout((obj),(get_terminated),(tms))
#define eif_thr_last_thread() GE_last_thread_created()
#define eif_thr_exit() GE_thread_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() GE_thread_default_priority()
#define eif_thr_min_priority() GE_thread_min_priority()
#define eif_thr_max_priority() GE_thread_max_priority()

/* MUTEX */
#define eif_thr_mutex_create() GE_mutex_create()
#define eif_thr_mutex_lock(a_mutex_pointer) GE_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) GE_mutex_try_lock(a_mutex_pointer)
#define eif_thr_mutex_unlock(a_mutex_pointer) GE_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer) GE_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() GE_condition_variable_create()
#define eif_thr_cond_broadcast(a_cond_ptr) GE_condition_variable_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr) GE_condition_variable_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr) GE_condition_variable_wait((a_cond_ptr),(a_mutex_ptr))
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) GE_condition_variable_wait_with_timeout((a_cond_ptr),(a_mutex_ptr),(a_timeout))
#define eif_thr_cond_destroy(a_cond_ptr) GE_condition_variable_destroy(a_cond_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(a_count) GE_semaphore_create(a_count)
#define eif_thr_sem_wait(a_sem_pointer) GE_semaphore_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer) GE_semaphore_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) GE_semaphore_try_wait(a_sem_pointer)
#define eif_thr_sem_destroy(a_sem_pointer) GE_semaphore_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() GE_read_write_lock_create()
#define eif_thr_rwl_rdlock(a_read_write_lock_pointer) GE_read_write_lock_read_lock(a_read_write_lock_pointer)
#define eif_thr_rwl_unlock(a_read_write_lock_pointer) GE_read_write_lock_unlock(a_read_write_lock_pointer)
#define eif_thr_rwl_wrlock(a_read_write_lock_pointer) GE_read_write_lock_write_lock(a_read_write_lock_pointer)
#define eif_thr_rwl_destroy(a_read_write_lock_pointer) GE_read_write_lock_destroy(a_read_write_lock_pointer)

/* WEL */
#ifdef EIF_WINDOWS
#define eif_thr_create_wel_per_thread_data(a_size) GE_thread_create_wel_per_thread_data(a_size)
#endif

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_CONSOLE_H
#define EIF_CONSOLE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER console_def(EIF_INTEGER file);
extern EIF_BOOLEAN console_eof(FILE* fp);
extern EIF_CHARACTER_8 console_separator(FILE* f);
extern void console_ps(FILE* f, char* str, EIF_INTEGER len);
extern void console_pr(FILE* f, EIF_REAL_32 number);
extern void console_pc(FILE* f, EIF_CHARACTER_8 c);
extern void console_pd(FILE* f, EIF_REAL_64 val);
extern void console_pi(FILE* f, EIF_INTEGER number);
extern void console_tnwl(FILE* f);
extern EIF_CHARACTER_8 console_readchar(FILE* f);
extern EIF_REAL_32 console_readreal(FILE* f);
extern EIF_INTEGER console_readint(FILE* f);
extern EIF_REAL_64 console_readdouble(FILE* f);
extern EIF_INTEGER console_readword(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER console_readline(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern void console_next_line(FILE* f);
extern EIF_INTEGER console_readstream(FILE* f, char* s, EIF_INTEGER bound);
extern void console_file_close (FILE* f);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class FILE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_FILE_H
#define EIF_FILE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <time.h>
#include <sys/stat.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Let's define the stat structure for our platforms. */
/* The definition is the same for both ANSI and Unicode versions on Windows. */
#ifdef EIF_WINDOWS
#	ifdef EIF_64_BITS
#		define rt_stat_buf	struct _stat64
#	else
#		define rt_stat_buf	struct _stat64i32
#	endif
#else
#	define rt_stat_buf		struct stat
#endif

/*
 * Create directory `dirname'.
 */
extern void eif_file_mkdir(EIF_FILENAME dirname);

/*
 * Rename file `from' into `to'.
 */
extern void eif_file_rename(EIF_FILENAME from, EIF_FILENAME  to);

/*
 * Link file `from' into `to'.
 */
extern void eif_file_link(EIF_FILENAME from, EIF_FILENAME to);

/*
 * Delete file or directory `name'.
 */
extern void eif_file_unlink(EIF_FILENAME name);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_reopen(EIF_FILENAME name, int how, FILE *old);

/*
 * Close the file.
 */
extern void eif_file_close(FILE *fp);

/*
 * Flush data held in stdio buffer.
 */
extern void eif_file_flush(FILE *fp);

/*
 * Return the associated file descriptor.
 */
extern EIF_INTEGER eif_file_fd(FILE *f);

/*
 * Get a character from `f'.
 */
extern EIF_CHARACTER_8 eif_file_gc(FILE *f);

/*
 * Get a string from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters.
 */
extern EIF_INTEGER eif_file_gs(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Read min (bound, remaining bytes in file) characters into `s' and
 * return the number of characters read.
 */
extern EIF_INTEGER eif_file_gss(FILE *f, char *s, EIF_INTEGER bound);

/*
 * Get a word from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters. Any leading
 * spaces are skipped.
 */
extern EIF_INTEGER eif_file_gw(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Look ahead one character. If EOF, return 0.
 */
extern EIF_CHARACTER_8 eif_file_lh(FILE *f);

/*
 * Size of file `fp'.
 */
extern EIF_INTEGER eif_file_size(FILE *fp);

/*
 * Read upto next input line.
 */
extern void eif_file_tnil(FILE *f);

/*
 * Current position within file.
 */
extern EIF_INTEGER eif_file_tell(FILE *f);

/*
 * Touch file `name' by setting both access and modification time to the
 * current time stamp. This external function exists only because there
 * is no way within UNIX_FILE to get the current time stamp. Otherwise,
 * we could simply call file_utime.
 */
extern void eif_file_touch(EIF_FILENAME name);

/*
 * Modify the modification and/or the access time stored in the file's
 * inode. The 'how' parameter tells which attributes should be set.
 */
extern void eif_file_utime(EIF_FILENAME name, time_t stamp, int how);

/*
 * This is an encapsulation of the stat() system call. The routine either
 * succeeds and returns or fails and raises the appropriate exception.
 */
extern int eif_file_stat(EIF_FILENAME path, rt_stat_buf *buf, int follow);

/*
 * Change permissions of file `name', using an interface like chmod(1).
 * The flag is true if permissions are to be added, 0 to remove them.
 */
extern void eif_file_perm(EIF_FILENAME name, char *who, char *what, int flag);

/*
 * Change permission mode on file `path'.
 */
extern void eif_file_chmod(EIF_FILENAME path, int mode);

/*
 * Change the owner of the file to `uid'.
 */
extern void eif_file_chown(EIF_FILENAME name, int uid);

/*
 * Change the group of the file to `gid'.
 */
extern void eif_file_chgrp(EIF_FILENAME name, int gid);

/*
 * Put new_line onto `f'.
 */
extern void eif_file_tnwl(FILE *f);

/*
 * Append a copy of `other' to `f'.
 */
extern void eif_file_append(FILE *f, FILE *other, EIF_INTEGER l);

/*
 * Write string `str' on `f'.
 */
extern void eif_file_ps(FILE *f, char *str, EIF_INTEGER len);

/*
 * Write character `c' on `f'.
 */
extern void eif_file_pc(FILE *f, char c);

/*
 * Go to absolute position `pos' counted from start.
 */
extern void eif_file_go(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from end.
 */
extern void eif_file_recede(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from current position.
 */
extern void eif_file_move(FILE *f, EIF_INTEGER pos);

/*
 * End of file.
 */
extern EIF_BOOLEAN eif_file_feof(FILE *fp);

/*
 * Test whether file exists or not. If `name' represents a symbolic link,
 * it will check that pointed file does exist.
 */
extern EIF_BOOLEAN eif_file_exists(EIF_FILENAME name);

/*
 * Test whether file exists or not without following the symbolic link
 * if `name' represents one.
 */
extern EIF_BOOLEAN eif_file_path_exists(EIF_FILENAME name);

/*
 * Check whether access permission `op' are possible on file `name' using
 * real UID and real GID. This is probably only useful to setuid or setgid
 * programs.
 */
extern EIF_BOOLEAN eif_file_access(EIF_FILENAME name, EIF_INTEGER op);

/*
 * Check whether the file `path' may be created: we need write permissions
 * in the parent directory and there must not be any file bearing that name
 * with no write permissions...
 */
extern EIF_BOOLEAN eif_file_creatable(EIF_FILENAME path, EIF_INTEGER nbytes);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gi(FILE *f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_gr(FILE *f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gd(FILE *f);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pi(FILE *f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pr(FILE *f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pd(FILE *f, EIF_REAL_64 val);

/*
 * Size of the stat structure. This is used by the Eiffel side to create
 * the area (special object) which will play the role of a stat buffer
 * structure.
 */
extern EIF_INTEGER stat_size(void);

/*
 * Check file permissions using effective UID and effective GID. The
 * current permission mode is held in the st_mode field of the stat()
 * buffer structure `buf'.
 */
extern EIF_BOOLEAN eif_file_eaccess(rt_stat_buf *buf, int op);

/*
 * Perform the field dereferencing from the appropriate stat structure,
 * which Eiffel cannot do directly.
 */
extern EIF_INTEGER eif_file_info(rt_stat_buf *buf, int op);

/*
 * Return the Eiffel string filled in with the name associated with `uid'
 * if found in /etc/passwd. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_owner(int uid);

/*
 * Return the Eiffel string filled in with the name associated with `gid'
 * if found in /etc/group. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_group(int gid);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gib(FILE* f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_grb(FILE* f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gdb(FILE* f);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_binary_reopen(EIF_FILENAME name, int how, FILE* old);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pib(FILE* f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_prb(FILE* f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pdb(FILE* f, EIF_REAL_64 val);

/*
 * Modification time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_date(EIF_FILENAME  name);

/*
 * Access time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_access_date(EIF_FILENAME  name);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXCEPTIONS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_EXCEPT_H
#define EIF_EXCEPT_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#include <errno.h>

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Predefined exception codes.
 */
#define EN_VOID		GE_EX_VOID			/* Feature applied to void reference */
#define EN_MEM		GE_EX_MEM			/* No more memory */
#define EN_PRE		GE_EX_PRE			/* Pre-condition violated */
#define EN_POST		GE_EX_POST			/* Post-condition violated */
#define EN_FLOAT	GE_EX_FLOAT			/* Floating point exception (signal SIGFPE) */
#define EN_CINV		GE_EX_CINV			/* Class invariant violated */
#define EN_CHECK	GE_EX_CHECK			/* Assertion violated */
#define EN_FAIL		GE_EX_FAIL			/* Routine failure */
#define EN_WHEN		GE_EX_WHEN			/* Unmatched inspect value */
#define EN_VAR		GE_EX_VAR			/* Non-decreasing loop variant */
#define EN_LINV		GE_EX_LINV			/* Loop invariant violated */
#define EN_SIG		GE_EX_SIG			/* Operating system signal */
#define EN_BYE		GE_EX_BYE			/* Eiffel run-time panic */
#define EN_RESC		GE_EX_RESC			/* Exception in rescue clause */
#define EN_OMEM		GE_EX_OMEM			/* Out of memory (cannot be ignored) */
#define EN_RES		GE_EX_RES			/* Resumption failed (retry did not succeed) */
#define EN_CDEF		GE_EX_CDEF			/* Create on deferred */
#define EN_EXT		GE_EX_EXT			/* External event */
#define EN_VEXP		GE_EX_VEXP			/* Void assigned to expanded */
#define EN_HDLR		GE_EX_HDLR			/* Exception in signal handler */
#define EN_IO		GE_EX_IO			/* I/O error */
#define EN_SYS		GE_EX_SYS			/* Operating system error */
#define EN_RETR		GE_EX_RETR			/* Retrieval error */
#define EN_PROG		GE_EX_PROG			/* Developer exception */
#define EN_FATAL	GE_EX_FATAL			/* Eiffel run-time fatal error */
#define EN_DOL		GE_EX_DOL			/* $ applied to melted feature */
#define EN_ISE_IO	GE_EX_ISE_IO		/* I/O error raised by the ISE Eiffel runtime */
#define EN_COM		GE_EX_COM			/* COM error raised by EiffelCOM runtime */
#define EN_RT_CHECK	GE_EX_RT_CHECK		/* Runtime check error such as out-of-bound array access */
#define EN_OLD		GE_EX_OLD			/* Old violation */
#define EN_SEL		GE_EX_SEL			/* Serialization failure */
#define EN_DIRTY	GE_EX_DIRTY			/* SCOOP processor dirty exception. */
#define EN_NEX		GE_EX_NEX			/* Number of internal exceptions */

/*
 * Raise an Eiffel exception.
 */
extern void eraise(const char* name, long code);

/*
 * Raise an Eiffel exception of the given code with no associated tag.
 */
extern void xraise(int code);

/*
 * Raise an "Operating system error" exception.
 */
extern void esys(void);

/*
 * As a special case, an I/O error is raised when a system call which is I/O bound fails.
 */
extern void eise_io(const char* tag);

/*
 * Raise a "No more memory" exception.
 */
extern void enomem(void);

/*
 * Raise EiffelCOM exception.
 */
extern void com_eraise(const char* tag, long num);

/*
 * Terminate execution with exit status `code',
 * without triggering an exception.
 */
extern void esdie(int code);

/*
 * Exception tag associated with `code'.
 * This is a duplication from Eiffel classes, but still used for trace printing and in EiffelCom.
 */
extern EIF_REFERENCE eename(long except);

/*
 * Is exception `ex' defined?
 * Used in EiffelCOM.
 */
extern char eedefined(long ex);

/*
 * Enable/diable printing of the exception trace.
 * Per thead information.
 */
extern void eetrace(char b);

/*
 * Is current execution during rescue?
 */
extern EIF_BOOLEAN eif_is_in_rescue(void);

#ifdef EIF_WINDOWS
/*
 * Set default exception handler.
 */
extern void set_windows_exception_filter();
#endif

/*
 * Used in EiffelCOM.
 */
#define echval GE_current_context()->exception_code
#define echtg GE_current_context()->exception_tag

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class REAL"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_REAL_H
#define GE_REAL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <math.h>

#ifndef GE_power
#define GE_power(x,y) pow((x),(y))
#endif
#define GE_ceiling(x) ceil(x)
#define GE_floor(x) floor(x)

extern EIF_NATURAL_32 GE_real_32_to_bits (EIF_REAL_32 v);
extern EIF_NATURAL_64 GE_real_64_to_bits (EIF_REAL_64 v);
extern EIF_REAL_32 GE_real_32_from_bits (EIF_NATURAL_32 v);
extern EIF_REAL_64 GE_real_64_from_bits (EIF_NATURAL_64 v);

#define GE_real_32_is_nan(v) ((v)!=(v) ? EIF_TRUE : ((GE_real_32_to_bits(v) & ~GE_nat32(0x80000000)) > GE_nat32(0x7FF00000)))
#define GE_real_64_is_nan(v) ((v)!=(v) ? EIF_TRUE : ((GE_real_64_to_bits(v) & ~GE_nat64(0x8000000000000000)) > GE_nat64(0x7FF0000000000000)))
#define GE_real_32_is_negative_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0xFF800000))
#define GE_real_64_is_negative_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0xFFF0000000000000))
#define GE_real_32_is_positive_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0x7F800000))
#define GE_real_64_is_positive_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0x7FF0000000000000))
#define GE_real_32_nan GE_real_32_from_bits(GE_nat32(0x7FC00000))
#define GE_real_64_nan GE_real_64_from_bits(GE_nat64(0x7FF8000000000000))
#define GE_real_32_negative_infinity GE_real_32_from_bits(GE_nat32(0xFF800000))
#define GE_real_64_negative_infinity GE_real_64_from_bits(GE_nat64(0xFFF0000000000000))
#define GE_real_32_positive_infinity GE_real_32_from_bits(GE_nat32(0x7F800000))
#define GE_real_64_positive_infinity GE_real_64_from_bits(GE_nat64(0x7FF0000000000000))

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_GLOBALS_H
#define EIF_GLOBALS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif
#ifndef EIF_THREADS_H
#include "eif_threads.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef GE_USE_THREADS
#define EIF_GET_CONTEXT \
	GE_context* eif_globals = GE_current_context();
#else
#define EIF_GET_CONTEXT
#endif

#define GTCX EIF_GET_CONTEXT

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C declarations for the ISE Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_EIFFEL_H
#define EIF_EIFFEL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_STRING_H
#include "ge_string.h"
#endif
#ifndef EIF_GLOBALS_H
#include "eif_globals.h"
#endif
#ifndef EIF_EXCEPT_H
#include "eif_except.h"
#endif

#endif
/*
	description:

		"C functions used to access DLLs"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_DLL_H
#define GE_DLL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

#include <windows.h>

/* DLL declarations */
#define GE_load_dll(name) LoadLibraryA((LPCSTR)(name))

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_MISC_H
#define EIF_MISC_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_DLL_H
#include "ge_dll.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER eif_system(EIF_NATIVE_CHAR* s);
extern void eif_system_asynchronous(EIF_NATIVE_CHAR* cmd);
extern void eif_sleep(EIF_INTEGER_64);

#ifdef EIF_WINDOWS
/* DLL declarations */
#define eif_load_dll(name) GE_load_dll(name)
#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class DIRECTORY"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_DIR_H
#define EIF_DIR_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER eif_dir_open(EIF_FILENAME dirname);
extern EIF_POINTER eif_dir_next(EIF_POINTER dir);
extern EIF_POINTER eif_dir_rewind(EIF_POINTER d, EIF_FILENAME dir_name);
extern void eif_dir_close(EIF_POINTER dir);
extern EIF_BOOLEAN eif_dir_exists(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_readable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_writable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_executable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_deletable(EIF_FILENAME name);
extern EIF_CHARACTER_8 eif_dir_separator(void);
extern EIF_INTEGER eif_dir_current(EIF_FILENAME a_buffer, EIF_INTEGER a_count);
extern EIF_INTEGER eif_chdir(EIF_FILENAME path);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class C_DATE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_TIME_H
#define GE_TIME_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#if defined _XOPEN_UNIX || defined __USE_XOPEN || defined __USE_BSD
#define HAS_GETTIMEOFDAY
#else
#ifndef WIN32
#define HAS_GETTIMEOFDAY
#endif
#endif

#ifdef HAS_GETTIMEOFDAY
/*
	OpenBSD does not support 'ftime' unless -lcompat is specified.
	Use the recommended XSI (X/Open System Interface) extension instead.
*/
#include <sys/time.h>
#include <sys/types.h>
#define GE_ftime(p) gettimeofday((struct timeval*)(p),((void*)0))
#define GE_timebsz sizeof(struct timeval)
#define GE_timebmillitm(p) (((struct timeval*)(p))->tv_usec/1000)
#define GE_timebtime(p) ((struct timeval*)(p))->tv_sec
#else
#include <sys/timeb.h>
extern void ftime(struct timeb *); /* Needed for lcc-win32 */
#define GE_ftime(p) ftime((struct timeb*)(p))
#define GE_timebsz sizeof(struct timeb)
#define GE_timebmillitm(p) ((struct timeb*)(p))->millitm
#define GE_timebtime(p) ((struct timeb*)(p))->time
#endif

#endif
/*
	description:

		"C functions used to implement class COM_FAILURE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_COM_FAILURE_H
#define GE_COM_FAILURE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER GE_ccom_hresult(EIF_POINTER an_exception_code);

extern EIF_INTEGER GE_ccom_hresult_code(EIF_INTEGER an_hresult);

extern EIF_INTEGER GE_ccom_hresult_facility(EIF_INTEGER an_hresult);

/*
 * Get text from error `a_code'. It is up to the caller to free
 * the returned buffer using `GE_ccom_local_free'.
 */
extern EIF_POINTER GE_ccom_error_text(EIF_INTEGER a_code);

/*
 * Number of characters in `ptr'.
 */
extern EIF_INTEGER_32 GE_ccom_strlen(EIF_POINTER ptr);

/*
 * Number of bytes occupied by a TCHAR.
 */
extern EIF_INTEGER_32 GE_ccom_character_size();

/*
 * Free `a_ptr' using LocalFree.
 */
extern void GE_ccom_local_free(EIF_POINTER a_ptr);

#ifdef __cplusplus
}
#endif

#endif
#include <string.h>
#include <stdlib.h>
#include <time.h>
