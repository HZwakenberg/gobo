variables:
  GOBO: '$CI_PROJECT_DIR'

test:
  stage: test
  script:
    - Write-Host "Just to define the 'test' stage name"
  rules:
    - when: never

test_library_windows:
  stage: test
  tags:
    - shared-windows
    - windows
    - windows-1809
  script:
    - '& "$env:GOBO\.gitlab\do_it.bat" "$env:GOBO\bin\install.bat" -v msc'
    - '& "$env:GOBO\.gitlab\do_it.bat" gec --version'
    - cd "$env:GOBO\library"
    # The tests in `$GOBO\library\lexical` are failing in GitLab when using `geant test_ge`.
    - '& "$env:GOBO\.gitlab\do_it.bat" geant test_debug_ge'

test_tool_no_gec_windows:
  stage: test
  tags:
    - shared-windows
    - windows
    - windows-1809
  script:
    - '& "$env:GOBO\.gitlab\do_it.bat" "$env:GOBO\bin\install.bat" -v msc'
    - '& "$env:GOBO\.gitlab\do_it.bat" gec --version'
    - Remove-Item "$env:GOBO\tool\gec\test" -Force -Recurse
    - cd "$env:GOBO\tool"
    - '& "$env:GOBO\.gitlab\do_it.bat" geant test_ge'

test_tool_gec_windows:
  stage: test
  tags:
    - shared-windows
    - windows
    - windows-1809
  script:
    - '& "$env:GOBO\.gitlab\do_it.bat" "$env:GOBO\bin\install.bat" -v msc'
    - '& "$env:GOBO\.gitlab\do_it.bat" gec --version'
    - cd "$env:GOBO\tool\gec"
    - '& "$env:GOBO\.gitlab\do_it.bat" geant test_ge'

test_library_linux:
  stage: test
  tags:
    - linux
  script:
    - cat /etc/*-release
    - arch
    - gcc --version
    - $GOBO/bin/install.sh -v gcc
    - export PATH=$PATH:$GOBO/bin
    - gec --version
    - cd $GOBO/library
    - geant test_ge

test_tool_linux:
  stage: test
  tags:
    - linux
  script:
    - cat /etc/*-release
    - arch
    - gcc --version
    - $GOBO/bin/install.sh -v gcc
    - export PATH=$PATH:$GOBO/bin
    - gec --version
    - cd $GOBO/tool
    - geant test_ge

stages:
  - test
